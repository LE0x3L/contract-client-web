{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        }
      ],
      "name": "GetHouseUserList",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "wallet",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "userID",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "nickname",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "isManager",
              "type": "bool"
            }
          ],
          "internalType": "struct CLHouseApi.strInfoUser[]",
          "name": "arrUsers",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_propIds",
          "type": "uint256[]"
        },
        {
          "internalType": "bool",
          "name": "_support",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "_justification",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "SignerOCBulkVote",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_acceptance",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "_nickname",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "SignerOCInvit",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_walletAddr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "_isManager",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "SignerOCInvitUser",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_houseName",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "_housePrivate",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_houseOpen",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_govRuleMaxUsers",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_whiteListNFT",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_pxyCLF",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "SignerOCNewCLH",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_expirationDuration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_keyPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxNumberOfKeys",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_lockName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "SignerOCNewLock",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_walletAddr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "SignerOCRemoveUser",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "SignerOCRequestToJoin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_houseName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "SignerOCUpCLHName",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_whiteListNFT",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "SignerOCUpCLHWLNFT",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_propId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_support",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "_justification",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_houseAddr",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "SignerOCVote",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_msghash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "SignerOfMsg",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "17": "contracts/APICLH/CLHouseApi.sol",
    "19": "contracts/CLCore/CLTypes.sol",
    "33": "interfaces/ICLHouse.sol"
  },
  "ast": {
    "absolutePath": "contracts/APICLH/CLHouseApi.sol",
    "exportedSymbols": {
      "CLHouseApi": [
        1034
      ],
      "ICLHouse": [
        5393
      ],
      "__CLHOUSE_VERSION__": [
        6215
      ],
      "__CONTRACT_NAME_HASH__": [
        6241
      ],
      "__CONTRACT_VERSION_HASH__": [
        6249
      ],
      "__GOV_COMMITTEE__": [
        6231
      ],
      "__GOV_DICTATORSHIP__": [
        6226
      ],
      "__GOV_SIMPLE_MAJORITY__": [
        6236
      ],
      "__STR_EIP712DOMAIN_HASH__": [
        6257
      ],
      "__STR_OCBULKVOTE_HASH__": [
        6281
      ],
      "__STR_OCDELUSER_HASH__": [
        6297
      ],
      "__STR_OCINVIT_HASH__": [
        6265
      ],
      "__STR_OCNEWCLH_HASH__": [
        6313
      ],
      "__STR_OCNEWLOCK_HASH__": [
        6321
      ],
      "__STR_OCNEWUSER_HASH__": [
        6289
      ],
      "__STR_OCREQUEST_HASH__": [
        6305
      ],
      "__STR_OCUPCLH_NAME_HASH__": [
        6329
      ],
      "__STR_OCUPCLH_WLNFT_HASH__": [
        6337
      ],
      "__STR_OCVOTE_HASH__": [
        6273
      ],
      "__UPGRADEABLE_CLF_VERSION__": [
        6221
      ],
      "__UPGRADEABLE_CLH_VERSION__": [
        6218
      ],
      "eCLC": [
        6361
      ],
      "proposalEvent": [
        6348
      ],
      "proposalType": [
        6353
      ],
      "strDataGovRules": [
        6414
      ],
      "strDataTxAssets": [
        6411
      ],
      "strDataUser": [
        6402
      ],
      "strProposal": [
        6388
      ],
      "strUser": [
        6368
      ],
      "strVote": [
        6395
      ],
      "userEvent": [
        6344
      ]
    },
    "id": 1035,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 240,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:17"
      },
      {
        "absolutePath": "interfaces/ICLHouse.sol",
        "file": "../../interfaces/ICLHouse.sol",
        "id": 241,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1035,
        "sourceUnit": 5394,
        "src": "58:39:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "CLHouseApi",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 242,
          "nodeType": "StructuredDocumentation",
          "src": "99:85:17",
          "text": "@title Some view funtions to interact with a CLHouse\n @author Leonardo Urrego"
        },
        "fullyImplemented": true,
        "id": 1034,
        "linearizedBaseContracts": [
          1034
        ],
        "name": "CLHouseApi",
        "nameLocation": "193:10:17",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 277,
              "nodeType": "Block",
              "src": "559:546:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 253,
                            "name": "_signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 247,
                            "src": "578:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "578:17:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "3635",
                          "id": 255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "599:2:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_65_by_1",
                            "typeString": "int_const 65"
                          },
                          "value": "65"
                        },
                        "src": "578:23:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "426164207369676e6174757265206c656e677468",
                        "id": 257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "603:22:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7c3fd8eec0749b4da1f3ab8e5daf9a54adea3df29c3825446a7ad02652a8d420",
                          "typeString": "literal_string \"Bad signature length\""
                        },
                        "value": "Bad signature length"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7c3fd8eec0749b4da1f3ab8e5daf9a54adea3df29c3825446a7ad02652a8d420",
                          "typeString": "literal_string \"Bad signature length\""
                        }
                      ],
                      "id": 252,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "569:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "569:58:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 259,
                  "nodeType": "ExpressionStatement",
                  "src": "569:58:17"
                },
                {
                  "assignments": [
                    261
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 261,
                      "mutability": "mutable",
                      "name": "signR",
                      "nameLocation": "646:5:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 277,
                      "src": "638:13:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 260,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "638:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 262,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "638:13:17"
                },
                {
                  "assignments": [
                    264
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 264,
                      "mutability": "mutable",
                      "name": "signS",
                      "nameLocation": "669:5:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 277,
                      "src": "661:13:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 263,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "661:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 265,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "661:13:17"
                },
                {
                  "assignments": [
                    267
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 267,
                      "mutability": "mutable",
                      "name": "signV",
                      "nameLocation": "690:5:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 277,
                      "src": "684:11:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 266,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "684:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 268,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "684:11:17"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "715:324:17",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "784:39:17",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "_signature",
                                  "nodeType": "YulIdentifier",
                                  "src": "805:10:17"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "817:2:17",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "800:3:17"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "800:21:17"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "793:5:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "793:30:17"
                        },
                        "variableNames": [
                          {
                            "name": "signR",
                            "nodeType": "YulIdentifier",
                            "src": "784:5:17"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "867:39:17",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "_signature",
                                  "nodeType": "YulIdentifier",
                                  "src": "888:10:17"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "900:2:17",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "883:3:17"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "883:21:17"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "876:5:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "876:30:17"
                        },
                        "variableNames": [
                          {
                            "name": "signS",
                            "nodeType": "YulIdentifier",
                            "src": "867:5:17"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "979:50:17",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "994:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "_signature",
                                      "nodeType": "YulIdentifier",
                                      "src": "1009:10:17"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1021:2:17",
                                      "type": "",
                                      "value": "96"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1004:3:17"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1004:21:17"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "997:5:17"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "997:30:17"
                            }
                          ],
                          "functionName": {
                            "name": "byte",
                            "nodeType": "YulIdentifier",
                            "src": "988:4:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "988:41:17"
                        },
                        "variableNames": [
                          {
                            "name": "signV",
                            "nodeType": "YulIdentifier",
                            "src": "979:5:17"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 247,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1009:10:17",
                      "valueSize": 1
                    },
                    {
                      "declaration": 247,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "805:10:17",
                      "valueSize": 1
                    },
                    {
                      "declaration": 247,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "888:10:17",
                      "valueSize": 1
                    },
                    {
                      "declaration": 261,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "784:5:17",
                      "valueSize": 1
                    },
                    {
                      "declaration": 264,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "867:5:17",
                      "valueSize": 1
                    },
                    {
                      "declaration": 267,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "979:5:17",
                      "valueSize": 1
                    }
                  ],
                  "id": 269,
                  "nodeType": "InlineAssembly",
                  "src": "706:333:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 271,
                        "name": "_msghash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 245,
                        "src": "1067:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 272,
                        "name": "signV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 267,
                        "src": "1077:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 273,
                        "name": "signR",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 261,
                        "src": "1084:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 274,
                        "name": "signS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 264,
                        "src": "1091:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 270,
                      "name": "ecrecover",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -6,
                      "src": "1056:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                      }
                    },
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1056:42:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 251,
                  "id": 276,
                  "nodeType": "Return",
                  "src": "1049:49:17"
                }
              ]
            },
            "documentation": {
              "id": 243,
              "nodeType": "StructuredDocumentation",
              "src": "211:197:17",
              "text": "@notice A funtion to verify the signer of a menssage\n @param _msghash Hash of the message\n @param _signature Signature of the message\n @return Signer address of the message"
            },
            "functionSelector": "622eca77",
            "id": 278,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SignerOfMsg",
            "nameLocation": "422:11:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 245,
                  "mutability": "mutable",
                  "name": "_msghash",
                  "nameLocation": "452:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 278,
                  "src": "443:17:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 244,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "443:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 247,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "483:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 278,
                  "src": "470:23:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 246,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "470:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "433:66:17"
            },
            "returnParameters": {
              "id": 251,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 250,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 278,
                  "src": "545:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 249,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "545:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "543:11:17"
            },
            "scope": 1034,
            "src": "413:692:17",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "canonicalName": "CLHouseApi.strInfoUser",
            "id": 287,
            "members": [
              {
                "constant": false,
                "id": 280,
                "mutability": "mutable",
                "name": "wallet",
                "nameLocation": "1149:6:17",
                "nodeType": "VariableDeclaration",
                "scope": 287,
                "src": "1141:14:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 279,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1141:7:17",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 282,
                "mutability": "mutable",
                "name": "userID",
                "nameLocation": "1173:6:17",
                "nodeType": "VariableDeclaration",
                "scope": 287,
                "src": "1165:14:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 281,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1165:7:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 284,
                "mutability": "mutable",
                "name": "nickname",
                "nameLocation": "1196:8:17",
                "nodeType": "VariableDeclaration",
                "scope": 287,
                "src": "1189:15:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 283,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1189:6:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 286,
                "mutability": "mutable",
                "name": "isManager",
                "nameLocation": "1219:9:17",
                "nodeType": "VariableDeclaration",
                "scope": 287,
                "src": "1214:14:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 285,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1214:4:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "strInfoUser",
            "nameLocation": "1119:11:17",
            "nodeType": "StructDefinition",
            "scope": 1034,
            "src": "1112:123:17",
            "visibility": "public"
          },
          {
            "body": {
              "id": 384,
              "nodeType": "Block",
              "src": "1542:695:17",
              "statements": [
                {
                  "assignments": [
                    299
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 299,
                      "mutability": "mutable",
                      "name": "daoCLH",
                      "nameLocation": "1561:6:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 384,
                      "src": "1552:15:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICLHouse_$5393",
                        "typeString": "contract ICLHouse"
                      },
                      "typeName": {
                        "id": 298,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 297,
                          "name": "ICLHouse",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 5393,
                          "src": "1552:8:17"
                        },
                        "referencedDeclaration": 5393,
                        "src": "1552:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLHouse_$5393",
                          "typeString": "contract ICLHouse"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 303,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 301,
                        "name": "_houseAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 290,
                        "src": "1580:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 300,
                      "name": "ICLHouse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5393,
                      "src": "1570:8:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ICLHouse_$5393_$",
                        "typeString": "type(contract ICLHouse)"
                      }
                    },
                    "id": 302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1570:22:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICLHouse_$5393",
                      "typeString": "contract ICLHouse"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1552:40:17"
                },
                {
                  "assignments": [
                    305
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 305,
                      "mutability": "mutable",
                      "name": "numUsers",
                      "nameLocation": "1611:8:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 384,
                      "src": "1603:16:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 304,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1603:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 309,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 306,
                        "name": "daoCLH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 299,
                        "src": "1622:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLHouse_$5393",
                          "typeString": "contract ICLHouse"
                        }
                      },
                      "id": 307,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "numUsers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5244,
                      "src": "1622:15:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1622:18:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1603:37:17"
                },
                {
                  "assignments": [
                    311
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 311,
                      "mutability": "mutable",
                      "name": "arrUsersLength",
                      "nameLocation": "1658:14:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 384,
                      "src": "1650:22:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 310,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1650:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 315,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 312,
                        "name": "daoCLH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 299,
                        "src": "1675:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLHouse_$5393",
                          "typeString": "contract ICLHouse"
                        }
                      },
                      "id": 313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "GetArrUsersLength",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5309,
                      "src": "1675:24:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1675:26:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1650:51:17"
                },
                {
                  "expression": {
                    "id": 323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 316,
                      "name": "arrUsers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 295,
                      "src": "1711:8:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_strInfoUser_$287_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct CLHouseApi.strInfoUser memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 321,
                          "name": "numUsers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 305,
                          "src": "1742:8:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1722:17:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_strInfoUser_$287_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (struct CLHouseApi.strInfoUser memory[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 318,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 317,
                              "name": "strInfoUser",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 287,
                              "src": "1726:11:17"
                            },
                            "referencedDeclaration": 287,
                            "src": "1726:11:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strInfoUser_$287_storage_ptr",
                              "typeString": "struct CLHouseApi.strInfoUser"
                            }
                          },
                          "id": 319,
                          "nodeType": "ArrayTypeName",
                          "src": "1726:13:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_strInfoUser_$287_storage_$dyn_storage_ptr",
                            "typeString": "struct CLHouseApi.strInfoUser[]"
                          }
                        }
                      },
                      "id": 322,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1722:30:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_strInfoUser_$287_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct CLHouseApi.strInfoUser memory[] memory"
                      }
                    },
                    "src": "1711:41:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_strInfoUser_$287_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct CLHouseApi.strInfoUser memory[] memory"
                    }
                  },
                  "id": 324,
                  "nodeType": "ExpressionStatement",
                  "src": "1711:41:17"
                },
                {
                  "assignments": [
                    326
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 326,
                      "mutability": "mutable",
                      "name": "index",
                      "nameLocation": "1771:5:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 384,
                      "src": "1763:13:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 325,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1763:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 328,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1779:1:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1763:17:17"
                },
                {
                  "body": {
                    "id": 382,
                    "nodeType": "Block",
                    "src": "1846:385:17",
                    "statements": [
                      {
                        "assignments": [
                          341
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 341,
                            "mutability": "mutable",
                            "name": "houseUser",
                            "nameLocation": "1879:9:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 382,
                            "src": "1860:28:17",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strInfoUser_$287_memory_ptr",
                              "typeString": "struct CLHouseApi.strInfoUser"
                            },
                            "typeName": {
                              "id": 340,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 339,
                                "name": "strInfoUser",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 287,
                                "src": "1860:11:17"
                              },
                              "referencedDeclaration": 287,
                              "src": "1860:11:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_strInfoUser_$287_storage_ptr",
                                "typeString": "struct CLHouseApi.strInfoUser"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 342,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1860:28:17"
                      },
                      {
                        "expression": {
                          "id": 350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 343,
                              "name": "houseUser",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 341,
                              "src": "1903:9:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_strInfoUser_$287_memory_ptr",
                                "typeString": "struct CLHouseApi.strInfoUser memory"
                              }
                            },
                            "id": 345,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "wallet",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 280,
                            "src": "1903:16:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 348,
                                "name": "uid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 330,
                                "src": "1939:3:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 346,
                                "name": "daoCLH",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 299,
                                "src": "1922:6:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ICLHouse_$5393",
                                  "typeString": "contract ICLHouse"
                                }
                              },
                              "id": 347,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "arrUsers",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5251,
                              "src": "1922:15:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view external returns (address)"
                              }
                            },
                            "id": 349,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1922:22:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1903:41:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 351,
                        "nodeType": "ExpressionStatement",
                        "src": "1903:41:17"
                      },
                      {
                        "expression": {
                          "id": 365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "expression": {
                                  "id": 352,
                                  "name": "houseUser",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 341,
                                  "src": "1963:9:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strInfoUser_$287_memory_ptr",
                                    "typeString": "struct CLHouseApi.strInfoUser memory"
                                  }
                                },
                                "id": 354,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "userID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 282,
                                "src": "1963:16:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 355,
                                  "name": "houseUser",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 341,
                                  "src": "1997:9:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strInfoUser_$287_memory_ptr",
                                    "typeString": "struct CLHouseApi.strInfoUser memory"
                                  }
                                },
                                "id": 356,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "nickname",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 284,
                                "src": "1997:18:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "expression": {
                                  "id": 357,
                                  "name": "houseUser",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 341,
                                  "src": "2033:9:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strInfoUser_$287_memory_ptr",
                                    "typeString": "struct CLHouseApi.strInfoUser memory"
                                  }
                                },
                                "id": 358,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "isManager",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 286,
                                "src": "2033:19:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 359,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "1959:95:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_string_memory_ptr_$_t_bool_$",
                              "typeString": "tuple(uint256,string memory,bool)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 362,
                                  "name": "houseUser",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 341,
                                  "src": "2074:9:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strInfoUser_$287_memory_ptr",
                                    "typeString": "struct CLHouseApi.strInfoUser memory"
                                  }
                                },
                                "id": 363,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "wallet",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 280,
                                "src": "2074:16:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 360,
                                "name": "daoCLH",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 299,
                                "src": "2057:6:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ICLHouse_$5393",
                                  "typeString": "contract ICLHouse"
                                }
                              },
                              "id": 361,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mapUsers",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5262,
                              "src": "2057:15:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$_t_string_memory_ptr_$_t_bool_$",
                                "typeString": "function (address) view external returns (uint256,string memory,bool)"
                              }
                            },
                            "id": 364,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2057:35:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_string_memory_ptr_$_t_bool_$",
                              "typeString": "tuple(uint256,string memory,bool)"
                            }
                          },
                          "src": "1959:133:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 366,
                        "nodeType": "ExpressionStatement",
                        "src": "1959:133:17"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "30",
                            "id": 367,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2111:1:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "id": 368,
                              "name": "houseUser",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 341,
                              "src": "2116:9:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_strInfoUser_$287_memory_ptr",
                                "typeString": "struct CLHouseApi.strInfoUser memory"
                              }
                            },
                            "id": 369,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "userID",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 282,
                            "src": "2116:16:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2111:21:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 381,
                        "nodeType": "IfStatement",
                        "src": "2107:114:17",
                        "trueBody": {
                          "id": 380,
                          "nodeType": "Block",
                          "src": "2134:87:17",
                          "statements": [
                            {
                              "expression": {
                                "id": 375,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 371,
                                    "name": "arrUsers",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 295,
                                    "src": "2152:8:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_strInfoUser_$287_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct CLHouseApi.strInfoUser memory[] memory"
                                    }
                                  },
                                  "id": 373,
                                  "indexExpression": {
                                    "id": 372,
                                    "name": "index",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 326,
                                    "src": "2162:5:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "2152:17:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strInfoUser_$287_memory_ptr",
                                    "typeString": "struct CLHouseApi.strInfoUser memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 374,
                                  "name": "houseUser",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 341,
                                  "src": "2172:9:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_strInfoUser_$287_memory_ptr",
                                    "typeString": "struct CLHouseApi.strInfoUser memory"
                                  }
                                },
                                "src": "2152:29:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_strInfoUser_$287_memory_ptr",
                                  "typeString": "struct CLHouseApi.strInfoUser memory"
                                }
                              },
                              "id": 376,
                              "nodeType": "ExpressionStatement",
                              "src": "2152:29:17"
                            },
                            {
                              "expression": {
                                "id": 378,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "2199:7:17",
                                "subExpression": {
                                  "id": 377,
                                  "name": "index",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 326,
                                  "src": "2199:5:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 379,
                              "nodeType": "ExpressionStatement",
                              "src": "2199:7:17"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 333,
                      "name": "uid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 330,
                      "src": "1815:3:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 334,
                      "name": "arrUsersLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 311,
                      "src": "1821:14:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1815:20:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 383,
                  "initializationExpression": {
                    "assignments": [
                      330
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 330,
                        "mutability": "mutable",
                        "name": "uid",
                        "nameLocation": "1805:3:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 383,
                        "src": "1797:11:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 329,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1797:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 332,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 331,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1811:1:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1797:15:17"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 337,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1838:5:17",
                      "subExpression": {
                        "id": 336,
                        "name": "uid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 330,
                        "src": "1838:3:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 338,
                    "nodeType": "ExpressionStatement",
                    "src": "1838:5:17"
                  },
                  "nodeType": "ForStatement",
                  "src": "1792:439:17"
                }
              ]
            },
            "documentation": {
              "id": 288,
              "nodeType": "StructuredDocumentation",
              "src": "1241:133:17",
              "text": "@notice The list of all users address\n @param _houseAddr address of the CLH\n @return arrUsers array of user address"
            },
            "functionSelector": "b698be8d",
            "id": 385,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetHouseUserList",
            "nameLocation": "1388:16:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 291,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 290,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "1422:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 385,
                  "src": "1414:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 289,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1414:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1404:34:17"
            },
            "returnParameters": {
              "id": 296,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 295,
                  "mutability": "mutable",
                  "name": "arrUsers",
                  "nameLocation": "1519:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 385,
                  "src": "1498:29:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_strInfoUser_$287_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct CLHouseApi.strInfoUser[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 293,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 292,
                        "name": "strInfoUser",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 287,
                        "src": "1498:11:17"
                      },
                      "referencedDeclaration": 287,
                      "src": "1498:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_strInfoUser_$287_storage_ptr",
                        "typeString": "struct CLHouseApi.strInfoUser"
                      }
                    },
                    "id": 294,
                    "nodeType": "ArrayTypeName",
                    "src": "1498:13:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_strInfoUser_$287_storage_$dyn_storage_ptr",
                      "typeString": "struct CLHouseApi.strInfoUser[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1484:53:17"
            },
            "scope": 1034,
            "src": "1379:858:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 445,
              "nodeType": "Block",
              "src": "2758:652:17",
              "statements": [
                {
                  "assignments": [
                    400
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 400,
                      "mutability": "mutable",
                      "name": "hashEIP712Domain",
                      "nameLocation": "2776:16:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 445,
                      "src": "2768:24:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 399,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2768:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 412,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 404,
                            "name": "__STR_EIP712DOMAIN_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6257,
                            "src": "2846:25:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 405,
                            "name": "__CONTRACT_NAME_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6241,
                            "src": "2889:22:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 406,
                            "name": "__CONTRACT_VERSION_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6249,
                            "src": "2929:25:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 407,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "2972:5:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 408,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "2972:13:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 409,
                            "name": "_houseAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 392,
                            "src": "3003:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 402,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2818:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "2818:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2818:209:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 401,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "2795:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2795:242:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2768:269:17"
                },
                {
                  "assignments": [
                    414
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 414,
                      "mutability": "mutable",
                      "name": "hashMsg",
                      "nameLocation": "3056:7:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 445,
                      "src": "3048:15:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 413,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3048:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 428,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 418,
                            "name": "__STR_OCINVIT_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6265,
                            "src": "3117:20:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 419,
                            "name": "_acceptance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 388,
                            "src": "3155:11:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 423,
                                    "name": "_nickname",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 390,
                                    "src": "3213:9:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 421,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "3195:3:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 422,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "3195:16:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 424,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3195:29:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 420,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "3184:9:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 425,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3184:42:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 416,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3089:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "3089:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3089:151:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 415,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "3066:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3066:184:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3048:202:17"
                },
                {
                  "assignments": [
                    430
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 430,
                      "mutability": "mutable",
                      "name": "singhash",
                      "nameLocation": "3269:8:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 445,
                      "src": "3261:16:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 429,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3261:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 439,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 434,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3309:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 435,
                            "name": "hashEIP712Domain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 400,
                            "src": "3321:16:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 436,
                            "name": "hashMsg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 414,
                            "src": "3339:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 432,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3291:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "3291:16:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3291:57:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 431,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "3280:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3280:70:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3261:89:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 441,
                        "name": "singhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 430,
                        "src": "3381:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 442,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 394,
                        "src": "3391:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 440,
                      "name": "SignerOfMsg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 278,
                      "src": "3368:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3368:35:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 398,
                  "id": 444,
                  "nodeType": "Return",
                  "src": "3361:42:17"
                }
              ]
            },
            "documentation": {
              "id": 386,
              "nodeType": "StructuredDocumentation",
              "src": "2244:306:17",
              "text": "@notice Retrieve the signer from Offchain Invitation signature\n @param _acceptance True for accept the invitation\n @param _nickname A nickname for the user\n @param _houseAddr address of the CLH\n @param _signature EIP712 Signature\n @return Wallet address of the signer"
            },
            "functionSelector": "2ee9c163",
            "id": 446,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SignerOCInvit",
            "nameLocation": "2564:13:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 395,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 388,
                  "mutability": "mutable",
                  "name": "_acceptance",
                  "nameLocation": "2592:11:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 446,
                  "src": "2587:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 387,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2587:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 390,
                  "mutability": "mutable",
                  "name": "_nickname",
                  "nameLocation": "2627:9:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 446,
                  "src": "2613:23:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 389,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2613:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 392,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "2654:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 446,
                  "src": "2646:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 391,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2646:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 394,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "2687:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 446,
                  "src": "2674:23:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 393,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2674:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2577:126:17"
            },
            "returnParameters": {
              "id": 398,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 397,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 446,
                  "src": "2744:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 396,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2744:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2742:11:17"
            },
            "scope": 1034,
            "src": "2555:855:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 509,
              "nodeType": "Block",
              "src": "4011:678:17",
              "statements": [
                {
                  "assignments": [
                    463
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 463,
                      "mutability": "mutable",
                      "name": "hashEIP712Domain",
                      "nameLocation": "4029:16:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 509,
                      "src": "4021:24:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 462,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4021:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 475,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 467,
                            "name": "__STR_EIP712DOMAIN_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6257,
                            "src": "4099:25:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 468,
                            "name": "__CONTRACT_NAME_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6241,
                            "src": "4142:22:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 469,
                            "name": "__CONTRACT_VERSION_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6249,
                            "src": "4182:25:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 470,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "4225:5:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 471,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "4225:13:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 472,
                            "name": "_houseAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 455,
                            "src": "4256:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 465,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "4071:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "4071:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4071:209:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 464,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "4048:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4048:242:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4021:269:17"
                },
                {
                  "assignments": [
                    477
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 477,
                      "mutability": "mutable",
                      "name": "hashMsg",
                      "nameLocation": "4309:7:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 509,
                      "src": "4301:15:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 476,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4301:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 492,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 481,
                            "name": "__STR_OCVOTE_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6273,
                            "src": "4370:19:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 482,
                            "name": "_propId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 449,
                            "src": "4407:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 483,
                            "name": "_support",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 451,
                            "src": "4432:8:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 487,
                                    "name": "_justification",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 453,
                                    "src": "4487:14:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 485,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "4469:3:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 486,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "4469:16:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 488,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4469:34:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 484,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "4458:9:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 489,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4458:47:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 479,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "4342:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "4342:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4342:177:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 478,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "4319:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4319:210:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4301:228:17"
                },
                {
                  "assignments": [
                    494
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 494,
                      "mutability": "mutable",
                      "name": "singhash",
                      "nameLocation": "4548:8:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 509,
                      "src": "4540:16:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 493,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4540:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 503,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 498,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4588:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 499,
                            "name": "hashEIP712Domain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 463,
                            "src": "4600:16:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 500,
                            "name": "hashMsg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 477,
                            "src": "4618:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 496,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "4570:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "4570:16:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 501,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4570:57:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 495,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "4559:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4559:70:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4540:89:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 505,
                        "name": "singhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 494,
                        "src": "4660:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 506,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 457,
                        "src": "4670:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 504,
                      "name": "SignerOfMsg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 278,
                      "src": "4647:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4647:35:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 461,
                  "id": 508,
                  "nodeType": "Return",
                  "src": "4640:42:17"
                }
              ]
            },
            "documentation": {
              "id": 447,
              "nodeType": "StructuredDocumentation",
              "src": "3417:363:17",
              "text": "@notice Retrieve the signer from Offchain Vote signature\n @param _propId ID of the proposal, based on `arrProposals`\n @param _support True for accept, false to reject\n @param _justification About your vote\n @param _houseAddr address of the CLH\n @param _signature EIP712 Signature\n @return Wallet address of the signer"
            },
            "functionSelector": "89ab062a",
            "id": 510,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SignerOCVote",
            "nameLocation": "3794:12:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 458,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 449,
                  "mutability": "mutable",
                  "name": "_propId",
                  "nameLocation": "3821:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 510,
                  "src": "3816:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 448,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3816:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 451,
                  "mutability": "mutable",
                  "name": "_support",
                  "nameLocation": "3843:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 510,
                  "src": "3838:13:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 450,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3838:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 453,
                  "mutability": "mutable",
                  "name": "_justification",
                  "nameLocation": "3875:14:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 510,
                  "src": "3861:28:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 452,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3861:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 455,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "3907:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 510,
                  "src": "3899:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 454,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3899:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 457,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "3940:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 510,
                  "src": "3927:23:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 456,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3927:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3806:150:17"
            },
            "returnParameters": {
              "id": 461,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 460,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 510,
                  "src": "3997:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 459,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3997:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3995:11:17"
            },
            "scope": 1034,
            "src": "3785:904:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 579,
              "nodeType": "Block",
              "src": "5328:716:17",
              "statements": [
                {
                  "assignments": [
                    528
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 528,
                      "mutability": "mutable",
                      "name": "hashEIP712Domain",
                      "nameLocation": "5346:16:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 579,
                      "src": "5338:24:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 527,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5338:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 540,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 532,
                            "name": "__STR_EIP712DOMAIN_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6257,
                            "src": "5416:25:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 533,
                            "name": "__CONTRACT_NAME_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6241,
                            "src": "5459:22:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 534,
                            "name": "__CONTRACT_VERSION_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6249,
                            "src": "5499:25:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 535,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "5542:5:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 536,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "5542:13:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 537,
                            "name": "_houseAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 520,
                            "src": "5573:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 530,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5388:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "5388:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5388:209:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 529,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "5365:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5365:242:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5338:269:17"
                },
                {
                  "assignments": [
                    542
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 542,
                      "mutability": "mutable",
                      "name": "hashMsg",
                      "nameLocation": "5626:7:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 579,
                      "src": "5618:15:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 541,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5618:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 562,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 546,
                            "name": "__STR_OCBULKVOTE_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6281,
                            "src": "5687:23:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 550,
                                    "name": "_propIds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 514,
                                    "src": "5757:8:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 548,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "5739:3:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 549,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "5739:16:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 551,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5739:28:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 547,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "5728:9:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 552,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5728:41:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 553,
                            "name": "_support",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 516,
                            "src": "5787:8:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 557,
                                    "name": "_justification",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 518,
                                    "src": "5842:14:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 555,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "5824:3:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 556,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "5824:16:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 558,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5824:34:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 554,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "5813:9:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 559,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5813:47:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 544,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5659:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 545,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "5659:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5659:215:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 543,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "5636:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5636:248:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5618:266:17"
                },
                {
                  "assignments": [
                    564
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 564,
                      "mutability": "mutable",
                      "name": "singhash",
                      "nameLocation": "5903:8:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 579,
                      "src": "5895:16:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 563,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5895:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 573,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 568,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5943:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 569,
                            "name": "hashEIP712Domain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 528,
                            "src": "5955:16:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 570,
                            "name": "hashMsg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 542,
                            "src": "5973:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 566,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5925:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "5925:16:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5925:57:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 565,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "5914:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5914:70:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5895:89:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 575,
                        "name": "singhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 564,
                        "src": "6015:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 576,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 522,
                        "src": "6025:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 574,
                      "name": "SignerOfMsg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 278,
                      "src": "6002:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6002:35:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 526,
                  "id": 578,
                  "nodeType": "Return",
                  "src": "5995:42:17"
                }
              ]
            },
            "documentation": {
              "id": 511,
              "nodeType": "StructuredDocumentation",
              "src": "4696:384:17",
              "text": "@notice Retrieve the signer from Offchain BulkVote signature\n @param _propIds Array with ID of the proposal to votes\n @param _support is the Vote (True or False) for all proposals\n @param _justification Description of the vote\n @param _houseAddr address of the CLH\n @param _signature EIP712 Signature\n @return Wallet address of the signer"
            },
            "functionSelector": "f0b00c9f",
            "id": 580,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SignerOCBulkVote",
            "nameLocation": "5094:16:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 523,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 514,
                  "mutability": "mutable",
                  "name": "_propIds",
                  "nameLocation": "5137:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 580,
                  "src": "5120:25:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 512,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5120:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 513,
                    "nodeType": "ArrayTypeName",
                    "src": "5120:9:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 516,
                  "mutability": "mutable",
                  "name": "_support",
                  "nameLocation": "5160:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 580,
                  "src": "5155:13:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 515,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5155:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 518,
                  "mutability": "mutable",
                  "name": "_justification",
                  "nameLocation": "5192:14:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 580,
                  "src": "5178:28:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 517,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5178:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 520,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "5224:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 580,
                  "src": "5216:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 519,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5216:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 522,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "5257:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 580,
                  "src": "5244:23:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 521,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5244:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5110:163:17"
            },
            "returnParameters": {
              "id": 526,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 525,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 580,
                  "src": "5314:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 524,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5314:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5312:11:17"
            },
            "scope": 1034,
            "src": "5085:959:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 654,
              "nodeType": "Block",
              "src": "6778:769:17",
              "statements": [
                {
                  "assignments": [
                    601
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 601,
                      "mutability": "mutable",
                      "name": "hashEIP712Domain",
                      "nameLocation": "6796:16:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 654,
                      "src": "6788:24:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 600,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6788:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 613,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 605,
                            "name": "__STR_EIP712DOMAIN_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6257,
                            "src": "6866:25:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 606,
                            "name": "__CONTRACT_NAME_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6241,
                            "src": "6909:22:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 607,
                            "name": "__CONTRACT_VERSION_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6249,
                            "src": "6949:25:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 608,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "6992:5:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 609,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "6992:13:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 610,
                            "name": "_houseAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 593,
                            "src": "7023:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 603,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "6838:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "6838:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6838:209:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 602,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "6815:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6815:242:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6788:269:17"
                },
                {
                  "assignments": [
                    615
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 615,
                      "mutability": "mutable",
                      "name": "hashMsg",
                      "nameLocation": "7076:7:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 654,
                      "src": "7068:15:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 614,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7068:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 637,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 619,
                            "name": "__STR_OCNEWUSER_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6289,
                            "src": "7137:22:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 620,
                            "name": "_walletAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 583,
                            "src": "7177:11:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 624,
                                    "name": "_name",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 585,
                                    "src": "7235:5:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 622,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "7217:3:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 623,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "7217:16:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 625,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7217:25:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 621,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "7206:9:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 626,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7206:38:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 630,
                                    "name": "_description",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 587,
                                    "src": "7291:12:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 628,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "7273:3:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 629,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "7273:16:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 631,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7273:32:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 627,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "7262:9:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 632,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7262:45:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 633,
                            "name": "_isManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 589,
                            "src": "7325:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 634,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 591,
                            "src": "7353:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 617,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7109:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 618,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "7109:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7109:268:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 616,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "7086:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7086:301:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7068:319:17"
                },
                {
                  "assignments": [
                    639
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 639,
                      "mutability": "mutable",
                      "name": "singhash",
                      "nameLocation": "7406:8:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 654,
                      "src": "7398:16:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 638,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7398:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 648,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 643,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7446:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 644,
                            "name": "hashEIP712Domain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 601,
                            "src": "7458:16:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 645,
                            "name": "hashMsg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 615,
                            "src": "7476:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 641,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7428:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 642,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "7428:16:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7428:57:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 640,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "7417:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7417:70:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7398:89:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 650,
                        "name": "singhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 639,
                        "src": "7518:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 651,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 595,
                        "src": "7528:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 649,
                      "name": "SignerOfMsg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 278,
                      "src": "7505:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7505:35:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 599,
                  "id": 653,
                  "nodeType": "Return",
                  "src": "7498:42:17"
                }
              ]
            },
            "documentation": {
              "id": 581,
              "nodeType": "StructuredDocumentation",
              "src": "6051:427:17",
              "text": "@notice Retrieve the signer from Offchain Invite User signature\n @param _walletAddr  Address of the new user\n @param _name Can be the nickname or other reference to the User\n @param _description A text for the proposal\n @param _isManager True if is for a manager\n @param _houseAddr address of the CLH\n @param _signature EIP712 Signature\n @return Wallet address of the signer"
            },
            "functionSelector": "476216dc",
            "id": 655,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SignerOCInvitUser",
            "nameLocation": "6492:17:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 596,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 583,
                  "mutability": "mutable",
                  "name": "_walletAddr",
                  "nameLocation": "6527:11:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "6519:19:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 582,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6519:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 585,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "6562:5:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "6548:19:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 584,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6548:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 587,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "6591:12:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "6577:26:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 586,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6577:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 589,
                  "mutability": "mutable",
                  "name": "_isManager",
                  "nameLocation": "6618:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "6613:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 588,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6613:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 591,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "6646:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "6638:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 590,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6638:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 593,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "6674:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "6666:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 592,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6666:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 595,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "6707:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "6694:23:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 594,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6694:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6509:214:17"
            },
            "returnParameters": {
              "id": 599,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 598,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "6764:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 597,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6764:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6762:11:17"
            },
            "scope": 1034,
            "src": "6483:1064:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 718,
              "nodeType": "Block",
              "src": "8102:685:17",
              "statements": [
                {
                  "assignments": [
                    672
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 672,
                      "mutability": "mutable",
                      "name": "hashEIP712Domain",
                      "nameLocation": "8120:16:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 718,
                      "src": "8112:24:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 671,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8112:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 684,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 676,
                            "name": "__STR_EIP712DOMAIN_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6257,
                            "src": "8190:25:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 677,
                            "name": "__CONTRACT_NAME_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6241,
                            "src": "8233:22:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 678,
                            "name": "__CONTRACT_VERSION_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6249,
                            "src": "8273:25:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 679,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "8316:5:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 680,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "8316:13:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 681,
                            "name": "_houseAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 664,
                            "src": "8347:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 674,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "8162:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "8162:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 682,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8162:209:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 673,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "8139:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8139:242:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8112:269:17"
                },
                {
                  "assignments": [
                    686
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 686,
                      "mutability": "mutable",
                      "name": "hashMsg",
                      "nameLocation": "8400:7:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 718,
                      "src": "8392:15:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 685,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8392:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 701,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 690,
                            "name": "__STR_OCDELUSER_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6297,
                            "src": "8461:22:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 691,
                            "name": "_walletAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 658,
                            "src": "8501:11:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 695,
                                    "name": "_description",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 660,
                                    "src": "8559:12:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 693,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "8541:3:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 694,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "8541:16:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 696,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8541:32:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 692,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "8530:9:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 697,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8530:45:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 698,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 662,
                            "src": "8593:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 688,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "8433:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "8433:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8433:184:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 687,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "8410:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8410:217:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8392:235:17"
                },
                {
                  "assignments": [
                    703
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 703,
                      "mutability": "mutable",
                      "name": "singhash",
                      "nameLocation": "8646:8:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 718,
                      "src": "8638:16:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 702,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8638:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 712,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 707,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8686:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 708,
                            "name": "hashEIP712Domain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 672,
                            "src": "8698:16:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 709,
                            "name": "hashMsg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 686,
                            "src": "8716:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 705,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "8668:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 706,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "8668:16:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8668:57:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 704,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "8657:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8657:70:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8638:89:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 714,
                        "name": "singhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 703,
                        "src": "8758:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 715,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 666,
                        "src": "8768:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 713,
                      "name": "SignerOfMsg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 278,
                      "src": "8745:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8745:35:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 670,
                  "id": 717,
                  "nodeType": "Return",
                  "src": "8738:42:17"
                }
              ]
            },
            "documentation": {
              "id": 656,
              "nodeType": "StructuredDocumentation",
              "src": "7554:301:17",
              "text": "@notice Retrieve the signer from Offchain Remove User signature\n @param _walletAddr user Address to be removed\n @param _description About the proposal\n @param _houseAddr address of the CLH\n @param _signature EIP712 Signature\n @return Wallet address of the signer"
            },
            "functionSelector": "aa25f2d7",
            "id": 719,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SignerOCRemoveUser",
            "nameLocation": "7869:18:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 667,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 658,
                  "mutability": "mutable",
                  "name": "_walletAddr",
                  "nameLocation": "7905:11:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 719,
                  "src": "7897:19:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 657,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7897:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 660,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "7940:12:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 719,
                  "src": "7926:26:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 659,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7926:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 662,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "7970:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 719,
                  "src": "7962:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 661,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7962:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 664,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "7998:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 719,
                  "src": "7990:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 663,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7990:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 666,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "8031:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 719,
                  "src": "8018:23:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 665,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8018:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7887:160:17"
            },
            "returnParameters": {
              "id": 670,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 669,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 719,
                  "src": "8088:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 668,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8088:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8086:11:17"
            },
            "scope": 1034,
            "src": "7860:927:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 784,
              "nodeType": "Block",
              "src": "9325:684:17",
              "statements": [
                {
                  "assignments": [
                    734
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 734,
                      "mutability": "mutable",
                      "name": "hashEIP712Domain",
                      "nameLocation": "9343:16:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 784,
                      "src": "9335:24:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 733,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "9335:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 746,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 738,
                            "name": "__STR_EIP712DOMAIN_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6257,
                            "src": "9413:25:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 739,
                            "name": "__CONTRACT_NAME_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6241,
                            "src": "9456:22:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 740,
                            "name": "__CONTRACT_VERSION_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6249,
                            "src": "9496:25:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 741,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "9539:5:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 742,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "9539:13:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 743,
                            "name": "_houseAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 726,
                            "src": "9570:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 736,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "9385:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 737,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "9385:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9385:209:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 735,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "9362:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9362:242:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9335:269:17"
                },
                {
                  "assignments": [
                    748
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 748,
                      "mutability": "mutable",
                      "name": "hashMsg",
                      "nameLocation": "9623:7:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 784,
                      "src": "9615:15:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 747,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "9615:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 767,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 752,
                            "name": "__STR_OCREQUEST_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6305,
                            "src": "9684:22:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 756,
                                    "name": "_name",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 722,
                                    "src": "9753:5:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 754,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "9735:3:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 755,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "9735:16:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 757,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9735:25:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 753,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "9724:9:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 758,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9724:38:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 762,
                                    "name": "_description",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 724,
                                    "src": "9809:12:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 760,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "9791:3:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 761,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "9791:16:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 763,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9791:32:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 759,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "9780:9:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 764,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9780:45:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 750,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "9656:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "9656:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9656:183:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 749,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "9633:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9633:216:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9615:234:17"
                },
                {
                  "assignments": [
                    769
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 769,
                      "mutability": "mutable",
                      "name": "singhash",
                      "nameLocation": "9868:8:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 784,
                      "src": "9860:16:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 768,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "9860:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 778,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 773,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9908:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 774,
                            "name": "hashEIP712Domain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 734,
                            "src": "9920:16:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 775,
                            "name": "hashMsg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 748,
                            "src": "9938:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 771,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "9890:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "9890:16:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 776,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9890:57:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 770,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "9879:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9879:70:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9860:89:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 780,
                        "name": "singhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 769,
                        "src": "9980:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 781,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 728,
                        "src": "9990:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 779,
                      "name": "SignerOfMsg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 278,
                      "src": "9967:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9967:35:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 732,
                  "id": 783,
                  "nodeType": "Return",
                  "src": "9960:42:17"
                }
              ]
            },
            "documentation": {
              "id": 720,
              "nodeType": "StructuredDocumentation",
              "src": "8794:309:17",
              "text": "@notice Retrieve the signer from Offchain request to join signature\n @param _name Nickname or other user identification\n @param _description About the request\n @param _houseAddr address of the CLH\n @param _signature EIP712 Signature\n @return Wallet address of the signer"
            },
            "functionSelector": "aea35cb1",
            "id": 785,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SignerOCRequestToJoin",
            "nameLocation": "9117:21:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 729,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 722,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "9162:5:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 785,
                  "src": "9148:19:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 721,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9148:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 724,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "9191:12:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 785,
                  "src": "9177:26:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 723,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9177:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 726,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "9221:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 785,
                  "src": "9213:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 725,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9213:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 728,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "9254:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 785,
                  "src": "9241:23:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 727,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9241:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9138:132:17"
            },
            "returnParameters": {
              "id": 732,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 731,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 785,
                  "src": "9311:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 730,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9311:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9309:11:17"
            },
            "scope": 1034,
            "src": "9108:901:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 854,
              "nodeType": "Block",
              "src": "10819:816:17",
              "statements": [
                {
                  "assignments": [
                    806
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 806,
                      "mutability": "mutable",
                      "name": "hashEIP712Domain",
                      "nameLocation": "10837:16:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 854,
                      "src": "10829:24:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 805,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "10829:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 818,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 810,
                            "name": "__STR_EIP712DOMAIN_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6257,
                            "src": "10907:25:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 811,
                            "name": "__CONTRACT_NAME_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6241,
                            "src": "10950:22:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 812,
                            "name": "__CONTRACT_VERSION_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6249,
                            "src": "10990:25:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 813,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "11033:5:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 814,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "11033:13:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 815,
                            "name": "_pxyCLF",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 798,
                            "src": "11064:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 808,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "10879:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 809,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "10879:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10879:206:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 807,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "10856:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10856:239:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10829:266:17"
                },
                {
                  "assignments": [
                    820
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 820,
                      "mutability": "mutable",
                      "name": "hashMsg",
                      "nameLocation": "11114:7:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 854,
                      "src": "11106:15:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 819,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "11106:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 837,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 824,
                            "name": "__STR_OCNEWCLH_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6313,
                            "src": "11175:21:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 828,
                                    "name": "_houseName",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 788,
                                    "src": "11243:10:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 826,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "11225:3:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 827,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "11225:16:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 829,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11225:30:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 825,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "11214:9:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 830,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11214:43:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 831,
                            "name": "_housePrivate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 790,
                            "src": "11275:13:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 832,
                            "name": "_houseOpen",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 792,
                            "src": "11306:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 833,
                            "name": "_govRuleMaxUsers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 794,
                            "src": "11334:16:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 834,
                            "name": "_whiteListNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 796,
                            "src": "11368:13:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 822,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "11147:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "11147:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11147:318:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 821,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "11124:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11124:351:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11106:369:17"
                },
                {
                  "assignments": [
                    839
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 839,
                      "mutability": "mutable",
                      "name": "singhash",
                      "nameLocation": "11494:8:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 854,
                      "src": "11486:16:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 838,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "11486:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 848,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 843,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11534:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 844,
                            "name": "hashEIP712Domain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 806,
                            "src": "11546:16:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 845,
                            "name": "hashMsg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 820,
                            "src": "11564:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 841,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "11516:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "11516:16:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 846,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11516:57:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 840,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "11505:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11505:70:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11486:89:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 850,
                        "name": "singhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 839,
                        "src": "11606:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 851,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 800,
                        "src": "11616:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 849,
                      "name": "SignerOfMsg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 278,
                      "src": "11593:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11593:35:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 804,
                  "id": 853,
                  "nodeType": "Return",
                  "src": "11586:42:17"
                }
              ]
            },
            "documentation": {
              "id": 786,
              "nodeType": "StructuredDocumentation",
              "src": "10016:504:17",
              "text": "@notice Retrieve the signer from Offchain New house signature\n @param _houseName Name of the CLH\n @param _housePrivate If is set to 1, the CLH is set to private\n @param _houseOpen If is set to 1, the CLH is set to open\n @param _govRuleMaxUsers Max users in the house\n @param _whiteListNFT Address of NFT Collection for users invitation\n @param _pxyCLF address of the CLF\n @param _signature EIP712 Signature\n @return Wallet address of the signer"
            },
            "functionSelector": "44d72583",
            "id": 855,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SignerOCNewCLH",
            "nameLocation": "10534:14:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 801,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 788,
                  "mutability": "mutable",
                  "name": "_houseName",
                  "nameLocation": "10572:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 855,
                  "src": "10558:24:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 787,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10558:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 790,
                  "mutability": "mutable",
                  "name": "_housePrivate",
                  "nameLocation": "10597:13:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 855,
                  "src": "10592:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 789,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10592:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 792,
                  "mutability": "mutable",
                  "name": "_houseOpen",
                  "nameLocation": "10625:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 855,
                  "src": "10620:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 791,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10620:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 794,
                  "mutability": "mutable",
                  "name": "_govRuleMaxUsers",
                  "nameLocation": "10653:16:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 855,
                  "src": "10645:24:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 793,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10645:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 796,
                  "mutability": "mutable",
                  "name": "_whiteListNFT",
                  "nameLocation": "10687:13:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 855,
                  "src": "10679:21:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 795,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10679:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 798,
                  "mutability": "mutable",
                  "name": "_pxyCLF",
                  "nameLocation": "10718:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 855,
                  "src": "10710:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 797,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10710:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 800,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "10748:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 855,
                  "src": "10735:23:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 799,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10735:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10548:216:17"
            },
            "returnParameters": {
              "id": 804,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 803,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 855,
                  "src": "10805:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 802,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10805:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10803:11:17"
            },
            "scope": 1034,
            "src": "10525:1110:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 921,
              "nodeType": "Block",
              "src": "12321:723:17",
              "statements": [
                {
                  "assignments": [
                    874
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 874,
                      "mutability": "mutable",
                      "name": "hashEIP712Domain",
                      "nameLocation": "12339:16:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 921,
                      "src": "12331:24:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 873,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "12331:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 886,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 878,
                            "name": "__STR_EIP712DOMAIN_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6257,
                            "src": "12409:25:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 879,
                            "name": "__CONTRACT_NAME_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6241,
                            "src": "12452:22:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 880,
                            "name": "__CONTRACT_VERSION_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6249,
                            "src": "12492:25:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 881,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "12535:5:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 882,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "12535:13:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 883,
                            "name": "_houseAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 866,
                            "src": "12566:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 876,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "12381:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 877,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "12381:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12381:209:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 875,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "12358:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12358:242:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12331:269:17"
                },
                {
                  "assignments": [
                    888
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 888,
                      "mutability": "mutable",
                      "name": "hashMsg",
                      "nameLocation": "12619:7:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 921,
                      "src": "12611:15:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 887,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "12611:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 904,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 892,
                            "name": "__STR_OCNEWLOCK_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6321,
                            "src": "12680:22:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 893,
                            "name": "_expirationDuration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 858,
                            "src": "12720:19:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 894,
                            "name": "_keyPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 860,
                            "src": "12757:9:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 895,
                            "name": "_maxNumberOfKeys",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 862,
                            "src": "12784:16:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 899,
                                    "name": "_lockName",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 864,
                                    "src": "12847:9:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 897,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "12829:3:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 898,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "12829:16:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 900,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12829:29:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 896,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "12818:9:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 901,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12818:42:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 890,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "12652:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 891,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "12652:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 902,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12652:222:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 889,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "12629:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12629:255:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12611:273:17"
                },
                {
                  "assignments": [
                    906
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 906,
                      "mutability": "mutable",
                      "name": "singhash",
                      "nameLocation": "12903:8:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 921,
                      "src": "12895:16:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 905,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "12895:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 915,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 910,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12943:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 911,
                            "name": "hashEIP712Domain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 874,
                            "src": "12955:16:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 912,
                            "name": "hashMsg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 888,
                            "src": "12973:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 908,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "12925:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "12925:16:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12925:57:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 907,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "12914:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12914:70:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12895:89:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 917,
                        "name": "singhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 906,
                        "src": "13015:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 918,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 868,
                        "src": "13025:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 916,
                      "name": "SignerOfMsg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 278,
                      "src": "13002:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13002:35:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 872,
                  "id": 920,
                  "nodeType": "Return",
                  "src": "12995:42:17"
                }
              ]
            },
            "documentation": {
              "id": 856,
              "nodeType": "StructuredDocumentation",
              "src": "11642:397:17",
              "text": "@notice Retrieve the signer from Offchain New Lock signature\n @param _expirationDuration Expiration for lcok in seconds\n @param _keyPrice Price for each lock in wei\n @param _maxNumberOfKeys How many locks\n @param _lockName Lock Name\n @param _houseAddr address of the CLH\n @param _signature EIP712 Signature\n @return Wallet address of the signer"
            },
            "functionSelector": "0daff036",
            "id": 922,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SignerOCNewLock",
            "nameLocation": "12053:15:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 869,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 858,
                  "mutability": "mutable",
                  "name": "_expirationDuration",
                  "nameLocation": "12086:19:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 922,
                  "src": "12078:27:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 857,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12078:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 860,
                  "mutability": "mutable",
                  "name": "_keyPrice",
                  "nameLocation": "12123:9:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 922,
                  "src": "12115:17:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 859,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12115:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 862,
                  "mutability": "mutable",
                  "name": "_maxNumberOfKeys",
                  "nameLocation": "12150:16:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 922,
                  "src": "12142:24:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 861,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12142:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 864,
                  "mutability": "mutable",
                  "name": "_lockName",
                  "nameLocation": "12190:9:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 922,
                  "src": "12176:23:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 863,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "12176:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 866,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "12217:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 922,
                  "src": "12209:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 865,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12209:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 868,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "12250:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 922,
                  "src": "12237:23:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 867,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12237:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12068:198:17"
            },
            "returnParameters": {
              "id": 872,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 871,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 922,
                  "src": "12307:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 870,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12307:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12305:11:17"
            },
            "scope": 1034,
            "src": "12044:1000:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 979,
              "nodeType": "Block",
              "src": "13470:629:17",
              "statements": [
                {
                  "assignments": [
                    935
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 935,
                      "mutability": "mutable",
                      "name": "hashEIP712Domain",
                      "nameLocation": "13488:16:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 979,
                      "src": "13480:24:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 934,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "13480:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 947,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 939,
                            "name": "__STR_EIP712DOMAIN_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6257,
                            "src": "13558:25:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 940,
                            "name": "__CONTRACT_NAME_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6241,
                            "src": "13601:22:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 941,
                            "name": "__CONTRACT_VERSION_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6249,
                            "src": "13641:25:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 942,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "13684:5:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 943,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "13684:13:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 944,
                            "name": "_houseAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 927,
                            "src": "13715:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 937,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "13530:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 938,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "13530:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13530:209:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 936,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "13507:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13507:242:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13480:269:17"
                },
                {
                  "assignments": [
                    949
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 949,
                      "mutability": "mutable",
                      "name": "hashMsg",
                      "nameLocation": "13768:7:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 979,
                      "src": "13760:15:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 948,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "13760:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 962,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 953,
                            "name": "__STR_OCUPCLH_NAME_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6329,
                            "src": "13829:25:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 957,
                                    "name": "_houseName",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 925,
                                    "src": "13901:10:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 955,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "13883:3:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 956,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "13883:16:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 958,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13883:30:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 954,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "13872:9:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 959,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13872:43:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 951,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "13801:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 952,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "13801:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13801:128:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 950,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "13778:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13778:161:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13760:179:17"
                },
                {
                  "assignments": [
                    964
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 964,
                      "mutability": "mutable",
                      "name": "singhash",
                      "nameLocation": "13958:8:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 979,
                      "src": "13950:16:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 963,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "13950:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 973,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 968,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13998:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 969,
                            "name": "hashEIP712Domain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 935,
                            "src": "14010:16:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 970,
                            "name": "hashMsg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 949,
                            "src": "14028:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 966,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "13980:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 967,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "13980:16:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13980:57:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 965,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "13969:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13969:70:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13950:89:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 975,
                        "name": "singhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 964,
                        "src": "14070:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 976,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 929,
                        "src": "14080:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 974,
                      "name": "SignerOfMsg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 278,
                      "src": "14057:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14057:35:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 933,
                  "id": 978,
                  "nodeType": "Return",
                  "src": "14050:42:17"
                }
              ]
            },
            "documentation": {
              "id": 923,
              "nodeType": "StructuredDocumentation",
              "src": "13050:233:17",
              "text": "@notice Retrieve the signer from Offchain Update CLH Name\n @param _houseName new CLH Name\n @param _houseAddr address of the CLH\n @param _signature EIP712 Signature\n @return Wallet address of the signer"
            },
            "functionSelector": "62423c75",
            "id": 980,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SignerOCUpCLHName",
            "nameLocation": "13297:17:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 930,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 925,
                  "mutability": "mutable",
                  "name": "_houseName",
                  "nameLocation": "13338:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 980,
                  "src": "13324:24:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 924,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "13324:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 927,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "13366:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 980,
                  "src": "13358:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 926,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13358:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 929,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "13399:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 980,
                  "src": "13386:23:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 928,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13386:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13314:101:17"
            },
            "returnParameters": {
              "id": 933,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 932,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 980,
                  "src": "13456:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 931,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13456:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13454:11:17"
            },
            "scope": 1034,
            "src": "13288:811:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1032,
              "nodeType": "Block",
              "src": "14550:600:17",
              "statements": [
                {
                  "assignments": [
                    993
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 993,
                      "mutability": "mutable",
                      "name": "hashEIP712Domain",
                      "nameLocation": "14568:16:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 1032,
                      "src": "14560:24:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 992,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "14560:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1005,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 997,
                            "name": "__STR_EIP712DOMAIN_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6257,
                            "src": "14638:25:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 998,
                            "name": "__CONTRACT_NAME_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6241,
                            "src": "14681:22:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 999,
                            "name": "__CONTRACT_VERSION_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6249,
                            "src": "14721:25:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 1000,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "14764:5:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1001,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "14764:13:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1002,
                            "name": "_houseAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 985,
                            "src": "14795:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 995,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "14610:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "14610:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14610:209:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 994,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "14587:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14587:242:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14560:269:17"
                },
                {
                  "assignments": [
                    1007
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1007,
                      "mutability": "mutable",
                      "name": "hashMsg",
                      "nameLocation": "14848:7:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 1032,
                      "src": "14840:15:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1006,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "14840:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1015,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1011,
                            "name": "__STR_OCUPCLH_WLNFT_HASH__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6337,
                            "src": "14909:26:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 1012,
                            "name": "_whiteListNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 983,
                            "src": "14953:13:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1009,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "14881:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1010,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "14881:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14881:99:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1008,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "14858:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14858:132:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14840:150:17"
                },
                {
                  "assignments": [
                    1017
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1017,
                      "mutability": "mutable",
                      "name": "singhash",
                      "nameLocation": "15009:8:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 1032,
                      "src": "15001:16:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1016,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "15001:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1026,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 1021,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15049:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 1022,
                            "name": "hashEIP712Domain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 993,
                            "src": "15061:16:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 1023,
                            "name": "hashMsg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1007,
                            "src": "15079:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 1019,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "15031:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1020,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "15031:16:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15031:57:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1018,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "15020:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15020:70:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15001:89:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1028,
                        "name": "singhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1017,
                        "src": "15121:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1029,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 987,
                        "src": "15131:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1027,
                      "name": "SignerOfMsg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 278,
                      "src": "15108:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 1030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15108:35:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 991,
                  "id": 1031,
                  "nodeType": "Return",
                  "src": "15101:42:17"
                }
              ]
            },
            "documentation": {
              "id": 981,
              "nodeType": "StructuredDocumentation",
              "src": "14105:260:17",
              "text": "@notice Retrieve the signer from Offchain Update CLH Whitelist NFT\n @param _whiteListNFT New contract address of NFT\n @param _houseAddr address of the CLH\n @param _signature EIP712 Signature\n @return Wallet address of the signer"
            },
            "functionSelector": "31e65582",
            "id": 1033,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SignerOCUpCLHWLNFT",
            "nameLocation": "14379:18:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 988,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 983,
                  "mutability": "mutable",
                  "name": "_whiteListNFT",
                  "nameLocation": "14415:13:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1033,
                  "src": "14407:21:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 982,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14407:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 985,
                  "mutability": "mutable",
                  "name": "_houseAddr",
                  "nameLocation": "14446:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1033,
                  "src": "14438:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 984,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14438:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 987,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "14479:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 1033,
                  "src": "14466:23:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 986,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14466:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14397:98:17"
            },
            "returnParameters": {
              "id": 991,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 990,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1033,
                  "src": "14536:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 989,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14536:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14534:11:17"
            },
            "scope": 1034,
            "src": "14370:780:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1035,
        "src": "184:14968:17",
        "usedErrors": []
      }
    ],
    "src": "32:15120:17"
  },
  "bytecode": "",
  "bytecodeSha1": "6ab72ebdc0c432e82de7397a739fe122bddabf22",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "CLHouseApi",
  "coverageMap": {
    "branches": {
      "17": {
        "CLHouseApi.GetHouseUserList": {
          "14": [
            2111,
            2132,
            false
          ]
        },
        "CLHouseApi.SignerOfMsg": {
          "13": [
            578,
            601,
            true
          ]
        }
      },
      "19": {},
      "33": {}
    },
    "statements": {
      "17": {
        "CLHouseApi.GetHouseUserList": {
          "7": [
            1711,
            1752
          ],
          "8": [
            1903,
            1944
          ],
          "9": [
            1959,
            2092
          ],
          "10": [
            2152,
            2181
          ],
          "11": [
            2199,
            2206
          ],
          "12": [
            1838,
            1843
          ]
        },
        "CLHouseApi.SignerOCInvit": {
          "1": [
            3361,
            3403
          ]
        },
        "CLHouseApi.SignerOCNewCLH": {
          "3": [
            11586,
            11628
          ]
        },
        "CLHouseApi.SignerOCNewLock": {
          "0": [
            12995,
            13037
          ]
        },
        "CLHouseApi.SignerOCUpCLHWLNFT": {
          "2": [
            15101,
            15143
          ]
        },
        "CLHouseApi.SignerOCVote": {
          "6": [
            4640,
            4682
          ]
        },
        "CLHouseApi.SignerOfMsg": {
          "4": [
            569,
            627
          ],
          "5": [
            1049,
            1098
          ]
        }
      },
      "19": {},
      "33": {}
    }
  },
  "dependencies": [
    "ICLHouse"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "184:14968:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12044:1000;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2415:32:35;;;2397:51;;2385:2;2370:18;12044:1000:17;;;;;;;;2555:855;;;;;;:::i;:::-;;:::i;14370:780::-;;;;;;:::i;:::-;;:::i;10525:1110::-;;;;;;:::i;:::-;;:::i;6483:1064::-;;;;;;:::i;:::-;;:::i;413:692::-;;;;;;:::i;:::-;;:::i;13288:811::-;;;;;;:::i;:::-;;:::i;3785:904::-;;;;;;:::i;:::-;;:::i;7860:927::-;;;;;;:::i;:::-;;:::i;9108:901::-;;;;;;:::i;:::-;;:::i;1379:858::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5085:959::-;;;;;;:::i;:::-;;:::i;12044:1000::-;12307:7;12331:24;692:116:19;;;;;;;:::i;:::-;;;;-1:-1:-1;;692:116:19;;;;;;;;;677:133;;692:116;677:133;;;;607:19;;;;;;;;-1:-1:-1;;;607:19:19;;;;589:39;;677:133;;-1:-1:-1;;;;;;;;;;;507:20:19;589:39;;;;:::i;:::-;;;;;;;;;;;;;574:56;;;;;;12535:13:17;12566:10;12381:209;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;12358:242;;;;;;12331:269;;12611:15;2013:131:19;;;;;;15061:34:35;15049:47;;15126:34;15121:2;15112:12;;15105:56;15191:34;15186:2;15177:12;;15170:56;-1:-1:-1;;;15251:2:35;15242:12;;15235:25;15285:2;15276:12;;14847:447;2013:131:19;;;;;;;;;;;;;1998:148;;;;;;12720:19:17;12757:9;12784:16;12847:9;12829:29;;;;;;;;:::i;:::-;;;;-1:-1:-1;;12829:29:17;;;;;;;;;12818:42;;12829:29;12818:42;;;;12652:222;;;15558:25:35;;;;15599:18;;15592:34;;;;15642:18;;;15635:34;;;;15685:18;;;15678:34;15728:19;;;15721:35;;;;15530:19;;12652:222:17;;;;;;;;;;;;12629:255;;;;;;12611:273;;12895:16;12955;12973:7;12925:57;;;;;;;;;:::i;:::-;;;;;;;;;;;;;12914:70;;;;;;12895:89;;13002:35;13015:8;13025:10;13002:11;:35::i;:::-;12995:42;12044:1000;-1:-1:-1;;;;;;;;;;12044:1000:17:o;2555:855::-;2744:7;2768:24;692:116:19;;;;;;;:::i;:::-;;;;-1:-1:-1;;692:116:19;;;;;;;;;677:133;;692:116;677:133;;;;607:19;;;;;;;;-1:-1:-1;;;607:19:19;;;;589:39;;677:133;;-1:-1:-1;;;;;;;;;;;507:20:19;589:39;;;;:::i;:::-;;;;;;;;;;;;;574:56;;;;;;2972:13:17;3003:10;2818:209;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2795:242;;;;;;2768:269;;3048:15;867:77:19;;;;;;16378:34:35;16366:47;;-1:-1:-1;;;16438:2:35;16429:12;;16422:35;16482:2;16473:12;;16164:327;867:77:19;;;;;;;;;;;;;852:94;;;;;;3155:11:17;3213:9;3195:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;3184:42;;;;;;3089:151;;;;;;;;;16692:25:35;;;16760:14;;16753:22;16748:2;16733:18;;16726:50;16807:2;16792:18;;16785:34;16680:2;16665:18;;16496:329;3089:151:17;;;;;;;;;;;;;3066:184;;;;;;3048:202;;3261:16;3321;3339:7;3291:57;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3280:70;;;;;;3261:89;;3368:35;3381:8;3391:10;3368:11;:35::i;:::-;3361:42;2555:855;-1:-1:-1;;;;;;;;2555:855:17:o;14370:780::-;14536:7;14560:24;692:116:19;;;;;;;:::i;:::-;;;;-1:-1:-1;;692:116:19;;;;;;;;;677:133;;692:116;677:133;;;;607:19;;;;;;;;-1:-1:-1;;;607:19:19;;;;589:39;;677:133;;-1:-1:-1;;;;;;;;;;;507:20:19;589:39;;;;:::i;:::-;;;;;;;;;;;;;574:56;;;;;;14764:13:17;14795:10;14610:209;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;14587:242;;;;;;14560:269;;14840:15;2340:71:19;;;;;;17044:34:35;17032:47;;-1:-1:-1;;;17104:2:35;17095:12;;17088:29;17142:2;17133:12;;16830:321;2340:71:19;;;;-1:-1:-1;;2340:71:19;;;;;;;;;2325:88;;2340:71;2325:88;;;;14881:99:17;;;17330:25:35;-1:-1:-1;;;;;17391:32:35;;17371:18;;;17364:60;17303:18;;14881:99:17;;;;;;;;;;;;;14858:132;;;;;;14840:150;;15001:16;15061;15079:7;15031:57;;;;;;;;;:::i;:::-;;;;;;;;;;;;;15020:70;;;;;;15001:89;;15108:35;15121:8;15131:10;15108:11;:35::i;:::-;15101:42;14370:780;-1:-1:-1;;;;;;;14370:780:17:o;10525:1110::-;10805:7;10829:24;692:116:19;;;;;;;:::i;:::-;;;;-1:-1:-1;;692:116:19;;;;;;;;;677:133;;692:116;677:133;;;;607:19;;;;;;;;-1:-1:-1;;;607:19:19;;;;589:39;;677:133;;-1:-1:-1;;;;;;;;;;;507:20:19;589:39;;;;:::i;:::-;;;;;;;;;;;;;574:56;;;;;;11033:13:17;11064:7;10879:206;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;10856:239;;;;;;10829:266;;11106:15;1811:141:19;;;;;;17649:34:35;17637:47;;17714:34;17709:2;17700:12;;17693:56;17779:34;17774:2;17765:12;;17758:56;-1:-1:-1;;;17839:2:35;17830:12;;17823:35;17883:3;17874:13;;17435:458;1811:141:19;;;;;;;;;;;;;1796:158;;;;;;11243:10:17;11225:30;;;;;;;;:::i;:::-;;;;-1:-1:-1;;11225:30:17;;;;;;;;;11214:43;;11225:30;11214:43;;;;11147:318;;;18173:25:35;;;;18214:18;;18207:34;;;;18284:14;;18277:22;18257:18;;;18250:50;18343:14;;18336:22;18316:18;;;18309:50;18375:19;;;18368:35;;;-1:-1:-1;;;;;18440:32:35;;18419:19;;;18412:61;18145:19;;11147:318:17;;;;;;;;;;;;;11124:351;;;;;;11106:369;;11486:16;11546;11564:7;11516:57;;;;;;;;;:::i;:::-;;;;;;;;;;;;;11505:70;;;;;;11486:89;;11593:35;11606:8;11616:10;11593:11;:35::i;:::-;11586:42;10525:1110;-1:-1:-1;;;;;;;;;;;10525:1110:17:o;6483:1064::-;6764:7;6788:24;692:116:19;;;;;;;:::i;:::-;;;;-1:-1:-1;;692:116:19;;;;;;;;;677:133;;692:116;677:133;;;;607:19;;;;;;;;-1:-1:-1;;;607:19:19;;;;589:39;;677:133;;-1:-1:-1;;;;;;;;;;;507:20:19;589:39;;;;:::i;:::-;;;;;;;;;;;;;574:56;;;;;;6992:13:17;7023:10;6838:209;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6815:242;;;;;;6788:269;;7068:15;1318:130:19;;;;;;18698:34:35;18686:47;;18763:34;18758:2;18749:12;;18742:56;18828:34;18823:2;18814:12;;18807:56;18888:2;18879:12;;18484:413;1318:130:19;;;;;;;;;;;;;1303:147;;;;;;7177:11:17;7235:5;7217:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;7206:38;;;;;;7291:12;7273:32;;;;;;;;:::i;:::-;;;;-1:-1:-1;;7273:32:17;;;;;;;;;7262:45;;7273:32;7262:45;;;;7109:268;;;19183:25:35;;;;-1:-1:-1;;;;;19244:32:35;;;19224:18;;;19217:60;;;;19293:18;;;19286:34;19336:18;;;19329:34;;;;19407:14;;19400:22;19379:19;;;19372:51;19439:19;;;19432:35;;;19155:19;;7109:268:17;18902:571:35;413:692:17;545:7;578:10;:17;599:2;578:23;569:58;;;;-1:-1:-1;;;569:58:17;;19680:2:35;569:58:17;;;19662:21:35;19719:2;19699:18;;;19692:30;-1:-1:-1;;;19738:18:35;;;19731:50;19798:18;;569:58:17;;;;;;;;817:2;800:21;;;793:30;900:2;883:21;;;876:30;1021:2;1004:21;;;997:30;1056:42;;638:13;1056:42;;;;;;;;;20054:25:35;;;988:41:17;;20095:18:35;;;20088:45;;;20149:18;;20142:34;;;20192:18;;;20185:34;;;793:30:17;;1056:42;;20026:19:35;;1056:42:17;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1056:42:17;;-1:-1:-1;;1056:42:17;;;413:692;-1:-1:-1;;;;;;;413:692:17:o;13288:811::-;13456:7;13480:24;692:116:19;;;;;;;:::i;:::-;;;;-1:-1:-1;;692:116:19;;;;;;;;;677:133;;692:116;677:133;;;;607:19;;;;;;;;-1:-1:-1;;;607:19:19;;;;589:39;;677:133;;-1:-1:-1;;;;;;;;;;;507:20:19;589:39;;;;:::i;:::-;;;;;;;;;;;;;574:56;;;;;;13684:13:17;13715:10;13530:209;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;13507:242;;;;;;13480:269;;13760:15;2208:66:19;;;;;;20444:34:35;20432:47;;20504:2;20495:12;;20230:283;2208:66:19;;;;;;;;;;;;;2193:83;;;;;;13901:10:17;13883:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;13872:43;;;;;;13801:128;;;;;;;;20692:25:35;;;20748:2;20733:18;;20726:34;20680:2;20665:18;;20518:248;3785:904:17;3997:7;4021:24;692:116:19;;;;;;;:::i;:::-;;;;-1:-1:-1;;692:116:19;;;;;;;;;677:133;;692:116;677:133;;;;607:19;;;;;;;;-1:-1:-1;;;607:19:19;;;;589:39;;677:133;;-1:-1:-1;;;;;;;;;;;507:20:19;589:39;;;;:::i;:::-;;;;;;;;;;;;;574:56;;;;;;4225:13:17;4256:10;4071:209;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4048:242;;;;;;4021:269;;4301:15;1002:93:19;;;;;;20985:34:35;20973:47;;21050:29;21045:2;21036:12;;21029:51;21105:2;21096:12;;20771:343;1002:93:19;;;;;;;;;;;;;987:110;;;;;;4407:7:17;4432:8;4487:14;4469:34;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4469:34:17;;;;;;;;;4458:47;;4469:34;4458:47;;;;4342:177;;;21344:25:35;;;;21385:18;;21378:34;;;;21455:14;21448:22;21428:18;;;21421:50;21487:18;;;21480:34;;;;21316:19;;4342:177:17;;;;;;;;;;;;;4319:210;;;;;;4301:228;;4540:16;4600;4618:7;4570:57;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4559:70;;;;;;4540:89;;4647:35;4660:8;4670:10;4647:11;:35::i;:::-;4640:42;3785:904;-1:-1:-1;;;;;;;;;3785:904:17:o;7860:927::-;8088:7;8112:24;692:116:19;;;;;;;:::i;:::-;;;;-1:-1:-1;;692:116:19;;;;;;;;;677:133;;692:116;677:133;;;;607:19;;;;;;;;-1:-1:-1;;;607:19:19;;;;589:39;;677:133;;-1:-1:-1;;;;;;;;;;;507:20:19;589:39;;;;:::i;:::-;;;;;;;;;;;;;574:56;;;;;;8316:13:17;8347:10;8162:209;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8139:242;;;;;;8112:269;;8392:15;1509:103:19;;;;;;21739:34:35;21727:47;;21804:34;21799:2;21790:12;;21783:56;-1:-1:-1;;;21864:2:35;21855:12;;21848:29;21902:2;21893:12;;21525:386;1509:103:19;;;;;;;;;;;;;1494:120;;;;;;8501:11:17;8559:12;8541:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;8530:45;;;;;;8593:10;8433:184;;;;;;;;;;22147:25:35;;;-1:-1:-1;;;;;22208:32:35;;;;22203:2;22188:18;;22181:60;22272:2;22257:18;;22250:34;22315:2;22300:18;;22293:34;22134:3;22119:19;;21916:417;9108:901:17;9311:7;9335:24;692:116:19;;;;;;;:::i;:::-;;;;-1:-1:-1;;692:116:19;;;;;;;;;677:133;;692:116;677:133;;;;607:19;;;;;;;;-1:-1:-1;;;607:19:19;;;;589:39;;677:133;;-1:-1:-1;;;;;;;;;;;507:20:19;589:39;;;;:::i;:::-;;;;;;;;;;;;;574:56;;;;;;9539:13:17;9570:10;9385:209;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;9362:242;;;;;;9335:269;;9615:15;1673:78:19;;;;;;22552:34:35;22540:47;;-1:-1:-1;;;22612:2:35;22603:12;;22596:36;22657:2;22648:12;;22338:328;1673:78:19;;;;;;;;;;;;;1658:95;;;;;;9753:5:17;9735:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;9724:38;;;;;;9809:12;9791:32;;;;;;;;:::i;:::-;;;;-1:-1:-1;;9791:32:17;;;;;;;;;9780:45;;9791:32;9780:45;;;;9656:183;;;22873:25:35;;;;22914:18;;22907:34;;;;22957:18;;;22950:34;;;;22846:18;;9656:183:17;22671:319:35;1379:858:17;1498:29;1552:15;1580:10;1552:40;;1603:16;1622:6;-1:-1:-1;;;;;1622:15:17;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1603:37;;1650:22;1675:6;-1:-1:-1;;;;;1675:24:17;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1650:51;;1742:8;-1:-1:-1;;;;;1722:30:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1722:30:17;;;;;;;;;;;;;;;;-1:-1:-1;1711:41:17;-1:-1:-1;1763:13:17;1811:1;1792:439;1821:14;1815:3;:20;1792:439;;;1860:28;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1860:28:17;1922:22;;-1:-1:-1;;;1922:22:17;;;;;23330:25:35;;;-1:-1:-1;;;;;1922:15:17;;;;;23303:18:35;;1922:22:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1903:41:17;;;;;;2057:35;;-1:-1:-1;;;2057:35:17;;;;;2397:51:35;;;;2057:15:17;;;;;;2370:18:35;;2057:35:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2057:35:17;;;;;;;;;;;;:::i;:::-;1959:133;;2033:19;;;1959:133;1997:18;;;1959:133;1963:16;;;1959:133;;;2111:21;2107:114;;2172:9;2152:8;2162:5;2152:17;;;;;;;;:::i;:::-;;;;;;:29;;;;2199:7;;;;;:::i;:::-;;;;2107:114;-1:-1:-1;1838:5:17;;;;:::i;:::-;;;;1792:439;;;;1542:695;;;;1379:858;;;:::o;5085:959::-;5314:7;5338:24;692:116:19;;;;;;;:::i;:::-;;;;-1:-1:-1;;692:116:19;;;;;;;;;677:133;;692:116;677:133;;;;607:19;;;;;;;;-1:-1:-1;;;607:19:19;;;;589:39;;677:133;;-1:-1:-1;;;;;;;;;;;507:20:19;589:39;;;;:::i;:::-;;;;;;;;;;;;;574:56;;;;;;5542:13:17;5573:10;5388:209;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5365:242;;;;;;5338:269;;5618:15;1157:100:19;;;;;;25029:34:35;25017:47;;25094:34;25089:2;25080:12;;25073:56;-1:-1:-1;;;25154:2:35;25145:12;;25138:26;25189:2;25180:12;;24815:383;1157:100:19;;;;;;;;;;;;;1142:117;;;;;;5757:8:17;5739:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;5728:41;;;;;;5787:8;5842:14;5824:34;;;;;;;;:::i;14:127:35:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:275;217:2;211:9;282:2;263:13;;-1:-1:-1;;259:27:35;247:40;;-1:-1:-1;;;;;302:34:35;;338:22;;;299:62;296:88;;;364:18;;:::i;:::-;400:2;393:22;146:275;;-1:-1:-1;146:275:35:o;426:187::-;475:4;-1:-1:-1;;;;;500:6:35;497:30;494:56;;;530:18;;:::i;:::-;-1:-1:-1;596:2:35;575:15;-1:-1:-1;;571:29:35;602:4;567:40;;426:187::o;618:464::-;661:5;714:3;707:4;699:6;695:17;691:27;681:55;;732:1;729;722:12;681:55;768:6;755:20;799:49;815:32;844:2;815:32;:::i;:::-;799:49;:::i;:::-;873:2;864:7;857:19;919:3;912:4;907:2;899:6;895:15;891:26;888:35;885:55;;;936:1;933;926:12;885:55;1001:2;994:4;986:6;982:17;975:4;966:7;962:18;949:55;1049:1;1024:16;;;1042:4;1020:27;1013:38;;;;1028:7;618:464;-1:-1:-1;;;618:464:35:o;1087:131::-;-1:-1:-1;;;;;1162:31:35;;1152:42;;1142:70;;1208:1;1205;1198:12;1142:70;1087:131;:::o;1223:134::-;1291:20;;1320:31;1291:20;1320:31;:::i;:::-;1223:134;;;:::o;1362:884::-;1485:6;1493;1501;1509;1517;1525;1578:3;1566:9;1557:7;1553:23;1549:33;1546:53;;;1595:1;1592;1585:12;1546:53;1631:9;1618:23;1608:33;;1688:2;1677:9;1673:18;1660:32;1650:42;;1739:2;1728:9;1724:18;1711:32;1701:42;;1794:2;1783:9;1779:18;1766:32;-1:-1:-1;;;;;1858:2:35;1850:6;1847:14;1844:34;;;1874:1;1871;1864:12;1844:34;1897:50;1939:7;1930:6;1919:9;1915:22;1897:50;:::i;:::-;1887:60;;1997:3;1986:9;1982:19;1969:33;1956:46;;2011:31;2036:5;2011:31;:::i;:::-;2061:5;;-1:-1:-1;2119:3:35;2104:19;;2091:33;;2136:16;;;2133:36;;;2165:1;2162;2155:12;2133:36;;2188:52;2232:7;2221:8;2210:9;2206:24;2188:52;:::i;:::-;2178:62;;;1362:884;;;;;;;;:::o;2459:118::-;2545:5;2538:13;2531:21;2524:5;2521:32;2511:60;;2567:1;2564;2557:12;2582:128;2647:20;;2676:28;2647:20;2676:28;:::i;2715:813::-;2817:6;2825;2833;2841;2894:3;2882:9;2873:7;2869:23;2865:33;2862:53;;;2911:1;2908;2901:12;2862:53;2950:9;2937:23;2969:28;2991:5;2969:28;:::i;:::-;3016:5;-1:-1:-1;3072:2:35;3057:18;;3044:32;-1:-1:-1;;;;;3125:14:35;;;3122:34;;;3152:1;3149;3142:12;3122:34;3175:50;3217:7;3208:6;3197:9;3193:22;3175:50;:::i;:::-;3165:60;;3277:2;3266:9;3262:18;3249:32;3234:47;;3290:33;3315:7;3290:33;:::i;:::-;3342:7;;-1:-1:-1;3402:2:35;3387:18;;3374:32;;3418:16;;;3415:36;;;3447:1;3444;3437:12;3415:36;;3470:52;3514:7;3503:8;3492:9;3488:24;3470:52;:::i;:::-;3460:62;;;2715:813;;;;;;;:::o;3533:597::-;3619:6;3627;3635;3688:2;3676:9;3667:7;3663:23;3659:32;3656:52;;;3704:1;3701;3694:12;3656:52;3743:9;3730:23;3762:31;3787:5;3762:31;:::i;:::-;3812:5;-1:-1:-1;3869:2:35;3854:18;;3841:32;3882:33;3841:32;3882:33;:::i;:::-;3934:7;-1:-1:-1;3992:2:35;3977:18;;3964:32;-1:-1:-1;;;;;4008:30:35;;4005:50;;;4051:1;4048;4041:12;4005:50;4074;4116:7;4107:6;4096:9;4092:22;4074:50;:::i;:::-;4064:60;;;3533:597;;;;;:::o;4135:1160::-;4261:6;4269;4277;4285;4293;4301;4309;4362:3;4350:9;4341:7;4337:23;4333:33;4330:53;;;4379:1;4376;4369:12;4330:53;4419:9;4406:23;-1:-1:-1;;;;;4489:2:35;4481:6;4478:14;4475:34;;;4505:1;4502;4495:12;4475:34;4528:50;4570:7;4561:6;4550:9;4546:22;4528:50;:::i;:::-;4518:60;;4628:2;4617:9;4613:18;4600:32;4587:45;;4641:28;4663:5;4641:28;:::i;:::-;4688:5;;-1:-1:-1;4745:2:35;4730:18;;4717:32;;4758:30;4717:32;4758:30;:::i;:::-;4807:7;;-1:-1:-1;4861:2:35;4846:18;;4833:32;;-1:-1:-1;4917:3:35;4902:19;;4889:33;;4931;4889;4931;:::i;:::-;4983:7;;-1:-1:-1;5042:3:35;5027:19;;5014:33;;5056;5014;5056;:::i;:::-;5108:7;;-1:-1:-1;5168:3:35;5153:19;;5140:33;;5185:16;;;5182:36;;;5214:1;5211;5204:12;5182:36;;5237:52;5281:7;5270:8;5259:9;5255:24;5237:52;:::i;:::-;5227:62;;;4135:1160;;;;;;;;;;:::o;5300:1158::-;5439:6;5447;5455;5463;5471;5479;5487;5540:3;5528:9;5519:7;5515:23;5511:33;5508:53;;;5557:1;5554;5547:12;5508:53;5596:9;5583:23;5615:31;5640:5;5615:31;:::i;:::-;5665:5;-1:-1:-1;5721:2:35;5706:18;;5693:32;-1:-1:-1;;;;;5774:14:35;;;5771:34;;;5801:1;5798;5791:12;5771:34;5824:50;5866:7;5857:6;5846:9;5842:22;5824:50;:::i;:::-;5814:60;;5927:2;5916:9;5912:18;5899:32;5883:48;;5956:2;5946:8;5943:16;5940:36;;;5972:1;5969;5962:12;5940:36;5995:52;6039:7;6028:8;6017:9;6013:24;5995:52;:::i;:::-;5985:62;;6099:2;6088:9;6084:18;6071:32;6056:47;;6112:30;6134:7;6112:30;:::i;:::-;6161:7;6151:17;;6215:3;6204:9;6200:19;6187:33;6177:43;;6239:39;6273:3;6262:9;6258:19;6239:39;:::i;:::-;6229:49;;6331:3;6320:9;6316:19;6303:33;6287:49;;6361:2;6351:8;6348:16;6345:36;;;6377:1;6374;6367:12;6463:389;6540:6;6548;6601:2;6589:9;6580:7;6576:23;6572:32;6569:52;;;6617:1;6614;6607:12;6569:52;6653:9;6640:23;6630:33;;6714:2;6703:9;6699:18;6686:32;-1:-1:-1;;;;;6733:6:35;6730:30;6727:50;;;6773:1;6770;6763:12;6727:50;6796;6838:7;6829:6;6818:9;6814:22;6796:50;:::i;:::-;6786:60;;;6463:389;;;;;:::o;6857:677::-;6953:6;6961;6969;7022:2;7010:9;7001:7;6997:23;6993:32;6990:52;;;7038:1;7035;7028:12;6990:52;7078:9;7065:23;-1:-1:-1;;;;;7148:2:35;7140:6;7137:14;7134:34;;;7164:1;7161;7154:12;7134:34;7187:50;7229:7;7220:6;7209:9;7205:22;7187:50;:::i;:::-;7177:60;;7287:2;7276:9;7272:18;7259:32;7246:45;;7300:31;7325:5;7300:31;:::i;:::-;7350:5;;-1:-1:-1;7408:2:35;7393:18;;7380:32;;7424:16;;;7421:36;;;7453:1;7450;7443:12;7421:36;;7476:52;7520:7;7509:8;7498:9;7494:24;7476:52;:::i;7539:882::-;7650:6;7658;7666;7674;7682;7735:3;7723:9;7714:7;7710:23;7706:33;7703:53;;;7752:1;7749;7742:12;7703:53;7788:9;7775:23;7765:33;;7848:2;7837:9;7833:18;7820:32;7861:28;7883:5;7861:28;:::i;:::-;7908:5;-1:-1:-1;7964:2:35;7949:18;;7936:32;-1:-1:-1;;;;;8017:14:35;;;8014:34;;;8044:1;8041;8034:12;8014:34;8067:50;8109:7;8100:6;8089:9;8085:22;8067:50;:::i;:::-;8057:60;;8169:2;8158:9;8154:18;8141:32;8126:47;;8182:33;8207:7;8182:33;:::i;:::-;8234:7;;-1:-1:-1;8294:3:35;8279:19;;8266:33;;8311:16;;;8308:36;;;8340:1;8337;8330:12;8308:36;;8363:52;8407:7;8396:8;8385:9;8381:24;8363:52;:::i;:::-;8353:62;;;7539:882;;;;;;;;:::o;8426:888::-;8540:6;8548;8556;8564;8572;8625:3;8613:9;8604:7;8600:23;8596:33;8593:53;;;8642:1;8639;8632:12;8593:53;8681:9;8668:23;8700:31;8725:5;8700:31;:::i;:::-;8750:5;-1:-1:-1;8806:2:35;8791:18;;8778:32;-1:-1:-1;;;;;8859:14:35;;;8856:34;;;8886:1;8883;8876:12;8856:34;8909:50;8951:7;8942:6;8931:9;8927:22;8909:50;:::i;:::-;8899:60;;9006:2;8995:9;8991:18;8978:32;8968:42;;9062:2;9051:9;9047:18;9034:32;9019:47;;9075:33;9100:7;9075:33;:::i;9319:878::-;9434:6;9442;9450;9458;9511:3;9499:9;9490:7;9486:23;9482:33;9479:53;;;9528:1;9525;9518:12;9479:53;9568:9;9555:23;-1:-1:-1;;;;;9638:2:35;9630:6;9627:14;9624:34;;;9654:1;9651;9644:12;9624:34;9677:50;9719:7;9710:6;9699:9;9695:22;9677:50;:::i;:::-;9667:60;;9780:2;9769:9;9765:18;9752:32;9736:48;;9809:2;9799:8;9796:16;9793:36;;;9825:1;9822;9815:12;10202:247;10261:6;10314:2;10302:9;10293:7;10289:23;10285:32;10282:52;;;10330:1;10327;10320:12;10282:52;10369:9;10356:23;10388:31;10413:5;10388:31;:::i;:::-;10438:5;10202:247;-1:-1:-1;;;10202:247:35:o;10454:258::-;10526:1;10536:113;10550:6;10547:1;10544:13;10536:113;;;10626:11;;;10620:18;10607:11;;;10600:39;10572:2;10565:10;10536:113;;;10667:6;10664:1;10661:13;10658:48;;;10702:1;10693:6;10688:3;10684:16;10677:27;10658:48;;10454:258;;;:::o;10717:1450::-;10915:4;10944:2;10984;10973:9;10969:18;11014:2;11003:9;10996:21;11037:6;11072;11066:13;11103:6;11095;11088:22;11129:2;11119:12;;11162:2;11151:9;11147:18;11140:25;;11224:2;11214:6;11211:1;11207:14;11196:9;11192:30;11188:39;11262:2;11254:6;11250:15;11283:1;11293:845;11307:6;11304:1;11301:13;11293:845;;;11372:22;;;-1:-1:-1;;11368:36:35;11356:49;;11428:13;;11500:9;;-1:-1:-1;;;;;11496:35:35;11481:51;;11575:11;;;11569:18;11552:15;;;11545:43;11627:11;;;11621:18;11464:4;11659:15;;;11652:27;;;11708:19;;11747:15;;;11740:33;;;11519:3;;11621:18;11812:71;11708:19;11857:15;;;11834:21;;;11812:71;:::i;:::-;11906:4;11967:11;;;11961:18;11954:26;11947:34;11930:15;;;11923:59;;;;-1:-1:-1;12116:12:35;;;;12048:2;12025:17;;;;-1:-1:-1;;12021:31:35;12009:44;;;12005:53;;;;12081:15;;;;11329:1;11322:9;11293:845;;;-1:-1:-1;12155:6:35;;10717:1450;-1:-1:-1;;;;;;;;10717:1450:35:o;12172:1491::-;12308:6;12316;12324;12332;12340;12393:3;12381:9;12372:7;12368:23;12364:33;12361:53;;;12410:1;12407;12400:12;12361:53;12450:9;12437:23;-1:-1:-1;;;;;12520:2:35;12512:6;12509:14;12506:34;;;12536:1;12533;12526:12;12506:34;12574:6;12563:9;12559:22;12549:32;;12619:7;12612:4;12608:2;12604:13;12600:27;12590:55;;12641:1;12638;12631:12;12590:55;12677:2;12664:16;12699:4;12722:2;12718;12715:10;12712:36;;;12728:18;;:::i;:::-;12774:2;12771:1;12767:10;12797:28;12821:2;12817;12813:11;12797:28;:::i;:::-;12859:15;;;12929:11;;;12925:20;;;12890:12;;;;12957:19;;;12954:39;;;12989:1;12986;12979:12;12954:39;13013:11;;;;13033:142;13049:6;13044:3;13041:15;13033:142;;;13115:17;;13103:30;;13066:12;;;;13153;;;;13033:142;;;13194:5;-1:-1:-1;13218:35:35;;-1:-1:-1;;13234:18:35;;;13218:35;:::i;:::-;13208:45;;;;13306:2;13295:9;13291:18;13278:32;13262:48;;13335:2;13325:8;13322:16;13319:36;;;13351:1;13348;13341:12;13319:36;13374:52;13418:7;13407:8;13396:9;13392:24;13374:52;:::i;:::-;13364:62;;13445:38;13479:2;13468:9;13464:18;13445:38;:::i;:::-;13435:48;;13536:3;13525:9;13521:19;13508:33;13492:49;;13566:2;13556:8;13553:16;13550:36;;;13582:1;13579;13572:12;13668:399;13882:34;13870:47;;13947:34;13942:2;13933:12;;13926:56;-1:-1:-1;;;14007:2:35;13998:12;;13991:42;14058:2;14049:12;;13668:399::o;14072:276::-;14203:3;14241:6;14235:13;14257:53;14303:6;14298:3;14291:4;14283:6;14279:17;14257:53;:::i;:::-;14326:16;;;;;14072:276;-1:-1:-1;;14072:276:35:o;14353:489::-;14612:25;;;14668:2;14653:18;;14646:34;;;;14711:2;14696:18;;14689:34;;;;14754:2;14739:18;;14732:34;-1:-1:-1;;;;;14803:32:35;14797:3;14782:19;;14775:61;14599:3;14584:19;;14353:489::o;15767:392::-;-1:-1:-1;;;16025:27:35;;16077:1;16068:11;;16061:27;;;;16113:2;16104:12;;16097:28;16150:2;16141:12;;15767:392::o;22995:184::-;23065:6;23118:2;23106:9;23097:7;23093:23;23089:32;23086:52;;;23134:1;23131;23124:12;23086:52;-1:-1:-1;23157:16:35;;22995:184;-1:-1:-1;22995:184:35:o;23366:251::-;23436:6;23489:2;23477:9;23468:7;23464:23;23460:32;23457:52;;;23505:1;23502;23495:12;23457:52;23537:9;23531:16;23556:31;23581:5;23556:31;:::i;23622:819::-;23717:6;23725;23733;23786:2;23774:9;23765:7;23761:23;23757:32;23754:52;;;23802:1;23799;23792:12;23754:52;23831:9;23825:16;23815:26;;23885:2;23874:9;23870:18;23864:25;-1:-1:-1;;;;;23904:6:35;23901:30;23898:50;;;23944:1;23941;23934:12;23898:50;23967:22;;24020:4;24012:13;;24008:27;-1:-1:-1;23998:55:35;;24049:1;24046;24039:12;23998:55;24078:2;24072:9;24103:49;24119:32;24148:2;24119:32;:::i;24103:49::-;24175:2;24168:5;24161:17;24215:7;24210:2;24205;24201;24197:11;24193:20;24190:33;24187:53;;;24236:1;24233;24226:12;24187:53;24249:54;24300:2;24295;24288:5;24284:14;24279:2;24275;24271:11;24249:54;:::i;:::-;24322:5;24312:15;;;;;24370:2;24359:9;24355:18;24349:25;24383:28;24405:5;24383:28;:::i;:::-;24430:5;24420:15;;;23622:819;;;;;:::o;24446:127::-;24507:10;24502:3;24498:20;24495:1;24488:31;24538:4;24535:1;24528:15;24562:4;24559:1;24552:15;24578:232;24617:3;-1:-1:-1;;24638:17:35;;24635:140;;;24697:10;24692:3;24688:20;24685:1;24678:31;24732:4;24729:1;24722:15;24760:4;24757:1;24750:15;24635:140;-1:-1:-1;24802:1:35;24791:13;;24578:232::o;25203:543::-;25421:13;;25364:3;;25395;;25474:4;25501:15;;;25364:3;25544:175;25558:6;25555:1;25552:13;25544:175;;;25621:13;;25607:28;;25657:14;;;;25694:15;;;;25580:1;25573:9;25544:175;;;-1:-1:-1;25735:5:35;;25203:543;-1:-1:-1;;;;;;25203:543:35:o",
  "language": "Solidity",
  "natspec": {
    "author": "Leonardo Urrego",
    "kind": "dev",
    "methods": {
      "GetHouseUserList(address)": {
        "notice": "The list of all users address",
        "params": {
          "_houseAddr": "address of the CLH"
        },
        "returns": {
          "arrUsers": "array of user address"
        }
      },
      "SignerOCBulkVote(uint256[],bool,string,address,bytes)": {
        "notice": "Retrieve the signer from Offchain BulkVote signature",
        "params": {
          "_houseAddr": "address of the CLH",
          "_justification": "Description of the vote",
          "_propIds": "Array with ID of the proposal to votes",
          "_signature": "EIP712 Signature",
          "_support": "is the Vote (True or False) for all proposals"
        },
        "returns": {
          "_0": "Wallet address of the signer"
        }
      },
      "SignerOCInvit(bool,string,address,bytes)": {
        "notice": "Retrieve the signer from Offchain Invitation signature",
        "params": {
          "_acceptance": "True for accept the invitation",
          "_houseAddr": "address of the CLH",
          "_nickname": "A nickname for the user",
          "_signature": "EIP712 Signature"
        },
        "returns": {
          "_0": "Wallet address of the signer"
        }
      },
      "SignerOCInvitUser(address,string,string,bool,uint256,address,bytes)": {
        "notice": "Retrieve the signer from Offchain Invite User signature",
        "params": {
          "_description": "A text for the proposal",
          "_houseAddr": "address of the CLH",
          "_isManager": "True if is for a manager",
          "_name": "Can be the nickname or other reference to the User",
          "_signature": "EIP712 Signature",
          "_walletAddr": "Address of the new user"
        },
        "returns": {
          "_0": "Wallet address of the signer"
        }
      },
      "SignerOCNewCLH(string,bool,bool,uint256,address,address,bytes)": {
        "notice": "Retrieve the signer from Offchain New house signature",
        "params": {
          "_govRuleMaxUsers": "Max users in the house",
          "_houseName": "Name of the CLH",
          "_houseOpen": "If is set to 1, the CLH is set to open",
          "_housePrivate": "If is set to 1, the CLH is set to private",
          "_pxyCLF": "address of the CLF",
          "_signature": "EIP712 Signature",
          "_whiteListNFT": "Address of NFT Collection for users invitation"
        },
        "returns": {
          "_0": "Wallet address of the signer"
        }
      },
      "SignerOCNewLock(uint256,uint256,uint256,string,address,bytes)": {
        "notice": "Retrieve the signer from Offchain New Lock signature",
        "params": {
          "_expirationDuration": "Expiration for lcok in seconds",
          "_houseAddr": "address of the CLH",
          "_keyPrice": "Price for each lock in wei",
          "_lockName": "Lock Name",
          "_maxNumberOfKeys": "How many locks",
          "_signature": "EIP712 Signature"
        },
        "returns": {
          "_0": "Wallet address of the signer"
        }
      },
      "SignerOCRemoveUser(address,string,uint256,address,bytes)": {
        "notice": "Retrieve the signer from Offchain Remove User signature",
        "params": {
          "_description": "About the proposal",
          "_houseAddr": "address of the CLH",
          "_signature": "EIP712 Signature",
          "_walletAddr": "user Address to be removed"
        },
        "returns": {
          "_0": "Wallet address of the signer"
        }
      },
      "SignerOCRequestToJoin(string,string,address,bytes)": {
        "notice": "Retrieve the signer from Offchain request to join signature",
        "params": {
          "_description": "About the request",
          "_houseAddr": "address of the CLH",
          "_name": "Nickname or other user identification",
          "_signature": "EIP712 Signature"
        },
        "returns": {
          "_0": "Wallet address of the signer"
        }
      },
      "SignerOCUpCLHName(string,address,bytes)": {
        "notice": "Retrieve the signer from Offchain Update CLH Name",
        "params": {
          "_houseAddr": "address of the CLH",
          "_houseName": "new CLH Name",
          "_signature": "EIP712 Signature"
        },
        "returns": {
          "_0": "Wallet address of the signer"
        }
      },
      "SignerOCUpCLHWLNFT(address,address,bytes)": {
        "notice": "Retrieve the signer from Offchain Update CLH Whitelist NFT",
        "params": {
          "_houseAddr": "address of the CLH",
          "_signature": "EIP712 Signature",
          "_whiteListNFT": "New contract address of NFT"
        },
        "returns": {
          "_0": "Wallet address of the signer"
        }
      },
      "SignerOCVote(uint256,bool,string,address,bytes)": {
        "notice": "Retrieve the signer from Offchain Vote signature",
        "params": {
          "_houseAddr": "address of the CLH",
          "_justification": "About your vote",
          "_propId": "ID of the proposal, based on `arrProposals`",
          "_signature": "EIP712 Signature",
          "_support": "True for accept, false to reject"
        },
        "returns": {
          "_0": "Wallet address of the signer"
        }
      },
      "SignerOfMsg(bytes32,bytes)": {
        "notice": "A funtion to verify the signer of a menssage",
        "params": {
          "_msghash": "Hash of the message",
          "_signature": "Signature of the message"
        },
        "returns": {
          "_0": "Signer address of the message"
        }
      }
    },
    "title": "Some view funtions to interact with a CLHouse",
    "version": 1
  },
  "offset": [
    184,
    15152
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x62423C75 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x62423C75 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x89AB062A EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0xAA25F2D7 EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0xAEA35CB1 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0xB698BE8D EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0xF0B00C9F EQ PUSH2 0x1B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDAFF036 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x2EE9C163 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x31E65582 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x44D72583 EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x476216DC EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x622ECA77 EQ PUSH2 0x135 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCC PUSH2 0xC7 CALLDATASIZE PUSH1 0x4 PUSH2 0x164E JUMP JUMPDEST PUSH2 0x1C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCC PUSH2 0xF7 CALLDATASIZE PUSH1 0x4 PUSH2 0x16FA JUMP JUMPDEST PUSH2 0x3B8 JUMP JUMPDEST PUSH2 0xCC PUSH2 0x10A CALLDATASIZE PUSH1 0x4 PUSH2 0x1784 JUMP JUMPDEST PUSH2 0x55F JUMP JUMPDEST PUSH2 0xCC PUSH2 0x11D CALLDATASIZE PUSH1 0x4 PUSH2 0x17E5 JUMP JUMPDEST PUSH2 0x6CC JUMP JUMPDEST PUSH2 0xCC PUSH2 0x130 CALLDATASIZE PUSH1 0x4 PUSH2 0x18A4 JUMP JUMPDEST PUSH2 0x8D7 JUMP JUMPDEST PUSH2 0xCC PUSH2 0x143 CALLDATASIZE PUSH1 0x4 PUSH2 0x1952 JUMP JUMPDEST PUSH2 0xA9E JUMP JUMPDEST PUSH2 0xCC PUSH2 0x156 CALLDATASIZE PUSH1 0x4 PUSH2 0x1998 JUMP JUMPDEST PUSH2 0xB61 JUMP JUMPDEST PUSH2 0xCC PUSH2 0x169 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A05 JUMP JUMPDEST PUSH2 0xC8F JUMP JUMPDEST PUSH2 0xCC PUSH2 0x17C CALLDATASIZE PUSH1 0x4 PUSH2 0x1A99 JUMP JUMPDEST PUSH2 0xE49 JUMP JUMPDEST PUSH2 0xCC PUSH2 0x18F CALLDATASIZE PUSH1 0x4 PUSH2 0x1AFD JUMP JUMPDEST PUSH2 0xFC5 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B4C JUMP JUMPDEST PUSH2 0x1134 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0x1BA0 JUMP JUMPDEST PUSH2 0xCC PUSH2 0x1C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C55 JUMP JUMPDEST PUSH2 0x140C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1D9 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 DUP4 DUP4 ADD DUP4 MSTORE PUSH1 0x5 DUP5 MSTORE PUSH5 0x302E322E3 PUSH1 0xDC SHL DUP5 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F5A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 PUSH2 0x225 SWAP3 ADD PUSH2 0x1DB5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 CHAINID DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x251 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DD1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2F4 SWAP1 PUSH32 0x7374724F434E65774C6F636B2875696E743235362065787069726174696F6E44 DUP2 MSTORE PUSH32 0x75726174696F6E2C75696E74323536206B657950726963652C75696E74323536 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x206D61784E756D6265724F664B6579732C737472696E67206C6F636B4E616D65 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x61 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP10 DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x31E SWAP2 SWAP1 PUSH2 0x1DB5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 SWAP1 DUP4 ADD SWAP7 SWAP1 SWAP7 MSTORE DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x388 SWAP3 SWAP2 SWAP1 PUSH2 0x1DFD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x3AA DUP2 DUP7 PUSH2 0xA9E JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3CA SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 DUP4 DUP4 ADD DUP4 MSTORE PUSH1 0x5 DUP5 MSTORE PUSH5 0x302E322E3 PUSH1 0xDC SHL DUP5 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F5A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 PUSH2 0x416 SWAP3 ADD PUSH2 0x1DB5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 CHAINID DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x442 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DD1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4A3 SWAP1 PUSH32 0x7374724F43496E76697428626F6F6C20616363657074616E63652C737472696E DUP2 MSTORE PUSH11 0x67206E69636B6E616D6529 PUSH1 0xA8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2B ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4CB SWAP2 SWAP1 PUSH2 0x1DB5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x504 SWAP4 SWAP3 SWAP2 SWAP1 SWAP3 DUP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x531 SWAP3 SWAP2 SWAP1 PUSH2 0x1DFD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x553 DUP2 DUP7 PUSH2 0xA9E JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x571 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 DUP4 DUP4 ADD DUP4 MSTORE PUSH1 0x5 DUP5 MSTORE PUSH5 0x302E322E3 PUSH1 0xDC SHL DUP5 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F5A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 PUSH2 0x5BD SWAP3 ADD PUSH2 0x1DB5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 CHAINID DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5E9 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DD1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x644 SWAP1 PUSH32 0x7374724F435570434C48574C4E465428616464726573732077686974654C6973 DUP2 MSTORE PUSH5 0x744E465429 PUSH1 0xD8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x25 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 SWAP1 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x69F SWAP3 SWAP2 SWAP1 PUSH2 0x1DFD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x6C1 DUP2 DUP7 PUSH2 0xA9E JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6DE SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 DUP4 DUP4 ADD DUP4 MSTORE PUSH1 0x5 DUP5 MSTORE PUSH5 0x302E322E3 PUSH1 0xDC SHL DUP5 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F5A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 PUSH2 0x72A SWAP3 ADD PUSH2 0x1DB5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 CHAINID DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x756 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DD1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x803 SWAP1 PUSH32 0x7374724F434E6577434C4828737472696E6720686F7573654E616D652C626F6F DUP2 MSTORE PUSH32 0x6C20686F757365507269766174652C626F6F6C20686F7573654F70656E2C7569 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6E7432353620676F7652756C654D617855736572732C61646472657373207768 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6974654C6973744E465429 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x6B ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP11 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x82A SWAP2 SWAP1 PUSH2 0x1DB5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 SWAP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP10 ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE DUP9 ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8A6 SWAP3 SWAP2 SWAP1 PUSH2 0x1DFD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x8C8 DUP2 DUP7 PUSH2 0xA9E JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8E9 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 DUP4 DUP4 ADD DUP4 MSTORE PUSH1 0x5 DUP5 MSTORE PUSH5 0x302E322E3 PUSH1 0xDC SHL DUP5 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F5A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 PUSH2 0x935 SWAP3 ADD PUSH2 0x1DB5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 CHAINID DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x961 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DD1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x9FA SWAP1 PUSH32 0x7374724F434E65775573657228616464726573732077616C6C6574416464722C DUP2 MSTORE PUSH32 0x737472696E67206E616D652C737472696E67206465736372697074696F6E2C62 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6F6F6C2069734D616E616765722C75696E743235362064656C617954696D6529 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA22 SWAP2 SWAP1 PUSH2 0x1DB5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP11 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA49 SWAP2 SWAP1 PUSH2 0x1DB5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 SWAP1 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP8 ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH2 0x879 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x41 EQ PUSH2 0xAEC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x84C2C840E6D2CEDCC2E8EAE4CA40D8CADCCEE8D PUSH1 0x63 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x40 DUP1 DUP6 ADD MLOAD PUSH1 0x60 DUP1 DUP8 ADD MLOAD DUP4 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE SWAP7 DUP2 ADD DUP1 DUP7 MSTORE DUP11 SWAP1 MSTORE SWAP6 BYTE SWAP3 DUP6 ADD DUP4 SWAP1 MSTORE DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 DUP5 ADD DUP2 SWAP1 MSTORE SWAP2 SWAP3 PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB4C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB73 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 DUP4 DUP4 ADD DUP4 MSTORE PUSH1 0x5 DUP5 MSTORE PUSH5 0x302E322E3 PUSH1 0xDC SHL DUP5 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F5A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 PUSH2 0xBBF SWAP3 ADD PUSH2 0x1DB5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 CHAINID DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xBEB SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DD1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC38 SWAP1 PUSH32 0x7374724F435570434C484E616D6528737472696E6720686F7573654E616D6529 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC5F SWAP2 SWAP1 PUSH2 0x1DB5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x672 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCA1 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 DUP4 DUP4 ADD DUP4 MSTORE PUSH1 0x5 DUP5 MSTORE PUSH5 0x302E322E3 PUSH1 0xDC SHL DUP5 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F5A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 PUSH2 0xCED SWAP3 ADD PUSH2 0x1DB5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 CHAINID DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD19 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DD1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD8C SWAP1 PUSH32 0x7374724F43566F74652875696E743235362070726F7049642C626F6F6C207375 DUP2 MSTORE PUSH32 0x70706F72742C737472696E67206A757374696669636174696F6E290000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3B ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDB5 SWAP2 SWAP1 PUSH2 0x1DB5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 SWAP1 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE1A SWAP3 SWAP2 SWAP1 PUSH2 0x1DFD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0xE3C DUP2 DUP7 PUSH2 0xA9E JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE5B SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 DUP4 DUP4 ADD DUP4 MSTORE PUSH1 0x5 DUP5 MSTORE PUSH5 0x302E322E3 PUSH1 0xDC SHL DUP5 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F5A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 PUSH2 0xEA7 SWAP3 ADD PUSH2 0x1DB5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 CHAINID DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xED3 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DD1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF54 SWAP1 PUSH32 0x7374724F4344656C5573657228616464726573732077616C6C6574416464722C DUP2 MSTORE PUSH32 0x737472696E67206465736372697074696F6E2C75696E743235362064656C6179 PUSH1 0x20 DUP3 ADD MSTORE PUSH5 0x54696D6529 PUSH1 0xD8 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x45 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF7C SWAP2 SWAP1 PUSH2 0x1DB5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDED SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xFD7 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 DUP4 DUP4 ADD DUP4 MSTORE PUSH1 0x5 DUP5 MSTORE PUSH5 0x302E322E3 PUSH1 0xDC SHL DUP5 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F5A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 PUSH2 0x1023 SWAP3 ADD PUSH2 0x1DB5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 CHAINID DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x104F SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DD1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x10B1 SWAP1 PUSH32 0x7374724F435265717565737428737472696E67206E616D652C737472696E6720 DUP2 MSTORE PUSH12 0x6465736372697074696F6E29 PUSH1 0xA0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2C ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x10D8 SWAP2 SWAP1 PUSH2 0x1DB5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x10FF SWAP2 SWAP1 PUSH2 0x1DB5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 SWAP1 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD PUSH2 0x504 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x19A50F49 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x117B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x119F SWAP2 SWAP1 PUSH2 0x1E18 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA693649A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11E1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1205 SWAP2 SWAP1 PUSH2 0x1E18 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x121F JUMPI PUSH2 0x121F PUSH2 0x1563 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1286 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1273 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x123D JUMPI SWAP1 POP JUMPDEST POP SWAP4 POP PUSH1 0x0 PUSH1 0x1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1402 JUMPI PUSH2 0x12CC PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8AD0207 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH4 0x22B4081C SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1311 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1335 SWAP2 SWAP1 PUSH2 0x1E31 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP1 DUP4 MSTORE PUSH1 0x40 MLOAD PUSH4 0x9D2FCB87 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP8 AND SWAP1 PUSH4 0x9D2FCB87 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1382 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x13AA SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1E4E JUMP JUMPDEST ISZERO ISZERO PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE ISZERO PUSH2 0x13EF JUMPI DUP1 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x13D5 JUMPI PUSH2 0x13D5 PUSH2 0x1EE4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP3 DUP1 PUSH2 0x13EB SWAP1 PUSH2 0x1EFA JUMP JUMPDEST SWAP4 POP POP JUMPDEST POP DUP1 PUSH2 0x13FA DUP2 PUSH2 0x1EFA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x128E JUMP JUMPDEST POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x141E SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 DUP4 DUP4 ADD DUP4 MSTORE PUSH1 0x5 DUP5 MSTORE PUSH5 0x302E322E3 PUSH1 0xDC SHL DUP5 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F5A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 PUSH2 0x146A SWAP3 ADD PUSH2 0x1DB5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 CHAINID DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1496 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DD1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1514 SWAP1 PUSH32 0x7374724F4342756C6B566F74652875696E743235365B5D2070726F704964732C DUP2 MSTORE PUSH32 0x626F6F6C20737570706F72742C737472696E67206A757374696669636174696F PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x6E29 PUSH1 0xF0 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x42 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x153B SWAP2 SWAP1 PUSH2 0x1F23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDB5 SWAP2 SWAP1 PUSH2 0x1DB5 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x15A1 JUMPI PUSH2 0x15A1 PUSH2 0x1563 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x15C2 JUMPI PUSH2 0x15C2 PUSH2 0x1563 JUMP JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x15E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x15F4 PUSH2 0x15EF DUP3 PUSH2 0x15A9 JUMP JUMPDEST PUSH2 0x1579 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x1609 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x163B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x1649 DUP2 PUSH2 0x1626 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1667 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1693 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x169F DUP11 DUP4 DUP12 ADD PUSH2 0x15D0 JUMP JUMPDEST SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP2 POP PUSH2 0x16B1 DUP3 PUSH2 0x1626 JUMP JUMPDEST SWAP1 SWAP3 POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x16C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16D4 DUP10 DUP3 DUP11 ADD PUSH2 0x15D0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x163B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x1649 DUP2 PUSH2 0x16E1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1710 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x171B DUP2 PUSH2 0x16E1 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1737 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1743 DUP9 DUP4 DUP10 ADD PUSH2 0x15D0 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH2 0x1755 DUP3 PUSH2 0x1626 JUMP JUMPDEST SWAP1 SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x176B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1778 DUP8 DUP3 DUP9 ADD PUSH2 0x15D0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1799 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x17A4 DUP2 PUSH2 0x1626 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x17B4 DUP2 PUSH2 0x1626 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x17CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17DB DUP7 DUP3 DUP8 ADD PUSH2 0x15D0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1800 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1817 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1823 DUP12 DUP4 DUP13 ADD PUSH2 0x15D0 JUMP JUMPDEST SWAP9 POP PUSH1 0x20 DUP11 ADD CALLDATALOAD SWAP2 POP PUSH2 0x1835 DUP3 PUSH2 0x16E1 JUMP JUMPDEST SWAP1 SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP1 PUSH2 0x1847 DUP3 PUSH2 0x16E1 JUMP JUMPDEST SWAP1 SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP1 PUSH2 0x1860 DUP3 PUSH2 0x1626 JUMP JUMPDEST SWAP1 SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD SWAP1 PUSH2 0x1872 DUP3 PUSH2 0x1626 JUMP JUMPDEST SWAP1 SWAP3 POP PUSH1 0xC0 DUP10 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x1888 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1895 DUP11 DUP3 DUP12 ADD PUSH2 0x15D0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x18BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x18CA DUP2 PUSH2 0x1626 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x18E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18F2 DUP12 DUP4 DUP13 ADD PUSH2 0x15D0 JUMP JUMPDEST SWAP8 POP PUSH1 0x40 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1908 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1914 DUP12 DUP4 DUP13 ADD PUSH2 0x15D0 JUMP JUMPDEST SWAP7 POP PUSH1 0x60 DUP11 ADD CALLDATALOAD SWAP2 POP PUSH2 0x1926 DUP3 PUSH2 0x16E1 JUMP JUMPDEST DUP2 SWAP6 POP PUSH1 0x80 DUP11 ADD CALLDATALOAD SWAP5 POP PUSH2 0x193C PUSH1 0xA0 DUP12 ADD PUSH2 0x163E JUMP JUMPDEST SWAP4 POP PUSH1 0xC0 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1888 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1965 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1982 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x198E DUP6 DUP3 DUP7 ADD PUSH2 0x15D0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x19AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x19C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19D0 DUP8 DUP4 DUP9 ADD PUSH2 0x15D0 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH2 0x19E2 DUP3 PUSH2 0x1626 JUMP JUMPDEST SWAP1 SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x19F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17DB DUP7 DUP3 DUP8 ADD PUSH2 0x15D0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1A1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x1A2F DUP2 PUSH2 0x16E1 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1A4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A57 DUP10 DUP4 DUP11 ADD PUSH2 0x15D0 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP PUSH2 0x1A69 DUP3 PUSH2 0x1626 JUMP JUMPDEST SWAP1 SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x1A7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A8C DUP9 DUP3 DUP10 ADD PUSH2 0x15D0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1AB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x1ABC DUP2 PUSH2 0x1626 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1AD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AE4 DUP10 DUP4 DUP11 ADD PUSH2 0x15D0 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP PUSH2 0x1A69 DUP3 PUSH2 0x1626 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1B13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1B2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B36 DUP9 DUP4 DUP10 ADD PUSH2 0x15D0 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1737 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1B69 DUP2 PUSH2 0x1626 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B8B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1B73 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1B9A JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 SWAP3 POP DUP3 DUP7 ADD SWAP2 POP DUP3 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD DUP5 DUP9 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C47 JUMPI DUP9 DUP4 SUB PUSH1 0x3F NOT ADD DUP6 MSTORE DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE DUP8 DUP2 ADD MLOAD DUP9 DUP6 ADD MSTORE DUP7 DUP2 ADD MLOAD PUSH1 0x80 DUP9 DUP7 ADD DUP2 SWAP1 MSTORE DUP2 MLOAD SWAP1 DUP7 ADD DUP2 SWAP1 MSTORE PUSH1 0xA0 SWAP2 SWAP1 PUSH2 0x1C16 DUP2 DUP5 DUP10 ADD DUP5 DUP15 ADD PUSH2 0x1B70 JUMP JUMPDEST PUSH1 0x60 SWAP4 DUP5 ADD MLOAD ISZERO ISZERO SWAP4 DUP8 ADD SWAP4 SWAP1 SWAP4 MSTORE POP SWAP6 DUP9 ADD SWAP6 PUSH1 0x1F SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP4 ADD SWAP1 SWAP3 ADD SWAP2 SWAP1 DUP7 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1BC7 JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1C6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1C84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1C98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 DUP3 DUP3 GT ISZERO PUSH2 0x1CAC JUMPI PUSH2 0x1CAC PUSH2 0x1563 JUMP JUMPDEST DUP2 PUSH1 0x5 SHL PUSH2 0x1CBB DUP3 DUP3 ADD PUSH2 0x1579 JUMP JUMPDEST SWAP3 DUP4 MSTORE DUP5 DUP2 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP1 DUP14 DUP6 GT ISZERO PUSH2 0x1CD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 DUP4 ADD SWAP6 JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0x1CF3 JUMPI DUP7 CALLDATALOAD DUP3 MSTORE SWAP6 DUP4 ADD SWAP6 SWAP1 DUP4 ADD SWAP1 PUSH2 0x1CDA JUMP JUMPDEST SWAP11 POP PUSH2 0x1D03 SWAP2 POP POP DUP11 DUP3 ADD PUSH2 0x16EF JUMP JUMPDEST SWAP8 POP POP POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D27 DUP10 DUP4 DUP11 ADD PUSH2 0x15D0 JUMP JUMPDEST SWAP5 POP PUSH2 0x1D35 PUSH1 0x60 DUP10 ADD PUSH2 0x163E JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x454950373132446F6D61696E28737472696E67206E616D652C737472696E6720 DUP2 MSTORE PUSH32 0x76657273696F6E2C75696E7432353620636861696E49642C6164647265737320 PUSH1 0x20 DUP3 ADD MSTORE PUSH18 0x766572696679696E67436F6E747261637429 PUSH1 0x70 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x52 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1DC7 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1B70 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1B69 DUP2 PUSH2 0x1626 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD SWAP3 POP PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1E80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 ADD PUSH1 0x1F DUP2 ADD DUP7 SGT PUSH2 0x1E91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x1E9F PUSH2 0x15EF DUP3 PUSH2 0x15A9 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP8 PUSH1 0x20 DUP4 DUP6 ADD ADD GT ISZERO PUSH2 0x1EB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1EC5 DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1B70 JUMP JUMPDEST DUP1 SWAP5 POP POP POP POP PUSH1 0x40 DUP5 ADD MLOAD PUSH2 0x1ED9 DUP2 PUSH2 0x16E1 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1F1C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH1 0x20 DUP1 DUP7 ADD DUP5 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F4D JUMPI DUP2 MLOAD DUP6 MSTORE SWAP4 DUP3 ADD SWAP4 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1F31 JUMP JUMPDEST POP SWAP3 SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID ADD BALANCE DUP9 SWAP6 0xAF 0x1F PUSH14 0xB161B2BA745B8E57A6B46EFAD77D PUSH20 0x6630379EC69C3CD4C875A2646970667358221220 PUSH18 0xCABB830CFA3BC07B998F94A107A2B82C2656 0x4C MLOAD 0xDF BASEFEE PUSH7 0xAB65B88EBFE23A REVERT PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        184,
        15152
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "CALLVALUE",
      "path": "17"
    },
    "6": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "DUP1",
      "path": "17"
    },
    "7": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "8": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "12": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "DUP1",
      "path": "17"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "REVERT",
      "path": "17"
    },
    "16": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "17": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "POP",
      "path": "17"
    },
    "18": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "21": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "LT",
      "path": "17"
    },
    "22": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xB4"
    },
    "25": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "26": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "CALLDATALOAD",
      "path": "17"
    },
    "29": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "SHR",
      "path": "17"
    },
    "32": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "DUP1",
      "path": "17"
    },
    "33": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x62423C75"
    },
    "38": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "GT",
      "path": "17"
    },
    "39": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x71"
    },
    "42": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "43": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "DUP1",
      "path": "17"
    },
    "44": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x62423C75"
    },
    "49": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "EQ",
      "path": "17"
    },
    "50": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x148"
    },
    "53": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "54": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "DUP1",
      "path": "17"
    },
    "55": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x89AB062A"
    },
    "60": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "EQ",
      "path": "17"
    },
    "61": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x15B"
    },
    "64": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "65": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "DUP1",
      "path": "17"
    },
    "66": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xAA25F2D7"
    },
    "71": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "EQ",
      "path": "17"
    },
    "72": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x16E"
    },
    "75": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "76": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "DUP1",
      "path": "17"
    },
    "77": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xAEA35CB1"
    },
    "82": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "EQ",
      "path": "17"
    },
    "83": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x181"
    },
    "86": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "87": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "DUP1",
      "path": "17"
    },
    "88": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xB698BE8D"
    },
    "93": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "EQ",
      "path": "17"
    },
    "94": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x194"
    },
    "97": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "98": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "DUP1",
      "path": "17"
    },
    "99": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xF0B00C9F"
    },
    "104": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "EQ",
      "path": "17"
    },
    "105": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1B4"
    },
    "108": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "109": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "DUP1",
      "path": "17"
    },
    "112": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "REVERT",
      "path": "17"
    },
    "113": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "114": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "DUP1",
      "path": "17"
    },
    "115": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xDAFF036"
    },
    "120": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "EQ",
      "path": "17"
    },
    "121": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xB9"
    },
    "124": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "125": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "DUP1",
      "path": "17"
    },
    "126": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x2EE9C163"
    },
    "131": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "EQ",
      "path": "17"
    },
    "132": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xE9"
    },
    "135": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "136": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "DUP1",
      "path": "17"
    },
    "137": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x31E65582"
    },
    "142": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "EQ",
      "path": "17"
    },
    "143": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xFC"
    },
    "146": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "147": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "DUP1",
      "path": "17"
    },
    "148": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x44D72583"
    },
    "153": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "EQ",
      "path": "17"
    },
    "154": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x10F"
    },
    "157": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "158": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "DUP1",
      "path": "17"
    },
    "159": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x476216DC"
    },
    "164": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "EQ",
      "path": "17"
    },
    "165": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x122"
    },
    "168": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "169": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "DUP1",
      "path": "17"
    },
    "170": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x622ECA77"
    },
    "175": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "EQ",
      "path": "17"
    },
    "176": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x135"
    },
    "179": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "180": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "181": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "183": {
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "DUP1",
      "path": "17"
    },
    "184": {
      "first_revert": true,
      "fn": null,
      "offset": [
        184,
        15152
      ],
      "op": "REVERT",
      "path": "17"
    },
    "185": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12044,
        13044
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "186": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12044,
        13044
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xCC"
    },
    "189": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12044,
        13044
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xC7"
    },
    "192": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12044,
        13044
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "193": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12044,
        13044
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "195": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12044,
        13044
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x164E"
    },
    "198": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "jump": "i",
      "offset": [
        12044,
        13044
      ],
      "op": "JUMP",
      "path": "17"
    },
    "199": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12044,
        13044
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "200": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12044,
        13044
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1C7"
    },
    "203": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "jump": "i",
      "offset": [
        12044,
        13044
      ],
      "op": "JUMP",
      "path": "17"
    },
    "204": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12044,
        13044
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "205": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12044,
        13044
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "207": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12044,
        13044
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "208": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "212": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "214": {
      "op": "SHL"
    },
    "215": {
      "op": "SUB"
    },
    "216": {
      "op": "SWAP1"
    },
    "217": {
      "op": "SWAP2"
    },
    "218": {
      "op": "AND"
    },
    "219": {
      "op": "DUP2"
    },
    "220": {
      "op": "MSTORE"
    },
    "221": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "223": {
      "op": "ADD"
    },
    "224": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12044,
        13044
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "225": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12044,
        13044
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "227": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12044,
        13044
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "228": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12044,
        13044
      ],
      "op": "DUP1",
      "path": "17"
    },
    "229": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12044,
        13044
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "230": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12044,
        13044
      ],
      "op": "SUB",
      "path": "17"
    },
    "231": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12044,
        13044
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "232": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12044,
        13044
      ],
      "op": "RETURN",
      "path": "17"
    },
    "233": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        2555,
        3410
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "234": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        2555,
        3410
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xCC"
    },
    "237": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        2555,
        3410
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xF7"
    },
    "240": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        2555,
        3410
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "241": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        2555,
        3410
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "243": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        2555,
        3410
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x16FA"
    },
    "246": {
      "fn": "CLHouseApi.SignerOCInvit",
      "jump": "i",
      "offset": [
        2555,
        3410
      ],
      "op": "JUMP",
      "path": "17"
    },
    "247": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        2555,
        3410
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "248": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        2555,
        3410
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3B8"
    },
    "251": {
      "fn": "CLHouseApi.SignerOCInvit",
      "jump": "i",
      "offset": [
        2555,
        3410
      ],
      "op": "JUMP",
      "path": "17"
    },
    "252": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14370,
        15150
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "253": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14370,
        15150
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xCC"
    },
    "256": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14370,
        15150
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x10A"
    },
    "259": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14370,
        15150
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "260": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14370,
        15150
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "262": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14370,
        15150
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1784"
    },
    "265": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "jump": "i",
      "offset": [
        14370,
        15150
      ],
      "op": "JUMP",
      "path": "17"
    },
    "266": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14370,
        15150
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "267": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14370,
        15150
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x55F"
    },
    "270": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "jump": "i",
      "offset": [
        14370,
        15150
      ],
      "op": "JUMP",
      "path": "17"
    },
    "271": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10525,
        11635
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "272": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10525,
        11635
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xCC"
    },
    "275": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10525,
        11635
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x11D"
    },
    "278": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10525,
        11635
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "279": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10525,
        11635
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "281": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10525,
        11635
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x17E5"
    },
    "284": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "jump": "i",
      "offset": [
        10525,
        11635
      ],
      "op": "JUMP",
      "path": "17"
    },
    "285": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10525,
        11635
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "286": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10525,
        11635
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x6CC"
    },
    "289": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "jump": "i",
      "offset": [
        10525,
        11635
      ],
      "op": "JUMP",
      "path": "17"
    },
    "290": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        6483,
        7547
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "291": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        6483,
        7547
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xCC"
    },
    "294": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        6483,
        7547
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x130"
    },
    "297": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        6483,
        7547
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "298": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        6483,
        7547
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "300": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        6483,
        7547
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x18A4"
    },
    "303": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "jump": "i",
      "offset": [
        6483,
        7547
      ],
      "op": "JUMP",
      "path": "17"
    },
    "304": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        6483,
        7547
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "305": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        6483,
        7547
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x8D7"
    },
    "308": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "jump": "i",
      "offset": [
        6483,
        7547
      ],
      "op": "JUMP",
      "path": "17"
    },
    "309": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        413,
        1105
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "310": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        413,
        1105
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xCC"
    },
    "313": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        413,
        1105
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x143"
    },
    "316": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        413,
        1105
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "317": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        413,
        1105
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "319": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        413,
        1105
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1952"
    },
    "322": {
      "fn": "CLHouseApi.SignerOfMsg",
      "jump": "i",
      "offset": [
        413,
        1105
      ],
      "op": "JUMP",
      "path": "17"
    },
    "323": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        413,
        1105
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "324": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        413,
        1105
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xA9E"
    },
    "327": {
      "fn": "CLHouseApi.SignerOfMsg",
      "jump": "i",
      "offset": [
        413,
        1105
      ],
      "op": "JUMP",
      "path": "17"
    },
    "328": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13288,
        14099
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "329": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13288,
        14099
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xCC"
    },
    "332": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13288,
        14099
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x156"
    },
    "335": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13288,
        14099
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "336": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13288,
        14099
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "338": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13288,
        14099
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1998"
    },
    "341": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "jump": "i",
      "offset": [
        13288,
        14099
      ],
      "op": "JUMP",
      "path": "17"
    },
    "342": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13288,
        14099
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "343": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13288,
        14099
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xB61"
    },
    "346": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "jump": "i",
      "offset": [
        13288,
        14099
      ],
      "op": "JUMP",
      "path": "17"
    },
    "347": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        3785,
        4689
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "348": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        3785,
        4689
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xCC"
    },
    "351": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        3785,
        4689
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x169"
    },
    "354": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        3785,
        4689
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "355": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        3785,
        4689
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "357": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        3785,
        4689
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1A05"
    },
    "360": {
      "fn": "CLHouseApi.SignerOCVote",
      "jump": "i",
      "offset": [
        3785,
        4689
      ],
      "op": "JUMP",
      "path": "17"
    },
    "361": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        3785,
        4689
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "362": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        3785,
        4689
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xC8F"
    },
    "365": {
      "fn": "CLHouseApi.SignerOCVote",
      "jump": "i",
      "offset": [
        3785,
        4689
      ],
      "op": "JUMP",
      "path": "17"
    },
    "366": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        7860,
        8787
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "367": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        7860,
        8787
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xCC"
    },
    "370": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        7860,
        8787
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x17C"
    },
    "373": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        7860,
        8787
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "374": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        7860,
        8787
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "376": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        7860,
        8787
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1A99"
    },
    "379": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "jump": "i",
      "offset": [
        7860,
        8787
      ],
      "op": "JUMP",
      "path": "17"
    },
    "380": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        7860,
        8787
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "381": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        7860,
        8787
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xE49"
    },
    "384": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "jump": "i",
      "offset": [
        7860,
        8787
      ],
      "op": "JUMP",
      "path": "17"
    },
    "385": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9108,
        10009
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "386": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9108,
        10009
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xCC"
    },
    "389": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9108,
        10009
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x18F"
    },
    "392": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9108,
        10009
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "393": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9108,
        10009
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "395": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9108,
        10009
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1AFD"
    },
    "398": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "jump": "i",
      "offset": [
        9108,
        10009
      ],
      "op": "JUMP",
      "path": "17"
    },
    "399": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9108,
        10009
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "400": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9108,
        10009
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xFC5"
    },
    "403": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "jump": "i",
      "offset": [
        9108,
        10009
      ],
      "op": "JUMP",
      "path": "17"
    },
    "404": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1379,
        2237
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "405": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1379,
        2237
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1A7"
    },
    "408": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1379,
        2237
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1A2"
    },
    "411": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1379,
        2237
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "412": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1379,
        2237
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "414": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1379,
        2237
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1B4C"
    },
    "417": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        1379,
        2237
      ],
      "op": "JUMP",
      "path": "17"
    },
    "418": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1379,
        2237
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "419": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1379,
        2237
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1134"
    },
    "422": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        1379,
        2237
      ],
      "op": "JUMP",
      "path": "17"
    },
    "423": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1379,
        2237
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "424": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1379,
        2237
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "426": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1379,
        2237
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "427": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1379,
        2237
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xE0"
    },
    "430": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1379,
        2237
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "431": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1379,
        2237
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "432": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1379,
        2237
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1BA0"
    },
    "435": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        1379,
        2237
      ],
      "op": "JUMP",
      "path": "17"
    },
    "436": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5085,
        6044
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "437": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5085,
        6044
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xCC"
    },
    "440": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5085,
        6044
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1C2"
    },
    "443": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5085,
        6044
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "444": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5085,
        6044
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "446": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5085,
        6044
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1C55"
    },
    "449": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "jump": "i",
      "offset": [
        5085,
        6044
      ],
      "op": "JUMP",
      "path": "17"
    },
    "450": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5085,
        6044
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "451": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5085,
        6044
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x140C"
    },
    "454": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "jump": "i",
      "offset": [
        5085,
        6044
      ],
      "op": "JUMP",
      "path": "17"
    },
    "455": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12044,
        13044
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "456": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12307,
        12314
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "458": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12331,
        12355
      ],
      "op": "DUP1",
      "path": "17"
    },
    "459": {
      "offset": [
        692,
        808
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "461": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        692,
        808
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "462": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        692,
        808
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "464": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        692,
        808
      ],
      "op": "ADD",
      "path": "19"
    },
    "465": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        692,
        808
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1D9"
    },
    "468": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        692,
        808
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "469": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        692,
        808
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1D4B"
    },
    "472": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "jump": "i",
      "offset": [
        692,
        808
      ],
      "op": "JUMP",
      "path": "19"
    },
    "473": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        692,
        808
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "474": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        692,
        808
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "476": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        692,
        808
      ],
      "op": "DUP1",
      "path": "19"
    },
    "477": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        692,
        808
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "478": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "480": {
      "op": "NOT"
    },
    "481": {
      "offset": [
        692,
        808
      ],
      "op": "DUP2",
      "path": "19"
    },
    "482": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        692,
        808
      ],
      "op": "DUP5",
      "path": "19"
    },
    "483": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        692,
        808
      ],
      "op": "SUB",
      "path": "19"
    },
    "484": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        692,
        808
      ],
      "op": "ADD",
      "path": "19"
    },
    "485": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        692,
        808
      ],
      "op": "DUP2",
      "path": "19"
    },
    "486": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        692,
        808
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "487": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        692,
        808
      ],
      "op": "DUP3",
      "path": "19"
    },
    "488": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        692,
        808
      ],
      "op": "DUP3",
      "path": "19"
    },
    "489": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        692,
        808
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "490": {
      "offset": [
        677,
        810
      ],
      "op": "DUP1",
      "path": "19"
    },
    "491": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        677,
        810
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "492": {
      "offset": [
        692,
        808
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "494": {
      "offset": [
        677,
        810
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "495": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        677,
        810
      ],
      "op": "DUP3",
      "path": "19"
    },
    "496": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        677,
        810
      ],
      "op": "ADD",
      "path": "19"
    },
    "497": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        677,
        810
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "498": {
      "offset": [
        607,
        626
      ],
      "op": "DUP4",
      "path": "19"
    },
    "499": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        607,
        626
      ],
      "op": "DUP4",
      "path": "19"
    },
    "500": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        607,
        626
      ],
      "op": "ADD",
      "path": "19"
    },
    "501": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        607,
        626
      ],
      "op": "DUP4",
      "path": "19"
    },
    "502": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        607,
        626
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "503": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        607,
        626
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x5"
    },
    "505": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        607,
        626
      ],
      "op": "DUP5",
      "path": "19"
    },
    "506": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        607,
        626
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "507": {
      "op": "PUSH5",
      "value": "0x302E322E3"
    },
    "513": {
      "op": "PUSH1",
      "value": "0xDC"
    },
    "515": {
      "op": "SHL"
    },
    "516": {
      "offset": [
        607,
        626
      ],
      "op": "DUP5",
      "path": "19"
    },
    "517": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        607,
        626
      ],
      "op": "DUP4",
      "path": "19"
    },
    "518": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        607,
        626
      ],
      "op": "ADD",
      "path": "19"
    },
    "519": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        607,
        626
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "520": {
      "offset": [
        589,
        628
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "521": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        589,
        628
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "522": {
      "offset": [
        677,
        810
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "523": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        677,
        810
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "524": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "526": {
      "op": "DUP1"
    },
    "527": {
      "op": "MLOAD"
    },
    "528": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "530": {
      "op": "PUSH2",
      "value": "0x1F5A"
    },
    "533": {
      "op": "DUP4"
    },
    "534": {
      "op": "CODECOPY"
    },
    "535": {
      "op": "DUP2"
    },
    "536": {
      "op": "MLOAD"
    },
    "537": {
      "op": "SWAP2"
    },
    "538": {
      "op": "MSTORE"
    },
    "539": {
      "offset": [
        507,
        527
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "540": {
      "offset": [
        589,
        628
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x225"
    },
    "543": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        589,
        628
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "544": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        589,
        628
      ],
      "op": "ADD",
      "path": "19"
    },
    "545": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        589,
        628
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1DB5"
    },
    "548": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "jump": "i",
      "offset": [
        589,
        628
      ],
      "op": "JUMP",
      "path": "19"
    },
    "549": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        589,
        628
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "550": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        589,
        628
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "552": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        589,
        628
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "553": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        589,
        628
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "555": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        589,
        628
      ],
      "op": "DUP2",
      "path": "19"
    },
    "556": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        589,
        628
      ],
      "op": "DUP4",
      "path": "19"
    },
    "557": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        589,
        628
      ],
      "op": "SUB",
      "path": "19"
    },
    "558": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        589,
        628
      ],
      "op": "SUB",
      "path": "19"
    },
    "559": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        589,
        628
      ],
      "op": "DUP2",
      "path": "19"
    },
    "560": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        589,
        628
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "561": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        589,
        628
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "562": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        589,
        628
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "564": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        589,
        628
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "565": {
      "offset": [
        574,
        630
      ],
      "op": "DUP1",
      "path": "19"
    },
    "566": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        574,
        630
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "567": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        574,
        630
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "568": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        574,
        630
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "570": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        574,
        630
      ],
      "op": "ADD",
      "path": "19"
    },
    "571": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        574,
        630
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "572": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12535,
        12548
      ],
      "op": "CHAINID",
      "path": "17"
    },
    "573": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12566,
        12576
      ],
      "op": "DUP8",
      "path": "17"
    },
    "574": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12381,
        12590
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "576": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12381,
        12590
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "577": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12381,
        12590
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "579": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12381,
        12590
      ],
      "op": "ADD",
      "path": "17"
    },
    "580": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12381,
        12590
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x251"
    },
    "583": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12381,
        12590
      ],
      "op": "SWAP6",
      "path": "17"
    },
    "584": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12381,
        12590
      ],
      "op": "SWAP5",
      "path": "17"
    },
    "585": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12381,
        12590
      ],
      "op": "SWAP4",
      "path": "17"
    },
    "586": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12381,
        12590
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "587": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12381,
        12590
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "588": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12381,
        12590
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "589": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12381,
        12590
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1DD1"
    },
    "592": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "jump": "i",
      "offset": [
        12381,
        12590
      ],
      "op": "JUMP",
      "path": "17"
    },
    "593": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12381,
        12590
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "594": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12381,
        12590
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "596": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12381,
        12590
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "597": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12381,
        12590
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "599": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12381,
        12590
      ],
      "op": "DUP2",
      "path": "17"
    },
    "600": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12381,
        12590
      ],
      "op": "DUP4",
      "path": "17"
    },
    "601": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12381,
        12590
      ],
      "op": "SUB",
      "path": "17"
    },
    "602": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12381,
        12590
      ],
      "op": "SUB",
      "path": "17"
    },
    "603": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12381,
        12590
      ],
      "op": "DUP2",
      "path": "17"
    },
    "604": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12381,
        12590
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "605": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12381,
        12590
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "606": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12381,
        12590
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "608": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12381,
        12590
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "609": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12358,
        12600
      ],
      "op": "DUP1",
      "path": "17"
    },
    "610": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12358,
        12600
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "611": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12358,
        12600
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "612": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12358,
        12600
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "614": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12358,
        12600
      ],
      "op": "ADD",
      "path": "17"
    },
    "615": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12358,
        12600
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "616": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12331,
        12600
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "617": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12331,
        12600
      ],
      "op": "POP",
      "path": "17"
    },
    "618": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12611,
        12626
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "620": {
      "offset": [
        2013,
        2144
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "622": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        2013,
        2144
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "623": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        2013,
        2144
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "625": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        2013,
        2144
      ],
      "op": "ADD",
      "path": "19"
    },
    "626": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        2013,
        2144
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2F4"
    },
    "629": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        2013,
        2144
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "630": {
      "op": "PUSH32",
      "value": "0x7374724F434E65774C6F636B2875696E743235362065787069726174696F6E44"
    },
    "663": {
      "op": "DUP2"
    },
    "664": {
      "op": "MSTORE"
    },
    "665": {
      "op": "PUSH32",
      "value": "0x75726174696F6E2C75696E74323536206B657950726963652C75696E74323536"
    },
    "698": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "700": {
      "op": "DUP3"
    },
    "701": {
      "op": "ADD"
    },
    "702": {
      "op": "MSTORE"
    },
    "703": {
      "op": "PUSH32",
      "value": "0x206D61784E756D6265724F664B6579732C737472696E67206C6F636B4E616D65"
    },
    "736": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "738": {
      "op": "DUP3"
    },
    "739": {
      "op": "ADD"
    },
    "740": {
      "op": "MSTORE"
    },
    "741": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "743": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "745": {
      "op": "SHL"
    },
    "746": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "748": {
      "op": "DUP3"
    },
    "749": {
      "op": "ADD"
    },
    "750": {
      "op": "MSTORE"
    },
    "751": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "753": {
      "op": "ADD"
    },
    "754": {
      "op": "SWAP1"
    },
    "755": {
      "op": "JUMP"
    },
    "756": {
      "offset": [
        2013,
        2144
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "757": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        2013,
        2144
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "759": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        2013,
        2144
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "760": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        2013,
        2144
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "762": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        2013,
        2144
      ],
      "op": "DUP2",
      "path": "19"
    },
    "763": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        2013,
        2144
      ],
      "op": "DUP4",
      "path": "19"
    },
    "764": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        2013,
        2144
      ],
      "op": "SUB",
      "path": "19"
    },
    "765": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        2013,
        2144
      ],
      "op": "SUB",
      "path": "19"
    },
    "766": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        2013,
        2144
      ],
      "op": "DUP2",
      "path": "19"
    },
    "767": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        2013,
        2144
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "768": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        2013,
        2144
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "769": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        2013,
        2144
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "771": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        2013,
        2144
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "772": {
      "offset": [
        1998,
        2146
      ],
      "op": "DUP1",
      "path": "19"
    },
    "773": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        1998,
        2146
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "774": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        1998,
        2146
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "775": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        1998,
        2146
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "777": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        1998,
        2146
      ],
      "op": "ADD",
      "path": "19"
    },
    "778": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        1998,
        2146
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "779": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12720,
        12739
      ],
      "op": "DUP10",
      "path": "17"
    },
    "780": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12757,
        12766
      ],
      "op": "DUP10",
      "path": "17"
    },
    "781": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12784,
        12800
      ],
      "op": "DUP10",
      "path": "17"
    },
    "782": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12847,
        12856
      ],
      "op": "DUP10",
      "path": "17"
    },
    "783": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12829,
        12858
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "785": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12829,
        12858
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "786": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12829,
        12858
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "788": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12829,
        12858
      ],
      "op": "ADD",
      "path": "17"
    },
    "789": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12829,
        12858
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x31E"
    },
    "792": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12829,
        12858
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "793": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12829,
        12858
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "794": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12829,
        12858
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1DB5"
    },
    "797": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "jump": "i",
      "offset": [
        12829,
        12858
      ],
      "op": "JUMP",
      "path": "17"
    },
    "798": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12829,
        12858
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "799": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12829,
        12858
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "801": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12829,
        12858
      ],
      "op": "DUP1",
      "path": "17"
    },
    "802": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12829,
        12858
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "803": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "805": {
      "op": "NOT"
    },
    "806": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12829,
        12858
      ],
      "op": "DUP2",
      "path": "17"
    },
    "807": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12829,
        12858
      ],
      "op": "DUP5",
      "path": "17"
    },
    "808": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12829,
        12858
      ],
      "op": "SUB",
      "path": "17"
    },
    "809": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12829,
        12858
      ],
      "op": "ADD",
      "path": "17"
    },
    "810": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12829,
        12858
      ],
      "op": "DUP2",
      "path": "17"
    },
    "811": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12829,
        12858
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "812": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12829,
        12858
      ],
      "op": "DUP3",
      "path": "17"
    },
    "813": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12829,
        12858
      ],
      "op": "DUP3",
      "path": "17"
    },
    "814": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12829,
        12858
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "815": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12818,
        12860
      ],
      "op": "DUP1",
      "path": "17"
    },
    "816": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12818,
        12860
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "817": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12829,
        12858
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "819": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12818,
        12860
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "820": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12818,
        12860
      ],
      "op": "DUP3",
      "path": "17"
    },
    "821": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12818,
        12860
      ],
      "op": "ADD",
      "path": "17"
    },
    "822": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12818,
        12860
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "823": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12652,
        12874
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "824": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12652,
        12874
      ],
      "op": "DUP4",
      "path": "17"
    },
    "825": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12652,
        12874
      ],
      "op": "ADD",
      "path": "17"
    },
    "826": {
      "op": "SWAP7"
    },
    "827": {
      "op": "SWAP1"
    },
    "828": {
      "op": "SWAP7"
    },
    "829": {
      "op": "MSTORE"
    },
    "830": {
      "op": "DUP2"
    },
    "831": {
      "op": "ADD"
    },
    "832": {
      "op": "SWAP4"
    },
    "833": {
      "op": "SWAP1"
    },
    "834": {
      "op": "SWAP4"
    },
    "835": {
      "op": "MSTORE"
    },
    "836": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "838": {
      "op": "DUP4"
    },
    "839": {
      "op": "ADD"
    },
    "840": {
      "op": "SWAP2"
    },
    "841": {
      "op": "SWAP1"
    },
    "842": {
      "op": "SWAP2"
    },
    "843": {
      "op": "MSTORE"
    },
    "844": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "846": {
      "op": "DUP3"
    },
    "847": {
      "op": "ADD"
    },
    "848": {
      "op": "MSTORE"
    },
    "849": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "851": {
      "op": "DUP2"
    },
    "852": {
      "op": "ADD"
    },
    "853": {
      "op": "SWAP2"
    },
    "854": {
      "op": "SWAP1"
    },
    "855": {
      "op": "SWAP2"
    },
    "856": {
      "op": "MSTORE"
    },
    "857": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "859": {
      "op": "ADD"
    },
    "860": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12652,
        12874
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "862": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12652,
        12874
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "863": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12652,
        12874
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "865": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12652,
        12874
      ],
      "op": "DUP2",
      "path": "17"
    },
    "866": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12652,
        12874
      ],
      "op": "DUP4",
      "path": "17"
    },
    "867": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12652,
        12874
      ],
      "op": "SUB",
      "path": "17"
    },
    "868": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12652,
        12874
      ],
      "op": "SUB",
      "path": "17"
    },
    "869": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12652,
        12874
      ],
      "op": "DUP2",
      "path": "17"
    },
    "870": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12652,
        12874
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "871": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12652,
        12874
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "872": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12652,
        12874
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "874": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12652,
        12874
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "875": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12629,
        12884
      ],
      "op": "DUP1",
      "path": "17"
    },
    "876": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12629,
        12884
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "877": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12629,
        12884
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "878": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12629,
        12884
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "880": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12629,
        12884
      ],
      "op": "ADD",
      "path": "17"
    },
    "881": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12629,
        12884
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "882": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12611,
        12884
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "883": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12611,
        12884
      ],
      "op": "POP",
      "path": "17"
    },
    "884": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12895,
        12911
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "886": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12955,
        12971
      ],
      "op": "DUP3",
      "path": "17"
    },
    "887": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12973,
        12980
      ],
      "op": "DUP3",
      "path": "17"
    },
    "888": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12925,
        12982
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "890": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12925,
        12982
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "891": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12925,
        12982
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "893": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12925,
        12982
      ],
      "op": "ADD",
      "path": "17"
    },
    "894": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12925,
        12982
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x388"
    },
    "897": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12925,
        12982
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "898": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12925,
        12982
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "899": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12925,
        12982
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "900": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12925,
        12982
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1DFD"
    },
    "903": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "jump": "i",
      "offset": [
        12925,
        12982
      ],
      "op": "JUMP",
      "path": "17"
    },
    "904": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12925,
        12982
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "905": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12925,
        12982
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "907": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12925,
        12982
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "908": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12925,
        12982
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "910": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12925,
        12982
      ],
      "op": "DUP2",
      "path": "17"
    },
    "911": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12925,
        12982
      ],
      "op": "DUP4",
      "path": "17"
    },
    "912": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12925,
        12982
      ],
      "op": "SUB",
      "path": "17"
    },
    "913": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12925,
        12982
      ],
      "op": "SUB",
      "path": "17"
    },
    "914": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12925,
        12982
      ],
      "op": "DUP2",
      "path": "17"
    },
    "915": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12925,
        12982
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "916": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12925,
        12982
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "917": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12925,
        12982
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "919": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12925,
        12982
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "920": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12914,
        12984
      ],
      "op": "DUP1",
      "path": "17"
    },
    "921": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12914,
        12984
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "922": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12914,
        12984
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "923": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12914,
        12984
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "925": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12914,
        12984
      ],
      "op": "ADD",
      "path": "17"
    },
    "926": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12914,
        12984
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "927": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12895,
        12984
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "928": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12895,
        12984
      ],
      "op": "POP",
      "path": "17"
    },
    "929": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        13002,
        13037
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 0,
      "value": "0x3AA"
    },
    "932": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        13015,
        13023
      ],
      "op": "DUP2",
      "path": "17"
    },
    "933": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        13025,
        13035
      ],
      "op": "DUP7",
      "path": "17"
    },
    "934": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        13002,
        13013
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xA9E"
    },
    "937": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "jump": "i",
      "offset": [
        13002,
        13037
      ],
      "op": "JUMP",
      "path": "17"
    },
    "938": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        13002,
        13037
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "939": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12995,
        13037
      ],
      "op": "SWAP11",
      "path": "17"
    },
    "940": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "offset": [
        12044,
        13044
      ],
      "op": "SWAP10",
      "path": "17"
    },
    "941": {
      "op": "POP"
    },
    "942": {
      "op": "POP"
    },
    "943": {
      "op": "POP"
    },
    "944": {
      "op": "POP"
    },
    "945": {
      "op": "POP"
    },
    "946": {
      "op": "POP"
    },
    "947": {
      "op": "POP"
    },
    "948": {
      "op": "POP"
    },
    "949": {
      "op": "POP"
    },
    "950": {
      "op": "POP"
    },
    "951": {
      "fn": "CLHouseApi.SignerOCNewLock",
      "jump": "o",
      "offset": [
        12044,
        13044
      ],
      "op": "JUMP",
      "path": "17"
    },
    "952": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        2555,
        3410
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "953": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        2744,
        2751
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "955": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        2768,
        2792
      ],
      "op": "DUP1",
      "path": "17"
    },
    "956": {
      "offset": [
        692,
        808
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "958": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        692,
        808
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "959": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        692,
        808
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "961": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        692,
        808
      ],
      "op": "ADD",
      "path": "19"
    },
    "962": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        692,
        808
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3CA"
    },
    "965": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        692,
        808
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "966": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        692,
        808
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1D4B"
    },
    "969": {
      "fn": "CLHouseApi.SignerOCInvit",
      "jump": "i",
      "offset": [
        692,
        808
      ],
      "op": "JUMP",
      "path": "19"
    },
    "970": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        692,
        808
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "971": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        692,
        808
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "973": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        692,
        808
      ],
      "op": "DUP1",
      "path": "19"
    },
    "974": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        692,
        808
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "975": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "977": {
      "op": "NOT"
    },
    "978": {
      "offset": [
        692,
        808
      ],
      "op": "DUP2",
      "path": "19"
    },
    "979": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        692,
        808
      ],
      "op": "DUP5",
      "path": "19"
    },
    "980": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        692,
        808
      ],
      "op": "SUB",
      "path": "19"
    },
    "981": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        692,
        808
      ],
      "op": "ADD",
      "path": "19"
    },
    "982": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        692,
        808
      ],
      "op": "DUP2",
      "path": "19"
    },
    "983": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        692,
        808
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "984": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        692,
        808
      ],
      "op": "DUP3",
      "path": "19"
    },
    "985": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        692,
        808
      ],
      "op": "DUP3",
      "path": "19"
    },
    "986": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        692,
        808
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "987": {
      "offset": [
        677,
        810
      ],
      "op": "DUP1",
      "path": "19"
    },
    "988": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        677,
        810
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "989": {
      "offset": [
        692,
        808
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "991": {
      "offset": [
        677,
        810
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "992": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        677,
        810
      ],
      "op": "DUP3",
      "path": "19"
    },
    "993": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        677,
        810
      ],
      "op": "ADD",
      "path": "19"
    },
    "994": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        677,
        810
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "995": {
      "offset": [
        607,
        626
      ],
      "op": "DUP4",
      "path": "19"
    },
    "996": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        607,
        626
      ],
      "op": "DUP4",
      "path": "19"
    },
    "997": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        607,
        626
      ],
      "op": "ADD",
      "path": "19"
    },
    "998": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        607,
        626
      ],
      "op": "DUP4",
      "path": "19"
    },
    "999": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        607,
        626
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1000": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        607,
        626
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x5"
    },
    "1002": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        607,
        626
      ],
      "op": "DUP5",
      "path": "19"
    },
    "1003": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        607,
        626
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1004": {
      "op": "PUSH5",
      "value": "0x302E322E3"
    },
    "1010": {
      "op": "PUSH1",
      "value": "0xDC"
    },
    "1012": {
      "op": "SHL"
    },
    "1013": {
      "offset": [
        607,
        626
      ],
      "op": "DUP5",
      "path": "19"
    },
    "1014": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        607,
        626
      ],
      "op": "DUP4",
      "path": "19"
    },
    "1015": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        607,
        626
      ],
      "op": "ADD",
      "path": "19"
    },
    "1016": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        607,
        626
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1017": {
      "offset": [
        589,
        628
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1018": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        589,
        628
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1019": {
      "offset": [
        677,
        810
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1020": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        677,
        810
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "1021": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1023": {
      "op": "DUP1"
    },
    "1024": {
      "op": "MLOAD"
    },
    "1025": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1027": {
      "op": "PUSH2",
      "value": "0x1F5A"
    },
    "1030": {
      "op": "DUP4"
    },
    "1031": {
      "op": "CODECOPY"
    },
    "1032": {
      "op": "DUP2"
    },
    "1033": {
      "op": "MLOAD"
    },
    "1034": {
      "op": "SWAP2"
    },
    "1035": {
      "op": "MSTORE"
    },
    "1036": {
      "offset": [
        507,
        527
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "1037": {
      "offset": [
        589,
        628
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x416"
    },
    "1040": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        589,
        628
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "1041": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        589,
        628
      ],
      "op": "ADD",
      "path": "19"
    },
    "1042": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        589,
        628
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1DB5"
    },
    "1045": {
      "fn": "CLHouseApi.SignerOCInvit",
      "jump": "i",
      "offset": [
        589,
        628
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1046": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        589,
        628
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1047": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        589,
        628
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1049": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        589,
        628
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1050": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        589,
        628
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1052": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        589,
        628
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1053": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        589,
        628
      ],
      "op": "DUP4",
      "path": "19"
    },
    "1054": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        589,
        628
      ],
      "op": "SUB",
      "path": "19"
    },
    "1055": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        589,
        628
      ],
      "op": "SUB",
      "path": "19"
    },
    "1056": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        589,
        628
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1057": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        589,
        628
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1058": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        589,
        628
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1059": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        589,
        628
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1061": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        589,
        628
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1062": {
      "offset": [
        574,
        630
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1063": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        574,
        630
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1064": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        574,
        630
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1065": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        574,
        630
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1067": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        574,
        630
      ],
      "op": "ADD",
      "path": "19"
    },
    "1068": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        574,
        630
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "1069": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        2972,
        2985
      ],
      "op": "CHAINID",
      "path": "17"
    },
    "1070": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3003,
        3013
      ],
      "op": "DUP8",
      "path": "17"
    },
    "1071": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        2818,
        3027
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1073": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        2818,
        3027
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1074": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        2818,
        3027
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1076": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        2818,
        3027
      ],
      "op": "ADD",
      "path": "17"
    },
    "1077": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        2818,
        3027
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x442"
    },
    "1080": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        2818,
        3027
      ],
      "op": "SWAP6",
      "path": "17"
    },
    "1081": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        2818,
        3027
      ],
      "op": "SWAP5",
      "path": "17"
    },
    "1082": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        2818,
        3027
      ],
      "op": "SWAP4",
      "path": "17"
    },
    "1083": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        2818,
        3027
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "1084": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        2818,
        3027
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1085": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        2818,
        3027
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1086": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        2818,
        3027
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1DD1"
    },
    "1089": {
      "fn": "CLHouseApi.SignerOCInvit",
      "jump": "i",
      "offset": [
        2818,
        3027
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1090": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        2818,
        3027
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1091": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        2818,
        3027
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1093": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        2818,
        3027
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1094": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        2818,
        3027
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1096": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        2818,
        3027
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1097": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        2818,
        3027
      ],
      "op": "DUP4",
      "path": "17"
    },
    "1098": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        2818,
        3027
      ],
      "op": "SUB",
      "path": "17"
    },
    "1099": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        2818,
        3027
      ],
      "op": "SUB",
      "path": "17"
    },
    "1100": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        2818,
        3027
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1101": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        2818,
        3027
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1102": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        2818,
        3027
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1103": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        2818,
        3027
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1105": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        2818,
        3027
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1106": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        2795,
        3037
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1107": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        2795,
        3037
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1108": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        2795,
        3037
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1109": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        2795,
        3037
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1111": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        2795,
        3037
      ],
      "op": "ADD",
      "path": "17"
    },
    "1112": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        2795,
        3037
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "1113": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        2768,
        3037
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1114": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        2768,
        3037
      ],
      "op": "POP",
      "path": "17"
    },
    "1115": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3048,
        3063
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1117": {
      "offset": [
        867,
        944
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1119": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        867,
        944
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1120": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        867,
        944
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1122": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        867,
        944
      ],
      "op": "ADD",
      "path": "19"
    },
    "1123": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        867,
        944
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4A3"
    },
    "1126": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        867,
        944
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1127": {
      "op": "PUSH32",
      "value": "0x7374724F43496E76697428626F6F6C20616363657074616E63652C737472696E"
    },
    "1160": {
      "op": "DUP2"
    },
    "1161": {
      "op": "MSTORE"
    },
    "1162": {
      "op": "PUSH11",
      "value": "0x67206E69636B6E616D6529"
    },
    "1174": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "1176": {
      "op": "SHL"
    },
    "1177": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1179": {
      "op": "DUP3"
    },
    "1180": {
      "op": "ADD"
    },
    "1181": {
      "op": "MSTORE"
    },
    "1182": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "1184": {
      "op": "ADD"
    },
    "1185": {
      "op": "SWAP1"
    },
    "1186": {
      "op": "JUMP"
    },
    "1187": {
      "offset": [
        867,
        944
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1188": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        867,
        944
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1190": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        867,
        944
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1191": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        867,
        944
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1193": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        867,
        944
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1194": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        867,
        944
      ],
      "op": "DUP4",
      "path": "19"
    },
    "1195": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        867,
        944
      ],
      "op": "SUB",
      "path": "19"
    },
    "1196": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        867,
        944
      ],
      "op": "SUB",
      "path": "19"
    },
    "1197": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        867,
        944
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1198": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        867,
        944
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1199": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        867,
        944
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1200": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        867,
        944
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1202": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        867,
        944
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1203": {
      "offset": [
        852,
        946
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1204": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        852,
        946
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1205": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        852,
        946
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1206": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        852,
        946
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1208": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        852,
        946
      ],
      "op": "ADD",
      "path": "19"
    },
    "1209": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        852,
        946
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "1210": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3155,
        3166
      ],
      "op": "DUP8",
      "path": "17"
    },
    "1211": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3213,
        3222
      ],
      "op": "DUP8",
      "path": "17"
    },
    "1212": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3195,
        3224
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1214": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3195,
        3224
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1215": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3195,
        3224
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1217": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3195,
        3224
      ],
      "op": "ADD",
      "path": "17"
    },
    "1218": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3195,
        3224
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x4CB"
    },
    "1221": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3195,
        3224
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1222": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3195,
        3224
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1223": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3195,
        3224
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1DB5"
    },
    "1226": {
      "fn": "CLHouseApi.SignerOCInvit",
      "jump": "i",
      "offset": [
        3195,
        3224
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1227": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3195,
        3224
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1228": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3195,
        3224
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1230": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3195,
        3224
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1231": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3195,
        3224
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1233": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3195,
        3224
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1234": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3195,
        3224
      ],
      "op": "DUP4",
      "path": "17"
    },
    "1235": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3195,
        3224
      ],
      "op": "SUB",
      "path": "17"
    },
    "1236": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3195,
        3224
      ],
      "op": "SUB",
      "path": "17"
    },
    "1237": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3195,
        3224
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1238": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3195,
        3224
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1239": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3195,
        3224
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1240": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3195,
        3224
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1242": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3195,
        3224
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1243": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3184,
        3226
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1244": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3184,
        3226
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1245": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3184,
        3226
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1246": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3184,
        3226
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1248": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3184,
        3226
      ],
      "op": "ADD",
      "path": "17"
    },
    "1249": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3184,
        3226
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "1250": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3089,
        3240
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1252": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3089,
        3240
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1253": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3089,
        3240
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1255": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3089,
        3240
      ],
      "op": "ADD",
      "path": "17"
    },
    "1256": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3089,
        3240
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x504"
    },
    "1259": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3089,
        3240
      ],
      "op": "SWAP4",
      "path": "17"
    },
    "1260": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3089,
        3240
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "1261": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3089,
        3240
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1262": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3089,
        3240
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1263": {
      "op": "SWAP3"
    },
    "1264": {
      "op": "DUP4"
    },
    "1265": {
      "op": "MSTORE"
    },
    "1266": {
      "op": "SWAP1"
    },
    "1267": {
      "op": "ISZERO"
    },
    "1268": {
      "op": "ISZERO"
    },
    "1269": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1271": {
      "op": "DUP4"
    },
    "1272": {
      "op": "ADD"
    },
    "1273": {
      "op": "MSTORE"
    },
    "1274": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1276": {
      "op": "DUP3"
    },
    "1277": {
      "op": "ADD"
    },
    "1278": {
      "op": "MSTORE"
    },
    "1279": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1281": {
      "op": "ADD"
    },
    "1282": {
      "op": "SWAP1"
    },
    "1283": {
      "op": "JUMP"
    },
    "1284": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3089,
        3240
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1285": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3089,
        3240
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1287": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3089,
        3240
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1288": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3089,
        3240
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1290": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3089,
        3240
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1291": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3089,
        3240
      ],
      "op": "DUP4",
      "path": "17"
    },
    "1292": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3089,
        3240
      ],
      "op": "SUB",
      "path": "17"
    },
    "1293": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3089,
        3240
      ],
      "op": "SUB",
      "path": "17"
    },
    "1294": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3089,
        3240
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1295": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3089,
        3240
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1296": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3089,
        3240
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1297": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3089,
        3240
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1299": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3089,
        3240
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1300": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3066,
        3250
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1301": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3066,
        3250
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1302": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3066,
        3250
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1303": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3066,
        3250
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1305": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3066,
        3250
      ],
      "op": "ADD",
      "path": "17"
    },
    "1306": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3066,
        3250
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "1307": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3048,
        3250
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1308": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3048,
        3250
      ],
      "op": "POP",
      "path": "17"
    },
    "1309": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3261,
        3277
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1311": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3321,
        3337
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1312": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3339,
        3346
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1313": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3291,
        3348
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1315": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3291,
        3348
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1316": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3291,
        3348
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1318": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3291,
        3348
      ],
      "op": "ADD",
      "path": "17"
    },
    "1319": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3291,
        3348
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x531"
    },
    "1322": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3291,
        3348
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "1323": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3291,
        3348
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1324": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3291,
        3348
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1325": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3291,
        3348
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1DFD"
    },
    "1328": {
      "fn": "CLHouseApi.SignerOCInvit",
      "jump": "i",
      "offset": [
        3291,
        3348
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1329": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3291,
        3348
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1330": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3291,
        3348
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1332": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3291,
        3348
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1333": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3291,
        3348
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1335": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3291,
        3348
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1336": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3291,
        3348
      ],
      "op": "DUP4",
      "path": "17"
    },
    "1337": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3291,
        3348
      ],
      "op": "SUB",
      "path": "17"
    },
    "1338": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3291,
        3348
      ],
      "op": "SUB",
      "path": "17"
    },
    "1339": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3291,
        3348
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1340": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3291,
        3348
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1341": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3291,
        3348
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1342": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3291,
        3348
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1344": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3291,
        3348
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1345": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3280,
        3350
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1346": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3280,
        3350
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1347": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3280,
        3350
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1348": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3280,
        3350
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1350": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3280,
        3350
      ],
      "op": "ADD",
      "path": "17"
    },
    "1351": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3280,
        3350
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "1352": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3261,
        3350
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1353": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3261,
        3350
      ],
      "op": "POP",
      "path": "17"
    },
    "1354": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3368,
        3403
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 1,
      "value": "0x553"
    },
    "1357": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3381,
        3389
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1358": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3391,
        3401
      ],
      "op": "DUP7",
      "path": "17"
    },
    "1359": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3368,
        3379
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xA9E"
    },
    "1362": {
      "fn": "CLHouseApi.SignerOCInvit",
      "jump": "i",
      "offset": [
        3368,
        3403
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1363": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3368,
        3403
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1364": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        3361,
        3403
      ],
      "op": "SWAP9",
      "path": "17"
    },
    "1365": {
      "fn": "CLHouseApi.SignerOCInvit",
      "offset": [
        2555,
        3410
      ],
      "op": "SWAP8",
      "path": "17"
    },
    "1366": {
      "op": "POP"
    },
    "1367": {
      "op": "POP"
    },
    "1368": {
      "op": "POP"
    },
    "1369": {
      "op": "POP"
    },
    "1370": {
      "op": "POP"
    },
    "1371": {
      "op": "POP"
    },
    "1372": {
      "op": "POP"
    },
    "1373": {
      "op": "POP"
    },
    "1374": {
      "fn": "CLHouseApi.SignerOCInvit",
      "jump": "o",
      "offset": [
        2555,
        3410
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1375": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14370,
        15150
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1376": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14536,
        14543
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1378": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14560,
        14584
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1379": {
      "offset": [
        692,
        808
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1381": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        692,
        808
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1382": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        692,
        808
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1384": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        692,
        808
      ],
      "op": "ADD",
      "path": "19"
    },
    "1385": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        692,
        808
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x571"
    },
    "1388": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        692,
        808
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1389": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        692,
        808
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1D4B"
    },
    "1392": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "jump": "i",
      "offset": [
        692,
        808
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1393": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        692,
        808
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1394": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        692,
        808
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1396": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        692,
        808
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1397": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        692,
        808
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1398": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1400": {
      "op": "NOT"
    },
    "1401": {
      "offset": [
        692,
        808
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1402": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        692,
        808
      ],
      "op": "DUP5",
      "path": "19"
    },
    "1403": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        692,
        808
      ],
      "op": "SUB",
      "path": "19"
    },
    "1404": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        692,
        808
      ],
      "op": "ADD",
      "path": "19"
    },
    "1405": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        692,
        808
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1406": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        692,
        808
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1407": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        692,
        808
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1408": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        692,
        808
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1409": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        692,
        808
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1410": {
      "offset": [
        677,
        810
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1411": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        677,
        810
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1412": {
      "offset": [
        692,
        808
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1414": {
      "offset": [
        677,
        810
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1415": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        677,
        810
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1416": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        677,
        810
      ],
      "op": "ADD",
      "path": "19"
    },
    "1417": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        677,
        810
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "1418": {
      "offset": [
        607,
        626
      ],
      "op": "DUP4",
      "path": "19"
    },
    "1419": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        607,
        626
      ],
      "op": "DUP4",
      "path": "19"
    },
    "1420": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        607,
        626
      ],
      "op": "ADD",
      "path": "19"
    },
    "1421": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        607,
        626
      ],
      "op": "DUP4",
      "path": "19"
    },
    "1422": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        607,
        626
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1423": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        607,
        626
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x5"
    },
    "1425": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        607,
        626
      ],
      "op": "DUP5",
      "path": "19"
    },
    "1426": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        607,
        626
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1427": {
      "op": "PUSH5",
      "value": "0x302E322E3"
    },
    "1433": {
      "op": "PUSH1",
      "value": "0xDC"
    },
    "1435": {
      "op": "SHL"
    },
    "1436": {
      "offset": [
        607,
        626
      ],
      "op": "DUP5",
      "path": "19"
    },
    "1437": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        607,
        626
      ],
      "op": "DUP4",
      "path": "19"
    },
    "1438": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        607,
        626
      ],
      "op": "ADD",
      "path": "19"
    },
    "1439": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        607,
        626
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1440": {
      "offset": [
        589,
        628
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1441": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        589,
        628
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1442": {
      "offset": [
        677,
        810
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1443": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        677,
        810
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1446": {
      "op": "DUP1"
    },
    "1447": {
      "op": "MLOAD"
    },
    "1448": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1450": {
      "op": "PUSH2",
      "value": "0x1F5A"
    },
    "1453": {
      "op": "DUP4"
    },
    "1454": {
      "op": "CODECOPY"
    },
    "1455": {
      "op": "DUP2"
    },
    "1456": {
      "op": "MLOAD"
    },
    "1457": {
      "op": "SWAP2"
    },
    "1458": {
      "op": "MSTORE"
    },
    "1459": {
      "offset": [
        507,
        527
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "1460": {
      "offset": [
        589,
        628
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x5BD"
    },
    "1463": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        589,
        628
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "1464": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        589,
        628
      ],
      "op": "ADD",
      "path": "19"
    },
    "1465": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        589,
        628
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1DB5"
    },
    "1468": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "jump": "i",
      "offset": [
        589,
        628
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1469": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        589,
        628
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1470": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        589,
        628
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1472": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        589,
        628
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1473": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        589,
        628
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1475": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        589,
        628
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1476": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        589,
        628
      ],
      "op": "DUP4",
      "path": "19"
    },
    "1477": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        589,
        628
      ],
      "op": "SUB",
      "path": "19"
    },
    "1478": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        589,
        628
      ],
      "op": "SUB",
      "path": "19"
    },
    "1479": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        589,
        628
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1480": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        589,
        628
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1481": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        589,
        628
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1482": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        589,
        628
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1484": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        589,
        628
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1485": {
      "offset": [
        574,
        630
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1486": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        574,
        630
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1487": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        574,
        630
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1488": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        574,
        630
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1490": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        574,
        630
      ],
      "op": "ADD",
      "path": "19"
    },
    "1491": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        574,
        630
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "1492": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14764,
        14777
      ],
      "op": "CHAINID",
      "path": "17"
    },
    "1493": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14795,
        14805
      ],
      "op": "DUP8",
      "path": "17"
    },
    "1494": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14610,
        14819
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1496": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14610,
        14819
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1497": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14610,
        14819
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1499": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14610,
        14819
      ],
      "op": "ADD",
      "path": "17"
    },
    "1500": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14610,
        14819
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x5E9"
    },
    "1503": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14610,
        14819
      ],
      "op": "SWAP6",
      "path": "17"
    },
    "1504": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14610,
        14819
      ],
      "op": "SWAP5",
      "path": "17"
    },
    "1505": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14610,
        14819
      ],
      "op": "SWAP4",
      "path": "17"
    },
    "1506": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14610,
        14819
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "1507": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14610,
        14819
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1508": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14610,
        14819
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1509": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14610,
        14819
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1DD1"
    },
    "1512": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "jump": "i",
      "offset": [
        14610,
        14819
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1513": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14610,
        14819
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1514": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14610,
        14819
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1516": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14610,
        14819
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1517": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14610,
        14819
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1519": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14610,
        14819
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1520": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14610,
        14819
      ],
      "op": "DUP4",
      "path": "17"
    },
    "1521": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14610,
        14819
      ],
      "op": "SUB",
      "path": "17"
    },
    "1522": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14610,
        14819
      ],
      "op": "SUB",
      "path": "17"
    },
    "1523": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14610,
        14819
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1524": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14610,
        14819
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1525": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14610,
        14819
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1526": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14610,
        14819
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1528": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14610,
        14819
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1529": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14587,
        14829
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1530": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14587,
        14829
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1531": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14587,
        14829
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1532": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14587,
        14829
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1534": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14587,
        14829
      ],
      "op": "ADD",
      "path": "17"
    },
    "1535": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14587,
        14829
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "1536": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14560,
        14829
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1537": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14560,
        14829
      ],
      "op": "POP",
      "path": "17"
    },
    "1538": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14840,
        14855
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1540": {
      "offset": [
        2340,
        2411
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1542": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        2340,
        2411
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1543": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        2340,
        2411
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1545": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        2340,
        2411
      ],
      "op": "ADD",
      "path": "19"
    },
    "1546": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        2340,
        2411
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x644"
    },
    "1549": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        2340,
        2411
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1550": {
      "op": "PUSH32",
      "value": "0x7374724F435570434C48574C4E465428616464726573732077686974654C6973"
    },
    "1583": {
      "op": "DUP2"
    },
    "1584": {
      "op": "MSTORE"
    },
    "1585": {
      "op": "PUSH5",
      "value": "0x744E465429"
    },
    "1591": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "1593": {
      "op": "SHL"
    },
    "1594": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1596": {
      "op": "DUP3"
    },
    "1597": {
      "op": "ADD"
    },
    "1598": {
      "op": "MSTORE"
    },
    "1599": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "1601": {
      "op": "ADD"
    },
    "1602": {
      "op": "SWAP1"
    },
    "1603": {
      "op": "JUMP"
    },
    "1604": {
      "offset": [
        2340,
        2411
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1605": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        2340,
        2411
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1607": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        2340,
        2411
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1608": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        2340,
        2411
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1609": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1611": {
      "op": "NOT"
    },
    "1612": {
      "offset": [
        2340,
        2411
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1613": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        2340,
        2411
      ],
      "op": "DUP5",
      "path": "19"
    },
    "1614": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        2340,
        2411
      ],
      "op": "SUB",
      "path": "19"
    },
    "1615": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        2340,
        2411
      ],
      "op": "ADD",
      "path": "19"
    },
    "1616": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        2340,
        2411
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1617": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        2340,
        2411
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1618": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        2340,
        2411
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1619": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        2340,
        2411
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1620": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        2340,
        2411
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1621": {
      "offset": [
        2325,
        2413
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1622": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        2325,
        2413
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1623": {
      "offset": [
        2340,
        2411
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1625": {
      "offset": [
        2325,
        2413
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1626": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        2325,
        2413
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1627": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        2325,
        2413
      ],
      "op": "ADD",
      "path": "19"
    },
    "1628": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        2325,
        2413
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "1629": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14881,
        14980
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1630": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14881,
        14980
      ],
      "op": "DUP4",
      "path": "17"
    },
    "1631": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14881,
        14980
      ],
      "op": "ADD",
      "path": "17"
    },
    "1632": {
      "op": "MSTORE"
    },
    "1633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1637": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1639": {
      "op": "SHL"
    },
    "1640": {
      "op": "SUB"
    },
    "1641": {
      "op": "DUP9"
    },
    "1642": {
      "op": "AND"
    },
    "1643": {
      "op": "SWAP1"
    },
    "1644": {
      "op": "DUP3"
    },
    "1645": {
      "op": "ADD"
    },
    "1646": {
      "op": "MSTORE"
    },
    "1647": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1649": {
      "op": "ADD"
    },
    "1650": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14881,
        14980
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1651": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14881,
        14980
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1653": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14881,
        14980
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1654": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14881,
        14980
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1656": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14881,
        14980
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1657": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14881,
        14980
      ],
      "op": "DUP4",
      "path": "17"
    },
    "1658": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14881,
        14980
      ],
      "op": "SUB",
      "path": "17"
    },
    "1659": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14881,
        14980
      ],
      "op": "SUB",
      "path": "17"
    },
    "1660": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14881,
        14980
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1661": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14881,
        14980
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1662": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14881,
        14980
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1663": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14881,
        14980
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1665": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14881,
        14980
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1666": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14858,
        14990
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1667": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14858,
        14990
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1668": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14858,
        14990
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1669": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14858,
        14990
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1671": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14858,
        14990
      ],
      "op": "ADD",
      "path": "17"
    },
    "1672": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14858,
        14990
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "1673": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14840,
        14990
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1674": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14840,
        14990
      ],
      "op": "POP",
      "path": "17"
    },
    "1675": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        15001,
        15017
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1677": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        15061,
        15077
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1678": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        15079,
        15086
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1679": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        15031,
        15088
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1681": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        15031,
        15088
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1682": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        15031,
        15088
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1684": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        15031,
        15088
      ],
      "op": "ADD",
      "path": "17"
    },
    "1685": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        15031,
        15088
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x69F"
    },
    "1688": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        15031,
        15088
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "1689": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        15031,
        15088
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1690": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        15031,
        15088
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1691": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        15031,
        15088
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1DFD"
    },
    "1694": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "jump": "i",
      "offset": [
        15031,
        15088
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1695": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        15031,
        15088
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1696": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        15031,
        15088
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1698": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        15031,
        15088
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1699": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        15031,
        15088
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1701": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        15031,
        15088
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1702": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        15031,
        15088
      ],
      "op": "DUP4",
      "path": "17"
    },
    "1703": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        15031,
        15088
      ],
      "op": "SUB",
      "path": "17"
    },
    "1704": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        15031,
        15088
      ],
      "op": "SUB",
      "path": "17"
    },
    "1705": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        15031,
        15088
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1706": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        15031,
        15088
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1707": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        15031,
        15088
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1708": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        15031,
        15088
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1710": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        15031,
        15088
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1711": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        15020,
        15090
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1712": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        15020,
        15090
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1713": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        15020,
        15090
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1714": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        15020,
        15090
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1716": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        15020,
        15090
      ],
      "op": "ADD",
      "path": "17"
    },
    "1717": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        15020,
        15090
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "1718": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        15001,
        15090
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1719": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        15001,
        15090
      ],
      "op": "POP",
      "path": "17"
    },
    "1720": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        15108,
        15143
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 2,
      "value": "0x6C1"
    },
    "1723": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        15121,
        15129
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1724": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        15131,
        15141
      ],
      "op": "DUP7",
      "path": "17"
    },
    "1725": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        15108,
        15119
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xA9E"
    },
    "1728": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "jump": "i",
      "offset": [
        15108,
        15143
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1729": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        15108,
        15143
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1730": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        15101,
        15143
      ],
      "op": "SWAP8",
      "path": "17"
    },
    "1731": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "offset": [
        14370,
        15150
      ],
      "op": "SWAP7",
      "path": "17"
    },
    "1732": {
      "op": "POP"
    },
    "1733": {
      "op": "POP"
    },
    "1734": {
      "op": "POP"
    },
    "1735": {
      "op": "POP"
    },
    "1736": {
      "op": "POP"
    },
    "1737": {
      "op": "POP"
    },
    "1738": {
      "op": "POP"
    },
    "1739": {
      "fn": "CLHouseApi.SignerOCUpCLHWLNFT",
      "jump": "o",
      "offset": [
        14370,
        15150
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1740": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10525,
        11635
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1741": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10805,
        10812
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1743": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10829,
        10853
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1744": {
      "offset": [
        692,
        808
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1746": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        692,
        808
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1747": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        692,
        808
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1749": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        692,
        808
      ],
      "op": "ADD",
      "path": "19"
    },
    "1750": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        692,
        808
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x6DE"
    },
    "1753": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        692,
        808
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1754": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        692,
        808
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1D4B"
    },
    "1757": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "jump": "i",
      "offset": [
        692,
        808
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1758": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        692,
        808
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1759": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        692,
        808
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1761": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        692,
        808
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1762": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        692,
        808
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1763": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1765": {
      "op": "NOT"
    },
    "1766": {
      "offset": [
        692,
        808
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1767": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        692,
        808
      ],
      "op": "DUP5",
      "path": "19"
    },
    "1768": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        692,
        808
      ],
      "op": "SUB",
      "path": "19"
    },
    "1769": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        692,
        808
      ],
      "op": "ADD",
      "path": "19"
    },
    "1770": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        692,
        808
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1771": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        692,
        808
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1772": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        692,
        808
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1773": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        692,
        808
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1774": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        692,
        808
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1775": {
      "offset": [
        677,
        810
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1776": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        677,
        810
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1777": {
      "offset": [
        692,
        808
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1779": {
      "offset": [
        677,
        810
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1780": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        677,
        810
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1781": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        677,
        810
      ],
      "op": "ADD",
      "path": "19"
    },
    "1782": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        677,
        810
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "1783": {
      "offset": [
        607,
        626
      ],
      "op": "DUP4",
      "path": "19"
    },
    "1784": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        607,
        626
      ],
      "op": "DUP4",
      "path": "19"
    },
    "1785": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        607,
        626
      ],
      "op": "ADD",
      "path": "19"
    },
    "1786": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        607,
        626
      ],
      "op": "DUP4",
      "path": "19"
    },
    "1787": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        607,
        626
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1788": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        607,
        626
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x5"
    },
    "1790": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        607,
        626
      ],
      "op": "DUP5",
      "path": "19"
    },
    "1791": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        607,
        626
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1792": {
      "op": "PUSH5",
      "value": "0x302E322E3"
    },
    "1798": {
      "op": "PUSH1",
      "value": "0xDC"
    },
    "1800": {
      "op": "SHL"
    },
    "1801": {
      "offset": [
        607,
        626
      ],
      "op": "DUP5",
      "path": "19"
    },
    "1802": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        607,
        626
      ],
      "op": "DUP4",
      "path": "19"
    },
    "1803": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        607,
        626
      ],
      "op": "ADD",
      "path": "19"
    },
    "1804": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        607,
        626
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1805": {
      "offset": [
        589,
        628
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1806": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        589,
        628
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1807": {
      "offset": [
        677,
        810
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1808": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        677,
        810
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "1809": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1811": {
      "op": "DUP1"
    },
    "1812": {
      "op": "MLOAD"
    },
    "1813": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1815": {
      "op": "PUSH2",
      "value": "0x1F5A"
    },
    "1818": {
      "op": "DUP4"
    },
    "1819": {
      "op": "CODECOPY"
    },
    "1820": {
      "op": "DUP2"
    },
    "1821": {
      "op": "MLOAD"
    },
    "1822": {
      "op": "SWAP2"
    },
    "1823": {
      "op": "MSTORE"
    },
    "1824": {
      "offset": [
        507,
        527
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "1825": {
      "offset": [
        589,
        628
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x72A"
    },
    "1828": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        589,
        628
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "1829": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        589,
        628
      ],
      "op": "ADD",
      "path": "19"
    },
    "1830": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        589,
        628
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1DB5"
    },
    "1833": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "jump": "i",
      "offset": [
        589,
        628
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1834": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        589,
        628
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1835": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        589,
        628
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1837": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        589,
        628
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1838": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        589,
        628
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1840": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        589,
        628
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1841": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        589,
        628
      ],
      "op": "DUP4",
      "path": "19"
    },
    "1842": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        589,
        628
      ],
      "op": "SUB",
      "path": "19"
    },
    "1843": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        589,
        628
      ],
      "op": "SUB",
      "path": "19"
    },
    "1844": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        589,
        628
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1845": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        589,
        628
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1846": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        589,
        628
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1847": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        589,
        628
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1849": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        589,
        628
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1850": {
      "offset": [
        574,
        630
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1851": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        574,
        630
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1852": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        574,
        630
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1853": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        574,
        630
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1855": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        574,
        630
      ],
      "op": "ADD",
      "path": "19"
    },
    "1856": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        574,
        630
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "1857": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11033,
        11046
      ],
      "op": "CHAINID",
      "path": "17"
    },
    "1858": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11064,
        11071
      ],
      "op": "DUP8",
      "path": "17"
    },
    "1859": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10879,
        11085
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1861": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10879,
        11085
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1862": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10879,
        11085
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1864": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10879,
        11085
      ],
      "op": "ADD",
      "path": "17"
    },
    "1865": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10879,
        11085
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x756"
    },
    "1868": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10879,
        11085
      ],
      "op": "SWAP6",
      "path": "17"
    },
    "1869": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10879,
        11085
      ],
      "op": "SWAP5",
      "path": "17"
    },
    "1870": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10879,
        11085
      ],
      "op": "SWAP4",
      "path": "17"
    },
    "1871": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10879,
        11085
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "1872": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10879,
        11085
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1873": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10879,
        11085
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1874": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10879,
        11085
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1DD1"
    },
    "1877": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "jump": "i",
      "offset": [
        10879,
        11085
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1878": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10879,
        11085
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1879": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10879,
        11085
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1881": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10879,
        11085
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1882": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10879,
        11085
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1884": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10879,
        11085
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1885": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10879,
        11085
      ],
      "op": "DUP4",
      "path": "17"
    },
    "1886": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10879,
        11085
      ],
      "op": "SUB",
      "path": "17"
    },
    "1887": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10879,
        11085
      ],
      "op": "SUB",
      "path": "17"
    },
    "1888": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10879,
        11085
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1889": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10879,
        11085
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1890": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10879,
        11085
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1891": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10879,
        11085
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1893": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10879,
        11085
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1894": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10856,
        11095
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1895": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10856,
        11095
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1896": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10856,
        11095
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1897": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10856,
        11095
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1899": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10856,
        11095
      ],
      "op": "ADD",
      "path": "17"
    },
    "1900": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10856,
        11095
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "1901": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10829,
        11095
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1902": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10829,
        11095
      ],
      "op": "POP",
      "path": "17"
    },
    "1903": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11106,
        11121
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1905": {
      "offset": [
        1811,
        1952
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1907": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1811,
        1952
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1908": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1811,
        1952
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1910": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1811,
        1952
      ],
      "op": "ADD",
      "path": "19"
    },
    "1911": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1811,
        1952
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x803"
    },
    "1914": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1811,
        1952
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1915": {
      "op": "PUSH32",
      "value": "0x7374724F434E6577434C4828737472696E6720686F7573654E616D652C626F6F"
    },
    "1948": {
      "op": "DUP2"
    },
    "1949": {
      "op": "MSTORE"
    },
    "1950": {
      "op": "PUSH32",
      "value": "0x6C20686F757365507269766174652C626F6F6C20686F7573654F70656E2C7569"
    },
    "1983": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1985": {
      "op": "DUP3"
    },
    "1986": {
      "op": "ADD"
    },
    "1987": {
      "op": "MSTORE"
    },
    "1988": {
      "op": "PUSH32",
      "value": "0x6E7432353620676F7652756C654D617855736572732C61646472657373207768"
    },
    "2021": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2023": {
      "op": "DUP3"
    },
    "2024": {
      "op": "ADD"
    },
    "2025": {
      "op": "MSTORE"
    },
    "2026": {
      "op": "PUSH11",
      "value": "0x6974654C6973744E465429"
    },
    "2038": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "2040": {
      "op": "SHL"
    },
    "2041": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2043": {
      "op": "DUP3"
    },
    "2044": {
      "op": "ADD"
    },
    "2045": {
      "op": "MSTORE"
    },
    "2046": {
      "op": "PUSH1",
      "value": "0x6B"
    },
    "2048": {
      "op": "ADD"
    },
    "2049": {
      "op": "SWAP1"
    },
    "2050": {
      "op": "JUMP"
    },
    "2051": {
      "offset": [
        1811,
        1952
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2052": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1811,
        1952
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2054": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1811,
        1952
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2055": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1811,
        1952
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "2057": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1811,
        1952
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2058": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1811,
        1952
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2059": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1811,
        1952
      ],
      "op": "SUB",
      "path": "19"
    },
    "2060": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1811,
        1952
      ],
      "op": "SUB",
      "path": "19"
    },
    "2061": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1811,
        1952
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2062": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1811,
        1952
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2063": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1811,
        1952
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2064": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1811,
        1952
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2066": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1811,
        1952
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2067": {
      "offset": [
        1796,
        1954
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2068": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1796,
        1954
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2069": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1796,
        1954
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2070": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1796,
        1954
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "2072": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1796,
        1954
      ],
      "op": "ADD",
      "path": "19"
    },
    "2073": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        1796,
        1954
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "2074": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11243,
        11253
      ],
      "op": "DUP11",
      "path": "17"
    },
    "2075": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11225,
        11255
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2077": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11225,
        11255
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2078": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11225,
        11255
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "2080": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11225,
        11255
      ],
      "op": "ADD",
      "path": "17"
    },
    "2081": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11225,
        11255
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x82A"
    },
    "2084": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11225,
        11255
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2085": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11225,
        11255
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2086": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11225,
        11255
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1DB5"
    },
    "2089": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "jump": "i",
      "offset": [
        11225,
        11255
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2090": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11225,
        11255
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2091": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11225,
        11255
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2093": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11225,
        11255
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2094": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11225,
        11255
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2095": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2097": {
      "op": "NOT"
    },
    "2098": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11225,
        11255
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2099": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11225,
        11255
      ],
      "op": "DUP5",
      "path": "17"
    },
    "2100": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11225,
        11255
      ],
      "op": "SUB",
      "path": "17"
    },
    "2101": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11225,
        11255
      ],
      "op": "ADD",
      "path": "17"
    },
    "2102": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11225,
        11255
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2103": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11225,
        11255
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2104": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11225,
        11255
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2105": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11225,
        11255
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2106": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11225,
        11255
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2107": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11214,
        11257
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2108": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11214,
        11257
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2109": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11225,
        11255
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "2111": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11214,
        11257
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2112": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11214,
        11257
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2113": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11214,
        11257
      ],
      "op": "ADD",
      "path": "17"
    },
    "2114": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11214,
        11257
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "2115": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11147,
        11465
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2116": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11147,
        11465
      ],
      "op": "DUP4",
      "path": "17"
    },
    "2117": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11147,
        11465
      ],
      "op": "ADD",
      "path": "17"
    },
    "2118": {
      "op": "SWAP4"
    },
    "2119": {
      "op": "SWAP1"
    },
    "2120": {
      "op": "SWAP4"
    },
    "2121": {
      "op": "MSTORE"
    },
    "2122": {
      "op": "DUP2"
    },
    "2123": {
      "op": "ADD"
    },
    "2124": {
      "op": "SWAP2"
    },
    "2125": {
      "op": "SWAP1"
    },
    "2126": {
      "op": "SWAP2"
    },
    "2127": {
      "op": "MSTORE"
    },
    "2128": {
      "op": "DUP10"
    },
    "2129": {
      "op": "ISZERO"
    },
    "2130": {
      "op": "ISZERO"
    },
    "2131": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2133": {
      "op": "DUP3"
    },
    "2134": {
      "op": "ADD"
    },
    "2135": {
      "op": "MSTORE"
    },
    "2136": {
      "op": "DUP9"
    },
    "2137": {
      "op": "ISZERO"
    },
    "2138": {
      "op": "ISZERO"
    },
    "2139": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2141": {
      "op": "DUP3"
    },
    "2142": {
      "op": "ADD"
    },
    "2143": {
      "op": "MSTORE"
    },
    "2144": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2146": {
      "op": "DUP2"
    },
    "2147": {
      "op": "ADD"
    },
    "2148": {
      "op": "DUP9"
    },
    "2149": {
      "op": "SWAP1"
    },
    "2150": {
      "op": "MSTORE"
    },
    "2151": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2155": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2157": {
      "op": "SHL"
    },
    "2158": {
      "op": "SUB"
    },
    "2159": {
      "op": "DUP8"
    },
    "2160": {
      "op": "AND"
    },
    "2161": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "2163": {
      "op": "DUP3"
    },
    "2164": {
      "op": "ADD"
    },
    "2165": {
      "op": "MSTORE"
    },
    "2166": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2168": {
      "op": "ADD"
    },
    "2169": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11147,
        11465
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2170": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11147,
        11465
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2172": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11147,
        11465
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2173": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11147,
        11465
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "2175": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11147,
        11465
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2176": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11147,
        11465
      ],
      "op": "DUP4",
      "path": "17"
    },
    "2177": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11147,
        11465
      ],
      "op": "SUB",
      "path": "17"
    },
    "2178": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11147,
        11465
      ],
      "op": "SUB",
      "path": "17"
    },
    "2179": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11147,
        11465
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2180": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11147,
        11465
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2181": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11147,
        11465
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2182": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11147,
        11465
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2184": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11147,
        11465
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2185": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11124,
        11475
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2186": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11124,
        11475
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2187": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11124,
        11475
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2188": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11124,
        11475
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "2190": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11124,
        11475
      ],
      "op": "ADD",
      "path": "17"
    },
    "2191": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11124,
        11475
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "2192": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11106,
        11475
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2193": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11106,
        11475
      ],
      "op": "POP",
      "path": "17"
    },
    "2194": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11486,
        11502
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2196": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11546,
        11562
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2197": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11564,
        11571
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2198": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11516,
        11573
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2200": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11516,
        11573
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2201": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11516,
        11573
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "2203": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11516,
        11573
      ],
      "op": "ADD",
      "path": "17"
    },
    "2204": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11516,
        11573
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x8A6"
    },
    "2207": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11516,
        11573
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "2208": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11516,
        11573
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2209": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11516,
        11573
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2210": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11516,
        11573
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1DFD"
    },
    "2213": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "jump": "i",
      "offset": [
        11516,
        11573
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2214": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11516,
        11573
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2215": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11516,
        11573
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2217": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11516,
        11573
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2218": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11516,
        11573
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "2220": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11516,
        11573
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2221": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11516,
        11573
      ],
      "op": "DUP4",
      "path": "17"
    },
    "2222": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11516,
        11573
      ],
      "op": "SUB",
      "path": "17"
    },
    "2223": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11516,
        11573
      ],
      "op": "SUB",
      "path": "17"
    },
    "2224": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11516,
        11573
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2225": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11516,
        11573
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2226": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11516,
        11573
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2227": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11516,
        11573
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2229": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11516,
        11573
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2230": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11505,
        11575
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2231": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11505,
        11575
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2232": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11505,
        11575
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2233": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11505,
        11575
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "2235": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11505,
        11575
      ],
      "op": "ADD",
      "path": "17"
    },
    "2236": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11505,
        11575
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "2237": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11486,
        11575
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2238": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11486,
        11575
      ],
      "op": "POP",
      "path": "17"
    },
    "2239": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11593,
        11628
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 3,
      "value": "0x8C8"
    },
    "2242": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11606,
        11614
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2243": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11616,
        11626
      ],
      "op": "DUP7",
      "path": "17"
    },
    "2244": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11593,
        11604
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xA9E"
    },
    "2247": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "jump": "i",
      "offset": [
        11593,
        11628
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2248": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11593,
        11628
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2249": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        11586,
        11628
      ],
      "op": "SWAP12",
      "path": "17"
    },
    "2250": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "offset": [
        10525,
        11635
      ],
      "op": "SWAP11",
      "path": "17"
    },
    "2251": {
      "op": "POP"
    },
    "2252": {
      "op": "POP"
    },
    "2253": {
      "op": "POP"
    },
    "2254": {
      "op": "POP"
    },
    "2255": {
      "op": "POP"
    },
    "2256": {
      "op": "POP"
    },
    "2257": {
      "op": "POP"
    },
    "2258": {
      "op": "POP"
    },
    "2259": {
      "op": "POP"
    },
    "2260": {
      "op": "POP"
    },
    "2261": {
      "op": "POP"
    },
    "2262": {
      "fn": "CLHouseApi.SignerOCNewCLH",
      "jump": "o",
      "offset": [
        10525,
        11635
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2263": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        6483,
        7547
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2264": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        6764,
        6771
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2266": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        6788,
        6812
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2267": {
      "offset": [
        692,
        808
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2269": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        692,
        808
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2270": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        692,
        808
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "2272": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        692,
        808
      ],
      "op": "ADD",
      "path": "19"
    },
    "2273": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        692,
        808
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8E9"
    },
    "2276": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        692,
        808
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2277": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        692,
        808
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1D4B"
    },
    "2280": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "jump": "i",
      "offset": [
        692,
        808
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2281": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        692,
        808
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2282": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        692,
        808
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2284": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        692,
        808
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2285": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        692,
        808
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2286": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2288": {
      "op": "NOT"
    },
    "2289": {
      "offset": [
        692,
        808
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2290": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        692,
        808
      ],
      "op": "DUP5",
      "path": "19"
    },
    "2291": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        692,
        808
      ],
      "op": "SUB",
      "path": "19"
    },
    "2292": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        692,
        808
      ],
      "op": "ADD",
      "path": "19"
    },
    "2293": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        692,
        808
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2294": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        692,
        808
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2295": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        692,
        808
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2296": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        692,
        808
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2297": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        692,
        808
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2298": {
      "offset": [
        677,
        810
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2299": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        677,
        810
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2300": {
      "offset": [
        692,
        808
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "2302": {
      "offset": [
        677,
        810
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2303": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        677,
        810
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2304": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        677,
        810
      ],
      "op": "ADD",
      "path": "19"
    },
    "2305": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        677,
        810
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "2306": {
      "offset": [
        607,
        626
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2307": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        607,
        626
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2308": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        607,
        626
      ],
      "op": "ADD",
      "path": "19"
    },
    "2309": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        607,
        626
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2310": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        607,
        626
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2311": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        607,
        626
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x5"
    },
    "2313": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        607,
        626
      ],
      "op": "DUP5",
      "path": "19"
    },
    "2314": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        607,
        626
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2315": {
      "op": "PUSH5",
      "value": "0x302E322E3"
    },
    "2321": {
      "op": "PUSH1",
      "value": "0xDC"
    },
    "2323": {
      "op": "SHL"
    },
    "2324": {
      "offset": [
        607,
        626
      ],
      "op": "DUP5",
      "path": "19"
    },
    "2325": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        607,
        626
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2326": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        607,
        626
      ],
      "op": "ADD",
      "path": "19"
    },
    "2327": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        607,
        626
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2328": {
      "offset": [
        589,
        628
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2329": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        589,
        628
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2330": {
      "offset": [
        677,
        810
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2331": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        677,
        810
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "2332": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2334": {
      "op": "DUP1"
    },
    "2335": {
      "op": "MLOAD"
    },
    "2336": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2338": {
      "op": "PUSH2",
      "value": "0x1F5A"
    },
    "2341": {
      "op": "DUP4"
    },
    "2342": {
      "op": "CODECOPY"
    },
    "2343": {
      "op": "DUP2"
    },
    "2344": {
      "op": "MLOAD"
    },
    "2345": {
      "op": "SWAP2"
    },
    "2346": {
      "op": "MSTORE"
    },
    "2347": {
      "offset": [
        507,
        527
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "2348": {
      "offset": [
        589,
        628
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x935"
    },
    "2351": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        589,
        628
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "2352": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        589,
        628
      ],
      "op": "ADD",
      "path": "19"
    },
    "2353": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        589,
        628
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1DB5"
    },
    "2356": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "jump": "i",
      "offset": [
        589,
        628
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2357": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        589,
        628
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2358": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        589,
        628
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2360": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        589,
        628
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2361": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        589,
        628
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "2363": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        589,
        628
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2364": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        589,
        628
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2365": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        589,
        628
      ],
      "op": "SUB",
      "path": "19"
    },
    "2366": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        589,
        628
      ],
      "op": "SUB",
      "path": "19"
    },
    "2367": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        589,
        628
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2368": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        589,
        628
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2369": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        589,
        628
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2370": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        589,
        628
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2372": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        589,
        628
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2373": {
      "offset": [
        574,
        630
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2374": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        574,
        630
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2375": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        574,
        630
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2376": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        574,
        630
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "2378": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        574,
        630
      ],
      "op": "ADD",
      "path": "19"
    },
    "2379": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        574,
        630
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "2380": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        6992,
        7005
      ],
      "op": "CHAINID",
      "path": "17"
    },
    "2381": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7023,
        7033
      ],
      "op": "DUP8",
      "path": "17"
    },
    "2382": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        6838,
        7047
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2384": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        6838,
        7047
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2385": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        6838,
        7047
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "2387": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        6838,
        7047
      ],
      "op": "ADD",
      "path": "17"
    },
    "2388": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        6838,
        7047
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x961"
    },
    "2391": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        6838,
        7047
      ],
      "op": "SWAP6",
      "path": "17"
    },
    "2392": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        6838,
        7047
      ],
      "op": "SWAP5",
      "path": "17"
    },
    "2393": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        6838,
        7047
      ],
      "op": "SWAP4",
      "path": "17"
    },
    "2394": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        6838,
        7047
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "2395": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        6838,
        7047
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2396": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        6838,
        7047
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2397": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        6838,
        7047
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1DD1"
    },
    "2400": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "jump": "i",
      "offset": [
        6838,
        7047
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2401": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        6838,
        7047
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2402": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        6838,
        7047
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2404": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        6838,
        7047
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2405": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        6838,
        7047
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "2407": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        6838,
        7047
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2408": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        6838,
        7047
      ],
      "op": "DUP4",
      "path": "17"
    },
    "2409": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        6838,
        7047
      ],
      "op": "SUB",
      "path": "17"
    },
    "2410": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        6838,
        7047
      ],
      "op": "SUB",
      "path": "17"
    },
    "2411": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        6838,
        7047
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2412": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        6838,
        7047
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2413": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        6838,
        7047
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2414": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        6838,
        7047
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2416": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        6838,
        7047
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2417": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        6815,
        7057
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2418": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        6815,
        7057
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2419": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        6815,
        7057
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2420": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        6815,
        7057
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "2422": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        6815,
        7057
      ],
      "op": "ADD",
      "path": "17"
    },
    "2423": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        6815,
        7057
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "2424": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        6788,
        7057
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2425": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        6788,
        7057
      ],
      "op": "POP",
      "path": "17"
    },
    "2426": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7068,
        7083
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2428": {
      "offset": [
        1318,
        1448
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2430": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        1318,
        1448
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2431": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        1318,
        1448
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "2433": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        1318,
        1448
      ],
      "op": "ADD",
      "path": "19"
    },
    "2434": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        1318,
        1448
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x9FA"
    },
    "2437": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        1318,
        1448
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2438": {
      "op": "PUSH32",
      "value": "0x7374724F434E65775573657228616464726573732077616C6C6574416464722C"
    },
    "2471": {
      "op": "DUP2"
    },
    "2472": {
      "op": "MSTORE"
    },
    "2473": {
      "op": "PUSH32",
      "value": "0x737472696E67206E616D652C737472696E67206465736372697074696F6E2C62"
    },
    "2506": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2508": {
      "op": "DUP3"
    },
    "2509": {
      "op": "ADD"
    },
    "2510": {
      "op": "MSTORE"
    },
    "2511": {
      "op": "PUSH32",
      "value": "0x6F6F6C2069734D616E616765722C75696E743235362064656C617954696D6529"
    },
    "2544": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2546": {
      "op": "DUP3"
    },
    "2547": {
      "op": "ADD"
    },
    "2548": {
      "op": "MSTORE"
    },
    "2549": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2551": {
      "op": "ADD"
    },
    "2552": {
      "op": "SWAP1"
    },
    "2553": {
      "op": "JUMP"
    },
    "2554": {
      "offset": [
        1318,
        1448
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2555": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        1318,
        1448
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2557": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        1318,
        1448
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2558": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        1318,
        1448
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "2560": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        1318,
        1448
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2561": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        1318,
        1448
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2562": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        1318,
        1448
      ],
      "op": "SUB",
      "path": "19"
    },
    "2563": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        1318,
        1448
      ],
      "op": "SUB",
      "path": "19"
    },
    "2564": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        1318,
        1448
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2565": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        1318,
        1448
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2566": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        1318,
        1448
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2567": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        1318,
        1448
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2569": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        1318,
        1448
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2570": {
      "offset": [
        1303,
        1450
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2571": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        1303,
        1450
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2572": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        1303,
        1450
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2573": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        1303,
        1450
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "2575": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        1303,
        1450
      ],
      "op": "ADD",
      "path": "19"
    },
    "2576": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        1303,
        1450
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "2577": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7177,
        7188
      ],
      "op": "DUP11",
      "path": "17"
    },
    "2578": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7235,
        7240
      ],
      "op": "DUP11",
      "path": "17"
    },
    "2579": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7217,
        7242
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2581": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7217,
        7242
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2582": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7217,
        7242
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "2584": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7217,
        7242
      ],
      "op": "ADD",
      "path": "17"
    },
    "2585": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7217,
        7242
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xA22"
    },
    "2588": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7217,
        7242
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2589": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7217,
        7242
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2590": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7217,
        7242
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1DB5"
    },
    "2593": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "jump": "i",
      "offset": [
        7217,
        7242
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2594": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7217,
        7242
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2595": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7217,
        7242
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2597": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7217,
        7242
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2598": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7217,
        7242
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "2600": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7217,
        7242
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2601": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7217,
        7242
      ],
      "op": "DUP4",
      "path": "17"
    },
    "2602": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7217,
        7242
      ],
      "op": "SUB",
      "path": "17"
    },
    "2603": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7217,
        7242
      ],
      "op": "SUB",
      "path": "17"
    },
    "2604": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7217,
        7242
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2605": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7217,
        7242
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2606": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7217,
        7242
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2607": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7217,
        7242
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2609": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7217,
        7242
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2610": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7206,
        7244
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2611": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7206,
        7244
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2612": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7206,
        7244
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2613": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7206,
        7244
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "2615": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7206,
        7244
      ],
      "op": "ADD",
      "path": "17"
    },
    "2616": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7206,
        7244
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "2617": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7291,
        7303
      ],
      "op": "DUP11",
      "path": "17"
    },
    "2618": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7273,
        7305
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2620": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7273,
        7305
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2621": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7273,
        7305
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "2623": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7273,
        7305
      ],
      "op": "ADD",
      "path": "17"
    },
    "2624": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7273,
        7305
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xA49"
    },
    "2627": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7273,
        7305
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2628": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7273,
        7305
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2629": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7273,
        7305
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1DB5"
    },
    "2632": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "jump": "i",
      "offset": [
        7273,
        7305
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2633": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7273,
        7305
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2634": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7273,
        7305
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2636": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7273,
        7305
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2637": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7273,
        7305
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2638": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2640": {
      "op": "NOT"
    },
    "2641": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7273,
        7305
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2642": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7273,
        7305
      ],
      "op": "DUP5",
      "path": "17"
    },
    "2643": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7273,
        7305
      ],
      "op": "SUB",
      "path": "17"
    },
    "2644": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7273,
        7305
      ],
      "op": "ADD",
      "path": "17"
    },
    "2645": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7273,
        7305
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2646": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7273,
        7305
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2647": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7273,
        7305
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2648": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7273,
        7305
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2649": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7273,
        7305
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2650": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7262,
        7307
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2651": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7262,
        7307
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2652": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7273,
        7305
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "2654": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7262,
        7307
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2655": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7262,
        7307
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2656": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7262,
        7307
      ],
      "op": "ADD",
      "path": "17"
    },
    "2657": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7262,
        7307
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "2658": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7109,
        7377
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2659": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7109,
        7377
      ],
      "op": "DUP4",
      "path": "17"
    },
    "2660": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7109,
        7377
      ],
      "op": "ADD",
      "path": "17"
    },
    "2661": {
      "op": "SWAP6"
    },
    "2662": {
      "op": "SWAP1"
    },
    "2663": {
      "op": "SWAP6"
    },
    "2664": {
      "op": "MSTORE"
    },
    "2665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2667": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2669": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2671": {
      "op": "SHL"
    },
    "2672": {
      "op": "SUB"
    },
    "2673": {
      "op": "SWAP1"
    },
    "2674": {
      "op": "SWAP4"
    },
    "2675": {
      "op": "AND"
    },
    "2676": {
      "op": "SWAP3"
    },
    "2677": {
      "op": "DUP2"
    },
    "2678": {
      "op": "ADD"
    },
    "2679": {
      "op": "SWAP3"
    },
    "2680": {
      "op": "SWAP1"
    },
    "2681": {
      "op": "SWAP3"
    },
    "2682": {
      "op": "MSTORE"
    },
    "2683": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2685": {
      "op": "DUP3"
    },
    "2686": {
      "op": "ADD"
    },
    "2687": {
      "op": "MSTORE"
    },
    "2688": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2690": {
      "op": "DUP2"
    },
    "2691": {
      "op": "ADD"
    },
    "2692": {
      "op": "SWAP2"
    },
    "2693": {
      "op": "SWAP1"
    },
    "2694": {
      "op": "SWAP2"
    },
    "2695": {
      "op": "MSTORE"
    },
    "2696": {
      "op": "DUP8"
    },
    "2697": {
      "op": "ISZERO"
    },
    "2698": {
      "op": "ISZERO"
    },
    "2699": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2701": {
      "op": "DUP3"
    },
    "2702": {
      "op": "ADD"
    },
    "2703": {
      "op": "MSTORE"
    },
    "2704": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "2706": {
      "op": "DUP2"
    },
    "2707": {
      "op": "ADD"
    },
    "2708": {
      "op": "DUP8"
    },
    "2709": {
      "op": "SWAP1"
    },
    "2710": {
      "op": "MSTORE"
    },
    "2711": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2713": {
      "op": "ADD"
    },
    "2714": {
      "fn": "CLHouseApi.SignerOCInvitUser",
      "offset": [
        7109,
        7377
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x879"
    },
    "2717": {
      "op": "JUMP"
    },
    "2718": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        413,
        1105
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2719": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        545,
        552
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2721": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        578,
        588
      ],
      "op": "DUP2",
      "path": "17",
      "statement": 4
    },
    "2722": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        578,
        595
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2723": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        599,
        601
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x41"
    },
    "2725": {
      "branch": 13,
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        578,
        601
      ],
      "op": "EQ",
      "path": "17"
    },
    "2726": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        569,
        627
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xAEC"
    },
    "2729": {
      "branch": 13,
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        569,
        627
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "2730": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        569,
        627
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2732": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        569,
        627
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2733": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2737": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2739": {
      "op": "SHL"
    },
    "2740": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        569,
        627
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2741": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        569,
        627
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2742": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2744": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        569,
        627
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "2746": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        569,
        627
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2747": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        569,
        627
      ],
      "op": "ADD",
      "path": "17"
    },
    "2748": {
      "op": "MSTORE"
    },
    "2749": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "2751": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2753": {
      "op": "DUP3"
    },
    "2754": {
      "op": "ADD"
    },
    "2755": {
      "op": "MSTORE"
    },
    "2756": {
      "op": "PUSH20",
      "value": "0x84C2C840E6D2CEDCC2E8EAE4CA40D8CADCCEE8D"
    },
    "2777": {
      "op": "PUSH1",
      "value": "0x63"
    },
    "2779": {
      "op": "SHL"
    },
    "2780": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2782": {
      "op": "DUP3"
    },
    "2783": {
      "op": "ADD"
    },
    "2784": {
      "op": "MSTORE"
    },
    "2785": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2787": {
      "op": "ADD"
    },
    "2788": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        569,
        627
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2790": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        569,
        627
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2791": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        569,
        627
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2792": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        569,
        627
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2793": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        569,
        627
      ],
      "op": "SUB",
      "path": "17"
    },
    "2794": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        569,
        627
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2795": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        569,
        627
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "17"
    },
    "2796": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        569,
        627
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2797": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        817,
        819
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "2799": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        800,
        821
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2800": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        800,
        821
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2801": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        800,
        821
      ],
      "op": "ADD",
      "path": "17"
    },
    "2802": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        793,
        823
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2803": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        900,
        902
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2805": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        883,
        904
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2806": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        883,
        904
      ],
      "op": "DUP6",
      "path": "17"
    },
    "2807": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        883,
        904
      ],
      "op": "ADD",
      "path": "17"
    },
    "2808": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        876,
        906
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2809": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1021,
        1023
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x60"
    },
    "2811": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1004,
        1025
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2812": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1004,
        1025
      ],
      "op": "DUP8",
      "path": "17"
    },
    "2813": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1004,
        1025
      ],
      "op": "ADD",
      "path": "17"
    },
    "2814": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        997,
        1027
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2815": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1056,
        1098
      ],
      "op": "DUP4",
      "path": "17",
      "statement": 5
    },
    "2816": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1056,
        1098
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2817": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        638,
        651
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2819": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1056,
        1098
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2820": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1056,
        1098
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2821": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1056,
        1098
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2822": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1056,
        1098
      ],
      "op": "SWAP7",
      "path": "17"
    },
    "2823": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1056,
        1098
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2824": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1056,
        1098
      ],
      "op": "ADD",
      "path": "17"
    },
    "2825": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1056,
        1098
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2826": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1056,
        1098
      ],
      "op": "DUP7",
      "path": "17"
    },
    "2827": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1056,
        1098
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2828": {
      "op": "DUP11"
    },
    "2829": {
      "op": "SWAP1"
    },
    "2830": {
      "op": "MSTORE"
    },
    "2831": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        988,
        1029
      ],
      "op": "SWAP6",
      "path": "17"
    },
    "2832": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        988,
        1029
      ],
      "op": "BYTE",
      "path": "17"
    },
    "2833": {
      "op": "SWAP3"
    },
    "2834": {
      "op": "DUP6"
    },
    "2835": {
      "op": "ADD"
    },
    "2836": {
      "op": "DUP4"
    },
    "2837": {
      "op": "SWAP1"
    },
    "2838": {
      "op": "MSTORE"
    },
    "2839": {
      "op": "DUP5"
    },
    "2840": {
      "op": "ADD"
    },
    "2841": {
      "op": "DUP4"
    },
    "2842": {
      "op": "SWAP1"
    },
    "2843": {
      "op": "MSTORE"
    },
    "2844": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2846": {
      "op": "DUP5"
    },
    "2847": {
      "op": "ADD"
    },
    "2848": {
      "op": "DUP2"
    },
    "2849": {
      "op": "SWAP1"
    },
    "2850": {
      "op": "MSTORE"
    },
    "2851": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        793,
        823
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2852": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        793,
        823
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "2853": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1056,
        1098
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "2855": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1056,
        1098
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2856": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2858": {
      "op": "ADD"
    },
    "2859": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1056,
        1098
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "2861": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1056,
        1098
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2863": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1056,
        1098
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2864": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1056,
        1098
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "2866": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1056,
        1098
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2867": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1056,
        1098
      ],
      "op": "SUB",
      "path": "17"
    },
    "2868": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1056,
        1098
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2869": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1056,
        1098
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2870": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1056,
        1098
      ],
      "op": "DUP5",
      "path": "17"
    },
    "2871": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1056,
        1098
      ],
      "op": "SUB",
      "path": "17"
    },
    "2872": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1056,
        1098
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2873": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1056,
        1098
      ],
      "op": "DUP6",
      "path": "17"
    },
    "2874": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1056,
        1098
      ],
      "op": "GAS",
      "path": "17"
    },
    "2875": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1056,
        1098
      ],
      "op": "STATICCALL",
      "path": "17"
    },
    "2876": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1056,
        1098
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "2877": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1056,
        1098
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2878": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1056,
        1098
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "2879": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1056,
        1098
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xB4C"
    },
    "2882": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1056,
        1098
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "2883": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1056,
        1098
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "2884": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1056,
        1098
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2886": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1056,
        1098
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2887": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1056,
        1098
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "2888": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1056,
        1098
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "2889": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1056,
        1098
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2891": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1056,
        1098
      ],
      "op": "REVERT",
      "path": "17"
    },
    "2892": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1056,
        1098
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2893": {
      "op": "POP"
    },
    "2894": {
      "op": "POP"
    },
    "2895": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1056,
        1098
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2897": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1056,
        1098
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2898": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2900": {
      "op": "NOT"
    },
    "2901": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1056,
        1098
      ],
      "op": "ADD",
      "path": "17"
    },
    "2902": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1056,
        1098
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2903": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        1056,
        1098
      ],
      "op": "SWAP8",
      "path": "17"
    },
    "2904": {
      "fn": "CLHouseApi.SignerOfMsg",
      "offset": [
        413,
        1105
      ],
      "op": "SWAP7",
      "path": "17"
    },
    "2905": {
      "op": "POP"
    },
    "2906": {
      "op": "POP"
    },
    "2907": {
      "op": "POP"
    },
    "2908": {
      "op": "POP"
    },
    "2909": {
      "op": "POP"
    },
    "2910": {
      "op": "POP"
    },
    "2911": {
      "op": "POP"
    },
    "2912": {
      "fn": "CLHouseApi.SignerOfMsg",
      "jump": "o",
      "offset": [
        413,
        1105
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2913": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13288,
        14099
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2914": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13456,
        13463
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2916": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13480,
        13504
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2917": {
      "offset": [
        692,
        808
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2919": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        692,
        808
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2920": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        692,
        808
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "2922": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        692,
        808
      ],
      "op": "ADD",
      "path": "19"
    },
    "2923": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        692,
        808
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB73"
    },
    "2926": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        692,
        808
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2927": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        692,
        808
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1D4B"
    },
    "2930": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "jump": "i",
      "offset": [
        692,
        808
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2931": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        692,
        808
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2932": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        692,
        808
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2934": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        692,
        808
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2935": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        692,
        808
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2936": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2938": {
      "op": "NOT"
    },
    "2939": {
      "offset": [
        692,
        808
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2940": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        692,
        808
      ],
      "op": "DUP5",
      "path": "19"
    },
    "2941": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        692,
        808
      ],
      "op": "SUB",
      "path": "19"
    },
    "2942": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        692,
        808
      ],
      "op": "ADD",
      "path": "19"
    },
    "2943": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        692,
        808
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2944": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        692,
        808
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2945": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        692,
        808
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2946": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        692,
        808
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2947": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        692,
        808
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2948": {
      "offset": [
        677,
        810
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2949": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        677,
        810
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2950": {
      "offset": [
        692,
        808
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "2952": {
      "offset": [
        677,
        810
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2953": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        677,
        810
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2954": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        677,
        810
      ],
      "op": "ADD",
      "path": "19"
    },
    "2955": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        677,
        810
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "2956": {
      "offset": [
        607,
        626
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2957": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        607,
        626
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2958": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        607,
        626
      ],
      "op": "ADD",
      "path": "19"
    },
    "2959": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        607,
        626
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2960": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        607,
        626
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2961": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        607,
        626
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x5"
    },
    "2963": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        607,
        626
      ],
      "op": "DUP5",
      "path": "19"
    },
    "2964": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        607,
        626
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2965": {
      "op": "PUSH5",
      "value": "0x302E322E3"
    },
    "2971": {
      "op": "PUSH1",
      "value": "0xDC"
    },
    "2973": {
      "op": "SHL"
    },
    "2974": {
      "offset": [
        607,
        626
      ],
      "op": "DUP5",
      "path": "19"
    },
    "2975": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        607,
        626
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2976": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        607,
        626
      ],
      "op": "ADD",
      "path": "19"
    },
    "2977": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        607,
        626
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2978": {
      "offset": [
        589,
        628
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2979": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        589,
        628
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2980": {
      "offset": [
        677,
        810
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2981": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        677,
        810
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "2982": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2984": {
      "op": "DUP1"
    },
    "2985": {
      "op": "MLOAD"
    },
    "2986": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2988": {
      "op": "PUSH2",
      "value": "0x1F5A"
    },
    "2991": {
      "op": "DUP4"
    },
    "2992": {
      "op": "CODECOPY"
    },
    "2993": {
      "op": "DUP2"
    },
    "2994": {
      "op": "MLOAD"
    },
    "2995": {
      "op": "SWAP2"
    },
    "2996": {
      "op": "MSTORE"
    },
    "2997": {
      "offset": [
        507,
        527
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "2998": {
      "offset": [
        589,
        628
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xBBF"
    },
    "3001": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        589,
        628
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "3002": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        589,
        628
      ],
      "op": "ADD",
      "path": "19"
    },
    "3003": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        589,
        628
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1DB5"
    },
    "3006": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "jump": "i",
      "offset": [
        589,
        628
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3007": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        589,
        628
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3008": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        589,
        628
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3010": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        589,
        628
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3011": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        589,
        628
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3013": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        589,
        628
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3014": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        589,
        628
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3015": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        589,
        628
      ],
      "op": "SUB",
      "path": "19"
    },
    "3016": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        589,
        628
      ],
      "op": "SUB",
      "path": "19"
    },
    "3017": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        589,
        628
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3018": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        589,
        628
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3019": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        589,
        628
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3020": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        589,
        628
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3022": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        589,
        628
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3023": {
      "offset": [
        574,
        630
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3024": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        574,
        630
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3025": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        574,
        630
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3026": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        574,
        630
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3028": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        574,
        630
      ],
      "op": "ADD",
      "path": "19"
    },
    "3029": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        574,
        630
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "3030": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13684,
        13697
      ],
      "op": "CHAINID",
      "path": "17"
    },
    "3031": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13715,
        13725
      ],
      "op": "DUP8",
      "path": "17"
    },
    "3032": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13530,
        13739
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3034": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13530,
        13739
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3035": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13530,
        13739
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3037": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13530,
        13739
      ],
      "op": "ADD",
      "path": "17"
    },
    "3038": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13530,
        13739
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xBEB"
    },
    "3041": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13530,
        13739
      ],
      "op": "SWAP6",
      "path": "17"
    },
    "3042": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13530,
        13739
      ],
      "op": "SWAP5",
      "path": "17"
    },
    "3043": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13530,
        13739
      ],
      "op": "SWAP4",
      "path": "17"
    },
    "3044": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13530,
        13739
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "3045": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13530,
        13739
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3046": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13530,
        13739
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3047": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13530,
        13739
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1DD1"
    },
    "3050": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "jump": "i",
      "offset": [
        13530,
        13739
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3051": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13530,
        13739
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3052": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13530,
        13739
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3054": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13530,
        13739
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3055": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13530,
        13739
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3057": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13530,
        13739
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3058": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13530,
        13739
      ],
      "op": "DUP4",
      "path": "17"
    },
    "3059": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13530,
        13739
      ],
      "op": "SUB",
      "path": "17"
    },
    "3060": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13530,
        13739
      ],
      "op": "SUB",
      "path": "17"
    },
    "3061": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13530,
        13739
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3062": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13530,
        13739
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3063": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13530,
        13739
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3064": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13530,
        13739
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3066": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13530,
        13739
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3067": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13507,
        13749
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3068": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13507,
        13749
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3069": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13507,
        13749
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3070": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13507,
        13749
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3072": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13507,
        13749
      ],
      "op": "ADD",
      "path": "17"
    },
    "3073": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13507,
        13749
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "3074": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13480,
        13749
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3075": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13480,
        13749
      ],
      "op": "POP",
      "path": "17"
    },
    "3076": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13760,
        13775
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "3078": {
      "offset": [
        2208,
        2274
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3080": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        2208,
        2274
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3081": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        2208,
        2274
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3083": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        2208,
        2274
      ],
      "op": "ADD",
      "path": "19"
    },
    "3084": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        2208,
        2274
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xC38"
    },
    "3087": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        2208,
        2274
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3088": {
      "op": "PUSH32",
      "value": "0x7374724F435570434C484E616D6528737472696E6720686F7573654E616D6529"
    },
    "3121": {
      "op": "DUP2"
    },
    "3122": {
      "op": "MSTORE"
    },
    "3123": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3125": {
      "op": "ADD"
    },
    "3126": {
      "op": "SWAP1"
    },
    "3127": {
      "op": "JUMP"
    },
    "3128": {
      "offset": [
        2208,
        2274
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3129": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        2208,
        2274
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3131": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        2208,
        2274
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3132": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        2208,
        2274
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3134": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        2208,
        2274
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3135": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        2208,
        2274
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3136": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        2208,
        2274
      ],
      "op": "SUB",
      "path": "19"
    },
    "3137": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        2208,
        2274
      ],
      "op": "SUB",
      "path": "19"
    },
    "3138": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        2208,
        2274
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3139": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        2208,
        2274
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3140": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        2208,
        2274
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3141": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        2208,
        2274
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3143": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        2208,
        2274
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3144": {
      "offset": [
        2193,
        2276
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3145": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        2193,
        2276
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3146": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        2193,
        2276
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3147": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        2193,
        2276
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3149": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        2193,
        2276
      ],
      "op": "ADD",
      "path": "19"
    },
    "3150": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        2193,
        2276
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "3151": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13901,
        13911
      ],
      "op": "DUP7",
      "path": "17"
    },
    "3152": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13883,
        13913
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3154": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13883,
        13913
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3155": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13883,
        13913
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3157": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13883,
        13913
      ],
      "op": "ADD",
      "path": "17"
    },
    "3158": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13883,
        13913
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xC5F"
    },
    "3161": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13883,
        13913
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3162": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13883,
        13913
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3163": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13883,
        13913
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1DB5"
    },
    "3166": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "jump": "i",
      "offset": [
        13883,
        13913
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3167": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13883,
        13913
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3168": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13883,
        13913
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3170": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13883,
        13913
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3171": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13883,
        13913
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3173": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13883,
        13913
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3174": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13883,
        13913
      ],
      "op": "DUP4",
      "path": "17"
    },
    "3175": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13883,
        13913
      ],
      "op": "SUB",
      "path": "17"
    },
    "3176": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13883,
        13913
      ],
      "op": "SUB",
      "path": "17"
    },
    "3177": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13883,
        13913
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3178": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13883,
        13913
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3179": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13883,
        13913
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3180": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13883,
        13913
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3182": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13883,
        13913
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3183": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13872,
        13915
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3184": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13872,
        13915
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3185": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13872,
        13915
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3186": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13872,
        13915
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3188": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13872,
        13915
      ],
      "op": "ADD",
      "path": "17"
    },
    "3189": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13872,
        13915
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "3190": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13801,
        13929
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3192": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13801,
        13929
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3193": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13801,
        13929
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3195": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13801,
        13929
      ],
      "op": "ADD",
      "path": "17"
    },
    "3196": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13801,
        13929
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x672"
    },
    "3199": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13801,
        13929
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "3200": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13801,
        13929
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3201": {
      "fn": "CLHouseApi.SignerOCUpCLHName",
      "offset": [
        13801,
        13929
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3202": {
      "op": "SWAP2"
    },
    "3203": {
      "op": "DUP3"
    },
    "3204": {
      "op": "MSTORE"
    },
    "3205": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3207": {
      "op": "DUP3"
    },
    "3208": {
      "op": "ADD"
    },
    "3209": {
      "op": "MSTORE"
    },
    "3210": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3212": {
      "op": "ADD"
    },
    "3213": {
      "op": "SWAP1"
    },
    "3214": {
      "op": "JUMP"
    },
    "3215": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        3785,
        4689
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3216": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        3997,
        4004
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "3218": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4021,
        4045
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3219": {
      "offset": [
        692,
        808
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3221": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        692,
        808
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3222": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        692,
        808
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3224": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        692,
        808
      ],
      "op": "ADD",
      "path": "19"
    },
    "3225": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        692,
        808
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xCA1"
    },
    "3228": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        692,
        808
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3229": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        692,
        808
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1D4B"
    },
    "3232": {
      "fn": "CLHouseApi.SignerOCVote",
      "jump": "i",
      "offset": [
        692,
        808
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3233": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        692,
        808
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3234": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        692,
        808
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3236": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        692,
        808
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3237": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        692,
        808
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3238": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3240": {
      "op": "NOT"
    },
    "3241": {
      "offset": [
        692,
        808
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3242": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        692,
        808
      ],
      "op": "DUP5",
      "path": "19"
    },
    "3243": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        692,
        808
      ],
      "op": "SUB",
      "path": "19"
    },
    "3244": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        692,
        808
      ],
      "op": "ADD",
      "path": "19"
    },
    "3245": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        692,
        808
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3246": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        692,
        808
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3247": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        692,
        808
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3248": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        692,
        808
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3249": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        692,
        808
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3250": {
      "offset": [
        677,
        810
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3251": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        677,
        810
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3252": {
      "offset": [
        692,
        808
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3254": {
      "offset": [
        677,
        810
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3255": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        677,
        810
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3256": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        677,
        810
      ],
      "op": "ADD",
      "path": "19"
    },
    "3257": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        677,
        810
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "3258": {
      "offset": [
        607,
        626
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3259": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        607,
        626
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3260": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        607,
        626
      ],
      "op": "ADD",
      "path": "19"
    },
    "3261": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        607,
        626
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3262": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        607,
        626
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3263": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        607,
        626
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x5"
    },
    "3265": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        607,
        626
      ],
      "op": "DUP5",
      "path": "19"
    },
    "3266": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        607,
        626
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3267": {
      "op": "PUSH5",
      "value": "0x302E322E3"
    },
    "3273": {
      "op": "PUSH1",
      "value": "0xDC"
    },
    "3275": {
      "op": "SHL"
    },
    "3276": {
      "offset": [
        607,
        626
      ],
      "op": "DUP5",
      "path": "19"
    },
    "3277": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        607,
        626
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3278": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        607,
        626
      ],
      "op": "ADD",
      "path": "19"
    },
    "3279": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        607,
        626
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3280": {
      "offset": [
        589,
        628
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3281": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        589,
        628
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3282": {
      "offset": [
        677,
        810
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3283": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        677,
        810
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "3284": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3286": {
      "op": "DUP1"
    },
    "3287": {
      "op": "MLOAD"
    },
    "3288": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3290": {
      "op": "PUSH2",
      "value": "0x1F5A"
    },
    "3293": {
      "op": "DUP4"
    },
    "3294": {
      "op": "CODECOPY"
    },
    "3295": {
      "op": "DUP2"
    },
    "3296": {
      "op": "MLOAD"
    },
    "3297": {
      "op": "SWAP2"
    },
    "3298": {
      "op": "MSTORE"
    },
    "3299": {
      "offset": [
        507,
        527
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "3300": {
      "offset": [
        589,
        628
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xCED"
    },
    "3303": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        589,
        628
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "3304": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        589,
        628
      ],
      "op": "ADD",
      "path": "19"
    },
    "3305": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        589,
        628
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1DB5"
    },
    "3308": {
      "fn": "CLHouseApi.SignerOCVote",
      "jump": "i",
      "offset": [
        589,
        628
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3309": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        589,
        628
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3310": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        589,
        628
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3312": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        589,
        628
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3313": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        589,
        628
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3315": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        589,
        628
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3316": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        589,
        628
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3317": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        589,
        628
      ],
      "op": "SUB",
      "path": "19"
    },
    "3318": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        589,
        628
      ],
      "op": "SUB",
      "path": "19"
    },
    "3319": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        589,
        628
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3320": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        589,
        628
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3321": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        589,
        628
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3322": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        589,
        628
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3324": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        589,
        628
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3325": {
      "offset": [
        574,
        630
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3326": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        574,
        630
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3327": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        574,
        630
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3328": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        574,
        630
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3330": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        574,
        630
      ],
      "op": "ADD",
      "path": "19"
    },
    "3331": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        574,
        630
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "3332": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4225,
        4238
      ],
      "op": "CHAINID",
      "path": "17"
    },
    "3333": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4256,
        4266
      ],
      "op": "DUP8",
      "path": "17"
    },
    "3334": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4071,
        4280
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3336": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4071,
        4280
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3337": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4071,
        4280
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3339": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4071,
        4280
      ],
      "op": "ADD",
      "path": "17"
    },
    "3340": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4071,
        4280
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xD19"
    },
    "3343": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4071,
        4280
      ],
      "op": "SWAP6",
      "path": "17"
    },
    "3344": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4071,
        4280
      ],
      "op": "SWAP5",
      "path": "17"
    },
    "3345": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4071,
        4280
      ],
      "op": "SWAP4",
      "path": "17"
    },
    "3346": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4071,
        4280
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "3347": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4071,
        4280
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3348": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4071,
        4280
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3349": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4071,
        4280
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1DD1"
    },
    "3352": {
      "fn": "CLHouseApi.SignerOCVote",
      "jump": "i",
      "offset": [
        4071,
        4280
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3353": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4071,
        4280
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3354": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4071,
        4280
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3356": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4071,
        4280
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3357": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4071,
        4280
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3359": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4071,
        4280
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3360": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4071,
        4280
      ],
      "op": "DUP4",
      "path": "17"
    },
    "3361": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4071,
        4280
      ],
      "op": "SUB",
      "path": "17"
    },
    "3362": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4071,
        4280
      ],
      "op": "SUB",
      "path": "17"
    },
    "3363": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4071,
        4280
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3364": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4071,
        4280
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3365": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4071,
        4280
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3366": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4071,
        4280
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3368": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4071,
        4280
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3369": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4048,
        4290
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3370": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4048,
        4290
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3371": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4048,
        4290
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3372": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4048,
        4290
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3374": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4048,
        4290
      ],
      "op": "ADD",
      "path": "17"
    },
    "3375": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4048,
        4290
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "3376": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4021,
        4290
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3377": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4021,
        4290
      ],
      "op": "POP",
      "path": "17"
    },
    "3378": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4301,
        4316
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "3380": {
      "offset": [
        1002,
        1095
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3382": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1002,
        1095
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3383": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1002,
        1095
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3385": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1002,
        1095
      ],
      "op": "ADD",
      "path": "19"
    },
    "3386": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1002,
        1095
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xD8C"
    },
    "3389": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1002,
        1095
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3390": {
      "op": "PUSH32",
      "value": "0x7374724F43566F74652875696E743235362070726F7049642C626F6F6C207375"
    },
    "3423": {
      "op": "DUP2"
    },
    "3424": {
      "op": "MSTORE"
    },
    "3425": {
      "op": "PUSH32",
      "value": "0x70706F72742C737472696E67206A757374696669636174696F6E290000000000"
    },
    "3458": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3460": {
      "op": "DUP3"
    },
    "3461": {
      "op": "ADD"
    },
    "3462": {
      "op": "MSTORE"
    },
    "3463": {
      "op": "PUSH1",
      "value": "0x3B"
    },
    "3465": {
      "op": "ADD"
    },
    "3466": {
      "op": "SWAP1"
    },
    "3467": {
      "op": "JUMP"
    },
    "3468": {
      "offset": [
        1002,
        1095
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3469": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1002,
        1095
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3471": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1002,
        1095
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3472": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1002,
        1095
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3474": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1002,
        1095
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3475": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1002,
        1095
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3476": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1002,
        1095
      ],
      "op": "SUB",
      "path": "19"
    },
    "3477": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1002,
        1095
      ],
      "op": "SUB",
      "path": "19"
    },
    "3478": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1002,
        1095
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3479": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1002,
        1095
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3480": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1002,
        1095
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3481": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1002,
        1095
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3483": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        1002,
        1095
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3484": {
      "offset": [
        987,
        1097
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3485": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        987,
        1097
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3486": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        987,
        1097
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3487": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        987,
        1097
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3489": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        987,
        1097
      ],
      "op": "ADD",
      "path": "19"
    },
    "3490": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        987,
        1097
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "3491": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4407,
        4414
      ],
      "op": "DUP9",
      "path": "17"
    },
    "3492": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4432,
        4440
      ],
      "op": "DUP9",
      "path": "17"
    },
    "3493": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4487,
        4501
      ],
      "op": "DUP9",
      "path": "17"
    },
    "3494": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4469,
        4503
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3496": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4469,
        4503
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3497": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4469,
        4503
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3499": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4469,
        4503
      ],
      "op": "ADD",
      "path": "17"
    },
    "3500": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4469,
        4503
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xDB5"
    },
    "3503": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4469,
        4503
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3504": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4469,
        4503
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3505": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4469,
        4503
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1DB5"
    },
    "3508": {
      "fn": "CLHouseApi.SignerOCVote",
      "jump": "i",
      "offset": [
        4469,
        4503
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3509": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4469,
        4503
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3510": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4469,
        4503
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3512": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4469,
        4503
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3513": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4469,
        4503
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3514": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3516": {
      "op": "NOT"
    },
    "3517": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4469,
        4503
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3518": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4469,
        4503
      ],
      "op": "DUP5",
      "path": "17"
    },
    "3519": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4469,
        4503
      ],
      "op": "SUB",
      "path": "17"
    },
    "3520": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4469,
        4503
      ],
      "op": "ADD",
      "path": "17"
    },
    "3521": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4469,
        4503
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3522": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4469,
        4503
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3523": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4469,
        4503
      ],
      "op": "DUP3",
      "path": "17"
    },
    "3524": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4469,
        4503
      ],
      "op": "DUP3",
      "path": "17"
    },
    "3525": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4469,
        4503
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3526": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4458,
        4505
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3527": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4458,
        4505
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3528": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4469,
        4503
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3530": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4458,
        4505
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3531": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4458,
        4505
      ],
      "op": "DUP3",
      "path": "17"
    },
    "3532": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4458,
        4505
      ],
      "op": "ADD",
      "path": "17"
    },
    "3533": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4458,
        4505
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "3534": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4342,
        4519
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3535": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4342,
        4519
      ],
      "op": "DUP4",
      "path": "17"
    },
    "3536": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4342,
        4519
      ],
      "op": "ADD",
      "path": "17"
    },
    "3537": {
      "op": "SWAP6"
    },
    "3538": {
      "op": "SWAP1"
    },
    "3539": {
      "op": "SWAP6"
    },
    "3540": {
      "op": "MSTORE"
    },
    "3541": {
      "op": "DUP2"
    },
    "3542": {
      "op": "ADD"
    },
    "3543": {
      "op": "SWAP3"
    },
    "3544": {
      "op": "SWAP1"
    },
    "3545": {
      "op": "SWAP3"
    },
    "3546": {
      "op": "MSTORE"
    },
    "3547": {
      "op": "ISZERO"
    },
    "3548": {
      "op": "ISZERO"
    },
    "3549": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3551": {
      "op": "DUP3"
    },
    "3552": {
      "op": "ADD"
    },
    "3553": {
      "op": "MSTORE"
    },
    "3554": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3556": {
      "op": "DUP2"
    },
    "3557": {
      "op": "ADD"
    },
    "3558": {
      "op": "SWAP2"
    },
    "3559": {
      "op": "SWAP1"
    },
    "3560": {
      "op": "SWAP2"
    },
    "3561": {
      "op": "MSTORE"
    },
    "3562": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3564": {
      "op": "ADD"
    },
    "3565": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4342,
        4519
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3566": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4342,
        4519
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3568": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4342,
        4519
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3569": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4342,
        4519
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3571": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4342,
        4519
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3572": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4342,
        4519
      ],
      "op": "DUP4",
      "path": "17"
    },
    "3573": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4342,
        4519
      ],
      "op": "SUB",
      "path": "17"
    },
    "3574": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4342,
        4519
      ],
      "op": "SUB",
      "path": "17"
    },
    "3575": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4342,
        4519
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3576": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4342,
        4519
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3577": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4342,
        4519
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3578": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4342,
        4519
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3580": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4342,
        4519
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3581": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4319,
        4529
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3582": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4319,
        4529
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3583": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4319,
        4529
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3584": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4319,
        4529
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3586": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4319,
        4529
      ],
      "op": "ADD",
      "path": "17"
    },
    "3587": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4319,
        4529
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "3588": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4301,
        4529
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3589": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4301,
        4529
      ],
      "op": "POP",
      "path": "17"
    },
    "3590": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4540,
        4556
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "3592": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4600,
        4616
      ],
      "op": "DUP3",
      "path": "17"
    },
    "3593": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4618,
        4625
      ],
      "op": "DUP3",
      "path": "17"
    },
    "3594": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4570,
        4627
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3596": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4570,
        4627
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3597": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4570,
        4627
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3599": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4570,
        4627
      ],
      "op": "ADD",
      "path": "17"
    },
    "3600": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4570,
        4627
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xE1A"
    },
    "3603": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4570,
        4627
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "3604": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4570,
        4627
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3605": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4570,
        4627
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3606": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4570,
        4627
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1DFD"
    },
    "3609": {
      "fn": "CLHouseApi.SignerOCVote",
      "jump": "i",
      "offset": [
        4570,
        4627
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3610": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4570,
        4627
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3611": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4570,
        4627
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3613": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4570,
        4627
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3614": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4570,
        4627
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3616": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4570,
        4627
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3617": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4570,
        4627
      ],
      "op": "DUP4",
      "path": "17"
    },
    "3618": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4570,
        4627
      ],
      "op": "SUB",
      "path": "17"
    },
    "3619": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4570,
        4627
      ],
      "op": "SUB",
      "path": "17"
    },
    "3620": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4570,
        4627
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3621": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4570,
        4627
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3622": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4570,
        4627
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3623": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4570,
        4627
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3625": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4570,
        4627
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3626": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4559,
        4629
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3627": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4559,
        4629
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3628": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4559,
        4629
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3629": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4559,
        4629
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3631": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4559,
        4629
      ],
      "op": "ADD",
      "path": "17"
    },
    "3632": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4559,
        4629
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "3633": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4540,
        4629
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3634": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4540,
        4629
      ],
      "op": "POP",
      "path": "17"
    },
    "3635": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4647,
        4682
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 6,
      "value": "0xE3C"
    },
    "3638": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4660,
        4668
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3639": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4670,
        4680
      ],
      "op": "DUP7",
      "path": "17"
    },
    "3640": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4647,
        4658
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xA9E"
    },
    "3643": {
      "fn": "CLHouseApi.SignerOCVote",
      "jump": "i",
      "offset": [
        4647,
        4682
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3644": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4647,
        4682
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3645": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        4640,
        4682
      ],
      "op": "SWAP10",
      "path": "17"
    },
    "3646": {
      "fn": "CLHouseApi.SignerOCVote",
      "offset": [
        3785,
        4689
      ],
      "op": "SWAP9",
      "path": "17"
    },
    "3647": {
      "op": "POP"
    },
    "3648": {
      "op": "POP"
    },
    "3649": {
      "op": "POP"
    },
    "3650": {
      "op": "POP"
    },
    "3651": {
      "op": "POP"
    },
    "3652": {
      "op": "POP"
    },
    "3653": {
      "op": "POP"
    },
    "3654": {
      "op": "POP"
    },
    "3655": {
      "op": "POP"
    },
    "3656": {
      "fn": "CLHouseApi.SignerOCVote",
      "jump": "o",
      "offset": [
        3785,
        4689
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3657": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        7860,
        8787
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3658": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8088,
        8095
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "3660": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8112,
        8136
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3661": {
      "offset": [
        692,
        808
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3663": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        692,
        808
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3664": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        692,
        808
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3666": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        692,
        808
      ],
      "op": "ADD",
      "path": "19"
    },
    "3667": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        692,
        808
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xE5B"
    },
    "3670": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        692,
        808
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3671": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        692,
        808
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1D4B"
    },
    "3674": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "jump": "i",
      "offset": [
        692,
        808
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3675": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        692,
        808
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3676": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        692,
        808
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3678": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        692,
        808
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3679": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        692,
        808
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3680": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3682": {
      "op": "NOT"
    },
    "3683": {
      "offset": [
        692,
        808
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3684": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        692,
        808
      ],
      "op": "DUP5",
      "path": "19"
    },
    "3685": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        692,
        808
      ],
      "op": "SUB",
      "path": "19"
    },
    "3686": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        692,
        808
      ],
      "op": "ADD",
      "path": "19"
    },
    "3687": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        692,
        808
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3688": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        692,
        808
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3689": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        692,
        808
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3690": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        692,
        808
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3691": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        692,
        808
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3692": {
      "offset": [
        677,
        810
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3693": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        677,
        810
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3694": {
      "offset": [
        692,
        808
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3696": {
      "offset": [
        677,
        810
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3697": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        677,
        810
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3698": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        677,
        810
      ],
      "op": "ADD",
      "path": "19"
    },
    "3699": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        677,
        810
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "3700": {
      "offset": [
        607,
        626
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3701": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        607,
        626
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3702": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        607,
        626
      ],
      "op": "ADD",
      "path": "19"
    },
    "3703": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        607,
        626
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3704": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        607,
        626
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3705": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        607,
        626
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x5"
    },
    "3707": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        607,
        626
      ],
      "op": "DUP5",
      "path": "19"
    },
    "3708": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        607,
        626
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3709": {
      "op": "PUSH5",
      "value": "0x302E322E3"
    },
    "3715": {
      "op": "PUSH1",
      "value": "0xDC"
    },
    "3717": {
      "op": "SHL"
    },
    "3718": {
      "offset": [
        607,
        626
      ],
      "op": "DUP5",
      "path": "19"
    },
    "3719": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        607,
        626
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3720": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        607,
        626
      ],
      "op": "ADD",
      "path": "19"
    },
    "3721": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        607,
        626
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3722": {
      "offset": [
        589,
        628
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3723": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        589,
        628
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3724": {
      "offset": [
        677,
        810
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3725": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        677,
        810
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "3726": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3728": {
      "op": "DUP1"
    },
    "3729": {
      "op": "MLOAD"
    },
    "3730": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3732": {
      "op": "PUSH2",
      "value": "0x1F5A"
    },
    "3735": {
      "op": "DUP4"
    },
    "3736": {
      "op": "CODECOPY"
    },
    "3737": {
      "op": "DUP2"
    },
    "3738": {
      "op": "MLOAD"
    },
    "3739": {
      "op": "SWAP2"
    },
    "3740": {
      "op": "MSTORE"
    },
    "3741": {
      "offset": [
        507,
        527
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "3742": {
      "offset": [
        589,
        628
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xEA7"
    },
    "3745": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        589,
        628
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "3746": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        589,
        628
      ],
      "op": "ADD",
      "path": "19"
    },
    "3747": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        589,
        628
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1DB5"
    },
    "3750": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "jump": "i",
      "offset": [
        589,
        628
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3751": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        589,
        628
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3752": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        589,
        628
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3754": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        589,
        628
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3755": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        589,
        628
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3757": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        589,
        628
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3758": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        589,
        628
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3759": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        589,
        628
      ],
      "op": "SUB",
      "path": "19"
    },
    "3760": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        589,
        628
      ],
      "op": "SUB",
      "path": "19"
    },
    "3761": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        589,
        628
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3762": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        589,
        628
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3763": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        589,
        628
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3764": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        589,
        628
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3766": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        589,
        628
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3767": {
      "offset": [
        574,
        630
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3768": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        574,
        630
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3769": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        574,
        630
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3770": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        574,
        630
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3772": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        574,
        630
      ],
      "op": "ADD",
      "path": "19"
    },
    "3773": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        574,
        630
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "3774": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8316,
        8329
      ],
      "op": "CHAINID",
      "path": "17"
    },
    "3775": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8347,
        8357
      ],
      "op": "DUP8",
      "path": "17"
    },
    "3776": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8162,
        8371
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3778": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8162,
        8371
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3779": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8162,
        8371
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3781": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8162,
        8371
      ],
      "op": "ADD",
      "path": "17"
    },
    "3782": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8162,
        8371
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xED3"
    },
    "3785": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8162,
        8371
      ],
      "op": "SWAP6",
      "path": "17"
    },
    "3786": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8162,
        8371
      ],
      "op": "SWAP5",
      "path": "17"
    },
    "3787": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8162,
        8371
      ],
      "op": "SWAP4",
      "path": "17"
    },
    "3788": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8162,
        8371
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "3789": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8162,
        8371
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3790": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8162,
        8371
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3791": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8162,
        8371
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1DD1"
    },
    "3794": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "jump": "i",
      "offset": [
        8162,
        8371
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3795": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8162,
        8371
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3796": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8162,
        8371
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3798": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8162,
        8371
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3799": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8162,
        8371
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3801": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8162,
        8371
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3802": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8162,
        8371
      ],
      "op": "DUP4",
      "path": "17"
    },
    "3803": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8162,
        8371
      ],
      "op": "SUB",
      "path": "17"
    },
    "3804": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8162,
        8371
      ],
      "op": "SUB",
      "path": "17"
    },
    "3805": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8162,
        8371
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3806": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8162,
        8371
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3807": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8162,
        8371
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3808": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8162,
        8371
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3810": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8162,
        8371
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3811": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8139,
        8381
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3812": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8139,
        8381
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3813": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8139,
        8381
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3814": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8139,
        8381
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3816": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8139,
        8381
      ],
      "op": "ADD",
      "path": "17"
    },
    "3817": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8139,
        8381
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "3818": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8112,
        8381
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3819": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8112,
        8381
      ],
      "op": "POP",
      "path": "17"
    },
    "3820": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8392,
        8407
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "3822": {
      "offset": [
        1509,
        1612
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3824": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        1509,
        1612
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3825": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        1509,
        1612
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3827": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        1509,
        1612
      ],
      "op": "ADD",
      "path": "19"
    },
    "3828": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        1509,
        1612
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xF54"
    },
    "3831": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        1509,
        1612
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3832": {
      "op": "PUSH32",
      "value": "0x7374724F4344656C5573657228616464726573732077616C6C6574416464722C"
    },
    "3865": {
      "op": "DUP2"
    },
    "3866": {
      "op": "MSTORE"
    },
    "3867": {
      "op": "PUSH32",
      "value": "0x737472696E67206465736372697074696F6E2C75696E743235362064656C6179"
    },
    "3900": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3902": {
      "op": "DUP3"
    },
    "3903": {
      "op": "ADD"
    },
    "3904": {
      "op": "MSTORE"
    },
    "3905": {
      "op": "PUSH5",
      "value": "0x54696D6529"
    },
    "3911": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "3913": {
      "op": "SHL"
    },
    "3914": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3916": {
      "op": "DUP3"
    },
    "3917": {
      "op": "ADD"
    },
    "3918": {
      "op": "MSTORE"
    },
    "3919": {
      "op": "PUSH1",
      "value": "0x45"
    },
    "3921": {
      "op": "ADD"
    },
    "3922": {
      "op": "SWAP1"
    },
    "3923": {
      "op": "JUMP"
    },
    "3924": {
      "offset": [
        1509,
        1612
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3925": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        1509,
        1612
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3927": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        1509,
        1612
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3928": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        1509,
        1612
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3930": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        1509,
        1612
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3931": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        1509,
        1612
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3932": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        1509,
        1612
      ],
      "op": "SUB",
      "path": "19"
    },
    "3933": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        1509,
        1612
      ],
      "op": "SUB",
      "path": "19"
    },
    "3934": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        1509,
        1612
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3935": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        1509,
        1612
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3936": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        1509,
        1612
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3937": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        1509,
        1612
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3939": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        1509,
        1612
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3940": {
      "offset": [
        1494,
        1614
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3941": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        1494,
        1614
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3942": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        1494,
        1614
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3943": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        1494,
        1614
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3945": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        1494,
        1614
      ],
      "op": "ADD",
      "path": "19"
    },
    "3946": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        1494,
        1614
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "3947": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8501,
        8512
      ],
      "op": "DUP9",
      "path": "17"
    },
    "3948": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8559,
        8571
      ],
      "op": "DUP9",
      "path": "17"
    },
    "3949": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8541,
        8573
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3951": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8541,
        8573
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3952": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8541,
        8573
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3954": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8541,
        8573
      ],
      "op": "ADD",
      "path": "17"
    },
    "3955": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8541,
        8573
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xF7C"
    },
    "3958": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8541,
        8573
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "3959": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8541,
        8573
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3960": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8541,
        8573
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1DB5"
    },
    "3963": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "jump": "i",
      "offset": [
        8541,
        8573
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3964": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8541,
        8573
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3965": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8541,
        8573
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3967": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8541,
        8573
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3968": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8541,
        8573
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3970": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8541,
        8573
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3971": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8541,
        8573
      ],
      "op": "DUP4",
      "path": "17"
    },
    "3972": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8541,
        8573
      ],
      "op": "SUB",
      "path": "17"
    },
    "3973": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8541,
        8573
      ],
      "op": "SUB",
      "path": "17"
    },
    "3974": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8541,
        8573
      ],
      "op": "DUP2",
      "path": "17"
    },
    "3975": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8541,
        8573
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3976": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8541,
        8573
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3977": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8541,
        8573
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3979": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8541,
        8573
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "3980": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8530,
        8575
      ],
      "op": "DUP1",
      "path": "17"
    },
    "3981": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8530,
        8575
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3982": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8530,
        8575
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "3983": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8530,
        8575
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3985": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8530,
        8575
      ],
      "op": "ADD",
      "path": "17"
    },
    "3986": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8530,
        8575
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "3987": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8593,
        8603
      ],
      "op": "DUP9",
      "path": "17"
    },
    "3988": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8433,
        8617
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "3990": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8433,
        8617
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "3991": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8433,
        8617
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "3993": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8433,
        8617
      ],
      "op": "ADD",
      "path": "17"
    },
    "3994": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8433,
        8617
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xDED"
    },
    "3997": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8433,
        8617
      ],
      "op": "SWAP5",
      "path": "17"
    },
    "3998": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8433,
        8617
      ],
      "op": "SWAP4",
      "path": "17"
    },
    "3999": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8433,
        8617
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "4000": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8433,
        8617
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4001": {
      "fn": "CLHouseApi.SignerOCRemoveUser",
      "offset": [
        8433,
        8617
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4002": {
      "op": "SWAP4"
    },
    "4003": {
      "op": "DUP5"
    },
    "4004": {
      "op": "MSTORE"
    },
    "4005": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4007": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4009": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4011": {
      "op": "SHL"
    },
    "4012": {
      "op": "SUB"
    },
    "4013": {
      "op": "SWAP3"
    },
    "4014": {
      "op": "SWAP1"
    },
    "4015": {
      "op": "SWAP3"
    },
    "4016": {
      "op": "AND"
    },
    "4017": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4019": {
      "op": "DUP5"
    },
    "4020": {
      "op": "ADD"
    },
    "4021": {
      "op": "MSTORE"
    },
    "4022": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4024": {
      "op": "DUP4"
    },
    "4025": {
      "op": "ADD"
    },
    "4026": {
      "op": "MSTORE"
    },
    "4027": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4029": {
      "op": "DUP3"
    },
    "4030": {
      "op": "ADD"
    },
    "4031": {
      "op": "MSTORE"
    },
    "4032": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4034": {
      "op": "ADD"
    },
    "4035": {
      "op": "SWAP1"
    },
    "4036": {
      "op": "JUMP"
    },
    "4037": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9108,
        10009
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4038": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9311,
        9318
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "4040": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9335,
        9359
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4041": {
      "offset": [
        692,
        808
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4043": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        692,
        808
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4044": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        692,
        808
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4046": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        692,
        808
      ],
      "op": "ADD",
      "path": "19"
    },
    "4047": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        692,
        808
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xFD7"
    },
    "4050": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        692,
        808
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4051": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        692,
        808
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1D4B"
    },
    "4054": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "jump": "i",
      "offset": [
        692,
        808
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4055": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        692,
        808
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4056": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        692,
        808
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4058": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        692,
        808
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4059": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        692,
        808
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4060": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4062": {
      "op": "NOT"
    },
    "4063": {
      "offset": [
        692,
        808
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4064": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        692,
        808
      ],
      "op": "DUP5",
      "path": "19"
    },
    "4065": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        692,
        808
      ],
      "op": "SUB",
      "path": "19"
    },
    "4066": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        692,
        808
      ],
      "op": "ADD",
      "path": "19"
    },
    "4067": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        692,
        808
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4068": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        692,
        808
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4069": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        692,
        808
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4070": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        692,
        808
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4071": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        692,
        808
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4072": {
      "offset": [
        677,
        810
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4073": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        677,
        810
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4074": {
      "offset": [
        692,
        808
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4076": {
      "offset": [
        677,
        810
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4077": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        677,
        810
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4078": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        677,
        810
      ],
      "op": "ADD",
      "path": "19"
    },
    "4079": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        677,
        810
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "4080": {
      "offset": [
        607,
        626
      ],
      "op": "DUP4",
      "path": "19"
    },
    "4081": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        607,
        626
      ],
      "op": "DUP4",
      "path": "19"
    },
    "4082": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        607,
        626
      ],
      "op": "ADD",
      "path": "19"
    },
    "4083": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        607,
        626
      ],
      "op": "DUP4",
      "path": "19"
    },
    "4084": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        607,
        626
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4085": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        607,
        626
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x5"
    },
    "4087": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        607,
        626
      ],
      "op": "DUP5",
      "path": "19"
    },
    "4088": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        607,
        626
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4089": {
      "op": "PUSH5",
      "value": "0x302E322E3"
    },
    "4095": {
      "op": "PUSH1",
      "value": "0xDC"
    },
    "4097": {
      "op": "SHL"
    },
    "4098": {
      "offset": [
        607,
        626
      ],
      "op": "DUP5",
      "path": "19"
    },
    "4099": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        607,
        626
      ],
      "op": "DUP4",
      "path": "19"
    },
    "4100": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        607,
        626
      ],
      "op": "ADD",
      "path": "19"
    },
    "4101": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        607,
        626
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4102": {
      "offset": [
        589,
        628
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4103": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        589,
        628
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4104": {
      "offset": [
        677,
        810
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4105": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        677,
        810
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4106": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4108": {
      "op": "DUP1"
    },
    "4109": {
      "op": "MLOAD"
    },
    "4110": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4112": {
      "op": "PUSH2",
      "value": "0x1F5A"
    },
    "4115": {
      "op": "DUP4"
    },
    "4116": {
      "op": "CODECOPY"
    },
    "4117": {
      "op": "DUP2"
    },
    "4118": {
      "op": "MLOAD"
    },
    "4119": {
      "op": "SWAP2"
    },
    "4120": {
      "op": "MSTORE"
    },
    "4121": {
      "offset": [
        507,
        527
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4122": {
      "offset": [
        589,
        628
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1023"
    },
    "4125": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        589,
        628
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4126": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        589,
        628
      ],
      "op": "ADD",
      "path": "19"
    },
    "4127": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        589,
        628
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1DB5"
    },
    "4130": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "jump": "i",
      "offset": [
        589,
        628
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4131": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        589,
        628
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4132": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        589,
        628
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4134": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        589,
        628
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4135": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        589,
        628
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4137": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        589,
        628
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4138": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        589,
        628
      ],
      "op": "DUP4",
      "path": "19"
    },
    "4139": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        589,
        628
      ],
      "op": "SUB",
      "path": "19"
    },
    "4140": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        589,
        628
      ],
      "op": "SUB",
      "path": "19"
    },
    "4141": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        589,
        628
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4142": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        589,
        628
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4143": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        589,
        628
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4144": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        589,
        628
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4146": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        589,
        628
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4147": {
      "offset": [
        574,
        630
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4148": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        574,
        630
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4149": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        574,
        630
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4150": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        574,
        630
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4152": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        574,
        630
      ],
      "op": "ADD",
      "path": "19"
    },
    "4153": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        574,
        630
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "4154": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9539,
        9552
      ],
      "op": "CHAINID",
      "path": "17"
    },
    "4155": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9570,
        9580
      ],
      "op": "DUP8",
      "path": "17"
    },
    "4156": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9385,
        9594
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4158": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9385,
        9594
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4159": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9385,
        9594
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "4161": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9385,
        9594
      ],
      "op": "ADD",
      "path": "17"
    },
    "4162": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9385,
        9594
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x104F"
    },
    "4165": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9385,
        9594
      ],
      "op": "SWAP6",
      "path": "17"
    },
    "4166": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9385,
        9594
      ],
      "op": "SWAP5",
      "path": "17"
    },
    "4167": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9385,
        9594
      ],
      "op": "SWAP4",
      "path": "17"
    },
    "4168": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9385,
        9594
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "4169": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9385,
        9594
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4170": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9385,
        9594
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4171": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9385,
        9594
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1DD1"
    },
    "4174": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "jump": "i",
      "offset": [
        9385,
        9594
      ],
      "op": "JUMP",
      "path": "17"
    },
    "4175": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9385,
        9594
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4176": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9385,
        9594
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4178": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9385,
        9594
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4179": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9385,
        9594
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "4181": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9385,
        9594
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4182": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9385,
        9594
      ],
      "op": "DUP4",
      "path": "17"
    },
    "4183": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9385,
        9594
      ],
      "op": "SUB",
      "path": "17"
    },
    "4184": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9385,
        9594
      ],
      "op": "SUB",
      "path": "17"
    },
    "4185": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9385,
        9594
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4186": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9385,
        9594
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4187": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9385,
        9594
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4188": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9385,
        9594
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4190": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9385,
        9594
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4191": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9362,
        9604
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4192": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9362,
        9604
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4193": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9362,
        9604
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4194": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9362,
        9604
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "4196": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9362,
        9604
      ],
      "op": "ADD",
      "path": "17"
    },
    "4197": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9362,
        9604
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "4198": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9335,
        9604
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4199": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9335,
        9604
      ],
      "op": "POP",
      "path": "17"
    },
    "4200": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9615,
        9630
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "4202": {
      "offset": [
        1673,
        1751
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4204": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        1673,
        1751
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4205": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        1673,
        1751
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4207": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        1673,
        1751
      ],
      "op": "ADD",
      "path": "19"
    },
    "4208": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        1673,
        1751
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x10B1"
    },
    "4211": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        1673,
        1751
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4212": {
      "op": "PUSH32",
      "value": "0x7374724F435265717565737428737472696E67206E616D652C737472696E6720"
    },
    "4245": {
      "op": "DUP2"
    },
    "4246": {
      "op": "MSTORE"
    },
    "4247": {
      "op": "PUSH12",
      "value": "0x6465736372697074696F6E29"
    },
    "4260": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4262": {
      "op": "SHL"
    },
    "4263": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4265": {
      "op": "DUP3"
    },
    "4266": {
      "op": "ADD"
    },
    "4267": {
      "op": "MSTORE"
    },
    "4268": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "4270": {
      "op": "ADD"
    },
    "4271": {
      "op": "SWAP1"
    },
    "4272": {
      "op": "JUMP"
    },
    "4273": {
      "offset": [
        1673,
        1751
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4274": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        1673,
        1751
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4276": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        1673,
        1751
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4277": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        1673,
        1751
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4279": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        1673,
        1751
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4280": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        1673,
        1751
      ],
      "op": "DUP4",
      "path": "19"
    },
    "4281": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        1673,
        1751
      ],
      "op": "SUB",
      "path": "19"
    },
    "4282": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        1673,
        1751
      ],
      "op": "SUB",
      "path": "19"
    },
    "4283": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        1673,
        1751
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4284": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        1673,
        1751
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4285": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        1673,
        1751
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4286": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        1673,
        1751
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4288": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        1673,
        1751
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4289": {
      "offset": [
        1658,
        1753
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4290": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        1658,
        1753
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4291": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        1658,
        1753
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4292": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        1658,
        1753
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4294": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        1658,
        1753
      ],
      "op": "ADD",
      "path": "19"
    },
    "4295": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        1658,
        1753
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "4296": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9753,
        9758
      ],
      "op": "DUP8",
      "path": "17"
    },
    "4297": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9735,
        9760
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4299": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9735,
        9760
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4300": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9735,
        9760
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "4302": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9735,
        9760
      ],
      "op": "ADD",
      "path": "17"
    },
    "4303": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9735,
        9760
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x10D8"
    },
    "4306": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9735,
        9760
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4307": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9735,
        9760
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4308": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9735,
        9760
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1DB5"
    },
    "4311": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "jump": "i",
      "offset": [
        9735,
        9760
      ],
      "op": "JUMP",
      "path": "17"
    },
    "4312": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9735,
        9760
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4313": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9735,
        9760
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4315": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9735,
        9760
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4316": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9735,
        9760
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "4318": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9735,
        9760
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4319": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9735,
        9760
      ],
      "op": "DUP4",
      "path": "17"
    },
    "4320": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9735,
        9760
      ],
      "op": "SUB",
      "path": "17"
    },
    "4321": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9735,
        9760
      ],
      "op": "SUB",
      "path": "17"
    },
    "4322": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9735,
        9760
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4323": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9735,
        9760
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4324": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9735,
        9760
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4325": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9735,
        9760
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4327": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9735,
        9760
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4328": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9724,
        9762
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4329": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9724,
        9762
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4330": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9724,
        9762
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4331": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9724,
        9762
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "4333": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9724,
        9762
      ],
      "op": "ADD",
      "path": "17"
    },
    "4334": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9724,
        9762
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "4335": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9809,
        9821
      ],
      "op": "DUP8",
      "path": "17"
    },
    "4336": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9791,
        9823
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4338": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9791,
        9823
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4339": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9791,
        9823
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "4341": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9791,
        9823
      ],
      "op": "ADD",
      "path": "17"
    },
    "4342": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9791,
        9823
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x10FF"
    },
    "4345": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9791,
        9823
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4346": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9791,
        9823
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4347": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9791,
        9823
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1DB5"
    },
    "4350": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "jump": "i",
      "offset": [
        9791,
        9823
      ],
      "op": "JUMP",
      "path": "17"
    },
    "4351": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9791,
        9823
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4352": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9791,
        9823
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4354": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9791,
        9823
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4355": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9791,
        9823
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4356": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4358": {
      "op": "NOT"
    },
    "4359": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9791,
        9823
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4360": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9791,
        9823
      ],
      "op": "DUP5",
      "path": "17"
    },
    "4361": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9791,
        9823
      ],
      "op": "SUB",
      "path": "17"
    },
    "4362": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9791,
        9823
      ],
      "op": "ADD",
      "path": "17"
    },
    "4363": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9791,
        9823
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4364": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9791,
        9823
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4365": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9791,
        9823
      ],
      "op": "DUP3",
      "path": "17"
    },
    "4366": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9791,
        9823
      ],
      "op": "DUP3",
      "path": "17"
    },
    "4367": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9791,
        9823
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4368": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9780,
        9825
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4369": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9780,
        9825
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4370": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9791,
        9823
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "4372": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9780,
        9825
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4373": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9780,
        9825
      ],
      "op": "DUP3",
      "path": "17"
    },
    "4374": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9780,
        9825
      ],
      "op": "ADD",
      "path": "17"
    },
    "4375": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9780,
        9825
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "4376": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9656,
        9839
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4377": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9656,
        9839
      ],
      "op": "DUP4",
      "path": "17"
    },
    "4378": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9656,
        9839
      ],
      "op": "ADD",
      "path": "17"
    },
    "4379": {
      "op": "SWAP5"
    },
    "4380": {
      "op": "SWAP1"
    },
    "4381": {
      "op": "SWAP5"
    },
    "4382": {
      "op": "MSTORE"
    },
    "4383": {
      "op": "DUP2"
    },
    "4384": {
      "op": "ADD"
    },
    "4385": {
      "op": "SWAP2"
    },
    "4386": {
      "op": "SWAP1"
    },
    "4387": {
      "op": "SWAP2"
    },
    "4388": {
      "op": "MSTORE"
    },
    "4389": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4391": {
      "op": "DUP2"
    },
    "4392": {
      "op": "ADD"
    },
    "4393": {
      "op": "SWAP2"
    },
    "4394": {
      "op": "SWAP1"
    },
    "4395": {
      "op": "SWAP2"
    },
    "4396": {
      "op": "MSTORE"
    },
    "4397": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4399": {
      "op": "ADD"
    },
    "4400": {
      "fn": "CLHouseApi.SignerOCRequestToJoin",
      "offset": [
        9656,
        9839
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x504"
    },
    "4403": {
      "op": "JUMP"
    },
    "4404": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1379,
        2237
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4405": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1498,
        1527
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x60"
    },
    "4407": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1552,
        1567
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "4409": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1580,
        1590
      ],
      "op": "DUP3",
      "path": "17"
    },
    "4410": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1552,
        1592
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4411": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1552,
        1592
      ],
      "op": "POP",
      "path": "17"
    },
    "4412": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1603,
        1619
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "4414": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1628
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4417": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4419": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4421": {
      "op": "SHL"
    },
    "4422": {
      "op": "SUB"
    },
    "4423": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1637
      ],
      "op": "AND",
      "path": "17"
    },
    "4424": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1637
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x19A50F49"
    },
    "4429": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4431": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4432": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4433": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "4438": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "AND",
      "path": "17"
    },
    "4439": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xE0"
    },
    "4441": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "SHL",
      "path": "17"
    },
    "4442": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4443": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4444": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "4446": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "ADD",
      "path": "17"
    },
    "4447": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "4449": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4451": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4452": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4453": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "DUP4",
      "path": "17"
    },
    "4454": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "SUB",
      "path": "17"
    },
    "4455": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4456": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "DUP7",
      "path": "17"
    },
    "4457": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "GAS",
      "path": "17"
    },
    "4458": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "STATICCALL",
      "path": "17"
    },
    "4459": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "4460": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4461": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "4462": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x117B"
    },
    "4465": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "4466": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "4467": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "4469": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4470": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "4471": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "4472": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "4474": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "REVERT",
      "path": "17"
    },
    "4475": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4476": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "POP",
      "path": "17"
    },
    "4477": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "POP",
      "path": "17"
    },
    "4478": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "POP",
      "path": "17"
    },
    "4479": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "POP",
      "path": "17"
    },
    "4480": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4482": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4483": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "4484": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "4486": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "NOT",
      "path": "17"
    },
    "4487": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "4489": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "DUP3",
      "path": "17"
    },
    "4490": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "ADD",
      "path": "17"
    },
    "4491": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "AND",
      "path": "17"
    },
    "4492": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "DUP3",
      "path": "17"
    },
    "4493": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "ADD",
      "path": "17"
    },
    "4494": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4495": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4497": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4498": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "POP",
      "path": "17"
    },
    "4499": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4500": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "ADD",
      "path": "17"
    },
    "4501": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4502": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x119F"
    },
    "4505": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4506": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4507": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1E18"
    },
    "4510": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        1622,
        1640
      ],
      "op": "JUMP",
      "path": "17"
    },
    "4511": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1622,
        1640
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4512": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1603,
        1640
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4513": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1603,
        1640
      ],
      "op": "POP",
      "path": "17"
    },
    "4514": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1650,
        1672
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "4516": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1681
      ],
      "op": "DUP3",
      "path": "17"
    },
    "4517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4521": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4523": {
      "op": "SHL"
    },
    "4524": {
      "op": "SUB"
    },
    "4525": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1699
      ],
      "op": "AND",
      "path": "17"
    },
    "4526": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1699
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xA693649A"
    },
    "4531": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4533": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4534": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4535": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "4540": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "AND",
      "path": "17"
    },
    "4541": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xE0"
    },
    "4543": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "SHL",
      "path": "17"
    },
    "4544": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4545": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4546": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "4548": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "ADD",
      "path": "17"
    },
    "4549": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "4551": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4553": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4554": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4555": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "DUP4",
      "path": "17"
    },
    "4556": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "SUB",
      "path": "17"
    },
    "4557": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4558": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "DUP7",
      "path": "17"
    },
    "4559": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "GAS",
      "path": "17"
    },
    "4560": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "STATICCALL",
      "path": "17"
    },
    "4561": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "4562": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4563": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "4564": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x11E1"
    },
    "4567": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "4568": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "4569": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "4571": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4572": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "4573": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "4574": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "4576": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "REVERT",
      "path": "17"
    },
    "4577": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4578": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "POP",
      "path": "17"
    },
    "4579": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "POP",
      "path": "17"
    },
    "4580": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "POP",
      "path": "17"
    },
    "4581": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "POP",
      "path": "17"
    },
    "4582": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4584": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4585": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "4586": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "4588": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "NOT",
      "path": "17"
    },
    "4589": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "4591": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "DUP3",
      "path": "17"
    },
    "4592": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "ADD",
      "path": "17"
    },
    "4593": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "AND",
      "path": "17"
    },
    "4594": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "DUP3",
      "path": "17"
    },
    "4595": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "ADD",
      "path": "17"
    },
    "4596": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4597": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4599": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4600": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "POP",
      "path": "17"
    },
    "4601": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4602": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "ADD",
      "path": "17"
    },
    "4603": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4604": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1205"
    },
    "4607": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4608": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4609": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1E18"
    },
    "4612": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        1675,
        1701
      ],
      "op": "JUMP",
      "path": "17"
    },
    "4613": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1675,
        1701
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4614": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1650,
        1701
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4615": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1650,
        1701
      ],
      "op": "POP",
      "path": "17"
    },
    "4616": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1742,
        1750
      ],
      "op": "DUP2",
      "path": "17",
      "statement": 7
    },
    "4617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4621": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4623": {
      "op": "SHL"
    },
    "4624": {
      "op": "SUB"
    },
    "4625": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1722,
        1752
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4626": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1722,
        1752
      ],
      "op": "GT",
      "path": "17"
    },
    "4627": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1722,
        1752
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "4628": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1722,
        1752
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x121F"
    },
    "4631": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1722,
        1752
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "4632": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1722,
        1752
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x121F"
    },
    "4635": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1722,
        1752
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1563"
    },
    "4638": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        1722,
        1752
      ],
      "op": "JUMP",
      "path": "17"
    },
    "4639": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1722,
        1752
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4640": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1722,
        1752
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4642": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1722,
        1752
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4643": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1722,
        1752
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4644": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1722,
        1752
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4645": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1722,
        1752
      ],
      "op": "DUP3",
      "path": "17"
    },
    "4646": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1722,
        1752
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4647": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1722,
        1752
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4648": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1722,
        1752
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "4650": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1722,
        1752
      ],
      "op": "MUL",
      "path": "17"
    },
    "4651": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1722,
        1752
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "4653": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1722,
        1752
      ],
      "op": "ADD",
      "path": "17"
    },
    "4654": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1722,
        1752
      ],
      "op": "DUP3",
      "path": "17"
    },
    "4655": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1722,
        1752
      ],
      "op": "ADD",
      "path": "17"
    },
    "4656": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1722,
        1752
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4658": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1722,
        1752
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4659": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1722,
        1752
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4660": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1722,
        1752
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "4661": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1722,
        1752
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1286"
    },
    "4664": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1722,
        1752
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "4665": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1722,
        1752
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4666": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1722,
        1752
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "4668": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1722,
        1752
      ],
      "op": "ADD",
      "path": "17"
    },
    "4669": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1722,
        1752
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4670": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1722,
        1752
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1273"
    },
    "4673": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4675": {
      "op": "MLOAD"
    },
    "4676": {
      "op": "DUP1"
    },
    "4677": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4679": {
      "op": "ADD"
    },
    "4680": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4682": {
      "op": "MSTORE"
    },
    "4683": {
      "op": "DUP1"
    },
    "4684": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4686": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4688": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4690": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4692": {
      "op": "SHL"
    },
    "4693": {
      "op": "SUB"
    },
    "4694": {
      "op": "AND"
    },
    "4695": {
      "op": "DUP2"
    },
    "4696": {
      "op": "MSTORE"
    },
    "4697": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4699": {
      "op": "ADD"
    },
    "4700": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4702": {
      "op": "DUP2"
    },
    "4703": {
      "op": "MSTORE"
    },
    "4704": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4706": {
      "op": "ADD"
    },
    "4707": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4709": {
      "op": "DUP2"
    },
    "4710": {
      "op": "MSTORE"
    },
    "4711": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4713": {
      "op": "ADD"
    },
    "4714": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4716": {
      "op": "ISZERO"
    },
    "4717": {
      "op": "ISZERO"
    },
    "4718": {
      "op": "DUP2"
    },
    "4719": {
      "op": "MSTORE"
    },
    "4720": {
      "op": "POP"
    },
    "4721": {
      "op": "SWAP1"
    },
    "4722": {
      "op": "JUMP"
    },
    "4723": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1722,
        1752
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4724": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1722,
        1752
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4725": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1722,
        1752
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4726": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1722,
        1752
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "4728": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1722,
        1752
      ],
      "op": "ADD",
      "path": "17"
    },
    "4729": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1722,
        1752
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4730": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1722,
        1752
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "4732": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1722,
        1752
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4733": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1722,
        1752
      ],
      "op": "SUB",
      "path": "17"
    },
    "4734": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1722,
        1752
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4735": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1722,
        1752
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4736": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1722,
        1752
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x123D"
    },
    "4739": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1722,
        1752
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "4740": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1722,
        1752
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4741": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1722,
        1752
      ],
      "op": "POP",
      "path": "17"
    },
    "4742": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1722,
        1752
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4743": {
      "op": "POP"
    },
    "4744": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1711,
        1752
      ],
      "op": "SWAP4",
      "path": "17"
    },
    "4745": {
      "op": "POP"
    },
    "4746": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1763,
        1776
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "4748": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1811,
        1812
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "4750": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1792,
        2231
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4751": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1821,
        1835
      ],
      "op": "DUP3",
      "path": "17"
    },
    "4752": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1815,
        1818
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4753": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1815,
        1835
      ],
      "op": "LT",
      "path": "17"
    },
    "4754": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1792,
        2231
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "4755": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1792,
        2231
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1402"
    },
    "4758": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1792,
        2231
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "4759": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1860,
        1888
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x12CC"
    },
    "4762": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4764": {
      "op": "MLOAD"
    },
    "4765": {
      "op": "DUP1"
    },
    "4766": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4768": {
      "op": "ADD"
    },
    "4769": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4771": {
      "op": "MSTORE"
    },
    "4772": {
      "op": "DUP1"
    },
    "4773": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4775": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4777": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4779": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4781": {
      "op": "SHL"
    },
    "4782": {
      "op": "SUB"
    },
    "4783": {
      "op": "AND"
    },
    "4784": {
      "op": "DUP2"
    },
    "4785": {
      "op": "MSTORE"
    },
    "4786": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4788": {
      "op": "ADD"
    },
    "4789": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4791": {
      "op": "DUP2"
    },
    "4792": {
      "op": "MSTORE"
    },
    "4793": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4795": {
      "op": "ADD"
    },
    "4796": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4798": {
      "op": "DUP2"
    },
    "4799": {
      "op": "MSTORE"
    },
    "4800": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4802": {
      "op": "ADD"
    },
    "4803": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4805": {
      "op": "ISZERO"
    },
    "4806": {
      "op": "ISZERO"
    },
    "4807": {
      "op": "DUP2"
    },
    "4808": {
      "op": "MSTORE"
    },
    "4809": {
      "op": "POP"
    },
    "4810": {
      "op": "SWAP1"
    },
    "4811": {
      "op": "JUMP"
    },
    "4812": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1860,
        1888
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4813": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1944
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 8,
      "value": "0x40"
    },
    "4815": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1944
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4816": {
      "op": "PUSH4",
      "value": "0x8AD0207"
    },
    "4821": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "4823": {
      "op": "SHL"
    },
    "4824": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1944
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4825": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1944
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4826": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1944
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "4828": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1944
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4829": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1944
      ],
      "op": "ADD",
      "path": "17"
    },
    "4830": {
      "op": "DUP4"
    },
    "4831": {
      "op": "SWAP1"
    },
    "4832": {
      "op": "MSTORE"
    },
    "4833": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4837": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4839": {
      "op": "SHL"
    },
    "4840": {
      "op": "SUB"
    },
    "4841": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1937
      ],
      "op": "DUP8",
      "path": "17"
    },
    "4842": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1937
      ],
      "op": "AND",
      "path": "17"
    },
    "4843": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1937
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4844": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1937
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x22B4081C"
    },
    "4849": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1937
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4850": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4852": {
      "op": "ADD"
    },
    "4853": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1944
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "4855": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1944
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4857": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1944
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4858": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1944
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4859": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1944
      ],
      "op": "DUP4",
      "path": "17"
    },
    "4860": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1944
      ],
      "op": "SUB",
      "path": "17"
    },
    "4861": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1944
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4862": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1944
      ],
      "op": "DUP7",
      "path": "17"
    },
    "4863": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1944
      ],
      "op": "GAS",
      "path": "17"
    },
    "4864": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1944
      ],
      "op": "STATICCALL",
      "path": "17"
    },
    "4865": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1944
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "4866": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1944
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4867": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1944
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "4868": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1944
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1311"
    },
    "4871": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1944
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "4872": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1944
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "4873": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1944
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "4875": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1944
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4876": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1944
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "4877": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1944
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "4878": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1944
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "4880": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1944
      ],
      "op": "REVERT",
      "path": "17"
    },
    "4881": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1944
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4882": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1944
      ],
      "op": "POP",
      "path": "17"
    },
    "4883": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1944
      ],
      "op": "POP",
      "path": "17"
    },
    "4884": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1944
      ],
      "op": "POP",
      "path": "17"
    },
    "4885": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1944
      ],
      "op": "POP",
      "path": "17"
    },
    "4886": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1944
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4888": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1944
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4889": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1944
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "4890": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1944
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "4892": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1944
      ],
      "op": "NOT",
      "path": "17"
    },
    "4893": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1944
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "4895": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1944
      ],
      "op": "DUP3",
      "path": "17"
    },
    "4896": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1944
      ],
      "op": "ADD",
      "path": "17"
    },
    "4897": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1944
      ],
      "op": "AND",
      "path": "17"
    },
    "4898": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1944
      ],
      "op": "DUP3",
      "path": "17"
    },
    "4899": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1944
      ],
      "op": "ADD",
      "path": "17"
    },
    "4900": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1944
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4901": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1944
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4903": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1944
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4904": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1944
      ],
      "op": "POP",
      "path": "17"
    },
    "4905": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1944
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4906": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1944
      ],
      "op": "ADD",
      "path": "17"
    },
    "4907": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1944
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4908": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1944
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1335"
    },
    "4911": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1944
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "4912": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1944
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4913": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1944
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1E31"
    },
    "4916": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        1922,
        1944
      ],
      "op": "JUMP",
      "path": "17"
    },
    "4917": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1922,
        1944
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4922": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4924": {
      "op": "SHL"
    },
    "4925": {
      "op": "SUB"
    },
    "4926": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1903,
        1944
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4927": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1903,
        1944
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4928": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1903,
        1944
      ],
      "op": "AND",
      "path": "17"
    },
    "4929": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1903,
        1944
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4930": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1903,
        1944
      ],
      "op": "DUP4",
      "path": "17"
    },
    "4931": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1903,
        1944
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4932": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2092
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 9,
      "value": "0x40"
    },
    "4934": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2092
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4935": {
      "op": "PUSH4",
      "value": "0x9D2FCB87"
    },
    "4940": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4942": {
      "op": "SHL"
    },
    "4943": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2092
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4944": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2092
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "4945": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2092
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "4947": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2092
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4948": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2092
      ],
      "op": "ADD",
      "path": "17"
    },
    "4949": {
      "op": "SWAP2"
    },
    "4950": {
      "op": "SWAP1"
    },
    "4951": {
      "op": "SWAP2"
    },
    "4952": {
      "op": "MSTORE"
    },
    "4953": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2072
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4954": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2072
      ],
      "op": "DUP8",
      "path": "17"
    },
    "4955": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2072
      ],
      "op": "AND",
      "path": "17"
    },
    "4956": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2072
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4957": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2072
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x9D2FCB87"
    },
    "4962": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2072
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "4963": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4965": {
      "op": "ADD"
    },
    "4966": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2092
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "4968": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2092
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4970": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2092
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "4971": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2092
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4972": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2092
      ],
      "op": "DUP4",
      "path": "17"
    },
    "4973": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2092
      ],
      "op": "SUB",
      "path": "17"
    },
    "4974": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2092
      ],
      "op": "DUP2",
      "path": "17"
    },
    "4975": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2092
      ],
      "op": "DUP7",
      "path": "17"
    },
    "4976": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2092
      ],
      "op": "GAS",
      "path": "17"
    },
    "4977": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2092
      ],
      "op": "STATICCALL",
      "path": "17"
    },
    "4978": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2092
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "4979": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2092
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4980": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2092
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "4981": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2092
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1382"
    },
    "4984": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2092
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "4985": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2092
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "4986": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2092
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "4988": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2092
      ],
      "op": "DUP1",
      "path": "17"
    },
    "4989": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2092
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "4990": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2092
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "4991": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2092
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "4993": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2092
      ],
      "op": "REVERT",
      "path": "17"
    },
    "4994": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2092
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "4995": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2092
      ],
      "op": "POP",
      "path": "17"
    },
    "4996": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2092
      ],
      "op": "POP",
      "path": "17"
    },
    "4997": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2092
      ],
      "op": "POP",
      "path": "17"
    },
    "4998": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2092
      ],
      "op": "POP",
      "path": "17"
    },
    "4999": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2092
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "5001": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2092
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "5002": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2092
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "5003": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2092
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "5005": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2092
      ],
      "op": "DUP3",
      "path": "17"
    },
    "5006": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2092
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "5007": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2092
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "5009": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2092
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "5010": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2092
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5011": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2092
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5012": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2092
      ],
      "op": "ADD",
      "path": "17"
    },
    "5013": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5015": {
      "op": "NOT"
    },
    "5016": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2092
      ],
      "op": "AND",
      "path": "17"
    },
    "5017": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2092
      ],
      "op": "DUP3",
      "path": "17"
    },
    "5018": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2092
      ],
      "op": "ADD",
      "path": "17"
    },
    "5019": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2092
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "5021": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2092
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5022": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2092
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x13AA"
    },
    "5025": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2092
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "5026": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2092
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5027": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2092
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5028": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2092
      ],
      "op": "ADD",
      "path": "17"
    },
    "5029": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2092
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5030": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2092
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1E4E"
    },
    "5033": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        2057,
        2092
      ],
      "op": "JUMP",
      "path": "17"
    },
    "5034": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2057,
        2092
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "5035": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1959,
        2092
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "5036": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1959,
        2092
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "5037": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2033,
        2052
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x60"
    },
    "5039": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2033,
        2052
      ],
      "op": "DUP5",
      "path": "17"
    },
    "5040": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2033,
        2052
      ],
      "op": "ADD",
      "path": "17"
    },
    "5041": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1959,
        2092
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5042": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1997,
        2015
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "5044": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1997,
        2015
      ],
      "op": "DUP4",
      "path": "17"
    },
    "5045": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1997,
        2015
      ],
      "op": "ADD",
      "path": "17"
    },
    "5046": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1959,
        2092
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5047": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1963,
        1979
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "5049": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1963,
        1979
      ],
      "op": "DUP3",
      "path": "17"
    },
    "5050": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1963,
        1979
      ],
      "op": "ADD",
      "path": "17"
    },
    "5051": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1959,
        2092
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5052": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1959,
        2092
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5053": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1959,
        2092
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5054": {
      "branch": 14,
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2111,
        2132
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "5055": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2107,
        2221
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x13EF"
    },
    "5058": {
      "branch": 14,
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2107,
        2221
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "5059": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2172,
        2181
      ],
      "op": "DUP1",
      "path": "17",
      "statement": 10
    },
    "5060": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2152,
        2160
      ],
      "op": "DUP8",
      "path": "17"
    },
    "5061": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2162,
        2167
      ],
      "op": "DUP5",
      "path": "17"
    },
    "5062": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2152,
        2169
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5063": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2152,
        2169
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "5064": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2152,
        2169
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5065": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2152,
        2169
      ],
      "op": "LT",
      "path": "17"
    },
    "5066": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2152,
        2169
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x13D5"
    },
    "5069": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2152,
        2169
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "5070": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2152,
        2169
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x13D5"
    },
    "5073": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2152,
        2169
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1EE4"
    },
    "5076": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        2152,
        2169
      ],
      "op": "JUMP",
      "path": "17"
    },
    "5077": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2152,
        2169
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "5078": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2152,
        2169
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "5080": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2152,
        2169
      ],
      "op": "MUL",
      "path": "17"
    },
    "5081": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2152,
        2169
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "5083": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2152,
        2169
      ],
      "op": "ADD",
      "path": "17"
    },
    "5084": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2152,
        2169
      ],
      "op": "ADD",
      "path": "17"
    },
    "5085": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2152,
        2181
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5086": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2152,
        2181
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5087": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2152,
        2181
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5088": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2152,
        2181
      ],
      "op": "POP",
      "path": "17"
    },
    "5089": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2199,
        2206
      ],
      "op": "DUP3",
      "path": "17",
      "statement": 11
    },
    "5090": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2199,
        2206
      ],
      "op": "DUP1",
      "path": "17"
    },
    "5091": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2199,
        2206
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x13EB"
    },
    "5094": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2199,
        2206
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5095": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2199,
        2206
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1EFA"
    },
    "5098": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        2199,
        2206
      ],
      "op": "JUMP",
      "path": "17"
    },
    "5099": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2199,
        2206
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "5100": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2199,
        2206
      ],
      "op": "SWAP4",
      "path": "17"
    },
    "5101": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2199,
        2206
      ],
      "op": "POP",
      "path": "17"
    },
    "5102": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2199,
        2206
      ],
      "op": "POP",
      "path": "17"
    },
    "5103": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        2107,
        2221
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "5104": {
      "op": "POP"
    },
    "5105": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1838,
        1843
      ],
      "op": "DUP1",
      "path": "17",
      "statement": 12
    },
    "5106": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1838,
        1843
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x13FA"
    },
    "5109": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1838,
        1843
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5110": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1838,
        1843
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1EFA"
    },
    "5113": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "i",
      "offset": [
        1838,
        1843
      ],
      "op": "JUMP",
      "path": "17"
    },
    "5114": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1838,
        1843
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "5115": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1838,
        1843
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "5116": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1838,
        1843
      ],
      "op": "POP",
      "path": "17"
    },
    "5117": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1838,
        1843
      ],
      "op": "POP",
      "path": "17"
    },
    "5118": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1792,
        2231
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x128E"
    },
    "5121": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1792,
        2231
      ],
      "op": "JUMP",
      "path": "17"
    },
    "5122": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1792,
        2231
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "5123": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1792,
        2231
      ],
      "op": "POP",
      "path": "17"
    },
    "5124": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1542,
        2237
      ],
      "op": "POP",
      "path": "17"
    },
    "5125": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1542,
        2237
      ],
      "op": "POP",
      "path": "17"
    },
    "5126": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1542,
        2237
      ],
      "op": "POP",
      "path": "17"
    },
    "5127": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1542,
        2237
      ],
      "op": "POP",
      "path": "17"
    },
    "5128": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1379,
        2237
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "5129": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1379,
        2237
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5130": {
      "fn": "CLHouseApi.GetHouseUserList",
      "offset": [
        1379,
        2237
      ],
      "op": "POP",
      "path": "17"
    },
    "5131": {
      "fn": "CLHouseApi.GetHouseUserList",
      "jump": "o",
      "offset": [
        1379,
        2237
      ],
      "op": "JUMP",
      "path": "17"
    },
    "5132": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5085,
        6044
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "5133": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5314,
        5321
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "5135": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5338,
        5362
      ],
      "op": "DUP1",
      "path": "17"
    },
    "5136": {
      "offset": [
        692,
        808
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5138": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        692,
        808
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5139": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        692,
        808
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5141": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        692,
        808
      ],
      "op": "ADD",
      "path": "19"
    },
    "5142": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        692,
        808
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x141E"
    },
    "5145": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        692,
        808
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5146": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        692,
        808
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1D4B"
    },
    "5149": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "jump": "i",
      "offset": [
        692,
        808
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5150": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        692,
        808
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5151": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        692,
        808
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5153": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        692,
        808
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5154": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        692,
        808
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5155": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5157": {
      "op": "NOT"
    },
    "5158": {
      "offset": [
        692,
        808
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5159": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        692,
        808
      ],
      "op": "DUP5",
      "path": "19"
    },
    "5160": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        692,
        808
      ],
      "op": "SUB",
      "path": "19"
    },
    "5161": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        692,
        808
      ],
      "op": "ADD",
      "path": "19"
    },
    "5162": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        692,
        808
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5163": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        692,
        808
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5164": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        692,
        808
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5165": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        692,
        808
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5166": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        692,
        808
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5167": {
      "offset": [
        677,
        810
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5168": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        677,
        810
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5169": {
      "offset": [
        692,
        808
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5171": {
      "offset": [
        677,
        810
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5172": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        677,
        810
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5173": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        677,
        810
      ],
      "op": "ADD",
      "path": "19"
    },
    "5174": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        677,
        810
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "5175": {
      "offset": [
        607,
        626
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5176": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        607,
        626
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5177": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        607,
        626
      ],
      "op": "ADD",
      "path": "19"
    },
    "5178": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        607,
        626
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5179": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        607,
        626
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5180": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        607,
        626
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x5"
    },
    "5182": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        607,
        626
      ],
      "op": "DUP5",
      "path": "19"
    },
    "5183": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        607,
        626
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5184": {
      "op": "PUSH5",
      "value": "0x302E322E3"
    },
    "5190": {
      "op": "PUSH1",
      "value": "0xDC"
    },
    "5192": {
      "op": "SHL"
    },
    "5193": {
      "offset": [
        607,
        626
      ],
      "op": "DUP5",
      "path": "19"
    },
    "5194": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        607,
        626
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5195": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        607,
        626
      ],
      "op": "ADD",
      "path": "19"
    },
    "5196": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        607,
        626
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5197": {
      "offset": [
        589,
        628
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5198": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        589,
        628
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5199": {
      "offset": [
        677,
        810
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5200": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        677,
        810
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5201": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5203": {
      "op": "DUP1"
    },
    "5204": {
      "op": "MLOAD"
    },
    "5205": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5207": {
      "op": "PUSH2",
      "value": "0x1F5A"
    },
    "5210": {
      "op": "DUP4"
    },
    "5211": {
      "op": "CODECOPY"
    },
    "5212": {
      "op": "DUP2"
    },
    "5213": {
      "op": "MLOAD"
    },
    "5214": {
      "op": "SWAP2"
    },
    "5215": {
      "op": "MSTORE"
    },
    "5216": {
      "offset": [
        507,
        527
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5217": {
      "offset": [
        589,
        628
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x146A"
    },
    "5220": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        589,
        628
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5221": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        589,
        628
      ],
      "op": "ADD",
      "path": "19"
    },
    "5222": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        589,
        628
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1DB5"
    },
    "5225": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "jump": "i",
      "offset": [
        589,
        628
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5226": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        589,
        628
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5227": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        589,
        628
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5229": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        589,
        628
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5230": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        589,
        628
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5232": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        589,
        628
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5233": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        589,
        628
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5234": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        589,
        628
      ],
      "op": "SUB",
      "path": "19"
    },
    "5235": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        589,
        628
      ],
      "op": "SUB",
      "path": "19"
    },
    "5236": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        589,
        628
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5237": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        589,
        628
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5238": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        589,
        628
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5239": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        589,
        628
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5241": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        589,
        628
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5242": {
      "offset": [
        574,
        630
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5243": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        574,
        630
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5244": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        574,
        630
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5245": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        574,
        630
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5247": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        574,
        630
      ],
      "op": "ADD",
      "path": "19"
    },
    "5248": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        574,
        630
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "5249": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5542,
        5555
      ],
      "op": "CHAINID",
      "path": "17"
    },
    "5250": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5573,
        5583
      ],
      "op": "DUP8",
      "path": "17"
    },
    "5251": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5388,
        5597
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "5253": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5388,
        5597
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "5254": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5388,
        5597
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "5256": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5388,
        5597
      ],
      "op": "ADD",
      "path": "17"
    },
    "5257": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5388,
        5597
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1496"
    },
    "5260": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5388,
        5597
      ],
      "op": "SWAP6",
      "path": "17"
    },
    "5261": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5388,
        5597
      ],
      "op": "SWAP5",
      "path": "17"
    },
    "5262": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5388,
        5597
      ],
      "op": "SWAP4",
      "path": "17"
    },
    "5263": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5388,
        5597
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "5264": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5388,
        5597
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "5265": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5388,
        5597
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5266": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5388,
        5597
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1DD1"
    },
    "5269": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "jump": "i",
      "offset": [
        5388,
        5597
      ],
      "op": "JUMP",
      "path": "17"
    },
    "5270": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5388,
        5597
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "5271": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5388,
        5597
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "5273": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5388,
        5597
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "5274": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5388,
        5597
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "5276": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5388,
        5597
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5277": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5388,
        5597
      ],
      "op": "DUP4",
      "path": "17"
    },
    "5278": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5388,
        5597
      ],
      "op": "SUB",
      "path": "17"
    },
    "5279": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5388,
        5597
      ],
      "op": "SUB",
      "path": "17"
    },
    "5280": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5388,
        5597
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5281": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5388,
        5597
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5282": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5388,
        5597
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5283": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5388,
        5597
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "5285": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5388,
        5597
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5286": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5365,
        5607
      ],
      "op": "DUP1",
      "path": "17"
    },
    "5287": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5365,
        5607
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "5288": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5365,
        5607
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5289": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5365,
        5607
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "5291": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5365,
        5607
      ],
      "op": "ADD",
      "path": "17"
    },
    "5292": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5365,
        5607
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "5293": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5338,
        5607
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5294": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5338,
        5607
      ],
      "op": "POP",
      "path": "17"
    },
    "5295": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5618,
        5633
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "5297": {
      "offset": [
        1157,
        1257
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5299": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1157,
        1257
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5300": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1157,
        1257
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5302": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1157,
        1257
      ],
      "op": "ADD",
      "path": "19"
    },
    "5303": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1157,
        1257
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1514"
    },
    "5306": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1157,
        1257
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5307": {
      "op": "PUSH32",
      "value": "0x7374724F4342756C6B566F74652875696E743235365B5D2070726F704964732C"
    },
    "5340": {
      "op": "DUP2"
    },
    "5341": {
      "op": "MSTORE"
    },
    "5342": {
      "op": "PUSH32",
      "value": "0x626F6F6C20737570706F72742C737472696E67206A757374696669636174696F"
    },
    "5375": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5377": {
      "op": "DUP3"
    },
    "5378": {
      "op": "ADD"
    },
    "5379": {
      "op": "MSTORE"
    },
    "5380": {
      "op": "PUSH2",
      "value": "0x6E29"
    },
    "5383": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "5385": {
      "op": "SHL"
    },
    "5386": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5388": {
      "op": "DUP3"
    },
    "5389": {
      "op": "ADD"
    },
    "5390": {
      "op": "MSTORE"
    },
    "5391": {
      "op": "PUSH1",
      "value": "0x42"
    },
    "5393": {
      "op": "ADD"
    },
    "5394": {
      "op": "SWAP1"
    },
    "5395": {
      "op": "JUMP"
    },
    "5396": {
      "offset": [
        1157,
        1257
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5397": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1157,
        1257
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5399": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1157,
        1257
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5400": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1157,
        1257
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5402": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1157,
        1257
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5403": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1157,
        1257
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5404": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1157,
        1257
      ],
      "op": "SUB",
      "path": "19"
    },
    "5405": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1157,
        1257
      ],
      "op": "SUB",
      "path": "19"
    },
    "5406": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1157,
        1257
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5407": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1157,
        1257
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5408": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1157,
        1257
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5409": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1157,
        1257
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5411": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1157,
        1257
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5412": {
      "offset": [
        1142,
        1259
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5413": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1142,
        1259
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5414": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1142,
        1259
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5415": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1142,
        1259
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5417": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1142,
        1259
      ],
      "op": "ADD",
      "path": "19"
    },
    "5418": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        1142,
        1259
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "5419": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5757,
        5765
      ],
      "op": "DUP9",
      "path": "17"
    },
    "5420": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5739,
        5767
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "5422": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5739,
        5767
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "5423": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5739,
        5767
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "5425": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5739,
        5767
      ],
      "op": "ADD",
      "path": "17"
    },
    "5426": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5739,
        5767
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x153B"
    },
    "5429": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5739,
        5767
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "5430": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5739,
        5767
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5431": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5739,
        5767
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1F23"
    },
    "5434": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "jump": "i",
      "offset": [
        5739,
        5767
      ],
      "op": "JUMP",
      "path": "17"
    },
    "5435": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5739,
        5767
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "5436": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5739,
        5767
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "5438": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5739,
        5767
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "5439": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5739,
        5767
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "5441": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5739,
        5767
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5442": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5739,
        5767
      ],
      "op": "DUP4",
      "path": "17"
    },
    "5443": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5739,
        5767
      ],
      "op": "SUB",
      "path": "17"
    },
    "5444": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5739,
        5767
      ],
      "op": "SUB",
      "path": "17"
    },
    "5445": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5739,
        5767
      ],
      "op": "DUP2",
      "path": "17"
    },
    "5446": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5739,
        5767
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5447": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5739,
        5767
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5448": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5739,
        5767
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "5450": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5739,
        5767
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5451": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5728,
        5769
      ],
      "op": "DUP1",
      "path": "17"
    },
    "5452": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5728,
        5769
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "5453": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5728,
        5769
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5454": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5728,
        5769
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "5456": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5728,
        5769
      ],
      "op": "ADD",
      "path": "17"
    },
    "5457": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5728,
        5769
      ],
      "op": "KECCAK256",
      "path": "17"
    },
    "5458": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5787,
        5795
      ],
      "op": "DUP9",
      "path": "17"
    },
    "5459": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5842,
        5856
      ],
      "op": "DUP9",
      "path": "17"
    },
    "5460": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5824,
        5858
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "5462": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5824,
        5858
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "5463": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5824,
        5858
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "5465": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5824,
        5858
      ],
      "op": "ADD",
      "path": "17"
    },
    "5466": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5824,
        5858
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xDB5"
    },
    "5469": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5824,
        5858
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "5470": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5824,
        5858
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "5471": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "offset": [
        5824,
        5858
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1DB5"
    },
    "5474": {
      "fn": "CLHouseApi.SignerOCBulkVote",
      "jump": "i",
      "offset": [
        5824,
        5858
      ],
      "op": "JUMP",
      "path": "17"
    },
    "5475": {
      "op": "JUMPDEST"
    },
    "5476": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5481": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5483": {
      "op": "SHL"
    },
    "5484": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5486": {
      "op": "MSTORE"
    },
    "5487": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "5489": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5491": {
      "op": "MSTORE"
    },
    "5492": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5494": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5496": {
      "op": "REVERT"
    },
    "5497": {
      "op": "JUMPDEST"
    },
    "5498": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5500": {
      "op": "MLOAD"
    },
    "5501": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5503": {
      "op": "DUP3"
    },
    "5504": {
      "op": "ADD"
    },
    "5505": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5507": {
      "op": "NOT"
    },
    "5508": {
      "op": "AND"
    },
    "5509": {
      "op": "DUP2"
    },
    "5510": {
      "op": "ADD"
    },
    "5511": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5515": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5517": {
      "op": "SHL"
    },
    "5518": {
      "op": "SUB"
    },
    "5519": {
      "op": "DUP2"
    },
    "5520": {
      "op": "GT"
    },
    "5521": {
      "op": "DUP3"
    },
    "5522": {
      "op": "DUP3"
    },
    "5523": {
      "op": "LT"
    },
    "5524": {
      "op": "OR"
    },
    "5525": {
      "op": "ISZERO"
    },
    "5526": {
      "op": "PUSH2",
      "value": "0x15A1"
    },
    "5529": {
      "op": "JUMPI"
    },
    "5530": {
      "op": "PUSH2",
      "value": "0x15A1"
    },
    "5533": {
      "op": "PUSH2",
      "value": "0x1563"
    },
    "5536": {
      "jump": "i",
      "op": "JUMP"
    },
    "5537": {
      "op": "JUMPDEST"
    },
    "5538": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5540": {
      "op": "MSTORE"
    },
    "5541": {
      "op": "SWAP2"
    },
    "5542": {
      "op": "SWAP1"
    },
    "5543": {
      "op": "POP"
    },
    "5544": {
      "jump": "o",
      "op": "JUMP"
    },
    "5545": {
      "op": "JUMPDEST"
    },
    "5546": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5548": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5550": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5552": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5554": {
      "op": "SHL"
    },
    "5555": {
      "op": "SUB"
    },
    "5556": {
      "op": "DUP3"
    },
    "5557": {
      "op": "GT"
    },
    "5558": {
      "op": "ISZERO"
    },
    "5559": {
      "op": "PUSH2",
      "value": "0x15C2"
    },
    "5562": {
      "op": "JUMPI"
    },
    "5563": {
      "op": "PUSH2",
      "value": "0x15C2"
    },
    "5566": {
      "op": "PUSH2",
      "value": "0x1563"
    },
    "5569": {
      "jump": "i",
      "op": "JUMP"
    },
    "5570": {
      "op": "JUMPDEST"
    },
    "5571": {
      "op": "POP"
    },
    "5572": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5574": {
      "op": "ADD"
    },
    "5575": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5577": {
      "op": "NOT"
    },
    "5578": {
      "op": "AND"
    },
    "5579": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5581": {
      "op": "ADD"
    },
    "5582": {
      "op": "SWAP1"
    },
    "5583": {
      "jump": "o",
      "op": "JUMP"
    },
    "5584": {
      "op": "JUMPDEST"
    },
    "5585": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5587": {
      "op": "DUP3"
    },
    "5588": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5590": {
      "op": "DUP4"
    },
    "5591": {
      "op": "ADD"
    },
    "5592": {
      "op": "SLT"
    },
    "5593": {
      "op": "PUSH2",
      "value": "0x15E1"
    },
    "5596": {
      "op": "JUMPI"
    },
    "5597": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5599": {
      "op": "DUP1"
    },
    "5600": {
      "op": "REVERT"
    },
    "5601": {
      "op": "JUMPDEST"
    },
    "5602": {
      "op": "DUP2"
    },
    "5603": {
      "op": "CALLDATALOAD"
    },
    "5604": {
      "op": "PUSH2",
      "value": "0x15F4"
    },
    "5607": {
      "op": "PUSH2",
      "value": "0x15EF"
    },
    "5610": {
      "op": "DUP3"
    },
    "5611": {
      "op": "PUSH2",
      "value": "0x15A9"
    },
    "5614": {
      "jump": "i",
      "op": "JUMP"
    },
    "5615": {
      "op": "JUMPDEST"
    },
    "5616": {
      "op": "PUSH2",
      "value": "0x1579"
    },
    "5619": {
      "jump": "i",
      "op": "JUMP"
    },
    "5620": {
      "op": "JUMPDEST"
    },
    "5621": {
      "op": "DUP2"
    },
    "5622": {
      "op": "DUP2"
    },
    "5623": {
      "op": "MSTORE"
    },
    "5624": {
      "op": "DUP5"
    },
    "5625": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5627": {
      "op": "DUP4"
    },
    "5628": {
      "op": "DUP7"
    },
    "5629": {
      "op": "ADD"
    },
    "5630": {
      "op": "ADD"
    },
    "5631": {
      "op": "GT"
    },
    "5632": {
      "op": "ISZERO"
    },
    "5633": {
      "op": "PUSH2",
      "value": "0x1609"
    },
    "5636": {
      "op": "JUMPI"
    },
    "5637": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5639": {
      "op": "DUP1"
    },
    "5640": {
      "op": "REVERT"
    },
    "5641": {
      "op": "JUMPDEST"
    },
    "5642": {
      "op": "DUP2"
    },
    "5643": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5645": {
      "op": "DUP6"
    },
    "5646": {
      "op": "ADD"
    },
    "5647": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5649": {
      "op": "DUP4"
    },
    "5650": {
      "op": "ADD"
    },
    "5651": {
      "op": "CALLDATACOPY"
    },
    "5652": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5654": {
      "op": "SWAP2"
    },
    "5655": {
      "op": "DUP2"
    },
    "5656": {
      "op": "ADD"
    },
    "5657": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5659": {
      "op": "ADD"
    },
    "5660": {
      "op": "SWAP2"
    },
    "5661": {
      "op": "SWAP1"
    },
    "5662": {
      "op": "SWAP2"
    },
    "5663": {
      "op": "MSTORE"
    },
    "5664": {
      "op": "SWAP4"
    },
    "5665": {
      "op": "SWAP3"
    },
    "5666": {
      "op": "POP"
    },
    "5667": {
      "op": "POP"
    },
    "5668": {
      "op": "POP"
    },
    "5669": {
      "jump": "o",
      "op": "JUMP"
    },
    "5670": {
      "op": "JUMPDEST"
    },
    "5671": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5673": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5675": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5677": {
      "op": "SHL"
    },
    "5678": {
      "op": "SUB"
    },
    "5679": {
      "op": "DUP2"
    },
    "5680": {
      "op": "AND"
    },
    "5681": {
      "op": "DUP2"
    },
    "5682": {
      "op": "EQ"
    },
    "5683": {
      "op": "PUSH2",
      "value": "0x163B"
    },
    "5686": {
      "op": "JUMPI"
    },
    "5687": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5689": {
      "op": "DUP1"
    },
    "5690": {
      "op": "REVERT"
    },
    "5691": {
      "op": "JUMPDEST"
    },
    "5692": {
      "op": "POP"
    },
    "5693": {
      "jump": "o",
      "op": "JUMP"
    },
    "5694": {
      "op": "JUMPDEST"
    },
    "5695": {
      "op": "DUP1"
    },
    "5696": {
      "op": "CALLDATALOAD"
    },
    "5697": {
      "op": "PUSH2",
      "value": "0x1649"
    },
    "5700": {
      "op": "DUP2"
    },
    "5701": {
      "op": "PUSH2",
      "value": "0x1626"
    },
    "5704": {
      "jump": "i",
      "op": "JUMP"
    },
    "5705": {
      "op": "JUMPDEST"
    },
    "5706": {
      "op": "SWAP2"
    },
    "5707": {
      "op": "SWAP1"
    },
    "5708": {
      "op": "POP"
    },
    "5709": {
      "jump": "o",
      "op": "JUMP"
    },
    "5710": {
      "op": "JUMPDEST"
    },
    "5711": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5713": {
      "op": "DUP1"
    },
    "5714": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5716": {
      "op": "DUP1"
    },
    "5717": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5719": {
      "op": "DUP1"
    },
    "5720": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5722": {
      "op": "DUP8"
    },
    "5723": {
      "op": "DUP10"
    },
    "5724": {
      "op": "SUB"
    },
    "5725": {
      "op": "SLT"
    },
    "5726": {
      "op": "ISZERO"
    },
    "5727": {
      "op": "PUSH2",
      "value": "0x1667"
    },
    "5730": {
      "op": "JUMPI"
    },
    "5731": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5733": {
      "op": "DUP1"
    },
    "5734": {
      "op": "REVERT"
    },
    "5735": {
      "op": "JUMPDEST"
    },
    "5736": {
      "op": "DUP7"
    },
    "5737": {
      "op": "CALLDATALOAD"
    },
    "5738": {
      "op": "SWAP6"
    },
    "5739": {
      "op": "POP"
    },
    "5740": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5742": {
      "op": "DUP8"
    },
    "5743": {
      "op": "ADD"
    },
    "5744": {
      "op": "CALLDATALOAD"
    },
    "5745": {
      "op": "SWAP5"
    },
    "5746": {
      "op": "POP"
    },
    "5747": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5749": {
      "op": "DUP8"
    },
    "5750": {
      "op": "ADD"
    },
    "5751": {
      "op": "CALLDATALOAD"
    },
    "5752": {
      "op": "SWAP4"
    },
    "5753": {
      "op": "POP"
    },
    "5754": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5756": {
      "op": "DUP8"
    },
    "5757": {
      "op": "ADD"
    },
    "5758": {
      "op": "CALLDATALOAD"
    },
    "5759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5763": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5765": {
      "op": "SHL"
    },
    "5766": {
      "op": "SUB"
    },
    "5767": {
      "op": "DUP1"
    },
    "5768": {
      "op": "DUP3"
    },
    "5769": {
      "op": "GT"
    },
    "5770": {
      "op": "ISZERO"
    },
    "5771": {
      "op": "PUSH2",
      "value": "0x1693"
    },
    "5774": {
      "op": "JUMPI"
    },
    "5775": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5777": {
      "op": "DUP1"
    },
    "5778": {
      "op": "REVERT"
    },
    "5779": {
      "op": "JUMPDEST"
    },
    "5780": {
      "op": "PUSH2",
      "value": "0x169F"
    },
    "5783": {
      "op": "DUP11"
    },
    "5784": {
      "op": "DUP4"
    },
    "5785": {
      "op": "DUP12"
    },
    "5786": {
      "op": "ADD"
    },
    "5787": {
      "op": "PUSH2",
      "value": "0x15D0"
    },
    "5790": {
      "jump": "i",
      "op": "JUMP"
    },
    "5791": {
      "op": "JUMPDEST"
    },
    "5792": {
      "op": "SWAP5"
    },
    "5793": {
      "op": "POP"
    },
    "5794": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5796": {
      "op": "DUP10"
    },
    "5797": {
      "op": "ADD"
    },
    "5798": {
      "op": "CALLDATALOAD"
    },
    "5799": {
      "op": "SWAP2"
    },
    "5800": {
      "op": "POP"
    },
    "5801": {
      "op": "PUSH2",
      "value": "0x16B1"
    },
    "5804": {
      "op": "DUP3"
    },
    "5805": {
      "op": "PUSH2",
      "value": "0x1626"
    },
    "5808": {
      "jump": "i",
      "op": "JUMP"
    },
    "5809": {
      "op": "JUMPDEST"
    },
    "5810": {
      "op": "SWAP1"
    },
    "5811": {
      "op": "SWAP3"
    },
    "5812": {
      "op": "POP"
    },
    "5813": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5815": {
      "op": "DUP9"
    },
    "5816": {
      "op": "ADD"
    },
    "5817": {
      "op": "CALLDATALOAD"
    },
    "5818": {
      "op": "SWAP1"
    },
    "5819": {
      "op": "DUP1"
    },
    "5820": {
      "op": "DUP3"
    },
    "5821": {
      "op": "GT"
    },
    "5822": {
      "op": "ISZERO"
    },
    "5823": {
      "op": "PUSH2",
      "value": "0x16C7"
    },
    "5826": {
      "op": "JUMPI"
    },
    "5827": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5829": {
      "op": "DUP1"
    },
    "5830": {
      "op": "REVERT"
    },
    "5831": {
      "op": "JUMPDEST"
    },
    "5832": {
      "op": "POP"
    },
    "5833": {
      "op": "PUSH2",
      "value": "0x16D4"
    },
    "5836": {
      "op": "DUP10"
    },
    "5837": {
      "op": "DUP3"
    },
    "5838": {
      "op": "DUP11"
    },
    "5839": {
      "op": "ADD"
    },
    "5840": {
      "op": "PUSH2",
      "value": "0x15D0"
    },
    "5843": {
      "jump": "i",
      "op": "JUMP"
    },
    "5844": {
      "op": "JUMPDEST"
    },
    "5845": {
      "op": "SWAP2"
    },
    "5846": {
      "op": "POP"
    },
    "5847": {
      "op": "POP"
    },
    "5848": {
      "op": "SWAP3"
    },
    "5849": {
      "op": "SWAP6"
    },
    "5850": {
      "op": "POP"
    },
    "5851": {
      "op": "SWAP3"
    },
    "5852": {
      "op": "SWAP6"
    },
    "5853": {
      "op": "POP"
    },
    "5854": {
      "op": "SWAP3"
    },
    "5855": {
      "op": "SWAP6"
    },
    "5856": {
      "jump": "o",
      "op": "JUMP"
    },
    "5857": {
      "op": "JUMPDEST"
    },
    "5858": {
      "op": "DUP1"
    },
    "5859": {
      "op": "ISZERO"
    },
    "5860": {
      "op": "ISZERO"
    },
    "5861": {
      "op": "DUP2"
    },
    "5862": {
      "op": "EQ"
    },
    "5863": {
      "op": "PUSH2",
      "value": "0x163B"
    },
    "5866": {
      "op": "JUMPI"
    },
    "5867": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5869": {
      "op": "DUP1"
    },
    "5870": {
      "op": "REVERT"
    },
    "5871": {
      "op": "JUMPDEST"
    },
    "5872": {
      "op": "DUP1"
    },
    "5873": {
      "op": "CALLDATALOAD"
    },
    "5874": {
      "op": "PUSH2",
      "value": "0x1649"
    },
    "5877": {
      "op": "DUP2"
    },
    "5878": {
      "op": "PUSH2",
      "value": "0x16E1"
    },
    "5881": {
      "jump": "i",
      "op": "JUMP"
    },
    "5882": {
      "op": "JUMPDEST"
    },
    "5883": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5885": {
      "op": "DUP1"
    },
    "5886": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5888": {
      "op": "DUP1"
    },
    "5889": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5891": {
      "op": "DUP6"
    },
    "5892": {
      "op": "DUP8"
    },
    "5893": {
      "op": "SUB"
    },
    "5894": {
      "op": "SLT"
    },
    "5895": {
      "op": "ISZERO"
    },
    "5896": {
      "op": "PUSH2",
      "value": "0x1710"
    },
    "5899": {
      "op": "JUMPI"
    },
    "5900": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5902": {
      "op": "DUP1"
    },
    "5903": {
      "op": "REVERT"
    },
    "5904": {
      "op": "JUMPDEST"
    },
    "5905": {
      "op": "DUP5"
    },
    "5906": {
      "op": "CALLDATALOAD"
    },
    "5907": {
      "op": "PUSH2",
      "value": "0x171B"
    },
    "5910": {
      "op": "DUP2"
    },
    "5911": {
      "op": "PUSH2",
      "value": "0x16E1"
    },
    "5914": {
      "jump": "i",
      "op": "JUMP"
    },
    "5915": {
      "op": "JUMPDEST"
    },
    "5916": {
      "op": "SWAP4"
    },
    "5917": {
      "op": "POP"
    },
    "5918": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5920": {
      "op": "DUP6"
    },
    "5921": {
      "op": "ADD"
    },
    "5922": {
      "op": "CALLDATALOAD"
    },
    "5923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5927": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5929": {
      "op": "SHL"
    },
    "5930": {
      "op": "SUB"
    },
    "5931": {
      "op": "DUP1"
    },
    "5932": {
      "op": "DUP3"
    },
    "5933": {
      "op": "GT"
    },
    "5934": {
      "op": "ISZERO"
    },
    "5935": {
      "op": "PUSH2",
      "value": "0x1737"
    },
    "5938": {
      "op": "JUMPI"
    },
    "5939": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5941": {
      "op": "DUP1"
    },
    "5942": {
      "op": "REVERT"
    },
    "5943": {
      "op": "JUMPDEST"
    },
    "5944": {
      "op": "PUSH2",
      "value": "0x1743"
    },
    "5947": {
      "op": "DUP9"
    },
    "5948": {
      "op": "DUP4"
    },
    "5949": {
      "op": "DUP10"
    },
    "5950": {
      "op": "ADD"
    },
    "5951": {
      "op": "PUSH2",
      "value": "0x15D0"
    },
    "5954": {
      "jump": "i",
      "op": "JUMP"
    },
    "5955": {
      "op": "JUMPDEST"
    },
    "5956": {
      "op": "SWAP5"
    },
    "5957": {
      "op": "POP"
    },
    "5958": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5960": {
      "op": "DUP8"
    },
    "5961": {
      "op": "ADD"
    },
    "5962": {
      "op": "CALLDATALOAD"
    },
    "5963": {
      "op": "SWAP2"
    },
    "5964": {
      "op": "POP"
    },
    "5965": {
      "op": "PUSH2",
      "value": "0x1755"
    },
    "5968": {
      "op": "DUP3"
    },
    "5969": {
      "op": "PUSH2",
      "value": "0x1626"
    },
    "5972": {
      "jump": "i",
      "op": "JUMP"
    },
    "5973": {
      "op": "JUMPDEST"
    },
    "5974": {
      "op": "SWAP1"
    },
    "5975": {
      "op": "SWAP3"
    },
    "5976": {
      "op": "POP"
    },
    "5977": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5979": {
      "op": "DUP7"
    },
    "5980": {
      "op": "ADD"
    },
    "5981": {
      "op": "CALLDATALOAD"
    },
    "5982": {
      "op": "SWAP1"
    },
    "5983": {
      "op": "DUP1"
    },
    "5984": {
      "op": "DUP3"
    },
    "5985": {
      "op": "GT"
    },
    "5986": {
      "op": "ISZERO"
    },
    "5987": {
      "op": "PUSH2",
      "value": "0x176B"
    },
    "5990": {
      "op": "JUMPI"
    },
    "5991": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5993": {
      "op": "DUP1"
    },
    "5994": {
      "op": "REVERT"
    },
    "5995": {
      "op": "JUMPDEST"
    },
    "5996": {
      "op": "POP"
    },
    "5997": {
      "op": "PUSH2",
      "value": "0x1778"
    },
    "6000": {
      "op": "DUP8"
    },
    "6001": {
      "op": "DUP3"
    },
    "6002": {
      "op": "DUP9"
    },
    "6003": {
      "op": "ADD"
    },
    "6004": {
      "op": "PUSH2",
      "value": "0x15D0"
    },
    "6007": {
      "jump": "i",
      "op": "JUMP"
    },
    "6008": {
      "op": "JUMPDEST"
    },
    "6009": {
      "op": "SWAP2"
    },
    "6010": {
      "op": "POP"
    },
    "6011": {
      "op": "POP"
    },
    "6012": {
      "op": "SWAP3"
    },
    "6013": {
      "op": "SWAP6"
    },
    "6014": {
      "op": "SWAP2"
    },
    "6015": {
      "op": "SWAP5"
    },
    "6016": {
      "op": "POP"
    },
    "6017": {
      "op": "SWAP3"
    },
    "6018": {
      "op": "POP"
    },
    "6019": {
      "jump": "o",
      "op": "JUMP"
    },
    "6020": {
      "op": "JUMPDEST"
    },
    "6021": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6023": {
      "op": "DUP1"
    },
    "6024": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6026": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6028": {
      "op": "DUP5"
    },
    "6029": {
      "op": "DUP7"
    },
    "6030": {
      "op": "SUB"
    },
    "6031": {
      "op": "SLT"
    },
    "6032": {
      "op": "ISZERO"
    },
    "6033": {
      "op": "PUSH2",
      "value": "0x1799"
    },
    "6036": {
      "op": "JUMPI"
    },
    "6037": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6039": {
      "op": "DUP1"
    },
    "6040": {
      "op": "REVERT"
    },
    "6041": {
      "op": "JUMPDEST"
    },
    "6042": {
      "op": "DUP4"
    },
    "6043": {
      "op": "CALLDATALOAD"
    },
    "6044": {
      "op": "PUSH2",
      "value": "0x17A4"
    },
    "6047": {
      "op": "DUP2"
    },
    "6048": {
      "op": "PUSH2",
      "value": "0x1626"
    },
    "6051": {
      "jump": "i",
      "op": "JUMP"
    },
    "6052": {
      "op": "JUMPDEST"
    },
    "6053": {
      "op": "SWAP3"
    },
    "6054": {
      "op": "POP"
    },
    "6055": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6057": {
      "op": "DUP5"
    },
    "6058": {
      "op": "ADD"
    },
    "6059": {
      "op": "CALLDATALOAD"
    },
    "6060": {
      "op": "PUSH2",
      "value": "0x17B4"
    },
    "6063": {
      "op": "DUP2"
    },
    "6064": {
      "op": "PUSH2",
      "value": "0x1626"
    },
    "6067": {
      "jump": "i",
      "op": "JUMP"
    },
    "6068": {
      "op": "JUMPDEST"
    },
    "6069": {
      "op": "SWAP2"
    },
    "6070": {
      "op": "POP"
    },
    "6071": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6073": {
      "op": "DUP5"
    },
    "6074": {
      "op": "ADD"
    },
    "6075": {
      "op": "CALLDATALOAD"
    },
    "6076": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6080": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6082": {
      "op": "SHL"
    },
    "6083": {
      "op": "SUB"
    },
    "6084": {
      "op": "DUP2"
    },
    "6085": {
      "op": "GT"
    },
    "6086": {
      "op": "ISZERO"
    },
    "6087": {
      "op": "PUSH2",
      "value": "0x17CF"
    },
    "6090": {
      "op": "JUMPI"
    },
    "6091": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6093": {
      "op": "DUP1"
    },
    "6094": {
      "op": "REVERT"
    },
    "6095": {
      "op": "JUMPDEST"
    },
    "6096": {
      "op": "PUSH2",
      "value": "0x17DB"
    },
    "6099": {
      "op": "DUP7"
    },
    "6100": {
      "op": "DUP3"
    },
    "6101": {
      "op": "DUP8"
    },
    "6102": {
      "op": "ADD"
    },
    "6103": {
      "op": "PUSH2",
      "value": "0x15D0"
    },
    "6106": {
      "jump": "i",
      "op": "JUMP"
    },
    "6107": {
      "op": "JUMPDEST"
    },
    "6108": {
      "op": "SWAP2"
    },
    "6109": {
      "op": "POP"
    },
    "6110": {
      "op": "POP"
    },
    "6111": {
      "op": "SWAP3"
    },
    "6112": {
      "op": "POP"
    },
    "6113": {
      "op": "SWAP3"
    },
    "6114": {
      "op": "POP"
    },
    "6115": {
      "op": "SWAP3"
    },
    "6116": {
      "jump": "o",
      "op": "JUMP"
    },
    "6117": {
      "op": "JUMPDEST"
    },
    "6118": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6120": {
      "op": "DUP1"
    },
    "6121": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6123": {
      "op": "DUP1"
    },
    "6124": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6126": {
      "op": "DUP1"
    },
    "6127": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6129": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6131": {
      "op": "DUP9"
    },
    "6132": {
      "op": "DUP11"
    },
    "6133": {
      "op": "SUB"
    },
    "6134": {
      "op": "SLT"
    },
    "6135": {
      "op": "ISZERO"
    },
    "6136": {
      "op": "PUSH2",
      "value": "0x1800"
    },
    "6139": {
      "op": "JUMPI"
    },
    "6140": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6142": {
      "op": "DUP1"
    },
    "6143": {
      "op": "REVERT"
    },
    "6144": {
      "op": "JUMPDEST"
    },
    "6145": {
      "op": "DUP8"
    },
    "6146": {
      "op": "CALLDATALOAD"
    },
    "6147": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6149": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6151": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6153": {
      "op": "SHL"
    },
    "6154": {
      "op": "SUB"
    },
    "6155": {
      "op": "DUP1"
    },
    "6156": {
      "op": "DUP3"
    },
    "6157": {
      "op": "GT"
    },
    "6158": {
      "op": "ISZERO"
    },
    "6159": {
      "op": "PUSH2",
      "value": "0x1817"
    },
    "6162": {
      "op": "JUMPI"
    },
    "6163": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6165": {
      "op": "DUP1"
    },
    "6166": {
      "op": "REVERT"
    },
    "6167": {
      "op": "JUMPDEST"
    },
    "6168": {
      "op": "PUSH2",
      "value": "0x1823"
    },
    "6171": {
      "op": "DUP12"
    },
    "6172": {
      "op": "DUP4"
    },
    "6173": {
      "op": "DUP13"
    },
    "6174": {
      "op": "ADD"
    },
    "6175": {
      "op": "PUSH2",
      "value": "0x15D0"
    },
    "6178": {
      "jump": "i",
      "op": "JUMP"
    },
    "6179": {
      "op": "JUMPDEST"
    },
    "6180": {
      "op": "SWAP9"
    },
    "6181": {
      "op": "POP"
    },
    "6182": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6184": {
      "op": "DUP11"
    },
    "6185": {
      "op": "ADD"
    },
    "6186": {
      "op": "CALLDATALOAD"
    },
    "6187": {
      "op": "SWAP2"
    },
    "6188": {
      "op": "POP"
    },
    "6189": {
      "op": "PUSH2",
      "value": "0x1835"
    },
    "6192": {
      "op": "DUP3"
    },
    "6193": {
      "op": "PUSH2",
      "value": "0x16E1"
    },
    "6196": {
      "jump": "i",
      "op": "JUMP"
    },
    "6197": {
      "op": "JUMPDEST"
    },
    "6198": {
      "op": "SWAP1"
    },
    "6199": {
      "op": "SWAP7"
    },
    "6200": {
      "op": "POP"
    },
    "6201": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6203": {
      "op": "DUP10"
    },
    "6204": {
      "op": "ADD"
    },
    "6205": {
      "op": "CALLDATALOAD"
    },
    "6206": {
      "op": "SWAP1"
    },
    "6207": {
      "op": "PUSH2",
      "value": "0x1847"
    },
    "6210": {
      "op": "DUP3"
    },
    "6211": {
      "op": "PUSH2",
      "value": "0x16E1"
    },
    "6214": {
      "jump": "i",
      "op": "JUMP"
    },
    "6215": {
      "op": "JUMPDEST"
    },
    "6216": {
      "op": "SWAP1"
    },
    "6217": {
      "op": "SWAP6"
    },
    "6218": {
      "op": "POP"
    },
    "6219": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6221": {
      "op": "DUP10"
    },
    "6222": {
      "op": "ADD"
    },
    "6223": {
      "op": "CALLDATALOAD"
    },
    "6224": {
      "op": "SWAP5"
    },
    "6225": {
      "op": "POP"
    },
    "6226": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6228": {
      "op": "DUP10"
    },
    "6229": {
      "op": "ADD"
    },
    "6230": {
      "op": "CALLDATALOAD"
    },
    "6231": {
      "op": "SWAP1"
    },
    "6232": {
      "op": "PUSH2",
      "value": "0x1860"
    },
    "6235": {
      "op": "DUP3"
    },
    "6236": {
      "op": "PUSH2",
      "value": "0x1626"
    },
    "6239": {
      "jump": "i",
      "op": "JUMP"
    },
    "6240": {
      "op": "JUMPDEST"
    },
    "6241": {
      "op": "SWAP1"
    },
    "6242": {
      "op": "SWAP4"
    },
    "6243": {
      "op": "POP"
    },
    "6244": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6246": {
      "op": "DUP10"
    },
    "6247": {
      "op": "ADD"
    },
    "6248": {
      "op": "CALLDATALOAD"
    },
    "6249": {
      "op": "SWAP1"
    },
    "6250": {
      "op": "PUSH2",
      "value": "0x1872"
    },
    "6253": {
      "op": "DUP3"
    },
    "6254": {
      "op": "PUSH2",
      "value": "0x1626"
    },
    "6257": {
      "jump": "i",
      "op": "JUMP"
    },
    "6258": {
      "op": "JUMPDEST"
    },
    "6259": {
      "op": "SWAP1"
    },
    "6260": {
      "op": "SWAP3"
    },
    "6261": {
      "op": "POP"
    },
    "6262": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "6264": {
      "op": "DUP10"
    },
    "6265": {
      "op": "ADD"
    },
    "6266": {
      "op": "CALLDATALOAD"
    },
    "6267": {
      "op": "SWAP1"
    },
    "6268": {
      "op": "DUP1"
    },
    "6269": {
      "op": "DUP3"
    },
    "6270": {
      "op": "GT"
    },
    "6271": {
      "op": "ISZERO"
    },
    "6272": {
      "op": "PUSH2",
      "value": "0x1888"
    },
    "6275": {
      "op": "JUMPI"
    },
    "6276": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6278": {
      "op": "DUP1"
    },
    "6279": {
      "op": "REVERT"
    },
    "6280": {
      "op": "JUMPDEST"
    },
    "6281": {
      "op": "POP"
    },
    "6282": {
      "op": "PUSH2",
      "value": "0x1895"
    },
    "6285": {
      "op": "DUP11"
    },
    "6286": {
      "op": "DUP3"
    },
    "6287": {
      "op": "DUP12"
    },
    "6288": {
      "op": "ADD"
    },
    "6289": {
      "op": "PUSH2",
      "value": "0x15D0"
    },
    "6292": {
      "jump": "i",
      "op": "JUMP"
    },
    "6293": {
      "op": "JUMPDEST"
    },
    "6294": {
      "op": "SWAP2"
    },
    "6295": {
      "op": "POP"
    },
    "6296": {
      "op": "POP"
    },
    "6297": {
      "op": "SWAP3"
    },
    "6298": {
      "op": "SWAP6"
    },
    "6299": {
      "op": "SWAP9"
    },
    "6300": {
      "op": "SWAP2"
    },
    "6301": {
      "op": "SWAP5"
    },
    "6302": {
      "op": "SWAP8"
    },
    "6303": {
      "op": "POP"
    },
    "6304": {
      "op": "SWAP3"
    },
    "6305": {
      "op": "SWAP6"
    },
    "6306": {
      "op": "POP"
    },
    "6307": {
      "jump": "o",
      "op": "JUMP"
    },
    "6308": {
      "op": "JUMPDEST"
    },
    "6309": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6311": {
      "op": "DUP1"
    },
    "6312": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6314": {
      "op": "DUP1"
    },
    "6315": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6317": {
      "op": "DUP1"
    },
    "6318": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6320": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6322": {
      "op": "DUP9"
    },
    "6323": {
      "op": "DUP11"
    },
    "6324": {
      "op": "SUB"
    },
    "6325": {
      "op": "SLT"
    },
    "6326": {
      "op": "ISZERO"
    },
    "6327": {
      "op": "PUSH2",
      "value": "0x18BF"
    },
    "6330": {
      "op": "JUMPI"
    },
    "6331": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6333": {
      "op": "DUP1"
    },
    "6334": {
      "op": "REVERT"
    },
    "6335": {
      "op": "JUMPDEST"
    },
    "6336": {
      "op": "DUP8"
    },
    "6337": {
      "op": "CALLDATALOAD"
    },
    "6338": {
      "op": "PUSH2",
      "value": "0x18CA"
    },
    "6341": {
      "op": "DUP2"
    },
    "6342": {
      "op": "PUSH2",
      "value": "0x1626"
    },
    "6345": {
      "jump": "i",
      "op": "JUMP"
    },
    "6346": {
      "op": "JUMPDEST"
    },
    "6347": {
      "op": "SWAP7"
    },
    "6348": {
      "op": "POP"
    },
    "6349": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6351": {
      "op": "DUP9"
    },
    "6352": {
      "op": "ADD"
    },
    "6353": {
      "op": "CALLDATALOAD"
    },
    "6354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6358": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6360": {
      "op": "SHL"
    },
    "6361": {
      "op": "SUB"
    },
    "6362": {
      "op": "DUP1"
    },
    "6363": {
      "op": "DUP3"
    },
    "6364": {
      "op": "GT"
    },
    "6365": {
      "op": "ISZERO"
    },
    "6366": {
      "op": "PUSH2",
      "value": "0x18E6"
    },
    "6369": {
      "op": "JUMPI"
    },
    "6370": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6372": {
      "op": "DUP1"
    },
    "6373": {
      "op": "REVERT"
    },
    "6374": {
      "op": "JUMPDEST"
    },
    "6375": {
      "op": "PUSH2",
      "value": "0x18F2"
    },
    "6378": {
      "op": "DUP12"
    },
    "6379": {
      "op": "DUP4"
    },
    "6380": {
      "op": "DUP13"
    },
    "6381": {
      "op": "ADD"
    },
    "6382": {
      "op": "PUSH2",
      "value": "0x15D0"
    },
    "6385": {
      "jump": "i",
      "op": "JUMP"
    },
    "6386": {
      "op": "JUMPDEST"
    },
    "6387": {
      "op": "SWAP8"
    },
    "6388": {
      "op": "POP"
    },
    "6389": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6391": {
      "op": "DUP11"
    },
    "6392": {
      "op": "ADD"
    },
    "6393": {
      "op": "CALLDATALOAD"
    },
    "6394": {
      "op": "SWAP2"
    },
    "6395": {
      "op": "POP"
    },
    "6396": {
      "op": "DUP1"
    },
    "6397": {
      "op": "DUP3"
    },
    "6398": {
      "op": "GT"
    },
    "6399": {
      "op": "ISZERO"
    },
    "6400": {
      "op": "PUSH2",
      "value": "0x1908"
    },
    "6403": {
      "op": "JUMPI"
    },
    "6404": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6406": {
      "op": "DUP1"
    },
    "6407": {
      "op": "REVERT"
    },
    "6408": {
      "op": "JUMPDEST"
    },
    "6409": {
      "op": "PUSH2",
      "value": "0x1914"
    },
    "6412": {
      "op": "DUP12"
    },
    "6413": {
      "op": "DUP4"
    },
    "6414": {
      "op": "DUP13"
    },
    "6415": {
      "op": "ADD"
    },
    "6416": {
      "op": "PUSH2",
      "value": "0x15D0"
    },
    "6419": {
      "jump": "i",
      "op": "JUMP"
    },
    "6420": {
      "op": "JUMPDEST"
    },
    "6421": {
      "op": "SWAP7"
    },
    "6422": {
      "op": "POP"
    },
    "6423": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6425": {
      "op": "DUP11"
    },
    "6426": {
      "op": "ADD"
    },
    "6427": {
      "op": "CALLDATALOAD"
    },
    "6428": {
      "op": "SWAP2"
    },
    "6429": {
      "op": "POP"
    },
    "6430": {
      "op": "PUSH2",
      "value": "0x1926"
    },
    "6433": {
      "op": "DUP3"
    },
    "6434": {
      "op": "PUSH2",
      "value": "0x16E1"
    },
    "6437": {
      "jump": "i",
      "op": "JUMP"
    },
    "6438": {
      "op": "JUMPDEST"
    },
    "6439": {
      "op": "DUP2"
    },
    "6440": {
      "op": "SWAP6"
    },
    "6441": {
      "op": "POP"
    },
    "6442": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6444": {
      "op": "DUP11"
    },
    "6445": {
      "op": "ADD"
    },
    "6446": {
      "op": "CALLDATALOAD"
    },
    "6447": {
      "op": "SWAP5"
    },
    "6448": {
      "op": "POP"
    },
    "6449": {
      "op": "PUSH2",
      "value": "0x193C"
    },
    "6452": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6454": {
      "op": "DUP12"
    },
    "6455": {
      "op": "ADD"
    },
    "6456": {
      "op": "PUSH2",
      "value": "0x163E"
    },
    "6459": {
      "jump": "i",
      "op": "JUMP"
    },
    "6460": {
      "op": "JUMPDEST"
    },
    "6461": {
      "op": "SWAP4"
    },
    "6462": {
      "op": "POP"
    },
    "6463": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "6465": {
      "op": "DUP11"
    },
    "6466": {
      "op": "ADD"
    },
    "6467": {
      "op": "CALLDATALOAD"
    },
    "6468": {
      "op": "SWAP2"
    },
    "6469": {
      "op": "POP"
    },
    "6470": {
      "op": "DUP1"
    },
    "6471": {
      "op": "DUP3"
    },
    "6472": {
      "op": "GT"
    },
    "6473": {
      "op": "ISZERO"
    },
    "6474": {
      "op": "PUSH2",
      "value": "0x1888"
    },
    "6477": {
      "op": "JUMPI"
    },
    "6478": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6480": {
      "op": "DUP1"
    },
    "6481": {
      "op": "REVERT"
    },
    "6482": {
      "op": "JUMPDEST"
    },
    "6483": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6485": {
      "op": "DUP1"
    },
    "6486": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6488": {
      "op": "DUP4"
    },
    "6489": {
      "op": "DUP6"
    },
    "6490": {
      "op": "SUB"
    },
    "6491": {
      "op": "SLT"
    },
    "6492": {
      "op": "ISZERO"
    },
    "6493": {
      "op": "PUSH2",
      "value": "0x1965"
    },
    "6496": {
      "op": "JUMPI"
    },
    "6497": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6499": {
      "op": "DUP1"
    },
    "6500": {
      "op": "REVERT"
    },
    "6501": {
      "op": "JUMPDEST"
    },
    "6502": {
      "op": "DUP3"
    },
    "6503": {
      "op": "CALLDATALOAD"
    },
    "6504": {
      "op": "SWAP2"
    },
    "6505": {
      "op": "POP"
    },
    "6506": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6508": {
      "op": "DUP4"
    },
    "6509": {
      "op": "ADD"
    },
    "6510": {
      "op": "CALLDATALOAD"
    },
    "6511": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6515": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6517": {
      "op": "SHL"
    },
    "6518": {
      "op": "SUB"
    },
    "6519": {
      "op": "DUP2"
    },
    "6520": {
      "op": "GT"
    },
    "6521": {
      "op": "ISZERO"
    },
    "6522": {
      "op": "PUSH2",
      "value": "0x1982"
    },
    "6525": {
      "op": "JUMPI"
    },
    "6526": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6528": {
      "op": "DUP1"
    },
    "6529": {
      "op": "REVERT"
    },
    "6530": {
      "op": "JUMPDEST"
    },
    "6531": {
      "op": "PUSH2",
      "value": "0x198E"
    },
    "6534": {
      "op": "DUP6"
    },
    "6535": {
      "op": "DUP3"
    },
    "6536": {
      "op": "DUP7"
    },
    "6537": {
      "op": "ADD"
    },
    "6538": {
      "op": "PUSH2",
      "value": "0x15D0"
    },
    "6541": {
      "jump": "i",
      "op": "JUMP"
    },
    "6542": {
      "op": "JUMPDEST"
    },
    "6543": {
      "op": "SWAP2"
    },
    "6544": {
      "op": "POP"
    },
    "6545": {
      "op": "POP"
    },
    "6546": {
      "op": "SWAP3"
    },
    "6547": {
      "op": "POP"
    },
    "6548": {
      "op": "SWAP3"
    },
    "6549": {
      "op": "SWAP1"
    },
    "6550": {
      "op": "POP"
    },
    "6551": {
      "jump": "o",
      "op": "JUMP"
    },
    "6552": {
      "op": "JUMPDEST"
    },
    "6553": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6555": {
      "op": "DUP1"
    },
    "6556": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6558": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6560": {
      "op": "DUP5"
    },
    "6561": {
      "op": "DUP7"
    },
    "6562": {
      "op": "SUB"
    },
    "6563": {
      "op": "SLT"
    },
    "6564": {
      "op": "ISZERO"
    },
    "6565": {
      "op": "PUSH2",
      "value": "0x19AD"
    },
    "6568": {
      "op": "JUMPI"
    },
    "6569": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6571": {
      "op": "DUP1"
    },
    "6572": {
      "op": "REVERT"
    },
    "6573": {
      "op": "JUMPDEST"
    },
    "6574": {
      "op": "DUP4"
    },
    "6575": {
      "op": "CALLDATALOAD"
    },
    "6576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6580": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6582": {
      "op": "SHL"
    },
    "6583": {
      "op": "SUB"
    },
    "6584": {
      "op": "DUP1"
    },
    "6585": {
      "op": "DUP3"
    },
    "6586": {
      "op": "GT"
    },
    "6587": {
      "op": "ISZERO"
    },
    "6588": {
      "op": "PUSH2",
      "value": "0x19C4"
    },
    "6591": {
      "op": "JUMPI"
    },
    "6592": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6594": {
      "op": "DUP1"
    },
    "6595": {
      "op": "REVERT"
    },
    "6596": {
      "op": "JUMPDEST"
    },
    "6597": {
      "op": "PUSH2",
      "value": "0x19D0"
    },
    "6600": {
      "op": "DUP8"
    },
    "6601": {
      "op": "DUP4"
    },
    "6602": {
      "op": "DUP9"
    },
    "6603": {
      "op": "ADD"
    },
    "6604": {
      "op": "PUSH2",
      "value": "0x15D0"
    },
    "6607": {
      "jump": "i",
      "op": "JUMP"
    },
    "6608": {
      "op": "JUMPDEST"
    },
    "6609": {
      "op": "SWAP5"
    },
    "6610": {
      "op": "POP"
    },
    "6611": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6613": {
      "op": "DUP7"
    },
    "6614": {
      "op": "ADD"
    },
    "6615": {
      "op": "CALLDATALOAD"
    },
    "6616": {
      "op": "SWAP2"
    },
    "6617": {
      "op": "POP"
    },
    "6618": {
      "op": "PUSH2",
      "value": "0x19E2"
    },
    "6621": {
      "op": "DUP3"
    },
    "6622": {
      "op": "PUSH2",
      "value": "0x1626"
    },
    "6625": {
      "jump": "i",
      "op": "JUMP"
    },
    "6626": {
      "op": "JUMPDEST"
    },
    "6627": {
      "op": "SWAP1"
    },
    "6628": {
      "op": "SWAP3"
    },
    "6629": {
      "op": "POP"
    },
    "6630": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6632": {
      "op": "DUP6"
    },
    "6633": {
      "op": "ADD"
    },
    "6634": {
      "op": "CALLDATALOAD"
    },
    "6635": {
      "op": "SWAP1"
    },
    "6636": {
      "op": "DUP1"
    },
    "6637": {
      "op": "DUP3"
    },
    "6638": {
      "op": "GT"
    },
    "6639": {
      "op": "ISZERO"
    },
    "6640": {
      "op": "PUSH2",
      "value": "0x19F8"
    },
    "6643": {
      "op": "JUMPI"
    },
    "6644": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6646": {
      "op": "DUP1"
    },
    "6647": {
      "op": "REVERT"
    },
    "6648": {
      "op": "JUMPDEST"
    },
    "6649": {
      "op": "POP"
    },
    "6650": {
      "op": "PUSH2",
      "value": "0x17DB"
    },
    "6653": {
      "op": "DUP7"
    },
    "6654": {
      "op": "DUP3"
    },
    "6655": {
      "op": "DUP8"
    },
    "6656": {
      "op": "ADD"
    },
    "6657": {
      "op": "PUSH2",
      "value": "0x15D0"
    },
    "6660": {
      "jump": "i",
      "op": "JUMP"
    },
    "6661": {
      "op": "JUMPDEST"
    },
    "6662": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6664": {
      "op": "DUP1"
    },
    "6665": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6667": {
      "op": "DUP1"
    },
    "6668": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6670": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6672": {
      "op": "DUP7"
    },
    "6673": {
      "op": "DUP9"
    },
    "6674": {
      "op": "SUB"
    },
    "6675": {
      "op": "SLT"
    },
    "6676": {
      "op": "ISZERO"
    },
    "6677": {
      "op": "PUSH2",
      "value": "0x1A1D"
    },
    "6680": {
      "op": "JUMPI"
    },
    "6681": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6683": {
      "op": "DUP1"
    },
    "6684": {
      "op": "REVERT"
    },
    "6685": {
      "op": "JUMPDEST"
    },
    "6686": {
      "op": "DUP6"
    },
    "6687": {
      "op": "CALLDATALOAD"
    },
    "6688": {
      "op": "SWAP5"
    },
    "6689": {
      "op": "POP"
    },
    "6690": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6692": {
      "op": "DUP7"
    },
    "6693": {
      "op": "ADD"
    },
    "6694": {
      "op": "CALLDATALOAD"
    },
    "6695": {
      "op": "PUSH2",
      "value": "0x1A2F"
    },
    "6698": {
      "op": "DUP2"
    },
    "6699": {
      "op": "PUSH2",
      "value": "0x16E1"
    },
    "6702": {
      "jump": "i",
      "op": "JUMP"
    },
    "6703": {
      "op": "JUMPDEST"
    },
    "6704": {
      "op": "SWAP4"
    },
    "6705": {
      "op": "POP"
    },
    "6706": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6708": {
      "op": "DUP7"
    },
    "6709": {
      "op": "ADD"
    },
    "6710": {
      "op": "CALLDATALOAD"
    },
    "6711": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6715": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6717": {
      "op": "SHL"
    },
    "6718": {
      "op": "SUB"
    },
    "6719": {
      "op": "DUP1"
    },
    "6720": {
      "op": "DUP3"
    },
    "6721": {
      "op": "GT"
    },
    "6722": {
      "op": "ISZERO"
    },
    "6723": {
      "op": "PUSH2",
      "value": "0x1A4B"
    },
    "6726": {
      "op": "JUMPI"
    },
    "6727": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6729": {
      "op": "DUP1"
    },
    "6730": {
      "op": "REVERT"
    },
    "6731": {
      "op": "JUMPDEST"
    },
    "6732": {
      "op": "PUSH2",
      "value": "0x1A57"
    },
    "6735": {
      "op": "DUP10"
    },
    "6736": {
      "op": "DUP4"
    },
    "6737": {
      "op": "DUP11"
    },
    "6738": {
      "op": "ADD"
    },
    "6739": {
      "op": "PUSH2",
      "value": "0x15D0"
    },
    "6742": {
      "jump": "i",
      "op": "JUMP"
    },
    "6743": {
      "op": "JUMPDEST"
    },
    "6744": {
      "op": "SWAP5"
    },
    "6745": {
      "op": "POP"
    },
    "6746": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6748": {
      "op": "DUP9"
    },
    "6749": {
      "op": "ADD"
    },
    "6750": {
      "op": "CALLDATALOAD"
    },
    "6751": {
      "op": "SWAP2"
    },
    "6752": {
      "op": "POP"
    },
    "6753": {
      "op": "PUSH2",
      "value": "0x1A69"
    },
    "6756": {
      "op": "DUP3"
    },
    "6757": {
      "op": "PUSH2",
      "value": "0x1626"
    },
    "6760": {
      "jump": "i",
      "op": "JUMP"
    },
    "6761": {
      "op": "JUMPDEST"
    },
    "6762": {
      "op": "SWAP1"
    },
    "6763": {
      "op": "SWAP3"
    },
    "6764": {
      "op": "POP"
    },
    "6765": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6767": {
      "op": "DUP8"
    },
    "6768": {
      "op": "ADD"
    },
    "6769": {
      "op": "CALLDATALOAD"
    },
    "6770": {
      "op": "SWAP1"
    },
    "6771": {
      "op": "DUP1"
    },
    "6772": {
      "op": "DUP3"
    },
    "6773": {
      "op": "GT"
    },
    "6774": {
      "op": "ISZERO"
    },
    "6775": {
      "op": "PUSH2",
      "value": "0x1A7F"
    },
    "6778": {
      "op": "JUMPI"
    },
    "6779": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6781": {
      "op": "DUP1"
    },
    "6782": {
      "op": "REVERT"
    },
    "6783": {
      "op": "JUMPDEST"
    },
    "6784": {
      "op": "POP"
    },
    "6785": {
      "op": "PUSH2",
      "value": "0x1A8C"
    },
    "6788": {
      "op": "DUP9"
    },
    "6789": {
      "op": "DUP3"
    },
    "6790": {
      "op": "DUP10"
    },
    "6791": {
      "op": "ADD"
    },
    "6792": {
      "op": "PUSH2",
      "value": "0x15D0"
    },
    "6795": {
      "jump": "i",
      "op": "JUMP"
    },
    "6796": {
      "op": "JUMPDEST"
    },
    "6797": {
      "op": "SWAP2"
    },
    "6798": {
      "op": "POP"
    },
    "6799": {
      "op": "POP"
    },
    "6800": {
      "op": "SWAP3"
    },
    "6801": {
      "op": "SWAP6"
    },
    "6802": {
      "op": "POP"
    },
    "6803": {
      "op": "SWAP3"
    },
    "6804": {
      "op": "SWAP6"
    },
    "6805": {
      "op": "SWAP1"
    },
    "6806": {
      "op": "SWAP4"
    },
    "6807": {
      "op": "POP"
    },
    "6808": {
      "jump": "o",
      "op": "JUMP"
    },
    "6809": {
      "op": "JUMPDEST"
    },
    "6810": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6812": {
      "op": "DUP1"
    },
    "6813": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6815": {
      "op": "DUP1"
    },
    "6816": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6818": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6820": {
      "op": "DUP7"
    },
    "6821": {
      "op": "DUP9"
    },
    "6822": {
      "op": "SUB"
    },
    "6823": {
      "op": "SLT"
    },
    "6824": {
      "op": "ISZERO"
    },
    "6825": {
      "op": "PUSH2",
      "value": "0x1AB1"
    },
    "6828": {
      "op": "JUMPI"
    },
    "6829": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6831": {
      "op": "DUP1"
    },
    "6832": {
      "op": "REVERT"
    },
    "6833": {
      "op": "JUMPDEST"
    },
    "6834": {
      "op": "DUP6"
    },
    "6835": {
      "op": "CALLDATALOAD"
    },
    "6836": {
      "op": "PUSH2",
      "value": "0x1ABC"
    },
    "6839": {
      "op": "DUP2"
    },
    "6840": {
      "op": "PUSH2",
      "value": "0x1626"
    },
    "6843": {
      "jump": "i",
      "op": "JUMP"
    },
    "6844": {
      "op": "JUMPDEST"
    },
    "6845": {
      "op": "SWAP5"
    },
    "6846": {
      "op": "POP"
    },
    "6847": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6849": {
      "op": "DUP7"
    },
    "6850": {
      "op": "ADD"
    },
    "6851": {
      "op": "CALLDATALOAD"
    },
    "6852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6856": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6858": {
      "op": "SHL"
    },
    "6859": {
      "op": "SUB"
    },
    "6860": {
      "op": "DUP1"
    },
    "6861": {
      "op": "DUP3"
    },
    "6862": {
      "op": "GT"
    },
    "6863": {
      "op": "ISZERO"
    },
    "6864": {
      "op": "PUSH2",
      "value": "0x1AD8"
    },
    "6867": {
      "op": "JUMPI"
    },
    "6868": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6870": {
      "op": "DUP1"
    },
    "6871": {
      "op": "REVERT"
    },
    "6872": {
      "op": "JUMPDEST"
    },
    "6873": {
      "op": "PUSH2",
      "value": "0x1AE4"
    },
    "6876": {
      "op": "DUP10"
    },
    "6877": {
      "op": "DUP4"
    },
    "6878": {
      "op": "DUP11"
    },
    "6879": {
      "op": "ADD"
    },
    "6880": {
      "op": "PUSH2",
      "value": "0x15D0"
    },
    "6883": {
      "jump": "i",
      "op": "JUMP"
    },
    "6884": {
      "op": "JUMPDEST"
    },
    "6885": {
      "op": "SWAP6"
    },
    "6886": {
      "op": "POP"
    },
    "6887": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6889": {
      "op": "DUP9"
    },
    "6890": {
      "op": "ADD"
    },
    "6891": {
      "op": "CALLDATALOAD"
    },
    "6892": {
      "op": "SWAP5"
    },
    "6893": {
      "op": "POP"
    },
    "6894": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6896": {
      "op": "DUP9"
    },
    "6897": {
      "op": "ADD"
    },
    "6898": {
      "op": "CALLDATALOAD"
    },
    "6899": {
      "op": "SWAP2"
    },
    "6900": {
      "op": "POP"
    },
    "6901": {
      "op": "PUSH2",
      "value": "0x1A69"
    },
    "6904": {
      "op": "DUP3"
    },
    "6905": {
      "op": "PUSH2",
      "value": "0x1626"
    },
    "6908": {
      "jump": "i",
      "op": "JUMP"
    },
    "6909": {
      "op": "JUMPDEST"
    },
    "6910": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6912": {
      "op": "DUP1"
    },
    "6913": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6915": {
      "op": "DUP1"
    },
    "6916": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6918": {
      "op": "DUP6"
    },
    "6919": {
      "op": "DUP8"
    },
    "6920": {
      "op": "SUB"
    },
    "6921": {
      "op": "SLT"
    },
    "6922": {
      "op": "ISZERO"
    },
    "6923": {
      "op": "PUSH2",
      "value": "0x1B13"
    },
    "6926": {
      "op": "JUMPI"
    },
    "6927": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6929": {
      "op": "DUP1"
    },
    "6930": {
      "op": "REVERT"
    },
    "6931": {
      "op": "JUMPDEST"
    },
    "6932": {
      "op": "DUP5"
    },
    "6933": {
      "op": "CALLDATALOAD"
    },
    "6934": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6938": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6940": {
      "op": "SHL"
    },
    "6941": {
      "op": "SUB"
    },
    "6942": {
      "op": "DUP1"
    },
    "6943": {
      "op": "DUP3"
    },
    "6944": {
      "op": "GT"
    },
    "6945": {
      "op": "ISZERO"
    },
    "6946": {
      "op": "PUSH2",
      "value": "0x1B2A"
    },
    "6949": {
      "op": "JUMPI"
    },
    "6950": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6952": {
      "op": "DUP1"
    },
    "6953": {
      "op": "REVERT"
    },
    "6954": {
      "op": "JUMPDEST"
    },
    "6955": {
      "op": "PUSH2",
      "value": "0x1B36"
    },
    "6958": {
      "op": "DUP9"
    },
    "6959": {
      "op": "DUP4"
    },
    "6960": {
      "op": "DUP10"
    },
    "6961": {
      "op": "ADD"
    },
    "6962": {
      "op": "PUSH2",
      "value": "0x15D0"
    },
    "6965": {
      "jump": "i",
      "op": "JUMP"
    },
    "6966": {
      "op": "JUMPDEST"
    },
    "6967": {
      "op": "SWAP6"
    },
    "6968": {
      "op": "POP"
    },
    "6969": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6971": {
      "op": "DUP8"
    },
    "6972": {
      "op": "ADD"
    },
    "6973": {
      "op": "CALLDATALOAD"
    },
    "6974": {
      "op": "SWAP2"
    },
    "6975": {
      "op": "POP"
    },
    "6976": {
      "op": "DUP1"
    },
    "6977": {
      "op": "DUP3"
    },
    "6978": {
      "op": "GT"
    },
    "6979": {
      "op": "ISZERO"
    },
    "6980": {
      "op": "PUSH2",
      "value": "0x1737"
    },
    "6983": {
      "op": "JUMPI"
    },
    "6984": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6986": {
      "op": "DUP1"
    },
    "6987": {
      "op": "REVERT"
    },
    "6988": {
      "op": "JUMPDEST"
    },
    "6989": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6991": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6993": {
      "op": "DUP3"
    },
    "6994": {
      "op": "DUP5"
    },
    "6995": {
      "op": "SUB"
    },
    "6996": {
      "op": "SLT"
    },
    "6997": {
      "op": "ISZERO"
    },
    "6998": {
      "op": "PUSH2",
      "value": "0x1B5E"
    },
    "7001": {
      "op": "JUMPI"
    },
    "7002": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7004": {
      "op": "DUP1"
    },
    "7005": {
      "op": "REVERT"
    },
    "7006": {
      "op": "JUMPDEST"
    },
    "7007": {
      "op": "DUP2"
    },
    "7008": {
      "op": "CALLDATALOAD"
    },
    "7009": {
      "op": "PUSH2",
      "value": "0x1B69"
    },
    "7012": {
      "op": "DUP2"
    },
    "7013": {
      "op": "PUSH2",
      "value": "0x1626"
    },
    "7016": {
      "jump": "i",
      "op": "JUMP"
    },
    "7017": {
      "op": "JUMPDEST"
    },
    "7018": {
      "op": "SWAP4"
    },
    "7019": {
      "op": "SWAP3"
    },
    "7020": {
      "op": "POP"
    },
    "7021": {
      "op": "POP"
    },
    "7022": {
      "op": "POP"
    },
    "7023": {
      "jump": "o",
      "op": "JUMP"
    },
    "7024": {
      "op": "JUMPDEST"
    },
    "7025": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7027": {
      "op": "JUMPDEST"
    },
    "7028": {
      "op": "DUP4"
    },
    "7029": {
      "op": "DUP2"
    },
    "7030": {
      "op": "LT"
    },
    "7031": {
      "op": "ISZERO"
    },
    "7032": {
      "op": "PUSH2",
      "value": "0x1B8B"
    },
    "7035": {
      "op": "JUMPI"
    },
    "7036": {
      "op": "DUP2"
    },
    "7037": {
      "op": "DUP2"
    },
    "7038": {
      "op": "ADD"
    },
    "7039": {
      "op": "MLOAD"
    },
    "7040": {
      "op": "DUP4"
    },
    "7041": {
      "op": "DUP3"
    },
    "7042": {
      "op": "ADD"
    },
    "7043": {
      "op": "MSTORE"
    },
    "7044": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7046": {
      "op": "ADD"
    },
    "7047": {
      "op": "PUSH2",
      "value": "0x1B73"
    },
    "7050": {
      "op": "JUMP"
    },
    "7051": {
      "op": "JUMPDEST"
    },
    "7052": {
      "op": "DUP4"
    },
    "7053": {
      "op": "DUP2"
    },
    "7054": {
      "op": "GT"
    },
    "7055": {
      "op": "ISZERO"
    },
    "7056": {
      "op": "PUSH2",
      "value": "0x1B9A"
    },
    "7059": {
      "op": "JUMPI"
    },
    "7060": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7062": {
      "op": "DUP5"
    },
    "7063": {
      "op": "DUP5"
    },
    "7064": {
      "op": "ADD"
    },
    "7065": {
      "op": "MSTORE"
    },
    "7066": {
      "op": "JUMPDEST"
    },
    "7067": {
      "op": "POP"
    },
    "7068": {
      "op": "POP"
    },
    "7069": {
      "op": "POP"
    },
    "7070": {
      "op": "POP"
    },
    "7071": {
      "jump": "o",
      "op": "JUMP"
    },
    "7072": {
      "op": "JUMPDEST"
    },
    "7073": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7075": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7077": {
      "op": "DUP1"
    },
    "7078": {
      "op": "DUP4"
    },
    "7079": {
      "op": "ADD"
    },
    "7080": {
      "op": "DUP2"
    },
    "7081": {
      "op": "DUP5"
    },
    "7082": {
      "op": "MSTORE"
    },
    "7083": {
      "op": "DUP1"
    },
    "7084": {
      "op": "DUP6"
    },
    "7085": {
      "op": "MLOAD"
    },
    "7086": {
      "op": "DUP1"
    },
    "7087": {
      "op": "DUP4"
    },
    "7088": {
      "op": "MSTORE"
    },
    "7089": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7091": {
      "op": "SWAP3"
    },
    "7092": {
      "op": "POP"
    },
    "7093": {
      "op": "DUP3"
    },
    "7094": {
      "op": "DUP7"
    },
    "7095": {
      "op": "ADD"
    },
    "7096": {
      "op": "SWAP2"
    },
    "7097": {
      "op": "POP"
    },
    "7098": {
      "op": "DUP3"
    },
    "7099": {
      "op": "DUP2"
    },
    "7100": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "7102": {
      "op": "SHL"
    },
    "7103": {
      "op": "DUP8"
    },
    "7104": {
      "op": "ADD"
    },
    "7105": {
      "op": "ADD"
    },
    "7106": {
      "op": "DUP5"
    },
    "7107": {
      "op": "DUP9"
    },
    "7108": {
      "op": "ADD"
    },
    "7109": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7111": {
      "op": "JUMPDEST"
    },
    "7112": {
      "op": "DUP4"
    },
    "7113": {
      "op": "DUP2"
    },
    "7114": {
      "op": "LT"
    },
    "7115": {
      "op": "ISZERO"
    },
    "7116": {
      "op": "PUSH2",
      "value": "0x1C47"
    },
    "7119": {
      "op": "JUMPI"
    },
    "7120": {
      "op": "DUP9"
    },
    "7121": {
      "op": "DUP4"
    },
    "7122": {
      "op": "SUB"
    },
    "7123": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "7125": {
      "op": "NOT"
    },
    "7126": {
      "op": "ADD"
    },
    "7127": {
      "op": "DUP6"
    },
    "7128": {
      "op": "MSTORE"
    },
    "7129": {
      "op": "DUP2"
    },
    "7130": {
      "op": "MLOAD"
    },
    "7131": {
      "op": "DUP1"
    },
    "7132": {
      "op": "MLOAD"
    },
    "7133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7137": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7139": {
      "op": "SHL"
    },
    "7140": {
      "op": "SUB"
    },
    "7141": {
      "op": "AND"
    },
    "7142": {
      "op": "DUP5"
    },
    "7143": {
      "op": "MSTORE"
    },
    "7144": {
      "op": "DUP8"
    },
    "7145": {
      "op": "DUP2"
    },
    "7146": {
      "op": "ADD"
    },
    "7147": {
      "op": "MLOAD"
    },
    "7148": {
      "op": "DUP9"
    },
    "7149": {
      "op": "DUP6"
    },
    "7150": {
      "op": "ADD"
    },
    "7151": {
      "op": "MSTORE"
    },
    "7152": {
      "op": "DUP7"
    },
    "7153": {
      "op": "DUP2"
    },
    "7154": {
      "op": "ADD"
    },
    "7155": {
      "op": "MLOAD"
    },
    "7156": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7158": {
      "op": "DUP9"
    },
    "7159": {
      "op": "DUP7"
    },
    "7160": {
      "op": "ADD"
    },
    "7161": {
      "op": "DUP2"
    },
    "7162": {
      "op": "SWAP1"
    },
    "7163": {
      "op": "MSTORE"
    },
    "7164": {
      "op": "DUP2"
    },
    "7165": {
      "op": "MLOAD"
    },
    "7166": {
      "op": "SWAP1"
    },
    "7167": {
      "op": "DUP7"
    },
    "7168": {
      "op": "ADD"
    },
    "7169": {
      "op": "DUP2"
    },
    "7170": {
      "op": "SWAP1"
    },
    "7171": {
      "op": "MSTORE"
    },
    "7172": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7174": {
      "op": "SWAP2"
    },
    "7175": {
      "op": "SWAP1"
    },
    "7176": {
      "op": "PUSH2",
      "value": "0x1C16"
    },
    "7179": {
      "op": "DUP2"
    },
    "7180": {
      "op": "DUP5"
    },
    "7181": {
      "op": "DUP10"
    },
    "7182": {
      "op": "ADD"
    },
    "7183": {
      "op": "DUP5"
    },
    "7184": {
      "op": "DUP15"
    },
    "7185": {
      "op": "ADD"
    },
    "7186": {
      "op": "PUSH2",
      "value": "0x1B70"
    },
    "7189": {
      "jump": "i",
      "op": "JUMP"
    },
    "7190": {
      "op": "JUMPDEST"
    },
    "7191": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7193": {
      "op": "SWAP4"
    },
    "7194": {
      "op": "DUP5"
    },
    "7195": {
      "op": "ADD"
    },
    "7196": {
      "op": "MLOAD"
    },
    "7197": {
      "op": "ISZERO"
    },
    "7198": {
      "op": "ISZERO"
    },
    "7199": {
      "op": "SWAP4"
    },
    "7200": {
      "op": "DUP8"
    },
    "7201": {
      "op": "ADD"
    },
    "7202": {
      "op": "SWAP4"
    },
    "7203": {
      "op": "SWAP1"
    },
    "7204": {
      "op": "SWAP4"
    },
    "7205": {
      "op": "MSTORE"
    },
    "7206": {
      "op": "POP"
    },
    "7207": {
      "op": "SWAP6"
    },
    "7208": {
      "op": "DUP9"
    },
    "7209": {
      "op": "ADD"
    },
    "7210": {
      "op": "SWAP6"
    },
    "7211": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7213": {
      "op": "SWAP2"
    },
    "7214": {
      "op": "SWAP1"
    },
    "7215": {
      "op": "SWAP2"
    },
    "7216": {
      "op": "ADD"
    },
    "7217": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7219": {
      "op": "NOT"
    },
    "7220": {
      "op": "AND"
    },
    "7221": {
      "op": "SWAP1"
    },
    "7222": {
      "op": "SWAP4"
    },
    "7223": {
      "op": "ADD"
    },
    "7224": {
      "op": "SWAP1"
    },
    "7225": {
      "op": "SWAP3"
    },
    "7226": {
      "op": "ADD"
    },
    "7227": {
      "op": "SWAP2"
    },
    "7228": {
      "op": "SWAP1"
    },
    "7229": {
      "op": "DUP7"
    },
    "7230": {
      "op": "ADD"
    },
    "7231": {
      "op": "SWAP1"
    },
    "7232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7234": {
      "op": "ADD"
    },
    "7235": {
      "op": "PUSH2",
      "value": "0x1BC7"
    },
    "7238": {
      "op": "JUMP"
    },
    "7239": {
      "op": "JUMPDEST"
    },
    "7240": {
      "op": "POP"
    },
    "7241": {
      "op": "SWAP1"
    },
    "7242": {
      "op": "SWAP9"
    },
    "7243": {
      "op": "SWAP8"
    },
    "7244": {
      "op": "POP"
    },
    "7245": {
      "op": "POP"
    },
    "7246": {
      "op": "POP"
    },
    "7247": {
      "op": "POP"
    },
    "7248": {
      "op": "POP"
    },
    "7249": {
      "op": "POP"
    },
    "7250": {
      "op": "POP"
    },
    "7251": {
      "op": "POP"
    },
    "7252": {
      "jump": "o",
      "op": "JUMP"
    },
    "7253": {
      "op": "JUMPDEST"
    },
    "7254": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7256": {
      "op": "DUP1"
    },
    "7257": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7259": {
      "op": "DUP1"
    },
    "7260": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7262": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7264": {
      "op": "DUP7"
    },
    "7265": {
      "op": "DUP9"
    },
    "7266": {
      "op": "SUB"
    },
    "7267": {
      "op": "SLT"
    },
    "7268": {
      "op": "ISZERO"
    },
    "7269": {
      "op": "PUSH2",
      "value": "0x1C6D"
    },
    "7272": {
      "op": "JUMPI"
    },
    "7273": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7275": {
      "op": "DUP1"
    },
    "7276": {
      "op": "REVERT"
    },
    "7277": {
      "op": "JUMPDEST"
    },
    "7278": {
      "op": "DUP6"
    },
    "7279": {
      "op": "CALLDATALOAD"
    },
    "7280": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7282": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7284": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7286": {
      "op": "SHL"
    },
    "7287": {
      "op": "SUB"
    },
    "7288": {
      "op": "DUP1"
    },
    "7289": {
      "op": "DUP3"
    },
    "7290": {
      "op": "GT"
    },
    "7291": {
      "op": "ISZERO"
    },
    "7292": {
      "op": "PUSH2",
      "value": "0x1C84"
    },
    "7295": {
      "op": "JUMPI"
    },
    "7296": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7298": {
      "op": "DUP1"
    },
    "7299": {
      "op": "REVERT"
    },
    "7300": {
      "op": "JUMPDEST"
    },
    "7301": {
      "op": "DUP2"
    },
    "7302": {
      "op": "DUP9"
    },
    "7303": {
      "op": "ADD"
    },
    "7304": {
      "op": "SWAP2"
    },
    "7305": {
      "op": "POP"
    },
    "7306": {
      "op": "DUP9"
    },
    "7307": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7309": {
      "op": "DUP4"
    },
    "7310": {
      "op": "ADD"
    },
    "7311": {
      "op": "SLT"
    },
    "7312": {
      "op": "PUSH2",
      "value": "0x1C98"
    },
    "7315": {
      "op": "JUMPI"
    },
    "7316": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7318": {
      "op": "DUP1"
    },
    "7319": {
      "op": "REVERT"
    },
    "7320": {
      "op": "JUMPDEST"
    },
    "7321": {
      "op": "DUP2"
    },
    "7322": {
      "op": "CALLDATALOAD"
    },
    "7323": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7325": {
      "op": "DUP3"
    },
    "7326": {
      "op": "DUP3"
    },
    "7327": {
      "op": "GT"
    },
    "7328": {
      "op": "ISZERO"
    },
    "7329": {
      "op": "PUSH2",
      "value": "0x1CAC"
    },
    "7332": {
      "op": "JUMPI"
    },
    "7333": {
      "op": "PUSH2",
      "value": "0x1CAC"
    },
    "7336": {
      "op": "PUSH2",
      "value": "0x1563"
    },
    "7339": {
      "jump": "i",
      "op": "JUMP"
    },
    "7340": {
      "op": "JUMPDEST"
    },
    "7341": {
      "op": "DUP2"
    },
    "7342": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "7344": {
      "op": "SHL"
    },
    "7345": {
      "op": "PUSH2",
      "value": "0x1CBB"
    },
    "7348": {
      "op": "DUP3"
    },
    "7349": {
      "op": "DUP3"
    },
    "7350": {
      "op": "ADD"
    },
    "7351": {
      "op": "PUSH2",
      "value": "0x1579"
    },
    "7354": {
      "jump": "i",
      "op": "JUMP"
    },
    "7355": {
      "op": "JUMPDEST"
    },
    "7356": {
      "op": "SWAP3"
    },
    "7357": {
      "op": "DUP4"
    },
    "7358": {
      "op": "MSTORE"
    },
    "7359": {
      "op": "DUP5"
    },
    "7360": {
      "op": "DUP2"
    },
    "7361": {
      "op": "ADD"
    },
    "7362": {
      "op": "DUP3"
    },
    "7363": {
      "op": "ADD"
    },
    "7364": {
      "op": "SWAP3"
    },
    "7365": {
      "op": "DUP3"
    },
    "7366": {
      "op": "DUP2"
    },
    "7367": {
      "op": "ADD"
    },
    "7368": {
      "op": "SWAP1"
    },
    "7369": {
      "op": "DUP14"
    },
    "7370": {
      "op": "DUP6"
    },
    "7371": {
      "op": "GT"
    },
    "7372": {
      "op": "ISZERO"
    },
    "7373": {
      "op": "PUSH2",
      "value": "0x1CD5"
    },
    "7376": {
      "op": "JUMPI"
    },
    "7377": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7379": {
      "op": "DUP1"
    },
    "7380": {
      "op": "REVERT"
    },
    "7381": {
      "op": "JUMPDEST"
    },
    "7382": {
      "op": "SWAP6"
    },
    "7383": {
      "op": "DUP4"
    },
    "7384": {
      "op": "ADD"
    },
    "7385": {
      "op": "SWAP6"
    },
    "7386": {
      "op": "JUMPDEST"
    },
    "7387": {
      "op": "DUP5"
    },
    "7388": {
      "op": "DUP8"
    },
    "7389": {
      "op": "LT"
    },
    "7390": {
      "op": "ISZERO"
    },
    "7391": {
      "op": "PUSH2",
      "value": "0x1CF3"
    },
    "7394": {
      "op": "JUMPI"
    },
    "7395": {
      "op": "DUP7"
    },
    "7396": {
      "op": "CALLDATALOAD"
    },
    "7397": {
      "op": "DUP3"
    },
    "7398": {
      "op": "MSTORE"
    },
    "7399": {
      "op": "SWAP6"
    },
    "7400": {
      "op": "DUP4"
    },
    "7401": {
      "op": "ADD"
    },
    "7402": {
      "op": "SWAP6"
    },
    "7403": {
      "op": "SWAP1"
    },
    "7404": {
      "op": "DUP4"
    },
    "7405": {
      "op": "ADD"
    },
    "7406": {
      "op": "SWAP1"
    },
    "7407": {
      "op": "PUSH2",
      "value": "0x1CDA"
    },
    "7410": {
      "op": "JUMP"
    },
    "7411": {
      "op": "JUMPDEST"
    },
    "7412": {
      "op": "SWAP11"
    },
    "7413": {
      "op": "POP"
    },
    "7414": {
      "op": "PUSH2",
      "value": "0x1D03"
    },
    "7417": {
      "op": "SWAP2"
    },
    "7418": {
      "op": "POP"
    },
    "7419": {
      "op": "POP"
    },
    "7420": {
      "op": "DUP11"
    },
    "7421": {
      "op": "DUP3"
    },
    "7422": {
      "op": "ADD"
    },
    "7423": {
      "op": "PUSH2",
      "value": "0x16EF"
    },
    "7426": {
      "jump": "i",
      "op": "JUMP"
    },
    "7427": {
      "op": "JUMPDEST"
    },
    "7428": {
      "op": "SWAP8"
    },
    "7429": {
      "op": "POP"
    },
    "7430": {
      "op": "POP"
    },
    "7431": {
      "op": "POP"
    },
    "7432": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7434": {
      "op": "DUP9"
    },
    "7435": {
      "op": "ADD"
    },
    "7436": {
      "op": "CALLDATALOAD"
    },
    "7437": {
      "op": "SWAP2"
    },
    "7438": {
      "op": "POP"
    },
    "7439": {
      "op": "DUP1"
    },
    "7440": {
      "op": "DUP3"
    },
    "7441": {
      "op": "GT"
    },
    "7442": {
      "op": "ISZERO"
    },
    "7443": {
      "op": "PUSH2",
      "value": "0x1D1B"
    },
    "7446": {
      "op": "JUMPI"
    },
    "7447": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7449": {
      "op": "DUP1"
    },
    "7450": {
      "op": "REVERT"
    },
    "7451": {
      "op": "JUMPDEST"
    },
    "7452": {
      "op": "PUSH2",
      "value": "0x1D27"
    },
    "7455": {
      "op": "DUP10"
    },
    "7456": {
      "op": "DUP4"
    },
    "7457": {
      "op": "DUP11"
    },
    "7458": {
      "op": "ADD"
    },
    "7459": {
      "op": "PUSH2",
      "value": "0x15D0"
    },
    "7462": {
      "jump": "i",
      "op": "JUMP"
    },
    "7463": {
      "op": "JUMPDEST"
    },
    "7464": {
      "op": "SWAP5"
    },
    "7465": {
      "op": "POP"
    },
    "7466": {
      "op": "PUSH2",
      "value": "0x1D35"
    },
    "7469": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7471": {
      "op": "DUP10"
    },
    "7472": {
      "op": "ADD"
    },
    "7473": {
      "op": "PUSH2",
      "value": "0x163E"
    },
    "7476": {
      "jump": "i",
      "op": "JUMP"
    },
    "7477": {
      "op": "JUMPDEST"
    },
    "7478": {
      "op": "SWAP4"
    },
    "7479": {
      "op": "POP"
    },
    "7480": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7482": {
      "op": "DUP9"
    },
    "7483": {
      "op": "ADD"
    },
    "7484": {
      "op": "CALLDATALOAD"
    },
    "7485": {
      "op": "SWAP2"
    },
    "7486": {
      "op": "POP"
    },
    "7487": {
      "op": "DUP1"
    },
    "7488": {
      "op": "DUP3"
    },
    "7489": {
      "op": "GT"
    },
    "7490": {
      "op": "ISZERO"
    },
    "7491": {
      "op": "PUSH2",
      "value": "0x1A7F"
    },
    "7494": {
      "op": "JUMPI"
    },
    "7495": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7497": {
      "op": "DUP1"
    },
    "7498": {
      "op": "REVERT"
    },
    "7499": {
      "op": "JUMPDEST"
    },
    "7500": {
      "op": "PUSH32",
      "value": "0x454950373132446F6D61696E28737472696E67206E616D652C737472696E6720"
    },
    "7533": {
      "op": "DUP2"
    },
    "7534": {
      "op": "MSTORE"
    },
    "7535": {
      "op": "PUSH32",
      "value": "0x76657273696F6E2C75696E7432353620636861696E49642C6164647265737320"
    },
    "7568": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7570": {
      "op": "DUP3"
    },
    "7571": {
      "op": "ADD"
    },
    "7572": {
      "op": "MSTORE"
    },
    "7573": {
      "op": "PUSH18",
      "value": "0x766572696679696E67436F6E747261637429"
    },
    "7592": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "7594": {
      "op": "SHL"
    },
    "7595": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7597": {
      "op": "DUP3"
    },
    "7598": {
      "op": "ADD"
    },
    "7599": {
      "op": "MSTORE"
    },
    "7600": {
      "op": "PUSH1",
      "value": "0x52"
    },
    "7602": {
      "op": "ADD"
    },
    "7603": {
      "op": "SWAP1"
    },
    "7604": {
      "jump": "o",
      "op": "JUMP"
    },
    "7605": {
      "op": "JUMPDEST"
    },
    "7606": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7608": {
      "op": "DUP3"
    },
    "7609": {
      "op": "MLOAD"
    },
    "7610": {
      "op": "PUSH2",
      "value": "0x1DC7"
    },
    "7613": {
      "op": "DUP2"
    },
    "7614": {
      "op": "DUP5"
    },
    "7615": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7617": {
      "op": "DUP8"
    },
    "7618": {
      "op": "ADD"
    },
    "7619": {
      "op": "PUSH2",
      "value": "0x1B70"
    },
    "7622": {
      "jump": "i",
      "op": "JUMP"
    },
    "7623": {
      "op": "JUMPDEST"
    },
    "7624": {
      "op": "SWAP2"
    },
    "7625": {
      "op": "SWAP1"
    },
    "7626": {
      "op": "SWAP2"
    },
    "7627": {
      "op": "ADD"
    },
    "7628": {
      "op": "SWAP3"
    },
    "7629": {
      "op": "SWAP2"
    },
    "7630": {
      "op": "POP"
    },
    "7631": {
      "op": "POP"
    },
    "7632": {
      "jump": "o",
      "op": "JUMP"
    },
    "7633": {
      "op": "JUMPDEST"
    },
    "7634": {
      "op": "SWAP5"
    },
    "7635": {
      "op": "DUP6"
    },
    "7636": {
      "op": "MSTORE"
    },
    "7637": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7639": {
      "op": "DUP6"
    },
    "7640": {
      "op": "ADD"
    },
    "7641": {
      "op": "SWAP4"
    },
    "7642": {
      "op": "SWAP1"
    },
    "7643": {
      "op": "SWAP4"
    },
    "7644": {
      "op": "MSTORE"
    },
    "7645": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7647": {
      "op": "DUP5"
    },
    "7648": {
      "op": "ADD"
    },
    "7649": {
      "op": "SWAP2"
    },
    "7650": {
      "op": "SWAP1"
    },
    "7651": {
      "op": "SWAP2"
    },
    "7652": {
      "op": "MSTORE"
    },
    "7653": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7655": {
      "op": "DUP4"
    },
    "7656": {
      "op": "ADD"
    },
    "7657": {
      "op": "MSTORE"
    },
    "7658": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7660": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7662": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7664": {
      "op": "SHL"
    },
    "7665": {
      "op": "SUB"
    },
    "7666": {
      "op": "AND"
    },
    "7667": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7669": {
      "op": "DUP3"
    },
    "7670": {
      "op": "ADD"
    },
    "7671": {
      "op": "MSTORE"
    },
    "7672": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7674": {
      "op": "ADD"
    },
    "7675": {
      "op": "SWAP1"
    },
    "7676": {
      "jump": "o",
      "op": "JUMP"
    },
    "7677": {
      "op": "JUMPDEST"
    },
    "7678": {
      "op": "PUSH2",
      "value": "0x1901"
    },
    "7681": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "7683": {
      "op": "SHL"
    },
    "7684": {
      "op": "DUP2"
    },
    "7685": {
      "op": "MSTORE"
    },
    "7686": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "7688": {
      "op": "DUP2"
    },
    "7689": {
      "op": "ADD"
    },
    "7690": {
      "op": "SWAP3"
    },
    "7691": {
      "op": "SWAP1"
    },
    "7692": {
      "op": "SWAP3"
    },
    "7693": {
      "op": "MSTORE"
    },
    "7694": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "7696": {
      "op": "DUP3"
    },
    "7697": {
      "op": "ADD"
    },
    "7698": {
      "op": "MSTORE"
    },
    "7699": {
      "op": "PUSH1",
      "value": "0x42"
    },
    "7701": {
      "op": "ADD"
    },
    "7702": {
      "op": "SWAP1"
    },
    "7703": {
      "jump": "o",
      "op": "JUMP"
    },
    "7704": {
      "op": "JUMPDEST"
    },
    "7705": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7707": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7709": {
      "op": "DUP3"
    },
    "7710": {
      "op": "DUP5"
    },
    "7711": {
      "op": "SUB"
    },
    "7712": {
      "op": "SLT"
    },
    "7713": {
      "op": "ISZERO"
    },
    "7714": {
      "op": "PUSH2",
      "value": "0x1E2A"
    },
    "7717": {
      "op": "JUMPI"
    },
    "7718": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7720": {
      "op": "DUP1"
    },
    "7721": {
      "op": "REVERT"
    },
    "7722": {
      "op": "JUMPDEST"
    },
    "7723": {
      "op": "POP"
    },
    "7724": {
      "op": "MLOAD"
    },
    "7725": {
      "op": "SWAP2"
    },
    "7726": {
      "op": "SWAP1"
    },
    "7727": {
      "op": "POP"
    },
    "7728": {
      "jump": "o",
      "op": "JUMP"
    },
    "7729": {
      "op": "JUMPDEST"
    },
    "7730": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7732": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7734": {
      "op": "DUP3"
    },
    "7735": {
      "op": "DUP5"
    },
    "7736": {
      "op": "SUB"
    },
    "7737": {
      "op": "SLT"
    },
    "7738": {
      "op": "ISZERO"
    },
    "7739": {
      "op": "PUSH2",
      "value": "0x1E43"
    },
    "7742": {
      "op": "JUMPI"
    },
    "7743": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7745": {
      "op": "DUP1"
    },
    "7746": {
      "op": "REVERT"
    },
    "7747": {
      "op": "JUMPDEST"
    },
    "7748": {
      "op": "DUP2"
    },
    "7749": {
      "op": "MLOAD"
    },
    "7750": {
      "op": "PUSH2",
      "value": "0x1B69"
    },
    "7753": {
      "op": "DUP2"
    },
    "7754": {
      "op": "PUSH2",
      "value": "0x1626"
    },
    "7757": {
      "jump": "i",
      "op": "JUMP"
    },
    "7758": {
      "op": "JUMPDEST"
    },
    "7759": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7761": {
      "op": "DUP1"
    },
    "7762": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7764": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7766": {
      "op": "DUP5"
    },
    "7767": {
      "op": "DUP7"
    },
    "7768": {
      "op": "SUB"
    },
    "7769": {
      "op": "SLT"
    },
    "7770": {
      "op": "ISZERO"
    },
    "7771": {
      "op": "PUSH2",
      "value": "0x1E63"
    },
    "7774": {
      "op": "JUMPI"
    },
    "7775": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7777": {
      "op": "DUP1"
    },
    "7778": {
      "op": "REVERT"
    },
    "7779": {
      "op": "JUMPDEST"
    },
    "7780": {
      "op": "DUP4"
    },
    "7781": {
      "op": "MLOAD"
    },
    "7782": {
      "op": "SWAP3"
    },
    "7783": {
      "op": "POP"
    },
    "7784": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7786": {
      "op": "DUP5"
    },
    "7787": {
      "op": "ADD"
    },
    "7788": {
      "op": "MLOAD"
    },
    "7789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7793": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7795": {
      "op": "SHL"
    },
    "7796": {
      "op": "SUB"
    },
    "7797": {
      "op": "DUP2"
    },
    "7798": {
      "op": "GT"
    },
    "7799": {
      "op": "ISZERO"
    },
    "7800": {
      "op": "PUSH2",
      "value": "0x1E80"
    },
    "7803": {
      "op": "JUMPI"
    },
    "7804": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7806": {
      "op": "DUP1"
    },
    "7807": {
      "op": "REVERT"
    },
    "7808": {
      "op": "JUMPDEST"
    },
    "7809": {
      "op": "DUP5"
    },
    "7810": {
      "op": "ADD"
    },
    "7811": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7813": {
      "op": "DUP2"
    },
    "7814": {
      "op": "ADD"
    },
    "7815": {
      "op": "DUP7"
    },
    "7816": {
      "op": "SGT"
    },
    "7817": {
      "op": "PUSH2",
      "value": "0x1E91"
    },
    "7820": {
      "op": "JUMPI"
    },
    "7821": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7823": {
      "op": "DUP1"
    },
    "7824": {
      "op": "REVERT"
    },
    "7825": {
      "op": "JUMPDEST"
    },
    "7826": {
      "op": "DUP1"
    },
    "7827": {
      "op": "MLOAD"
    },
    "7828": {
      "op": "PUSH2",
      "value": "0x1E9F"
    },
    "7831": {
      "op": "PUSH2",
      "value": "0x15EF"
    },
    "7834": {
      "op": "DUP3"
    },
    "7835": {
      "op": "PUSH2",
      "value": "0x15A9"
    },
    "7838": {
      "jump": "i",
      "op": "JUMP"
    },
    "7839": {
      "op": "JUMPDEST"
    },
    "7840": {
      "op": "DUP2"
    },
    "7841": {
      "op": "DUP2"
    },
    "7842": {
      "op": "MSTORE"
    },
    "7843": {
      "op": "DUP8"
    },
    "7844": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7846": {
      "op": "DUP4"
    },
    "7847": {
      "op": "DUP6"
    },
    "7848": {
      "op": "ADD"
    },
    "7849": {
      "op": "ADD"
    },
    "7850": {
      "op": "GT"
    },
    "7851": {
      "op": "ISZERO"
    },
    "7852": {
      "op": "PUSH2",
      "value": "0x1EB4"
    },
    "7855": {
      "op": "JUMPI"
    },
    "7856": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7858": {
      "op": "DUP1"
    },
    "7859": {
      "op": "REVERT"
    },
    "7860": {
      "op": "JUMPDEST"
    },
    "7861": {
      "op": "PUSH2",
      "value": "0x1EC5"
    },
    "7864": {
      "op": "DUP3"
    },
    "7865": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7867": {
      "op": "DUP4"
    },
    "7868": {
      "op": "ADD"
    },
    "7869": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7871": {
      "op": "DUP7"
    },
    "7872": {
      "op": "ADD"
    },
    "7873": {
      "op": "PUSH2",
      "value": "0x1B70"
    },
    "7876": {
      "jump": "i",
      "op": "JUMP"
    },
    "7877": {
      "op": "JUMPDEST"
    },
    "7878": {
      "op": "DUP1"
    },
    "7879": {
      "op": "SWAP5"
    },
    "7880": {
      "op": "POP"
    },
    "7881": {
      "op": "POP"
    },
    "7882": {
      "op": "POP"
    },
    "7883": {
      "op": "POP"
    },
    "7884": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7886": {
      "op": "DUP5"
    },
    "7887": {
      "op": "ADD"
    },
    "7888": {
      "op": "MLOAD"
    },
    "7889": {
      "op": "PUSH2",
      "value": "0x1ED9"
    },
    "7892": {
      "op": "DUP2"
    },
    "7893": {
      "op": "PUSH2",
      "value": "0x16E1"
    },
    "7896": {
      "jump": "i",
      "op": "JUMP"
    },
    "7897": {
      "op": "JUMPDEST"
    },
    "7898": {
      "op": "DUP1"
    },
    "7899": {
      "op": "SWAP2"
    },
    "7900": {
      "op": "POP"
    },
    "7901": {
      "op": "POP"
    },
    "7902": {
      "op": "SWAP3"
    },
    "7903": {
      "op": "POP"
    },
    "7904": {
      "op": "SWAP3"
    },
    "7905": {
      "op": "POP"
    },
    "7906": {
      "op": "SWAP3"
    },
    "7907": {
      "jump": "o",
      "op": "JUMP"
    },
    "7908": {
      "op": "JUMPDEST"
    },
    "7909": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7914": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7916": {
      "op": "SHL"
    },
    "7917": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7919": {
      "op": "MSTORE"
    },
    "7920": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "7922": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7924": {
      "op": "MSTORE"
    },
    "7925": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7927": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7929": {
      "op": "REVERT"
    },
    "7930": {
      "op": "JUMPDEST"
    },
    "7931": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7933": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7935": {
      "op": "NOT"
    },
    "7936": {
      "op": "DUP3"
    },
    "7937": {
      "op": "EQ"
    },
    "7938": {
      "op": "ISZERO"
    },
    "7939": {
      "op": "PUSH2",
      "value": "0x1F1C"
    },
    "7942": {
      "op": "JUMPI"
    },
    "7943": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7948": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7950": {
      "op": "SHL"
    },
    "7951": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7953": {
      "op": "MSTORE"
    },
    "7954": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "7956": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7958": {
      "op": "MSTORE"
    },
    "7959": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7961": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7963": {
      "op": "REVERT"
    },
    "7964": {
      "op": "JUMPDEST"
    },
    "7965": {
      "op": "POP"
    },
    "7966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7968": {
      "op": "ADD"
    },
    "7969": {
      "op": "SWAP1"
    },
    "7970": {
      "jump": "o",
      "op": "JUMP"
    },
    "7971": {
      "op": "JUMPDEST"
    },
    "7972": {
      "op": "DUP2"
    },
    "7973": {
      "op": "MLOAD"
    },
    "7974": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7976": {
      "op": "SWAP1"
    },
    "7977": {
      "op": "DUP3"
    },
    "7978": {
      "op": "SWAP1"
    },
    "7979": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7981": {
      "op": "DUP1"
    },
    "7982": {
      "op": "DUP7"
    },
    "7983": {
      "op": "ADD"
    },
    "7984": {
      "op": "DUP5"
    },
    "7985": {
      "op": "JUMPDEST"
    },
    "7986": {
      "op": "DUP4"
    },
    "7987": {
      "op": "DUP2"
    },
    "7988": {
      "op": "LT"
    },
    "7989": {
      "op": "ISZERO"
    },
    "7990": {
      "op": "PUSH2",
      "value": "0x1F4D"
    },
    "7993": {
      "op": "JUMPI"
    },
    "7994": {
      "op": "DUP2"
    },
    "7995": {
      "op": "MLOAD"
    },
    "7996": {
      "op": "DUP6"
    },
    "7997": {
      "op": "MSTORE"
    },
    "7998": {
      "op": "SWAP4"
    },
    "7999": {
      "op": "DUP3"
    },
    "8000": {
      "op": "ADD"
    },
    "8001": {
      "op": "SWAP4"
    },
    "8002": {
      "op": "SWAP1"
    },
    "8003": {
      "op": "DUP3"
    },
    "8004": {
      "op": "ADD"
    },
    "8005": {
      "op": "SWAP1"
    },
    "8006": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8008": {
      "op": "ADD"
    },
    "8009": {
      "op": "PUSH2",
      "value": "0x1F31"
    },
    "8012": {
      "op": "JUMP"
    },
    "8013": {
      "op": "JUMPDEST"
    },
    "8014": {
      "op": "POP"
    },
    "8015": {
      "op": "SWAP3"
    },
    "8016": {
      "op": "SWAP7"
    },
    "8017": {
      "op": "SWAP6"
    },
    "8018": {
      "op": "POP"
    },
    "8019": {
      "op": "POP"
    },
    "8020": {
      "op": "POP"
    },
    "8021": {
      "op": "POP"
    },
    "8022": {
      "op": "POP"
    },
    "8023": {
      "op": "POP"
    },
    "8024": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "ba9a1e9c1c15e2f61fa6a9d0e0daf11a94c687d4",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.11;\n\nimport \"../../interfaces/ICLHouse.sol\";\n\n/// @title Some view funtions to interact with a CLHouse\n/// @author Leonardo Urrego\ncontract CLHouseApi {\n\n    /// @notice A funtion to verify the signer of a menssage\n    /// @param _msghash Hash of the message\n    /// @param _signature Signature of the message\n    /// @return Signer address of the message\n    function SignerOfMsg(\n        bytes32  _msghash,\n        bytes memory _signature\n    )\n        public\n        pure\n        returns( address )\n    {\n        require( _signature.length == 65, \"Bad signature length\" );\n\n        bytes32 signR;\n        bytes32 signS;\n        uint8 signV;\n\n        assembly {\n            // first 32 bytes, after the length prefix\n            signR := mload( add( _signature, 32 ) )\n            // second 32 bytes\n            signS := mload( add( _signature, 64 ) )\n            // final byte (first byte of the next 32 bytes)\n            signV := byte( 0, mload( add( _signature, 96 ) ) )\n        }\n\n        return ecrecover( _msghash, signV, signR, signS );\n    }\n\n\n    struct strInfoUser {\n        address wallet;\n        uint256 userID;\n        string nickname;\n        bool isManager;\n    }\n\n    /// @notice The list of all users address\n    /// @param _houseAddr address of the CLH\n    /// @return arrUsers array of user address\n    function GetHouseUserList(\n        address _houseAddr\n    )\n        external\n        view\n        returns(\n            strInfoUser[] memory arrUsers\n        )\n    {\n        ICLHouse daoCLH = ICLHouse( _houseAddr );\n\n        uint256 numUsers = daoCLH.numUsers( );\n        uint256 arrUsersLength = daoCLH.GetArrUsersLength();\n        arrUsers = new strInfoUser[] ( numUsers );\n\n        uint256 index = 0 ;\n\n        for( uint256 uid = 1 ; uid < arrUsersLength ; uid++ ) {\n            strInfoUser memory houseUser;\n\n            houseUser.wallet = daoCLH.arrUsers( uid );\n\n            (   houseUser.userID,\n                houseUser.nickname,\n                houseUser.isManager ) = daoCLH.mapUsers( houseUser.wallet );\n\n            if( 0 != houseUser.userID ){\n                arrUsers[ index ] = houseUser;\n                index++;\n            }\n        }\n    }\n\n\n    /// @notice Retrieve the signer from Offchain Invitation signature\n    /// @param _acceptance True for accept the invitation\n    /// @param _nickname A nickname for the user\n    /// @param _houseAddr address of the CLH\n    /// @param _signature EIP712 Signature\n    /// @return Wallet address of the signer\n    function SignerOCInvit(\n        bool _acceptance,\n        string memory _nickname,\n        address _houseAddr,\n        bytes memory _signature\n    ) \n        external view\n        returns( address )\n    {\n        bytes32 hashEIP712Domain = keccak256(\n            abi.encode(\n                __STR_EIP712DOMAIN_HASH__,\n                __CONTRACT_NAME_HASH__,\n                __CONTRACT_VERSION_HASH__,\n                block.chainid,\n                _houseAddr\n            )\n        );\n\n        bytes32 hashMsg = keccak256(\n            abi.encode(\n                __STR_OCINVIT_HASH__,\n                _acceptance,\n                keccak256( abi.encodePacked( _nickname ) )\n            )\n        );\n\n        bytes32 singhash = keccak256( abi.encodePacked( \"\\x19\\x01\", hashEIP712Domain, hashMsg ) );\n\n        return SignerOfMsg( singhash, _signature );\n    }\n\n\n    /// @notice Retrieve the signer from Offchain Vote signature\n    /// @param _propId ID of the proposal, based on `arrProposals`\n    /// @param _support True for accept, false to reject\n    /// @param _justification About your vote\n    /// @param _houseAddr address of the CLH\n    /// @param _signature EIP712 Signature\n    /// @return Wallet address of the signer\n    function SignerOCVote(\n        uint _propId,\n        bool _support,\n        string memory _justification,\n        address _houseAddr,\n        bytes memory _signature\n    ) \n        external view\n        returns( address )\n    {\n        bytes32 hashEIP712Domain = keccak256(\n            abi.encode(\n                __STR_EIP712DOMAIN_HASH__,\n                __CONTRACT_NAME_HASH__,\n                __CONTRACT_VERSION_HASH__,\n                block.chainid,\n                _houseAddr\n            )\n        );\n\n        bytes32 hashMsg = keccak256(\n            abi.encode(\n                __STR_OCVOTE_HASH__,\n                _propId,\n                _support,\n                keccak256( abi.encodePacked( _justification ) )\n            )\n        );\n\n        bytes32 singhash = keccak256( abi.encodePacked( \"\\x19\\x01\", hashEIP712Domain, hashMsg ) );\n\n        return SignerOfMsg( singhash, _signature );\n    }\n\n\n    /// @notice Retrieve the signer from Offchain BulkVote signature\n    /// @param _propIds Array with ID of the proposal to votes\n    /// @param _support is the Vote (True or False) for all proposals\n    /// @param _justification Description of the vote\n    /// @param _houseAddr address of the CLH\n    /// @param _signature EIP712 Signature\n    /// @return Wallet address of the signer\n    function SignerOCBulkVote(\n        uint256[] memory _propIds,\n        bool _support,\n        string memory _justification,\n        address _houseAddr,\n        bytes memory _signature\n    ) \n        external view\n        returns( address )\n    {\n        bytes32 hashEIP712Domain = keccak256(\n            abi.encode(\n                __STR_EIP712DOMAIN_HASH__,\n                __CONTRACT_NAME_HASH__,\n                __CONTRACT_VERSION_HASH__,\n                block.chainid,\n                _houseAddr\n            )\n        );\n\n        bytes32 hashMsg = keccak256(\n            abi.encode(\n                __STR_OCBULKVOTE_HASH__,\n                keccak256( abi.encodePacked( _propIds ) ),\n                _support,\n                keccak256( abi.encodePacked( _justification ) )\n            )\n        );\n\n        bytes32 singhash = keccak256( abi.encodePacked( \"\\x19\\x01\", hashEIP712Domain, hashMsg ) );\n\n        return SignerOfMsg( singhash, _signature );\n    }\n\n\n    /// @notice Retrieve the signer from Offchain Invite User signature\n    /// @param _walletAddr  Address of the new user\n    /// @param _name Can be the nickname or other reference to the User\n    /// @param _description A text for the proposal\n    /// @param _isManager True if is for a manager\n    /// @param _houseAddr address of the CLH\n    /// @param _signature EIP712 Signature\n    /// @return Wallet address of the signer\n    function SignerOCInvitUser(\n        address _walletAddr,\n        string memory _name,\n        string memory _description,\n        bool _isManager,\n        uint256 _delayTime,\n        address _houseAddr,\n        bytes memory _signature\n    ) \n        external view\n        returns( address )\n    {\n        bytes32 hashEIP712Domain = keccak256(\n            abi.encode(\n                __STR_EIP712DOMAIN_HASH__,\n                __CONTRACT_NAME_HASH__,\n                __CONTRACT_VERSION_HASH__,\n                block.chainid,\n                _houseAddr\n            )\n        );\n\n        bytes32 hashMsg = keccak256(\n            abi.encode(\n                __STR_OCNEWUSER_HASH__,\n                _walletAddr,\n                keccak256( abi.encodePacked( _name ) ),\n                keccak256( abi.encodePacked( _description ) ),\n                _isManager,\n                _delayTime\n            )\n        );\n\n        bytes32 singhash = keccak256( abi.encodePacked( \"\\x19\\x01\", hashEIP712Domain, hashMsg ) );\n\n        return SignerOfMsg( singhash, _signature );\n    }\n\n\n    /// @notice Retrieve the signer from Offchain Remove User signature\n    /// @param _walletAddr user Address to be removed\n    /// @param _description About the proposal\n    /// @param _houseAddr address of the CLH\n    /// @param _signature EIP712 Signature\n    /// @return Wallet address of the signer\n    function SignerOCRemoveUser(\n        address _walletAddr,\n        string memory _description,\n        uint256 _delayTime,\n        address _houseAddr,\n        bytes memory _signature\n    ) \n        external view\n        returns( address )\n    {\n        bytes32 hashEIP712Domain = keccak256(\n            abi.encode(\n                __STR_EIP712DOMAIN_HASH__,\n                __CONTRACT_NAME_HASH__,\n                __CONTRACT_VERSION_HASH__,\n                block.chainid,\n                _houseAddr\n            )\n        );\n\n        bytes32 hashMsg = keccak256(\n            abi.encode(\n                __STR_OCDELUSER_HASH__,\n                _walletAddr,\n                keccak256( abi.encodePacked( _description ) ),\n                _delayTime\n            )\n        );\n\n        bytes32 singhash = keccak256( abi.encodePacked( \"\\x19\\x01\", hashEIP712Domain, hashMsg ) );\n\n        return SignerOfMsg( singhash, _signature );\n    }\n\n\n    /// @notice Retrieve the signer from Offchain request to join signature\n    /// @param _name Nickname or other user identification\n    /// @param _description About the request\n    /// @param _houseAddr address of the CLH\n    /// @param _signature EIP712 Signature\n    /// @return Wallet address of the signer\n    function SignerOCRequestToJoin(\n        string memory _name,\n        string memory _description,\n        address _houseAddr,\n        bytes memory _signature\n    ) \n        external view\n        returns( address )\n    {\n        bytes32 hashEIP712Domain = keccak256(\n            abi.encode(\n                __STR_EIP712DOMAIN_HASH__,\n                __CONTRACT_NAME_HASH__,\n                __CONTRACT_VERSION_HASH__,\n                block.chainid,\n                _houseAddr\n            )\n        );\n\n        bytes32 hashMsg = keccak256(\n            abi.encode(\n                __STR_OCREQUEST_HASH__,\n                keccak256( abi.encodePacked( _name ) ),\n                keccak256( abi.encodePacked( _description ) )\n            )\n        );\n\n        bytes32 singhash = keccak256( abi.encodePacked( \"\\x19\\x01\", hashEIP712Domain, hashMsg ) );\n\n        return SignerOfMsg( singhash, _signature );\n    }\n\n\n    /// @notice Retrieve the signer from Offchain New house signature\n    /// @param _houseName Name of the CLH\n    /// @param _housePrivate If is set to 1, the CLH is set to private\n    /// @param _houseOpen If is set to 1, the CLH is set to open\n    /// @param _govRuleMaxUsers Max users in the house\n    /// @param _whiteListNFT Address of NFT Collection for users invitation\n    /// @param _pxyCLF address of the CLF\n    /// @param _signature EIP712 Signature\n    /// @return Wallet address of the signer\n    function SignerOCNewCLH(\n        string memory _houseName,\n        bool _housePrivate,\n        bool _houseOpen,\n        uint256 _govRuleMaxUsers,\n        address _whiteListNFT,\n        address _pxyCLF,\n        bytes memory _signature\n    ) \n        external view\n        returns( address )\n    {\n        bytes32 hashEIP712Domain = keccak256(\n            abi.encode(\n                __STR_EIP712DOMAIN_HASH__,\n                __CONTRACT_NAME_HASH__,\n                __CONTRACT_VERSION_HASH__,\n                block.chainid,\n                _pxyCLF\n            )\n        );\n\n        bytes32 hashMsg = keccak256(\n            abi.encode(\n                __STR_OCNEWCLH_HASH__,\n                keccak256( abi.encodePacked( _houseName ) ),\n                _housePrivate,\n                _houseOpen,\n                _govRuleMaxUsers,\n                _whiteListNFT\n                // keccak256( abi.encodePacked( _whiteListWallets ) )\n            )\n        );\n\n        bytes32 singhash = keccak256( abi.encodePacked( \"\\x19\\x01\", hashEIP712Domain, hashMsg ) );\n\n        return SignerOfMsg( singhash, _signature );\n    }\n\n\n    /// @notice Retrieve the signer from Offchain New Lock signature\n    /// @param _expirationDuration Expiration for lcok in seconds\n    /// @param _keyPrice Price for each lock in wei\n    /// @param _maxNumberOfKeys How many locks\n    /// @param _lockName Lock Name\n    /// @param _houseAddr address of the CLH\n    /// @param _signature EIP712 Signature\n    /// @return Wallet address of the signer\n    function SignerOCNewLock(\n        uint256 _expirationDuration,\n        uint256 _keyPrice,\n        uint256 _maxNumberOfKeys,\n        string memory _lockName,\n        address _houseAddr,\n        bytes memory _signature\n    ) \n        external view\n        returns( address )\n    {\n        bytes32 hashEIP712Domain = keccak256(\n            abi.encode(\n                __STR_EIP712DOMAIN_HASH__,\n                __CONTRACT_NAME_HASH__,\n                __CONTRACT_VERSION_HASH__,\n                block.chainid,\n                _houseAddr\n            )\n        );\n\n        bytes32 hashMsg = keccak256(\n            abi.encode(\n                __STR_OCNEWLOCK_HASH__,\n                _expirationDuration,\n                _keyPrice,\n                _maxNumberOfKeys,\n                keccak256( abi.encodePacked( _lockName ) )\n            )\n        );\n\n        bytes32 singhash = keccak256( abi.encodePacked( \"\\x19\\x01\", hashEIP712Domain, hashMsg ) );\n\n        return SignerOfMsg( singhash, _signature );\n    }\n\n    /// @notice Retrieve the signer from Offchain Update CLH Name\n    /// @param _houseName new CLH Name\n    /// @param _houseAddr address of the CLH\n    /// @param _signature EIP712 Signature\n    /// @return Wallet address of the signer\n    function SignerOCUpCLHName(\n        string memory _houseName,\n        address _houseAddr,\n        bytes memory _signature\n    ) \n        external view\n        returns( address )\n    {\n        bytes32 hashEIP712Domain = keccak256(\n            abi.encode(\n                __STR_EIP712DOMAIN_HASH__,\n                __CONTRACT_NAME_HASH__,\n                __CONTRACT_VERSION_HASH__,\n                block.chainid,\n                _houseAddr\n            )\n        );\n\n        bytes32 hashMsg = keccak256(\n            abi.encode(\n                __STR_OCUPCLH_NAME_HASH__,\n                keccak256( abi.encodePacked( _houseName ) )\n            )\n        );\n\n        bytes32 singhash = keccak256( abi.encodePacked( \"\\x19\\x01\", hashEIP712Domain, hashMsg ) );\n\n        return SignerOfMsg( singhash, _signature );\n    }\n\n    /// @notice Retrieve the signer from Offchain Update CLH Whitelist NFT\n    /// @param _whiteListNFT New contract address of NFT\n    /// @param _houseAddr address of the CLH\n    /// @param _signature EIP712 Signature\n    /// @return Wallet address of the signer\n    function SignerOCUpCLHWLNFT(\n        address _whiteListNFT,\n        address _houseAddr,\n        bytes memory _signature\n    ) \n        external view\n        returns( address )\n    {\n        bytes32 hashEIP712Domain = keccak256(\n            abi.encode(\n                __STR_EIP712DOMAIN_HASH__,\n                __CONTRACT_NAME_HASH__,\n                __CONTRACT_VERSION_HASH__,\n                block.chainid,\n                _houseAddr\n            )\n        );\n\n        bytes32 hashMsg = keccak256(\n            abi.encode(\n                __STR_OCUPCLH_WLNFT_HASH__,\n                _whiteListNFT\n            )\n        );\n\n        bytes32 singhash = keccak256( abi.encodePacked( \"\\x19\\x01\", hashEIP712Domain, hashMsg ) );\n\n        return SignerOfMsg( singhash, _signature );\n    }\n}",
  "sourceMap": "184:14968:17:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/APICLH/CLHouseApi.sol",
  "type": "contract"
}