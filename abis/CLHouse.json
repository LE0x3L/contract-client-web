{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_houseName",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "_housePrivate",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "_govModel",
          "type": "bytes32"
        },
        {
          "internalType": "uint8[3]",
          "name": "_govRules",
          "type": "uint8[3]"
        },
        {
          "internalType": "address[5]",
          "name": "_CLC",
          "type": "address[5]"
        },
        {
          "internalType": "address[]",
          "name": "_ManagerWallets",
          "type": "address[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newApprovPercentage",
          "type": "uint256"
        }
      ],
      "name": "evtChangeGovRules",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum proposalEvent",
          "name": "eventProposal",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "propId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum proposalType",
          "name": "typeProposal",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "evtProposal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenOutCLV",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountOutCLV",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenInCLV",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountReceived",
          "type": "uint256"
        }
      ],
      "name": "evtSwapERC20",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "walletAddr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAdd",
          "type": "address"
        }
      ],
      "name": "evtTxERC20",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum assetsEvent",
          "name": "typeEvent",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "walletAddr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "evtTxEth",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum userEvent",
          "name": "eventUser",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "walletAddr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "evtUser",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "propId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "position",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "justification",
          "type": "string"
        }
      ],
      "name": "evtVoted",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_acceptance",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "AcceptRejectInvitation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CLHSAFE",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_propId",
          "type": "uint256"
        }
      ],
      "name": "ExecProp",
      "outputs": [
        {
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "message",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "GetArrDataPropAddUser",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "walletAddr",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "isManager",
              "type": "bool"
            }
          ],
          "internalType": "struct strDataAddUser[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "GetArrUsersLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "GetProposalList",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "proponent",
              "type": "address"
            },
            {
              "internalType": "enum proposalType",
              "name": "typeProposal",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "propDataId",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "numVotes",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "againstVotes",
              "type": "uint8"
            },
            {
              "internalType": "bool",
              "name": "executed",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "rejected",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "internalType": "struct strProposal[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "HOUSE_GOVERNANCE_MODEL",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "HOUSE_NAME",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenInCLV",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountOutCLV",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        }
      ],
      "name": "PropBuyERC20",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_newApprovPercentage",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        }
      ],
      "name": "PropGovRules",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "propId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_walletAddr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "_isManager",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "PropInviteUser",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "propId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_walletAddr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "PropRemoveUser",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "propId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "PropRequestToJoin",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenOutCLV",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountOutCLV",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        }
      ],
      "name": "PropSellERC20",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenOutCLV",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenInCLV",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountOutCLV",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        }
      ],
      "name": "PropSwapERC20",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountOutCLV",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_tokenOutCLV",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        }
      ],
      "name": "PropTxERC20",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "propId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountOutCLV",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        }
      ],
      "name": "PropTxWei",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "propId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_propId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_support",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "_justification",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "VoteProposal",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "arrDataPropAddUser",
      "outputs": [
        {
          "internalType": "address",
          "name": "walletAddr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "isManager",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "arrDataPropGovRules",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "newApprovPercentage",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "arrDataPropTxAssets",
      "outputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountOutCLV",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tokenOutCLV",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenInCLV",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "arrProposals",
      "outputs": [
        {
          "internalType": "address",
          "name": "proponent",
          "type": "address"
        },
        {
          "internalType": "enum proposalType",
          "name": "typeProposal",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "propDataId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "numVotes",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "againstVotes",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "rejected",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "arrUsers",
      "outputs": [
        {
          "internalType": "address",
          "name": "walletAddr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isUser",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isManager",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "govRuleApprovPercentage",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "govRuleMaxManagers",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "govRuleMaxUsers",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "housePrivate",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "mapIdUser",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "mapInvitationUser",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "mapVotes",
      "outputs": [
        {
          "internalType": "bool",
          "name": "voted",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "inSupport",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "justification",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nftAdmin",
      "outputs": [
        {
          "internalType": "contract CLHNFT",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nftInvitation",
      "outputs": [
        {
          "internalType": "contract CLHNFT",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nftMember",
      "outputs": [
        {
          "internalType": "contract CLHNFT",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numManagers",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numUsers",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultCLH",
      "outputs": [
        {
          "internalType": "contract CLVault",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "18": "contracts/CLHouse/CLHouse.sol",
    "23": "contracts/CLHouse/CLStorage.sol",
    "25": "contracts/CLHouse/ICLHouse.sol"
  },
  "ast": {
    "absolutePath": "contracts/CLHouse/CLHouse.sol",
    "exportedSymbols": {
      "Address": [
        7224
      ],
      "CLHNFT": [
        5180
      ],
      "CLHouse": [
        5068
      ],
      "CLHouseApi": [
        1080
      ],
      "CLStorage": [
        3739
      ],
      "CLVault": [
        4199
      ],
      "Context": [
        6768
      ],
      "Counters": [
        6732
      ],
      "DebugDLGTCLL": [
        4293
      ],
      "ERC165": [
        7451
      ],
      "ERC721": [
        6500
      ],
      "ERC721Burnable": [
        6530
      ],
      "ERC721URIStorage": [
        6658
      ],
      "ICLHouse": [
        4611
      ],
      "IERC165": [
        7463
      ],
      "IERC20": [
        5529
      ],
      "IERC721": [
        6884
      ],
      "IERC721Metadata": [
        6929
      ],
      "IERC721Receiver": [
        6902
      ],
      "ISwapRouter": [
        5280
      ],
      "IUniswapV3SwapCallback": [
        6746
      ],
      "InvalidGovernanceType": [
        4287
      ],
      "Ownable": [
        5634
      ],
      "Strings": [
        7427
      ],
      "TransferHelper": [
        5451
      ],
      "__CONTRACT_NAME_HASH__": [
        4222
      ],
      "__CONTRACT_VERSION_HASH__": [
        4227
      ],
      "__GOV_COMMITTEE__": [
        4212
      ],
      "__GOV_DICTATORSHIP__": [
        4207
      ],
      "__GOV_SIMPLE_MAJORITY__": [
        4217
      ],
      "__STR_EIP712DOMAIN_HASH__": [
        4235
      ],
      "__STR_OCDELUSER_HASH__": [
        4267
      ],
      "__STR_OCINVIT_HASH__": [
        4243
      ],
      "__STR_OCNEWCLH_HASH__": [
        4283
      ],
      "__STR_OCNEWUSER_HASH__": [
        4259
      ],
      "__STR_OCREQUEST_HASH__": [
        4275
      ],
      "__STR_OCVOTE_HASH__": [
        4251
      ],
      "assetsEvent": [
        4307
      ],
      "eCLC": [
        4331
      ],
      "gRule": [
        4325
      ],
      "proposalEvent": [
        4311
      ],
      "proposalType": [
        4321
      ],
      "strDataAddUser": [
        4376
      ],
      "strDataGovRules": [
        4388
      ],
      "strDataTxAssets": [
        4385
      ],
      "strProposal": [
        4362
      ],
      "strUser": [
        4342
      ],
      "strVote": [
        4369
      ],
      "userEvent": [
        4300
      ]
    },
    "id": 5069,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4613,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:18"
      },
      {
        "absolutePath": "contracts/CLHouse/CLStorage.sol",
        "file": "./CLStorage.sol",
        "id": 4614,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5069,
        "sourceUnit": 3740,
        "src": "58:25:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4616,
              "name": "CLStorage",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3739,
              "src": "274:9:18"
            },
            "id": 4617,
            "nodeType": "InheritanceSpecifier",
            "src": "274:9:18"
          }
        ],
        "canonicalName": "CLHouse",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 4615,
          "nodeType": "StructuredDocumentation",
          "src": "85:169:18",
          "text": "@title Contract to implement and test the basic fuctions of CLHouses\n @author Leonardo Urrego\n @notice This contract for test only the most basic interactions"
        },
        "fullyImplemented": true,
        "id": 5068,
        "linearizedBaseContracts": [
          5068,
          3739
        ],
        "name": "CLHouse",
        "nameLocation": "263:7:18",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 4668,
              "nodeType": "Block",
              "src": "1119:687:18",
              "statements": [
                {
                  "assignments": [
                    4641,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4641,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "1135:13:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 4668,
                      "src": "1130:18:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 4640,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1130:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 4662,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "5f5f434c48436f6e7374727563746f7228616464726573732c737472696e672c626f6f6c2c627974657333322c75696e74385b335d2c616464726573735b355d2c616464726573735b5d29",
                            "id": 4652,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1263:77:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9f221d81966e47150dab845114b2ad5856a09b12dc49157b027001588ee923c0",
                              "typeString": "literal_string \"__CLHConstructor(address,string,bool,bytes32,uint8[3],address[5],address[])\""
                            },
                            "value": "__CLHConstructor(address,string,bool,bytes32,uint8[3],address[5],address[])"
                          },
                          {
                            "id": 4653,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4620,
                            "src": "1358:6:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 4654,
                            "name": "_houseName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4622,
                            "src": "1383:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 4655,
                            "name": "_housePrivate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4624,
                            "src": "1411:13:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 4656,
                            "name": "_govModel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4626,
                            "src": "1442:9:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 4657,
                            "name": "_govRules",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4630,
                            "src": "1469:9:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint8_$3_memory_ptr",
                              "typeString": "uint8[3] memory"
                            }
                          },
                          {
                            "id": 4658,
                            "name": "_CLC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4634,
                            "src": "1496:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$5_memory_ptr",
                              "typeString": "address[5] memory"
                            }
                          },
                          {
                            "id": 4659,
                            "name": "_ManagerWallets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4637,
                            "src": "1518:15:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9f221d81966e47150dab845114b2ad5856a09b12dc49157b027001588ee923c0",
                              "typeString": "literal_string \"__CLHConstructor(address,string,bool,bytes32,uint8[3],address[5],address[])\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint8_$3_memory_ptr",
                              "typeString": "uint8[3] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_address_$5_memory_ptr",
                              "typeString": "address[5] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          ],
                          "expression": {
                            "id": 4650,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1222:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 4651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "1222:23:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 4660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1222:325:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 4642,
                          "name": "_CLC",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4634,
                          "src": "1154:4:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$5_memory_ptr",
                            "typeString": "address[5] memory"
                          }
                        },
                        "id": 4648,
                        "indexExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 4645,
                                "name": "eCLC",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4331,
                                "src": "1169:4:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_eCLC_$4331_$",
                                  "typeString": "type(enum eCLC)"
                                }
                              },
                              "id": 4646,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "CLLConstructorCLH",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4328,
                              "src": "1169:22:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_eCLC_$4331",
                                "typeString": "enum eCLC"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_eCLC_$4331",
                                "typeString": "enum eCLC"
                              }
                            ],
                            "id": 4644,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1160:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 4643,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1160:7:18",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4647,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1160:33:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1154:41:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 4649,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "1154:54:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 4661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1154:403:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1129:428:18"
                },
                {
                  "condition": {
                    "id": 4664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1572:14:18",
                    "subExpression": {
                      "id": 4663,
                      "name": "successDGTCLL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4641,
                      "src": "1573:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4667,
                  "nodeType": "IfStatement",
                  "src": "1568:232:18",
                  "trueBody": {
                    "id": 4666,
                    "nodeType": "Block",
                    "src": "1589:211:18",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "1612:178:18",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1630:22:18",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1647:4:18",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1641:5:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1641:11:18"
                              },
                              "variables": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulTypedName",
                                  "src": "1634:3:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1669:28:18",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "returndatasize",
                                  "nodeType": "YulIdentifier",
                                  "src": "1681:14:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1681:16:18"
                              },
                              "variables": [
                                {
                                  "name": "size",
                                  "nodeType": "YulTypedName",
                                  "src": "1673:4:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1729:3:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1734:1:18",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "1737:4:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "returndatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "1714:14:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1714:28:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1714:28:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1766:3:18"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "1771:4:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1759:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1759:17:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1759:17:18"
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [],
                        "id": 4665,
                        "nodeType": "InlineAssembly",
                        "src": "1603:187:18"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 4618,
              "nodeType": "StructuredDocumentation",
              "src": "291:578:18",
              "text": "@notice Create a new CLH\n @dev Some parameters can be ignored depending on the governance model\n @param _owner The address of the deployed wallet\n @param _houseName Name given by the owner\n @param _housePrivate If is set to 1, the CLH is set to private\n @param _govModel keccak256 hash of the governance model, see the __GOV_* constans\n @param _govRules Array for goverment rules see `enum gRule`\n @param _CLC Array for CL Contracts see `enum eCLC`\n @param _ManagerWallets Whitelist of address for invitate as managers"
            },
            "id": 4669,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4638,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4620,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "903:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 4669,
                  "src": "895:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4619,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "895:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4622,
                  "mutability": "mutable",
                  "name": "_houseName",
                  "nameLocation": "934:10:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 4669,
                  "src": "920:24:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4621,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "920:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4624,
                  "mutability": "mutable",
                  "name": "_housePrivate",
                  "nameLocation": "959:13:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 4669,
                  "src": "954:18:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4623,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "954:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4626,
                  "mutability": "mutable",
                  "name": "_govModel",
                  "nameLocation": "990:9:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 4669,
                  "src": "982:17:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4625,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "982:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4630,
                  "mutability": "mutable",
                  "name": "_govRules",
                  "nameLocation": "1025:9:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 4669,
                  "src": "1009:25:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint8_$3_memory_ptr",
                    "typeString": "uint8[3]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4627,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "1009:5:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 4629,
                    "length": {
                      "hexValue": "33",
                      "id": 4628,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1015:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1009:8:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint8_$3_storage_ptr",
                      "typeString": "uint8[3]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4634,
                  "mutability": "mutable",
                  "name": "_CLC",
                  "nameLocation": "1062:4:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 4669,
                  "src": "1044:22:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$5_memory_ptr",
                    "typeString": "address[5]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4631,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1044:7:18",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 4633,
                    "length": {
                      "hexValue": "35",
                      "id": 4632,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1052:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      },
                      "value": "5"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1044:10:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$5_storage_ptr",
                      "typeString": "address[5]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4637,
                  "mutability": "mutable",
                  "name": "_ManagerWallets",
                  "nameLocation": "1093:15:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 4669,
                  "src": "1076:32:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4635,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1076:7:18",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 4636,
                    "nodeType": "ArrayTypeName",
                    "src": "1076:9:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "885:229:18"
            },
            "returnParameters": {
              "id": 4639,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1119:0:18"
            },
            "scope": 5068,
            "src": "874:932:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4699,
              "nodeType": "Block",
              "src": "2315:489:18",
              "statements": [
                {
                  "assignments": [
                    4680,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4680,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "2331:13:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 4699,
                      "src": "2326:18:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 4679,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2326:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 4689,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4578656350726f702875696e7432353629",
                            "id": 4685,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2431:19:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_5f3d99b36eccea2d9a38fa911daeb9ce94a9ac486dd03f1648c38f62cafa2119",
                              "typeString": "literal_string \"ExecProp(uint256)\""
                            },
                            "value": "ExecProp(uint256)"
                          },
                          {
                            "id": 4686,
                            "name": "_propId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4672,
                            "src": "2468:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_5f3d99b36eccea2d9a38fa911daeb9ce94a9ac486dd03f1648c38f62cafa2119",
                              "typeString": "literal_string \"ExecProp(uint256)\""
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 4683,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2390:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 4684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "2390:23:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 4687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2390:99:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 4681,
                        "name": "CLLGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3620,
                        "src": "2350:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 4682,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "2350:26:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 4688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2350:149:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2325:174:18"
                },
                {
                  "condition": {
                    "id": 4691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2514:14:18",
                    "subExpression": {
                      "id": 4690,
                      "name": "successDGTCLL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4680,
                      "src": "2515:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4694,
                  "nodeType": "IfStatement",
                  "src": "2510:232:18",
                  "trueBody": {
                    "id": 4693,
                    "nodeType": "Block",
                    "src": "2531:211:18",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "2554:178:18",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2572:22:18",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2589:4:18",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2583:5:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2583:11:18"
                              },
                              "variables": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulTypedName",
                                  "src": "2576:3:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2611:28:18",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "returndatasize",
                                  "nodeType": "YulIdentifier",
                                  "src": "2623:14:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2623:16:18"
                              },
                              "variables": [
                                {
                                  "name": "size",
                                  "nodeType": "YulTypedName",
                                  "src": "2615:4:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "2671:3:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2676:1:18",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "2679:4:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "returndatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "2656:14:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2656:28:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2656:28:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "2708:3:18"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "2713:4:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "2701:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2701:17:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2701:17:18"
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [],
                        "id": 4692,
                        "nodeType": "InlineAssembly",
                        "src": "2545:187:18"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "74727565",
                        "id": 4695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2761:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "537563636573732065786563757465642070726f706f73616c",
                        "id": 4696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2768:27:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cc5063be902007aa4094c05d7977aa17bd625bcc90d4b58bc658ed91467f2f04",
                          "typeString": "literal_string \"Success executed proposal\""
                        },
                        "value": "Success executed proposal"
                      }
                    ],
                    "id": 4697,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2759:38:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_stringliteral_cc5063be902007aa4094c05d7977aa17bd625bcc90d4b58bc658ed91467f2f04_$",
                      "typeString": "tuple(bool,literal_string \"Success executed proposal\")"
                    }
                  },
                  "functionReturnParameters": 4678,
                  "id": 4698,
                  "nodeType": "Return",
                  "src": "2752:45:18"
                }
              ]
            },
            "documentation": {
              "id": 4670,
              "nodeType": "StructuredDocumentation",
              "src": "1812:344:18",
              "text": "@notice Execute (or reject) a proposal computing the votes and the governance model\n @dev Normally is called internally after each vote\n @param _propId ID of the proposal, based on `arrProposals`\n @return status True if the proposal can be execute, false in other cases\n @return message result of the transaction"
            },
            "functionSelector": "5f3d99b3",
            "id": 4700,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ExecProp",
            "nameLocation": "2170:8:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4673,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4672,
                  "mutability": "mutable",
                  "name": "_propId",
                  "nameLocation": "2196:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 4700,
                  "src": "2188:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4671,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2188:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2178:31:18"
            },
            "returnParameters": {
              "id": 4678,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4675,
                  "mutability": "mutable",
                  "name": "status",
                  "nameLocation": "2259:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 4700,
                  "src": "2254:11:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4674,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2254:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4677,
                  "mutability": "mutable",
                  "name": "message",
                  "nameLocation": "2293:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 4700,
                  "src": "2279:21:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4676,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2279:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2240:70:18"
            },
            "scope": 5068,
            "src": "2161:643:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4735,
              "nodeType": "Block",
              "src": "3327:564:18",
              "statements": [
                {
                  "assignments": [
                    4715,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4715,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "3343:13:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 4735,
                      "src": "3338:18:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 4714,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3338:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 4727,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "566f746550726f706f73616c2875696e743235362c626f6f6c2c737472696e672c627974657329",
                            "id": 4720,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3444:41:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c2b3aa089091839f7325bab8b8ed1dd8ad38b8c301fe29f7fcd75b4947c433c7",
                              "typeString": "literal_string \"VoteProposal(uint256,bool,string,bytes)\""
                            },
                            "value": "VoteProposal(uint256,bool,string,bytes)"
                          },
                          {
                            "id": 4721,
                            "name": "_propId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4703,
                            "src": "3503:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 4722,
                            "name": "_support",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4705,
                            "src": "3528:8:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 4723,
                            "name": "_justification",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4707,
                            "src": "3554:14:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 4724,
                            "name": "_signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4709,
                            "src": "3586:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c2b3aa089091839f7325bab8b8ed1dd8ad38b8c301fe29f7fcd75b4947c433c7",
                              "typeString": "literal_string \"VoteProposal(uint256,bool,string,bytes)\""
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 4718,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3402:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 4719,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "3402:23:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 4725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3402:208:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 4716,
                        "name": "CLLGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3620,
                        "src": "3362:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 4717,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "3362:26:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 4726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3362:258:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3337:283:18"
                },
                {
                  "condition": {
                    "id": 4729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3635:14:18",
                    "subExpression": {
                      "id": 4728,
                      "name": "successDGTCLL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4715,
                      "src": "3636:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4732,
                  "nodeType": "IfStatement",
                  "src": "3631:232:18",
                  "trueBody": {
                    "id": 4731,
                    "nodeType": "Block",
                    "src": "3652:211:18",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "3675:178:18",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3693:22:18",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3710:4:18",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3704:5:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3704:11:18"
                              },
                              "variables": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulTypedName",
                                  "src": "3697:3:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3732:28:18",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "returndatasize",
                                  "nodeType": "YulIdentifier",
                                  "src": "3744:14:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3744:16:18"
                              },
                              "variables": [
                                {
                                  "name": "size",
                                  "nodeType": "YulTypedName",
                                  "src": "3736:4:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "3792:3:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3797:1:18",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "3800:4:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "returndatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "3777:14:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3777:28:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3777:28:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "3829:3:18"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "3834:4:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "3822:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3822:17:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3822:17:18"
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [],
                        "id": 4730,
                        "nodeType": "InlineAssembly",
                        "src": "3666:187:18"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 4733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3880:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 4713,
                  "id": 4734,
                  "nodeType": "Return",
                  "src": "3873:11:18"
                }
              ]
            },
            "documentation": {
              "id": 4701,
              "nodeType": "StructuredDocumentation",
              "src": "2810:322:18",
              "text": "@notice Used to vote a proposal\n @dev After vote the proposal automatically try to be executed\n @param _propId ID of the proposal, based on `arrProposals`\n @param _support True for accept, false to reject\n @param _justification About your vote\n @return true is the vote can be stored"
            },
            "functionSelector": "c2b3aa08",
            "id": 4736,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "VoteProposal",
            "nameLocation": "3146:12:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4710,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4703,
                  "mutability": "mutable",
                  "name": "_propId",
                  "nameLocation": "3176:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 4736,
                  "src": "3168:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4702,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3168:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4705,
                  "mutability": "mutable",
                  "name": "_support",
                  "nameLocation": "3198:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 4736,
                  "src": "3193:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4704,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3193:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4707,
                  "mutability": "mutable",
                  "name": "_justification",
                  "nameLocation": "3230:14:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 4736,
                  "src": "3216:28:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4706,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3216:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4709,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "3267:10:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 4736,
                  "src": "3254:23:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4708,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3254:5:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3158:125:18"
            },
            "returnParameters": {
              "id": 4713,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4712,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4736,
                  "src": "3316:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4711,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3316:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3314:8:18"
            },
            "scope": 5068,
            "src": "3137:754:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4771,
              "nodeType": "Block",
              "src": "4592:641:18",
              "statements": [
                {
                  "assignments": [
                    4755,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4755,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "4608:13:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 4771,
                      "src": "4603:18:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 4754,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4603:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 4769,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f70496e766974655573657228616464726573732c737472696e672c737472696e672c626f6f6c2c75696e743235362c627974657329",
                            "id": 4760,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4709:58:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_31a0afa7f676c8f7b485e9d34a7076717af4b3943f1bb7f40d38feb26e5c6635",
                              "typeString": "literal_string \"PropInviteUser(address,string,string,bool,uint256,bytes)\""
                            },
                            "value": "PropInviteUser(address,string,string,bool,uint256,bytes)"
                          },
                          {
                            "id": 4761,
                            "name": "_walletAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4739,
                            "src": "4785:11:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 4762,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4741,
                            "src": "4814:5:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 4763,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4743,
                            "src": "4837:12:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 4764,
                            "name": "_isManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4745,
                            "src": "4867:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 4765,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4747,
                            "src": "4895:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 4766,
                            "name": "_signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4749,
                            "src": "4923:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_31a0afa7f676c8f7b485e9d34a7076717af4b3943f1bb7f40d38feb26e5c6635",
                              "typeString": "literal_string \"PropInviteUser(address,string,string,bool,uint256,bytes)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 4758,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "4667:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 4759,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "4667:23:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 4767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4667:280:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 4756,
                        "name": "CLLGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3620,
                        "src": "4627:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 4757,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "4627:26:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 4768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4627:330:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4602:355:18"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "4977:250:18",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4991:22:18",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5008:4:18",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "5002:5:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5002:11:18"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "4995:3:18",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "5026:28:18",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "5038:14:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5038:16:18"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "5030:4:18",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "5082:3:18"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5087:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "5090:4:18"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "5067:14:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5067:28:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5067:28:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5135:49:18",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "5160:3:18"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "5165:4:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "5153:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5153:17:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5153:17:18"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "5119:13:18"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "5111:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5111:23:18"
                        },
                        "nodeType": "YulIf",
                        "src": "5108:76:18"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "5197:20:18",
                        "value": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "5213:3:18"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "5207:5:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5207:10:18"
                        },
                        "variableNames": [
                          {
                            "name": "propId",
                            "nodeType": "YulIdentifier",
                            "src": "5197:6:18"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 4752,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "5197:6:18",
                      "valueSize": 1
                    },
                    {
                      "declaration": 4755,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "5119:13:18",
                      "valueSize": 1
                    }
                  ],
                  "id": 4770,
                  "nodeType": "InlineAssembly",
                  "src": "4968:259:18"
                }
              ]
            },
            "documentation": {
              "id": 4737,
              "nodeType": "StructuredDocumentation",
              "src": "3897:425:18",
              "text": "@notice Generate a new proposal to invite a new user\n @dev the execution of this proposal only create an invitation \n @param _walletAddr  Address of the new user\n @param _name Can be the nickname or other reference to the User\n @param _description A text for the proposal\n @param _isManager True if is for a manager\n @return propId ID of the new proposal, based on `arrProposals`"
            },
            "functionSelector": "31a0afa7",
            "id": 4772,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropInviteUser",
            "nameLocation": "4336:14:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4750,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4739,
                  "mutability": "mutable",
                  "name": "_walletAddr",
                  "nameLocation": "4368:11:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 4772,
                  "src": "4360:19:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4738,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4360:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4741,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "4403:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 4772,
                  "src": "4389:19:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4740,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4389:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4743,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "4432:12:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 4772,
                  "src": "4418:26:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4742,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4418:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4745,
                  "mutability": "mutable",
                  "name": "_isManager",
                  "nameLocation": "4459:10:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 4772,
                  "src": "4454:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4744,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4454:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4747,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "4487:10:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 4772,
                  "src": "4479:18:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4746,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4479:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4749,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "4520:10:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 4772,
                  "src": "4507:23:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4748,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4507:5:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4350:186:18"
            },
            "returnParameters": {
              "id": 4753,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4752,
                  "mutability": "mutable",
                  "name": "propId",
                  "nameLocation": "4579:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 4772,
                  "src": "4571:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4751,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4571:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4569:18:18"
            },
            "scope": 5068,
            "src": "4327:906:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4801,
              "nodeType": "Block",
              "src": "5720:578:18",
              "statements": [
                {
                  "assignments": [
                    4787,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4787,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "5736:13:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 4801,
                      "src": "5731:18:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 4786,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5731:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 4799,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f7052656d6f76655573657228616464726573732c737472696e672c75696e743235362c627974657329",
                            "id": 4792,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5837:46:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_2a57ef8465999602129e676b4a60c0623eb2cc91d38b1a125e7aae8223cea980",
                              "typeString": "literal_string \"PropRemoveUser(address,string,uint256,bytes)\""
                            },
                            "value": "PropRemoveUser(address,string,uint256,bytes)"
                          },
                          {
                            "id": 4793,
                            "name": "_walletAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4775,
                            "src": "5901:11:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 4794,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4777,
                            "src": "5930:12:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 4795,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4779,
                            "src": "5960:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 4796,
                            "name": "_signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4781,
                            "src": "5988:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_2a57ef8465999602129e676b4a60c0623eb2cc91d38b1a125e7aae8223cea980",
                              "typeString": "literal_string \"PropRemoveUser(address,string,uint256,bytes)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 4790,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5795:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 4791,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "5795:23:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 4797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5795:217:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 4788,
                        "name": "CLLGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3620,
                        "src": "5755:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 4789,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "5755:26:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 4798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5755:267:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5730:292:18"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "6042:250:18",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "6056:22:18",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6073:4:18",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "6067:5:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6067:11:18"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "6060:3:18",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "6091:28:18",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "6103:14:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6103:16:18"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "6095:4:18",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "6147:3:18"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6152:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "6155:4:18"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "6132:14:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6132:28:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6132:28:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6200:49:18",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "6225:3:18"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "6230:4:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "6218:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6218:17:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6218:17:18"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "6184:13:18"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "6176:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6176:23:18"
                        },
                        "nodeType": "YulIf",
                        "src": "6173:76:18"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "6262:20:18",
                        "value": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "6278:3:18"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "6272:5:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6272:10:18"
                        },
                        "variableNames": [
                          {
                            "name": "propId",
                            "nodeType": "YulIdentifier",
                            "src": "6262:6:18"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 4784,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "6262:6:18",
                      "valueSize": 1
                    },
                    {
                      "declaration": 4787,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "6184:13:18",
                      "valueSize": 1
                    }
                  ],
                  "id": 4800,
                  "nodeType": "InlineAssembly",
                  "src": "6033:259:18"
                }
              ]
            },
            "documentation": {
              "id": 4773,
              "nodeType": "StructuredDocumentation",
              "src": "5239:265:18",
              "text": "@notice Generate a new proposal for remove a user\n @dev The user can be a managaer\n @param _walletAddr user Address to be removed\n @param _description About the proposal\n @return propId ID of the new proposal, based on `arrProposals`"
            },
            "functionSelector": "2a57ef84",
            "id": 4802,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropRemoveUser",
            "nameLocation": "5518:14:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4782,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4775,
                  "mutability": "mutable",
                  "name": "_walletAddr",
                  "nameLocation": "5550:11:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 4802,
                  "src": "5542:19:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4774,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5542:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4777,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "5585:12:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 4802,
                  "src": "5571:26:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4776,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5571:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4779,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "5615:10:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 4802,
                  "src": "5607:18:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4778,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5607:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4781,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "5648:10:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 4802,
                  "src": "5635:23:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4780,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5635:5:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5532:132:18"
            },
            "returnParameters": {
              "id": 4785,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4784,
                  "mutability": "mutable",
                  "name": "propId",
                  "nameLocation": "5707:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 4802,
                  "src": "5699:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4783,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5699:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5697:18:18"
            },
            "scope": 5068,
            "src": "5509:789:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4831,
              "nodeType": "Block",
              "src": "6839:570:18",
              "statements": [
                {
                  "assignments": [
                    4817,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4817,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "6855:13:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 4831,
                      "src": "6850:18:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 4816,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "6850:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 4829,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f70547857656928616464726573732c75696e743235362c737472696e672c75696e7432353629",
                            "id": 4822,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6956:43:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_7c6385482cc50c34905baf4b5888e8798c5594a0a2bf4d252265bc9209354799",
                              "typeString": "literal_string \"PropTxWei(address,uint256,string,uint256)\""
                            },
                            "value": "PropTxWei(address,uint256,string,uint256)"
                          },
                          {
                            "id": 4823,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4805,
                            "src": "7017:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 4824,
                            "name": "_amountOutCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4807,
                            "src": "7038:13:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 4825,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4809,
                            "src": "7069:12:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 4826,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4811,
                            "src": "7099:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_7c6385482cc50c34905baf4b5888e8798c5594a0a2bf4d252265bc9209354799",
                              "typeString": "literal_string \"PropTxWei(address,uint256,string,uint256)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 4820,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "6914:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 4821,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "6914:23:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 4827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6914:209:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 4818,
                        "name": "CLLGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3620,
                        "src": "6874:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 4819,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "6874:26:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 4828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6874:259:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6849:284:18"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "7153:250:18",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "7167:22:18",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7184:4:18",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "7178:5:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7178:11:18"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "7171:3:18",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "7202:28:18",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "7214:14:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7214:16:18"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "7206:4:18",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "7258:3:18"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7263:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "7266:4:18"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "7243:14:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7243:28:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7243:28:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7311:49:18",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "7336:3:18"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "7341:4:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "7329:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7329:17:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7329:17:18"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "7295:13:18"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "7287:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7287:23:18"
                        },
                        "nodeType": "YulIf",
                        "src": "7284:76:18"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "7373:20:18",
                        "value": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "7389:3:18"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "7383:5:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7383:10:18"
                        },
                        "variableNames": [
                          {
                            "name": "propId",
                            "nodeType": "YulIdentifier",
                            "src": "7373:6:18"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 4814,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "7373:6:18",
                      "valueSize": 1
                    },
                    {
                      "declaration": 4817,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "7295:13:18",
                      "valueSize": 1
                    }
                  ],
                  "id": 4830,
                  "nodeType": "InlineAssembly",
                  "src": "7144:259:18"
                }
              ]
            },
            "documentation": {
              "id": 4803,
              "nodeType": "StructuredDocumentation",
              "src": "6304:334:18",
              "text": "@notice generate a new proposal to transfer ETH in weis\n @dev When execute this proposal, the transfer is made\n @param _to Recipient address\n @param _amountOutCLV Amount to transfer (in wei)\n @param _description About this proposal\n @return propId ID of the new proposal, based on `arrProposals`"
            },
            "functionSelector": "7c638548",
            "id": 4832,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropTxWei",
            "nameLocation": "6652:9:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4812,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4805,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "6679:3:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 4832,
                  "src": "6671:11:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4804,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6671:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4807,
                  "mutability": "mutable",
                  "name": "_amountOutCLV",
                  "nameLocation": "6700:13:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 4832,
                  "src": "6692:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4806,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6692:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4809,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "6737:12:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 4832,
                  "src": "6723:26:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4808,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6723:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4811,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "6767:10:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 4832,
                  "src": "6759:18:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4810,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6759:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6661:122:18"
            },
            "returnParameters": {
              "id": 4815,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4814,
                  "mutability": "mutable",
                  "name": "propId",
                  "nameLocation": "6826:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 4832,
                  "src": "6818:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4813,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6818:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6816:18:18"
            },
            "scope": 5068,
            "src": "6643:766:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4864,
              "nodeType": "Block",
              "src": "7982:610:18",
              "statements": [
                {
                  "assignments": [
                    4849,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4849,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "7998:13:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 4864,
                      "src": "7993:18:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 4848,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7993:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 4862,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f705478455243323028616464726573732c75696e743235362c616464726573732c737472696e672c75696e7432353629",
                            "id": 4854,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8099:53:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_de5ab14ee76e872eb390c8f0942b0cbe9e6de8609dea31f21b3c6b5cdfc0a34b",
                              "typeString": "literal_string \"PropTxERC20(address,uint256,address,string,uint256)\""
                            },
                            "value": "PropTxERC20(address,uint256,address,string,uint256)"
                          },
                          {
                            "id": 4855,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4835,
                            "src": "8170:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 4856,
                            "name": "_amountOutCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4837,
                            "src": "8191:13:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 4857,
                            "name": "_tokenOutCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4839,
                            "src": "8222:12:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 4858,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4841,
                            "src": "8252:12:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 4859,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4843,
                            "src": "8282:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_de5ab14ee76e872eb390c8f0942b0cbe9e6de8609dea31f21b3c6b5cdfc0a34b",
                              "typeString": "literal_string \"PropTxERC20(address,uint256,address,string,uint256)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 4852,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "8057:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 4853,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "8057:23:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 4860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8057:249:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 4850,
                        "name": "CLLGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3620,
                        "src": "8017:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 4851,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "8017:26:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 4861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8017:299:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7992:324:18"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "8336:250:18",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "8350:22:18",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8367:4:18",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "8361:5:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8361:11:18"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "8354:3:18",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "8385:28:18",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "8397:14:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8397:16:18"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "8389:4:18",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "8441:3:18"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8446:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "8449:4:18"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "8426:14:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8426:28:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8426:28:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8494:49:18",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "8519:3:18"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "8524:4:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "8512:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8512:17:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8512:17:18"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "8478:13:18"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "8470:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8470:23:18"
                        },
                        "nodeType": "YulIf",
                        "src": "8467:76:18"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "8556:20:18",
                        "value": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "8572:3:18"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "8566:5:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8566:10:18"
                        },
                        "variableNames": [
                          {
                            "name": "propId",
                            "nodeType": "YulIdentifier",
                            "src": "8556:6:18"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 4846,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "8556:6:18",
                      "valueSize": 1
                    },
                    {
                      "declaration": 4849,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "8478:13:18",
                      "valueSize": 1
                    }
                  ],
                  "id": 4863,
                  "nodeType": "InlineAssembly",
                  "src": "8327:259:18"
                }
              ]
            },
            "documentation": {
              "id": 4833,
              "nodeType": "StructuredDocumentation",
              "src": "7415:334:18",
              "text": "@notice generate a new proposal to transfer ETH in weis\n @dev When execute this proposal, the transfer is made\n @param _to Recipient address\n @param _amountOutCLV Amount to transfer (in wei)\n @param _description About this proposal\n @return propId ID of the new proposal, based on `arrProposals`"
            },
            "functionSelector": "de5ab14e",
            "id": 4865,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropTxERC20",
            "nameLocation": "7763:11:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4844,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4835,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "7792:3:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 4865,
                  "src": "7784:11:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4834,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7784:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4837,
                  "mutability": "mutable",
                  "name": "_amountOutCLV",
                  "nameLocation": "7813:13:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 4865,
                  "src": "7805:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4836,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7805:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4839,
                  "mutability": "mutable",
                  "name": "_tokenOutCLV",
                  "nameLocation": "7844:12:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 4865,
                  "src": "7836:20:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4838,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7836:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4841,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "7880:12:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 4865,
                  "src": "7866:26:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4840,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7866:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4843,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "7910:10:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 4865,
                  "src": "7902:18:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4842,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7902:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7774:152:18"
            },
            "returnParameters": {
              "id": 4847,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4846,
                  "mutability": "mutable",
                  "name": "propId",
                  "nameLocation": "7969:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 4865,
                  "src": "7961:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4845,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7961:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7959:18:18"
            },
            "scope": 5068,
            "src": "7754:838:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4891,
              "nodeType": "Block",
              "src": "9136:549:18",
              "statements": [
                {
                  "assignments": [
                    4878,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4878,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "9152:13:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 4891,
                      "src": "9147:18:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 4877,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "9147:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 4889,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f70476f7652756c65732875696e74382c737472696e672c75696e7432353629",
                            "id": 4883,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9253:36:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_70acb761237d5585eadfc2ae41fe8a485128e55ebdae74fa45652b412e62ee83",
                              "typeString": "literal_string \"PropGovRules(uint8,string,uint256)\""
                            },
                            "value": "PropGovRules(uint8,string,uint256)"
                          },
                          {
                            "id": 4884,
                            "name": "_newApprovPercentage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4868,
                            "src": "9307:20:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          {
                            "id": 4885,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4870,
                            "src": "9345:12:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 4886,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4872,
                            "src": "9375:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_70acb761237d5585eadfc2ae41fe8a485128e55ebdae74fa45652b412e62ee83",
                              "typeString": "literal_string \"PropGovRules(uint8,string,uint256)\""
                            },
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 4881,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "9211:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 4882,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "9211:23:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 4887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9211:188:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 4879,
                        "name": "CLLGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3620,
                        "src": "9171:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 4880,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "9171:26:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 4888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9171:238:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9146:263:18"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "9429:250:18",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "9443:22:18",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9460:4:18",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "9454:5:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9454:11:18"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "9447:3:18",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "9478:28:18",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "9490:14:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9490:16:18"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "9482:4:18",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "9534:3:18"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9539:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "9542:4:18"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "9519:14:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9519:28:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9519:28:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9587:49:18",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "9612:3:18"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "9617:4:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "9605:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9605:17:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9605:17:18"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "9571:13:18"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "9563:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9563:23:18"
                        },
                        "nodeType": "YulIf",
                        "src": "9560:76:18"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "9649:20:18",
                        "value": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "9665:3:18"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "9659:5:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9659:10:18"
                        },
                        "variableNames": [
                          {
                            "name": "propId",
                            "nodeType": "YulIdentifier",
                            "src": "9649:6:18"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 4875,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "9649:6:18",
                      "valueSize": 1
                    },
                    {
                      "declaration": 4878,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "9571:13:18",
                      "valueSize": 1
                    }
                  ],
                  "id": 4890,
                  "nodeType": "InlineAssembly",
                  "src": "9420:259:18"
                }
              ]
            },
            "documentation": {
              "id": 4866,
              "nodeType": "StructuredDocumentation",
              "src": "8598:350:18",
              "text": "@notice Generate a new proposal for change some governance parameters\n @dev When execute this proposal the new values will be set\n @param _newApprovPercentage The new percentaje for accept or reject a proposal\n @param _description About the new proposal \n @return propId ID of the new proposal, based on `arrProposals`"
            },
            "functionSelector": "70acb761",
            "id": 4892,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropGovRules",
            "nameLocation": "8962:12:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4873,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4868,
                  "mutability": "mutable",
                  "name": "_newApprovPercentage",
                  "nameLocation": "8990:20:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 4892,
                  "src": "8984:26:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 4867,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "8984:5:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4870,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "9034:12:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 4892,
                  "src": "9020:26:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4869,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9020:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4872,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "9064:10:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 4892,
                  "src": "9056:18:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4871,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9056:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8974:106:18"
            },
            "returnParameters": {
              "id": 4876,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4875,
                  "mutability": "mutable",
                  "name": "propId",
                  "nameLocation": "9123:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 4892,
                  "src": "9115:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4874,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9115:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9113:18:18"
            },
            "scope": 5068,
            "src": "8953:732:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4918,
              "nodeType": "Block",
              "src": "10164:535:18",
              "statements": [
                {
                  "assignments": [
                    4905,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4905,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "10180:13:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 4918,
                      "src": "10175:18:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 4904,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "10175:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 4916,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f7052657175657374546f4a6f696e28737472696e672c737472696e672c627974657329",
                            "id": 4910,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10281:40:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_a19a5f5094957b68797a833ce3e8ce60bcd0e148d0183b60e4fdf5efc7499e5e",
                              "typeString": "literal_string \"PropRequestToJoin(string,string,bytes)\""
                            },
                            "value": "PropRequestToJoin(string,string,bytes)"
                          },
                          {
                            "id": 4911,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4895,
                            "src": "10339:5:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 4912,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4897,
                            "src": "10362:12:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 4913,
                            "name": "_signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4899,
                            "src": "10392:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_a19a5f5094957b68797a833ce3e8ce60bcd0e148d0183b60e4fdf5efc7499e5e",
                              "typeString": "literal_string \"PropRequestToJoin(string,string,bytes)\""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 4908,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "10239:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 4909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "10239:23:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 4914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10239:177:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 4906,
                        "name": "CLLGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3620,
                        "src": "10199:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 4907,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "10199:26:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 4915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10199:227:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10174:252:18"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "10446:247:18",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "10460:22:18",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10477:4:18",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "10471:5:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10471:11:18"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "10464:3:18",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "10495:28:18",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "10507:14:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10507:16:18"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "10499:4:18",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "10551:3:18"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10556:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "10559:4:18"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "10536:14:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10536:28:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10536:28:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10604:49:18",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "10629:3:18"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "10634:4:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "10622:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10622:17:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10622:17:18"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "10588:13:18"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "10580:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10580:23:18"
                        },
                        "nodeType": "YulIf",
                        "src": "10577:76:18"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "10673:3:18"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "10678:4:18"
                            }
                          ],
                          "functionName": {
                            "name": "return",
                            "nodeType": "YulIdentifier",
                            "src": "10666:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10666:17:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10666:17:18"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 4905,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "10588:13:18",
                      "valueSize": 1
                    }
                  ],
                  "id": 4917,
                  "nodeType": "InlineAssembly",
                  "src": "10437:256:18"
                }
              ]
            },
            "documentation": {
              "id": 4893,
              "nodeType": "StructuredDocumentation",
              "src": "9691:289:18",
              "text": "@notice Generate a proposal from a user that want to join to the CLH\n @dev Only avaiable in public CLH\n @param _name Nickname or other user identification\n @param _description About the request\n @return propId ID of the new proposal, based on `arrProposals`"
            },
            "functionSelector": "a19a5f50",
            "id": 4919,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropRequestToJoin",
            "nameLocation": "9994:17:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4900,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4895,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "10035:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 4919,
                  "src": "10021:19:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4894,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10021:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4897,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "10064:12:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 4919,
                  "src": "10050:26:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4896,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10050:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4899,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "10099:10:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 4919,
                  "src": "10086:23:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4898,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10086:5:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10011:104:18"
            },
            "returnParameters": {
              "id": 4903,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4902,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4919,
                  "src": "10150:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4901,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10150:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10148:11:18"
            },
            "scope": 5068,
            "src": "9985:714:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4944,
              "nodeType": "Block",
              "src": "10955:487:18",
              "statements": [
                {
                  "assignments": [
                    4928,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4928,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "10971:13:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 4944,
                      "src": "10966:18:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 4927,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "10966:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 4938,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "41636365707452656a656374496e7669746174696f6e28626f6f6c2c627974657329",
                            "id": 4933,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11076:36:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_81cf22d80f4ec7d62ace7f62bb20df069329fad76ea536d29d67fc68ae1b5019",
                              "typeString": "literal_string \"AcceptRejectInvitation(bool,bytes)\""
                            },
                            "value": "AcceptRejectInvitation(bool,bytes)"
                          },
                          {
                            "id": 4934,
                            "name": "_acceptance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4922,
                            "src": "11130:11:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 4935,
                            "name": "_signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4924,
                            "src": "11159:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_81cf22d80f4ec7d62ace7f62bb20df069329fad76ea536d29d67fc68ae1b5019",
                              "typeString": "literal_string \"AcceptRejectInvitation(bool,bytes)\""
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 4931,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "11034:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 4932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "11034:23:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 4936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11034:149:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 4929,
                        "name": "CLLUserManagement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3618,
                        "src": "10990:17:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 4930,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "10990:30:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 4937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10990:203:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10965:228:18"
                },
                {
                  "condition": {
                    "id": 4940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "11208:14:18",
                    "subExpression": {
                      "id": 4939,
                      "name": "successDGTCLL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4928,
                      "src": "11209:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4943,
                  "nodeType": "IfStatement",
                  "src": "11204:232:18",
                  "trueBody": {
                    "id": 4942,
                    "nodeType": "Block",
                    "src": "11225:211:18",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "11248:178:18",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "11266:22:18",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11283:4:18",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "11277:5:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11277:11:18"
                              },
                              "variables": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulTypedName",
                                  "src": "11270:3:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "11305:28:18",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "returndatasize",
                                  "nodeType": "YulIdentifier",
                                  "src": "11317:14:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11317:16:18"
                              },
                              "variables": [
                                {
                                  "name": "size",
                                  "nodeType": "YulTypedName",
                                  "src": "11309:4:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "11365:3:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11370:1:18",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "11373:4:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "returndatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "11350:14:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11350:28:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11350:28:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "11402:3:18"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "11407:4:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "11395:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11395:17:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11395:17:18"
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [],
                        "id": 4941,
                        "nodeType": "InlineAssembly",
                        "src": "11239:187:18"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 4920,
              "nodeType": "StructuredDocumentation",
              "src": "10705:127:18",
              "text": "@notice For an user that have an invitation pending\n @dev \n @param _acceptance True for accept the invitation"
            },
            "functionSelector": "81cf22d8",
            "id": 4945,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "AcceptRejectInvitation",
            "nameLocation": "10846:22:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4925,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4922,
                  "mutability": "mutable",
                  "name": "_acceptance",
                  "nameLocation": "10883:11:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 4945,
                  "src": "10878:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4921,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10878:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4924,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "10917:10:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 4945,
                  "src": "10904:23:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4923,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10904:5:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10868:65:18"
            },
            "returnParameters": {
              "id": 4926,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10955:0:18"
            },
            "scope": 5068,
            "src": "10837:605:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4976,
              "nodeType": "Block",
              "src": "11679:617:18",
              "statements": [
                {
                  "assignments": [
                    4961,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4961,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "11695:13:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 4976,
                      "src": "11690:18:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 4960,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "11690:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 4974,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f7053776170455243323028616464726573732c616464726573732c75696e743235362c737472696e672c75696e7432353629",
                            "id": 4966,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11796:55:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_152de3b98ea86d627e1f008ef402ac90ecf10b8b7150905cf13cb40560733610",
                              "typeString": "literal_string \"PropSwapERC20(address,address,uint256,string,uint256)\""
                            },
                            "value": "PropSwapERC20(address,address,uint256,string,uint256)"
                          },
                          {
                            "id": 4967,
                            "name": "_tokenOutCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4947,
                            "src": "11869:12:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 4968,
                            "name": "_tokenInCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4949,
                            "src": "11899:11:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 4969,
                            "name": "_amountOutCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4951,
                            "src": "11928:13:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 4970,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4953,
                            "src": "11959:12:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 4971,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4955,
                            "src": "11989:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_152de3b98ea86d627e1f008ef402ac90ecf10b8b7150905cf13cb40560733610",
                              "typeString": "literal_string \"PropSwapERC20(address,address,uint256,string,uint256)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 4964,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "11754:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 4965,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "11754:23:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 4972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11754:259:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 4962,
                        "name": "CLLGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3620,
                        "src": "11714:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 4963,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "11714:26:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 4973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11714:309:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11689:334:18"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "12043:247:18",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "12057:22:18",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12074:4:18",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "12068:5:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12068:11:18"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "12061:3:18",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "12092:28:18",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "12104:14:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12104:16:18"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "12096:4:18",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "12148:3:18"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12153:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "12156:4:18"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "12133:14:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12133:28:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12133:28:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12201:49:18",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "12226:3:18"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "12231:4:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "12219:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12219:17:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12219:17:18"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "12185:13:18"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "12177:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12177:23:18"
                        },
                        "nodeType": "YulIf",
                        "src": "12174:76:18"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "12270:3:18"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "12275:4:18"
                            }
                          ],
                          "functionName": {
                            "name": "return",
                            "nodeType": "YulIdentifier",
                            "src": "12263:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12263:17:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12263:17:18"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 4961,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "12185:13:18",
                      "valueSize": 1
                    }
                  ],
                  "id": 4975,
                  "nodeType": "InlineAssembly",
                  "src": "12034:256:18"
                }
              ]
            },
            "functionSelector": "152de3b9",
            "id": 4977,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropSwapERC20",
            "nameLocation": "11457:13:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4956,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4947,
                  "mutability": "mutable",
                  "name": "_tokenOutCLV",
                  "nameLocation": "11488:12:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 4977,
                  "src": "11480:20:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4946,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11480:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4949,
                  "mutability": "mutable",
                  "name": "_tokenInCLV",
                  "nameLocation": "11518:11:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 4977,
                  "src": "11510:19:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4948,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11510:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4951,
                  "mutability": "mutable",
                  "name": "_amountOutCLV",
                  "nameLocation": "11547:13:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 4977,
                  "src": "11539:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4950,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11539:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4953,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "11584:12:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 4977,
                  "src": "11570:26:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4952,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "11570:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4955,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "11614:10:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 4977,
                  "src": "11606:18:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4954,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11606:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11470:160:18"
            },
            "returnParameters": {
              "id": 4959,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4958,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4977,
                  "src": "11665:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4957,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11665:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11663:11:18"
            },
            "scope": 5068,
            "src": "11448:848:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5005,
              "nodeType": "Block",
              "src": "12504:580:18",
              "statements": [
                {
                  "assignments": [
                    4991,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4991,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "12520:13:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 5005,
                      "src": "12515:18:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 4990,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "12515:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 5003,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f7053656c6c455243323028616464726573732c75696e743235362c737472696e672c75696e7432353629",
                            "id": 4996,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12621:47:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_04f17a9bb89b1e450e234a08e9c473746a395c39a699313d8ca6797b97b374af",
                              "typeString": "literal_string \"PropSellERC20(address,uint256,string,uint256)\""
                            },
                            "value": "PropSellERC20(address,uint256,string,uint256)"
                          },
                          {
                            "id": 4997,
                            "name": "_tokenOutCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4979,
                            "src": "12686:12:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 4998,
                            "name": "_amountOutCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4981,
                            "src": "12716:13:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 4999,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4983,
                            "src": "12747:12:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 5000,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4985,
                            "src": "12777:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_04f17a9bb89b1e450e234a08e9c473746a395c39a699313d8ca6797b97b374af",
                              "typeString": "literal_string \"PropSellERC20(address,uint256,string,uint256)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 4994,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "12579:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 4995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "12579:23:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 5001,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12579:222:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 4992,
                        "name": "CLLGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3620,
                        "src": "12539:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 4993,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "12539:26:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 5002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12539:272:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12514:297:18"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "12831:247:18",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "12845:22:18",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12862:4:18",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "12856:5:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12856:11:18"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "12849:3:18",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "12880:28:18",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "12892:14:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12892:16:18"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "12884:4:18",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "12936:3:18"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12941:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "12944:4:18"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "12921:14:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12921:28:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12921:28:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12989:49:18",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "13014:3:18"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "13019:4:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "13007:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13007:17:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13007:17:18"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "12973:13:18"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "12965:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12965:23:18"
                        },
                        "nodeType": "YulIf",
                        "src": "12962:76:18"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "13058:3:18"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "13063:4:18"
                            }
                          ],
                          "functionName": {
                            "name": "return",
                            "nodeType": "YulIdentifier",
                            "src": "13051:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13051:17:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13051:17:18"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 4991,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "12973:13:18",
                      "valueSize": 1
                    }
                  ],
                  "id": 5004,
                  "nodeType": "InlineAssembly",
                  "src": "12822:256:18"
                }
              ]
            },
            "functionSelector": "04f17a9b",
            "id": 5006,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropSellERC20",
            "nameLocation": "12311:13:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4986,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4979,
                  "mutability": "mutable",
                  "name": "_tokenOutCLV",
                  "nameLocation": "12342:12:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 5006,
                  "src": "12334:20:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4978,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12334:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4981,
                  "mutability": "mutable",
                  "name": "_amountOutCLV",
                  "nameLocation": "12372:13:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 5006,
                  "src": "12364:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4980,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12364:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4983,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "12409:12:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 5006,
                  "src": "12395:26:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4982,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "12395:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4985,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "12439:10:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 5006,
                  "src": "12431:18:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4984,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12431:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12324:131:18"
            },
            "returnParameters": {
              "id": 4989,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4988,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5006,
                  "src": "12490:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4987,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12490:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12488:11:18"
            },
            "scope": 5068,
            "src": "12302:782:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5034,
              "nodeType": "Block",
              "src": "13290:578:18",
              "statements": [
                {
                  "assignments": [
                    5020,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5020,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "13306:13:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 5034,
                      "src": "13301:18:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 5019,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "13301:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 5032,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f70427579455243323028616464726573732c75696e743235362c737472696e672c75696e7432353629",
                            "id": 5025,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13407:46:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_2266e1bc09a9739eac0cdf93a2f130fcaf0d67ad5f8d0909c155c6843375d27c",
                              "typeString": "literal_string \"PropBuyERC20(address,uint256,string,uint256)\""
                            },
                            "value": "PropBuyERC20(address,uint256,string,uint256)"
                          },
                          {
                            "id": 5026,
                            "name": "_tokenInCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5008,
                            "src": "13471:11:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 5027,
                            "name": "_amountOutCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5010,
                            "src": "13500:13:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 5028,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5012,
                            "src": "13531:12:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 5029,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5014,
                            "src": "13561:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_2266e1bc09a9739eac0cdf93a2f130fcaf0d67ad5f8d0909c155c6843375d27c",
                              "typeString": "literal_string \"PropBuyERC20(address,uint256,string,uint256)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 5023,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "13365:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 5024,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "13365:23:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 5030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13365:220:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 5021,
                        "name": "CLLGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3620,
                        "src": "13325:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 5022,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "13325:26:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 5031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13325:270:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13300:295:18"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "13615:247:18",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "13629:22:18",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13646:4:18",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "13640:5:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13640:11:18"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "13633:3:18",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "13664:28:18",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "13676:14:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13676:16:18"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "13668:4:18",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "13720:3:18"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13725:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "13728:4:18"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "13705:14:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13705:28:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13705:28:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13773:49:18",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "13798:3:18"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "13803:4:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "13791:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13791:17:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13791:17:18"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "13757:13:18"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "13749:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13749:23:18"
                        },
                        "nodeType": "YulIf",
                        "src": "13746:76:18"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "13842:3:18"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "13847:4:18"
                            }
                          ],
                          "functionName": {
                            "name": "return",
                            "nodeType": "YulIdentifier",
                            "src": "13835:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13835:17:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13835:17:18"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 5020,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "13757:13:18",
                      "valueSize": 1
                    }
                  ],
                  "id": 5033,
                  "nodeType": "InlineAssembly",
                  "src": "13606:256:18"
                }
              ]
            },
            "functionSelector": "2266e1bc",
            "id": 5035,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropBuyERC20",
            "nameLocation": "13099:12:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5015,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5008,
                  "mutability": "mutable",
                  "name": "_tokenInCLV",
                  "nameLocation": "13129:11:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 5035,
                  "src": "13121:19:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5007,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13121:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5010,
                  "mutability": "mutable",
                  "name": "_amountOutCLV",
                  "nameLocation": "13158:13:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 5035,
                  "src": "13150:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5009,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13150:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5012,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "13195:12:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 5035,
                  "src": "13181:26:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5011,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "13181:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5014,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "13225:10:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 5035,
                  "src": "13217:18:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5013,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13217:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13111:130:18"
            },
            "returnParameters": {
              "id": 5018,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5017,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5035,
                  "src": "13276:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5016,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13276:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13274:11:18"
            },
            "scope": 5068,
            "src": "13090:778:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5044,
              "nodeType": "Block",
              "src": "13967:39:18",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 5041,
                      "name": "arrUsers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3673,
                      "src": "13984:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_strUser_$4342_storage_$dyn_storage",
                        "typeString": "struct strUser storage ref[] storage ref"
                      }
                    },
                    "id": 5042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "13984:15:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5040,
                  "id": 5043,
                  "nodeType": "Return",
                  "src": "13977:22:18"
                }
              ]
            },
            "documentation": {
              "id": 5036,
              "nodeType": "StructuredDocumentation",
              "src": "13874:27:18",
              "text": "@notice Length of array"
            },
            "functionSelector": "a693649a",
            "id": 5045,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetArrUsersLength",
            "nameLocation": "13915:17:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5037,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13932:2:18"
            },
            "returnParameters": {
              "id": 5040,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5039,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5045,
                  "src": "13958:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5038,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13958:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13956:11:18"
            },
            "scope": 5068,
            "src": "13906:100:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5055,
              "nodeType": "Block",
              "src": "14185:36:18",
              "statements": [
                {
                  "expression": {
                    "id": 5053,
                    "name": "arrProposals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3657,
                    "src": "14202:12:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_strProposal_$4362_storage_$dyn_storage",
                      "typeString": "struct strProposal storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 5052,
                  "id": 5054,
                  "nodeType": "Return",
                  "src": "14195:19:18"
                }
              ]
            },
            "documentation": {
              "id": 5046,
              "nodeType": "StructuredDocumentation",
              "src": "14012:95:18",
              "text": "@notice The list of all Proposals\n @return arrProposals the array with all proposals"
            },
            "functionSelector": "b4c62192",
            "id": 5056,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetProposalList",
            "nameLocation": "14121:15:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5047,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14136:2:18"
            },
            "returnParameters": {
              "id": 5052,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5051,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5056,
                  "src": "14162:20:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_strProposal_$4362_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct strProposal[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5049,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 5048,
                        "name": "strProposal",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 4362,
                        "src": "14162:11:18"
                      },
                      "referencedDeclaration": 4362,
                      "src": "14162:11:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_strProposal_$4362_storage_ptr",
                        "typeString": "struct strProposal"
                      }
                    },
                    "id": 5050,
                    "nodeType": "ArrayTypeName",
                    "src": "14162:13:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_strProposal_$4362_storage_$dyn_storage_ptr",
                      "typeString": "struct strProposal[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14160:24:18"
            },
            "scope": 5068,
            "src": "14112:109:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5066,
              "nodeType": "Block",
              "src": "14425:42:18",
              "statements": [
                {
                  "expression": {
                    "id": 5064,
                    "name": "arrDataPropAddUser",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3661,
                    "src": "14442:18:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_strDataAddUser_$4376_storage_$dyn_storage",
                      "typeString": "struct strDataAddUser storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 5063,
                  "id": 5065,
                  "nodeType": "Return",
                  "src": "14435:25:18"
                }
              ]
            },
            "documentation": {
              "id": 5057,
              "nodeType": "StructuredDocumentation",
              "src": "14227:111:18",
              "text": "@notice Get complete array of arrDataPropAddUser\n @return arrDataPropAddUser the array with all data"
            },
            "functionSelector": "5aadd414",
            "id": 5067,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetArrDataPropAddUser",
            "nameLocation": "14352:21:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5058,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14373:2:18"
            },
            "returnParameters": {
              "id": 5063,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5062,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5067,
                  "src": "14399:23:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_strDataAddUser_$4376_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct strDataAddUser[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5060,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 5059,
                        "name": "strDataAddUser",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 4376,
                        "src": "14399:14:18"
                      },
                      "referencedDeclaration": 4376,
                      "src": "14399:14:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_strDataAddUser_$4376_storage_ptr",
                        "typeString": "struct strDataAddUser"
                      }
                    },
                    "id": 5061,
                    "nodeType": "ArrayTypeName",
                    "src": "14399:16:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_strDataAddUser_$4376_storage_$dyn_storage_ptr",
                      "typeString": "struct strDataAddUser[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14397:27:18"
            },
            "scope": 5068,
            "src": "14343:124:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 5069,
        "src": "254:14215:18",
        "usedErrors": []
      }
    ],
    "src": "32:14437:18"
  },
  "bytecode": "60806040523480156200001157600080fd5b50604051620024ed380380620024ed833981016040819052620000349162000336565b600082600260200201516001600160a01b031688888888888888604051602401620000669796959493929190620004c9565b60408051601f198184030181529181526020820180516001600160e01b0316639f221d8160e01b179052516200009d91906200057e565b600060405180830381855af49150503d8060008114620000da576040519150601f19603f3d011682016040523d82523d6000602084013e620000df565b606091505b5050905080620000f6576040513d806000833e8082fd5b50505050505050506200059c565b80516001600160a01b03811681146200011c57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171562000162576200016262000121565b604052919050565b60005b83811015620001875781810151838201526020016200016d565b8381111562000197576000848401525b50505050565b805180151581146200011c57600080fd5b600082601f830112620001c057600080fd5b604051606081016001600160401b0381118282101715620001e557620001e562000121565b604052806060840185811115620001fb57600080fd5b845b818110156200022857805160ff81168114620002195760008081fd5b835260209283019201620001fd565b509195945050505050565b600082601f8301126200024557600080fd5b60405160a081016001600160401b03811182821017156200026a576200026a62000121565b6040528060a08401858111156200028057600080fd5b845b818110156200022857620002968162000104565b83526020928301920162000282565b600082601f830112620002b757600080fd5b815160206001600160401b03821115620002d557620002d562000121565b8160051b620002e682820162000137565b92835284810182019282810190878511156200030157600080fd5b83870192505b848310156200032b576200031b8362000104565b8252918301919083019062000307565b979650505050505050565b60008060008060008060006101a0888a0312156200035357600080fd5b6200035e8862000104565b60208901519097506001600160401b03808211156200037c57600080fd5b818a0191508a601f8301126200039157600080fd5b815181811115620003a657620003a662000121565b620003bb601f8201601f191660200162000137565b8181528c6020838601011115620003d157600080fd5b620003e48260208301602087016200016a565b9850620003f6905060408b016200019d565b965060608a015195506200040e8b60808c01620001ae565b94506200041f8b60e08c0162000233565b93506101808a01519150808211156200043757600080fd5b50620004468a828b01620002a5565b91505092959891949750929550565b8060005b6005811015620001975781516001600160a01b031684526020938401939091019060010162000459565b600081518084526020808501945080840160005b83811015620004be5781516001600160a01b03168752958201959082019060010162000497565b509495945050505050565b6001600160a01b03881681526101a0602080830182905288519183018290526000916101c0919062000501818487018d85016200016a565b891515604086015260608501899052601f01601f19168401608085018860005b60038110156200054357815160ff168352918401919084019060010162000521565b5050506200055560e086018862000455565b82858203016101808601526200056e8382018762000483565b9c9b505050505050505050505050565b60008251620005928184602087016200016a565b9190910192915050565b611f4180620005ac6000396000f3fe608060405234801561001057600080fd5b506004361061021c5760003560e01c806370ff918c11610125578063baa4d5e9116100ad578063cb85669c1161007c578063cb85669c14610533578063de5ab14e1461055b578063e68777d71461056e578063e810a58e14610580578063f00d62741461059557600080fd5b8063baa4d5e914610495578063c2b3aa08146104db578063c347d2fd146104fe578063cada7f191461052057600080fd5b806396a3dd84116100f457806396a3dd84146104305780639c630a8814610452578063a19a5f5014610465578063a693649a14610478578063b4c621921461048057600080fd5b806370ff918c146103d55780637c638548146103f557806381cf22d8146104085780639360bfad1461041d57600080fd5b80632a57ef84116101a857806359ca2d031161017757806359ca2d03146103645780635aadd414146103795780635f3d99b31461038e5780636c2f34e7146103af57806370acb761146103c257600080fd5b80632a57ef841461030b57806331a0afa71461031e5780633a70693d1461033157806350f7308a1461034457600080fd5b806319a50f49116101ef57806319a50f49146102ab5780631d5fd3ca146102b85780631f50dd27146102c15780632266e1bc146102d457806322b4081c146102e757600080fd5b806304f17a9b14610221578063052f9b0a146102475780631343e9a514610272578063152de3b914610298575b600080fd5b61023461022f36600461151a565b6105ab565b6040519081526020015b60405180910390f35b60085461025a906001600160a01b031681565b6040516001600160a01b03909116815260200161023e565b600154610286906301000000900460ff1681565b60405160ff909116815260200161023e565b6102346102a6366004611579565b610665565b6001546102869060ff1681565b61023460055481565b60095461025a906001600160a01b031681565b6102346102e236600461151a565b6106c7565b6102fa6102f53660046115e9565b610727565b60405161023e95949392919061165e565b6102346103193660046116a1565b610802565b61023461032c36600461172f565b6108c4565b61028661033f3660046115e9565b61098c565b6102346103523660046117e1565b600a6020526000908152604090205481565b61036c6109b0565b60405161023e9190611803565b610381610a3e565b60405161023e9190611816565b6103a161039c3660046115e9565b610b57565b60405161023e9291906118a4565b60065461025a906001600160a01b031681565b6102346103d03660046118c7565b610c46565b6102346103e33660046117e1565b600b6020526000908152604090205481565b61023461040336600461151a565b610d05565b61041b610416366004611926565b610d65565b005b60075461025a906001600160a01b031681565b61044361043e3660046115e9565b610e22565b60405161023e93929190611974565b6001546102869062010000900460ff1681565b6102346104733660046119aa565b610eed565b601154610234565b610488610f4b565b60405161023e9190611a6a565b6104a86104a33660046115e9565b6110d0565b604080516001600160a01b039586168152602081019490945291841691830191909152909116606082015260800161023e565b6104ee6104e9366004611b3f565b611118565b604051901515815260200161023e565b61051161050c366004611ba4565b6111da565b60405161023e93929190611bd0565b60045461025a906001600160a01b031681565b6105466105413660046115e9565b611297565b60405161023e99989796959493929190611bfc565b610234610569366004611c64565b611396565b60015461028690610100900460ff1681565b60015461028690640100000000900460ff1681565b6001546104ee9065010000000000900460ff1681565b60025460405160009182916001600160a01b03909116906105d6908890889088908890602401611cb6565b60408051601f198184030181529181526020820180516001600160e01b03166304f17a9b60e01b1790525161060b9190611cee565b600060405180830381855af49150503d8060008114610646576040519150601f19603f3d011682016040523d82523d6000602084013e61064b565b606091505b505090506040513d806000833e82610661578082fd5b8082f35b60025460405160009182916001600160a01b03909116906106929089908990899089908990602401611d0a565b60408051601f198184030181529181526020820180516001600160e01b031663152de3b960e01b1790525161060b9190611cee565b60025460405160009182916001600160a01b03909116906106f2908890889088908890602401611cb6565b60408051601f198184030181529181526020820180516001600160e01b0316630899b86f60e21b1790525161060b9190611cee565b6011818154811061073757600080fd5b6000918252602090912060049091020180546001820180546001600160a01b0390921693509061076690611d4f565b80601f016020809104026020016040519081016040528092919081815260200182805461079290611d4f565b80156107df5780601f106107b4576101008083540402835291602001916107df565b820191906000526020600020905b8154815290600101906020018083116107c257829003601f168201915b50505050600283015460039093015491929160ff80821692506101009091041685565b60025460405160009182916001600160a01b039091169061082d908890889088908890602401611d8a565b60408051601f198184030181529181526020820180516001600160e01b0316630a95fbe160e21b179052516108629190611cee565b600060405180830381855af49150503d806000811461089d576040519150601f19603f3d011682016040523d82523d6000602084013e6108a2565b606091505b505090506040513d806000833e826108b8578082fd5b50519695505050505050565b60025460405160009182916001600160a01b03909116906108f3908a908a908a908a908a908a90602401611dd1565b60408051601f198184030181529181526020820180516001600160e01b03166331a0afa760e01b179052516109289190611cee565b600060405180830381855af49150503d8060008114610963576040519150601f19603f3d011682016040523d82523d6000602084013e610968565b606091505b505090506040513d806000833e8261097e578082fd5b505198975050505050505050565b6010818154811061099c57600080fd5b60009182526020909120015460ff16905081565b600080546109bd90611d4f565b80601f01602080910402602001604051908101604052809291908181526020018280546109e990611d4f565b8015610a365780601f10610a0b57610100808354040283529160200191610a36565b820191906000526020600020905b815481529060010190602001808311610a1957829003601f168201915b505050505081565b6060600e805480602002602001604051908101604052809291908181526020016000905b82821015610b4e57600084815260209081902060408051606081019091526003850290910180546001600160a01b031682526001810180549293919291840191610aab90611d4f565b80601f0160208091040260200160405190810160405280929190818152602001828054610ad790611d4f565b8015610b245780601f10610af957610100808354040283529160200191610b24565b820191906000526020600020905b815481529060010190602001808311610b0757829003601f168201915b50505091835250506002919091015460ff1615156020918201529082526001929092019101610a62565b50505050905090565b6002546040516024810183905260009160609183916001600160a01b03169060440160408051601f198184030181529181526020820180516001600160e01b0316635f3d99b360e01b17905251610bae9190611cee565b600060405180830381855af49150503d8060008114610be9576040519150601f19603f3d011682016040523d82523d6000602084013e610bee565b606091505b5050905080610c04576040513d806000833e8082fd5b60016040518060400160405280601981526020017f537563636573732065786563757465642070726f706f73616c000000000000008152509250925050915091565b60025460405160009182916001600160a01b0390911690610c6f90879087908790602401611e36565b60408051601f198184030181529181526020820180516001600160e01b03166370acb76160e01b17905251610ca49190611cee565b600060405180830381855af49150503d8060008114610cdf576040519150601f19603f3d011682016040523d82523d6000602084013e610ce4565b606091505b505090506040513d806000833e82610cfa578082fd5b505195945050505050565b60025460405160009182916001600160a01b0390911690610d30908890889088908890602401611cb6565b60408051601f198184030181529181526020820180516001600160e01b0316630f8c70a960e31b179052516108629190611cee565b600154604051600091660100000000000090046001600160a01b031690610d9290859085906024016118a4565b60408051601f198184030181529181526020820180516001600160e01b0316631039e45b60e31b17905251610dc79190611cee565b600060405180830381855af49150503d8060008114610e02576040519150601f19603f3d011682016040523d82523d6000602084013e610e07565b606091505b5050905080610e1d576040513d806000833e8082fd5b505050565b600e8181548110610e3257600080fd5b6000918252602090912060039091020180546001820180546001600160a01b03909216935090610e6190611d4f565b80601f0160208091040260200160405190810160405280929190818152602001828054610e8d90611d4f565b8015610eda5780601f10610eaf57610100808354040283529160200191610eda565b820191906000526020600020905b815481529060010190602001808311610ebd57829003601f168201915b5050506002909301549192505060ff1683565b60025460405160009182916001600160a01b0390911690610f1690879087908790602401611e62565b60408051601f198184030181529181526020820180516001600160e01b0316630a19a5f560e41b1790525161060b9190611cee565b6060600d805480602002602001604051908101604052809291908181526020016000905b82821015610b4e5760008481526020908190206040805161012081019091526005850290910180546001600160a01b03811683529192909190830190600160a01b900460ff166008811115610fc657610fc6611a32565b6008811115610fd757610fd7611a32565b8152602001600182018054610feb90611d4f565b80601f016020809104026020016040519081016040528092919081815260200182805461101790611d4f565b80156110645780601f1061103957610100808354040283529160200191611064565b820191906000526020600020905b81548152906001019060200180831161104757829003601f168201915b50505091835250506002820154602080830191909152600383015460ff8082166040850152610100820481166060850152620100008204811615156080850152630100000090910416151560a083015260049092015460c0909101529082526001929092019101610f6f565b600f81815481106110e057600080fd5b600091825260209091206004909102018054600182015460028301546003909301546001600160a01b03928316945090928216911684565b60025460405160009182916001600160a01b0390911690611143908890889088908890602401611ea5565b60408051601f198184030181529181526020820180516001600160e01b0316631856754160e31b179052516111789190611cee565b600060405180830381855af49150503d80600081146111b3576040519150601f19603f3d011682016040523d82523d6000602084013e6111b8565b606091505b50509050806111ce576040513d806000833e8082fd5b50600195945050505050565b600c6020908152600092835260408084209091529082529020805460018201805460ff808416946101009094041692919061121490611d4f565b80601f016020809104026020016040519081016040528092919081815260200182805461124090611d4f565b801561128d5780601f106112625761010080835404028352916020019161128d565b820191906000526020600020905b81548152906001019060200180831161127057829003601f168201915b5050505050905083565b600d81815481106112a757600080fd5b6000918252602090912060059091020180546001820180546001600160a01b0383169450600160a01b90920460ff1692916112e190611d4f565b80601f016020809104026020016040519081016040528092919081815260200182805461130d90611d4f565b801561135a5780601f1061132f5761010080835404028352916020019161135a565b820191906000526020600020905b81548152906001019060200180831161133d57829003601f168201915b505050600284015460038501546004909501549394909360ff808316945061010083048116935062010000830481169263010000009004169089565b60025460405160009182916001600160a01b03909116906113c39089908990899089908990602401611ed8565b60408051601f198184030181529181526020820180516001600160e01b0316636f2d58a760e11b179052516113f89190611cee565b600060405180830381855af49150503d8060008114611433576040519150601f19603f3d011682016040523d82523d6000602084013e611438565b606091505b505090506040513d806000833e8261144e578082fd5b5051979650505050505050565b80356001600160a01b038116811461147257600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261149e57600080fd5b813567ffffffffffffffff808211156114b9576114b9611477565b604051601f8301601f19908116603f011681019082821181831017156114e1576114e1611477565b816040528381528660208588010111156114fa57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000806080858703121561153057600080fd5b6115398561145b565b935060208501359250604085013567ffffffffffffffff81111561155c57600080fd5b6115688782880161148d565b949793965093946060013593505050565b600080600080600060a0868803121561159157600080fd5b61159a8661145b565b94506115a86020870161145b565b935060408601359250606086013567ffffffffffffffff8111156115cb57600080fd5b6115d78882890161148d565b95989497509295608001359392505050565b6000602082840312156115fb57600080fd5b5035919050565b60005b8381101561161d578181015183820152602001611605565b8381111561162c576000848401525b50505050565b6000815180845261164a816020860160208601611602565b601f01601f19169290920160200192915050565b6001600160a01b038616815260a06020820181905260009061168290830187611632565b6040830195909552509115156060830152151560809091015292915050565b600080600080608085870312156116b757600080fd5b6116c08561145b565b9350602085013567ffffffffffffffff808211156116dd57600080fd5b6116e98883890161148d565b945060408701359350606087013591508082111561170657600080fd5b506117138782880161148d565b91505092959194509250565b8035801515811461147257600080fd5b60008060008060008060c0878903121561174857600080fd5b6117518761145b565b9550602087013567ffffffffffffffff8082111561176e57600080fd5b61177a8a838b0161148d565b9650604089013591508082111561179057600080fd5b61179c8a838b0161148d565b95506117aa60608a0161171f565b94506080890135935060a08901359150808211156117c757600080fd5b506117d489828a0161148d565b9150509295509295509295565b6000602082840312156117f357600080fd5b6117fc8261145b565b9392505050565b6020815260006117fc6020830184611632565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561189657888303603f19018552815180516001600160a01b031684528781015160608986018190529061187682870182611632565b92890151151595890195909552509487019492509086019060010161183d565b509098975050505050505050565b82151581526040602082015260006118bf6040830184611632565b949350505050565b6000806000606084860312156118dc57600080fd5b833560ff811681146118ed57600080fd5b9250602084013567ffffffffffffffff81111561190957600080fd5b6119158682870161148d565b925050604084013590509250925092565b6000806040838503121561193957600080fd5b6119428361171f565b9150602083013567ffffffffffffffff81111561195e57600080fd5b61196a8582860161148d565b9150509250929050565b6001600160a01b038416815260606020820181905260009061199890830185611632565b90508215156040830152949350505050565b6000806000606084860312156119bf57600080fd5b833567ffffffffffffffff808211156119d757600080fd5b6119e38783880161148d565b945060208601359150808211156119f957600080fd5b611a058783880161148d565b93506040860135915080821115611a1b57600080fd5b50611a288682870161148d565b9150509250925092565b634e487b7160e01b600052602160045260246000fd5b60098110611a6657634e487b7160e01b600052602160045260246000fd5b9052565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561189657888303603f19018552815180516001600160a01b0316845261012088820151611ac48a870182611a48565b50878201518189870152611ada82870182611632565b9150506060808301518187015250608080830151611afc8288018260ff169052565b505060a08281015160ff169086015260c08083015115159086015260e0808301511515908601526101009182015191909401529386019390860190600101611a91565b60008060008060808587031215611b5557600080fd5b84359350611b656020860161171f565b9250604085013567ffffffffffffffff80821115611b8257600080fd5b611b8e8883890161148d565b9350606087013591508082111561170657600080fd5b60008060408385031215611bb757600080fd5b82359150611bc76020840161145b565b90509250929050565b83151581528215156020820152606060408201526000611bf36060830184611632565b95945050505050565b6001600160a01b038a1681526000610120611c1a602084018c611a48565b806040840152611c2c8184018b611632565b6060840199909952505060ff95861660808201529390941660a084015290151560c0830152151560e082015261010001529392505050565b600080600080600060a08688031215611c7c57600080fd5b611c858661145b565b945060208601359350611c9a6040870161145b565b9250606086013567ffffffffffffffff8111156115cb57600080fd5b60018060a01b0385168152836020820152608060408201526000611cdd6080830185611632565b905082606083015295945050505050565b60008251611d00818460208701611602565b9190910192915050565b6001600160a01b038681168252851660208201526040810184905260a060608201819052600090611d3d90830185611632565b90508260808301529695505050505050565b600181811c90821680611d6357607f821691505b60208210811415611d8457634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160a01b0385168152608060208201819052600090611dae90830186611632565b8460408401528281036060840152611dc68185611632565b979650505050505050565b6001600160a01b038716815260c060208201819052600090611df590830188611632565b8281036040840152611e078188611632565b9050851515606084015284608084015282810360a0840152611e298185611632565b9998505050505050505050565b60ff84168152606060208201526000611e526060830185611632565b9050826040830152949350505050565b606081526000611e756060830186611632565b8281036020840152611e878186611632565b90508281036040840152611e9b8185611632565b9695505050505050565b8481528315156020820152608060408201526000611ec66080830185611632565b8281036060840152611dc68185611632565b6001600160a01b038681168252602082018690528416604082015260a060608201819052600090611d3d9083018561163256fea2646970667358221220774dfed0272bcb445434ffd0a3c91461c5937b4b28941dd44e52515994e131fa64736f6c634300080c0033",
  "bytecodeSha1": "7f7c6feaeac3a107aa5628309b457e4198a1116e",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "CLHouse",
  "coverageMap": {
    "branches": {
      "18": {
        "CLHouse.AcceptRejectInvitation": {
          "9": [
            11209,
            11222,
            false
          ]
        },
        "CLHouse.ExecProp": {
          "8": [
            2515,
            2528,
            false
          ]
        },
        "CLHouse.VoteProposal": {
          "10": [
            3636,
            3649,
            false
          ]
        }
      },
      "23": {},
      "25": {}
    },
    "statements": {
      "18": {
        "CLHouse.AcceptRejectInvitation": {
          "4": [
            11204,
            11436
          ]
        },
        "CLHouse.ExecProp": {
          "2": [
            2510,
            2742
          ],
          "3": [
            2752,
            2797
          ]
        },
        "CLHouse.GetArrDataPropAddUser": {
          "1": [
            14435,
            14460
          ]
        },
        "CLHouse.GetArrUsersLength": {
          "0": [
            13977,
            13999
          ]
        },
        "CLHouse.GetProposalList": {
          "5": [
            14195,
            14214
          ]
        },
        "CLHouse.VoteProposal": {
          "6": [
            3631,
            3863
          ],
          "7": [
            3873,
            3884
          ]
        }
      },
      "23": {},
      "25": {}
    }
  },
  "dependencies": [
    "CLStorage"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061021c5760003560e01c806370ff918c11610125578063baa4d5e9116100ad578063cb85669c1161007c578063cb85669c14610533578063de5ab14e1461055b578063e68777d71461056e578063e810a58e14610580578063f00d62741461059557600080fd5b8063baa4d5e914610495578063c2b3aa08146104db578063c347d2fd146104fe578063cada7f191461052057600080fd5b806396a3dd84116100f457806396a3dd84146104305780639c630a8814610452578063a19a5f5014610465578063a693649a14610478578063b4c621921461048057600080fd5b806370ff918c146103d55780637c638548146103f557806381cf22d8146104085780639360bfad1461041d57600080fd5b80632a57ef84116101a857806359ca2d031161017757806359ca2d03146103645780635aadd414146103795780635f3d99b31461038e5780636c2f34e7146103af57806370acb761146103c257600080fd5b80632a57ef841461030b57806331a0afa71461031e5780633a70693d1461033157806350f7308a1461034457600080fd5b806319a50f49116101ef57806319a50f49146102ab5780631d5fd3ca146102b85780631f50dd27146102c15780632266e1bc146102d457806322b4081c146102e757600080fd5b806304f17a9b14610221578063052f9b0a146102475780631343e9a514610272578063152de3b914610298575b600080fd5b61023461022f36600461151a565b6105ab565b6040519081526020015b60405180910390f35b60085461025a906001600160a01b031681565b6040516001600160a01b03909116815260200161023e565b600154610286906301000000900460ff1681565b60405160ff909116815260200161023e565b6102346102a6366004611579565b610665565b6001546102869060ff1681565b61023460055481565b60095461025a906001600160a01b031681565b6102346102e236600461151a565b6106c7565b6102fa6102f53660046115e9565b610727565b60405161023e95949392919061165e565b6102346103193660046116a1565b610802565b61023461032c36600461172f565b6108c4565b61028661033f3660046115e9565b61098c565b6102346103523660046117e1565b600a6020526000908152604090205481565b61036c6109b0565b60405161023e9190611803565b610381610a3e565b60405161023e9190611816565b6103a161039c3660046115e9565b610b57565b60405161023e9291906118a4565b60065461025a906001600160a01b031681565b6102346103d03660046118c7565b610c46565b6102346103e33660046117e1565b600b6020526000908152604090205481565b61023461040336600461151a565b610d05565b61041b610416366004611926565b610d65565b005b60075461025a906001600160a01b031681565b61044361043e3660046115e9565b610e22565b60405161023e93929190611974565b6001546102869062010000900460ff1681565b6102346104733660046119aa565b610eed565b601154610234565b610488610f4b565b60405161023e9190611a6a565b6104a86104a33660046115e9565b6110d0565b604080516001600160a01b039586168152602081019490945291841691830191909152909116606082015260800161023e565b6104ee6104e9366004611b3f565b611118565b604051901515815260200161023e565b61051161050c366004611ba4565b6111da565b60405161023e93929190611bd0565b60045461025a906001600160a01b031681565b6105466105413660046115e9565b611297565b60405161023e99989796959493929190611bfc565b610234610569366004611c64565b611396565b60015461028690610100900460ff1681565b60015461028690640100000000900460ff1681565b6001546104ee9065010000000000900460ff1681565b60025460405160009182916001600160a01b03909116906105d6908890889088908890602401611cb6565b60408051601f198184030181529181526020820180516001600160e01b03166304f17a9b60e01b1790525161060b9190611cee565b600060405180830381855af49150503d8060008114610646576040519150601f19603f3d011682016040523d82523d6000602084013e61064b565b606091505b505090506040513d806000833e82610661578082fd5b8082f35b60025460405160009182916001600160a01b03909116906106929089908990899089908990602401611d0a565b60408051601f198184030181529181526020820180516001600160e01b031663152de3b960e01b1790525161060b9190611cee565b60025460405160009182916001600160a01b03909116906106f2908890889088908890602401611cb6565b60408051601f198184030181529181526020820180516001600160e01b0316630899b86f60e21b1790525161060b9190611cee565b6011818154811061073757600080fd5b6000918252602090912060049091020180546001820180546001600160a01b0390921693509061076690611d4f565b80601f016020809104026020016040519081016040528092919081815260200182805461079290611d4f565b80156107df5780601f106107b4576101008083540402835291602001916107df565b820191906000526020600020905b8154815290600101906020018083116107c257829003601f168201915b50505050600283015460039093015491929160ff80821692506101009091041685565b60025460405160009182916001600160a01b039091169061082d908890889088908890602401611d8a565b60408051601f198184030181529181526020820180516001600160e01b0316630a95fbe160e21b179052516108629190611cee565b600060405180830381855af49150503d806000811461089d576040519150601f19603f3d011682016040523d82523d6000602084013e6108a2565b606091505b505090506040513d806000833e826108b8578082fd5b50519695505050505050565b60025460405160009182916001600160a01b03909116906108f3908a908a908a908a908a908a90602401611dd1565b60408051601f198184030181529181526020820180516001600160e01b03166331a0afa760e01b179052516109289190611cee565b600060405180830381855af49150503d8060008114610963576040519150601f19603f3d011682016040523d82523d6000602084013e610968565b606091505b505090506040513d806000833e8261097e578082fd5b505198975050505050505050565b6010818154811061099c57600080fd5b60009182526020909120015460ff16905081565b600080546109bd90611d4f565b80601f01602080910402602001604051908101604052809291908181526020018280546109e990611d4f565b8015610a365780601f10610a0b57610100808354040283529160200191610a36565b820191906000526020600020905b815481529060010190602001808311610a1957829003601f168201915b505050505081565b6060600e805480602002602001604051908101604052809291908181526020016000905b82821015610b4e57600084815260209081902060408051606081019091526003850290910180546001600160a01b031682526001810180549293919291840191610aab90611d4f565b80601f0160208091040260200160405190810160405280929190818152602001828054610ad790611d4f565b8015610b245780601f10610af957610100808354040283529160200191610b24565b820191906000526020600020905b815481529060010190602001808311610b0757829003601f168201915b50505091835250506002919091015460ff1615156020918201529082526001929092019101610a62565b50505050905090565b6002546040516024810183905260009160609183916001600160a01b03169060440160408051601f198184030181529181526020820180516001600160e01b0316635f3d99b360e01b17905251610bae9190611cee565b600060405180830381855af49150503d8060008114610be9576040519150601f19603f3d011682016040523d82523d6000602084013e610bee565b606091505b5050905080610c04576040513d806000833e8082fd5b60016040518060400160405280601981526020017f537563636573732065786563757465642070726f706f73616c000000000000008152509250925050915091565b60025460405160009182916001600160a01b0390911690610c6f90879087908790602401611e36565b60408051601f198184030181529181526020820180516001600160e01b03166370acb76160e01b17905251610ca49190611cee565b600060405180830381855af49150503d8060008114610cdf576040519150601f19603f3d011682016040523d82523d6000602084013e610ce4565b606091505b505090506040513d806000833e82610cfa578082fd5b505195945050505050565b60025460405160009182916001600160a01b0390911690610d30908890889088908890602401611cb6565b60408051601f198184030181529181526020820180516001600160e01b0316630f8c70a960e31b179052516108629190611cee565b600154604051600091660100000000000090046001600160a01b031690610d9290859085906024016118a4565b60408051601f198184030181529181526020820180516001600160e01b0316631039e45b60e31b17905251610dc79190611cee565b600060405180830381855af49150503d8060008114610e02576040519150601f19603f3d011682016040523d82523d6000602084013e610e07565b606091505b5050905080610e1d576040513d806000833e8082fd5b505050565b600e8181548110610e3257600080fd5b6000918252602090912060039091020180546001820180546001600160a01b03909216935090610e6190611d4f565b80601f0160208091040260200160405190810160405280929190818152602001828054610e8d90611d4f565b8015610eda5780601f10610eaf57610100808354040283529160200191610eda565b820191906000526020600020905b815481529060010190602001808311610ebd57829003601f168201915b5050506002909301549192505060ff1683565b60025460405160009182916001600160a01b0390911690610f1690879087908790602401611e62565b60408051601f198184030181529181526020820180516001600160e01b0316630a19a5f560e41b1790525161060b9190611cee565b6060600d805480602002602001604051908101604052809291908181526020016000905b82821015610b4e5760008481526020908190206040805161012081019091526005850290910180546001600160a01b03811683529192909190830190600160a01b900460ff166008811115610fc657610fc6611a32565b6008811115610fd757610fd7611a32565b8152602001600182018054610feb90611d4f565b80601f016020809104026020016040519081016040528092919081815260200182805461101790611d4f565b80156110645780601f1061103957610100808354040283529160200191611064565b820191906000526020600020905b81548152906001019060200180831161104757829003601f168201915b50505091835250506002820154602080830191909152600383015460ff8082166040850152610100820481166060850152620100008204811615156080850152630100000090910416151560a083015260049092015460c0909101529082526001929092019101610f6f565b600f81815481106110e057600080fd5b600091825260209091206004909102018054600182015460028301546003909301546001600160a01b03928316945090928216911684565b60025460405160009182916001600160a01b0390911690611143908890889088908890602401611ea5565b60408051601f198184030181529181526020820180516001600160e01b0316631856754160e31b179052516111789190611cee565b600060405180830381855af49150503d80600081146111b3576040519150601f19603f3d011682016040523d82523d6000602084013e6111b8565b606091505b50509050806111ce576040513d806000833e8082fd5b50600195945050505050565b600c6020908152600092835260408084209091529082529020805460018201805460ff808416946101009094041692919061121490611d4f565b80601f016020809104026020016040519081016040528092919081815260200182805461124090611d4f565b801561128d5780601f106112625761010080835404028352916020019161128d565b820191906000526020600020905b81548152906001019060200180831161127057829003601f168201915b5050505050905083565b600d81815481106112a757600080fd5b6000918252602090912060059091020180546001820180546001600160a01b0383169450600160a01b90920460ff1692916112e190611d4f565b80601f016020809104026020016040519081016040528092919081815260200182805461130d90611d4f565b801561135a5780601f1061132f5761010080835404028352916020019161135a565b820191906000526020600020905b81548152906001019060200180831161133d57829003601f168201915b505050600284015460038501546004909501549394909360ff808316945061010083048116935062010000830481169263010000009004169089565b60025460405160009182916001600160a01b03909116906113c39089908990899089908990602401611ed8565b60408051601f198184030181529181526020820180516001600160e01b0316636f2d58a760e11b179052516113f89190611cee565b600060405180830381855af49150503d8060008114611433576040519150601f19603f3d011682016040523d82523d6000602084013e611438565b606091505b505090506040513d806000833e8261144e578082fd5b5051979650505050505050565b80356001600160a01b038116811461147257600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261149e57600080fd5b813567ffffffffffffffff808211156114b9576114b9611477565b604051601f8301601f19908116603f011681019082821181831017156114e1576114e1611477565b816040528381528660208588010111156114fa57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000806080858703121561153057600080fd5b6115398561145b565b935060208501359250604085013567ffffffffffffffff81111561155c57600080fd5b6115688782880161148d565b949793965093946060013593505050565b600080600080600060a0868803121561159157600080fd5b61159a8661145b565b94506115a86020870161145b565b935060408601359250606086013567ffffffffffffffff8111156115cb57600080fd5b6115d78882890161148d565b95989497509295608001359392505050565b6000602082840312156115fb57600080fd5b5035919050565b60005b8381101561161d578181015183820152602001611605565b8381111561162c576000848401525b50505050565b6000815180845261164a816020860160208601611602565b601f01601f19169290920160200192915050565b6001600160a01b038616815260a06020820181905260009061168290830187611632565b6040830195909552509115156060830152151560809091015292915050565b600080600080608085870312156116b757600080fd5b6116c08561145b565b9350602085013567ffffffffffffffff808211156116dd57600080fd5b6116e98883890161148d565b945060408701359350606087013591508082111561170657600080fd5b506117138782880161148d565b91505092959194509250565b8035801515811461147257600080fd5b60008060008060008060c0878903121561174857600080fd5b6117518761145b565b9550602087013567ffffffffffffffff8082111561176e57600080fd5b61177a8a838b0161148d565b9650604089013591508082111561179057600080fd5b61179c8a838b0161148d565b95506117aa60608a0161171f565b94506080890135935060a08901359150808211156117c757600080fd5b506117d489828a0161148d565b9150509295509295509295565b6000602082840312156117f357600080fd5b6117fc8261145b565b9392505050565b6020815260006117fc6020830184611632565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561189657888303603f19018552815180516001600160a01b031684528781015160608986018190529061187682870182611632565b92890151151595890195909552509487019492509086019060010161183d565b509098975050505050505050565b82151581526040602082015260006118bf6040830184611632565b949350505050565b6000806000606084860312156118dc57600080fd5b833560ff811681146118ed57600080fd5b9250602084013567ffffffffffffffff81111561190957600080fd5b6119158682870161148d565b925050604084013590509250925092565b6000806040838503121561193957600080fd5b6119428361171f565b9150602083013567ffffffffffffffff81111561195e57600080fd5b61196a8582860161148d565b9150509250929050565b6001600160a01b038416815260606020820181905260009061199890830185611632565b90508215156040830152949350505050565b6000806000606084860312156119bf57600080fd5b833567ffffffffffffffff808211156119d757600080fd5b6119e38783880161148d565b945060208601359150808211156119f957600080fd5b611a058783880161148d565b93506040860135915080821115611a1b57600080fd5b50611a288682870161148d565b9150509250925092565b634e487b7160e01b600052602160045260246000fd5b60098110611a6657634e487b7160e01b600052602160045260246000fd5b9052565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561189657888303603f19018552815180516001600160a01b0316845261012088820151611ac48a870182611a48565b50878201518189870152611ada82870182611632565b9150506060808301518187015250608080830151611afc8288018260ff169052565b505060a08281015160ff169086015260c08083015115159086015260e0808301511515908601526101009182015191909401529386019390860190600101611a91565b60008060008060808587031215611b5557600080fd5b84359350611b656020860161171f565b9250604085013567ffffffffffffffff80821115611b8257600080fd5b611b8e8883890161148d565b9350606087013591508082111561170657600080fd5b60008060408385031215611bb757600080fd5b82359150611bc76020840161145b565b90509250929050565b83151581528215156020820152606060408201526000611bf36060830184611632565b95945050505050565b6001600160a01b038a1681526000610120611c1a602084018c611a48565b806040840152611c2c8184018b611632565b6060840199909952505060ff95861660808201529390941660a084015290151560c0830152151560e082015261010001529392505050565b600080600080600060a08688031215611c7c57600080fd5b611c858661145b565b945060208601359350611c9a6040870161145b565b9250606086013567ffffffffffffffff8111156115cb57600080fd5b60018060a01b0385168152836020820152608060408201526000611cdd6080830185611632565b905082606083015295945050505050565b60008251611d00818460208701611602565b9190910192915050565b6001600160a01b038681168252851660208201526040810184905260a060608201819052600090611d3d90830185611632565b90508260808301529695505050505050565b600181811c90821680611d6357607f821691505b60208210811415611d8457634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160a01b0385168152608060208201819052600090611dae90830186611632565b8460408401528281036060840152611dc68185611632565b979650505050505050565b6001600160a01b038716815260c060208201819052600090611df590830188611632565b8281036040840152611e078188611632565b9050851515606084015284608084015282810360a0840152611e298185611632565b9998505050505050505050565b60ff84168152606060208201526000611e526060830185611632565b9050826040830152949350505050565b606081526000611e756060830186611632565b8281036020840152611e878186611632565b90508281036040840152611e9b8185611632565b9695505050505050565b8481528315156020820152608060408201526000611ec66080830185611632565b8281036060840152611dc68185611632565b6001600160a01b038681168252602082018690528416604082015260a060608201819052600090611d3d9083018561163256fea2646970667358221220774dfed0272bcb445434ffd0a3c91461c5937b4b28941dd44e52515994e131fa64736f6c634300080c0033",
  "deployedSourceMap": "254:14215:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12302:782;;;;;;:::i;:::-;;:::i;:::-;;;1732:25:27;;;1720:2;1705:18;12302:782:18;;;;;;;;892:23:23;;;;;-1:-1:-1;;;;;892:23:23;;;;;;-1:-1:-1;;;;;1947:32:27;;;1929:51;;1917:2;1902:18;892:23:23;1768:218:27;559:28:23;;;;;;;;;;;;;;;2243:4:27;2231:17;;;2213:36;;2201:2;2186:18;559:28:23;2071:184:27;11448:848:18;;;;;;:::i;:::-;;:::i;460:21:23:-;;;;;;;;;779:37;;;;;;921:27;;;;;-1:-1:-1;;;;;921:27:23;;;13090:778:18;;;;;;:::i;:::-;;:::i;1382:25:23:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;5509:789:18:-;;;;;;:::i;:::-;;:::i;4327:906::-;;;;;;:::i;:::-;;:::i;1332:44:23:-;;;;;;:::i;:::-;;:::i;954:54::-;;;;;;:::i;:::-;;;;;;;;;;;;;;320:24;;;:::i;:::-;;;;;;;:::i;14343:124:18:-;;;:::i;:::-;;;;;;;:::i;2161:643::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;835:23:23:-;;;;;-1:-1:-1;;;;;835:23:23;;;8953:732:18;;;;;;:::i;:::-;;:::i;1034:46:23:-;;;;;;:::i;:::-;;;;;;;;;;;;;;6643:766:18;;;;;;:::i;:::-;;:::i;10837:605::-;;;;;;:::i;:::-;;:::i;:::-;;864:22:23;;;;;-1:-1:-1;;;;;864:22:23;;;1234:42;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;517:36::-;;;;;;;;;;;;9985:714:18;;;;;;:::i;:::-;;:::i;13906:100::-;13984:8;:15;13906:100;;14112:109;;;:::i;:::-;;;;;;;:::i;1282:44:23:-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;13240:15:27;;;13222:34;;13287:2;13272:18;;13265:34;;;;13335:15;;;13315:18;;;13308:43;;;;13387:15;;;13382:2;13367:18;;13360:43;13171:3;13156:19;1282:44:23;12953:456:27;3137:754:18;;;;;;:::i;:::-;;:::i;:::-;;;14263:14:27;;14256:22;14238:41;;14226:2;14211:18;3137:754:18;14098:187:27;1086:67:23;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;751:22::-;;;;;-1:-1:-1;;;;;751:22:23;;;1195:33;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::i;7754:838:18:-;;;;;;:::i;:::-;;:::i;487:24:23:-;;;;;;;;;;;;593:31;;;;;;;;;;;;643:24;;;;;;;;;;;;12302:782:18;12539:13;;12579:222;;12490:7;;;;-1:-1:-1;;;;;12539:13:18;;;;12579:222;;12686:12;;12716:13;;12747:12;;12777:10;;12579:222;;;:::i;:::-;;;;-1:-1:-1;;12579:222:18;;;;;;;;;;;;;;-1:-1:-1;;;;;12579:222:18;-1:-1:-1;;;12579:222:18;;;12539:272;;;12579:222;12539:272;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12514:297;;;12862:4;12856:11;12892:16;12944:4;12941:1;12936:3;12921:28;12973:13;12962:76;;13019:4;13014:3;13007:17;12962:76;13063:4;13058:3;13051:17;11448:848;11714:13;;11754:259;;11665:7;;;;-1:-1:-1;;;;;11714:13:18;;;;11754:259;;11869:12;;11899:11;;11928:13;;11959:12;;11989:10;;11754:259;;;:::i;:::-;;;;-1:-1:-1;;11754:259:18;;;;;;;;;;;;;;-1:-1:-1;;;;;11754:259:18;-1:-1:-1;;;11754:259:18;;;11714:309;;;11754:259;11714:309;:::i;13090:778::-;13325:13;;13365:220;;13276:7;;;;-1:-1:-1;;;;;13325:13:18;;;;13365:220;;13471:11;;13500:13;;13531:12;;13561:10;;13365:220;;;:::i;:::-;;;;-1:-1:-1;;13365:220:18;;;;;;;;;;;;;;-1:-1:-1;;;;;13365:220:18;-1:-1:-1;;;13365:220:18;;;13325:270;;;13365:220;13325:270;:::i;1382:25:23:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1382:25:23;;;;-1:-1:-1;1382:25:23;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1382:25:23;;;;;;;;;;;;;;;;;-1:-1:-1;1382:25:23;;;;;;:::o;5509:789:18:-;5755:13;;5795:217;;5699:14;;;;-1:-1:-1;;;;;5755:13:18;;;;5795:217;;5901:11;;5930:12;;5960:10;;5988;;5795:217;;;:::i;:::-;;;;-1:-1:-1;;5795:217:18;;;;;;;;;;;;;;-1:-1:-1;;;;;5795:217:18;-1:-1:-1;;;5795:217:18;;;5755:267;;;5795:217;5755:267;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5730:292;;;6073:4;6067:11;6103:16;6155:4;6152:1;6147:3;6132:28;6184:13;6173:76;;6230:4;6225:3;6218:17;6173:76;-1:-1:-1;6272:10:18;;5509:789;-1:-1:-1;;;;;;5509:789:18:o;4327:906::-;4627:13;;4667:280;;4571:14;;;;-1:-1:-1;;;;;4627:13:18;;;;4667:280;;4785:11;;4814:5;;4837:12;;4867:10;;4895;;4923;;4667:280;;;:::i;:::-;;;;-1:-1:-1;;4667:280:18;;;;;;;;;;;;;;-1:-1:-1;;;;;4667:280:18;-1:-1:-1;;;4667:280:18;;;4627:330;;;4667:280;4627:330;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4602:355;;;5008:4;5002:11;5038:16;5090:4;5087:1;5082:3;5067:28;5119:13;5108:76;;5165:4;5160:3;5153:17;5108:76;-1:-1:-1;5207:10:18;;4327:906;-1:-1:-1;;;;;;;;4327:906:18:o;1332:44:23:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1332:44:23;:::o;320:24::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14343:124:18:-;14399:23;14442:18;14435:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14435:25:18;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;14435:25:18;;;-1:-1:-1;;14435:25:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14343:124;:::o;2161:643::-;2350:13;;2390:99;;;;;1732:25:27;;;2254:11:18;;2279:21;;2254:11;;-1:-1:-1;;;;;2350:13:18;;1705:18:27;;2390:99:18;;;-1:-1:-1;;2390:99:18;;;;;;;;;;;;;;-1:-1:-1;;;;;2390:99:18;-1:-1:-1;;;2390:99:18;;;2350:149;;;2390:99;2350:149;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2325:174;;;2515:13;2510:232;;2589:4;2583:11;2623:16;2679:4;2676:1;2671:3;2656:28;2713:4;2708:3;2701:17;2510:232;2761:4;2752:45;;;;;;;;;;;;;;;;;;;;;;2161:643;;;:::o;8953:732::-;9171:13;;9211:188;;9115:14;;;;-1:-1:-1;;;;;9171:13:18;;;;9211:188;;9307:20;;9345:12;;9375:10;;9211:188;;;:::i;:::-;;;;-1:-1:-1;;9211:188:18;;;;;;;;;;;;;;-1:-1:-1;;;;;9211:188:18;-1:-1:-1;;;9211:188:18;;;9171:238;;;9211:188;9171:238;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9146:263;;;9460:4;9454:11;9490:16;9542:4;9539:1;9534:3;9519:28;9571:13;9560:76;;9617:4;9612:3;9605:17;9560:76;-1:-1:-1;9659:10:18;;8953:732;-1:-1:-1;;;;;8953:732:18:o;6643:766::-;6874:13;;6914:209;;6818:14;;;;-1:-1:-1;;;;;6874:13:18;;;;6914:209;;7017:3;;7038:13;;7069:12;;7099:10;;6914:209;;;:::i;:::-;;;;-1:-1:-1;;6914:209:18;;;;;;;;;;;;;;-1:-1:-1;;;;;6914:209:18;-1:-1:-1;;;6914:209:18;;;6874:259;;;6914:209;6874:259;:::i;10837:605::-;10990:17;;11034:149;;10966:18;;10990:17;;;-1:-1:-1;;;;;10990:17:18;;11034:149;;11130:11;;11159:10;;11034:149;;;:::i;:::-;;;;-1:-1:-1;;11034:149:18;;;;;;;;;;;;;;-1:-1:-1;;;;;11034:149:18;-1:-1:-1;;;11034:149:18;;;10990:203;;;11034:149;10990:203;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10965:228;;;11209:13;11204:232;;11283:4;11277:11;11317:16;11373:4;11370:1;11365:3;11350:28;11407:4;11402:3;11395:17;11204:232;10955:487;10837:605;;:::o;1234:42:23:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1234:42:23;;;;-1:-1:-1;1234:42:23;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1234:42:23;;;;;;;-1:-1:-1;;1234:42:23;;;:::o;9985:714:18:-;10199:13;;10239:177;;10150:7;;;;-1:-1:-1;;;;;10199:13:18;;;;10239:177;;10339:5;;10362:12;;10392:10;;10239:177;;;:::i;:::-;;;;-1:-1:-1;;10239:177:18;;;;;;;;;;;;;;-1:-1:-1;;;;;10239:177:18;-1:-1:-1;;;10239:177:18;;;10199:227;;;10239:177;10199:227;:::i;14112:109::-;14162:20;14202:12;14195:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14195:19:18;;;;;;;;;;;;-1:-1:-1;;;14195:19:18;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;14195:19:18;;;-1:-1:-1;;14195:19:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1282:44:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1282:44:23;;;;-1:-1:-1;1282:44:23;;;;;;;:::o;3137:754:18:-;3362:13;;3402:208;;3316:4;;;;-1:-1:-1;;;;;3362:13:18;;;;3402:208;;3503:7;;3528:8;;3554:14;;3586:10;;3402:208;;;:::i;:::-;;;;-1:-1:-1;;3402:208:18;;;;;;;;;;;;;;-1:-1:-1;;;;;3402:208:18;-1:-1:-1;;;3402:208:18;;;3362:258;;;3402:208;3362:258;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3337:283;;;3636:13;3631:232;;3710:4;3704:11;3744:16;3800:4;3797:1;3792:3;3777:28;3834:4;3829:3;3822:17;3631:232;-1:-1:-1;3880:4:18;;3137:754;-1:-1:-1;;;;;3137:754:18:o;1086:67:23:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1195:33::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1195:33:23;;;-1:-1:-1;;;;1195:33:23;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1195:33:23;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1195:33:23;;;;;;-1:-1:-1;1195:33:23;;;;;;;;;;;;:::o;7754:838:18:-;8017:13;;8057:249;;7961:14;;;;-1:-1:-1;;;;;8017:13:18;;;;8057:249;;8170:3;;8191:13;;8222:12;;8252;;8282:10;;8057:249;;;:::i;:::-;;;;-1:-1:-1;;8057:249:18;;;;;;;;;;;;;;-1:-1:-1;;;;;8057:249:18;-1:-1:-1;;;8057:249:18;;;8017:299;;;8057:249;8017:299;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7992:324;;;8367:4;8361:11;8397:16;8449:4;8446:1;8441:3;8426:28;8478:13;8467:76;;8524:4;8519:3;8512:17;8467:76;-1:-1:-1;8566:10:18;;7754:838;-1:-1:-1;;;;;;;7754:838:18:o;14:173:27:-;82:20;;-1:-1:-1;;;;;131:31:27;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:127::-;253:10;248:3;244:20;241:1;234:31;284:4;281:1;274:15;308:4;305:1;298:15;324:719;367:5;420:3;413:4;405:6;401:17;397:27;387:55;;438:1;435;428:12;387:55;474:6;461:20;500:18;537:2;533;530:10;527:36;;;543:18;;:::i;:::-;618:2;612:9;586:2;672:13;;-1:-1:-1;;668:22:27;;;692:2;664:31;660:40;648:53;;;716:18;;;736:22;;;713:46;710:72;;;762:18;;:::i;:::-;802:10;798:2;791:22;837:2;829:6;822:18;883:3;876:4;871:2;863:6;859:15;855:26;852:35;849:55;;;900:1;897;890:12;849:55;964:2;957:4;949:6;945:17;938:4;930:6;926:17;913:54;1011:1;1004:4;999:2;991:6;987:15;983:26;976:37;1031:6;1022:15;;;;;;324:719;;;;:::o;1048:533::-;1144:6;1152;1160;1168;1221:3;1209:9;1200:7;1196:23;1192:33;1189:53;;;1238:1;1235;1228:12;1189:53;1261:29;1280:9;1261:29;:::i;:::-;1251:39;;1337:2;1326:9;1322:18;1309:32;1299:42;;1392:2;1381:9;1377:18;1364:32;1419:18;1411:6;1408:30;1405:50;;;1451:1;1448;1441:12;1405:50;1474;1516:7;1507:6;1496:9;1492:22;1474:50;:::i;:::-;1048:533;;;;-1:-1:-1;1464:60:27;;1571:2;1556:18;1543:32;;-1:-1:-1;;;1048:533:27:o;2260:608::-;2365:6;2373;2381;2389;2397;2450:3;2438:9;2429:7;2425:23;2421:33;2418:53;;;2467:1;2464;2457:12;2418:53;2490:29;2509:9;2490:29;:::i;:::-;2480:39;;2538:38;2572:2;2561:9;2557:18;2538:38;:::i;:::-;2528:48;;2623:2;2612:9;2608:18;2595:32;2585:42;;2678:2;2667:9;2663:18;2650:32;2705:18;2697:6;2694:30;2691:50;;;2737:1;2734;2727:12;2691:50;2760;2802:7;2793:6;2782:9;2778:22;2760:50;:::i;:::-;2260:608;;;;-1:-1:-1;2260:608:27;;2857:3;2842:19;2829:33;;2260:608;-1:-1:-1;;;2260:608:27:o;3055:180::-;3114:6;3167:2;3155:9;3146:7;3142:23;3138:32;3135:52;;;3183:1;3180;3173:12;3135:52;-1:-1:-1;3206:23:27;;3055:180;-1:-1:-1;3055:180:27:o;3349:258::-;3421:1;3431:113;3445:6;3442:1;3439:13;3431:113;;;3521:11;;;3515:18;3502:11;;;3495:39;3467:2;3460:10;3431:113;;;3562:6;3559:1;3556:13;3553:48;;;3597:1;3588:6;3583:3;3579:16;3572:27;3553:48;;3349:258;;;:::o;3612:::-;3654:3;3692:5;3686:12;3719:6;3714:3;3707:19;3735:63;3791:6;3784:4;3779:3;3775:14;3768:4;3761:5;3757:16;3735:63;:::i;:::-;3852:2;3831:15;-1:-1:-1;;3827:29:27;3818:39;;;;3859:4;3814:50;;3612:258;-1:-1:-1;;3612:258:27:o;3971:553::-;-1:-1:-1;;;;;4220:32:27;;4202:51;;4240:3;4284:2;4269:18;;4262:31;;;-1:-1:-1;;4310:46:27;;4336:19;;4328:6;4310:46;:::i;:::-;4387:2;4372:18;;4365:34;;;;-1:-1:-1;4442:14:27;;4435:22;4430:2;4415:18;;4408:50;4502:14;4495:22;4489:3;4474:19;;;4467:51;4302:54;3971:553;-1:-1:-1;;3971:553:27:o;4529:685::-;4634:6;4642;4650;4658;4711:3;4699:9;4690:7;4686:23;4682:33;4679:53;;;4728:1;4725;4718:12;4679:53;4751:29;4770:9;4751:29;:::i;:::-;4741:39;;4831:2;4820:9;4816:18;4803:32;4854:18;4895:2;4887:6;4884:14;4881:34;;;4911:1;4908;4901:12;4881:34;4934:50;4976:7;4967:6;4956:9;4952:22;4934:50;:::i;:::-;4924:60;;5031:2;5020:9;5016:18;5003:32;4993:42;;5088:2;5077:9;5073:18;5060:32;5044:48;;5117:2;5107:8;5104:16;5101:36;;;5133:1;5130;5123:12;5101:36;;5156:52;5200:7;5189:8;5178:9;5174:24;5156:52;:::i;:::-;5146:62;;;4529:685;;;;;;;:::o;5219:160::-;5284:20;;5340:13;;5333:21;5323:32;;5313:60;;5369:1;5366;5359:12;5384:955;5514:6;5522;5530;5538;5546;5554;5607:3;5595:9;5586:7;5582:23;5578:33;5575:53;;;5624:1;5621;5614:12;5575:53;5647:29;5666:9;5647:29;:::i;:::-;5637:39;;5727:2;5716:9;5712:18;5699:32;5750:18;5791:2;5783:6;5780:14;5777:34;;;5807:1;5804;5797:12;5777:34;5830:50;5872:7;5863:6;5852:9;5848:22;5830:50;:::i;:::-;5820:60;;5933:2;5922:9;5918:18;5905:32;5889:48;;5962:2;5952:8;5949:16;5946:36;;;5978:1;5975;5968:12;5946:36;6001:52;6045:7;6034:8;6023:9;6019:24;6001:52;:::i;:::-;5991:62;;6072:35;6103:2;6092:9;6088:18;6072:35;:::i;:::-;6062:45;;6154:3;6143:9;6139:19;6126:33;6116:43;;6212:3;6201:9;6197:19;6184:33;6168:49;;6242:2;6232:8;6229:16;6226:36;;;6258:1;6255;6248:12;6226:36;;6281:52;6325:7;6314:8;6303:9;6299:24;6281:52;:::i;:::-;6271:62;;;5384:955;;;;;;;;:::o;6344:186::-;6403:6;6456:2;6444:9;6435:7;6431:23;6427:32;6424:52;;;6472:1;6469;6462:12;6424:52;6495:29;6514:9;6495:29;:::i;:::-;6485:39;6344:186;-1:-1:-1;;;6344:186:27:o;6535:220::-;6684:2;6673:9;6666:21;6647:4;6704:45;6745:2;6734:9;6730:18;6722:6;6704:45;:::i;6760:1199::-;6966:4;6995:2;7035;7024:9;7020:18;7065:2;7054:9;7047:21;7088:6;7123;7117:13;7154:6;7146;7139:22;7180:2;7170:12;;7213:2;7202:9;7198:18;7191:25;;7275:2;7265:6;7262:1;7258:14;7247:9;7243:30;7239:39;7313:2;7305:6;7301:15;7334:1;7344:586;7358:6;7355:1;7352:13;7344:586;;;7423:22;;;-1:-1:-1;;7419:36:27;7407:49;;7479:13;;7551:9;;-1:-1:-1;;;;;7547:35:27;7532:51;;7622:11;;;7616:18;7515:4;7654:15;;;7647:27;;;7515:4;7701:48;7733:15;;;7616:18;7701:48;:::i;:::-;7806:11;;;7800:18;7793:26;7786:34;7769:15;;;7762:59;;;;-1:-1:-1;7908:12:27;;;;7687:62;-1:-1:-1;7873:15:27;;;;7380:1;7373:9;7344:586;;;-1:-1:-1;7947:6:27;;6760:1199;-1:-1:-1;;;;;;;;6760:1199:27:o;7964:301::-;8149:6;8142:14;8135:22;8124:9;8117:41;8194:2;8189;8178:9;8174:18;8167:30;8098:4;8214:45;8255:2;8244:9;8240:18;8232:6;8214:45;:::i;:::-;8206:53;7964:301;-1:-1:-1;;;;7964:301:27:o;8502:547::-;8587:6;8595;8603;8656:2;8644:9;8635:7;8631:23;8627:32;8624:52;;;8672:1;8669;8662:12;8624:52;8711:9;8698:23;8761:4;8754:5;8750:16;8743:5;8740:27;8730:55;;8781:1;8778;8771:12;8730:55;8804:5;-1:-1:-1;8860:2:27;8845:18;;8832:32;8887:18;8876:30;;8873:50;;;8919:1;8916;8909:12;8873:50;8942;8984:7;8975:6;8964:9;8960:22;8942:50;:::i;:::-;8932:60;;;9039:2;9028:9;9024:18;9011:32;9001:42;;8502:547;;;;;:::o;9054:389::-;9128:6;9136;9189:2;9177:9;9168:7;9164:23;9160:32;9157:52;;;9205:1;9202;9195:12;9157:52;9228:26;9244:9;9228:26;:::i;:::-;9218:36;;9305:2;9294:9;9290:18;9277:32;9332:18;9324:6;9321:30;9318:50;;;9364:1;9361;9354:12;9318:50;9387;9429:7;9420:6;9409:9;9405:22;9387:50;:::i;:::-;9377:60;;;9054:389;;;;;:::o;9448:398::-;-1:-1:-1;;;;;9647:32:27;;9629:51;;9716:2;9711;9696:18;;9689:30;;;-1:-1:-1;;9736:45:27;;9762:18;;9754:6;9736:45;:::i;:::-;9728:53;;9831:6;9824:14;9817:22;9812:2;9801:9;9797:18;9790:50;9448:398;;;;;;:::o;9851:742::-;9957:6;9965;9973;10026:2;10014:9;10005:7;10001:23;9997:32;9994:52;;;10042:1;10039;10032:12;9994:52;10082:9;10069:23;10111:18;10152:2;10144:6;10141:14;10138:34;;;10168:1;10165;10158:12;10138:34;10191:50;10233:7;10224:6;10213:9;10209:22;10191:50;:::i;:::-;10181:60;;10294:2;10283:9;10279:18;10266:32;10250:48;;10323:2;10313:8;10310:16;10307:36;;;10339:1;10336;10329:12;10307:36;10362:52;10406:7;10395:8;10384:9;10380:24;10362:52;:::i;:::-;10352:62;;10467:2;10456:9;10452:18;10439:32;10423:48;;10496:2;10486:8;10483:16;10480:36;;;10512:1;10509;10502:12;10480:36;;10535:52;10579:7;10568:8;10557:9;10553:24;10535:52;:::i;:::-;10525:62;;;9851:742;;;;;:::o;10598:127::-;10659:10;10654:3;10650:20;10647:1;10640:31;10690:4;10687:1;10680:15;10714:4;10711:1;10704:15;10730:240;10814:1;10807:5;10804:12;10794:143;;10859:10;10854:3;10850:20;10847:1;10840:31;10894:4;10891:1;10884:15;10922:4;10919:1;10912:15;10794:143;10946:18;;10730:240::o;10975:1973::-;11175:4;11204:2;11244;11233:9;11229:18;11274:2;11263:9;11256:21;11297:6;11332;11326:13;11363:6;11355;11348:22;11389:2;11379:12;;11422:2;11411:9;11407:18;11400:25;;11484:2;11474:6;11471:1;11467:14;11456:9;11452:30;11448:39;11522:2;11514:6;11510:15;11543:1;11553:1366;11567:6;11564:1;11561:13;11553:1366;;;11632:22;;;-1:-1:-1;;11628:36:27;11616:49;;11688:13;;11762:9;;-1:-1:-1;;;;;3306:31:27;3294:44;;11724:6;11827:2;11823;11819:11;11813:18;11844:59;11899:2;11891:6;11887:15;11873:12;11844:59;:::i;:::-;;11952:2;11948;11944:11;11938:18;11993:2;11988;11980:6;11976:15;11969:27;12023:50;12069:2;12061:6;12057:15;12041:14;12023:50;:::i;:::-;12009:64;;;12096:4;12151:2;12147;12143:11;12137:18;12132:2;12124:6;12120:15;12113:43;;12179:4;12232:2;12228;12224:11;12218:18;12249:49;12294:2;12286:6;12282:15;12266:14;2058:4;2047:16;2035:29;;1991:75;12249:49;-1:-1:-1;;12321:4:27;12366:11;;;12360:18;2058:4;2047:16;12424:15;;;2035:29;12463:4;12508:11;;;12502:18;3945:13;3938:21;12565:15;;;3926:34;12604:4;12649:11;;;12643:18;3945:13;3938:21;12706:15;;;3926:34;12746:6;12796:12;;;12790:19;12772:16;;;;12765:45;12897:12;;;;12862:15;;;;11589:1;11582:9;11553:1366;;13414:679;13516:6;13524;13532;13540;13593:3;13581:9;13572:7;13568:23;13564:33;13561:53;;;13610:1;13607;13600:12;13561:53;13646:9;13633:23;13623:33;;13675:35;13706:2;13695:9;13691:18;13675:35;:::i;:::-;13665:45;;13761:2;13750:9;13746:18;13733:32;13784:18;13825:2;13817:6;13814:14;13811:34;;;13841:1;13838;13831:12;13811:34;13864:50;13906:7;13897:6;13886:9;13882:22;13864:50;:::i;:::-;13854:60;;13967:2;13956:9;13952:18;13939:32;13923:48;;13996:2;13986:8;13983:16;13980:36;;;14012:1;14009;14002:12;14290:254;14358:6;14366;14419:2;14407:9;14398:7;14394:23;14390:32;14387:52;;;14435:1;14432;14425:12;14387:52;14471:9;14458:23;14448:33;;14500:38;14534:2;14523:9;14519:18;14500:38;:::i;:::-;14490:48;;14290:254;;;;;:::o;14549:382::-;14756:6;14749:14;14742:22;14731:9;14724:41;14815:6;14808:14;14801:22;14796:2;14785:9;14781:18;14774:50;14860:2;14855;14844:9;14840:18;14833:30;14705:4;14880:45;14921:2;14910:9;14906:18;14898:6;14880:45;:::i;:::-;14872:53;14549:382;-1:-1:-1;;;;;14549:382:27:o;15144:912::-;-1:-1:-1;;;;;15534:32:27;;15516:51;;15475:4;15504:3;15576:56;15628:2;15613:18;;15605:6;15576:56;:::i;:::-;15668:2;15663;15652:9;15648:18;15641:30;15688:45;15729:2;15718:9;15714:18;15706:6;15688:45;:::i;:::-;15764:2;15749:18;;15742:34;;;;-1:-1:-1;;15825:4:27;15813:17;;;15807:3;15792:19;;15785:46;15868:17;;;;15862:3;15847:19;;15840:46;15930:14;;15923:22;15917:3;15902:19;;15895:51;15990:14;15983:22;15977:3;15962:19;;15955:51;16037:3;16022:19;16015:35;15680:53;15144:912;-1:-1:-1;;;15144:912:27:o;16061:608::-;16166:6;16174;16182;16190;16198;16251:3;16239:9;16230:7;16226:23;16222:33;16219:53;;;16268:1;16265;16258:12;16219:53;16291:29;16310:9;16291:29;:::i;:::-;16281:39;;16367:2;16356:9;16352:18;16339:32;16329:42;;16390:38;16424:2;16413:9;16409:18;16390:38;:::i;:::-;16380:48;;16479:2;16468:9;16464:18;16451:32;16506:18;16498:6;16495:30;16492:50;;;16538:1;16535;16528:12;16674:461;16936:1;16932;16927:3;16923:11;16919:19;16911:6;16907:32;16896:9;16889:51;16976:6;16971:2;16960:9;16956:18;16949:34;17019:3;17014:2;17003:9;16999:18;16992:31;16870:4;17040:46;17081:3;17070:9;17066:19;17058:6;17040:46;:::i;:::-;17032:54;;17122:6;17117:2;17106:9;17102:18;17095:34;16674:461;;;;;;;:::o;17140:274::-;17269:3;17307:6;17301:13;17323:53;17369:6;17364:3;17357:4;17349:6;17345:17;17323:53;:::i;:::-;17392:16;;;;;17140:274;-1:-1:-1;;17140:274:27:o;17419:563::-;-1:-1:-1;;;;;17718:15:27;;;17700:34;;17770:15;;17765:2;17750:18;;17743:43;17817:2;17802:18;;17795:34;;;17680:3;17860:2;17845:18;;17838:31;;;17643:4;;17886:46;;17912:19;;17904:6;17886:46;:::i;:::-;17878:54;;17969:6;17963:3;17952:9;17948:19;17941:35;17419:563;;;;;;;;:::o;17987:380::-;18066:1;18062:12;;;;18109;;;18130:61;;18184:4;18176:6;18172:17;18162:27;;18130:61;18237:2;18229:6;18226:14;18206:18;18203:38;18200:161;;;18283:10;18278:3;18274:20;18271:1;18264:31;18318:4;18315:1;18308:15;18346:4;18343:1;18336:15;18200:161;;17987:380;;;:::o;18372:551::-;-1:-1:-1;;;;;18623:32:27;;18605:51;;18692:3;18687:2;18672:18;;18665:31;;;-1:-1:-1;;18719:46:27;;18745:19;;18737:6;18719:46;:::i;:::-;18801:6;18796:2;18785:9;18781:18;18774:34;18856:9;18848:6;18844:22;18839:2;18828:9;18824:18;18817:50;18884:33;18910:6;18902;18884:33;:::i;:::-;18876:41;18372:551;-1:-1:-1;;;;;;;18372:551:27:o;18928:797::-;-1:-1:-1;;;;;19249:32:27;;19231:51;;19318:3;19313:2;19298:18;;19291:31;;;-1:-1:-1;;19345:46:27;;19371:19;;19363:6;19345:46;:::i;:::-;19439:9;19431:6;19427:22;19422:2;19411:9;19407:18;19400:50;19473:33;19499:6;19491;19473:33;:::i;:::-;19459:47;;19556:6;19549:14;19542:22;19537:2;19526:9;19522:18;19515:50;19602:6;19596:3;19585:9;19581:19;19574:35;19658:9;19650:6;19646:22;19640:3;19629:9;19625:19;19618:51;19686:33;19712:6;19704;19686:33;:::i;:::-;19678:41;18928:797;-1:-1:-1;;;;;;;;;18928:797:27:o;19730:369::-;19943:4;19935:6;19931:17;19920:9;19913:36;19985:2;19980;19969:9;19965:18;19958:30;19894:4;20005:45;20046:2;20035:9;20031:18;20023:6;20005:45;:::i;:::-;19997:53;;20086:6;20081:2;20070:9;20066:18;20059:34;19730:369;;;;;;:::o;20408:544::-;20651:2;20640:9;20633:21;20614:4;20677:45;20718:2;20707:9;20703:18;20695:6;20677:45;:::i;:::-;20770:9;20762:6;20758:22;20753:2;20742:9;20738:18;20731:50;20804:33;20830:6;20822;20804:33;:::i;:::-;20790:47;;20885:9;20877:6;20873:22;20868:2;20857:9;20853:18;20846:50;20913:33;20939:6;20931;20913:33;:::i;:::-;20905:41;20408:544;-1:-1:-1;;;;;;20408:544:27:o;20957:535::-;21202:6;21191:9;21184:25;21259:6;21252:14;21245:22;21240:2;21229:9;21225:18;21218:50;21304:3;21299:2;21288:9;21284:18;21277:31;21165:4;21331:46;21372:3;21361:9;21357:19;21349:6;21331:46;:::i;:::-;21425:9;21417:6;21413:22;21408:2;21397:9;21393:18;21386:50;21453:33;21479:6;21471;21453:33;:::i;21497:563::-;-1:-1:-1;;;;;21796:15:27;;;21778:34;;21843:2;21828:18;;21821:34;;;21891:15;;21886:2;21871:18;;21864:43;21758:3;21938:2;21923:18;;21916:31;;;21721:4;;21964:46;;21990:19;;21982:6;21964:46;:::i",
  "language": "Solidity",
  "natspec": {
    "author": "Leonardo Urrego",
    "events": {
      "evtProposal(uint8,uint256,uint8,string)": {
        "notice": "### Contract events ###"
      }
    },
    "kind": "dev",
    "methods": {
      "AcceptRejectInvitation(bool,bytes)": {
        "notice": "For an user that have an invitation pending",
        "params": {
          "_acceptance": "True for accept the invitation"
        }
      },
      "ExecProp(uint256)": {
        "details": "Normally is called internally after each vote",
        "notice": "Execute (or reject) a proposal computing the votes and the governance model",
        "params": {
          "_propId": "ID of the proposal, based on `arrProposals`"
        },
        "returns": {
          "message": "result of the transaction",
          "status": "True if the proposal can be execute, false in other cases"
        }
      },
      "GetArrDataPropAddUser()": {
        "notice": "Get complete array of arrDataPropAddUser",
        "returns": {
          "_0": "arrDataPropAddUser the array with all data"
        }
      },
      "GetArrUsersLength()": {
        "notice": "Length of array"
      },
      "GetProposalList()": {
        "notice": "The list of all Proposals",
        "returns": {
          "_0": "arrProposals the array with all proposals"
        }
      },
      "HOUSE_NAME()": {
        "notice": "### CLH Public Variables ###"
      },
      "PropGovRules(uint8,string,uint256)": {
        "details": "When execute this proposal the new values will be set",
        "notice": "Generate a new proposal for change some governance parameters",
        "params": {
          "_description": "About the new proposal ",
          "_newApprovPercentage": "The new percentaje for accept or reject a proposal"
        },
        "returns": {
          "propId": "ID of the new proposal, based on `arrProposals`"
        }
      },
      "PropInviteUser(address,string,string,bool,uint256,bytes)": {
        "details": "the execution of this proposal only create an invitation ",
        "notice": "Generate a new proposal to invite a new user",
        "params": {
          "_description": "A text for the proposal",
          "_isManager": "True if is for a manager",
          "_name": "Can be the nickname or other reference to the User",
          "_walletAddr": "Address of the new user"
        },
        "returns": {
          "propId": "ID of the new proposal, based on `arrProposals`"
        }
      },
      "PropRemoveUser(address,string,uint256,bytes)": {
        "details": "The user can be a managaer",
        "notice": "Generate a new proposal for remove a user",
        "params": {
          "_description": "About the proposal",
          "_walletAddr": "user Address to be removed"
        },
        "returns": {
          "propId": "ID of the new proposal, based on `arrProposals`"
        }
      },
      "PropRequestToJoin(string,string,bytes)": {
        "details": "Only avaiable in public CLH",
        "notice": "Generate a proposal from a user that want to join to the CLH",
        "params": {
          "_description": "About the request",
          "_name": "Nickname or other user identification"
        },
        "returns": {
          "_0": "propId ID of the new proposal, based on `arrProposals`"
        }
      },
      "PropTxERC20(address,uint256,address,string,uint256)": {
        "details": "When execute this proposal, the transfer is made",
        "notice": "generate a new proposal to transfer ETH in weis",
        "params": {
          "_amountOutCLV": "Amount to transfer (in wei)",
          "_description": "About this proposal",
          "_to": "Recipient address"
        },
        "returns": {
          "propId": "ID of the new proposal, based on `arrProposals`"
        }
      },
      "PropTxWei(address,uint256,string,uint256)": {
        "details": "When execute this proposal, the transfer is made",
        "notice": "generate a new proposal to transfer ETH in weis",
        "params": {
          "_amountOutCLV": "Amount to transfer (in wei)",
          "_description": "About this proposal",
          "_to": "Recipient address"
        },
        "returns": {
          "propId": "ID of the new proposal, based on `arrProposals`"
        }
      },
      "VoteProposal(uint256,bool,string,bytes)": {
        "details": "After vote the proposal automatically try to be executed",
        "notice": "Used to vote a proposal",
        "params": {
          "_justification": "About your vote",
          "_propId": "ID of the proposal, based on `arrProposals`",
          "_support": "True for accept, false to reject"
        },
        "returns": {
          "_0": "true is the vote can be stored"
        }
      },
      "constructor": {
        "details": "Some parameters can be ignored depending on the governance model",
        "notice": "Create a new CLH",
        "params": {
          "_CLC": "Array for CL Contracts see `enum eCLC`",
          "_ManagerWallets": "Whitelist of address for invitate as managers",
          "_govModel": "keccak256 hash of the governance model, see the __GOV_* constans",
          "_govRules": "Array for goverment rules see `enum gRule`",
          "_houseName": "Name given by the owner",
          "_housePrivate": "If is set to 1, the CLH is set to private",
          "_owner": "The address of the deployed wallet"
        }
      }
    },
    "notice": "This contract for test only the most basic interactions",
    "title": "Contract to implement and test the basic fuctions of CLHouses",
    "version": 1
  },
  "offset": [
    254,
    14469
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x21C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70FF918C GT PUSH2 0x125 JUMPI DUP1 PUSH4 0xBAA4D5E9 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xCB85669C GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xCB85669C EQ PUSH2 0x533 JUMPI DUP1 PUSH4 0xDE5AB14E EQ PUSH2 0x55B JUMPI DUP1 PUSH4 0xE68777D7 EQ PUSH2 0x56E JUMPI DUP1 PUSH4 0xE810A58E EQ PUSH2 0x580 JUMPI DUP1 PUSH4 0xF00D6274 EQ PUSH2 0x595 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBAA4D5E9 EQ PUSH2 0x495 JUMPI DUP1 PUSH4 0xC2B3AA08 EQ PUSH2 0x4DB JUMPI DUP1 PUSH4 0xC347D2FD EQ PUSH2 0x4FE JUMPI DUP1 PUSH4 0xCADA7F19 EQ PUSH2 0x520 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x96A3DD84 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x96A3DD84 EQ PUSH2 0x430 JUMPI DUP1 PUSH4 0x9C630A88 EQ PUSH2 0x452 JUMPI DUP1 PUSH4 0xA19A5F50 EQ PUSH2 0x465 JUMPI DUP1 PUSH4 0xA693649A EQ PUSH2 0x478 JUMPI DUP1 PUSH4 0xB4C62192 EQ PUSH2 0x480 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70FF918C EQ PUSH2 0x3D5 JUMPI DUP1 PUSH4 0x7C638548 EQ PUSH2 0x3F5 JUMPI DUP1 PUSH4 0x81CF22D8 EQ PUSH2 0x408 JUMPI DUP1 PUSH4 0x9360BFAD EQ PUSH2 0x41D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2A57EF84 GT PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x59CA2D03 GT PUSH2 0x177 JUMPI DUP1 PUSH4 0x59CA2D03 EQ PUSH2 0x364 JUMPI DUP1 PUSH4 0x5AADD414 EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0x5F3D99B3 EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0x6C2F34E7 EQ PUSH2 0x3AF JUMPI DUP1 PUSH4 0x70ACB761 EQ PUSH2 0x3C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2A57EF84 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x31A0AFA7 EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0x3A70693D EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0x50F7308A EQ PUSH2 0x344 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x19A50F49 GT PUSH2 0x1EF JUMPI DUP1 PUSH4 0x19A50F49 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x1D5FD3CA EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0x1F50DD27 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x2266E1BC EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0x22B4081C EQ PUSH2 0x2E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4F17A9B EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x52F9B0A EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x1343E9A5 EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0x152DE3B9 EQ PUSH2 0x298 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x234 PUSH2 0x22F CALLDATASIZE PUSH1 0x4 PUSH2 0x151A JUMP JUMPDEST PUSH2 0x5AB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x25A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x23E JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x286 SWAP1 PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x23E JUMP JUMPDEST PUSH2 0x234 PUSH2 0x2A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1579 JUMP JUMPDEST PUSH2 0x665 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x286 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x234 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x25A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x234 PUSH2 0x2E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x151A JUMP JUMPDEST PUSH2 0x6C7 JUMP JUMPDEST PUSH2 0x2FA PUSH2 0x2F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x15E9 JUMP JUMPDEST PUSH2 0x727 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x165E JUMP JUMPDEST PUSH2 0x234 PUSH2 0x319 CALLDATASIZE PUSH1 0x4 PUSH2 0x16A1 JUMP JUMPDEST PUSH2 0x802 JUMP JUMPDEST PUSH2 0x234 PUSH2 0x32C CALLDATASIZE PUSH1 0x4 PUSH2 0x172F JUMP JUMPDEST PUSH2 0x8C4 JUMP JUMPDEST PUSH2 0x286 PUSH2 0x33F CALLDATASIZE PUSH1 0x4 PUSH2 0x15E9 JUMP JUMPDEST PUSH2 0x98C JUMP JUMPDEST PUSH2 0x234 PUSH2 0x352 CALLDATASIZE PUSH1 0x4 PUSH2 0x17E1 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x36C PUSH2 0x9B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x1803 JUMP JUMPDEST PUSH2 0x381 PUSH2 0xA3E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x1816 JUMP JUMPDEST PUSH2 0x3A1 PUSH2 0x39C CALLDATASIZE PUSH1 0x4 PUSH2 0x15E9 JUMP JUMPDEST PUSH2 0xB57 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP3 SWAP2 SWAP1 PUSH2 0x18A4 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x25A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x234 PUSH2 0x3D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x18C7 JUMP JUMPDEST PUSH2 0xC46 JUMP JUMPDEST PUSH2 0x234 PUSH2 0x3E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x17E1 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x234 PUSH2 0x403 CALLDATASIZE PUSH1 0x4 PUSH2 0x151A JUMP JUMPDEST PUSH2 0xD05 JUMP JUMPDEST PUSH2 0x41B PUSH2 0x416 CALLDATASIZE PUSH1 0x4 PUSH2 0x1926 JUMP JUMPDEST PUSH2 0xD65 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x25A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x443 PUSH2 0x43E CALLDATASIZE PUSH1 0x4 PUSH2 0x15E9 JUMP JUMPDEST PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1974 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x286 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x234 PUSH2 0x473 CALLDATASIZE PUSH1 0x4 PUSH2 0x19AA JUMP JUMPDEST PUSH2 0xEED JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0x234 JUMP JUMPDEST PUSH2 0x488 PUSH2 0xF4B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x1A6A JUMP JUMPDEST PUSH2 0x4A8 PUSH2 0x4A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x15E9 JUMP JUMPDEST PUSH2 0x10D0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP2 DUP5 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x23E JUMP JUMPDEST PUSH2 0x4EE PUSH2 0x4E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B3F JUMP JUMPDEST PUSH2 0x1118 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x23E JUMP JUMPDEST PUSH2 0x511 PUSH2 0x50C CALLDATASIZE PUSH1 0x4 PUSH2 0x1BA4 JUMP JUMPDEST PUSH2 0x11DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BD0 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x25A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x546 PUSH2 0x541 CALLDATASIZE PUSH1 0x4 PUSH2 0x15E9 JUMP JUMPDEST PUSH2 0x1297 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BFC JUMP JUMPDEST PUSH2 0x234 PUSH2 0x569 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C64 JUMP JUMPDEST PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x286 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x286 SWAP1 PUSH5 0x100000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x4EE SWAP1 PUSH6 0x10000000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH2 0x5D6 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x24 ADD PUSH2 0x1CB6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x4F17A9B PUSH1 0xE0 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x60B SWAP2 SWAP1 PUSH2 0x1CEE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x646 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x64B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP3 PUSH2 0x661 JUMPI DUP1 DUP3 REVERT JUMPDEST DUP1 DUP3 RETURN JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH2 0x692 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x24 ADD PUSH2 0x1D0A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x152DE3B9 PUSH1 0xE0 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x60B SWAP2 SWAP1 PUSH2 0x1CEE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH2 0x6F2 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x24 ADD PUSH2 0x1CB6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x899B86F PUSH1 0xE2 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x60B SWAP2 SWAP1 PUSH2 0x1CEE JUMP JUMPDEST PUSH1 0x11 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x737 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP4 POP SWAP1 PUSH2 0x766 SWAP1 PUSH2 0x1D4F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x792 SWAP1 PUSH2 0x1D4F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7DF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7B4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7DF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7C2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 SWAP2 PUSH1 0xFF DUP1 DUP3 AND SWAP3 POP PUSH2 0x100 SWAP1 SWAP2 DIV AND DUP6 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH2 0x82D SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x24 ADD PUSH2 0x1D8A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA95FBE1 PUSH1 0xE2 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x862 SWAP2 SWAP1 PUSH2 0x1CEE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x89D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x8A2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP3 PUSH2 0x8B8 JUMPI DUP1 DUP3 REVERT JUMPDEST POP MLOAD SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH2 0x8F3 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x24 ADD PUSH2 0x1DD1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x31A0AFA7 PUSH1 0xE0 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x928 SWAP2 SWAP1 PUSH2 0x1CEE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x963 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x968 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP3 PUSH2 0x97E JUMPI DUP1 DUP3 REVERT JUMPDEST POP MLOAD SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x10 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x99C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0xFF AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x9BD SWAP1 PUSH2 0x1D4F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9E9 SWAP1 PUSH2 0x1D4F JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA36 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA0B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA36 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA19 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xE DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xB4E JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP6 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD SWAP3 SWAP4 SWAP2 SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH2 0xAAB SWAP1 PUSH2 0x1D4F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAD7 SWAP1 PUSH2 0x1D4F JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB24 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAF9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB24 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB07 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x2 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x20 SWAP2 DUP3 ADD MSTORE SWAP1 DUP3 MSTORE PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0xA62 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x60 SWAP2 DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x44 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x5F3D99B3 PUSH1 0xE0 SHL OR SWAP1 MSTORE MLOAD PUSH2 0xBAE SWAP2 SWAP1 PUSH2 0x1CEE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xBE9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xBEE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xC04 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP1 DUP3 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x537563636573732065786563757465642070726F706F73616C00000000000000 DUP2 MSTORE POP SWAP3 POP SWAP3 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH2 0xC6F SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x24 ADD PUSH2 0x1E36 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x70ACB761 PUSH1 0xE0 SHL OR SWAP1 MSTORE MLOAD PUSH2 0xCA4 SWAP2 SWAP1 PUSH2 0x1CEE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xCDF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCE4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP3 PUSH2 0xCFA JUMPI DUP1 DUP3 REVERT JUMPDEST POP MLOAD SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH2 0xD30 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x24 ADD PUSH2 0x1CB6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xF8C70A9 PUSH1 0xE3 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x862 SWAP2 SWAP1 PUSH2 0x1CEE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH7 0x1000000000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0xD92 SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH1 0x24 ADD PUSH2 0x18A4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x1039E45B PUSH1 0xE3 SHL OR SWAP1 MSTORE MLOAD PUSH2 0xDC7 SWAP2 SWAP1 PUSH2 0x1CEE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xE02 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xE07 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xE1D JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP1 DUP3 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xE DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xE32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP4 POP SWAP1 PUSH2 0xE61 SWAP1 PUSH2 0x1D4F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE8D SWAP1 PUSH2 0x1D4F JUMP JUMPDEST DUP1 ISZERO PUSH2 0xEDA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xEAF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xEDA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xEBD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x2 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 POP POP PUSH1 0xFF AND DUP4 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH2 0xF16 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x24 ADD PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA19A5F5 PUSH1 0xE4 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x60B SWAP2 SWAP1 PUSH2 0x1CEE JUMP JUMPDEST PUSH1 0x60 PUSH1 0xD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xB4E JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x5 DUP6 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP4 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x8 DUP2 GT ISZERO PUSH2 0xFC6 JUMPI PUSH2 0xFC6 PUSH2 0x1A32 JUMP JUMPDEST PUSH1 0x8 DUP2 GT ISZERO PUSH2 0xFD7 JUMPI PUSH2 0xFD7 PUSH2 0x1A32 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0xFEB SWAP1 PUSH2 0x1D4F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1017 SWAP1 PUSH2 0x1D4F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1064 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1039 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1064 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1047 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x100 DUP3 DIV DUP2 AND PUSH1 0x60 DUP6 ADD MSTORE PUSH3 0x10000 DUP3 DIV DUP2 AND ISZERO ISZERO PUSH1 0x80 DUP6 ADD MSTORE PUSH4 0x1000000 SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0xC0 SWAP1 SWAP2 ADD MSTORE SWAP1 DUP3 MSTORE PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0xF6F JUMP JUMPDEST PUSH1 0xF DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x10E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP5 POP SWAP1 SWAP3 DUP3 AND SWAP2 AND DUP5 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH2 0x1143 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x24 ADD PUSH2 0x1EA5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x18567541 PUSH1 0xE3 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x1178 SWAP2 SWAP1 PUSH2 0x1CEE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x11B3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x11B8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x11CE JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP1 DUP3 REVERT JUMPDEST POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0xFF DUP1 DUP5 AND SWAP5 PUSH2 0x100 SWAP1 SWAP5 DIV AND SWAP3 SWAP2 SWAP1 PUSH2 0x1214 SWAP1 PUSH2 0x1D4F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1240 SWAP1 PUSH2 0x1D4F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x128D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1262 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x128D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1270 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0xD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x12A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP5 POP PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP3 DIV PUSH1 0xFF AND SWAP3 SWAP2 PUSH2 0x12E1 SWAP1 PUSH2 0x1D4F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x130D SWAP1 PUSH2 0x1D4F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x135A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x132F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x135A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x133D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x2 DUP5 ADD SLOAD PUSH1 0x3 DUP6 ADD SLOAD PUSH1 0x4 SWAP1 SWAP6 ADD SLOAD SWAP4 SWAP5 SWAP1 SWAP4 PUSH1 0xFF DUP1 DUP4 AND SWAP5 POP PUSH2 0x100 DUP4 DIV DUP2 AND SWAP4 POP PUSH3 0x10000 DUP4 DIV DUP2 AND SWAP3 PUSH4 0x1000000 SWAP1 DIV AND SWAP1 DUP10 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH2 0x13C3 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x24 ADD PUSH2 0x1ED8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x6F2D58A7 PUSH1 0xE1 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x13F8 SWAP2 SWAP1 PUSH2 0x1CEE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1433 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1438 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP3 PUSH2 0x144E JUMPI DUP1 DUP3 REVERT JUMPDEST POP MLOAD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1472 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x149E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x14B9 JUMPI PUSH2 0x14B9 PUSH2 0x1477 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x14E1 JUMPI PUSH2 0x14E1 PUSH2 0x1477 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x14FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1530 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1539 DUP6 PUSH2 0x145B JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x155C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1568 DUP8 DUP3 DUP9 ADD PUSH2 0x148D JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP4 SWAP5 PUSH1 0x60 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1591 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x159A DUP7 PUSH2 0x145B JUMP JUMPDEST SWAP5 POP PUSH2 0x15A8 PUSH1 0x20 DUP8 ADD PUSH2 0x145B JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15D7 DUP9 DUP3 DUP10 ADD PUSH2 0x148D JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP3 SWAP6 PUSH1 0x80 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x161D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1605 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x162C JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x164A DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1602 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1682 SWAP1 DUP4 ADD DUP8 PUSH2 0x1632 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE POP SWAP2 ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x80 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x16B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16C0 DUP6 PUSH2 0x145B JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x16DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16E9 DUP9 DUP4 DUP10 ADD PUSH2 0x148D JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1706 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1713 DUP8 DUP3 DUP9 ADD PUSH2 0x148D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1472 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1748 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1751 DUP8 PUSH2 0x145B JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x176E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x177A DUP11 DUP4 DUP12 ADD PUSH2 0x148D JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1790 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x179C DUP11 DUP4 DUP12 ADD PUSH2 0x148D JUMP JUMPDEST SWAP6 POP PUSH2 0x17AA PUSH1 0x60 DUP11 ADD PUSH2 0x171F JUMP JUMPDEST SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x17C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17D4 DUP10 DUP3 DUP11 ADD PUSH2 0x148D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17FC DUP3 PUSH2 0x145B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x17FC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1632 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 SWAP3 POP DUP3 DUP7 ADD SWAP2 POP DUP3 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD DUP5 DUP9 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1896 JUMPI DUP9 DUP4 SUB PUSH1 0x3F NOT ADD DUP6 MSTORE DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE DUP8 DUP2 ADD MLOAD PUSH1 0x60 DUP10 DUP7 ADD DUP2 SWAP1 MSTORE SWAP1 PUSH2 0x1876 DUP3 DUP8 ADD DUP3 PUSH2 0x1632 JUMP JUMPDEST SWAP3 DUP10 ADD MLOAD ISZERO ISZERO SWAP6 DUP10 ADD SWAP6 SWAP1 SWAP6 MSTORE POP SWAP5 DUP8 ADD SWAP5 SWAP3 POP SWAP1 DUP7 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x183D JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x18BF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1632 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x18DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x18ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1909 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1915 DUP7 DUP3 DUP8 ADD PUSH2 0x148D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1939 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1942 DUP4 PUSH2 0x171F JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x195E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x196A DUP6 DUP3 DUP7 ADD PUSH2 0x148D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1998 SWAP1 DUP4 ADD DUP6 PUSH2 0x1632 JUMP JUMPDEST SWAP1 POP DUP3 ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x19BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x19D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19E3 DUP8 DUP4 DUP9 ADD PUSH2 0x148D JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x19F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A05 DUP8 DUP4 DUP9 ADD PUSH2 0x148D JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A28 DUP7 DUP3 DUP8 ADD PUSH2 0x148D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x9 DUP2 LT PUSH2 0x1A66 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 SWAP3 POP DUP3 DUP7 ADD SWAP2 POP DUP3 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD DUP5 DUP9 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1896 JUMPI DUP9 DUP4 SUB PUSH1 0x3F NOT ADD DUP6 MSTORE DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH2 0x120 DUP9 DUP3 ADD MLOAD PUSH2 0x1AC4 DUP11 DUP8 ADD DUP3 PUSH2 0x1A48 JUMP JUMPDEST POP DUP8 DUP3 ADD MLOAD DUP2 DUP10 DUP8 ADD MSTORE PUSH2 0x1ADA DUP3 DUP8 ADD DUP3 PUSH2 0x1632 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x60 DUP1 DUP4 ADD MLOAD DUP2 DUP8 ADD MSTORE POP PUSH1 0x80 DUP1 DUP4 ADD MLOAD PUSH2 0x1AFC DUP3 DUP9 ADD DUP3 PUSH1 0xFF AND SWAP1 MSTORE JUMP JUMPDEST POP POP PUSH1 0xA0 DUP3 DUP2 ADD MLOAD PUSH1 0xFF AND SWAP1 DUP7 ADD MSTORE PUSH1 0xC0 DUP1 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 DUP7 ADD MSTORE PUSH1 0xE0 DUP1 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 DUP7 ADD MSTORE PUSH2 0x100 SWAP2 DUP3 ADD MLOAD SWAP2 SWAP1 SWAP5 ADD MSTORE SWAP4 DUP7 ADD SWAP4 SWAP1 DUP7 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1A91 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1B55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH2 0x1B65 PUSH1 0x20 DUP7 ADD PUSH2 0x171F JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1B82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B8E DUP9 DUP4 DUP10 ADD PUSH2 0x148D JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1706 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1BC7 PUSH1 0x20 DUP5 ADD PUSH2 0x145B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP4 ISZERO ISZERO DUP2 MSTORE DUP3 ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1BF3 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1632 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP2 MSTORE PUSH1 0x0 PUSH2 0x120 PUSH2 0x1C1A PUSH1 0x20 DUP5 ADD DUP13 PUSH2 0x1A48 JUMP JUMPDEST DUP1 PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x1C2C DUP2 DUP5 ADD DUP12 PUSH2 0x1632 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD SWAP10 SWAP1 SWAP10 MSTORE POP POP PUSH1 0xFF SWAP6 DUP7 AND PUSH1 0x80 DUP3 ADD MSTORE SWAP4 SWAP1 SWAP5 AND PUSH1 0xA0 DUP5 ADD MSTORE SWAP1 ISZERO ISZERO PUSH1 0xC0 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1C7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C85 DUP7 PUSH2 0x145B JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH2 0x1C9A PUSH1 0x40 DUP8 ADD PUSH2 0x145B JUMP JUMPDEST SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1CDD PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1632 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x60 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1D00 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1602 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1D3D SWAP1 DUP4 ADD DUP6 PUSH2 0x1632 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x80 DUP4 ADD MSTORE SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1D63 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1D84 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1DAE SWAP1 DUP4 ADD DUP7 PUSH2 0x1632 JUMP JUMPDEST DUP5 PUSH1 0x40 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1DC6 DUP2 DUP6 PUSH2 0x1632 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP2 MSTORE PUSH1 0xC0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1DF5 SWAP1 DUP4 ADD DUP9 PUSH2 0x1632 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x1E07 DUP2 DUP9 PUSH2 0x1632 JUMP JUMPDEST SWAP1 POP DUP6 ISZERO ISZERO PUSH1 0x60 DUP5 ADD MSTORE DUP5 PUSH1 0x80 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0x1E29 DUP2 DUP6 PUSH2 0x1632 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xFF DUP5 AND DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1E52 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1632 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1E75 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1632 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1E87 DUP2 DUP7 PUSH2 0x1632 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x1E9B DUP2 DUP6 PUSH2 0x1632 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP5 DUP2 MSTORE DUP4 ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1EC6 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1632 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1DC6 DUP2 DUP6 PUSH2 0x1632 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE DUP5 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1D3D SWAP1 DUP4 ADD DUP6 PUSH2 0x1632 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x4DFED0272BCB445434FFD0A3C91461C5937B4B28941DD44E MSTORE MLOAD MSIZE SWAP5 0xE1 BALANCE STATICCALL PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        254,
        14469
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "6": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "8": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "12": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "DUP1",
      "path": "18"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "REVERT",
      "path": "18"
    },
    "16": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "17": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "POP",
      "path": "18"
    },
    "18": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "21": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "LT",
      "path": "18"
    },
    "22": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x21C"
    },
    "25": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "26": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "29": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "SHR",
      "path": "18"
    },
    "32": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "DUP1",
      "path": "18"
    },
    "33": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x70FF918C"
    },
    "38": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "GT",
      "path": "18"
    },
    "39": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x125"
    },
    "42": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "43": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "DUP1",
      "path": "18"
    },
    "44": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xBAA4D5E9"
    },
    "49": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "GT",
      "path": "18"
    },
    "50": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xAD"
    },
    "53": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "54": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "DUP1",
      "path": "18"
    },
    "55": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xCB85669C"
    },
    "60": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "GT",
      "path": "18"
    },
    "61": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x7C"
    },
    "64": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "65": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "DUP1",
      "path": "18"
    },
    "66": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xCB85669C"
    },
    "71": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "EQ",
      "path": "18"
    },
    "72": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x533"
    },
    "75": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "76": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "DUP1",
      "path": "18"
    },
    "77": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xDE5AB14E"
    },
    "82": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "EQ",
      "path": "18"
    },
    "83": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x55B"
    },
    "86": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "87": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "DUP1",
      "path": "18"
    },
    "88": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xE68777D7"
    },
    "93": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "EQ",
      "path": "18"
    },
    "94": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x56E"
    },
    "97": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "98": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "DUP1",
      "path": "18"
    },
    "99": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xE810A58E"
    },
    "104": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "EQ",
      "path": "18"
    },
    "105": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x580"
    },
    "108": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "109": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "DUP1",
      "path": "18"
    },
    "110": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xF00D6274"
    },
    "115": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "EQ",
      "path": "18"
    },
    "116": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x595"
    },
    "119": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "120": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "122": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "DUP1",
      "path": "18"
    },
    "123": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "REVERT",
      "path": "18"
    },
    "124": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "125": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "DUP1",
      "path": "18"
    },
    "126": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xBAA4D5E9"
    },
    "131": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "EQ",
      "path": "18"
    },
    "132": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x495"
    },
    "135": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "136": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "DUP1",
      "path": "18"
    },
    "137": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xC2B3AA08"
    },
    "142": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "EQ",
      "path": "18"
    },
    "143": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4DB"
    },
    "146": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "147": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "DUP1",
      "path": "18"
    },
    "148": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xC347D2FD"
    },
    "153": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "EQ",
      "path": "18"
    },
    "154": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4FE"
    },
    "157": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "158": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "DUP1",
      "path": "18"
    },
    "159": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xCADA7F19"
    },
    "164": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "EQ",
      "path": "18"
    },
    "165": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x520"
    },
    "168": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "169": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "171": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "DUP1",
      "path": "18"
    },
    "172": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "REVERT",
      "path": "18"
    },
    "173": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "174": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "DUP1",
      "path": "18"
    },
    "175": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x96A3DD84"
    },
    "180": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "GT",
      "path": "18"
    },
    "181": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xF4"
    },
    "184": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "185": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "DUP1",
      "path": "18"
    },
    "186": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x96A3DD84"
    },
    "191": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "EQ",
      "path": "18"
    },
    "192": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x430"
    },
    "195": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "196": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "DUP1",
      "path": "18"
    },
    "197": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x9C630A88"
    },
    "202": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "EQ",
      "path": "18"
    },
    "203": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x452"
    },
    "206": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "207": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "DUP1",
      "path": "18"
    },
    "208": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xA19A5F50"
    },
    "213": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "EQ",
      "path": "18"
    },
    "214": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x465"
    },
    "217": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "218": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "DUP1",
      "path": "18"
    },
    "219": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xA693649A"
    },
    "224": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "EQ",
      "path": "18"
    },
    "225": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x478"
    },
    "228": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "229": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "DUP1",
      "path": "18"
    },
    "230": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xB4C62192"
    },
    "235": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "EQ",
      "path": "18"
    },
    "236": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x480"
    },
    "239": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "240": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "242": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "DUP1",
      "path": "18"
    },
    "243": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "REVERT",
      "path": "18"
    },
    "244": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "245": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "DUP1",
      "path": "18"
    },
    "246": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x70FF918C"
    },
    "251": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "EQ",
      "path": "18"
    },
    "252": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3D5"
    },
    "255": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "256": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "DUP1",
      "path": "18"
    },
    "257": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x7C638548"
    },
    "262": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "EQ",
      "path": "18"
    },
    "263": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3F5"
    },
    "266": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "267": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "DUP1",
      "path": "18"
    },
    "268": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x81CF22D8"
    },
    "273": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "EQ",
      "path": "18"
    },
    "274": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x408"
    },
    "277": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "278": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "DUP1",
      "path": "18"
    },
    "279": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x9360BFAD"
    },
    "284": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "EQ",
      "path": "18"
    },
    "285": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x41D"
    },
    "288": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "289": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "291": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "DUP1",
      "path": "18"
    },
    "292": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "REVERT",
      "path": "18"
    },
    "293": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "294": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "DUP1",
      "path": "18"
    },
    "295": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x2A57EF84"
    },
    "300": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "GT",
      "path": "18"
    },
    "301": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1A8"
    },
    "304": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "305": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "DUP1",
      "path": "18"
    },
    "306": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x59CA2D03"
    },
    "311": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "GT",
      "path": "18"
    },
    "312": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x177"
    },
    "315": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "316": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "DUP1",
      "path": "18"
    },
    "317": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x59CA2D03"
    },
    "322": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "EQ",
      "path": "18"
    },
    "323": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x364"
    },
    "326": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "327": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "DUP1",
      "path": "18"
    },
    "328": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x5AADD414"
    },
    "333": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "EQ",
      "path": "18"
    },
    "334": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x379"
    },
    "337": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "338": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "DUP1",
      "path": "18"
    },
    "339": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x5F3D99B3"
    },
    "344": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "EQ",
      "path": "18"
    },
    "345": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x38E"
    },
    "348": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "349": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "DUP1",
      "path": "18"
    },
    "350": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x6C2F34E7"
    },
    "355": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "EQ",
      "path": "18"
    },
    "356": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3AF"
    },
    "359": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "360": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "DUP1",
      "path": "18"
    },
    "361": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x70ACB761"
    },
    "366": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "EQ",
      "path": "18"
    },
    "367": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3C2"
    },
    "370": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "371": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "373": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "DUP1",
      "path": "18"
    },
    "374": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "REVERT",
      "path": "18"
    },
    "375": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "376": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "DUP1",
      "path": "18"
    },
    "377": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x2A57EF84"
    },
    "382": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "EQ",
      "path": "18"
    },
    "383": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x30B"
    },
    "386": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "387": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "DUP1",
      "path": "18"
    },
    "388": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x31A0AFA7"
    },
    "393": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "EQ",
      "path": "18"
    },
    "394": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x31E"
    },
    "397": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "398": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "DUP1",
      "path": "18"
    },
    "399": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x3A70693D"
    },
    "404": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "EQ",
      "path": "18"
    },
    "405": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x331"
    },
    "408": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "409": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "DUP1",
      "path": "18"
    },
    "410": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x50F7308A"
    },
    "415": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "EQ",
      "path": "18"
    },
    "416": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x344"
    },
    "419": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "420": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "422": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "DUP1",
      "path": "18"
    },
    "423": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "REVERT",
      "path": "18"
    },
    "424": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "425": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "DUP1",
      "path": "18"
    },
    "426": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x19A50F49"
    },
    "431": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "GT",
      "path": "18"
    },
    "432": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1EF"
    },
    "435": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "436": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "DUP1",
      "path": "18"
    },
    "437": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x19A50F49"
    },
    "442": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "EQ",
      "path": "18"
    },
    "443": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2AB"
    },
    "446": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "447": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "DUP1",
      "path": "18"
    },
    "448": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x1D5FD3CA"
    },
    "453": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "EQ",
      "path": "18"
    },
    "454": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2B8"
    },
    "457": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "458": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "DUP1",
      "path": "18"
    },
    "459": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x1F50DD27"
    },
    "464": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "EQ",
      "path": "18"
    },
    "465": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2C1"
    },
    "468": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "469": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "DUP1",
      "path": "18"
    },
    "470": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x2266E1BC"
    },
    "475": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "EQ",
      "path": "18"
    },
    "476": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2D4"
    },
    "479": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "480": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "DUP1",
      "path": "18"
    },
    "481": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x22B4081C"
    },
    "486": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "EQ",
      "path": "18"
    },
    "487": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2E7"
    },
    "490": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "491": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "493": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "DUP1",
      "path": "18"
    },
    "494": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "REVERT",
      "path": "18"
    },
    "495": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "496": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "DUP1",
      "path": "18"
    },
    "497": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x4F17A9B"
    },
    "502": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "EQ",
      "path": "18"
    },
    "503": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x221"
    },
    "506": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "507": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "DUP1",
      "path": "18"
    },
    "508": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x52F9B0A"
    },
    "513": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "EQ",
      "path": "18"
    },
    "514": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x247"
    },
    "517": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "518": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "DUP1",
      "path": "18"
    },
    "519": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x1343E9A5"
    },
    "524": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "EQ",
      "path": "18"
    },
    "525": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x272"
    },
    "528": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "529": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "DUP1",
      "path": "18"
    },
    "530": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x152DE3B9"
    },
    "535": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "EQ",
      "path": "18"
    },
    "536": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x298"
    },
    "539": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "540": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "541": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "543": {
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "DUP1",
      "path": "18"
    },
    "544": {
      "first_revert": true,
      "fn": null,
      "offset": [
        254,
        14469
      ],
      "op": "REVERT",
      "path": "18"
    },
    "545": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12302,
        13084
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "546": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12302,
        13084
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x234"
    },
    "549": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12302,
        13084
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x22F"
    },
    "552": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12302,
        13084
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "553": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12302,
        13084
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "555": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12302,
        13084
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x151A"
    },
    "558": {
      "fn": "CLHouse.PropSellERC20",
      "jump": "i",
      "offset": [
        12302,
        13084
      ],
      "op": "JUMP",
      "path": "18"
    },
    "559": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12302,
        13084
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "560": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12302,
        13084
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5AB"
    },
    "563": {
      "fn": "CLHouse.PropSellERC20",
      "jump": "i",
      "offset": [
        12302,
        13084
      ],
      "op": "JUMP",
      "path": "18"
    },
    "564": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12302,
        13084
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "565": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12302,
        13084
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "567": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12302,
        13084
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "568": {
      "op": "SWAP1"
    },
    "569": {
      "op": "DUP2"
    },
    "570": {
      "op": "MSTORE"
    },
    "571": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "573": {
      "op": "ADD"
    },
    "574": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12302,
        13084
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "575": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12302,
        13084
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "577": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12302,
        13084
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "578": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12302,
        13084
      ],
      "op": "DUP1",
      "path": "18"
    },
    "579": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12302,
        13084
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "580": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12302,
        13084
      ],
      "op": "SUB",
      "path": "18"
    },
    "581": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12302,
        13084
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "582": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12302,
        13084
      ],
      "op": "RETURN",
      "path": "18"
    },
    "583": {
      "offset": [
        892,
        915
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "584": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        892,
        915
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x8"
    },
    "586": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        892,
        915
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "587": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        892,
        915
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x25A"
    },
    "590": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        892,
        915
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "595": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "597": {
      "op": "SHL"
    },
    "598": {
      "op": "SUB"
    },
    "599": {
      "offset": [
        892,
        915
      ],
      "op": "AND",
      "path": "23"
    },
    "600": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        892,
        915
      ],
      "op": "DUP2",
      "path": "23"
    },
    "601": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        892,
        915
      ],
      "op": "JUMP",
      "path": "23"
    },
    "602": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        892,
        915
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "603": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        892,
        915
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "605": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        892,
        915
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "608": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "610": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "612": {
      "op": "SHL"
    },
    "613": {
      "op": "SUB"
    },
    "614": {
      "op": "SWAP1"
    },
    "615": {
      "op": "SWAP2"
    },
    "616": {
      "op": "AND"
    },
    "617": {
      "op": "DUP2"
    },
    "618": {
      "op": "MSTORE"
    },
    "619": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "621": {
      "op": "ADD"
    },
    "622": {
      "offset": [
        892,
        915
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x23E"
    },
    "625": {
      "op": "JUMP"
    },
    "626": {
      "offset": [
        559,
        587
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "627": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        559,
        587
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "629": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        559,
        587
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "630": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        559,
        587
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x286"
    },
    "633": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        559,
        587
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "634": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        559,
        587
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x1000000"
    },
    "639": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        559,
        587
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "640": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        559,
        587
      ],
      "op": "DIV",
      "path": "23"
    },
    "641": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        559,
        587
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "643": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        559,
        587
      ],
      "op": "AND",
      "path": "23"
    },
    "644": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        559,
        587
      ],
      "op": "DUP2",
      "path": "23"
    },
    "645": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        559,
        587
      ],
      "op": "JUMP",
      "path": "23"
    },
    "646": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        559,
        587
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "647": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        559,
        587
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "649": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        559,
        587
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "650": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "652": {
      "op": "SWAP1"
    },
    "653": {
      "op": "SWAP2"
    },
    "654": {
      "op": "AND"
    },
    "655": {
      "op": "DUP2"
    },
    "656": {
      "op": "MSTORE"
    },
    "657": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "659": {
      "op": "ADD"
    },
    "660": {
      "offset": [
        559,
        587
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x23E"
    },
    "663": {
      "op": "JUMP"
    },
    "664": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11448,
        12296
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "665": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11448,
        12296
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x234"
    },
    "668": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11448,
        12296
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2A6"
    },
    "671": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11448,
        12296
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "672": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11448,
        12296
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "674": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11448,
        12296
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1579"
    },
    "677": {
      "fn": "CLHouse.PropSwapERC20",
      "jump": "i",
      "offset": [
        11448,
        12296
      ],
      "op": "JUMP",
      "path": "18"
    },
    "678": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11448,
        12296
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "679": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11448,
        12296
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x665"
    },
    "682": {
      "fn": "CLHouse.PropSwapERC20",
      "jump": "i",
      "offset": [
        11448,
        12296
      ],
      "op": "JUMP",
      "path": "18"
    },
    "683": {
      "offset": [
        460,
        481
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "684": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        460,
        481
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "686": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        460,
        481
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "687": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        460,
        481
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x286"
    },
    "690": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        460,
        481
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "691": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        460,
        481
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "693": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        460,
        481
      ],
      "op": "AND",
      "path": "23"
    },
    "694": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        460,
        481
      ],
      "op": "DUP2",
      "path": "23"
    },
    "695": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        460,
        481
      ],
      "op": "JUMP",
      "path": "23"
    },
    "696": {
      "offset": [
        779,
        816
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "697": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        779,
        816
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x234"
    },
    "700": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        779,
        816
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x5"
    },
    "702": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        779,
        816
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "703": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        779,
        816
      ],
      "op": "DUP2",
      "path": "23"
    },
    "704": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        779,
        816
      ],
      "op": "JUMP",
      "path": "23"
    },
    "705": {
      "offset": [
        921,
        948
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "706": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        921,
        948
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x9"
    },
    "708": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        921,
        948
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "709": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        921,
        948
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x25A"
    },
    "712": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        921,
        948
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "717": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "719": {
      "op": "SHL"
    },
    "720": {
      "op": "SUB"
    },
    "721": {
      "offset": [
        921,
        948
      ],
      "op": "AND",
      "path": "23"
    },
    "722": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        921,
        948
      ],
      "op": "DUP2",
      "path": "23"
    },
    "723": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        921,
        948
      ],
      "op": "JUMP",
      "path": "23"
    },
    "724": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13090,
        13868
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "725": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13090,
        13868
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x234"
    },
    "728": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13090,
        13868
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2E2"
    },
    "731": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13090,
        13868
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "732": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13090,
        13868
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "734": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13090,
        13868
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x151A"
    },
    "737": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "i",
      "offset": [
        13090,
        13868
      ],
      "op": "JUMP",
      "path": "18"
    },
    "738": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13090,
        13868
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "739": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13090,
        13868
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x6C7"
    },
    "742": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "i",
      "offset": [
        13090,
        13868
      ],
      "op": "JUMP",
      "path": "18"
    },
    "743": {
      "offset": [
        1382,
        1407
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "744": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2FA"
    },
    "747": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2F5"
    },
    "750": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "751": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "753": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x15E9"
    },
    "756": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "i",
      "offset": [
        1382,
        1407
      ],
      "op": "JUMP",
      "path": "23"
    },
    "757": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "758": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x727"
    },
    "761": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "i",
      "offset": [
        1382,
        1407
      ],
      "op": "JUMP",
      "path": "23"
    },
    "762": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "763": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "765": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "766": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x23E"
    },
    "769": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP6",
      "path": "23"
    },
    "770": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "771": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "772": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "773": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "774": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "775": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x165E"
    },
    "778": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "i",
      "offset": [
        1382,
        1407
      ],
      "op": "JUMP",
      "path": "23"
    },
    "779": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5509,
        6298
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "780": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5509,
        6298
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x234"
    },
    "783": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5509,
        6298
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x319"
    },
    "786": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5509,
        6298
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "787": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5509,
        6298
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "789": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5509,
        6298
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x16A1"
    },
    "792": {
      "fn": "CLHouse.PropRemoveUser",
      "jump": "i",
      "offset": [
        5509,
        6298
      ],
      "op": "JUMP",
      "path": "18"
    },
    "793": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5509,
        6298
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "794": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5509,
        6298
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x802"
    },
    "797": {
      "fn": "CLHouse.PropRemoveUser",
      "jump": "i",
      "offset": [
        5509,
        6298
      ],
      "op": "JUMP",
      "path": "18"
    },
    "798": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4327,
        5233
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "799": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4327,
        5233
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x234"
    },
    "802": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4327,
        5233
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x32C"
    },
    "805": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4327,
        5233
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "806": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4327,
        5233
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "808": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4327,
        5233
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x172F"
    },
    "811": {
      "fn": "CLHouse.PropInviteUser",
      "jump": "i",
      "offset": [
        4327,
        5233
      ],
      "op": "JUMP",
      "path": "18"
    },
    "812": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4327,
        5233
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "813": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4327,
        5233
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x8C4"
    },
    "816": {
      "fn": "CLHouse.PropInviteUser",
      "jump": "i",
      "offset": [
        4327,
        5233
      ],
      "op": "JUMP",
      "path": "18"
    },
    "817": {
      "offset": [
        1332,
        1376
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "818": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x286"
    },
    "821": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x33F"
    },
    "824": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "825": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "827": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x15E9"
    },
    "830": {
      "fn": "CLHouse.PropInviteUser",
      "jump": "i",
      "offset": [
        1332,
        1376
      ],
      "op": "JUMP",
      "path": "23"
    },
    "831": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "832": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x98C"
    },
    "835": {
      "fn": "CLHouse.PropInviteUser",
      "jump": "i",
      "offset": [
        1332,
        1376
      ],
      "op": "JUMP",
      "path": "23"
    },
    "836": {
      "offset": [
        954,
        1008
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "837": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        954,
        1008
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x234"
    },
    "840": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        954,
        1008
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x352"
    },
    "843": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        954,
        1008
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "844": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        954,
        1008
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "846": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        954,
        1008
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x17E1"
    },
    "849": {
      "fn": "CLHouse.PropInviteUser",
      "jump": "i",
      "offset": [
        954,
        1008
      ],
      "op": "JUMP",
      "path": "23"
    },
    "850": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        954,
        1008
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "851": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        954,
        1008
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA"
    },
    "853": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        954,
        1008
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "855": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        954,
        1008
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "856": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        954,
        1008
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "858": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        954,
        1008
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "859": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        954,
        1008
      ],
      "op": "DUP2",
      "path": "23"
    },
    "860": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        954,
        1008
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "861": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        954,
        1008
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "863": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        954,
        1008
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "864": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        954,
        1008
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "865": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        954,
        1008
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "866": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        954,
        1008
      ],
      "op": "DUP2",
      "path": "23"
    },
    "867": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        954,
        1008
      ],
      "op": "JUMP",
      "path": "23"
    },
    "868": {
      "offset": [
        320,
        344
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "869": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x36C"
    },
    "872": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x9B0"
    },
    "875": {
      "fn": "CLHouse.PropInviteUser",
      "jump": "i",
      "offset": [
        320,
        344
      ],
      "op": "JUMP",
      "path": "23"
    },
    "876": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "877": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "879": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "880": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x23E"
    },
    "883": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "884": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "885": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1803"
    },
    "888": {
      "fn": "CLHouse.PropInviteUser",
      "jump": "i",
      "offset": [
        320,
        344
      ],
      "op": "JUMP",
      "path": "23"
    },
    "889": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14343,
        14467
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "890": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14343,
        14467
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x381"
    },
    "893": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14343,
        14467
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA3E"
    },
    "896": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "jump": "i",
      "offset": [
        14343,
        14467
      ],
      "op": "JUMP",
      "path": "18"
    },
    "897": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14343,
        14467
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "898": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14343,
        14467
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "900": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14343,
        14467
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "901": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14343,
        14467
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x23E"
    },
    "904": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14343,
        14467
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "905": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14343,
        14467
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "906": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14343,
        14467
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1816"
    },
    "909": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "jump": "i",
      "offset": [
        14343,
        14467
      ],
      "op": "JUMP",
      "path": "18"
    },
    "910": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2161,
        2804
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "911": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2161,
        2804
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3A1"
    },
    "914": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2161,
        2804
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x39C"
    },
    "917": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2161,
        2804
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "918": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2161,
        2804
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "920": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2161,
        2804
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x15E9"
    },
    "923": {
      "fn": "CLHouse.ExecProp",
      "jump": "i",
      "offset": [
        2161,
        2804
      ],
      "op": "JUMP",
      "path": "18"
    },
    "924": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2161,
        2804
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "925": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2161,
        2804
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB57"
    },
    "928": {
      "fn": "CLHouse.ExecProp",
      "jump": "i",
      "offset": [
        2161,
        2804
      ],
      "op": "JUMP",
      "path": "18"
    },
    "929": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2161,
        2804
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "930": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2161,
        2804
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "932": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2161,
        2804
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "933": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2161,
        2804
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x23E"
    },
    "936": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2161,
        2804
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "937": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2161,
        2804
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "938": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2161,
        2804
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "939": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2161,
        2804
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x18A4"
    },
    "942": {
      "fn": "CLHouse.ExecProp",
      "jump": "i",
      "offset": [
        2161,
        2804
      ],
      "op": "JUMP",
      "path": "18"
    },
    "943": {
      "offset": [
        835,
        858
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "944": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        835,
        858
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x6"
    },
    "946": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        835,
        858
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "947": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        835,
        858
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x25A"
    },
    "950": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        835,
        858
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "953": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "955": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "957": {
      "op": "SHL"
    },
    "958": {
      "op": "SUB"
    },
    "959": {
      "offset": [
        835,
        858
      ],
      "op": "AND",
      "path": "23"
    },
    "960": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        835,
        858
      ],
      "op": "DUP2",
      "path": "23"
    },
    "961": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        835,
        858
      ],
      "op": "JUMP",
      "path": "23"
    },
    "962": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        8953,
        9685
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "963": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        8953,
        9685
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x234"
    },
    "966": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        8953,
        9685
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3D0"
    },
    "969": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        8953,
        9685
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "970": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        8953,
        9685
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "972": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        8953,
        9685
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x18C7"
    },
    "975": {
      "fn": "CLHouse.PropGovRules",
      "jump": "i",
      "offset": [
        8953,
        9685
      ],
      "op": "JUMP",
      "path": "18"
    },
    "976": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        8953,
        9685
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "977": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        8953,
        9685
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC46"
    },
    "980": {
      "fn": "CLHouse.PropGovRules",
      "jump": "i",
      "offset": [
        8953,
        9685
      ],
      "op": "JUMP",
      "path": "18"
    },
    "981": {
      "offset": [
        1034,
        1080
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "982": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        1034,
        1080
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x234"
    },
    "985": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        1034,
        1080
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3E3"
    },
    "988": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        1034,
        1080
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "989": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        1034,
        1080
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "991": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        1034,
        1080
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x17E1"
    },
    "994": {
      "fn": "CLHouse.PropGovRules",
      "jump": "i",
      "offset": [
        1034,
        1080
      ],
      "op": "JUMP",
      "path": "23"
    },
    "995": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        1034,
        1080
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "996": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        1034,
        1080
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xB"
    },
    "998": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        1034,
        1080
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1000": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        1034,
        1080
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1001": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        1034,
        1080
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1003": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        1034,
        1080
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1004": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        1034,
        1080
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1005": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        1034,
        1080
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1006": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        1034,
        1080
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1008": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        1034,
        1080
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1009": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        1034,
        1080
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "1010": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        1034,
        1080
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1011": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        1034,
        1080
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1012": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        1034,
        1080
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1013": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        6643,
        7409
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1014": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        6643,
        7409
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x234"
    },
    "1017": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        6643,
        7409
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x403"
    },
    "1020": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        6643,
        7409
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1021": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        6643,
        7409
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1023": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        6643,
        7409
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x151A"
    },
    "1026": {
      "fn": "CLHouse.PropTxWei",
      "jump": "i",
      "offset": [
        6643,
        7409
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1027": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        6643,
        7409
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1028": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        6643,
        7409
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xD05"
    },
    "1031": {
      "fn": "CLHouse.PropTxWei",
      "jump": "i",
      "offset": [
        6643,
        7409
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1032": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10837,
        11442
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1033": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10837,
        11442
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x41B"
    },
    "1036": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10837,
        11442
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x416"
    },
    "1039": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10837,
        11442
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1040": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10837,
        11442
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1042": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10837,
        11442
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1926"
    },
    "1045": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "jump": "i",
      "offset": [
        10837,
        11442
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1046": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10837,
        11442
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1047": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10837,
        11442
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xD65"
    },
    "1050": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "jump": "i",
      "offset": [
        10837,
        11442
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1051": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10837,
        11442
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1052": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10837,
        11442
      ],
      "op": "STOP",
      "path": "18"
    },
    "1053": {
      "offset": [
        864,
        886
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1054": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        864,
        886
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x7"
    },
    "1056": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        864,
        886
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1057": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        864,
        886
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x25A"
    },
    "1060": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        864,
        886
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1063": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1065": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1067": {
      "op": "SHL"
    },
    "1068": {
      "op": "SUB"
    },
    "1069": {
      "offset": [
        864,
        886
      ],
      "op": "AND",
      "path": "23"
    },
    "1070": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        864,
        886
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1071": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        864,
        886
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1072": {
      "offset": [
        1234,
        1276
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1073": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x443"
    },
    "1076": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x43E"
    },
    "1079": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "1080": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1082": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x15E9"
    },
    "1085": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "jump": "i",
      "offset": [
        1234,
        1276
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1086": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1087": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xE22"
    },
    "1090": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "jump": "i",
      "offset": [
        1234,
        1276
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1091": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1092": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1094": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1095": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x23E"
    },
    "1098": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "1099": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "1100": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1101": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1102": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1974"
    },
    "1105": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "jump": "i",
      "offset": [
        1234,
        1276
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1106": {
      "offset": [
        517,
        553
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1107": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        517,
        553
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "1109": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        517,
        553
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1110": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        517,
        553
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x286"
    },
    "1113": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        517,
        553
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1114": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        517,
        553
      ],
      "op": "PUSH3",
      "path": "23",
      "value": "0x10000"
    },
    "1118": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        517,
        553
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1119": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        517,
        553
      ],
      "op": "DIV",
      "path": "23"
    },
    "1120": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        517,
        553
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "1122": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        517,
        553
      ],
      "op": "AND",
      "path": "23"
    },
    "1123": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        517,
        553
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1124": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        517,
        553
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1125": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        9985,
        10699
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1126": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        9985,
        10699
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x234"
    },
    "1129": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        9985,
        10699
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x473"
    },
    "1132": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        9985,
        10699
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1133": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        9985,
        10699
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1135": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        9985,
        10699
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x19AA"
    },
    "1138": {
      "fn": "CLHouse.PropRequestToJoin",
      "jump": "i",
      "offset": [
        9985,
        10699
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1139": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        9985,
        10699
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1140": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        9985,
        10699
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xEED"
    },
    "1143": {
      "fn": "CLHouse.PropRequestToJoin",
      "jump": "i",
      "offset": [
        9985,
        10699
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1144": {
      "fn": "CLHouse.GetArrUsersLength",
      "offset": [
        13906,
        14006
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1145": {
      "fn": "CLHouse.GetArrUsersLength",
      "offset": [
        13984,
        13992
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 0,
      "value": "0x11"
    },
    "1147": {
      "fn": "CLHouse.GetArrUsersLength",
      "offset": [
        13984,
        13999
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1148": {
      "fn": "CLHouse.GetArrUsersLength",
      "offset": [
        13906,
        14006
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x234"
    },
    "1151": {
      "fn": "CLHouse.GetArrUsersLength",
      "offset": [
        13906,
        14006
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1152": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14112,
        14221
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1153": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14112,
        14221
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x488"
    },
    "1156": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14112,
        14221
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xF4B"
    },
    "1159": {
      "fn": "CLHouse.GetProposalList",
      "jump": "i",
      "offset": [
        14112,
        14221
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1160": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14112,
        14221
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1161": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14112,
        14221
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1163": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14112,
        14221
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1164": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14112,
        14221
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x23E"
    },
    "1167": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14112,
        14221
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1168": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14112,
        14221
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1169": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14112,
        14221
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1A6A"
    },
    "1172": {
      "fn": "CLHouse.GetProposalList",
      "jump": "i",
      "offset": [
        14112,
        14221
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1173": {
      "offset": [
        1282,
        1326
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1174": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4A8"
    },
    "1177": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4A3"
    },
    "1180": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "1181": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1183": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x15E9"
    },
    "1186": {
      "fn": "CLHouse.GetProposalList",
      "jump": "i",
      "offset": [
        1282,
        1326
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1187": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1188": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x10D0"
    },
    "1191": {
      "fn": "CLHouse.GetProposalList",
      "jump": "i",
      "offset": [
        1282,
        1326
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1192": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1193": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1195": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1196": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1201": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1203": {
      "op": "SHL"
    },
    "1204": {
      "op": "SUB"
    },
    "1205": {
      "op": "SWAP6"
    },
    "1206": {
      "op": "DUP7"
    },
    "1207": {
      "op": "AND"
    },
    "1208": {
      "op": "DUP2"
    },
    "1209": {
      "op": "MSTORE"
    },
    "1210": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1212": {
      "op": "DUP2"
    },
    "1213": {
      "op": "ADD"
    },
    "1214": {
      "op": "SWAP5"
    },
    "1215": {
      "op": "SWAP1"
    },
    "1216": {
      "op": "SWAP5"
    },
    "1217": {
      "op": "MSTORE"
    },
    "1218": {
      "op": "SWAP2"
    },
    "1219": {
      "op": "DUP5"
    },
    "1220": {
      "op": "AND"
    },
    "1221": {
      "op": "SWAP2"
    },
    "1222": {
      "op": "DUP4"
    },
    "1223": {
      "op": "ADD"
    },
    "1224": {
      "op": "SWAP2"
    },
    "1225": {
      "op": "SWAP1"
    },
    "1226": {
      "op": "SWAP2"
    },
    "1227": {
      "op": "MSTORE"
    },
    "1228": {
      "op": "SWAP1"
    },
    "1229": {
      "op": "SWAP2"
    },
    "1230": {
      "op": "AND"
    },
    "1231": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1233": {
      "op": "DUP3"
    },
    "1234": {
      "op": "ADD"
    },
    "1235": {
      "op": "MSTORE"
    },
    "1236": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1238": {
      "op": "ADD"
    },
    "1239": {
      "offset": [
        1282,
        1326
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x23E"
    },
    "1242": {
      "op": "JUMP"
    },
    "1243": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3137,
        3891
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1244": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3137,
        3891
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4EE"
    },
    "1247": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3137,
        3891
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4E9"
    },
    "1250": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3137,
        3891
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1251": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3137,
        3891
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1253": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3137,
        3891
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1B3F"
    },
    "1256": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        3137,
        3891
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1257": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3137,
        3891
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1258": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3137,
        3891
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1118"
    },
    "1261": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        3137,
        3891
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1262": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3137,
        3891
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1263": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3137,
        3891
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1265": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3137,
        3891
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1266": {
      "op": "SWAP1"
    },
    "1267": {
      "op": "ISZERO"
    },
    "1268": {
      "op": "ISZERO"
    },
    "1269": {
      "op": "DUP2"
    },
    "1270": {
      "op": "MSTORE"
    },
    "1271": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1273": {
      "op": "ADD"
    },
    "1274": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3137,
        3891
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x23E"
    },
    "1277": {
      "op": "JUMP"
    },
    "1278": {
      "offset": [
        1086,
        1153
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1279": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x511"
    },
    "1282": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x50C"
    },
    "1285": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "1286": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1288": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1BA4"
    },
    "1291": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        1086,
        1153
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1292": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1293": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x11DA"
    },
    "1296": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        1086,
        1153
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1297": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1298": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1300": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1301": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x23E"
    },
    "1304": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "1305": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "1306": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1307": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1308": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1BD0"
    },
    "1311": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        1086,
        1153
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1312": {
      "offset": [
        751,
        773
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1313": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        751,
        773
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1315": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        751,
        773
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1316": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        751,
        773
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x25A"
    },
    "1319": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        751,
        773
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1324": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1326": {
      "op": "SHL"
    },
    "1327": {
      "op": "SUB"
    },
    "1328": {
      "offset": [
        751,
        773
      ],
      "op": "AND",
      "path": "23"
    },
    "1329": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        751,
        773
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1330": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        751,
        773
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1331": {
      "offset": [
        1195,
        1228
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1332": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x546"
    },
    "1335": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x541"
    },
    "1338": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "1339": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1341": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x15E9"
    },
    "1344": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        1195,
        1228
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1345": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1346": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1297"
    },
    "1349": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        1195,
        1228
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1350": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1351": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1353": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1354": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x23E"
    },
    "1357": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP10",
      "path": "23"
    },
    "1358": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP9",
      "path": "23"
    },
    "1359": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP8",
      "path": "23"
    },
    "1360": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP7",
      "path": "23"
    },
    "1361": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP6",
      "path": "23"
    },
    "1362": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "1363": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "1364": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "1365": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1366": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1367": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1BFC"
    },
    "1370": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        1195,
        1228
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1371": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        7754,
        8592
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1372": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        7754,
        8592
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x234"
    },
    "1375": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        7754,
        8592
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x569"
    },
    "1378": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        7754,
        8592
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1379": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        7754,
        8592
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1381": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        7754,
        8592
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1C64"
    },
    "1384": {
      "fn": "CLHouse.PropTxERC20",
      "jump": "i",
      "offset": [
        7754,
        8592
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1385": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        7754,
        8592
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1386": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        7754,
        8592
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1396"
    },
    "1389": {
      "fn": "CLHouse.PropTxERC20",
      "jump": "i",
      "offset": [
        7754,
        8592
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1390": {
      "offset": [
        487,
        511
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1391": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        487,
        511
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "1393": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        487,
        511
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1394": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        487,
        511
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x286"
    },
    "1397": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        487,
        511
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1398": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        487,
        511
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x100"
    },
    "1401": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        487,
        511
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1402": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        487,
        511
      ],
      "op": "DIV",
      "path": "23"
    },
    "1403": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        487,
        511
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "1405": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        487,
        511
      ],
      "op": "AND",
      "path": "23"
    },
    "1406": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        487,
        511
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1407": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        487,
        511
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1408": {
      "offset": [
        593,
        624
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1409": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        593,
        624
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "1411": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        593,
        624
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1412": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        593,
        624
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x286"
    },
    "1415": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        593,
        624
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1416": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        593,
        624
      ],
      "op": "PUSH5",
      "path": "23",
      "value": "0x100000000"
    },
    "1422": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        593,
        624
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1423": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        593,
        624
      ],
      "op": "DIV",
      "path": "23"
    },
    "1424": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        593,
        624
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "1426": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        593,
        624
      ],
      "op": "AND",
      "path": "23"
    },
    "1427": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        593,
        624
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1428": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        593,
        624
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1429": {
      "offset": [
        643,
        667
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1430": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        643,
        667
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "1432": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        643,
        667
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1433": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        643,
        667
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4EE"
    },
    "1436": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        643,
        667
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1437": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        643,
        667
      ],
      "op": "PUSH6",
      "path": "23",
      "value": "0x10000000000"
    },
    "1444": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        643,
        667
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1445": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        643,
        667
      ],
      "op": "DIV",
      "path": "23"
    },
    "1446": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        643,
        667
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "1448": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        643,
        667
      ],
      "op": "AND",
      "path": "23"
    },
    "1449": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        643,
        667
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1450": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        643,
        667
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1451": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12302,
        13084
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1452": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12552
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x2"
    },
    "1454": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12552
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1455": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12579,
        12801
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1457": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12579,
        12801
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1458": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12490,
        12497
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1460": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12490,
        12497
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1461": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12490,
        12497
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1462": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12490,
        12497
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1463": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1467": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1469": {
      "op": "SHL"
    },
    "1470": {
      "op": "SUB"
    },
    "1471": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12552
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1472": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12552
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1473": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12552
      ],
      "op": "AND",
      "path": "18"
    },
    "1474": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12552
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1475": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12579,
        12801
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5D6"
    },
    "1478": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12579,
        12801
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1479": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12686,
        12698
      ],
      "op": "DUP9",
      "path": "18"
    },
    "1480": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12686,
        12698
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1481": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12716,
        12729
      ],
      "op": "DUP9",
      "path": "18"
    },
    "1482": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12716,
        12729
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1483": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12747,
        12759
      ],
      "op": "DUP9",
      "path": "18"
    },
    "1484": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12747,
        12759
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1485": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12777,
        12787
      ],
      "op": "DUP9",
      "path": "18"
    },
    "1486": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12777,
        12787
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1487": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12579,
        12801
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "1489": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12579,
        12801
      ],
      "op": "ADD",
      "path": "18"
    },
    "1490": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12579,
        12801
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1CB6"
    },
    "1493": {
      "fn": "CLHouse.PropSellERC20",
      "jump": "i",
      "offset": [
        12579,
        12801
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1494": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12579,
        12801
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1495": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12579,
        12801
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1497": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12579,
        12801
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1498": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12579,
        12801
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1499": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1501": {
      "op": "NOT"
    },
    "1502": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12579,
        12801
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1503": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12579,
        12801
      ],
      "op": "DUP5",
      "path": "18"
    },
    "1504": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12579,
        12801
      ],
      "op": "SUB",
      "path": "18"
    },
    "1505": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12579,
        12801
      ],
      "op": "ADD",
      "path": "18"
    },
    "1506": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12579,
        12801
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1507": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12579,
        12801
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1508": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12579,
        12801
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1509": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12579,
        12801
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1510": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12579,
        12801
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1511": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12579,
        12801
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1513": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12579,
        12801
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1514": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12579,
        12801
      ],
      "op": "ADD",
      "path": "18"
    },
    "1515": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12579,
        12801
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1516": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12579,
        12801
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1521": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1523": {
      "op": "SHL"
    },
    "1524": {
      "op": "SUB"
    },
    "1525": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12579,
        12801
      ],
      "op": "AND",
      "path": "18"
    },
    "1526": {
      "op": "PUSH4",
      "value": "0x4F17A9B"
    },
    "1531": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1533": {
      "op": "SHL"
    },
    "1534": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12579,
        12801
      ],
      "op": "OR",
      "path": "18"
    },
    "1535": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12579,
        12801
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1536": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12579,
        12801
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1537": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12811
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1538": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12811
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x60B"
    },
    "1541": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12811
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1542": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12579,
        12801
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1543": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12811
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1CEE"
    },
    "1546": {
      "fn": "CLHouse.PropSellERC20",
      "jump": "i",
      "offset": [
        12539,
        12811
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1547": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12811
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1548": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12811
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1550": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12811
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1552": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12811
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1553": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12811
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1554": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12811
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1555": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12811
      ],
      "op": "SUB",
      "path": "18"
    },
    "1556": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12811
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1557": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12811
      ],
      "op": "DUP6",
      "path": "18"
    },
    "1558": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12811
      ],
      "op": "GAS",
      "path": "18"
    },
    "1559": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12811
      ],
      "op": "DELEGATECALL",
      "path": "18"
    },
    "1560": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12811
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1561": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12811
      ],
      "op": "POP",
      "path": "18"
    },
    "1562": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12811
      ],
      "op": "POP",
      "path": "18"
    },
    "1563": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12811
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "1564": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12811
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1565": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12811
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1567": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12811
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1568": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12811
      ],
      "op": "EQ",
      "path": "18"
    },
    "1569": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12811
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x646"
    },
    "1572": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12811
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1573": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12811
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1575": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12811
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1576": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12811
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1577": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12811
      ],
      "op": "POP",
      "path": "18"
    },
    "1578": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12811
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "1580": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12811
      ],
      "op": "NOT",
      "path": "18"
    },
    "1581": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12811
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3F"
    },
    "1583": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12811
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "1584": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12811
      ],
      "op": "ADD",
      "path": "18"
    },
    "1585": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12811
      ],
      "op": "AND",
      "path": "18"
    },
    "1586": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12811
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1587": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12811
      ],
      "op": "ADD",
      "path": "18"
    },
    "1588": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12811
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1590": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12811
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1591": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12811
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "1592": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12811
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1593": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12811
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1594": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12811
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "1595": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12811
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1597": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12811
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1599": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12811
      ],
      "op": "DUP5",
      "path": "18"
    },
    "1600": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12811
      ],
      "op": "ADD",
      "path": "18"
    },
    "1601": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12811
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "1602": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12811
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x64B"
    },
    "1605": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12811
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1606": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12811
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1607": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12811
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "1609": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12811
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1610": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12811
      ],
      "op": "POP",
      "path": "18"
    },
    "1611": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12811
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1612": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12539,
        12811
      ],
      "op": "POP",
      "path": "18"
    },
    "1613": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12514,
        12811
      ],
      "op": "POP",
      "path": "18"
    },
    "1614": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12514,
        12811
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1615": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12514,
        12811
      ],
      "op": "POP",
      "path": "18"
    },
    "1616": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12862,
        12866
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1618": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12856,
        12867
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1619": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12892,
        12908
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "1620": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12944,
        12948
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1621": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12941,
        12942
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1623": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12936,
        12939
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1624": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12921,
        12949
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "1625": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12973,
        12986
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1626": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12962,
        13038
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x661"
    },
    "1629": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12962,
        13038
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1630": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13019,
        13023
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1631": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13014,
        13017
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1632": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13007,
        13024
      ],
      "op": "REVERT",
      "path": "18"
    },
    "1633": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        12962,
        13038
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1634": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13063,
        13067
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1635": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13058,
        13061
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1636": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13051,
        13068
      ],
      "op": "RETURN",
      "path": "18"
    },
    "1637": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11448,
        12296
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1638": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11714,
        11727
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x2"
    },
    "1640": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11714,
        11727
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1641": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11754,
        12013
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1643": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11754,
        12013
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1644": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11665,
        11672
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1646": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11665,
        11672
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1647": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11665,
        11672
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1648": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11665,
        11672
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1653": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1655": {
      "op": "SHL"
    },
    "1656": {
      "op": "SUB"
    },
    "1657": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11714,
        11727
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1658": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11714,
        11727
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1659": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11714,
        11727
      ],
      "op": "AND",
      "path": "18"
    },
    "1660": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11714,
        11727
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1661": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11754,
        12013
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x692"
    },
    "1664": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11754,
        12013
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1665": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11869,
        11881
      ],
      "op": "DUP10",
      "path": "18"
    },
    "1666": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11869,
        11881
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1667": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11899,
        11910
      ],
      "op": "DUP10",
      "path": "18"
    },
    "1668": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11899,
        11910
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1669": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11928,
        11941
      ],
      "op": "DUP10",
      "path": "18"
    },
    "1670": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11928,
        11941
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1671": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11959,
        11971
      ],
      "op": "DUP10",
      "path": "18"
    },
    "1672": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11959,
        11971
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1673": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11989,
        11999
      ],
      "op": "DUP10",
      "path": "18"
    },
    "1674": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11989,
        11999
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1675": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11754,
        12013
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "1677": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11754,
        12013
      ],
      "op": "ADD",
      "path": "18"
    },
    "1678": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11754,
        12013
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1D0A"
    },
    "1681": {
      "fn": "CLHouse.PropSwapERC20",
      "jump": "i",
      "offset": [
        11754,
        12013
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1682": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11754,
        12013
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1683": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11754,
        12013
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1685": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11754,
        12013
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1686": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11754,
        12013
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1687": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1689": {
      "op": "NOT"
    },
    "1690": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11754,
        12013
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1691": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11754,
        12013
      ],
      "op": "DUP5",
      "path": "18"
    },
    "1692": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11754,
        12013
      ],
      "op": "SUB",
      "path": "18"
    },
    "1693": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11754,
        12013
      ],
      "op": "ADD",
      "path": "18"
    },
    "1694": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11754,
        12013
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1695": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11754,
        12013
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1696": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11754,
        12013
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1697": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11754,
        12013
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1698": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11754,
        12013
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1699": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11754,
        12013
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1701": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11754,
        12013
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1702": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11754,
        12013
      ],
      "op": "ADD",
      "path": "18"
    },
    "1703": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11754,
        12013
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1704": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11754,
        12013
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1705": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1707": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1709": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1711": {
      "op": "SHL"
    },
    "1712": {
      "op": "SUB"
    },
    "1713": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11754,
        12013
      ],
      "op": "AND",
      "path": "18"
    },
    "1714": {
      "op": "PUSH4",
      "value": "0x152DE3B9"
    },
    "1719": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1721": {
      "op": "SHL"
    },
    "1722": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11754,
        12013
      ],
      "op": "OR",
      "path": "18"
    },
    "1723": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11754,
        12013
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1724": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11754,
        12013
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1725": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11714,
        12023
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1726": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11714,
        12023
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x60B"
    },
    "1729": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11714,
        12023
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1730": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11754,
        12013
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1731": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        11714,
        12023
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1CEE"
    },
    "1734": {
      "fn": "CLHouse.PropSwapERC20",
      "jump": "i",
      "offset": [
        11714,
        12023
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1735": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13090,
        13868
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1736": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13325,
        13338
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x2"
    },
    "1738": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13325,
        13338
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1739": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13365,
        13585
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1741": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13365,
        13585
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1742": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13276,
        13283
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1744": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13276,
        13283
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1745": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13276,
        13283
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1746": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13276,
        13283
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1751": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1753": {
      "op": "SHL"
    },
    "1754": {
      "op": "SUB"
    },
    "1755": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13325,
        13338
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1756": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13325,
        13338
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1757": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13325,
        13338
      ],
      "op": "AND",
      "path": "18"
    },
    "1758": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13325,
        13338
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1759": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13365,
        13585
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x6F2"
    },
    "1762": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13365,
        13585
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1763": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13471,
        13482
      ],
      "op": "DUP9",
      "path": "18"
    },
    "1764": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13471,
        13482
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1765": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13500,
        13513
      ],
      "op": "DUP9",
      "path": "18"
    },
    "1766": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13500,
        13513
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1767": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13531,
        13543
      ],
      "op": "DUP9",
      "path": "18"
    },
    "1768": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13531,
        13543
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1769": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13561,
        13571
      ],
      "op": "DUP9",
      "path": "18"
    },
    "1770": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13561,
        13571
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1771": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13365,
        13585
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "1773": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13365,
        13585
      ],
      "op": "ADD",
      "path": "18"
    },
    "1774": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13365,
        13585
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1CB6"
    },
    "1777": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "i",
      "offset": [
        13365,
        13585
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1778": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13365,
        13585
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1779": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13365,
        13585
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1781": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13365,
        13585
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1782": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13365,
        13585
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1783": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1785": {
      "op": "NOT"
    },
    "1786": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13365,
        13585
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1787": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13365,
        13585
      ],
      "op": "DUP5",
      "path": "18"
    },
    "1788": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13365,
        13585
      ],
      "op": "SUB",
      "path": "18"
    },
    "1789": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13365,
        13585
      ],
      "op": "ADD",
      "path": "18"
    },
    "1790": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13365,
        13585
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1791": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13365,
        13585
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1792": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13365,
        13585
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1793": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13365,
        13585
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1794": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13365,
        13585
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1795": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13365,
        13585
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1797": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13365,
        13585
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1798": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13365,
        13585
      ],
      "op": "ADD",
      "path": "18"
    },
    "1799": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13365,
        13585
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1800": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13365,
        13585
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1801": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1805": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1807": {
      "op": "SHL"
    },
    "1808": {
      "op": "SUB"
    },
    "1809": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13365,
        13585
      ],
      "op": "AND",
      "path": "18"
    },
    "1810": {
      "op": "PUSH4",
      "value": "0x899B86F"
    },
    "1815": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "1817": {
      "op": "SHL"
    },
    "1818": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13365,
        13585
      ],
      "op": "OR",
      "path": "18"
    },
    "1819": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13365,
        13585
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1820": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13365,
        13585
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1821": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13325,
        13595
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1822": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13325,
        13595
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x60B"
    },
    "1825": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13325,
        13595
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1826": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13365,
        13585
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1827": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13325,
        13595
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1CEE"
    },
    "1830": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "i",
      "offset": [
        13325,
        13595
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1831": {
      "offset": [
        1382,
        1407
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1832": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x11"
    },
    "1834": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1835": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1836": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1837": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1838": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "LT",
      "path": "23"
    },
    "1839": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x737"
    },
    "1842": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1843": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1845": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1846": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "REVERT",
      "path": "23"
    },
    "1847": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1848": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1850": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1851": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1852": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1853": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1855": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1856": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1857": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "1858": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1860": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1861": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1862": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "MUL",
      "path": "23"
    },
    "1863": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "ADD",
      "path": "23"
    },
    "1864": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1865": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1866": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "1868": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1869": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "ADD",
      "path": "23"
    },
    "1870": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1871": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1872": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1874": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1876": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1878": {
      "op": "SHL"
    },
    "1879": {
      "op": "SUB"
    },
    "1880": {
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1881": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "1882": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "AND",
      "path": "23"
    },
    "1883": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "1884": {
      "op": "POP"
    },
    "1885": {
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1886": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x766"
    },
    "1889": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1890": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1D4F"
    },
    "1893": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "i",
      "offset": [
        1382,
        1407
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1894": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1895": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1896": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1F"
    },
    "1898": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "ADD",
      "path": "23"
    },
    "1899": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1901": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1902": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1903": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DIV",
      "path": "23"
    },
    "1904": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "MUL",
      "path": "23"
    },
    "1905": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1907": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "ADD",
      "path": "23"
    },
    "1908": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1910": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1911": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1912": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1913": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "ADD",
      "path": "23"
    },
    "1914": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1916": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1917": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1918": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "1919": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1920": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1921": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1922": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1923": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1924": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1926": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "ADD",
      "path": "23"
    },
    "1927": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1928": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1929": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1930": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x792"
    },
    "1933": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1934": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1D4F"
    },
    "1937": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "i",
      "offset": [
        1382,
        1407
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1938": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1939": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1940": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1941": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x7DF"
    },
    "1944": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1945": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1946": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1F"
    },
    "1948": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "LT",
      "path": "23"
    },
    "1949": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x7B4"
    },
    "1952": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1953": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x100"
    },
    "1956": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1957": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP4",
      "path": "23"
    },
    "1958": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1959": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DIV",
      "path": "23"
    },
    "1960": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "MUL",
      "path": "23"
    },
    "1961": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP4",
      "path": "23"
    },
    "1962": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1963": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1964": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1966": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "ADD",
      "path": "23"
    },
    "1967": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1968": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x7DF"
    },
    "1971": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1972": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1973": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1974": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "ADD",
      "path": "23"
    },
    "1975": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1976": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1977": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1979": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1980": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1982": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1984": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "1985": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1986": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1987": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1988": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1989": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1990": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1991": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1992": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "1994": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "ADD",
      "path": "23"
    },
    "1995": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1996": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1998": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "ADD",
      "path": "23"
    },
    "1999": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2000": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2001": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "GT",
      "path": "23"
    },
    "2002": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x7C2"
    },
    "2005": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2006": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2007": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2008": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SUB",
      "path": "23"
    },
    "2009": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1F"
    },
    "2011": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "AND",
      "path": "23"
    },
    "2012": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2013": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "ADD",
      "path": "23"
    },
    "2014": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2015": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2016": {
      "op": "POP"
    },
    "2017": {
      "op": "POP"
    },
    "2018": {
      "op": "POP"
    },
    "2019": {
      "op": "POP"
    },
    "2020": {
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "2022": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2023": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "ADD",
      "path": "23"
    },
    "2024": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2025": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x3"
    },
    "2027": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2028": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "2029": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "ADD",
      "path": "23"
    },
    "2030": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2031": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2032": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "2033": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2034": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "2036": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2037": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2038": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "AND",
      "path": "23"
    },
    "2039": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "2040": {
      "op": "POP"
    },
    "2041": {
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x100"
    },
    "2044": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2045": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2046": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DIV",
      "path": "23"
    },
    "2047": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "AND",
      "path": "23"
    },
    "2048": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP6",
      "path": "23"
    },
    "2049": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "o",
      "offset": [
        1382,
        1407
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2050": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5509,
        6298
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2051": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        5768
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x2"
    },
    "2053": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        5768
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2054": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5795,
        6012
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2056": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5795,
        6012
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2057": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5699,
        5713
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2059": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5699,
        5713
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2060": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5699,
        5713
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2061": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5699,
        5713
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2066": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2068": {
      "op": "SHL"
    },
    "2069": {
      "op": "SUB"
    },
    "2070": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        5768
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2071": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        5768
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2072": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        5768
      ],
      "op": "AND",
      "path": "18"
    },
    "2073": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        5768
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2074": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5795,
        6012
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x82D"
    },
    "2077": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5795,
        6012
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2078": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5901,
        5912
      ],
      "op": "DUP9",
      "path": "18"
    },
    "2079": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5901,
        5912
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2080": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5930,
        5942
      ],
      "op": "DUP9",
      "path": "18"
    },
    "2081": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5930,
        5942
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2082": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5960,
        5970
      ],
      "op": "DUP9",
      "path": "18"
    },
    "2083": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5960,
        5970
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2084": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5988,
        5998
      ],
      "op": "DUP9",
      "path": "18"
    },
    "2085": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5988,
        5998
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2086": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5795,
        6012
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "2088": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5795,
        6012
      ],
      "op": "ADD",
      "path": "18"
    },
    "2089": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5795,
        6012
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1D8A"
    },
    "2092": {
      "fn": "CLHouse.PropRemoveUser",
      "jump": "i",
      "offset": [
        5795,
        6012
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2093": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5795,
        6012
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2094": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5795,
        6012
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2096": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5795,
        6012
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2097": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5795,
        6012
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2098": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2100": {
      "op": "NOT"
    },
    "2101": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5795,
        6012
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2102": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5795,
        6012
      ],
      "op": "DUP5",
      "path": "18"
    },
    "2103": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5795,
        6012
      ],
      "op": "SUB",
      "path": "18"
    },
    "2104": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5795,
        6012
      ],
      "op": "ADD",
      "path": "18"
    },
    "2105": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5795,
        6012
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2106": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5795,
        6012
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2107": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5795,
        6012
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2108": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5795,
        6012
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2109": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5795,
        6012
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2110": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5795,
        6012
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2112": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5795,
        6012
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2113": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5795,
        6012
      ],
      "op": "ADD",
      "path": "18"
    },
    "2114": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5795,
        6012
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2115": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5795,
        6012
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2116": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2118": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2120": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2122": {
      "op": "SHL"
    },
    "2123": {
      "op": "SUB"
    },
    "2124": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5795,
        6012
      ],
      "op": "AND",
      "path": "18"
    },
    "2125": {
      "op": "PUSH4",
      "value": "0xA95FBE1"
    },
    "2130": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2132": {
      "op": "SHL"
    },
    "2133": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5795,
        6012
      ],
      "op": "OR",
      "path": "18"
    },
    "2134": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5795,
        6012
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2135": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5795,
        6012
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2136": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        6022
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2137": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        6022
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x862"
    },
    "2140": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        6022
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2141": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5795,
        6012
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2142": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        6022
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1CEE"
    },
    "2145": {
      "fn": "CLHouse.PropRemoveUser",
      "jump": "i",
      "offset": [
        5755,
        6022
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2146": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        6022
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2147": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        6022
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2149": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        6022
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2151": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        6022
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2152": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        6022
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2153": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        6022
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2154": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        6022
      ],
      "op": "SUB",
      "path": "18"
    },
    "2155": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        6022
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2156": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        6022
      ],
      "op": "DUP6",
      "path": "18"
    },
    "2157": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        6022
      ],
      "op": "GAS",
      "path": "18"
    },
    "2158": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        6022
      ],
      "op": "DELEGATECALL",
      "path": "18"
    },
    "2159": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        6022
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2160": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        6022
      ],
      "op": "POP",
      "path": "18"
    },
    "2161": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        6022
      ],
      "op": "POP",
      "path": "18"
    },
    "2162": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        6022
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "2163": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        6022
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2164": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        6022
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2166": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        6022
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2167": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        6022
      ],
      "op": "EQ",
      "path": "18"
    },
    "2168": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        6022
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x89D"
    },
    "2171": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        6022
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2172": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        6022
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2174": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        6022
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2175": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        6022
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2176": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        6022
      ],
      "op": "POP",
      "path": "18"
    },
    "2177": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        6022
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "2179": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        6022
      ],
      "op": "NOT",
      "path": "18"
    },
    "2180": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        6022
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3F"
    },
    "2182": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        6022
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "2183": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        6022
      ],
      "op": "ADD",
      "path": "18"
    },
    "2184": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        6022
      ],
      "op": "AND",
      "path": "18"
    },
    "2185": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        6022
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2186": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        6022
      ],
      "op": "ADD",
      "path": "18"
    },
    "2187": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        6022
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2189": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        6022
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2190": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        6022
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "2191": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        6022
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2192": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        6022
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2193": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        6022
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "2194": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        6022
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2196": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        6022
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2198": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        6022
      ],
      "op": "DUP5",
      "path": "18"
    },
    "2199": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        6022
      ],
      "op": "ADD",
      "path": "18"
    },
    "2200": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        6022
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "2201": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        6022
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x8A2"
    },
    "2204": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        6022
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2205": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        6022
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2206": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        6022
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "2208": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        6022
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2209": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        6022
      ],
      "op": "POP",
      "path": "18"
    },
    "2210": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        6022
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2211": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5755,
        6022
      ],
      "op": "POP",
      "path": "18"
    },
    "2212": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5730,
        6022
      ],
      "op": "POP",
      "path": "18"
    },
    "2213": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5730,
        6022
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2214": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5730,
        6022
      ],
      "op": "POP",
      "path": "18"
    },
    "2215": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6073,
        6077
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2217": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6067,
        6078
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2218": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6103,
        6119
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "2219": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6155,
        6159
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2220": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6152,
        6153
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2222": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6147,
        6150
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2223": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6132,
        6160
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "2224": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6184,
        6197
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2225": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6173,
        6249
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x8B8"
    },
    "2228": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6173,
        6249
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2229": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6230,
        6234
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2230": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6225,
        6228
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2231": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6218,
        6235
      ],
      "op": "REVERT",
      "path": "18"
    },
    "2232": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6173,
        6249
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2233": {
      "op": "POP"
    },
    "2234": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6272,
        6282
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2235": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6272,
        6282
      ],
      "op": "SWAP7",
      "path": "18"
    },
    "2236": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5509,
        6298
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "2237": {
      "op": "POP"
    },
    "2238": {
      "op": "POP"
    },
    "2239": {
      "op": "POP"
    },
    "2240": {
      "op": "POP"
    },
    "2241": {
      "op": "POP"
    },
    "2242": {
      "op": "POP"
    },
    "2243": {
      "fn": "CLHouse.PropRemoveUser",
      "jump": "o",
      "offset": [
        5509,
        6298
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2244": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4327,
        5233
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2245": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4640
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x2"
    },
    "2247": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4640
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2248": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4667,
        4947
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2250": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4667,
        4947
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2251": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4571,
        4585
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2253": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4571,
        4585
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2254": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4571,
        4585
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2255": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4571,
        4585
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2260": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2262": {
      "op": "SHL"
    },
    "2263": {
      "op": "SUB"
    },
    "2264": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4640
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2265": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4640
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2266": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4640
      ],
      "op": "AND",
      "path": "18"
    },
    "2267": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4640
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2268": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4667,
        4947
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x8F3"
    },
    "2271": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4667,
        4947
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2272": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4785,
        4796
      ],
      "op": "DUP11",
      "path": "18"
    },
    "2273": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4785,
        4796
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2274": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4814,
        4819
      ],
      "op": "DUP11",
      "path": "18"
    },
    "2275": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4814,
        4819
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2276": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4837,
        4849
      ],
      "op": "DUP11",
      "path": "18"
    },
    "2277": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4837,
        4849
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2278": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4867,
        4877
      ],
      "op": "DUP11",
      "path": "18"
    },
    "2279": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4867,
        4877
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2280": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4895,
        4905
      ],
      "op": "DUP11",
      "path": "18"
    },
    "2281": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4895,
        4905
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2282": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4923,
        4933
      ],
      "op": "DUP11",
      "path": "18"
    },
    "2283": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4923,
        4933
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2284": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4667,
        4947
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "2286": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4667,
        4947
      ],
      "op": "ADD",
      "path": "18"
    },
    "2287": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4667,
        4947
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1DD1"
    },
    "2290": {
      "fn": "CLHouse.PropInviteUser",
      "jump": "i",
      "offset": [
        4667,
        4947
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2291": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4667,
        4947
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2292": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4667,
        4947
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2294": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4667,
        4947
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2295": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4667,
        4947
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2296": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2298": {
      "op": "NOT"
    },
    "2299": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4667,
        4947
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2300": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4667,
        4947
      ],
      "op": "DUP5",
      "path": "18"
    },
    "2301": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4667,
        4947
      ],
      "op": "SUB",
      "path": "18"
    },
    "2302": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4667,
        4947
      ],
      "op": "ADD",
      "path": "18"
    },
    "2303": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4667,
        4947
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2304": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4667,
        4947
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2305": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4667,
        4947
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2306": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4667,
        4947
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2307": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4667,
        4947
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2308": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4667,
        4947
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2310": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4667,
        4947
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2311": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4667,
        4947
      ],
      "op": "ADD",
      "path": "18"
    },
    "2312": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4667,
        4947
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2313": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4667,
        4947
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2314": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2316": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2318": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2320": {
      "op": "SHL"
    },
    "2321": {
      "op": "SUB"
    },
    "2322": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4667,
        4947
      ],
      "op": "AND",
      "path": "18"
    },
    "2323": {
      "op": "PUSH4",
      "value": "0x31A0AFA7"
    },
    "2328": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2330": {
      "op": "SHL"
    },
    "2331": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4667,
        4947
      ],
      "op": "OR",
      "path": "18"
    },
    "2332": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4667,
        4947
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2333": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4667,
        4947
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2334": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4957
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2335": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4957
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x928"
    },
    "2338": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4957
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2339": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4667,
        4947
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2340": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4957
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1CEE"
    },
    "2343": {
      "fn": "CLHouse.PropInviteUser",
      "jump": "i",
      "offset": [
        4627,
        4957
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2344": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4957
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2345": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4957
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2347": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4957
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2349": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4957
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2350": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4957
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2351": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4957
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2352": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4957
      ],
      "op": "SUB",
      "path": "18"
    },
    "2353": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4957
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2354": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4957
      ],
      "op": "DUP6",
      "path": "18"
    },
    "2355": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4957
      ],
      "op": "GAS",
      "path": "18"
    },
    "2356": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4957
      ],
      "op": "DELEGATECALL",
      "path": "18"
    },
    "2357": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4957
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2358": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4957
      ],
      "op": "POP",
      "path": "18"
    },
    "2359": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4957
      ],
      "op": "POP",
      "path": "18"
    },
    "2360": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4957
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "2361": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4957
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2362": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4957
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2364": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4957
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2365": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4957
      ],
      "op": "EQ",
      "path": "18"
    },
    "2366": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4957
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x963"
    },
    "2369": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4957
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2370": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4957
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2372": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4957
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2373": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4957
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2374": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4957
      ],
      "op": "POP",
      "path": "18"
    },
    "2375": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4957
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "2377": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4957
      ],
      "op": "NOT",
      "path": "18"
    },
    "2378": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4957
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3F"
    },
    "2380": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4957
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "2381": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4957
      ],
      "op": "ADD",
      "path": "18"
    },
    "2382": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4957
      ],
      "op": "AND",
      "path": "18"
    },
    "2383": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4957
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2384": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4957
      ],
      "op": "ADD",
      "path": "18"
    },
    "2385": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4957
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2387": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4957
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2388": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4957
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "2389": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4957
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2390": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4957
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2391": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4957
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "2392": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4957
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2394": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4957
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2396": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4957
      ],
      "op": "DUP5",
      "path": "18"
    },
    "2397": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4957
      ],
      "op": "ADD",
      "path": "18"
    },
    "2398": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4957
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "2399": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4957
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x968"
    },
    "2402": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4957
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2403": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4957
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2404": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4957
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "2406": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4957
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2407": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4957
      ],
      "op": "POP",
      "path": "18"
    },
    "2408": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4957
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2409": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4627,
        4957
      ],
      "op": "POP",
      "path": "18"
    },
    "2410": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4602,
        4957
      ],
      "op": "POP",
      "path": "18"
    },
    "2411": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4602,
        4957
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2412": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4602,
        4957
      ],
      "op": "POP",
      "path": "18"
    },
    "2413": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5008,
        5012
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2415": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5002,
        5013
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2416": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5038,
        5054
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "2417": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5090,
        5094
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2418": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5087,
        5088
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2420": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5082,
        5085
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2421": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5067,
        5095
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "2422": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5119,
        5132
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2423": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5108,
        5184
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x97E"
    },
    "2426": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5108,
        5184
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2427": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5165,
        5169
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2428": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5160,
        5163
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2429": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5153,
        5170
      ],
      "op": "REVERT",
      "path": "18"
    },
    "2430": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5108,
        5184
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2431": {
      "op": "POP"
    },
    "2432": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5207,
        5217
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2433": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5207,
        5217
      ],
      "op": "SWAP9",
      "path": "18"
    },
    "2434": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4327,
        5233
      ],
      "op": "SWAP8",
      "path": "18"
    },
    "2435": {
      "op": "POP"
    },
    "2436": {
      "op": "POP"
    },
    "2437": {
      "op": "POP"
    },
    "2438": {
      "op": "POP"
    },
    "2439": {
      "op": "POP"
    },
    "2440": {
      "op": "POP"
    },
    "2441": {
      "op": "POP"
    },
    "2442": {
      "op": "POP"
    },
    "2443": {
      "fn": "CLHouse.PropInviteUser",
      "jump": "o",
      "offset": [
        4327,
        5233
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2444": {
      "offset": [
        1332,
        1376
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2445": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x10"
    },
    "2447": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2448": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2449": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2450": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2451": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "LT",
      "path": "23"
    },
    "2452": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x99C"
    },
    "2455": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2456": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2458": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2459": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "REVERT",
      "path": "23"
    },
    "2460": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2461": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2463": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2464": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2465": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2466": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2468": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2469": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2470": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "2471": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "ADD",
      "path": "23"
    },
    "2472": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2473": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "2475": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "AND",
      "path": "23"
    },
    "2476": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2477": {
      "op": "POP"
    },
    "2478": {
      "offset": [
        1332,
        1376
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2479": {
      "fn": "CLHouse.PropInviteUser",
      "jump": "o",
      "offset": [
        1332,
        1376
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2480": {
      "offset": [
        320,
        344
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2481": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2483": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2484": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2485": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x9BD"
    },
    "2488": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2489": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1D4F"
    },
    "2492": {
      "fn": "CLHouse.PropInviteUser",
      "jump": "i",
      "offset": [
        320,
        344
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2493": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2494": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2495": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1F"
    },
    "2497": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "ADD",
      "path": "23"
    },
    "2498": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2500": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2501": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2502": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "DIV",
      "path": "23"
    },
    "2503": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "MUL",
      "path": "23"
    },
    "2504": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2506": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "ADD",
      "path": "23"
    },
    "2507": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2509": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2510": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2511": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2512": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "ADD",
      "path": "23"
    },
    "2513": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2515": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2516": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2517": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "2518": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2519": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2520": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2521": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2522": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2523": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2525": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "ADD",
      "path": "23"
    },
    "2526": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2527": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2528": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2529": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x9E9"
    },
    "2532": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2533": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1D4F"
    },
    "2536": {
      "fn": "CLHouse.PropInviteUser",
      "jump": "i",
      "offset": [
        320,
        344
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2537": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2538": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2539": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "2540": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xA36"
    },
    "2543": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2544": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2545": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1F"
    },
    "2547": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "LT",
      "path": "23"
    },
    "2548": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xA0B"
    },
    "2551": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2552": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x100"
    },
    "2555": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2556": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2557": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2558": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "DIV",
      "path": "23"
    },
    "2559": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "MUL",
      "path": "23"
    },
    "2560": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2561": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2562": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2563": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2565": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "ADD",
      "path": "23"
    },
    "2566": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2567": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xA36"
    },
    "2570": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2571": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2572": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2573": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "ADD",
      "path": "23"
    },
    "2574": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2575": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2576": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2578": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2579": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2581": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2583": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "2584": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2585": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2586": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2587": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2588": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2589": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2590": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2591": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "2593": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "ADD",
      "path": "23"
    },
    "2594": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2595": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2597": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "ADD",
      "path": "23"
    },
    "2598": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2599": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2600": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "GT",
      "path": "23"
    },
    "2601": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xA19"
    },
    "2604": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2605": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2606": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2607": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "SUB",
      "path": "23"
    },
    "2608": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1F"
    },
    "2610": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "AND",
      "path": "23"
    },
    "2611": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2612": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "ADD",
      "path": "23"
    },
    "2613": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2614": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2615": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "POP",
      "path": "23"
    },
    "2616": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "POP",
      "path": "23"
    },
    "2617": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "POP",
      "path": "23"
    },
    "2618": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "POP",
      "path": "23"
    },
    "2619": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "POP",
      "path": "23"
    },
    "2620": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2621": {
      "fn": "CLHouse.PropInviteUser",
      "jump": "o",
      "offset": [
        320,
        344
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2622": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14343,
        14467
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2623": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14399,
        14422
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "2625": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14442,
        14460
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 1,
      "value": "0xE"
    },
    "2627": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2628": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2629": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2630": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2632": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "MUL",
      "path": "18"
    },
    "2633": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2635": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "ADD",
      "path": "18"
    },
    "2636": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2638": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2639": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2640": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2641": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "ADD",
      "path": "18"
    },
    "2642": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2644": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2645": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2646": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "2647": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2648": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2649": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2650": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2651": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2652": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2654": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "ADD",
      "path": "18"
    },
    "2655": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2657": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2658": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2659": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2660": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2661": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "LT",
      "path": "18"
    },
    "2662": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2663": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB4E"
    },
    "2666": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2667": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2669": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "DUP5",
      "path": "18"
    },
    "2670": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2671": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2672": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2674": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2675": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2676": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2677": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "2678": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2680": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2681": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2682": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "2684": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2685": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "ADD",
      "path": "18"
    },
    "2686": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2687": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2688": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2689": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "2691": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "DUP6",
      "path": "18"
    },
    "2692": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "MUL",
      "path": "18"
    },
    "2693": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2694": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2695": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "ADD",
      "path": "18"
    },
    "2696": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2697": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2702": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2704": {
      "op": "SHL"
    },
    "2705": {
      "op": "SUB"
    },
    "2706": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "AND",
      "path": "18"
    },
    "2707": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2708": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2709": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "2711": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2712": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "ADD",
      "path": "18"
    },
    "2713": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2714": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2715": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "2716": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "2717": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2718": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "2719": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2720": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "DUP5",
      "path": "18"
    },
    "2721": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "ADD",
      "path": "18"
    },
    "2722": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2723": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xAAB"
    },
    "2726": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2727": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1D4F"
    },
    "2730": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "jump": "i",
      "offset": [
        14435,
        14460
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2731": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2732": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2733": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "2735": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "ADD",
      "path": "18"
    },
    "2736": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2738": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2739": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2740": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "DIV",
      "path": "18"
    },
    "2741": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "MUL",
      "path": "18"
    },
    "2742": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2744": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "ADD",
      "path": "18"
    },
    "2745": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2747": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2748": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2749": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2750": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "ADD",
      "path": "18"
    },
    "2751": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2753": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2754": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2755": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "2756": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2757": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2758": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2759": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2760": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2761": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2763": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "ADD",
      "path": "18"
    },
    "2764": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2765": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2766": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2767": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xAD7"
    },
    "2770": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2771": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1D4F"
    },
    "2774": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "jump": "i",
      "offset": [
        14435,
        14460
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2775": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2776": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2777": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2778": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB24"
    },
    "2781": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2782": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2783": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "2785": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "LT",
      "path": "18"
    },
    "2786": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xAF9"
    },
    "2789": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2790": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100"
    },
    "2793": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2794": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2795": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2796": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "DIV",
      "path": "18"
    },
    "2797": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "MUL",
      "path": "18"
    },
    "2798": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2799": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2800": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2801": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2803": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "ADD",
      "path": "18"
    },
    "2804": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2805": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB24"
    },
    "2808": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2809": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2810": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2811": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "ADD",
      "path": "18"
    },
    "2812": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2813": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2814": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2816": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2817": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2819": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2821": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "2822": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2823": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2824": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2825": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2826": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2827": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2828": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2829": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "2831": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "ADD",
      "path": "18"
    },
    "2832": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2833": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2835": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "ADD",
      "path": "18"
    },
    "2836": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2837": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2838": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "GT",
      "path": "18"
    },
    "2839": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB07"
    },
    "2842": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2843": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2844": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2845": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "SUB",
      "path": "18"
    },
    "2846": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "2848": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "AND",
      "path": "18"
    },
    "2849": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2850": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "ADD",
      "path": "18"
    },
    "2851": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2852": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2853": {
      "op": "POP"
    },
    "2854": {
      "op": "POP"
    },
    "2855": {
      "op": "POP"
    },
    "2856": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2857": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2858": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2859": {
      "op": "POP"
    },
    "2860": {
      "op": "POP"
    },
    "2861": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x2"
    },
    "2863": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2864": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2865": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2866": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "ADD",
      "path": "18"
    },
    "2867": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2868": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "2870": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "AND",
      "path": "18"
    },
    "2871": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2872": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2873": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2875": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2876": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2877": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "ADD",
      "path": "18"
    },
    "2878": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2879": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2880": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2881": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2882": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "2884": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "2885": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2886": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "2887": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "ADD",
      "path": "18"
    },
    "2888": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2889": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "ADD",
      "path": "18"
    },
    "2890": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA62"
    },
    "2893": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2894": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2895": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "POP",
      "path": "18"
    },
    "2896": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "POP",
      "path": "18"
    },
    "2897": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "POP",
      "path": "18"
    },
    "2898": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "POP",
      "path": "18"
    },
    "2899": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2900": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14435,
        14460
      ],
      "op": "POP",
      "path": "18"
    },
    "2901": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        14343,
        14467
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2902": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "jump": "o",
      "offset": [
        14343,
        14467
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2903": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2161,
        2804
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2904": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2350,
        2363
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x2"
    },
    "2906": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2350,
        2363
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2907": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2390,
        2489
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2909": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2390,
        2489
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2910": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2390,
        2489
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "2912": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2390,
        2489
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2913": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2390,
        2489
      ],
      "op": "ADD",
      "path": "18"
    },
    "2914": {
      "op": "DUP4"
    },
    "2915": {
      "op": "SWAP1"
    },
    "2916": {
      "op": "MSTORE"
    },
    "2917": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2254,
        2265
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2919": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2254,
        2265
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2920": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2279,
        2300
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "2922": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2279,
        2300
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2923": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2254,
        2265
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2924": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2254,
        2265
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2927": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2929": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2931": {
      "op": "SHL"
    },
    "2932": {
      "op": "SUB"
    },
    "2933": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2350,
        2363
      ],
      "op": "AND",
      "path": "18"
    },
    "2934": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2350,
        2363
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2935": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2937": {
      "op": "ADD"
    },
    "2938": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2390,
        2489
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2940": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2390,
        2489
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2941": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2390,
        2489
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2942": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2944": {
      "op": "NOT"
    },
    "2945": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2390,
        2489
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2946": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2390,
        2489
      ],
      "op": "DUP5",
      "path": "18"
    },
    "2947": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2390,
        2489
      ],
      "op": "SUB",
      "path": "18"
    },
    "2948": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2390,
        2489
      ],
      "op": "ADD",
      "path": "18"
    },
    "2949": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2390,
        2489
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2950": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2390,
        2489
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2951": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2390,
        2489
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2952": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2390,
        2489
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2953": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2390,
        2489
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2954": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2390,
        2489
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2956": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2390,
        2489
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2957": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2390,
        2489
      ],
      "op": "ADD",
      "path": "18"
    },
    "2958": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2390,
        2489
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2959": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2390,
        2489
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2960": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2962": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2964": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2966": {
      "op": "SHL"
    },
    "2967": {
      "op": "SUB"
    },
    "2968": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2390,
        2489
      ],
      "op": "AND",
      "path": "18"
    },
    "2969": {
      "op": "PUSH4",
      "value": "0x5F3D99B3"
    },
    "2974": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2976": {
      "op": "SHL"
    },
    "2977": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2390,
        2489
      ],
      "op": "OR",
      "path": "18"
    },
    "2978": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2390,
        2489
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2979": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2390,
        2489
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2980": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2350,
        2499
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2981": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2350,
        2499
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xBAE"
    },
    "2984": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2350,
        2499
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2985": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2390,
        2489
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2986": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2350,
        2499
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1CEE"
    },
    "2989": {
      "fn": "CLHouse.ExecProp",
      "jump": "i",
      "offset": [
        2350,
        2499
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2990": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2350,
        2499
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2991": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2350,
        2499
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2993": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2350,
        2499
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2995": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2350,
        2499
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2996": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2350,
        2499
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2997": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2350,
        2499
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2998": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2350,
        2499
      ],
      "op": "SUB",
      "path": "18"
    },
    "2999": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2350,
        2499
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3000": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2350,
        2499
      ],
      "op": "DUP6",
      "path": "18"
    },
    "3001": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2350,
        2499
      ],
      "op": "GAS",
      "path": "18"
    },
    "3002": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2350,
        2499
      ],
      "op": "DELEGATECALL",
      "path": "18"
    },
    "3003": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2350,
        2499
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3004": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2350,
        2499
      ],
      "op": "POP",
      "path": "18"
    },
    "3005": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2350,
        2499
      ],
      "op": "POP",
      "path": "18"
    },
    "3006": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2350,
        2499
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "3007": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2350,
        2499
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3008": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2350,
        2499
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3010": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2350,
        2499
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3011": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2350,
        2499
      ],
      "op": "EQ",
      "path": "18"
    },
    "3012": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2350,
        2499
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xBE9"
    },
    "3015": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2350,
        2499
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3016": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2350,
        2499
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3018": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2350,
        2499
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3019": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2350,
        2499
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3020": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2350,
        2499
      ],
      "op": "POP",
      "path": "18"
    },
    "3021": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2350,
        2499
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "3023": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2350,
        2499
      ],
      "op": "NOT",
      "path": "18"
    },
    "3024": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2350,
        2499
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3F"
    },
    "3026": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2350,
        2499
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "3027": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2350,
        2499
      ],
      "op": "ADD",
      "path": "18"
    },
    "3028": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2350,
        2499
      ],
      "op": "AND",
      "path": "18"
    },
    "3029": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2350,
        2499
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3030": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2350,
        2499
      ],
      "op": "ADD",
      "path": "18"
    },
    "3031": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2350,
        2499
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3033": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2350,
        2499
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3034": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2350,
        2499
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "3035": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2350,
        2499
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3036": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2350,
        2499
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3037": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2350,
        2499
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "3038": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2350,
        2499
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3040": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2350,
        2499
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3042": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2350,
        2499
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3043": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2350,
        2499
      ],
      "op": "ADD",
      "path": "18"
    },
    "3044": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2350,
        2499
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "3045": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2350,
        2499
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xBEE"
    },
    "3048": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2350,
        2499
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3049": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2350,
        2499
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3050": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2350,
        2499
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "3052": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2350,
        2499
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3053": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2350,
        2499
      ],
      "op": "POP",
      "path": "18"
    },
    "3054": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2350,
        2499
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3055": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2350,
        2499
      ],
      "op": "POP",
      "path": "18"
    },
    "3056": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2325,
        2499
      ],
      "op": "POP",
      "path": "18"
    },
    "3057": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2325,
        2499
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3058": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2325,
        2499
      ],
      "op": "POP",
      "path": "18"
    },
    "3059": {
      "branch": 8,
      "fn": "CLHouse.ExecProp",
      "offset": [
        2515,
        2528
      ],
      "op": "DUP1",
      "path": "18",
      "statement": 2
    },
    "3060": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2510,
        2742
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC04"
    },
    "3063": {
      "branch": 8,
      "fn": "CLHouse.ExecProp",
      "offset": [
        2510,
        2742
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3064": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2589,
        2593
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3066": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2583,
        2594
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3067": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2623,
        2639
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "3068": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2679,
        2683
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3069": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2676,
        2677
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3071": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2671,
        2674
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3072": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2656,
        2684
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "3073": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2713,
        2717
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3074": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2708,
        2711
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3075": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2701,
        2718
      ],
      "op": "REVERT",
      "path": "18"
    },
    "3076": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2510,
        2742
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3077": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2761,
        2765
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 3,
      "value": "0x1"
    },
    "3079": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2752,
        2797
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3081": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2752,
        2797
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3082": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2752,
        2797
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3083": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2752,
        2797
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3085": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2752,
        2797
      ],
      "op": "ADD",
      "path": "18"
    },
    "3086": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2752,
        2797
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3088": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2752,
        2797
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3089": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2752,
        2797
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3090": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2752,
        2797
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x19"
    },
    "3092": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2752,
        2797
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3093": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2752,
        2797
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3094": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2752,
        2797
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3096": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2752,
        2797
      ],
      "op": "ADD",
      "path": "18"
    },
    "3097": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2752,
        2797
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x537563636573732065786563757465642070726F706F73616C00000000000000"
    },
    "3130": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2752,
        2797
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3131": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2752,
        2797
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3132": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2752,
        2797
      ],
      "op": "POP",
      "path": "18"
    },
    "3133": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2752,
        2797
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "3134": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2752,
        2797
      ],
      "op": "POP",
      "path": "18"
    },
    "3135": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2752,
        2797
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "3136": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2752,
        2797
      ],
      "op": "POP",
      "path": "18"
    },
    "3137": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2752,
        2797
      ],
      "op": "POP",
      "path": "18"
    },
    "3138": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2161,
        2804
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3139": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2161,
        2804
      ],
      "op": "POP",
      "path": "18"
    },
    "3140": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2161,
        2804
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3141": {
      "fn": "CLHouse.ExecProp",
      "jump": "o",
      "offset": [
        2161,
        2804
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3142": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        8953,
        9685
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3143": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9184
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x2"
    },
    "3145": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9184
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3146": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9211,
        9399
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3148": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9211,
        9399
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3149": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9115,
        9129
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3151": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9115,
        9129
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3152": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9115,
        9129
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3153": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9115,
        9129
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3158": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3160": {
      "op": "SHL"
    },
    "3161": {
      "op": "SUB"
    },
    "3162": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9184
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3163": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9184
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3164": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9184
      ],
      "op": "AND",
      "path": "18"
    },
    "3165": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9184
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3166": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9211,
        9399
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC6F"
    },
    "3169": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9211,
        9399
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3170": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9307,
        9327
      ],
      "op": "DUP8",
      "path": "18"
    },
    "3171": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9307,
        9327
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3172": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9345,
        9357
      ],
      "op": "DUP8",
      "path": "18"
    },
    "3173": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9345,
        9357
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3174": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9375,
        9385
      ],
      "op": "DUP8",
      "path": "18"
    },
    "3175": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9375,
        9385
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3176": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9211,
        9399
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "3178": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9211,
        9399
      ],
      "op": "ADD",
      "path": "18"
    },
    "3179": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9211,
        9399
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E36"
    },
    "3182": {
      "fn": "CLHouse.PropGovRules",
      "jump": "i",
      "offset": [
        9211,
        9399
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3183": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9211,
        9399
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3184": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9211,
        9399
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3186": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9211,
        9399
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3187": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9211,
        9399
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3188": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3190": {
      "op": "NOT"
    },
    "3191": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9211,
        9399
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3192": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9211,
        9399
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3193": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9211,
        9399
      ],
      "op": "SUB",
      "path": "18"
    },
    "3194": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9211,
        9399
      ],
      "op": "ADD",
      "path": "18"
    },
    "3195": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9211,
        9399
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3196": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9211,
        9399
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3197": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9211,
        9399
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3198": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9211,
        9399
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3199": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9211,
        9399
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3200": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9211,
        9399
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3202": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9211,
        9399
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3203": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9211,
        9399
      ],
      "op": "ADD",
      "path": "18"
    },
    "3204": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9211,
        9399
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3205": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9211,
        9399
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3206": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3208": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3210": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3212": {
      "op": "SHL"
    },
    "3213": {
      "op": "SUB"
    },
    "3214": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9211,
        9399
      ],
      "op": "AND",
      "path": "18"
    },
    "3215": {
      "op": "PUSH4",
      "value": "0x70ACB761"
    },
    "3220": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3222": {
      "op": "SHL"
    },
    "3223": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9211,
        9399
      ],
      "op": "OR",
      "path": "18"
    },
    "3224": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9211,
        9399
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3225": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9211,
        9399
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3226": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9409
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3227": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9409
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xCA4"
    },
    "3230": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9409
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3231": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9211,
        9399
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3232": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9409
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1CEE"
    },
    "3235": {
      "fn": "CLHouse.PropGovRules",
      "jump": "i",
      "offset": [
        9171,
        9409
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3236": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9409
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3237": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9409
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3239": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9409
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3241": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9409
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3242": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9409
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3243": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9409
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3244": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9409
      ],
      "op": "SUB",
      "path": "18"
    },
    "3245": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9409
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3246": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9409
      ],
      "op": "DUP6",
      "path": "18"
    },
    "3247": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9409
      ],
      "op": "GAS",
      "path": "18"
    },
    "3248": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9409
      ],
      "op": "DELEGATECALL",
      "path": "18"
    },
    "3249": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9409
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3250": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9409
      ],
      "op": "POP",
      "path": "18"
    },
    "3251": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9409
      ],
      "op": "POP",
      "path": "18"
    },
    "3252": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9409
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "3253": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9409
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3254": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9409
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3256": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9409
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3257": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9409
      ],
      "op": "EQ",
      "path": "18"
    },
    "3258": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9409
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xCDF"
    },
    "3261": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9409
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3262": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9409
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3264": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9409
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3265": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9409
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3266": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9409
      ],
      "op": "POP",
      "path": "18"
    },
    "3267": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9409
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "3269": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9409
      ],
      "op": "NOT",
      "path": "18"
    },
    "3270": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9409
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3F"
    },
    "3272": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9409
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "3273": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9409
      ],
      "op": "ADD",
      "path": "18"
    },
    "3274": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9409
      ],
      "op": "AND",
      "path": "18"
    },
    "3275": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9409
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3276": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9409
      ],
      "op": "ADD",
      "path": "18"
    },
    "3277": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9409
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3279": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9409
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3280": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9409
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "3281": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9409
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3282": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9409
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3283": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9409
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "3284": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9409
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3286": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9409
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3288": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9409
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3289": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9409
      ],
      "op": "ADD",
      "path": "18"
    },
    "3290": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9409
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "3291": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9409
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xCE4"
    },
    "3294": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9409
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3295": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9409
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3296": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9409
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "3298": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9409
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3299": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9409
      ],
      "op": "POP",
      "path": "18"
    },
    "3300": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9409
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3301": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9171,
        9409
      ],
      "op": "POP",
      "path": "18"
    },
    "3302": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9146,
        9409
      ],
      "op": "POP",
      "path": "18"
    },
    "3303": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9146,
        9409
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3304": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9146,
        9409
      ],
      "op": "POP",
      "path": "18"
    },
    "3305": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9460,
        9464
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3307": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9454,
        9465
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3308": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9490,
        9506
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "3309": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9542,
        9546
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3310": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9539,
        9540
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3312": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9534,
        9537
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3313": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9519,
        9547
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "3314": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9571,
        9584
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3315": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9560,
        9636
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xCFA"
    },
    "3318": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9560,
        9636
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3319": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9617,
        9621
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3320": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9612,
        9615
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3321": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9605,
        9622
      ],
      "op": "REVERT",
      "path": "18"
    },
    "3322": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9560,
        9636
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3323": {
      "op": "POP"
    },
    "3324": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9659,
        9669
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3325": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9659,
        9669
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "3326": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        8953,
        9685
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "3327": {
      "op": "POP"
    },
    "3328": {
      "op": "POP"
    },
    "3329": {
      "op": "POP"
    },
    "3330": {
      "op": "POP"
    },
    "3331": {
      "op": "POP"
    },
    "3332": {
      "fn": "CLHouse.PropGovRules",
      "jump": "o",
      "offset": [
        8953,
        9685
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3333": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        6643,
        7409
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3334": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        6874,
        6887
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x2"
    },
    "3336": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        6874,
        6887
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3337": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        6914,
        7123
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3339": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        6914,
        7123
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3340": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        6818,
        6832
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3342": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        6818,
        6832
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3343": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        6818,
        6832
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3344": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        6818,
        6832
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3349": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3351": {
      "op": "SHL"
    },
    "3352": {
      "op": "SUB"
    },
    "3353": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        6874,
        6887
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3354": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        6874,
        6887
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3355": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        6874,
        6887
      ],
      "op": "AND",
      "path": "18"
    },
    "3356": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        6874,
        6887
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3357": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        6914,
        7123
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xD30"
    },
    "3360": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        6914,
        7123
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3361": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7017,
        7020
      ],
      "op": "DUP9",
      "path": "18"
    },
    "3362": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7017,
        7020
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3363": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7038,
        7051
      ],
      "op": "DUP9",
      "path": "18"
    },
    "3364": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7038,
        7051
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3365": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7069,
        7081
      ],
      "op": "DUP9",
      "path": "18"
    },
    "3366": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7069,
        7081
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3367": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7099,
        7109
      ],
      "op": "DUP9",
      "path": "18"
    },
    "3368": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7099,
        7109
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3369": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        6914,
        7123
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "3371": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        6914,
        7123
      ],
      "op": "ADD",
      "path": "18"
    },
    "3372": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        6914,
        7123
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1CB6"
    },
    "3375": {
      "fn": "CLHouse.PropTxWei",
      "jump": "i",
      "offset": [
        6914,
        7123
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3376": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        6914,
        7123
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3377": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        6914,
        7123
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3379": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        6914,
        7123
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3380": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        6914,
        7123
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3381": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3383": {
      "op": "NOT"
    },
    "3384": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        6914,
        7123
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3385": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        6914,
        7123
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3386": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        6914,
        7123
      ],
      "op": "SUB",
      "path": "18"
    },
    "3387": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        6914,
        7123
      ],
      "op": "ADD",
      "path": "18"
    },
    "3388": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        6914,
        7123
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3389": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        6914,
        7123
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3390": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        6914,
        7123
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3391": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        6914,
        7123
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3392": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        6914,
        7123
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3393": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        6914,
        7123
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3395": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        6914,
        7123
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3396": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        6914,
        7123
      ],
      "op": "ADD",
      "path": "18"
    },
    "3397": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        6914,
        7123
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3398": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        6914,
        7123
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3403": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3405": {
      "op": "SHL"
    },
    "3406": {
      "op": "SUB"
    },
    "3407": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        6914,
        7123
      ],
      "op": "AND",
      "path": "18"
    },
    "3408": {
      "op": "PUSH4",
      "value": "0xF8C70A9"
    },
    "3413": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "3415": {
      "op": "SHL"
    },
    "3416": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        6914,
        7123
      ],
      "op": "OR",
      "path": "18"
    },
    "3417": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        6914,
        7123
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3418": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        6914,
        7123
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3419": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        6874,
        7133
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3420": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        6874,
        7133
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x862"
    },
    "3423": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        6874,
        7133
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3424": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        6914,
        7123
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3425": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        6874,
        7133
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1CEE"
    },
    "3428": {
      "fn": "CLHouse.PropTxWei",
      "jump": "i",
      "offset": [
        6874,
        7133
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3429": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10837,
        11442
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3430": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11007
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "3432": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11007
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3433": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11034,
        11183
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3435": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11034,
        11183
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3436": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10966,
        10984
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3438": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10966,
        10984
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3439": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11007
      ],
      "op": "PUSH7",
      "path": "18",
      "value": "0x1000000000000"
    },
    "3447": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11007
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3448": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11007
      ],
      "op": "DIV",
      "path": "18"
    },
    "3449": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3453": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3455": {
      "op": "SHL"
    },
    "3456": {
      "op": "SUB"
    },
    "3457": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11007
      ],
      "op": "AND",
      "path": "18"
    },
    "3458": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11007
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3459": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11034,
        11183
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xD92"
    },
    "3462": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11034,
        11183
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3463": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11130,
        11141
      ],
      "op": "DUP6",
      "path": "18"
    },
    "3464": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11130,
        11141
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3465": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11159,
        11169
      ],
      "op": "DUP6",
      "path": "18"
    },
    "3466": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11159,
        11169
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3467": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11034,
        11183
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "3469": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11034,
        11183
      ],
      "op": "ADD",
      "path": "18"
    },
    "3470": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11034,
        11183
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x18A4"
    },
    "3473": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "jump": "i",
      "offset": [
        11034,
        11183
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3474": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11034,
        11183
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3475": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11034,
        11183
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3477": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11034,
        11183
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3478": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11034,
        11183
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3479": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3481": {
      "op": "NOT"
    },
    "3482": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11034,
        11183
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3483": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11034,
        11183
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3484": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11034,
        11183
      ],
      "op": "SUB",
      "path": "18"
    },
    "3485": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11034,
        11183
      ],
      "op": "ADD",
      "path": "18"
    },
    "3486": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11034,
        11183
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3487": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11034,
        11183
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3488": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11034,
        11183
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3489": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11034,
        11183
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3490": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11034,
        11183
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3491": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11034,
        11183
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3493": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11034,
        11183
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3494": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11034,
        11183
      ],
      "op": "ADD",
      "path": "18"
    },
    "3495": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11034,
        11183
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3496": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11034,
        11183
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3501": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3503": {
      "op": "SHL"
    },
    "3504": {
      "op": "SUB"
    },
    "3505": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11034,
        11183
      ],
      "op": "AND",
      "path": "18"
    },
    "3506": {
      "op": "PUSH4",
      "value": "0x1039E45B"
    },
    "3511": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "3513": {
      "op": "SHL"
    },
    "3514": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11034,
        11183
      ],
      "op": "OR",
      "path": "18"
    },
    "3515": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11034,
        11183
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3516": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11034,
        11183
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3517": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11193
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3518": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11193
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xDC7"
    },
    "3521": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11193
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3522": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11034,
        11183
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3523": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11193
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1CEE"
    },
    "3526": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "jump": "i",
      "offset": [
        10990,
        11193
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3527": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11193
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3528": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11193
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3530": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11193
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3532": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11193
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3533": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11193
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3534": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11193
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3535": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11193
      ],
      "op": "SUB",
      "path": "18"
    },
    "3536": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11193
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3537": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11193
      ],
      "op": "DUP6",
      "path": "18"
    },
    "3538": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11193
      ],
      "op": "GAS",
      "path": "18"
    },
    "3539": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11193
      ],
      "op": "DELEGATECALL",
      "path": "18"
    },
    "3540": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11193
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3541": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11193
      ],
      "op": "POP",
      "path": "18"
    },
    "3542": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11193
      ],
      "op": "POP",
      "path": "18"
    },
    "3543": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11193
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "3544": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11193
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3545": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11193
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3547": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11193
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3548": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11193
      ],
      "op": "EQ",
      "path": "18"
    },
    "3549": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11193
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xE02"
    },
    "3552": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11193
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3553": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11193
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3555": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11193
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3556": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11193
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3557": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11193
      ],
      "op": "POP",
      "path": "18"
    },
    "3558": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11193
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "3560": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11193
      ],
      "op": "NOT",
      "path": "18"
    },
    "3561": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11193
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3F"
    },
    "3563": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11193
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "3564": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11193
      ],
      "op": "ADD",
      "path": "18"
    },
    "3565": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11193
      ],
      "op": "AND",
      "path": "18"
    },
    "3566": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11193
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3567": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11193
      ],
      "op": "ADD",
      "path": "18"
    },
    "3568": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11193
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3570": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11193
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3571": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11193
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "3572": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11193
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3573": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11193
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3574": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11193
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "3575": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11193
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3577": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11193
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3579": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11193
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3580": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11193
      ],
      "op": "ADD",
      "path": "18"
    },
    "3581": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11193
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "3582": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11193
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xE07"
    },
    "3585": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11193
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3586": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11193
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3587": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11193
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "3589": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11193
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3590": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11193
      ],
      "op": "POP",
      "path": "18"
    },
    "3591": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11193
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3592": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10990,
        11193
      ],
      "op": "POP",
      "path": "18"
    },
    "3593": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10965,
        11193
      ],
      "op": "POP",
      "path": "18"
    },
    "3594": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10965,
        11193
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3595": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10965,
        11193
      ],
      "op": "POP",
      "path": "18"
    },
    "3596": {
      "branch": 9,
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11209,
        11222
      ],
      "op": "DUP1",
      "path": "18",
      "statement": 4
    },
    "3597": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11204,
        11436
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xE1D"
    },
    "3600": {
      "branch": 9,
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11204,
        11436
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3601": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11283,
        11287
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3603": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11277,
        11288
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3604": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11317,
        11333
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "3605": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11373,
        11377
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3606": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11370,
        11371
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3608": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11365,
        11368
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3609": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11350,
        11378
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "3610": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11407,
        11411
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3611": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11402,
        11405
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3612": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11395,
        11412
      ],
      "op": "REVERT",
      "path": "18"
    },
    "3613": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11204,
        11436
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3614": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10955,
        11442
      ],
      "op": "POP",
      "path": "18"
    },
    "3615": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10837,
        11442
      ],
      "op": "POP",
      "path": "18"
    },
    "3616": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        10837,
        11442
      ],
      "op": "POP",
      "path": "18"
    },
    "3617": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "jump": "o",
      "offset": [
        10837,
        11442
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3618": {
      "offset": [
        1234,
        1276
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3619": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE"
    },
    "3621": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3622": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3623": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "3624": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3625": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "LT",
      "path": "23"
    },
    "3626": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xE32"
    },
    "3629": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "3630": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "3632": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3633": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "REVERT",
      "path": "23"
    },
    "3634": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3635": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "3637": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3638": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3639": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3640": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3642": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3643": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3644": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "3645": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x3"
    },
    "3647": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3648": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3649": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "MUL",
      "path": "23"
    },
    "3650": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "ADD",
      "path": "23"
    },
    "3651": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3652": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "3653": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "3655": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3656": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "ADD",
      "path": "23"
    },
    "3657": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3658": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "3659": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3661": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3663": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3665": {
      "op": "SHL"
    },
    "3666": {
      "op": "SUB"
    },
    "3667": {
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3668": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "3669": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "AND",
      "path": "23"
    },
    "3670": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "3671": {
      "op": "POP"
    },
    "3672": {
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3673": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xE61"
    },
    "3676": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3677": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1D4F"
    },
    "3680": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "jump": "i",
      "offset": [
        1234,
        1276
      ],
      "op": "JUMP",
      "path": "23"
    },
    "3681": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3682": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3683": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1F"
    },
    "3685": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "ADD",
      "path": "23"
    },
    "3686": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3688": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3689": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3690": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DIV",
      "path": "23"
    },
    "3691": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "MUL",
      "path": "23"
    },
    "3692": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3694": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "ADD",
      "path": "23"
    },
    "3695": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "3697": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3698": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3699": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3700": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "ADD",
      "path": "23"
    },
    "3701": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "3703": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3704": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3705": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "3706": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3707": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3708": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3709": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3710": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3711": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3713": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "ADD",
      "path": "23"
    },
    "3714": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3715": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3716": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "3717": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xE8D"
    },
    "3720": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3721": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1D4F"
    },
    "3724": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "jump": "i",
      "offset": [
        1234,
        1276
      ],
      "op": "JUMP",
      "path": "23"
    },
    "3725": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3726": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3727": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "3728": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xEDA"
    },
    "3731": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "3732": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3733": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1F"
    },
    "3735": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "LT",
      "path": "23"
    },
    "3736": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xEAF"
    },
    "3739": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "3740": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x100"
    },
    "3743": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3744": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DUP4",
      "path": "23"
    },
    "3745": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "3746": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DIV",
      "path": "23"
    },
    "3747": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "MUL",
      "path": "23"
    },
    "3748": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DUP4",
      "path": "23"
    },
    "3749": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3750": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3751": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3753": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "ADD",
      "path": "23"
    },
    "3754": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3755": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xEDA"
    },
    "3758": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "JUMP",
      "path": "23"
    },
    "3759": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3760": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3761": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "ADD",
      "path": "23"
    },
    "3762": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3763": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3764": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "3766": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3767": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3769": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "3771": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "3772": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3773": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3774": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3775": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "3776": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3777": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3778": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3779": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "3781": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "ADD",
      "path": "23"
    },
    "3782": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3783": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3785": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "ADD",
      "path": "23"
    },
    "3786": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3787": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DUP4",
      "path": "23"
    },
    "3788": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "GT",
      "path": "23"
    },
    "3789": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xEBD"
    },
    "3792": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "3793": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3794": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3795": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SUB",
      "path": "23"
    },
    "3796": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1F"
    },
    "3798": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "AND",
      "path": "23"
    },
    "3799": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3800": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "ADD",
      "path": "23"
    },
    "3801": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3802": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3803": {
      "op": "POP"
    },
    "3804": {
      "op": "POP"
    },
    "3805": {
      "op": "POP"
    },
    "3806": {
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "3808": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3809": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "3810": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "ADD",
      "path": "23"
    },
    "3811": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "3812": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3813": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "3814": {
      "op": "POP"
    },
    "3815": {
      "op": "POP"
    },
    "3816": {
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "3818": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "AND",
      "path": "23"
    },
    "3819": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DUP4",
      "path": "23"
    },
    "3820": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "jump": "o",
      "offset": [
        1234,
        1276
      ],
      "op": "JUMP",
      "path": "23"
    },
    "3821": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        9985,
        10699
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3822": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10199,
        10212
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x2"
    },
    "3824": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10199,
        10212
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3825": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10239,
        10416
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3827": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10239,
        10416
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3828": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10150,
        10157
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3830": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10150,
        10157
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3831": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10150,
        10157
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3832": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10150,
        10157
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3833": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3837": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3839": {
      "op": "SHL"
    },
    "3840": {
      "op": "SUB"
    },
    "3841": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10199,
        10212
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3842": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10199,
        10212
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3843": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10199,
        10212
      ],
      "op": "AND",
      "path": "18"
    },
    "3844": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10199,
        10212
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3845": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10239,
        10416
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xF16"
    },
    "3848": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10239,
        10416
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3849": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10339,
        10344
      ],
      "op": "DUP8",
      "path": "18"
    },
    "3850": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10339,
        10344
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3851": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10362,
        10374
      ],
      "op": "DUP8",
      "path": "18"
    },
    "3852": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10362,
        10374
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3853": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10392,
        10402
      ],
      "op": "DUP8",
      "path": "18"
    },
    "3854": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10392,
        10402
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3855": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10239,
        10416
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "3857": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10239,
        10416
      ],
      "op": "ADD",
      "path": "18"
    },
    "3858": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10239,
        10416
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E62"
    },
    "3861": {
      "fn": "CLHouse.PropRequestToJoin",
      "jump": "i",
      "offset": [
        10239,
        10416
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3862": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10239,
        10416
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3863": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10239,
        10416
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3865": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10239,
        10416
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3866": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10239,
        10416
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3867": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3869": {
      "op": "NOT"
    },
    "3870": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10239,
        10416
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3871": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10239,
        10416
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3872": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10239,
        10416
      ],
      "op": "SUB",
      "path": "18"
    },
    "3873": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10239,
        10416
      ],
      "op": "ADD",
      "path": "18"
    },
    "3874": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10239,
        10416
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3875": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10239,
        10416
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3876": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10239,
        10416
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3877": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10239,
        10416
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3878": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10239,
        10416
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3879": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10239,
        10416
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3881": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10239,
        10416
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3882": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10239,
        10416
      ],
      "op": "ADD",
      "path": "18"
    },
    "3883": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10239,
        10416
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3884": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10239,
        10416
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3885": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3887": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3889": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3891": {
      "op": "SHL"
    },
    "3892": {
      "op": "SUB"
    },
    "3893": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10239,
        10416
      ],
      "op": "AND",
      "path": "18"
    },
    "3894": {
      "op": "PUSH4",
      "value": "0xA19A5F5"
    },
    "3899": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "3901": {
      "op": "SHL"
    },
    "3902": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10239,
        10416
      ],
      "op": "OR",
      "path": "18"
    },
    "3903": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10239,
        10416
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3904": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10239,
        10416
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3905": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10199,
        10426
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3906": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10199,
        10426
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x60B"
    },
    "3909": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10199,
        10426
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3910": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10239,
        10416
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3911": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10199,
        10426
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1CEE"
    },
    "3914": {
      "fn": "CLHouse.PropRequestToJoin",
      "jump": "i",
      "offset": [
        10199,
        10426
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3915": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14112,
        14221
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3916": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14162,
        14182
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "3918": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14202,
        14214
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 5,
      "value": "0xD"
    },
    "3920": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3921": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3922": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3923": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3925": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "MUL",
      "path": "18"
    },
    "3926": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3928": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "ADD",
      "path": "18"
    },
    "3929": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3931": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3932": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3933": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3934": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "ADD",
      "path": "18"
    },
    "3935": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3937": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3938": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3939": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "3940": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3941": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3942": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3943": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3944": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3945": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3947": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "ADD",
      "path": "18"
    },
    "3948": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3950": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3951": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3952": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3953": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3954": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "LT",
      "path": "18"
    },
    "3955": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3956": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB4E"
    },
    "3959": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3960": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3962": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3963": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3964": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3965": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3967": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3968": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3969": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3970": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "3971": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3973": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3974": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3975": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x120"
    },
    "3978": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3979": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "ADD",
      "path": "18"
    },
    "3980": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3981": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3982": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3983": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x5"
    },
    "3985": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DUP6",
      "path": "18"
    },
    "3986": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "MUL",
      "path": "18"
    },
    "3987": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3988": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3989": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "ADD",
      "path": "18"
    },
    "3990": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3991": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3996": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3998": {
      "op": "SHL"
    },
    "3999": {
      "op": "SUB"
    },
    "4000": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4001": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "AND",
      "path": "18"
    },
    "4002": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4003": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4004": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4005": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "4006": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4007": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4008": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4009": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4010": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "ADD",
      "path": "18"
    },
    "4011": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4012": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4014": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4016": {
      "op": "SHL"
    },
    "4017": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4018": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DIV",
      "path": "18"
    },
    "4019": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "4021": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "AND",
      "path": "18"
    },
    "4022": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x8"
    },
    "4024": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4025": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "GT",
      "path": "18"
    },
    "4026": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4027": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xFC6"
    },
    "4030": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4031": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xFC6"
    },
    "4034": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1A32"
    },
    "4037": {
      "fn": "CLHouse.GetProposalList",
      "jump": "i",
      "offset": [
        14195,
        14214
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4038": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4039": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x8"
    },
    "4041": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4042": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "GT",
      "path": "18"
    },
    "4043": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4044": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xFD7"
    },
    "4047": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4048": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xFD7"
    },
    "4051": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1A32"
    },
    "4054": {
      "fn": "CLHouse.GetProposalList",
      "jump": "i",
      "offset": [
        14195,
        14214
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4055": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4056": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4057": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4058": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4060": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "ADD",
      "path": "18"
    },
    "4061": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "4063": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4064": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "ADD",
      "path": "18"
    },
    "4065": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4066": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4067": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xFEB"
    },
    "4070": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4071": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1D4F"
    },
    "4074": {
      "fn": "CLHouse.GetProposalList",
      "jump": "i",
      "offset": [
        14195,
        14214
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4075": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4076": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4077": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "4079": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "ADD",
      "path": "18"
    },
    "4080": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4082": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4083": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4084": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DIV",
      "path": "18"
    },
    "4085": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "MUL",
      "path": "18"
    },
    "4086": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4088": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "ADD",
      "path": "18"
    },
    "4089": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4091": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4092": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4093": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4094": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "ADD",
      "path": "18"
    },
    "4095": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4097": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4098": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4099": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "4100": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4101": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4102": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4103": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4104": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4105": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4107": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "ADD",
      "path": "18"
    },
    "4108": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4109": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4110": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4111": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1017"
    },
    "4114": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4115": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1D4F"
    },
    "4118": {
      "fn": "CLHouse.GetProposalList",
      "jump": "i",
      "offset": [
        14195,
        14214
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4119": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4120": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4121": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4122": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1064"
    },
    "4125": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4126": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4127": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "4129": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "LT",
      "path": "18"
    },
    "4130": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1039"
    },
    "4133": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4134": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100"
    },
    "4137": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4138": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4139": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4140": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DIV",
      "path": "18"
    },
    "4141": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "MUL",
      "path": "18"
    },
    "4142": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4143": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4144": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4145": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4147": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "ADD",
      "path": "18"
    },
    "4148": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4149": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1064"
    },
    "4152": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4153": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4154": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4155": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "ADD",
      "path": "18"
    },
    "4156": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4157": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4158": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4160": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4161": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4163": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4165": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "4166": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4167": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4168": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4169": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4170": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4171": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4172": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4173": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "4175": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "ADD",
      "path": "18"
    },
    "4176": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4177": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4179": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "ADD",
      "path": "18"
    },
    "4180": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4181": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4182": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "GT",
      "path": "18"
    },
    "4183": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1047"
    },
    "4186": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4187": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4188": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4189": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "SUB",
      "path": "18"
    },
    "4190": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "4192": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "AND",
      "path": "18"
    },
    "4193": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4194": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "ADD",
      "path": "18"
    },
    "4195": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4196": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4197": {
      "op": "POP"
    },
    "4198": {
      "op": "POP"
    },
    "4199": {
      "op": "POP"
    },
    "4200": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4201": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4202": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4203": {
      "op": "POP"
    },
    "4204": {
      "op": "POP"
    },
    "4205": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x2"
    },
    "4207": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4208": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "ADD",
      "path": "18"
    },
    "4209": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4210": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4212": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4213": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4214": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "ADD",
      "path": "18"
    },
    "4215": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4216": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4217": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4218": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4219": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "4221": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4222": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "ADD",
      "path": "18"
    },
    "4223": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4224": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "4226": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4227": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4228": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "AND",
      "path": "18"
    },
    "4229": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4231": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DUP6",
      "path": "18"
    },
    "4232": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "ADD",
      "path": "18"
    },
    "4233": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4234": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100"
    },
    "4237": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4238": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DIV",
      "path": "18"
    },
    "4239": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4240": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "AND",
      "path": "18"
    },
    "4241": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "4243": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DUP6",
      "path": "18"
    },
    "4244": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "ADD",
      "path": "18"
    },
    "4245": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4246": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH3",
      "path": "18",
      "value": "0x10000"
    },
    "4250": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4251": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DIV",
      "path": "18"
    },
    "4252": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4253": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "AND",
      "path": "18"
    },
    "4254": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4255": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4256": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x80"
    },
    "4258": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DUP6",
      "path": "18"
    },
    "4259": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "ADD",
      "path": "18"
    },
    "4260": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4261": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x1000000"
    },
    "4266": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4267": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4268": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DIV",
      "path": "18"
    },
    "4269": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "AND",
      "path": "18"
    },
    "4270": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4271": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4272": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA0"
    },
    "4274": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4275": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "ADD",
      "path": "18"
    },
    "4276": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4277": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "4279": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4280": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "4281": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "ADD",
      "path": "18"
    },
    "4282": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4283": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xC0"
    },
    "4285": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4286": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4287": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "ADD",
      "path": "18"
    },
    "4288": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4289": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4290": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4291": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4292": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "4294": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "4295": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4296": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "4297": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "ADD",
      "path": "18"
    },
    "4298": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4299": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "ADD",
      "path": "18"
    },
    "4300": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xF6F"
    },
    "4303": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        14195,
        14214
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4304": {
      "offset": [
        1282,
        1326
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4305": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xF"
    },
    "4307": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4308": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4309": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4310": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4311": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "LT",
      "path": "23"
    },
    "4312": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x10E0"
    },
    "4315": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4316": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "4318": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4319": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "REVERT",
      "path": "23"
    },
    "4320": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4321": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "4323": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4324": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4325": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4326": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4328": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4329": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4330": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "4331": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "4333": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4334": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4335": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "MUL",
      "path": "23"
    },
    "4336": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "ADD",
      "path": "23"
    },
    "4337": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4338": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4339": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "4341": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4342": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "ADD",
      "path": "23"
    },
    "4343": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4344": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "4346": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "DUP4",
      "path": "23"
    },
    "4347": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "ADD",
      "path": "23"
    },
    "4348": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4349": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x3"
    },
    "4351": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4352": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "4353": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "ADD",
      "path": "23"
    },
    "4354": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4359": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4361": {
      "op": "SHL"
    },
    "4362": {
      "op": "SUB"
    },
    "4363": {
      "offset": [
        1282,
        1326
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "4364": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "DUP4",
      "path": "23"
    },
    "4365": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "AND",
      "path": "23"
    },
    "4366": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "4367": {
      "op": "POP"
    },
    "4368": {
      "offset": [
        1282,
        1326
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4369": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "4370": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4371": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "AND",
      "path": "23"
    },
    "4372": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4373": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "AND",
      "path": "23"
    },
    "4374": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "DUP5",
      "path": "23"
    },
    "4375": {
      "fn": "CLHouse.GetProposalList",
      "jump": "o",
      "offset": [
        1282,
        1326
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4376": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3137,
        3891
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4377": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3375
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x2"
    },
    "4379": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3375
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4380": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3402,
        3610
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4382": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3402,
        3610
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4383": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3316,
        3320
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4385": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3316,
        3320
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4386": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3316,
        3320
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4387": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3316,
        3320
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4392": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4394": {
      "op": "SHL"
    },
    "4395": {
      "op": "SUB"
    },
    "4396": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3375
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4397": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3375
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4398": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3375
      ],
      "op": "AND",
      "path": "18"
    },
    "4399": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3375
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4400": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3402,
        3610
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1143"
    },
    "4403": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3402,
        3610
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4404": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3503,
        3510
      ],
      "op": "DUP9",
      "path": "18"
    },
    "4405": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3503,
        3510
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4406": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3528,
        3536
      ],
      "op": "DUP9",
      "path": "18"
    },
    "4407": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3528,
        3536
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4408": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3554,
        3568
      ],
      "op": "DUP9",
      "path": "18"
    },
    "4409": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3554,
        3568
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4410": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3586,
        3596
      ],
      "op": "DUP9",
      "path": "18"
    },
    "4411": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3586,
        3596
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4412": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3402,
        3610
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "4414": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3402,
        3610
      ],
      "op": "ADD",
      "path": "18"
    },
    "4415": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3402,
        3610
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1EA5"
    },
    "4418": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        3402,
        3610
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4419": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3402,
        3610
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4420": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3402,
        3610
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4422": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3402,
        3610
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4423": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3402,
        3610
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4424": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4426": {
      "op": "NOT"
    },
    "4427": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3402,
        3610
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4428": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3402,
        3610
      ],
      "op": "DUP5",
      "path": "18"
    },
    "4429": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3402,
        3610
      ],
      "op": "SUB",
      "path": "18"
    },
    "4430": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3402,
        3610
      ],
      "op": "ADD",
      "path": "18"
    },
    "4431": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3402,
        3610
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4432": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3402,
        3610
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4433": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3402,
        3610
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4434": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3402,
        3610
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4435": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3402,
        3610
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4436": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3402,
        3610
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4438": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3402,
        3610
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4439": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3402,
        3610
      ],
      "op": "ADD",
      "path": "18"
    },
    "4440": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3402,
        3610
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4441": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3402,
        3610
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4446": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4448": {
      "op": "SHL"
    },
    "4449": {
      "op": "SUB"
    },
    "4450": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3402,
        3610
      ],
      "op": "AND",
      "path": "18"
    },
    "4451": {
      "op": "PUSH4",
      "value": "0x18567541"
    },
    "4456": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "4458": {
      "op": "SHL"
    },
    "4459": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3402,
        3610
      ],
      "op": "OR",
      "path": "18"
    },
    "4460": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3402,
        3610
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4461": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3402,
        3610
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4462": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3620
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4463": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3620
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1178"
    },
    "4466": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3620
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4467": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3402,
        3610
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4468": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3620
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1CEE"
    },
    "4471": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        3362,
        3620
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4472": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3620
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4473": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3620
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4475": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3620
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4477": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3620
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4478": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3620
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4479": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3620
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4480": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3620
      ],
      "op": "SUB",
      "path": "18"
    },
    "4481": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3620
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4482": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3620
      ],
      "op": "DUP6",
      "path": "18"
    },
    "4483": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3620
      ],
      "op": "GAS",
      "path": "18"
    },
    "4484": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3620
      ],
      "op": "DELEGATECALL",
      "path": "18"
    },
    "4485": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3620
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4486": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3620
      ],
      "op": "POP",
      "path": "18"
    },
    "4487": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3620
      ],
      "op": "POP",
      "path": "18"
    },
    "4488": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3620
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "4489": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3620
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4490": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3620
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4492": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3620
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4493": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3620
      ],
      "op": "EQ",
      "path": "18"
    },
    "4494": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3620
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x11B3"
    },
    "4497": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3620
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4498": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3620
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4500": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3620
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4501": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3620
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4502": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3620
      ],
      "op": "POP",
      "path": "18"
    },
    "4503": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3620
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "4505": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3620
      ],
      "op": "NOT",
      "path": "18"
    },
    "4506": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3620
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3F"
    },
    "4508": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3620
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "4509": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3620
      ],
      "op": "ADD",
      "path": "18"
    },
    "4510": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3620
      ],
      "op": "AND",
      "path": "18"
    },
    "4511": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3620
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4512": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3620
      ],
      "op": "ADD",
      "path": "18"
    },
    "4513": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3620
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4515": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3620
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4516": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3620
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "4517": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3620
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4518": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3620
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4519": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3620
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "4520": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3620
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4522": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3620
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4524": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3620
      ],
      "op": "DUP5",
      "path": "18"
    },
    "4525": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3620
      ],
      "op": "ADD",
      "path": "18"
    },
    "4526": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3620
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "4527": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3620
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x11B8"
    },
    "4530": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3620
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4531": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3620
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4532": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3620
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "4534": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3620
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4535": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3620
      ],
      "op": "POP",
      "path": "18"
    },
    "4536": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3620
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4537": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3362,
        3620
      ],
      "op": "POP",
      "path": "18"
    },
    "4538": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3337,
        3620
      ],
      "op": "POP",
      "path": "18"
    },
    "4539": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3337,
        3620
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4540": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3337,
        3620
      ],
      "op": "POP",
      "path": "18"
    },
    "4541": {
      "branch": 10,
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3636,
        3649
      ],
      "op": "DUP1",
      "path": "18",
      "statement": 6
    },
    "4542": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3631,
        3863
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x11CE"
    },
    "4545": {
      "branch": 10,
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3631,
        3863
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4546": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3710,
        3714
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4548": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3704,
        3715
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4549": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3744,
        3760
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "4550": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3800,
        3804
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4551": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3797,
        3798
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4553": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3792,
        3795
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4554": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3777,
        3805
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "4555": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3834,
        3838
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4556": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3829,
        3832
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4557": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3822,
        3839
      ],
      "op": "REVERT",
      "path": "18"
    },
    "4558": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3631,
        3863
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4559": {
      "op": "POP"
    },
    "4560": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3880,
        3884
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 7,
      "value": "0x1"
    },
    "4562": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3880,
        3884
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "4563": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3137,
        3891
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "4564": {
      "op": "POP"
    },
    "4565": {
      "op": "POP"
    },
    "4566": {
      "op": "POP"
    },
    "4567": {
      "op": "POP"
    },
    "4568": {
      "op": "POP"
    },
    "4569": {
      "fn": "CLHouse.VoteProposal",
      "jump": "o",
      "offset": [
        3137,
        3891
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4570": {
      "offset": [
        1086,
        1153
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4571": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xC"
    },
    "4573": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4575": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4576": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4577": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4578": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "4580": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "4581": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP4",
      "path": "23"
    },
    "4582": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4583": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "4585": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4586": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP5",
      "path": "23"
    },
    "4587": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "4588": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4589": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4590": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4591": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4592": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4593": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4594": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4595": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "4596": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4597": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4598": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "4600": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4601": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "ADD",
      "path": "23"
    },
    "4602": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4603": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4604": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "4606": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4607": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP5",
      "path": "23"
    },
    "4608": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "AND",
      "path": "23"
    },
    "4609": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "4610": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x100"
    },
    "4613": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4614": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "4615": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DIV",
      "path": "23"
    },
    "4616": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "AND",
      "path": "23"
    },
    "4617": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "4618": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4619": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4620": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1214"
    },
    "4623": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4624": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1D4F"
    },
    "4627": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        1086,
        1153
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4628": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4629": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4630": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1F"
    },
    "4632": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "ADD",
      "path": "23"
    },
    "4633": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4635": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4636": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4637": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DIV",
      "path": "23"
    },
    "4638": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "MUL",
      "path": "23"
    },
    "4639": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4641": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "ADD",
      "path": "23"
    },
    "4642": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "4644": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4645": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4646": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4647": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "ADD",
      "path": "23"
    },
    "4648": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "4650": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4651": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4652": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "4653": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4654": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4655": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4656": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4657": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4658": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4660": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "ADD",
      "path": "23"
    },
    "4661": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4662": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4663": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4664": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1240"
    },
    "4667": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4668": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1D4F"
    },
    "4671": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        1086,
        1153
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4672": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4673": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4674": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "4675": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x128D"
    },
    "4678": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4679": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4680": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1F"
    },
    "4682": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "LT",
      "path": "23"
    },
    "4683": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1262"
    },
    "4686": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4687": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x100"
    },
    "4690": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4691": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP4",
      "path": "23"
    },
    "4692": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4693": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DIV",
      "path": "23"
    },
    "4694": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "MUL",
      "path": "23"
    },
    "4695": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP4",
      "path": "23"
    },
    "4696": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4697": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4698": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4700": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "ADD",
      "path": "23"
    },
    "4701": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4702": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x128D"
    },
    "4705": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4706": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4707": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4708": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "ADD",
      "path": "23"
    },
    "4709": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4710": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4711": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "4713": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4714": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4716": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "4718": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "4719": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4720": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4721": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4722": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4723": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4724": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4725": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4726": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "4728": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "ADD",
      "path": "23"
    },
    "4729": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4730": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4732": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "ADD",
      "path": "23"
    },
    "4733": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4734": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP4",
      "path": "23"
    },
    "4735": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "GT",
      "path": "23"
    },
    "4736": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1270"
    },
    "4739": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4740": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4741": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4742": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SUB",
      "path": "23"
    },
    "4743": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1F"
    },
    "4745": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "AND",
      "path": "23"
    },
    "4746": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4747": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "ADD",
      "path": "23"
    },
    "4748": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4749": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4750": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "POP",
      "path": "23"
    },
    "4751": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "POP",
      "path": "23"
    },
    "4752": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "POP",
      "path": "23"
    },
    "4753": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "POP",
      "path": "23"
    },
    "4754": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "POP",
      "path": "23"
    },
    "4755": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4756": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "POP",
      "path": "23"
    },
    "4757": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP4",
      "path": "23"
    },
    "4758": {
      "fn": "CLHouse.VoteProposal",
      "jump": "o",
      "offset": [
        1086,
        1153
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4759": {
      "offset": [
        1195,
        1228
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4760": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xD"
    },
    "4762": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4763": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4764": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4765": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4766": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "LT",
      "path": "23"
    },
    "4767": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x12A7"
    },
    "4770": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4771": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "4773": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4774": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "REVERT",
      "path": "23"
    },
    "4775": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4776": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "4778": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4779": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4780": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4781": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4783": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4784": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4785": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "4786": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x5"
    },
    "4788": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4789": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4790": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "MUL",
      "path": "23"
    },
    "4791": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "ADD",
      "path": "23"
    },
    "4792": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4793": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4794": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "4796": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4797": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "ADD",
      "path": "23"
    },
    "4798": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4799": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4800": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4804": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4806": {
      "op": "SHL"
    },
    "4807": {
      "op": "SUB"
    },
    "4808": {
      "offset": [
        1195,
        1228
      ],
      "op": "DUP4",
      "path": "23"
    },
    "4809": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "AND",
      "path": "23"
    },
    "4810": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "4811": {
      "op": "POP"
    },
    "4812": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4814": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4816": {
      "op": "SHL"
    },
    "4817": {
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4818": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "4819": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DIV",
      "path": "23"
    },
    "4820": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "4822": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "AND",
      "path": "23"
    },
    "4823": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "4824": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4825": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x12E1"
    },
    "4828": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4829": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1D4F"
    },
    "4832": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        1195,
        1228
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4833": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4834": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4835": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1F"
    },
    "4837": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "ADD",
      "path": "23"
    },
    "4838": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4840": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4841": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4842": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DIV",
      "path": "23"
    },
    "4843": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "MUL",
      "path": "23"
    },
    "4844": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4846": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "ADD",
      "path": "23"
    },
    "4847": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "4849": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4850": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4851": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4852": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "ADD",
      "path": "23"
    },
    "4853": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "4855": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4856": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4857": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "4858": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4859": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4860": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4861": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4862": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4863": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4865": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "ADD",
      "path": "23"
    },
    "4866": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4867": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4868": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4869": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x130D"
    },
    "4872": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4873": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1D4F"
    },
    "4876": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        1195,
        1228
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4877": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4878": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4879": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "4880": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x135A"
    },
    "4883": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4884": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4885": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1F"
    },
    "4887": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "LT",
      "path": "23"
    },
    "4888": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x132F"
    },
    "4891": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4892": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x100"
    },
    "4895": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4896": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP4",
      "path": "23"
    },
    "4897": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4898": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DIV",
      "path": "23"
    },
    "4899": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "MUL",
      "path": "23"
    },
    "4900": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP4",
      "path": "23"
    },
    "4901": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4902": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4903": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4905": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "ADD",
      "path": "23"
    },
    "4906": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4907": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x135A"
    },
    "4910": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4911": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4912": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4913": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "ADD",
      "path": "23"
    },
    "4914": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4915": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4916": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "4918": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4919": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4921": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "4923": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "4924": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4925": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4926": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4927": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4928": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4929": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4930": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4931": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "4933": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "ADD",
      "path": "23"
    },
    "4934": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4935": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4937": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "ADD",
      "path": "23"
    },
    "4938": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4939": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP4",
      "path": "23"
    },
    "4940": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "GT",
      "path": "23"
    },
    "4941": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x133D"
    },
    "4944": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4945": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4946": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4947": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SUB",
      "path": "23"
    },
    "4948": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1F"
    },
    "4950": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "AND",
      "path": "23"
    },
    "4951": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4952": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "ADD",
      "path": "23"
    },
    "4953": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4954": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4955": {
      "op": "POP"
    },
    "4956": {
      "op": "POP"
    },
    "4957": {
      "op": "POP"
    },
    "4958": {
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "4960": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP5",
      "path": "23"
    },
    "4961": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "ADD",
      "path": "23"
    },
    "4962": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4963": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x3"
    },
    "4965": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP6",
      "path": "23"
    },
    "4966": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "ADD",
      "path": "23"
    },
    "4967": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4968": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "4970": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4971": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP6",
      "path": "23"
    },
    "4972": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "ADD",
      "path": "23"
    },
    "4973": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4974": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "4975": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "4976": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4977": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "4978": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "4980": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4981": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP4",
      "path": "23"
    },
    "4982": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "AND",
      "path": "23"
    },
    "4983": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "4984": {
      "op": "POP"
    },
    "4985": {
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x100"
    },
    "4988": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP4",
      "path": "23"
    },
    "4989": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DIV",
      "path": "23"
    },
    "4990": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4991": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "AND",
      "path": "23"
    },
    "4992": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "4993": {
      "op": "POP"
    },
    "4994": {
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH3",
      "path": "23",
      "value": "0x10000"
    },
    "4998": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP4",
      "path": "23"
    },
    "4999": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DIV",
      "path": "23"
    },
    "5000": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5001": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "AND",
      "path": "23"
    },
    "5002": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "5003": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x1000000"
    },
    "5008": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5009": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DIV",
      "path": "23"
    },
    "5010": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "AND",
      "path": "23"
    },
    "5011": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5012": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP10",
      "path": "23"
    },
    "5013": {
      "fn": "CLHouse.VoteProposal",
      "jump": "o",
      "offset": [
        1195,
        1228
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5014": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        7754,
        8592
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5015": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8030
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x2"
    },
    "5017": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8030
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "5018": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8057,
        8306
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5020": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8057,
        8306
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5021": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        7961,
        7975
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "5023": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        7961,
        7975
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5024": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        7961,
        7975
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5025": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        7961,
        7975
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5026": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5028": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5030": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5032": {
      "op": "SHL"
    },
    "5033": {
      "op": "SUB"
    },
    "5034": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8030
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5035": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8030
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5036": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8030
      ],
      "op": "AND",
      "path": "18"
    },
    "5037": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8030
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5038": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8057,
        8306
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x13C3"
    },
    "5041": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8057,
        8306
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5042": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8170,
        8173
      ],
      "op": "DUP10",
      "path": "18"
    },
    "5043": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8170,
        8173
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5044": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8191,
        8204
      ],
      "op": "DUP10",
      "path": "18"
    },
    "5045": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8191,
        8204
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5046": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8222,
        8234
      ],
      "op": "DUP10",
      "path": "18"
    },
    "5047": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8222,
        8234
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5048": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8252,
        8264
      ],
      "op": "DUP10",
      "path": "18"
    },
    "5049": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8252,
        8264
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5050": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8282,
        8292
      ],
      "op": "DUP10",
      "path": "18"
    },
    "5051": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8282,
        8292
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5052": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8057,
        8306
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "5054": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8057,
        8306
      ],
      "op": "ADD",
      "path": "18"
    },
    "5055": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8057,
        8306
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1ED8"
    },
    "5058": {
      "fn": "CLHouse.PropTxERC20",
      "jump": "i",
      "offset": [
        8057,
        8306
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5059": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8057,
        8306
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5060": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8057,
        8306
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5062": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8057,
        8306
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5063": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8057,
        8306
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5064": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5066": {
      "op": "NOT"
    },
    "5067": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8057,
        8306
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5068": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8057,
        8306
      ],
      "op": "DUP5",
      "path": "18"
    },
    "5069": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8057,
        8306
      ],
      "op": "SUB",
      "path": "18"
    },
    "5070": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8057,
        8306
      ],
      "op": "ADD",
      "path": "18"
    },
    "5071": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8057,
        8306
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5072": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8057,
        8306
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5073": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8057,
        8306
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5074": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8057,
        8306
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5075": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8057,
        8306
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5076": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8057,
        8306
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "5078": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8057,
        8306
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5079": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8057,
        8306
      ],
      "op": "ADD",
      "path": "18"
    },
    "5080": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8057,
        8306
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5081": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8057,
        8306
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5082": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5084": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5086": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5088": {
      "op": "SHL"
    },
    "5089": {
      "op": "SUB"
    },
    "5090": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8057,
        8306
      ],
      "op": "AND",
      "path": "18"
    },
    "5091": {
      "op": "PUSH4",
      "value": "0x6F2D58A7"
    },
    "5096": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "5098": {
      "op": "SHL"
    },
    "5099": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8057,
        8306
      ],
      "op": "OR",
      "path": "18"
    },
    "5100": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8057,
        8306
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5101": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8057,
        8306
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5102": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8316
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5103": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8316
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x13F8"
    },
    "5106": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8316
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5107": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8057,
        8306
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5108": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8316
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1CEE"
    },
    "5111": {
      "fn": "CLHouse.PropTxERC20",
      "jump": "i",
      "offset": [
        8017,
        8316
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5112": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8316
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5113": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8316
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "5115": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8316
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5117": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8316
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5118": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8316
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5119": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8316
      ],
      "op": "DUP4",
      "path": "18"
    },
    "5120": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8316
      ],
      "op": "SUB",
      "path": "18"
    },
    "5121": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8316
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5122": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8316
      ],
      "op": "DUP6",
      "path": "18"
    },
    "5123": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8316
      ],
      "op": "GAS",
      "path": "18"
    },
    "5124": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8316
      ],
      "op": "DELEGATECALL",
      "path": "18"
    },
    "5125": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8316
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5126": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8316
      ],
      "op": "POP",
      "path": "18"
    },
    "5127": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8316
      ],
      "op": "POP",
      "path": "18"
    },
    "5128": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8316
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "5129": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8316
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5130": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8316
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "5132": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8316
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5133": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8316
      ],
      "op": "EQ",
      "path": "18"
    },
    "5134": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8316
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1433"
    },
    "5137": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8316
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5138": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8316
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5140": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8316
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5141": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8316
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5142": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8316
      ],
      "op": "POP",
      "path": "18"
    },
    "5143": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8316
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "5145": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8316
      ],
      "op": "NOT",
      "path": "18"
    },
    "5146": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8316
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3F"
    },
    "5148": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8316
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "5149": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8316
      ],
      "op": "ADD",
      "path": "18"
    },
    "5150": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8316
      ],
      "op": "AND",
      "path": "18"
    },
    "5151": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8316
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5152": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8316
      ],
      "op": "ADD",
      "path": "18"
    },
    "5153": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8316
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5155": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8316
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5156": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8316
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "5157": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8316
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5158": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8316
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5159": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8316
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "5160": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8316
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "5162": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8316
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "5164": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8316
      ],
      "op": "DUP5",
      "path": "18"
    },
    "5165": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8316
      ],
      "op": "ADD",
      "path": "18"
    },
    "5166": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8316
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "5167": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8316
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1438"
    },
    "5170": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8316
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5171": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8316
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5172": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8316
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "5174": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8316
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5175": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8316
      ],
      "op": "POP",
      "path": "18"
    },
    "5176": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8316
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5177": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8017,
        8316
      ],
      "op": "POP",
      "path": "18"
    },
    "5178": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        7992,
        8316
      ],
      "op": "POP",
      "path": "18"
    },
    "5179": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        7992,
        8316
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5180": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        7992,
        8316
      ],
      "op": "POP",
      "path": "18"
    },
    "5181": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8367,
        8371
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5183": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8361,
        8372
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5184": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8397,
        8413
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "5185": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8449,
        8453
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5186": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8446,
        8447
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "5188": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8441,
        8444
      ],
      "op": "DUP4",
      "path": "18"
    },
    "5189": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8426,
        8454
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "5190": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8478,
        8491
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5191": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8467,
        8543
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x144E"
    },
    "5194": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8467,
        8543
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5195": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8524,
        8528
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5196": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8519,
        8522
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5197": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8512,
        8529
      ],
      "op": "REVERT",
      "path": "18"
    },
    "5198": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8467,
        8543
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5199": {
      "op": "POP"
    },
    "5200": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8566,
        8576
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5201": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8566,
        8576
      ],
      "op": "SWAP8",
      "path": "18"
    },
    "5202": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        7754,
        8592
      ],
      "op": "SWAP7",
      "path": "18"
    },
    "5203": {
      "op": "POP"
    },
    "5204": {
      "op": "POP"
    },
    "5205": {
      "op": "POP"
    },
    "5206": {
      "op": "POP"
    },
    "5207": {
      "op": "POP"
    },
    "5208": {
      "op": "POP"
    },
    "5209": {
      "op": "POP"
    },
    "5210": {
      "fn": "CLHouse.PropTxERC20",
      "jump": "o",
      "offset": [
        7754,
        8592
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5211": {
      "op": "JUMPDEST"
    },
    "5212": {
      "op": "DUP1"
    },
    "5213": {
      "op": "CALLDATALOAD"
    },
    "5214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5218": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5220": {
      "op": "SHL"
    },
    "5221": {
      "op": "SUB"
    },
    "5222": {
      "op": "DUP2"
    },
    "5223": {
      "op": "AND"
    },
    "5224": {
      "op": "DUP2"
    },
    "5225": {
      "op": "EQ"
    },
    "5226": {
      "op": "PUSH2",
      "value": "0x1472"
    },
    "5229": {
      "op": "JUMPI"
    },
    "5230": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5232": {
      "op": "DUP1"
    },
    "5233": {
      "op": "REVERT"
    },
    "5234": {
      "op": "JUMPDEST"
    },
    "5235": {
      "op": "SWAP2"
    },
    "5236": {
      "op": "SWAP1"
    },
    "5237": {
      "op": "POP"
    },
    "5238": {
      "jump": "o",
      "op": "JUMP"
    },
    "5239": {
      "op": "JUMPDEST"
    },
    "5240": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5245": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5247": {
      "op": "SHL"
    },
    "5248": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5250": {
      "op": "MSTORE"
    },
    "5251": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "5253": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5255": {
      "op": "MSTORE"
    },
    "5256": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5258": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5260": {
      "op": "REVERT"
    },
    "5261": {
      "op": "JUMPDEST"
    },
    "5262": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5264": {
      "op": "DUP3"
    },
    "5265": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5267": {
      "op": "DUP4"
    },
    "5268": {
      "op": "ADD"
    },
    "5269": {
      "op": "SLT"
    },
    "5270": {
      "op": "PUSH2",
      "value": "0x149E"
    },
    "5273": {
      "op": "JUMPI"
    },
    "5274": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5276": {
      "op": "DUP1"
    },
    "5277": {
      "op": "REVERT"
    },
    "5278": {
      "op": "JUMPDEST"
    },
    "5279": {
      "op": "DUP2"
    },
    "5280": {
      "op": "CALLDATALOAD"
    },
    "5281": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5290": {
      "op": "DUP1"
    },
    "5291": {
      "op": "DUP3"
    },
    "5292": {
      "op": "GT"
    },
    "5293": {
      "op": "ISZERO"
    },
    "5294": {
      "op": "PUSH2",
      "value": "0x14B9"
    },
    "5297": {
      "op": "JUMPI"
    },
    "5298": {
      "op": "PUSH2",
      "value": "0x14B9"
    },
    "5301": {
      "op": "PUSH2",
      "value": "0x1477"
    },
    "5304": {
      "jump": "i",
      "op": "JUMP"
    },
    "5305": {
      "op": "JUMPDEST"
    },
    "5306": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5308": {
      "op": "MLOAD"
    },
    "5309": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5311": {
      "op": "DUP4"
    },
    "5312": {
      "op": "ADD"
    },
    "5313": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5315": {
      "op": "NOT"
    },
    "5316": {
      "op": "SWAP1"
    },
    "5317": {
      "op": "DUP2"
    },
    "5318": {
      "op": "AND"
    },
    "5319": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "5321": {
      "op": "ADD"
    },
    "5322": {
      "op": "AND"
    },
    "5323": {
      "op": "DUP2"
    },
    "5324": {
      "op": "ADD"
    },
    "5325": {
      "op": "SWAP1"
    },
    "5326": {
      "op": "DUP3"
    },
    "5327": {
      "op": "DUP3"
    },
    "5328": {
      "op": "GT"
    },
    "5329": {
      "op": "DUP2"
    },
    "5330": {
      "op": "DUP4"
    },
    "5331": {
      "op": "LT"
    },
    "5332": {
      "op": "OR"
    },
    "5333": {
      "op": "ISZERO"
    },
    "5334": {
      "op": "PUSH2",
      "value": "0x14E1"
    },
    "5337": {
      "op": "JUMPI"
    },
    "5338": {
      "op": "PUSH2",
      "value": "0x14E1"
    },
    "5341": {
      "op": "PUSH2",
      "value": "0x1477"
    },
    "5344": {
      "jump": "i",
      "op": "JUMP"
    },
    "5345": {
      "op": "JUMPDEST"
    },
    "5346": {
      "op": "DUP2"
    },
    "5347": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5349": {
      "op": "MSTORE"
    },
    "5350": {
      "op": "DUP4"
    },
    "5351": {
      "op": "DUP2"
    },
    "5352": {
      "op": "MSTORE"
    },
    "5353": {
      "op": "DUP7"
    },
    "5354": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5356": {
      "op": "DUP6"
    },
    "5357": {
      "op": "DUP9"
    },
    "5358": {
      "op": "ADD"
    },
    "5359": {
      "op": "ADD"
    },
    "5360": {
      "op": "GT"
    },
    "5361": {
      "op": "ISZERO"
    },
    "5362": {
      "op": "PUSH2",
      "value": "0x14FA"
    },
    "5365": {
      "op": "JUMPI"
    },
    "5366": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5368": {
      "op": "DUP1"
    },
    "5369": {
      "op": "REVERT"
    },
    "5370": {
      "op": "JUMPDEST"
    },
    "5371": {
      "op": "DUP4"
    },
    "5372": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5374": {
      "op": "DUP8"
    },
    "5375": {
      "op": "ADD"
    },
    "5376": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5378": {
      "op": "DUP4"
    },
    "5379": {
      "op": "ADD"
    },
    "5380": {
      "op": "CALLDATACOPY"
    },
    "5381": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5383": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5385": {
      "op": "DUP6"
    },
    "5386": {
      "op": "DUP4"
    },
    "5387": {
      "op": "ADD"
    },
    "5388": {
      "op": "ADD"
    },
    "5389": {
      "op": "MSTORE"
    },
    "5390": {
      "op": "DUP1"
    },
    "5391": {
      "op": "SWAP5"
    },
    "5392": {
      "op": "POP"
    },
    "5393": {
      "op": "POP"
    },
    "5394": {
      "op": "POP"
    },
    "5395": {
      "op": "POP"
    },
    "5396": {
      "op": "POP"
    },
    "5397": {
      "op": "SWAP3"
    },
    "5398": {
      "op": "SWAP2"
    },
    "5399": {
      "op": "POP"
    },
    "5400": {
      "op": "POP"
    },
    "5401": {
      "jump": "o",
      "op": "JUMP"
    },
    "5402": {
      "op": "JUMPDEST"
    },
    "5403": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5405": {
      "op": "DUP1"
    },
    "5406": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5408": {
      "op": "DUP1"
    },
    "5409": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5411": {
      "op": "DUP6"
    },
    "5412": {
      "op": "DUP8"
    },
    "5413": {
      "op": "SUB"
    },
    "5414": {
      "op": "SLT"
    },
    "5415": {
      "op": "ISZERO"
    },
    "5416": {
      "op": "PUSH2",
      "value": "0x1530"
    },
    "5419": {
      "op": "JUMPI"
    },
    "5420": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5422": {
      "op": "DUP1"
    },
    "5423": {
      "op": "REVERT"
    },
    "5424": {
      "op": "JUMPDEST"
    },
    "5425": {
      "op": "PUSH2",
      "value": "0x1539"
    },
    "5428": {
      "op": "DUP6"
    },
    "5429": {
      "op": "PUSH2",
      "value": "0x145B"
    },
    "5432": {
      "jump": "i",
      "op": "JUMP"
    },
    "5433": {
      "op": "JUMPDEST"
    },
    "5434": {
      "op": "SWAP4"
    },
    "5435": {
      "op": "POP"
    },
    "5436": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5438": {
      "op": "DUP6"
    },
    "5439": {
      "op": "ADD"
    },
    "5440": {
      "op": "CALLDATALOAD"
    },
    "5441": {
      "op": "SWAP3"
    },
    "5442": {
      "op": "POP"
    },
    "5443": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5445": {
      "op": "DUP6"
    },
    "5446": {
      "op": "ADD"
    },
    "5447": {
      "op": "CALLDATALOAD"
    },
    "5448": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5457": {
      "op": "DUP2"
    },
    "5458": {
      "op": "GT"
    },
    "5459": {
      "op": "ISZERO"
    },
    "5460": {
      "op": "PUSH2",
      "value": "0x155C"
    },
    "5463": {
      "op": "JUMPI"
    },
    "5464": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5466": {
      "op": "DUP1"
    },
    "5467": {
      "op": "REVERT"
    },
    "5468": {
      "op": "JUMPDEST"
    },
    "5469": {
      "op": "PUSH2",
      "value": "0x1568"
    },
    "5472": {
      "op": "DUP8"
    },
    "5473": {
      "op": "DUP3"
    },
    "5474": {
      "op": "DUP9"
    },
    "5475": {
      "op": "ADD"
    },
    "5476": {
      "op": "PUSH2",
      "value": "0x148D"
    },
    "5479": {
      "jump": "i",
      "op": "JUMP"
    },
    "5480": {
      "op": "JUMPDEST"
    },
    "5481": {
      "op": "SWAP5"
    },
    "5482": {
      "op": "SWAP8"
    },
    "5483": {
      "op": "SWAP4"
    },
    "5484": {
      "op": "SWAP7"
    },
    "5485": {
      "op": "POP"
    },
    "5486": {
      "op": "SWAP4"
    },
    "5487": {
      "op": "SWAP5"
    },
    "5488": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5490": {
      "op": "ADD"
    },
    "5491": {
      "op": "CALLDATALOAD"
    },
    "5492": {
      "op": "SWAP4"
    },
    "5493": {
      "op": "POP"
    },
    "5494": {
      "op": "POP"
    },
    "5495": {
      "op": "POP"
    },
    "5496": {
      "jump": "o",
      "op": "JUMP"
    },
    "5497": {
      "op": "JUMPDEST"
    },
    "5498": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5500": {
      "op": "DUP1"
    },
    "5501": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5503": {
      "op": "DUP1"
    },
    "5504": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5506": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5508": {
      "op": "DUP7"
    },
    "5509": {
      "op": "DUP9"
    },
    "5510": {
      "op": "SUB"
    },
    "5511": {
      "op": "SLT"
    },
    "5512": {
      "op": "ISZERO"
    },
    "5513": {
      "op": "PUSH2",
      "value": "0x1591"
    },
    "5516": {
      "op": "JUMPI"
    },
    "5517": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5519": {
      "op": "DUP1"
    },
    "5520": {
      "op": "REVERT"
    },
    "5521": {
      "op": "JUMPDEST"
    },
    "5522": {
      "op": "PUSH2",
      "value": "0x159A"
    },
    "5525": {
      "op": "DUP7"
    },
    "5526": {
      "op": "PUSH2",
      "value": "0x145B"
    },
    "5529": {
      "jump": "i",
      "op": "JUMP"
    },
    "5530": {
      "op": "JUMPDEST"
    },
    "5531": {
      "op": "SWAP5"
    },
    "5532": {
      "op": "POP"
    },
    "5533": {
      "op": "PUSH2",
      "value": "0x15A8"
    },
    "5536": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5538": {
      "op": "DUP8"
    },
    "5539": {
      "op": "ADD"
    },
    "5540": {
      "op": "PUSH2",
      "value": "0x145B"
    },
    "5543": {
      "jump": "i",
      "op": "JUMP"
    },
    "5544": {
      "op": "JUMPDEST"
    },
    "5545": {
      "op": "SWAP4"
    },
    "5546": {
      "op": "POP"
    },
    "5547": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5549": {
      "op": "DUP7"
    },
    "5550": {
      "op": "ADD"
    },
    "5551": {
      "op": "CALLDATALOAD"
    },
    "5552": {
      "op": "SWAP3"
    },
    "5553": {
      "op": "POP"
    },
    "5554": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5556": {
      "op": "DUP7"
    },
    "5557": {
      "op": "ADD"
    },
    "5558": {
      "op": "CALLDATALOAD"
    },
    "5559": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5568": {
      "op": "DUP2"
    },
    "5569": {
      "op": "GT"
    },
    "5570": {
      "op": "ISZERO"
    },
    "5571": {
      "op": "PUSH2",
      "value": "0x15CB"
    },
    "5574": {
      "op": "JUMPI"
    },
    "5575": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5577": {
      "op": "DUP1"
    },
    "5578": {
      "op": "REVERT"
    },
    "5579": {
      "op": "JUMPDEST"
    },
    "5580": {
      "op": "PUSH2",
      "value": "0x15D7"
    },
    "5583": {
      "op": "DUP9"
    },
    "5584": {
      "op": "DUP3"
    },
    "5585": {
      "op": "DUP10"
    },
    "5586": {
      "op": "ADD"
    },
    "5587": {
      "op": "PUSH2",
      "value": "0x148D"
    },
    "5590": {
      "jump": "i",
      "op": "JUMP"
    },
    "5591": {
      "op": "JUMPDEST"
    },
    "5592": {
      "op": "SWAP6"
    },
    "5593": {
      "op": "SWAP9"
    },
    "5594": {
      "op": "SWAP5"
    },
    "5595": {
      "op": "SWAP8"
    },
    "5596": {
      "op": "POP"
    },
    "5597": {
      "op": "SWAP3"
    },
    "5598": {
      "op": "SWAP6"
    },
    "5599": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5601": {
      "op": "ADD"
    },
    "5602": {
      "op": "CALLDATALOAD"
    },
    "5603": {
      "op": "SWAP4"
    },
    "5604": {
      "op": "SWAP3"
    },
    "5605": {
      "op": "POP"
    },
    "5606": {
      "op": "POP"
    },
    "5607": {
      "op": "POP"
    },
    "5608": {
      "jump": "o",
      "op": "JUMP"
    },
    "5609": {
      "op": "JUMPDEST"
    },
    "5610": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5612": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5614": {
      "op": "DUP3"
    },
    "5615": {
      "op": "DUP5"
    },
    "5616": {
      "op": "SUB"
    },
    "5617": {
      "op": "SLT"
    },
    "5618": {
      "op": "ISZERO"
    },
    "5619": {
      "op": "PUSH2",
      "value": "0x15FB"
    },
    "5622": {
      "op": "JUMPI"
    },
    "5623": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5625": {
      "op": "DUP1"
    },
    "5626": {
      "op": "REVERT"
    },
    "5627": {
      "op": "JUMPDEST"
    },
    "5628": {
      "op": "POP"
    },
    "5629": {
      "op": "CALLDATALOAD"
    },
    "5630": {
      "op": "SWAP2"
    },
    "5631": {
      "op": "SWAP1"
    },
    "5632": {
      "op": "POP"
    },
    "5633": {
      "jump": "o",
      "op": "JUMP"
    },
    "5634": {
      "op": "JUMPDEST"
    },
    "5635": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5637": {
      "op": "JUMPDEST"
    },
    "5638": {
      "op": "DUP4"
    },
    "5639": {
      "op": "DUP2"
    },
    "5640": {
      "op": "LT"
    },
    "5641": {
      "op": "ISZERO"
    },
    "5642": {
      "op": "PUSH2",
      "value": "0x161D"
    },
    "5645": {
      "op": "JUMPI"
    },
    "5646": {
      "op": "DUP2"
    },
    "5647": {
      "op": "DUP2"
    },
    "5648": {
      "op": "ADD"
    },
    "5649": {
      "op": "MLOAD"
    },
    "5650": {
      "op": "DUP4"
    },
    "5651": {
      "op": "DUP3"
    },
    "5652": {
      "op": "ADD"
    },
    "5653": {
      "op": "MSTORE"
    },
    "5654": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5656": {
      "op": "ADD"
    },
    "5657": {
      "op": "PUSH2",
      "value": "0x1605"
    },
    "5660": {
      "op": "JUMP"
    },
    "5661": {
      "op": "JUMPDEST"
    },
    "5662": {
      "op": "DUP4"
    },
    "5663": {
      "op": "DUP2"
    },
    "5664": {
      "op": "GT"
    },
    "5665": {
      "op": "ISZERO"
    },
    "5666": {
      "op": "PUSH2",
      "value": "0x162C"
    },
    "5669": {
      "op": "JUMPI"
    },
    "5670": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5672": {
      "op": "DUP5"
    },
    "5673": {
      "op": "DUP5"
    },
    "5674": {
      "op": "ADD"
    },
    "5675": {
      "op": "MSTORE"
    },
    "5676": {
      "op": "JUMPDEST"
    },
    "5677": {
      "op": "POP"
    },
    "5678": {
      "op": "POP"
    },
    "5679": {
      "op": "POP"
    },
    "5680": {
      "op": "POP"
    },
    "5681": {
      "jump": "o",
      "op": "JUMP"
    },
    "5682": {
      "op": "JUMPDEST"
    },
    "5683": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5685": {
      "op": "DUP2"
    },
    "5686": {
      "op": "MLOAD"
    },
    "5687": {
      "op": "DUP1"
    },
    "5688": {
      "op": "DUP5"
    },
    "5689": {
      "op": "MSTORE"
    },
    "5690": {
      "op": "PUSH2",
      "value": "0x164A"
    },
    "5693": {
      "op": "DUP2"
    },
    "5694": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5696": {
      "op": "DUP7"
    },
    "5697": {
      "op": "ADD"
    },
    "5698": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5700": {
      "op": "DUP7"
    },
    "5701": {
      "op": "ADD"
    },
    "5702": {
      "op": "PUSH2",
      "value": "0x1602"
    },
    "5705": {
      "jump": "i",
      "op": "JUMP"
    },
    "5706": {
      "op": "JUMPDEST"
    },
    "5707": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5709": {
      "op": "ADD"
    },
    "5710": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5712": {
      "op": "NOT"
    },
    "5713": {
      "op": "AND"
    },
    "5714": {
      "op": "SWAP3"
    },
    "5715": {
      "op": "SWAP1"
    },
    "5716": {
      "op": "SWAP3"
    },
    "5717": {
      "op": "ADD"
    },
    "5718": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5720": {
      "op": "ADD"
    },
    "5721": {
      "op": "SWAP3"
    },
    "5722": {
      "op": "SWAP2"
    },
    "5723": {
      "op": "POP"
    },
    "5724": {
      "op": "POP"
    },
    "5725": {
      "jump": "o",
      "op": "JUMP"
    },
    "5726": {
      "op": "JUMPDEST"
    },
    "5727": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5731": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5733": {
      "op": "SHL"
    },
    "5734": {
      "op": "SUB"
    },
    "5735": {
      "op": "DUP7"
    },
    "5736": {
      "op": "AND"
    },
    "5737": {
      "op": "DUP2"
    },
    "5738": {
      "op": "MSTORE"
    },
    "5739": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5741": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5743": {
      "op": "DUP3"
    },
    "5744": {
      "op": "ADD"
    },
    "5745": {
      "op": "DUP2"
    },
    "5746": {
      "op": "SWAP1"
    },
    "5747": {
      "op": "MSTORE"
    },
    "5748": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5750": {
      "op": "SWAP1"
    },
    "5751": {
      "op": "PUSH2",
      "value": "0x1682"
    },
    "5754": {
      "op": "SWAP1"
    },
    "5755": {
      "op": "DUP4"
    },
    "5756": {
      "op": "ADD"
    },
    "5757": {
      "op": "DUP8"
    },
    "5758": {
      "op": "PUSH2",
      "value": "0x1632"
    },
    "5761": {
      "jump": "i",
      "op": "JUMP"
    },
    "5762": {
      "op": "JUMPDEST"
    },
    "5763": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5765": {
      "op": "DUP4"
    },
    "5766": {
      "op": "ADD"
    },
    "5767": {
      "op": "SWAP6"
    },
    "5768": {
      "op": "SWAP1"
    },
    "5769": {
      "op": "SWAP6"
    },
    "5770": {
      "op": "MSTORE"
    },
    "5771": {
      "op": "POP"
    },
    "5772": {
      "op": "SWAP2"
    },
    "5773": {
      "op": "ISZERO"
    },
    "5774": {
      "op": "ISZERO"
    },
    "5775": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5777": {
      "op": "DUP4"
    },
    "5778": {
      "op": "ADD"
    },
    "5779": {
      "op": "MSTORE"
    },
    "5780": {
      "op": "ISZERO"
    },
    "5781": {
      "op": "ISZERO"
    },
    "5782": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5784": {
      "op": "SWAP1"
    },
    "5785": {
      "op": "SWAP2"
    },
    "5786": {
      "op": "ADD"
    },
    "5787": {
      "op": "MSTORE"
    },
    "5788": {
      "op": "SWAP3"
    },
    "5789": {
      "op": "SWAP2"
    },
    "5790": {
      "op": "POP"
    },
    "5791": {
      "op": "POP"
    },
    "5792": {
      "jump": "o",
      "op": "JUMP"
    },
    "5793": {
      "op": "JUMPDEST"
    },
    "5794": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5796": {
      "op": "DUP1"
    },
    "5797": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5799": {
      "op": "DUP1"
    },
    "5800": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5802": {
      "op": "DUP6"
    },
    "5803": {
      "op": "DUP8"
    },
    "5804": {
      "op": "SUB"
    },
    "5805": {
      "op": "SLT"
    },
    "5806": {
      "op": "ISZERO"
    },
    "5807": {
      "op": "PUSH2",
      "value": "0x16B7"
    },
    "5810": {
      "op": "JUMPI"
    },
    "5811": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5813": {
      "op": "DUP1"
    },
    "5814": {
      "op": "REVERT"
    },
    "5815": {
      "op": "JUMPDEST"
    },
    "5816": {
      "op": "PUSH2",
      "value": "0x16C0"
    },
    "5819": {
      "op": "DUP6"
    },
    "5820": {
      "op": "PUSH2",
      "value": "0x145B"
    },
    "5823": {
      "jump": "i",
      "op": "JUMP"
    },
    "5824": {
      "op": "JUMPDEST"
    },
    "5825": {
      "op": "SWAP4"
    },
    "5826": {
      "op": "POP"
    },
    "5827": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5829": {
      "op": "DUP6"
    },
    "5830": {
      "op": "ADD"
    },
    "5831": {
      "op": "CALLDATALOAD"
    },
    "5832": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5841": {
      "op": "DUP1"
    },
    "5842": {
      "op": "DUP3"
    },
    "5843": {
      "op": "GT"
    },
    "5844": {
      "op": "ISZERO"
    },
    "5845": {
      "op": "PUSH2",
      "value": "0x16DD"
    },
    "5848": {
      "op": "JUMPI"
    },
    "5849": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5851": {
      "op": "DUP1"
    },
    "5852": {
      "op": "REVERT"
    },
    "5853": {
      "op": "JUMPDEST"
    },
    "5854": {
      "op": "PUSH2",
      "value": "0x16E9"
    },
    "5857": {
      "op": "DUP9"
    },
    "5858": {
      "op": "DUP4"
    },
    "5859": {
      "op": "DUP10"
    },
    "5860": {
      "op": "ADD"
    },
    "5861": {
      "op": "PUSH2",
      "value": "0x148D"
    },
    "5864": {
      "jump": "i",
      "op": "JUMP"
    },
    "5865": {
      "op": "JUMPDEST"
    },
    "5866": {
      "op": "SWAP5"
    },
    "5867": {
      "op": "POP"
    },
    "5868": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5870": {
      "op": "DUP8"
    },
    "5871": {
      "op": "ADD"
    },
    "5872": {
      "op": "CALLDATALOAD"
    },
    "5873": {
      "op": "SWAP4"
    },
    "5874": {
      "op": "POP"
    },
    "5875": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5877": {
      "op": "DUP8"
    },
    "5878": {
      "op": "ADD"
    },
    "5879": {
      "op": "CALLDATALOAD"
    },
    "5880": {
      "op": "SWAP2"
    },
    "5881": {
      "op": "POP"
    },
    "5882": {
      "op": "DUP1"
    },
    "5883": {
      "op": "DUP3"
    },
    "5884": {
      "op": "GT"
    },
    "5885": {
      "op": "ISZERO"
    },
    "5886": {
      "op": "PUSH2",
      "value": "0x1706"
    },
    "5889": {
      "op": "JUMPI"
    },
    "5890": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5892": {
      "op": "DUP1"
    },
    "5893": {
      "op": "REVERT"
    },
    "5894": {
      "op": "JUMPDEST"
    },
    "5895": {
      "op": "POP"
    },
    "5896": {
      "op": "PUSH2",
      "value": "0x1713"
    },
    "5899": {
      "op": "DUP8"
    },
    "5900": {
      "op": "DUP3"
    },
    "5901": {
      "op": "DUP9"
    },
    "5902": {
      "op": "ADD"
    },
    "5903": {
      "op": "PUSH2",
      "value": "0x148D"
    },
    "5906": {
      "jump": "i",
      "op": "JUMP"
    },
    "5907": {
      "op": "JUMPDEST"
    },
    "5908": {
      "op": "SWAP2"
    },
    "5909": {
      "op": "POP"
    },
    "5910": {
      "op": "POP"
    },
    "5911": {
      "op": "SWAP3"
    },
    "5912": {
      "op": "SWAP6"
    },
    "5913": {
      "op": "SWAP2"
    },
    "5914": {
      "op": "SWAP5"
    },
    "5915": {
      "op": "POP"
    },
    "5916": {
      "op": "SWAP3"
    },
    "5917": {
      "op": "POP"
    },
    "5918": {
      "jump": "o",
      "op": "JUMP"
    },
    "5919": {
      "op": "JUMPDEST"
    },
    "5920": {
      "op": "DUP1"
    },
    "5921": {
      "op": "CALLDATALOAD"
    },
    "5922": {
      "op": "DUP1"
    },
    "5923": {
      "op": "ISZERO"
    },
    "5924": {
      "op": "ISZERO"
    },
    "5925": {
      "op": "DUP2"
    },
    "5926": {
      "op": "EQ"
    },
    "5927": {
      "op": "PUSH2",
      "value": "0x1472"
    },
    "5930": {
      "op": "JUMPI"
    },
    "5931": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5933": {
      "op": "DUP1"
    },
    "5934": {
      "op": "REVERT"
    },
    "5935": {
      "op": "JUMPDEST"
    },
    "5936": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5938": {
      "op": "DUP1"
    },
    "5939": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5941": {
      "op": "DUP1"
    },
    "5942": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5944": {
      "op": "DUP1"
    },
    "5945": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5947": {
      "op": "DUP8"
    },
    "5948": {
      "op": "DUP10"
    },
    "5949": {
      "op": "SUB"
    },
    "5950": {
      "op": "SLT"
    },
    "5951": {
      "op": "ISZERO"
    },
    "5952": {
      "op": "PUSH2",
      "value": "0x1748"
    },
    "5955": {
      "op": "JUMPI"
    },
    "5956": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5958": {
      "op": "DUP1"
    },
    "5959": {
      "op": "REVERT"
    },
    "5960": {
      "op": "JUMPDEST"
    },
    "5961": {
      "op": "PUSH2",
      "value": "0x1751"
    },
    "5964": {
      "op": "DUP8"
    },
    "5965": {
      "op": "PUSH2",
      "value": "0x145B"
    },
    "5968": {
      "jump": "i",
      "op": "JUMP"
    },
    "5969": {
      "op": "JUMPDEST"
    },
    "5970": {
      "op": "SWAP6"
    },
    "5971": {
      "op": "POP"
    },
    "5972": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5974": {
      "op": "DUP8"
    },
    "5975": {
      "op": "ADD"
    },
    "5976": {
      "op": "CALLDATALOAD"
    },
    "5977": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5986": {
      "op": "DUP1"
    },
    "5987": {
      "op": "DUP3"
    },
    "5988": {
      "op": "GT"
    },
    "5989": {
      "op": "ISZERO"
    },
    "5990": {
      "op": "PUSH2",
      "value": "0x176E"
    },
    "5993": {
      "op": "JUMPI"
    },
    "5994": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5996": {
      "op": "DUP1"
    },
    "5997": {
      "op": "REVERT"
    },
    "5998": {
      "op": "JUMPDEST"
    },
    "5999": {
      "op": "PUSH2",
      "value": "0x177A"
    },
    "6002": {
      "op": "DUP11"
    },
    "6003": {
      "op": "DUP4"
    },
    "6004": {
      "op": "DUP12"
    },
    "6005": {
      "op": "ADD"
    },
    "6006": {
      "op": "PUSH2",
      "value": "0x148D"
    },
    "6009": {
      "jump": "i",
      "op": "JUMP"
    },
    "6010": {
      "op": "JUMPDEST"
    },
    "6011": {
      "op": "SWAP7"
    },
    "6012": {
      "op": "POP"
    },
    "6013": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6015": {
      "op": "DUP10"
    },
    "6016": {
      "op": "ADD"
    },
    "6017": {
      "op": "CALLDATALOAD"
    },
    "6018": {
      "op": "SWAP2"
    },
    "6019": {
      "op": "POP"
    },
    "6020": {
      "op": "DUP1"
    },
    "6021": {
      "op": "DUP3"
    },
    "6022": {
      "op": "GT"
    },
    "6023": {
      "op": "ISZERO"
    },
    "6024": {
      "op": "PUSH2",
      "value": "0x1790"
    },
    "6027": {
      "op": "JUMPI"
    },
    "6028": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6030": {
      "op": "DUP1"
    },
    "6031": {
      "op": "REVERT"
    },
    "6032": {
      "op": "JUMPDEST"
    },
    "6033": {
      "op": "PUSH2",
      "value": "0x179C"
    },
    "6036": {
      "op": "DUP11"
    },
    "6037": {
      "op": "DUP4"
    },
    "6038": {
      "op": "DUP12"
    },
    "6039": {
      "op": "ADD"
    },
    "6040": {
      "op": "PUSH2",
      "value": "0x148D"
    },
    "6043": {
      "jump": "i",
      "op": "JUMP"
    },
    "6044": {
      "op": "JUMPDEST"
    },
    "6045": {
      "op": "SWAP6"
    },
    "6046": {
      "op": "POP"
    },
    "6047": {
      "op": "PUSH2",
      "value": "0x17AA"
    },
    "6050": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6052": {
      "op": "DUP11"
    },
    "6053": {
      "op": "ADD"
    },
    "6054": {
      "op": "PUSH2",
      "value": "0x171F"
    },
    "6057": {
      "jump": "i",
      "op": "JUMP"
    },
    "6058": {
      "op": "JUMPDEST"
    },
    "6059": {
      "op": "SWAP5"
    },
    "6060": {
      "op": "POP"
    },
    "6061": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6063": {
      "op": "DUP10"
    },
    "6064": {
      "op": "ADD"
    },
    "6065": {
      "op": "CALLDATALOAD"
    },
    "6066": {
      "op": "SWAP4"
    },
    "6067": {
      "op": "POP"
    },
    "6068": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6070": {
      "op": "DUP10"
    },
    "6071": {
      "op": "ADD"
    },
    "6072": {
      "op": "CALLDATALOAD"
    },
    "6073": {
      "op": "SWAP2"
    },
    "6074": {
      "op": "POP"
    },
    "6075": {
      "op": "DUP1"
    },
    "6076": {
      "op": "DUP3"
    },
    "6077": {
      "op": "GT"
    },
    "6078": {
      "op": "ISZERO"
    },
    "6079": {
      "op": "PUSH2",
      "value": "0x17C7"
    },
    "6082": {
      "op": "JUMPI"
    },
    "6083": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6085": {
      "op": "DUP1"
    },
    "6086": {
      "op": "REVERT"
    },
    "6087": {
      "op": "JUMPDEST"
    },
    "6088": {
      "op": "POP"
    },
    "6089": {
      "op": "PUSH2",
      "value": "0x17D4"
    },
    "6092": {
      "op": "DUP10"
    },
    "6093": {
      "op": "DUP3"
    },
    "6094": {
      "op": "DUP11"
    },
    "6095": {
      "op": "ADD"
    },
    "6096": {
      "op": "PUSH2",
      "value": "0x148D"
    },
    "6099": {
      "jump": "i",
      "op": "JUMP"
    },
    "6100": {
      "op": "JUMPDEST"
    },
    "6101": {
      "op": "SWAP2"
    },
    "6102": {
      "op": "POP"
    },
    "6103": {
      "op": "POP"
    },
    "6104": {
      "op": "SWAP3"
    },
    "6105": {
      "op": "SWAP6"
    },
    "6106": {
      "op": "POP"
    },
    "6107": {
      "op": "SWAP3"
    },
    "6108": {
      "op": "SWAP6"
    },
    "6109": {
      "op": "POP"
    },
    "6110": {
      "op": "SWAP3"
    },
    "6111": {
      "op": "SWAP6"
    },
    "6112": {
      "jump": "o",
      "op": "JUMP"
    },
    "6113": {
      "op": "JUMPDEST"
    },
    "6114": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6116": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6118": {
      "op": "DUP3"
    },
    "6119": {
      "op": "DUP5"
    },
    "6120": {
      "op": "SUB"
    },
    "6121": {
      "op": "SLT"
    },
    "6122": {
      "op": "ISZERO"
    },
    "6123": {
      "op": "PUSH2",
      "value": "0x17F3"
    },
    "6126": {
      "op": "JUMPI"
    },
    "6127": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6129": {
      "op": "DUP1"
    },
    "6130": {
      "op": "REVERT"
    },
    "6131": {
      "op": "JUMPDEST"
    },
    "6132": {
      "op": "PUSH2",
      "value": "0x17FC"
    },
    "6135": {
      "op": "DUP3"
    },
    "6136": {
      "op": "PUSH2",
      "value": "0x145B"
    },
    "6139": {
      "jump": "i",
      "op": "JUMP"
    },
    "6140": {
      "op": "JUMPDEST"
    },
    "6141": {
      "op": "SWAP4"
    },
    "6142": {
      "op": "SWAP3"
    },
    "6143": {
      "op": "POP"
    },
    "6144": {
      "op": "POP"
    },
    "6145": {
      "op": "POP"
    },
    "6146": {
      "jump": "o",
      "op": "JUMP"
    },
    "6147": {
      "op": "JUMPDEST"
    },
    "6148": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6150": {
      "op": "DUP2"
    },
    "6151": {
      "op": "MSTORE"
    },
    "6152": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6154": {
      "op": "PUSH2",
      "value": "0x17FC"
    },
    "6157": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6159": {
      "op": "DUP4"
    },
    "6160": {
      "op": "ADD"
    },
    "6161": {
      "op": "DUP5"
    },
    "6162": {
      "op": "PUSH2",
      "value": "0x1632"
    },
    "6165": {
      "jump": "i",
      "op": "JUMP"
    },
    "6166": {
      "op": "JUMPDEST"
    },
    "6167": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6169": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6171": {
      "op": "DUP1"
    },
    "6172": {
      "op": "DUP4"
    },
    "6173": {
      "op": "ADD"
    },
    "6174": {
      "op": "DUP2"
    },
    "6175": {
      "op": "DUP5"
    },
    "6176": {
      "op": "MSTORE"
    },
    "6177": {
      "op": "DUP1"
    },
    "6178": {
      "op": "DUP6"
    },
    "6179": {
      "op": "MLOAD"
    },
    "6180": {
      "op": "DUP1"
    },
    "6181": {
      "op": "DUP4"
    },
    "6182": {
      "op": "MSTORE"
    },
    "6183": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6185": {
      "op": "SWAP3"
    },
    "6186": {
      "op": "POP"
    },
    "6187": {
      "op": "DUP3"
    },
    "6188": {
      "op": "DUP7"
    },
    "6189": {
      "op": "ADD"
    },
    "6190": {
      "op": "SWAP2"
    },
    "6191": {
      "op": "POP"
    },
    "6192": {
      "op": "DUP3"
    },
    "6193": {
      "op": "DUP2"
    },
    "6194": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "6196": {
      "op": "SHL"
    },
    "6197": {
      "op": "DUP8"
    },
    "6198": {
      "op": "ADD"
    },
    "6199": {
      "op": "ADD"
    },
    "6200": {
      "op": "DUP5"
    },
    "6201": {
      "op": "DUP9"
    },
    "6202": {
      "op": "ADD"
    },
    "6203": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6205": {
      "op": "JUMPDEST"
    },
    "6206": {
      "op": "DUP4"
    },
    "6207": {
      "op": "DUP2"
    },
    "6208": {
      "op": "LT"
    },
    "6209": {
      "op": "ISZERO"
    },
    "6210": {
      "op": "PUSH2",
      "value": "0x1896"
    },
    "6213": {
      "op": "JUMPI"
    },
    "6214": {
      "op": "DUP9"
    },
    "6215": {
      "op": "DUP4"
    },
    "6216": {
      "op": "SUB"
    },
    "6217": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "6219": {
      "op": "NOT"
    },
    "6220": {
      "op": "ADD"
    },
    "6221": {
      "op": "DUP6"
    },
    "6222": {
      "op": "MSTORE"
    },
    "6223": {
      "op": "DUP2"
    },
    "6224": {
      "op": "MLOAD"
    },
    "6225": {
      "op": "DUP1"
    },
    "6226": {
      "op": "MLOAD"
    },
    "6227": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6229": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6231": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6233": {
      "op": "SHL"
    },
    "6234": {
      "op": "SUB"
    },
    "6235": {
      "op": "AND"
    },
    "6236": {
      "op": "DUP5"
    },
    "6237": {
      "op": "MSTORE"
    },
    "6238": {
      "op": "DUP8"
    },
    "6239": {
      "op": "DUP2"
    },
    "6240": {
      "op": "ADD"
    },
    "6241": {
      "op": "MLOAD"
    },
    "6242": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6244": {
      "op": "DUP10"
    },
    "6245": {
      "op": "DUP7"
    },
    "6246": {
      "op": "ADD"
    },
    "6247": {
      "op": "DUP2"
    },
    "6248": {
      "op": "SWAP1"
    },
    "6249": {
      "op": "MSTORE"
    },
    "6250": {
      "op": "SWAP1"
    },
    "6251": {
      "op": "PUSH2",
      "value": "0x1876"
    },
    "6254": {
      "op": "DUP3"
    },
    "6255": {
      "op": "DUP8"
    },
    "6256": {
      "op": "ADD"
    },
    "6257": {
      "op": "DUP3"
    },
    "6258": {
      "op": "PUSH2",
      "value": "0x1632"
    },
    "6261": {
      "jump": "i",
      "op": "JUMP"
    },
    "6262": {
      "op": "JUMPDEST"
    },
    "6263": {
      "op": "SWAP3"
    },
    "6264": {
      "op": "DUP10"
    },
    "6265": {
      "op": "ADD"
    },
    "6266": {
      "op": "MLOAD"
    },
    "6267": {
      "op": "ISZERO"
    },
    "6268": {
      "op": "ISZERO"
    },
    "6269": {
      "op": "SWAP6"
    },
    "6270": {
      "op": "DUP10"
    },
    "6271": {
      "op": "ADD"
    },
    "6272": {
      "op": "SWAP6"
    },
    "6273": {
      "op": "SWAP1"
    },
    "6274": {
      "op": "SWAP6"
    },
    "6275": {
      "op": "MSTORE"
    },
    "6276": {
      "op": "POP"
    },
    "6277": {
      "op": "SWAP5"
    },
    "6278": {
      "op": "DUP8"
    },
    "6279": {
      "op": "ADD"
    },
    "6280": {
      "op": "SWAP5"
    },
    "6281": {
      "op": "SWAP3"
    },
    "6282": {
      "op": "POP"
    },
    "6283": {
      "op": "SWAP1"
    },
    "6284": {
      "op": "DUP7"
    },
    "6285": {
      "op": "ADD"
    },
    "6286": {
      "op": "SWAP1"
    },
    "6287": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6289": {
      "op": "ADD"
    },
    "6290": {
      "op": "PUSH2",
      "value": "0x183D"
    },
    "6293": {
      "op": "JUMP"
    },
    "6294": {
      "op": "JUMPDEST"
    },
    "6295": {
      "op": "POP"
    },
    "6296": {
      "op": "SWAP1"
    },
    "6297": {
      "op": "SWAP9"
    },
    "6298": {
      "op": "SWAP8"
    },
    "6299": {
      "op": "POP"
    },
    "6300": {
      "op": "POP"
    },
    "6301": {
      "op": "POP"
    },
    "6302": {
      "op": "POP"
    },
    "6303": {
      "op": "POP"
    },
    "6304": {
      "op": "POP"
    },
    "6305": {
      "op": "POP"
    },
    "6306": {
      "op": "POP"
    },
    "6307": {
      "jump": "o",
      "op": "JUMP"
    },
    "6308": {
      "op": "JUMPDEST"
    },
    "6309": {
      "op": "DUP3"
    },
    "6310": {
      "op": "ISZERO"
    },
    "6311": {
      "op": "ISZERO"
    },
    "6312": {
      "op": "DUP2"
    },
    "6313": {
      "op": "MSTORE"
    },
    "6314": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6316": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6318": {
      "op": "DUP3"
    },
    "6319": {
      "op": "ADD"
    },
    "6320": {
      "op": "MSTORE"
    },
    "6321": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6323": {
      "op": "PUSH2",
      "value": "0x18BF"
    },
    "6326": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6328": {
      "op": "DUP4"
    },
    "6329": {
      "op": "ADD"
    },
    "6330": {
      "op": "DUP5"
    },
    "6331": {
      "op": "PUSH2",
      "value": "0x1632"
    },
    "6334": {
      "jump": "i",
      "op": "JUMP"
    },
    "6335": {
      "op": "JUMPDEST"
    },
    "6336": {
      "op": "SWAP5"
    },
    "6337": {
      "op": "SWAP4"
    },
    "6338": {
      "op": "POP"
    },
    "6339": {
      "op": "POP"
    },
    "6340": {
      "op": "POP"
    },
    "6341": {
      "op": "POP"
    },
    "6342": {
      "jump": "o",
      "op": "JUMP"
    },
    "6343": {
      "op": "JUMPDEST"
    },
    "6344": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6346": {
      "op": "DUP1"
    },
    "6347": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6349": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6351": {
      "op": "DUP5"
    },
    "6352": {
      "op": "DUP7"
    },
    "6353": {
      "op": "SUB"
    },
    "6354": {
      "op": "SLT"
    },
    "6355": {
      "op": "ISZERO"
    },
    "6356": {
      "op": "PUSH2",
      "value": "0x18DC"
    },
    "6359": {
      "op": "JUMPI"
    },
    "6360": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6362": {
      "op": "DUP1"
    },
    "6363": {
      "op": "REVERT"
    },
    "6364": {
      "op": "JUMPDEST"
    },
    "6365": {
      "op": "DUP4"
    },
    "6366": {
      "op": "CALLDATALOAD"
    },
    "6367": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6369": {
      "op": "DUP2"
    },
    "6370": {
      "op": "AND"
    },
    "6371": {
      "op": "DUP2"
    },
    "6372": {
      "op": "EQ"
    },
    "6373": {
      "op": "PUSH2",
      "value": "0x18ED"
    },
    "6376": {
      "op": "JUMPI"
    },
    "6377": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6379": {
      "op": "DUP1"
    },
    "6380": {
      "op": "REVERT"
    },
    "6381": {
      "op": "JUMPDEST"
    },
    "6382": {
      "op": "SWAP3"
    },
    "6383": {
      "op": "POP"
    },
    "6384": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6386": {
      "op": "DUP5"
    },
    "6387": {
      "op": "ADD"
    },
    "6388": {
      "op": "CALLDATALOAD"
    },
    "6389": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6398": {
      "op": "DUP2"
    },
    "6399": {
      "op": "GT"
    },
    "6400": {
      "op": "ISZERO"
    },
    "6401": {
      "op": "PUSH2",
      "value": "0x1909"
    },
    "6404": {
      "op": "JUMPI"
    },
    "6405": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6407": {
      "op": "DUP1"
    },
    "6408": {
      "op": "REVERT"
    },
    "6409": {
      "op": "JUMPDEST"
    },
    "6410": {
      "op": "PUSH2",
      "value": "0x1915"
    },
    "6413": {
      "op": "DUP7"
    },
    "6414": {
      "op": "DUP3"
    },
    "6415": {
      "op": "DUP8"
    },
    "6416": {
      "op": "ADD"
    },
    "6417": {
      "op": "PUSH2",
      "value": "0x148D"
    },
    "6420": {
      "jump": "i",
      "op": "JUMP"
    },
    "6421": {
      "op": "JUMPDEST"
    },
    "6422": {
      "op": "SWAP3"
    },
    "6423": {
      "op": "POP"
    },
    "6424": {
      "op": "POP"
    },
    "6425": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6427": {
      "op": "DUP5"
    },
    "6428": {
      "op": "ADD"
    },
    "6429": {
      "op": "CALLDATALOAD"
    },
    "6430": {
      "op": "SWAP1"
    },
    "6431": {
      "op": "POP"
    },
    "6432": {
      "op": "SWAP3"
    },
    "6433": {
      "op": "POP"
    },
    "6434": {
      "op": "SWAP3"
    },
    "6435": {
      "op": "POP"
    },
    "6436": {
      "op": "SWAP3"
    },
    "6437": {
      "jump": "o",
      "op": "JUMP"
    },
    "6438": {
      "op": "JUMPDEST"
    },
    "6439": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6441": {
      "op": "DUP1"
    },
    "6442": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6444": {
      "op": "DUP4"
    },
    "6445": {
      "op": "DUP6"
    },
    "6446": {
      "op": "SUB"
    },
    "6447": {
      "op": "SLT"
    },
    "6448": {
      "op": "ISZERO"
    },
    "6449": {
      "op": "PUSH2",
      "value": "0x1939"
    },
    "6452": {
      "op": "JUMPI"
    },
    "6453": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6455": {
      "op": "DUP1"
    },
    "6456": {
      "op": "REVERT"
    },
    "6457": {
      "op": "JUMPDEST"
    },
    "6458": {
      "op": "PUSH2",
      "value": "0x1942"
    },
    "6461": {
      "op": "DUP4"
    },
    "6462": {
      "op": "PUSH2",
      "value": "0x171F"
    },
    "6465": {
      "jump": "i",
      "op": "JUMP"
    },
    "6466": {
      "op": "JUMPDEST"
    },
    "6467": {
      "op": "SWAP2"
    },
    "6468": {
      "op": "POP"
    },
    "6469": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6471": {
      "op": "DUP4"
    },
    "6472": {
      "op": "ADD"
    },
    "6473": {
      "op": "CALLDATALOAD"
    },
    "6474": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6483": {
      "op": "DUP2"
    },
    "6484": {
      "op": "GT"
    },
    "6485": {
      "op": "ISZERO"
    },
    "6486": {
      "op": "PUSH2",
      "value": "0x195E"
    },
    "6489": {
      "op": "JUMPI"
    },
    "6490": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6492": {
      "op": "DUP1"
    },
    "6493": {
      "op": "REVERT"
    },
    "6494": {
      "op": "JUMPDEST"
    },
    "6495": {
      "op": "PUSH2",
      "value": "0x196A"
    },
    "6498": {
      "op": "DUP6"
    },
    "6499": {
      "op": "DUP3"
    },
    "6500": {
      "op": "DUP7"
    },
    "6501": {
      "op": "ADD"
    },
    "6502": {
      "op": "PUSH2",
      "value": "0x148D"
    },
    "6505": {
      "jump": "i",
      "op": "JUMP"
    },
    "6506": {
      "op": "JUMPDEST"
    },
    "6507": {
      "op": "SWAP2"
    },
    "6508": {
      "op": "POP"
    },
    "6509": {
      "op": "POP"
    },
    "6510": {
      "op": "SWAP3"
    },
    "6511": {
      "op": "POP"
    },
    "6512": {
      "op": "SWAP3"
    },
    "6513": {
      "op": "SWAP1"
    },
    "6514": {
      "op": "POP"
    },
    "6515": {
      "jump": "o",
      "op": "JUMP"
    },
    "6516": {
      "op": "JUMPDEST"
    },
    "6517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6521": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6523": {
      "op": "SHL"
    },
    "6524": {
      "op": "SUB"
    },
    "6525": {
      "op": "DUP5"
    },
    "6526": {
      "op": "AND"
    },
    "6527": {
      "op": "DUP2"
    },
    "6528": {
      "op": "MSTORE"
    },
    "6529": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6531": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6533": {
      "op": "DUP3"
    },
    "6534": {
      "op": "ADD"
    },
    "6535": {
      "op": "DUP2"
    },
    "6536": {
      "op": "SWAP1"
    },
    "6537": {
      "op": "MSTORE"
    },
    "6538": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6540": {
      "op": "SWAP1"
    },
    "6541": {
      "op": "PUSH2",
      "value": "0x1998"
    },
    "6544": {
      "op": "SWAP1"
    },
    "6545": {
      "op": "DUP4"
    },
    "6546": {
      "op": "ADD"
    },
    "6547": {
      "op": "DUP6"
    },
    "6548": {
      "op": "PUSH2",
      "value": "0x1632"
    },
    "6551": {
      "jump": "i",
      "op": "JUMP"
    },
    "6552": {
      "op": "JUMPDEST"
    },
    "6553": {
      "op": "SWAP1"
    },
    "6554": {
      "op": "POP"
    },
    "6555": {
      "op": "DUP3"
    },
    "6556": {
      "op": "ISZERO"
    },
    "6557": {
      "op": "ISZERO"
    },
    "6558": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6560": {
      "op": "DUP4"
    },
    "6561": {
      "op": "ADD"
    },
    "6562": {
      "op": "MSTORE"
    },
    "6563": {
      "op": "SWAP5"
    },
    "6564": {
      "op": "SWAP4"
    },
    "6565": {
      "op": "POP"
    },
    "6566": {
      "op": "POP"
    },
    "6567": {
      "op": "POP"
    },
    "6568": {
      "op": "POP"
    },
    "6569": {
      "jump": "o",
      "op": "JUMP"
    },
    "6570": {
      "op": "JUMPDEST"
    },
    "6571": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6573": {
      "op": "DUP1"
    },
    "6574": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6576": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6578": {
      "op": "DUP5"
    },
    "6579": {
      "op": "DUP7"
    },
    "6580": {
      "op": "SUB"
    },
    "6581": {
      "op": "SLT"
    },
    "6582": {
      "op": "ISZERO"
    },
    "6583": {
      "op": "PUSH2",
      "value": "0x19BF"
    },
    "6586": {
      "op": "JUMPI"
    },
    "6587": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6589": {
      "op": "DUP1"
    },
    "6590": {
      "op": "REVERT"
    },
    "6591": {
      "op": "JUMPDEST"
    },
    "6592": {
      "op": "DUP4"
    },
    "6593": {
      "op": "CALLDATALOAD"
    },
    "6594": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6603": {
      "op": "DUP1"
    },
    "6604": {
      "op": "DUP3"
    },
    "6605": {
      "op": "GT"
    },
    "6606": {
      "op": "ISZERO"
    },
    "6607": {
      "op": "PUSH2",
      "value": "0x19D7"
    },
    "6610": {
      "op": "JUMPI"
    },
    "6611": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6613": {
      "op": "DUP1"
    },
    "6614": {
      "op": "REVERT"
    },
    "6615": {
      "op": "JUMPDEST"
    },
    "6616": {
      "op": "PUSH2",
      "value": "0x19E3"
    },
    "6619": {
      "op": "DUP8"
    },
    "6620": {
      "op": "DUP4"
    },
    "6621": {
      "op": "DUP9"
    },
    "6622": {
      "op": "ADD"
    },
    "6623": {
      "op": "PUSH2",
      "value": "0x148D"
    },
    "6626": {
      "jump": "i",
      "op": "JUMP"
    },
    "6627": {
      "op": "JUMPDEST"
    },
    "6628": {
      "op": "SWAP5"
    },
    "6629": {
      "op": "POP"
    },
    "6630": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6632": {
      "op": "DUP7"
    },
    "6633": {
      "op": "ADD"
    },
    "6634": {
      "op": "CALLDATALOAD"
    },
    "6635": {
      "op": "SWAP2"
    },
    "6636": {
      "op": "POP"
    },
    "6637": {
      "op": "DUP1"
    },
    "6638": {
      "op": "DUP3"
    },
    "6639": {
      "op": "GT"
    },
    "6640": {
      "op": "ISZERO"
    },
    "6641": {
      "op": "PUSH2",
      "value": "0x19F9"
    },
    "6644": {
      "op": "JUMPI"
    },
    "6645": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6647": {
      "op": "DUP1"
    },
    "6648": {
      "op": "REVERT"
    },
    "6649": {
      "op": "JUMPDEST"
    },
    "6650": {
      "op": "PUSH2",
      "value": "0x1A05"
    },
    "6653": {
      "op": "DUP8"
    },
    "6654": {
      "op": "DUP4"
    },
    "6655": {
      "op": "DUP9"
    },
    "6656": {
      "op": "ADD"
    },
    "6657": {
      "op": "PUSH2",
      "value": "0x148D"
    },
    "6660": {
      "jump": "i",
      "op": "JUMP"
    },
    "6661": {
      "op": "JUMPDEST"
    },
    "6662": {
      "op": "SWAP4"
    },
    "6663": {
      "op": "POP"
    },
    "6664": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6666": {
      "op": "DUP7"
    },
    "6667": {
      "op": "ADD"
    },
    "6668": {
      "op": "CALLDATALOAD"
    },
    "6669": {
      "op": "SWAP2"
    },
    "6670": {
      "op": "POP"
    },
    "6671": {
      "op": "DUP1"
    },
    "6672": {
      "op": "DUP3"
    },
    "6673": {
      "op": "GT"
    },
    "6674": {
      "op": "ISZERO"
    },
    "6675": {
      "op": "PUSH2",
      "value": "0x1A1B"
    },
    "6678": {
      "op": "JUMPI"
    },
    "6679": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6681": {
      "op": "DUP1"
    },
    "6682": {
      "op": "REVERT"
    },
    "6683": {
      "op": "JUMPDEST"
    },
    "6684": {
      "op": "POP"
    },
    "6685": {
      "op": "PUSH2",
      "value": "0x1A28"
    },
    "6688": {
      "op": "DUP7"
    },
    "6689": {
      "op": "DUP3"
    },
    "6690": {
      "op": "DUP8"
    },
    "6691": {
      "op": "ADD"
    },
    "6692": {
      "op": "PUSH2",
      "value": "0x148D"
    },
    "6695": {
      "jump": "i",
      "op": "JUMP"
    },
    "6696": {
      "op": "JUMPDEST"
    },
    "6697": {
      "op": "SWAP2"
    },
    "6698": {
      "op": "POP"
    },
    "6699": {
      "op": "POP"
    },
    "6700": {
      "op": "SWAP3"
    },
    "6701": {
      "op": "POP"
    },
    "6702": {
      "op": "SWAP3"
    },
    "6703": {
      "op": "POP"
    },
    "6704": {
      "op": "SWAP3"
    },
    "6705": {
      "jump": "o",
      "op": "JUMP"
    },
    "6706": {
      "op": "JUMPDEST"
    },
    "6707": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6712": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6714": {
      "op": "SHL"
    },
    "6715": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6717": {
      "op": "MSTORE"
    },
    "6718": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "6720": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6722": {
      "op": "MSTORE"
    },
    "6723": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6725": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6727": {
      "op": "REVERT"
    },
    "6728": {
      "op": "JUMPDEST"
    },
    "6729": {
      "op": "PUSH1",
      "value": "0x9"
    },
    "6731": {
      "op": "DUP2"
    },
    "6732": {
      "op": "LT"
    },
    "6733": {
      "op": "PUSH2",
      "value": "0x1A66"
    },
    "6736": {
      "op": "JUMPI"
    },
    "6737": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6742": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6744": {
      "op": "SHL"
    },
    "6745": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6747": {
      "op": "MSTORE"
    },
    "6748": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "6750": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6752": {
      "op": "MSTORE"
    },
    "6753": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6755": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6757": {
      "op": "REVERT"
    },
    "6758": {
      "op": "JUMPDEST"
    },
    "6759": {
      "op": "SWAP1"
    },
    "6760": {
      "op": "MSTORE"
    },
    "6761": {
      "jump": "o",
      "op": "JUMP"
    },
    "6762": {
      "op": "JUMPDEST"
    },
    "6763": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6765": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6767": {
      "op": "DUP1"
    },
    "6768": {
      "op": "DUP4"
    },
    "6769": {
      "op": "ADD"
    },
    "6770": {
      "op": "DUP2"
    },
    "6771": {
      "op": "DUP5"
    },
    "6772": {
      "op": "MSTORE"
    },
    "6773": {
      "op": "DUP1"
    },
    "6774": {
      "op": "DUP6"
    },
    "6775": {
      "op": "MLOAD"
    },
    "6776": {
      "op": "DUP1"
    },
    "6777": {
      "op": "DUP4"
    },
    "6778": {
      "op": "MSTORE"
    },
    "6779": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6781": {
      "op": "SWAP3"
    },
    "6782": {
      "op": "POP"
    },
    "6783": {
      "op": "DUP3"
    },
    "6784": {
      "op": "DUP7"
    },
    "6785": {
      "op": "ADD"
    },
    "6786": {
      "op": "SWAP2"
    },
    "6787": {
      "op": "POP"
    },
    "6788": {
      "op": "DUP3"
    },
    "6789": {
      "op": "DUP2"
    },
    "6790": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "6792": {
      "op": "SHL"
    },
    "6793": {
      "op": "DUP8"
    },
    "6794": {
      "op": "ADD"
    },
    "6795": {
      "op": "ADD"
    },
    "6796": {
      "op": "DUP5"
    },
    "6797": {
      "op": "DUP9"
    },
    "6798": {
      "op": "ADD"
    },
    "6799": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6801": {
      "op": "JUMPDEST"
    },
    "6802": {
      "op": "DUP4"
    },
    "6803": {
      "op": "DUP2"
    },
    "6804": {
      "op": "LT"
    },
    "6805": {
      "op": "ISZERO"
    },
    "6806": {
      "op": "PUSH2",
      "value": "0x1896"
    },
    "6809": {
      "op": "JUMPI"
    },
    "6810": {
      "op": "DUP9"
    },
    "6811": {
      "op": "DUP4"
    },
    "6812": {
      "op": "SUB"
    },
    "6813": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "6815": {
      "op": "NOT"
    },
    "6816": {
      "op": "ADD"
    },
    "6817": {
      "op": "DUP6"
    },
    "6818": {
      "op": "MSTORE"
    },
    "6819": {
      "op": "DUP2"
    },
    "6820": {
      "op": "MLOAD"
    },
    "6821": {
      "op": "DUP1"
    },
    "6822": {
      "op": "MLOAD"
    },
    "6823": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6825": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6827": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6829": {
      "op": "SHL"
    },
    "6830": {
      "op": "SUB"
    },
    "6831": {
      "op": "AND"
    },
    "6832": {
      "op": "DUP5"
    },
    "6833": {
      "op": "MSTORE"
    },
    "6834": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "6837": {
      "op": "DUP9"
    },
    "6838": {
      "op": "DUP3"
    },
    "6839": {
      "op": "ADD"
    },
    "6840": {
      "op": "MLOAD"
    },
    "6841": {
      "op": "PUSH2",
      "value": "0x1AC4"
    },
    "6844": {
      "op": "DUP11"
    },
    "6845": {
      "op": "DUP8"
    },
    "6846": {
      "op": "ADD"
    },
    "6847": {
      "op": "DUP3"
    },
    "6848": {
      "op": "PUSH2",
      "value": "0x1A48"
    },
    "6851": {
      "jump": "i",
      "op": "JUMP"
    },
    "6852": {
      "op": "JUMPDEST"
    },
    "6853": {
      "op": "POP"
    },
    "6854": {
      "op": "DUP8"
    },
    "6855": {
      "op": "DUP3"
    },
    "6856": {
      "op": "ADD"
    },
    "6857": {
      "op": "MLOAD"
    },
    "6858": {
      "op": "DUP2"
    },
    "6859": {
      "op": "DUP10"
    },
    "6860": {
      "op": "DUP8"
    },
    "6861": {
      "op": "ADD"
    },
    "6862": {
      "op": "MSTORE"
    },
    "6863": {
      "op": "PUSH2",
      "value": "0x1ADA"
    },
    "6866": {
      "op": "DUP3"
    },
    "6867": {
      "op": "DUP8"
    },
    "6868": {
      "op": "ADD"
    },
    "6869": {
      "op": "DUP3"
    },
    "6870": {
      "op": "PUSH2",
      "value": "0x1632"
    },
    "6873": {
      "jump": "i",
      "op": "JUMP"
    },
    "6874": {
      "op": "JUMPDEST"
    },
    "6875": {
      "op": "SWAP2"
    },
    "6876": {
      "op": "POP"
    },
    "6877": {
      "op": "POP"
    },
    "6878": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6880": {
      "op": "DUP1"
    },
    "6881": {
      "op": "DUP4"
    },
    "6882": {
      "op": "ADD"
    },
    "6883": {
      "op": "MLOAD"
    },
    "6884": {
      "op": "DUP2"
    },
    "6885": {
      "op": "DUP8"
    },
    "6886": {
      "op": "ADD"
    },
    "6887": {
      "op": "MSTORE"
    },
    "6888": {
      "op": "POP"
    },
    "6889": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6891": {
      "op": "DUP1"
    },
    "6892": {
      "op": "DUP4"
    },
    "6893": {
      "op": "ADD"
    },
    "6894": {
      "op": "MLOAD"
    },
    "6895": {
      "op": "PUSH2",
      "value": "0x1AFC"
    },
    "6898": {
      "op": "DUP3"
    },
    "6899": {
      "op": "DUP9"
    },
    "6900": {
      "op": "ADD"
    },
    "6901": {
      "op": "DUP3"
    },
    "6902": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6904": {
      "op": "AND"
    },
    "6905": {
      "op": "SWAP1"
    },
    "6906": {
      "op": "MSTORE"
    },
    "6907": {
      "op": "JUMP"
    },
    "6908": {
      "op": "JUMPDEST"
    },
    "6909": {
      "op": "POP"
    },
    "6910": {
      "op": "POP"
    },
    "6911": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6913": {
      "op": "DUP3"
    },
    "6914": {
      "op": "DUP2"
    },
    "6915": {
      "op": "ADD"
    },
    "6916": {
      "op": "MLOAD"
    },
    "6917": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6919": {
      "op": "AND"
    },
    "6920": {
      "op": "SWAP1"
    },
    "6921": {
      "op": "DUP7"
    },
    "6922": {
      "op": "ADD"
    },
    "6923": {
      "op": "MSTORE"
    },
    "6924": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "6926": {
      "op": "DUP1"
    },
    "6927": {
      "op": "DUP4"
    },
    "6928": {
      "op": "ADD"
    },
    "6929": {
      "op": "MLOAD"
    },
    "6930": {
      "op": "ISZERO"
    },
    "6931": {
      "op": "ISZERO"
    },
    "6932": {
      "op": "SWAP1"
    },
    "6933": {
      "op": "DUP7"
    },
    "6934": {
      "op": "ADD"
    },
    "6935": {
      "op": "MSTORE"
    },
    "6936": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6938": {
      "op": "DUP1"
    },
    "6939": {
      "op": "DUP4"
    },
    "6940": {
      "op": "ADD"
    },
    "6941": {
      "op": "MLOAD"
    },
    "6942": {
      "op": "ISZERO"
    },
    "6943": {
      "op": "ISZERO"
    },
    "6944": {
      "op": "SWAP1"
    },
    "6945": {
      "op": "DUP7"
    },
    "6946": {
      "op": "ADD"
    },
    "6947": {
      "op": "MSTORE"
    },
    "6948": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "6951": {
      "op": "SWAP2"
    },
    "6952": {
      "op": "DUP3"
    },
    "6953": {
      "op": "ADD"
    },
    "6954": {
      "op": "MLOAD"
    },
    "6955": {
      "op": "SWAP2"
    },
    "6956": {
      "op": "SWAP1"
    },
    "6957": {
      "op": "SWAP5"
    },
    "6958": {
      "op": "ADD"
    },
    "6959": {
      "op": "MSTORE"
    },
    "6960": {
      "op": "SWAP4"
    },
    "6961": {
      "op": "DUP7"
    },
    "6962": {
      "op": "ADD"
    },
    "6963": {
      "op": "SWAP4"
    },
    "6964": {
      "op": "SWAP1"
    },
    "6965": {
      "op": "DUP7"
    },
    "6966": {
      "op": "ADD"
    },
    "6967": {
      "op": "SWAP1"
    },
    "6968": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6970": {
      "op": "ADD"
    },
    "6971": {
      "op": "PUSH2",
      "value": "0x1A91"
    },
    "6974": {
      "op": "JUMP"
    },
    "6975": {
      "op": "JUMPDEST"
    },
    "6976": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6978": {
      "op": "DUP1"
    },
    "6979": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6981": {
      "op": "DUP1"
    },
    "6982": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6984": {
      "op": "DUP6"
    },
    "6985": {
      "op": "DUP8"
    },
    "6986": {
      "op": "SUB"
    },
    "6987": {
      "op": "SLT"
    },
    "6988": {
      "op": "ISZERO"
    },
    "6989": {
      "op": "PUSH2",
      "value": "0x1B55"
    },
    "6992": {
      "op": "JUMPI"
    },
    "6993": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6995": {
      "op": "DUP1"
    },
    "6996": {
      "op": "REVERT"
    },
    "6997": {
      "op": "JUMPDEST"
    },
    "6998": {
      "op": "DUP5"
    },
    "6999": {
      "op": "CALLDATALOAD"
    },
    "7000": {
      "op": "SWAP4"
    },
    "7001": {
      "op": "POP"
    },
    "7002": {
      "op": "PUSH2",
      "value": "0x1B65"
    },
    "7005": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7007": {
      "op": "DUP7"
    },
    "7008": {
      "op": "ADD"
    },
    "7009": {
      "op": "PUSH2",
      "value": "0x171F"
    },
    "7012": {
      "jump": "i",
      "op": "JUMP"
    },
    "7013": {
      "op": "JUMPDEST"
    },
    "7014": {
      "op": "SWAP3"
    },
    "7015": {
      "op": "POP"
    },
    "7016": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7018": {
      "op": "DUP6"
    },
    "7019": {
      "op": "ADD"
    },
    "7020": {
      "op": "CALLDATALOAD"
    },
    "7021": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7030": {
      "op": "DUP1"
    },
    "7031": {
      "op": "DUP3"
    },
    "7032": {
      "op": "GT"
    },
    "7033": {
      "op": "ISZERO"
    },
    "7034": {
      "op": "PUSH2",
      "value": "0x1B82"
    },
    "7037": {
      "op": "JUMPI"
    },
    "7038": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7040": {
      "op": "DUP1"
    },
    "7041": {
      "op": "REVERT"
    },
    "7042": {
      "op": "JUMPDEST"
    },
    "7043": {
      "op": "PUSH2",
      "value": "0x1B8E"
    },
    "7046": {
      "op": "DUP9"
    },
    "7047": {
      "op": "DUP4"
    },
    "7048": {
      "op": "DUP10"
    },
    "7049": {
      "op": "ADD"
    },
    "7050": {
      "op": "PUSH2",
      "value": "0x148D"
    },
    "7053": {
      "jump": "i",
      "op": "JUMP"
    },
    "7054": {
      "op": "JUMPDEST"
    },
    "7055": {
      "op": "SWAP4"
    },
    "7056": {
      "op": "POP"
    },
    "7057": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7059": {
      "op": "DUP8"
    },
    "7060": {
      "op": "ADD"
    },
    "7061": {
      "op": "CALLDATALOAD"
    },
    "7062": {
      "op": "SWAP2"
    },
    "7063": {
      "op": "POP"
    },
    "7064": {
      "op": "DUP1"
    },
    "7065": {
      "op": "DUP3"
    },
    "7066": {
      "op": "GT"
    },
    "7067": {
      "op": "ISZERO"
    },
    "7068": {
      "op": "PUSH2",
      "value": "0x1706"
    },
    "7071": {
      "op": "JUMPI"
    },
    "7072": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7074": {
      "op": "DUP1"
    },
    "7075": {
      "op": "REVERT"
    },
    "7076": {
      "op": "JUMPDEST"
    },
    "7077": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7079": {
      "op": "DUP1"
    },
    "7080": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7082": {
      "op": "DUP4"
    },
    "7083": {
      "op": "DUP6"
    },
    "7084": {
      "op": "SUB"
    },
    "7085": {
      "op": "SLT"
    },
    "7086": {
      "op": "ISZERO"
    },
    "7087": {
      "op": "PUSH2",
      "value": "0x1BB7"
    },
    "7090": {
      "op": "JUMPI"
    },
    "7091": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7093": {
      "op": "DUP1"
    },
    "7094": {
      "op": "REVERT"
    },
    "7095": {
      "op": "JUMPDEST"
    },
    "7096": {
      "op": "DUP3"
    },
    "7097": {
      "op": "CALLDATALOAD"
    },
    "7098": {
      "op": "SWAP2"
    },
    "7099": {
      "op": "POP"
    },
    "7100": {
      "op": "PUSH2",
      "value": "0x1BC7"
    },
    "7103": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7105": {
      "op": "DUP5"
    },
    "7106": {
      "op": "ADD"
    },
    "7107": {
      "op": "PUSH2",
      "value": "0x145B"
    },
    "7110": {
      "jump": "i",
      "op": "JUMP"
    },
    "7111": {
      "op": "JUMPDEST"
    },
    "7112": {
      "op": "SWAP1"
    },
    "7113": {
      "op": "POP"
    },
    "7114": {
      "op": "SWAP3"
    },
    "7115": {
      "op": "POP"
    },
    "7116": {
      "op": "SWAP3"
    },
    "7117": {
      "op": "SWAP1"
    },
    "7118": {
      "op": "POP"
    },
    "7119": {
      "jump": "o",
      "op": "JUMP"
    },
    "7120": {
      "op": "JUMPDEST"
    },
    "7121": {
      "op": "DUP4"
    },
    "7122": {
      "op": "ISZERO"
    },
    "7123": {
      "op": "ISZERO"
    },
    "7124": {
      "op": "DUP2"
    },
    "7125": {
      "op": "MSTORE"
    },
    "7126": {
      "op": "DUP3"
    },
    "7127": {
      "op": "ISZERO"
    },
    "7128": {
      "op": "ISZERO"
    },
    "7129": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7131": {
      "op": "DUP3"
    },
    "7132": {
      "op": "ADD"
    },
    "7133": {
      "op": "MSTORE"
    },
    "7134": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7136": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7138": {
      "op": "DUP3"
    },
    "7139": {
      "op": "ADD"
    },
    "7140": {
      "op": "MSTORE"
    },
    "7141": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7143": {
      "op": "PUSH2",
      "value": "0x1BF3"
    },
    "7146": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7148": {
      "op": "DUP4"
    },
    "7149": {
      "op": "ADD"
    },
    "7150": {
      "op": "DUP5"
    },
    "7151": {
      "op": "PUSH2",
      "value": "0x1632"
    },
    "7154": {
      "jump": "i",
      "op": "JUMP"
    },
    "7155": {
      "op": "JUMPDEST"
    },
    "7156": {
      "op": "SWAP6"
    },
    "7157": {
      "op": "SWAP5"
    },
    "7158": {
      "op": "POP"
    },
    "7159": {
      "op": "POP"
    },
    "7160": {
      "op": "POP"
    },
    "7161": {
      "op": "POP"
    },
    "7162": {
      "op": "POP"
    },
    "7163": {
      "jump": "o",
      "op": "JUMP"
    },
    "7164": {
      "op": "JUMPDEST"
    },
    "7165": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7167": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7169": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7171": {
      "op": "SHL"
    },
    "7172": {
      "op": "SUB"
    },
    "7173": {
      "op": "DUP11"
    },
    "7174": {
      "op": "AND"
    },
    "7175": {
      "op": "DUP2"
    },
    "7176": {
      "op": "MSTORE"
    },
    "7177": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7179": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "7182": {
      "op": "PUSH2",
      "value": "0x1C1A"
    },
    "7185": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7187": {
      "op": "DUP5"
    },
    "7188": {
      "op": "ADD"
    },
    "7189": {
      "op": "DUP13"
    },
    "7190": {
      "op": "PUSH2",
      "value": "0x1A48"
    },
    "7193": {
      "jump": "i",
      "op": "JUMP"
    },
    "7194": {
      "op": "JUMPDEST"
    },
    "7195": {
      "op": "DUP1"
    },
    "7196": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7198": {
      "op": "DUP5"
    },
    "7199": {
      "op": "ADD"
    },
    "7200": {
      "op": "MSTORE"
    },
    "7201": {
      "op": "PUSH2",
      "value": "0x1C2C"
    },
    "7204": {
      "op": "DUP2"
    },
    "7205": {
      "op": "DUP5"
    },
    "7206": {
      "op": "ADD"
    },
    "7207": {
      "op": "DUP12"
    },
    "7208": {
      "op": "PUSH2",
      "value": "0x1632"
    },
    "7211": {
      "jump": "i",
      "op": "JUMP"
    },
    "7212": {
      "op": "JUMPDEST"
    },
    "7213": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7215": {
      "op": "DUP5"
    },
    "7216": {
      "op": "ADD"
    },
    "7217": {
      "op": "SWAP10"
    },
    "7218": {
      "op": "SWAP1"
    },
    "7219": {
      "op": "SWAP10"
    },
    "7220": {
      "op": "MSTORE"
    },
    "7221": {
      "op": "POP"
    },
    "7222": {
      "op": "POP"
    },
    "7223": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7225": {
      "op": "SWAP6"
    },
    "7226": {
      "op": "DUP7"
    },
    "7227": {
      "op": "AND"
    },
    "7228": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7230": {
      "op": "DUP3"
    },
    "7231": {
      "op": "ADD"
    },
    "7232": {
      "op": "MSTORE"
    },
    "7233": {
      "op": "SWAP4"
    },
    "7234": {
      "op": "SWAP1"
    },
    "7235": {
      "op": "SWAP5"
    },
    "7236": {
      "op": "AND"
    },
    "7237": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7239": {
      "op": "DUP5"
    },
    "7240": {
      "op": "ADD"
    },
    "7241": {
      "op": "MSTORE"
    },
    "7242": {
      "op": "SWAP1"
    },
    "7243": {
      "op": "ISZERO"
    },
    "7244": {
      "op": "ISZERO"
    },
    "7245": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "7247": {
      "op": "DUP4"
    },
    "7248": {
      "op": "ADD"
    },
    "7249": {
      "op": "MSTORE"
    },
    "7250": {
      "op": "ISZERO"
    },
    "7251": {
      "op": "ISZERO"
    },
    "7252": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7254": {
      "op": "DUP3"
    },
    "7255": {
      "op": "ADD"
    },
    "7256": {
      "op": "MSTORE"
    },
    "7257": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "7260": {
      "op": "ADD"
    },
    "7261": {
      "op": "MSTORE"
    },
    "7262": {
      "op": "SWAP4"
    },
    "7263": {
      "op": "SWAP3"
    },
    "7264": {
      "op": "POP"
    },
    "7265": {
      "op": "POP"
    },
    "7266": {
      "op": "POP"
    },
    "7267": {
      "jump": "o",
      "op": "JUMP"
    },
    "7268": {
      "op": "JUMPDEST"
    },
    "7269": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7271": {
      "op": "DUP1"
    },
    "7272": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7274": {
      "op": "DUP1"
    },
    "7275": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7277": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7279": {
      "op": "DUP7"
    },
    "7280": {
      "op": "DUP9"
    },
    "7281": {
      "op": "SUB"
    },
    "7282": {
      "op": "SLT"
    },
    "7283": {
      "op": "ISZERO"
    },
    "7284": {
      "op": "PUSH2",
      "value": "0x1C7C"
    },
    "7287": {
      "op": "JUMPI"
    },
    "7288": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7290": {
      "op": "DUP1"
    },
    "7291": {
      "op": "REVERT"
    },
    "7292": {
      "op": "JUMPDEST"
    },
    "7293": {
      "op": "PUSH2",
      "value": "0x1C85"
    },
    "7296": {
      "op": "DUP7"
    },
    "7297": {
      "op": "PUSH2",
      "value": "0x145B"
    },
    "7300": {
      "jump": "i",
      "op": "JUMP"
    },
    "7301": {
      "op": "JUMPDEST"
    },
    "7302": {
      "op": "SWAP5"
    },
    "7303": {
      "op": "POP"
    },
    "7304": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7306": {
      "op": "DUP7"
    },
    "7307": {
      "op": "ADD"
    },
    "7308": {
      "op": "CALLDATALOAD"
    },
    "7309": {
      "op": "SWAP4"
    },
    "7310": {
      "op": "POP"
    },
    "7311": {
      "op": "PUSH2",
      "value": "0x1C9A"
    },
    "7314": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7316": {
      "op": "DUP8"
    },
    "7317": {
      "op": "ADD"
    },
    "7318": {
      "op": "PUSH2",
      "value": "0x145B"
    },
    "7321": {
      "jump": "i",
      "op": "JUMP"
    },
    "7322": {
      "op": "JUMPDEST"
    },
    "7323": {
      "op": "SWAP3"
    },
    "7324": {
      "op": "POP"
    },
    "7325": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7327": {
      "op": "DUP7"
    },
    "7328": {
      "op": "ADD"
    },
    "7329": {
      "op": "CALLDATALOAD"
    },
    "7330": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7339": {
      "op": "DUP2"
    },
    "7340": {
      "op": "GT"
    },
    "7341": {
      "op": "ISZERO"
    },
    "7342": {
      "op": "PUSH2",
      "value": "0x15CB"
    },
    "7345": {
      "op": "JUMPI"
    },
    "7346": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7348": {
      "op": "DUP1"
    },
    "7349": {
      "op": "REVERT"
    },
    "7350": {
      "op": "JUMPDEST"
    },
    "7351": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7353": {
      "op": "DUP1"
    },
    "7354": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7356": {
      "op": "SHL"
    },
    "7357": {
      "op": "SUB"
    },
    "7358": {
      "op": "DUP6"
    },
    "7359": {
      "op": "AND"
    },
    "7360": {
      "op": "DUP2"
    },
    "7361": {
      "op": "MSTORE"
    },
    "7362": {
      "op": "DUP4"
    },
    "7363": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7365": {
      "op": "DUP3"
    },
    "7366": {
      "op": "ADD"
    },
    "7367": {
      "op": "MSTORE"
    },
    "7368": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7370": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7372": {
      "op": "DUP3"
    },
    "7373": {
      "op": "ADD"
    },
    "7374": {
      "op": "MSTORE"
    },
    "7375": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7377": {
      "op": "PUSH2",
      "value": "0x1CDD"
    },
    "7380": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7382": {
      "op": "DUP4"
    },
    "7383": {
      "op": "ADD"
    },
    "7384": {
      "op": "DUP6"
    },
    "7385": {
      "op": "PUSH2",
      "value": "0x1632"
    },
    "7388": {
      "jump": "i",
      "op": "JUMP"
    },
    "7389": {
      "op": "JUMPDEST"
    },
    "7390": {
      "op": "SWAP1"
    },
    "7391": {
      "op": "POP"
    },
    "7392": {
      "op": "DUP3"
    },
    "7393": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7395": {
      "op": "DUP4"
    },
    "7396": {
      "op": "ADD"
    },
    "7397": {
      "op": "MSTORE"
    },
    "7398": {
      "op": "SWAP6"
    },
    "7399": {
      "op": "SWAP5"
    },
    "7400": {
      "op": "POP"
    },
    "7401": {
      "op": "POP"
    },
    "7402": {
      "op": "POP"
    },
    "7403": {
      "op": "POP"
    },
    "7404": {
      "op": "POP"
    },
    "7405": {
      "jump": "o",
      "op": "JUMP"
    },
    "7406": {
      "op": "JUMPDEST"
    },
    "7407": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7409": {
      "op": "DUP3"
    },
    "7410": {
      "op": "MLOAD"
    },
    "7411": {
      "op": "PUSH2",
      "value": "0x1D00"
    },
    "7414": {
      "op": "DUP2"
    },
    "7415": {
      "op": "DUP5"
    },
    "7416": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7418": {
      "op": "DUP8"
    },
    "7419": {
      "op": "ADD"
    },
    "7420": {
      "op": "PUSH2",
      "value": "0x1602"
    },
    "7423": {
      "jump": "i",
      "op": "JUMP"
    },
    "7424": {
      "op": "JUMPDEST"
    },
    "7425": {
      "op": "SWAP2"
    },
    "7426": {
      "op": "SWAP1"
    },
    "7427": {
      "op": "SWAP2"
    },
    "7428": {
      "op": "ADD"
    },
    "7429": {
      "op": "SWAP3"
    },
    "7430": {
      "op": "SWAP2"
    },
    "7431": {
      "op": "POP"
    },
    "7432": {
      "op": "POP"
    },
    "7433": {
      "jump": "o",
      "op": "JUMP"
    },
    "7434": {
      "op": "JUMPDEST"
    },
    "7435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7439": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7441": {
      "op": "SHL"
    },
    "7442": {
      "op": "SUB"
    },
    "7443": {
      "op": "DUP7"
    },
    "7444": {
      "op": "DUP2"
    },
    "7445": {
      "op": "AND"
    },
    "7446": {
      "op": "DUP3"
    },
    "7447": {
      "op": "MSTORE"
    },
    "7448": {
      "op": "DUP6"
    },
    "7449": {
      "op": "AND"
    },
    "7450": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7452": {
      "op": "DUP3"
    },
    "7453": {
      "op": "ADD"
    },
    "7454": {
      "op": "MSTORE"
    },
    "7455": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7457": {
      "op": "DUP2"
    },
    "7458": {
      "op": "ADD"
    },
    "7459": {
      "op": "DUP5"
    },
    "7460": {
      "op": "SWAP1"
    },
    "7461": {
      "op": "MSTORE"
    },
    "7462": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7464": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7466": {
      "op": "DUP3"
    },
    "7467": {
      "op": "ADD"
    },
    "7468": {
      "op": "DUP2"
    },
    "7469": {
      "op": "SWAP1"
    },
    "7470": {
      "op": "MSTORE"
    },
    "7471": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7473": {
      "op": "SWAP1"
    },
    "7474": {
      "op": "PUSH2",
      "value": "0x1D3D"
    },
    "7477": {
      "op": "SWAP1"
    },
    "7478": {
      "op": "DUP4"
    },
    "7479": {
      "op": "ADD"
    },
    "7480": {
      "op": "DUP6"
    },
    "7481": {
      "op": "PUSH2",
      "value": "0x1632"
    },
    "7484": {
      "jump": "i",
      "op": "JUMP"
    },
    "7485": {
      "op": "JUMPDEST"
    },
    "7486": {
      "op": "SWAP1"
    },
    "7487": {
      "op": "POP"
    },
    "7488": {
      "op": "DUP3"
    },
    "7489": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7491": {
      "op": "DUP4"
    },
    "7492": {
      "op": "ADD"
    },
    "7493": {
      "op": "MSTORE"
    },
    "7494": {
      "op": "SWAP7"
    },
    "7495": {
      "op": "SWAP6"
    },
    "7496": {
      "op": "POP"
    },
    "7497": {
      "op": "POP"
    },
    "7498": {
      "op": "POP"
    },
    "7499": {
      "op": "POP"
    },
    "7500": {
      "op": "POP"
    },
    "7501": {
      "op": "POP"
    },
    "7502": {
      "jump": "o",
      "op": "JUMP"
    },
    "7503": {
      "op": "JUMPDEST"
    },
    "7504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7506": {
      "op": "DUP2"
    },
    "7507": {
      "op": "DUP2"
    },
    "7508": {
      "op": "SHR"
    },
    "7509": {
      "op": "SWAP1"
    },
    "7510": {
      "op": "DUP3"
    },
    "7511": {
      "op": "AND"
    },
    "7512": {
      "op": "DUP1"
    },
    "7513": {
      "op": "PUSH2",
      "value": "0x1D63"
    },
    "7516": {
      "op": "JUMPI"
    },
    "7517": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "7519": {
      "op": "DUP3"
    },
    "7520": {
      "op": "AND"
    },
    "7521": {
      "op": "SWAP2"
    },
    "7522": {
      "op": "POP"
    },
    "7523": {
      "op": "JUMPDEST"
    },
    "7524": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7526": {
      "op": "DUP3"
    },
    "7527": {
      "op": "LT"
    },
    "7528": {
      "op": "DUP2"
    },
    "7529": {
      "op": "EQ"
    },
    "7530": {
      "op": "ISZERO"
    },
    "7531": {
      "op": "PUSH2",
      "value": "0x1D84"
    },
    "7534": {
      "op": "JUMPI"
    },
    "7535": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7540": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7542": {
      "op": "SHL"
    },
    "7543": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7545": {
      "op": "MSTORE"
    },
    "7546": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "7548": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7550": {
      "op": "MSTORE"
    },
    "7551": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7553": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7555": {
      "op": "REVERT"
    },
    "7556": {
      "op": "JUMPDEST"
    },
    "7557": {
      "op": "POP"
    },
    "7558": {
      "op": "SWAP2"
    },
    "7559": {
      "op": "SWAP1"
    },
    "7560": {
      "op": "POP"
    },
    "7561": {
      "jump": "o",
      "op": "JUMP"
    },
    "7562": {
      "op": "JUMPDEST"
    },
    "7563": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7567": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7569": {
      "op": "SHL"
    },
    "7570": {
      "op": "SUB"
    },
    "7571": {
      "op": "DUP6"
    },
    "7572": {
      "op": "AND"
    },
    "7573": {
      "op": "DUP2"
    },
    "7574": {
      "op": "MSTORE"
    },
    "7575": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7577": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7579": {
      "op": "DUP3"
    },
    "7580": {
      "op": "ADD"
    },
    "7581": {
      "op": "DUP2"
    },
    "7582": {
      "op": "SWAP1"
    },
    "7583": {
      "op": "MSTORE"
    },
    "7584": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7586": {
      "op": "SWAP1"
    },
    "7587": {
      "op": "PUSH2",
      "value": "0x1DAE"
    },
    "7590": {
      "op": "SWAP1"
    },
    "7591": {
      "op": "DUP4"
    },
    "7592": {
      "op": "ADD"
    },
    "7593": {
      "op": "DUP7"
    },
    "7594": {
      "op": "PUSH2",
      "value": "0x1632"
    },
    "7597": {
      "jump": "i",
      "op": "JUMP"
    },
    "7598": {
      "op": "JUMPDEST"
    },
    "7599": {
      "op": "DUP5"
    },
    "7600": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7602": {
      "op": "DUP5"
    },
    "7603": {
      "op": "ADD"
    },
    "7604": {
      "op": "MSTORE"
    },
    "7605": {
      "op": "DUP3"
    },
    "7606": {
      "op": "DUP2"
    },
    "7607": {
      "op": "SUB"
    },
    "7608": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7610": {
      "op": "DUP5"
    },
    "7611": {
      "op": "ADD"
    },
    "7612": {
      "op": "MSTORE"
    },
    "7613": {
      "op": "PUSH2",
      "value": "0x1DC6"
    },
    "7616": {
      "op": "DUP2"
    },
    "7617": {
      "op": "DUP6"
    },
    "7618": {
      "op": "PUSH2",
      "value": "0x1632"
    },
    "7621": {
      "jump": "i",
      "op": "JUMP"
    },
    "7622": {
      "op": "JUMPDEST"
    },
    "7623": {
      "op": "SWAP8"
    },
    "7624": {
      "op": "SWAP7"
    },
    "7625": {
      "op": "POP"
    },
    "7626": {
      "op": "POP"
    },
    "7627": {
      "op": "POP"
    },
    "7628": {
      "op": "POP"
    },
    "7629": {
      "op": "POP"
    },
    "7630": {
      "op": "POP"
    },
    "7631": {
      "op": "POP"
    },
    "7632": {
      "jump": "o",
      "op": "JUMP"
    },
    "7633": {
      "op": "JUMPDEST"
    },
    "7634": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7638": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7640": {
      "op": "SHL"
    },
    "7641": {
      "op": "SUB"
    },
    "7642": {
      "op": "DUP8"
    },
    "7643": {
      "op": "AND"
    },
    "7644": {
      "op": "DUP2"
    },
    "7645": {
      "op": "MSTORE"
    },
    "7646": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "7648": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7650": {
      "op": "DUP3"
    },
    "7651": {
      "op": "ADD"
    },
    "7652": {
      "op": "DUP2"
    },
    "7653": {
      "op": "SWAP1"
    },
    "7654": {
      "op": "MSTORE"
    },
    "7655": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7657": {
      "op": "SWAP1"
    },
    "7658": {
      "op": "PUSH2",
      "value": "0x1DF5"
    },
    "7661": {
      "op": "SWAP1"
    },
    "7662": {
      "op": "DUP4"
    },
    "7663": {
      "op": "ADD"
    },
    "7664": {
      "op": "DUP9"
    },
    "7665": {
      "op": "PUSH2",
      "value": "0x1632"
    },
    "7668": {
      "jump": "i",
      "op": "JUMP"
    },
    "7669": {
      "op": "JUMPDEST"
    },
    "7670": {
      "op": "DUP3"
    },
    "7671": {
      "op": "DUP2"
    },
    "7672": {
      "op": "SUB"
    },
    "7673": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7675": {
      "op": "DUP5"
    },
    "7676": {
      "op": "ADD"
    },
    "7677": {
      "op": "MSTORE"
    },
    "7678": {
      "op": "PUSH2",
      "value": "0x1E07"
    },
    "7681": {
      "op": "DUP2"
    },
    "7682": {
      "op": "DUP9"
    },
    "7683": {
      "op": "PUSH2",
      "value": "0x1632"
    },
    "7686": {
      "jump": "i",
      "op": "JUMP"
    },
    "7687": {
      "op": "JUMPDEST"
    },
    "7688": {
      "op": "SWAP1"
    },
    "7689": {
      "op": "POP"
    },
    "7690": {
      "op": "DUP6"
    },
    "7691": {
      "op": "ISZERO"
    },
    "7692": {
      "op": "ISZERO"
    },
    "7693": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7695": {
      "op": "DUP5"
    },
    "7696": {
      "op": "ADD"
    },
    "7697": {
      "op": "MSTORE"
    },
    "7698": {
      "op": "DUP5"
    },
    "7699": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7701": {
      "op": "DUP5"
    },
    "7702": {
      "op": "ADD"
    },
    "7703": {
      "op": "MSTORE"
    },
    "7704": {
      "op": "DUP3"
    },
    "7705": {
      "op": "DUP2"
    },
    "7706": {
      "op": "SUB"
    },
    "7707": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7709": {
      "op": "DUP5"
    },
    "7710": {
      "op": "ADD"
    },
    "7711": {
      "op": "MSTORE"
    },
    "7712": {
      "op": "PUSH2",
      "value": "0x1E29"
    },
    "7715": {
      "op": "DUP2"
    },
    "7716": {
      "op": "DUP6"
    },
    "7717": {
      "op": "PUSH2",
      "value": "0x1632"
    },
    "7720": {
      "jump": "i",
      "op": "JUMP"
    },
    "7721": {
      "op": "JUMPDEST"
    },
    "7722": {
      "op": "SWAP10"
    },
    "7723": {
      "op": "SWAP9"
    },
    "7724": {
      "op": "POP"
    },
    "7725": {
      "op": "POP"
    },
    "7726": {
      "op": "POP"
    },
    "7727": {
      "op": "POP"
    },
    "7728": {
      "op": "POP"
    },
    "7729": {
      "op": "POP"
    },
    "7730": {
      "op": "POP"
    },
    "7731": {
      "op": "POP"
    },
    "7732": {
      "op": "POP"
    },
    "7733": {
      "jump": "o",
      "op": "JUMP"
    },
    "7734": {
      "op": "JUMPDEST"
    },
    "7735": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7737": {
      "op": "DUP5"
    },
    "7738": {
      "op": "AND"
    },
    "7739": {
      "op": "DUP2"
    },
    "7740": {
      "op": "MSTORE"
    },
    "7741": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7743": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7745": {
      "op": "DUP3"
    },
    "7746": {
      "op": "ADD"
    },
    "7747": {
      "op": "MSTORE"
    },
    "7748": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7750": {
      "op": "PUSH2",
      "value": "0x1E52"
    },
    "7753": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7755": {
      "op": "DUP4"
    },
    "7756": {
      "op": "ADD"
    },
    "7757": {
      "op": "DUP6"
    },
    "7758": {
      "op": "PUSH2",
      "value": "0x1632"
    },
    "7761": {
      "jump": "i",
      "op": "JUMP"
    },
    "7762": {
      "op": "JUMPDEST"
    },
    "7763": {
      "op": "SWAP1"
    },
    "7764": {
      "op": "POP"
    },
    "7765": {
      "op": "DUP3"
    },
    "7766": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7768": {
      "op": "DUP4"
    },
    "7769": {
      "op": "ADD"
    },
    "7770": {
      "op": "MSTORE"
    },
    "7771": {
      "op": "SWAP5"
    },
    "7772": {
      "op": "SWAP4"
    },
    "7773": {
      "op": "POP"
    },
    "7774": {
      "op": "POP"
    },
    "7775": {
      "op": "POP"
    },
    "7776": {
      "op": "POP"
    },
    "7777": {
      "jump": "o",
      "op": "JUMP"
    },
    "7778": {
      "op": "JUMPDEST"
    },
    "7779": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7781": {
      "op": "DUP2"
    },
    "7782": {
      "op": "MSTORE"
    },
    "7783": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7785": {
      "op": "PUSH2",
      "value": "0x1E75"
    },
    "7788": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7790": {
      "op": "DUP4"
    },
    "7791": {
      "op": "ADD"
    },
    "7792": {
      "op": "DUP7"
    },
    "7793": {
      "op": "PUSH2",
      "value": "0x1632"
    },
    "7796": {
      "jump": "i",
      "op": "JUMP"
    },
    "7797": {
      "op": "JUMPDEST"
    },
    "7798": {
      "op": "DUP3"
    },
    "7799": {
      "op": "DUP2"
    },
    "7800": {
      "op": "SUB"
    },
    "7801": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7803": {
      "op": "DUP5"
    },
    "7804": {
      "op": "ADD"
    },
    "7805": {
      "op": "MSTORE"
    },
    "7806": {
      "op": "PUSH2",
      "value": "0x1E87"
    },
    "7809": {
      "op": "DUP2"
    },
    "7810": {
      "op": "DUP7"
    },
    "7811": {
      "op": "PUSH2",
      "value": "0x1632"
    },
    "7814": {
      "jump": "i",
      "op": "JUMP"
    },
    "7815": {
      "op": "JUMPDEST"
    },
    "7816": {
      "op": "SWAP1"
    },
    "7817": {
      "op": "POP"
    },
    "7818": {
      "op": "DUP3"
    },
    "7819": {
      "op": "DUP2"
    },
    "7820": {
      "op": "SUB"
    },
    "7821": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7823": {
      "op": "DUP5"
    },
    "7824": {
      "op": "ADD"
    },
    "7825": {
      "op": "MSTORE"
    },
    "7826": {
      "op": "PUSH2",
      "value": "0x1E9B"
    },
    "7829": {
      "op": "DUP2"
    },
    "7830": {
      "op": "DUP6"
    },
    "7831": {
      "op": "PUSH2",
      "value": "0x1632"
    },
    "7834": {
      "jump": "i",
      "op": "JUMP"
    },
    "7835": {
      "op": "JUMPDEST"
    },
    "7836": {
      "op": "SWAP7"
    },
    "7837": {
      "op": "SWAP6"
    },
    "7838": {
      "op": "POP"
    },
    "7839": {
      "op": "POP"
    },
    "7840": {
      "op": "POP"
    },
    "7841": {
      "op": "POP"
    },
    "7842": {
      "op": "POP"
    },
    "7843": {
      "op": "POP"
    },
    "7844": {
      "jump": "o",
      "op": "JUMP"
    },
    "7845": {
      "op": "JUMPDEST"
    },
    "7846": {
      "op": "DUP5"
    },
    "7847": {
      "op": "DUP2"
    },
    "7848": {
      "op": "MSTORE"
    },
    "7849": {
      "op": "DUP4"
    },
    "7850": {
      "op": "ISZERO"
    },
    "7851": {
      "op": "ISZERO"
    },
    "7852": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7854": {
      "op": "DUP3"
    },
    "7855": {
      "op": "ADD"
    },
    "7856": {
      "op": "MSTORE"
    },
    "7857": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7859": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7861": {
      "op": "DUP3"
    },
    "7862": {
      "op": "ADD"
    },
    "7863": {
      "op": "MSTORE"
    },
    "7864": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7866": {
      "op": "PUSH2",
      "value": "0x1EC6"
    },
    "7869": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7871": {
      "op": "DUP4"
    },
    "7872": {
      "op": "ADD"
    },
    "7873": {
      "op": "DUP6"
    },
    "7874": {
      "op": "PUSH2",
      "value": "0x1632"
    },
    "7877": {
      "jump": "i",
      "op": "JUMP"
    },
    "7878": {
      "op": "JUMPDEST"
    },
    "7879": {
      "op": "DUP3"
    },
    "7880": {
      "op": "DUP2"
    },
    "7881": {
      "op": "SUB"
    },
    "7882": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7884": {
      "op": "DUP5"
    },
    "7885": {
      "op": "ADD"
    },
    "7886": {
      "op": "MSTORE"
    },
    "7887": {
      "op": "PUSH2",
      "value": "0x1DC6"
    },
    "7890": {
      "op": "DUP2"
    },
    "7891": {
      "op": "DUP6"
    },
    "7892": {
      "op": "PUSH2",
      "value": "0x1632"
    },
    "7895": {
      "jump": "i",
      "op": "JUMP"
    },
    "7896": {
      "op": "JUMPDEST"
    },
    "7897": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7899": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7901": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7903": {
      "op": "SHL"
    },
    "7904": {
      "op": "SUB"
    },
    "7905": {
      "op": "DUP7"
    },
    "7906": {
      "op": "DUP2"
    },
    "7907": {
      "op": "AND"
    },
    "7908": {
      "op": "DUP3"
    },
    "7909": {
      "op": "MSTORE"
    },
    "7910": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7912": {
      "op": "DUP3"
    },
    "7913": {
      "op": "ADD"
    },
    "7914": {
      "op": "DUP7"
    },
    "7915": {
      "op": "SWAP1"
    },
    "7916": {
      "op": "MSTORE"
    },
    "7917": {
      "op": "DUP5"
    },
    "7918": {
      "op": "AND"
    },
    "7919": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7921": {
      "op": "DUP3"
    },
    "7922": {
      "op": "ADD"
    },
    "7923": {
      "op": "MSTORE"
    },
    "7924": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7926": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7928": {
      "op": "DUP3"
    },
    "7929": {
      "op": "ADD"
    },
    "7930": {
      "op": "DUP2"
    },
    "7931": {
      "op": "SWAP1"
    },
    "7932": {
      "op": "MSTORE"
    },
    "7933": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7935": {
      "op": "SWAP1"
    },
    "7936": {
      "op": "PUSH2",
      "value": "0x1D3D"
    },
    "7939": {
      "op": "SWAP1"
    },
    "7940": {
      "op": "DUP4"
    },
    "7941": {
      "op": "ADD"
    },
    "7942": {
      "op": "DUP6"
    },
    "7943": {
      "op": "PUSH2",
      "value": "0x1632"
    },
    "7946": {
      "jump": "i",
      "op": "JUMP"
    }
  },
  "sha1": "0cced20092844117e9fb19404ea0400568b2af0d",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.11;\n\nimport \"./CLStorage.sol\";\n\n/// @title Contract to implement and test the basic fuctions of CLHouses\n/// @author Leonardo Urrego\n/// @notice This contract for test only the most basic interactions\ncontract CLHouse is CLStorage {\n\n    /// @notice Create a new CLH\n    /// @dev Some parameters can be ignored depending on the governance model\n    /// @param _owner The address of the deployed wallet\n    /// @param _houseName Name given by the owner\n    /// @param _housePrivate If is set to 1, the CLH is set to private\n    /// @param _govModel keccak256 hash of the governance model, see the __GOV_* constans\n    /// @param _govRules Array for goverment rules see `enum gRule`\n    /// @param _CLC Array for CL Contracts see `enum eCLC`\n    /// @param _ManagerWallets Whitelist of address for invitate as managers\n    constructor(\n        address _owner, \n        string memory _houseName,\n        bool _housePrivate,\n        bytes32 _govModel,\n        uint8[3] memory _govRules,\n        address[5] memory _CLC,\n        address[] memory _ManagerWallets\n    )\n    {\n        (bool successDGTCLL, ) = _CLC[ uint256( eCLC.CLLConstructorCLH ) ].delegatecall(\n            abi.encodeWithSignature(\n                \"__CLHConstructor(address,string,bool,bytes32,uint8[3],address[5],address[])\",\n                _owner, \n                _houseName,\n                _housePrivate,\n                _govModel,\n                _govRules,\n                _CLC,\n                _ManagerWallets\n            )\n        );\n\n        if( !successDGTCLL ) {\n            assembly {\n                let ptr := mload(0x40)\n                let size := returndatasize()\n                returndatacopy(ptr, 0, size)\n                revert(ptr, size)\n            }\n        }\n    }\n\n    /// @notice Execute (or reject) a proposal computing the votes and the governance model\n    /// @dev Normally is called internally after each vote\n    /// @param _propId ID of the proposal, based on `arrProposals`\n    /// @return status True if the proposal can be execute, false in other cases\n    /// @return message result of the transaction\n    function ExecProp(\n        uint256 _propId\n    )\n        public\n        returns(\n            bool status,\n            string memory message\n        )\n    {\n        (bool successDGTCLL, ) = CLLGovernance.delegatecall(\n            abi.encodeWithSignature(\n                \"ExecProp(uint256)\",\n                _propId\n            )\n        );\n\n        if( !successDGTCLL ) {\n            assembly {\n                let ptr := mload(0x40)\n                let size := returndatasize()\n                returndatacopy(ptr, 0, size)\n                revert(ptr, size)\n            }\n        }\n\n        return ( true , \"Success executed proposal\" );\n    }\n\n    /// @notice Used to vote a proposal\n    /// @dev After vote the proposal automatically try to be executed\n    /// @param _propId ID of the proposal, based on `arrProposals`\n    /// @param _support True for accept, false to reject\n    /// @param _justification About your vote\n    /// @return true is the vote can be stored\n    function VoteProposal(\n        uint256 _propId,\n        bool _support,\n        string memory _justification,\n        bytes memory _signature\n    )\n        public\n        returns( bool )\n    {\n        (bool successDGTCLL, ) = CLLGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"VoteProposal(uint256,bool,string,bytes)\",\n                _propId,\n                _support,\n                _justification,\n                _signature\n            )\n        );\n\n        if( !successDGTCLL ) {\n            assembly {\n                let ptr := mload(0x40)\n                let size := returndatasize()\n                returndatacopy(ptr, 0, size)\n                revert(ptr, size)\n            }\n        }\n\n        return true;\n    }\n\n    /// @notice Generate a new proposal to invite a new user\n    /// @dev the execution of this proposal only create an invitation \n    /// @param _walletAddr  Address of the new user\n    /// @param _name Can be the nickname or other reference to the User\n    /// @param _description A text for the proposal\n    /// @param _isManager True if is for a manager\n    /// @return propId ID of the new proposal, based on `arrProposals`\n    function PropInviteUser(\n        address _walletAddr,\n        string memory _name,\n        string memory _description,\n        bool _isManager,\n        uint256 _delayTime,\n        bytes memory _signature\n    )\n        external\n        returns( uint256 propId )\n    {\n        (bool successDGTCLL, ) = CLLGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropInviteUser(address,string,string,bool,uint256,bytes)\",\n                _walletAddr,\n                _name,\n                _description,\n                _isManager,\n                _delayTime,\n                _signature\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            propId := mload(ptr)\n        }\n    }\n\n    /// @notice Generate a new proposal for remove a user\n    /// @dev The user can be a managaer\n    /// @param _walletAddr user Address to be removed\n    /// @param _description About the proposal\n    /// @return propId ID of the new proposal, based on `arrProposals`\n    function PropRemoveUser(\n        address _walletAddr,\n        string memory _description,\n        uint256 _delayTime,\n        bytes memory _signature\n    )\n        external\n        returns( uint256 propId )\n    {\n        (bool successDGTCLL, ) = CLLGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropRemoveUser(address,string,uint256,bytes)\",\n                _walletAddr,\n                _description,\n                _delayTime,\n                _signature\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            propId := mload(ptr)\n        }\n    }\n\n    /// @notice generate a new proposal to transfer ETH in weis\n    /// @dev When execute this proposal, the transfer is made\n    /// @param _to Recipient address\n    /// @param _amountOutCLV Amount to transfer (in wei)\n    /// @param _description About this proposal\n    /// @return propId ID of the new proposal, based on `arrProposals`\n    function PropTxWei(\n        address _to,\n        uint256 _amountOutCLV,\n        string memory _description,\n        uint256 _delayTime\n    )\n        external\n        returns( uint256 propId )\n    {\n        (bool successDGTCLL, ) = CLLGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropTxWei(address,uint256,string,uint256)\",\n                _to,\n                _amountOutCLV,\n                _description,\n                _delayTime\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            propId := mload(ptr)\n        }\n    }\n\n    /// @notice generate a new proposal to transfer ETH in weis\n    /// @dev When execute this proposal, the transfer is made\n    /// @param _to Recipient address\n    /// @param _amountOutCLV Amount to transfer (in wei)\n    /// @param _description About this proposal\n    /// @return propId ID of the new proposal, based on `arrProposals`\n    function PropTxERC20(\n        address _to,\n        uint256 _amountOutCLV,\n        address _tokenOutCLV,\n        string memory _description,\n        uint256 _delayTime\n    )\n        external\n        returns( uint256 propId )\n    {\n        (bool successDGTCLL, ) = CLLGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropTxERC20(address,uint256,address,string,uint256)\",\n                _to,\n                _amountOutCLV,\n                _tokenOutCLV,\n                _description,\n                _delayTime\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            propId := mload(ptr)\n        }\n    }\n\n    /// @notice Generate a new proposal for change some governance parameters\n    /// @dev When execute this proposal the new values will be set\n    /// @param _newApprovPercentage The new percentaje for accept or reject a proposal\n    /// @param _description About the new proposal \n    /// @return propId ID of the new proposal, based on `arrProposals`\n    function PropGovRules(\n        uint8 _newApprovPercentage,\n        string memory _description,\n        uint256 _delayTime\n    )\n        external\n        returns( uint256 propId )\n    {\n        (bool successDGTCLL, ) = CLLGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropGovRules(uint8,string,uint256)\",\n                _newApprovPercentage,\n                _description,\n                _delayTime\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            propId := mload(ptr)\n        }\n    }\n\n    /// @notice Generate a proposal from a user that want to join to the CLH\n    /// @dev Only avaiable in public CLH\n    /// @param _name Nickname or other user identification\n    /// @param _description About the request\n    /// @return propId ID of the new proposal, based on `arrProposals`\n    function PropRequestToJoin(\n        string memory _name,\n        string memory _description,\n        bytes memory _signature\n    )\n        external\n        returns( uint256 )\n    {\n        (bool successDGTCLL, ) = CLLGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropRequestToJoin(string,string,bytes)\",\n                _name,\n                _description,\n                _signature\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            return(ptr, size)\n        }\n    }\n\n    /// @notice For an user that have an invitation pending\n    /// @dev \n    /// @param _acceptance True for accept the invitation\n    function AcceptRejectInvitation(\n        bool _acceptance,\n        bytes memory _signature\n    )\n        external\n    {\n        (bool successDGTCLL, ) = CLLUserManagement.delegatecall(\n            abi.encodeWithSignature( \n                \"AcceptRejectInvitation(bool,bytes)\",\n                _acceptance,\n                _signature\n            )\n        );\n\n        if( !successDGTCLL ) {\n            assembly {\n                let ptr := mload(0x40)\n                let size := returndatasize()\n                returndatacopy(ptr, 0, size)\n                revert(ptr, size)\n            }\n        }\n    }\n\n    function PropSwapERC20(\n        address _tokenOutCLV,\n        address _tokenInCLV,\n        uint256 _amountOutCLV,\n        string memory _description,\n        uint256 _delayTime\n    )\n        external\n        returns( uint256 )\n    {\n        (bool successDGTCLL, ) = CLLGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropSwapERC20(address,address,uint256,string,uint256)\",\n                _tokenOutCLV,\n                _tokenInCLV,\n                _amountOutCLV,\n                _description,\n                _delayTime\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            return(ptr, size)\n        }\n    }\n\n    function PropSellERC20(\n        address _tokenOutCLV,\n        uint256 _amountOutCLV,\n        string memory _description,\n        uint256 _delayTime\n    )\n        external\n        returns( uint256 )\n    {\n        (bool successDGTCLL, ) = CLLGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropSellERC20(address,uint256,string,uint256)\",\n                _tokenOutCLV,\n                _amountOutCLV,\n                _description,\n                _delayTime\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            return(ptr, size)\n        }\n    }\n\n    function PropBuyERC20(\n        address _tokenInCLV,\n        uint256 _amountOutCLV,\n        string memory _description,\n        uint256 _delayTime\n    )\n        external\n        returns( uint256 )\n    {\n        (bool successDGTCLL, ) = CLLGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropBuyERC20(address,uint256,string,uint256)\",\n                _tokenInCLV,\n                _amountOutCLV,\n                _description,\n                _delayTime\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            return(ptr, size)\n        }\n    }\n\n    /// @notice Length of array\n    function GetArrUsersLength() external view returns( uint256 ){\n        return arrUsers.length;\n    }\n\n    /// @notice The list of all Proposals\n    /// @return arrProposals the array with all proposals\n    function GetProposalList() external view returns( strProposal[] memory ) {\n        return arrProposals;\n    }\n\n    /// @notice Get complete array of arrDataPropAddUser\n    /// @return arrDataPropAddUser the array with all data\n    function GetArrDataPropAddUser() external view returns( strDataAddUser[] memory ) {\n        return arrDataPropAddUser;\n    }\n}",
  "sourceMap": "254:14215:18:-:0;;;874:932;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1130:18;1154:4;1169:22;1154:41;;;;-1:-1:-1;;;;;1154:54:18;1358:6;1383:10;1411:13;1442:9;1469;1496:4;1518:15;1222:325;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1222:325:18;;;;;;;;;;;;;;-1:-1:-1;;;;;1222:325:18;-1:-1:-1;;;1222:325:18;;;1154:403;;;1222:325;1154:403;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:428;;;1573:13;1568:232;;1647:4;1641:11;1681:16;1737:4;1734:1;1729:3;1714:28;1771:4;1766:3;1759:17;1568:232;1119:687;874:932;;;;;;;254:14215;;14:177:27;93:13;;-1:-1:-1;;;;;135:31:27;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:275;399:2;393:9;464:2;445:13;;-1:-1:-1;;441:27:27;429:40;;-1:-1:-1;;;;;484:34:27;;520:22;;;481:62;478:88;;;546:18;;:::i;:::-;582:2;575:22;328:275;;-1:-1:-1;328:275:27:o;608:258::-;680:1;690:113;704:6;701:1;698:13;690:113;;;780:11;;;774:18;761:11;;;754:39;726:2;719:10;690:113;;;821:6;818:1;815:13;812:48;;;856:1;847:6;842:3;838:16;831:27;812:48;;608:258;;;:::o;871:164::-;947:13;;996;;989:21;979:32;;969:60;;1025:1;1022;1015:12;1040:817;1099:5;1152:3;1145:4;1137:6;1133:17;1129:27;1119:55;;1170:1;1167;1160:12;1119:55;1203:2;1197:9;1245:2;1233:15;;-1:-1:-1;;;;;1263:34:27;;1299:22;;;1260:62;1257:88;;;1325:18;;:::i;:::-;1361:2;1354:22;1396:6;1437:2;1425:15;;1452;;;1449:35;;;1480:1;1477;1470:12;1449:35;1504:6;1519:308;1535:6;1530:3;1527:15;1519:308;;;1610:3;1604:10;1658:4;1651:5;1647:16;1640:5;1637:27;1627:125;;1706:1;1735:2;1731;1724:14;1627:125;1765:18;;1812:4;1803:14;;;;1552;1519:308;;;-1:-1:-1;1845:6:27;;1040:817;-1:-1:-1;;;;;1040:817:27:o;1862:676::-;1923:5;1976:3;1969:4;1961:6;1957:17;1953:27;1943:55;;1994:1;1991;1984:12;1943:55;2027:2;2021:9;2069:3;2057:16;;-1:-1:-1;;;;;2088:34:27;;2124:22;;;2085:62;2082:88;;;2150:18;;:::i;:::-;2186:2;2179:22;2221:6;2262:3;2250:16;;2278:15;;;2275:35;;;2306:1;2303;2296:12;2275:35;2330:6;2345:163;2361:6;2356:3;2353:15;2345:163;;;2429:34;2459:3;2429:34;:::i;:::-;2417:47;;2493:4;2484:14;;;;2378;2345:163;;2543:733;2608:5;2661:3;2654:4;2646:6;2642:17;2638:27;2628:55;;2679:1;2676;2669:12;2628:55;2702:13;;2734:4;-1:-1:-1;;;;;2750:26:27;;2747:52;;;2779:18;;:::i;:::-;2825:2;2822:1;2818:10;2848:28;2872:2;2868;2864:11;2848:28;:::i;:::-;2910:15;;;2980;;;2976:24;;;2941:12;;;;3012:15;;;3009:35;;;3040:1;3037;3030:12;3009:35;3076:2;3068:6;3064:15;3053:26;;3088:159;3104:6;3099:3;3096:15;3088:159;;;3170:34;3200:3;3170:34;:::i;:::-;3158:47;;3121:12;;;;3225;;;;3088:159;;;3265:5;2543:733;-1:-1:-1;;;;;;;2543:733:27:o;3281:1407::-;3481:6;3489;3497;3505;3513;3521;3529;3582:3;3570:9;3561:7;3557:23;3553:33;3550:53;;;3599:1;3596;3589:12;3550:53;3622:40;3652:9;3622:40;:::i;:::-;3706:2;3691:18;;3685:25;3612:50;;-1:-1:-1;;;;;;3759:14:27;;;3756:34;;;3786:1;3783;3776:12;3756:34;3824:6;3813:9;3809:22;3799:32;;3869:7;3862:4;3858:2;3854:13;3850:27;3840:55;;3891:1;3888;3881:12;3840:55;3920:2;3914:9;3942:2;3938;3935:10;3932:36;;;3948:18;;:::i;:::-;3990:53;4033:2;4014:13;;-1:-1:-1;;4010:27:27;4039:2;4006:36;3990:53;:::i;:::-;4066:2;4059:5;4052:17;4106:7;4101:2;4096;4092;4088:11;4084:20;4081:33;4078:53;;;4127:1;4124;4117:12;4078:53;4140:54;4191:2;4186;4179:5;4175:14;4170:2;4166;4162:11;4140:54;:::i;:::-;4213:5;-1:-1:-1;4237:46:27;;-1:-1:-1;4279:2:27;4264:18;;4237:46;:::i;:::-;4227:56;;4323:2;4312:9;4308:18;4302:25;4292:35;;4346:63;4401:7;4395:3;4384:9;4380:19;4346:63;:::i;:::-;4336:73;;4428:65;4485:7;4479:3;4468:9;4464:19;4428:65;:::i;:::-;4418:75;;4539:3;4528:9;4524:19;4518:26;4502:42;;4569:2;4559:8;4556:16;4553:36;;;4585:1;4582;4575:12;4553:36;;4608:74;4674:7;4663:8;4652:9;4648:24;4608:74;:::i;:::-;4598:84;;;3281:1407;;;;;;;;;;:::o;4957:352::-;5050:5;5073:1;5083:220;5097:4;5094:1;5091:11;5083:220;;;5160:13;;-1:-1:-1;;;;;5156:39:27;5144:52;;5219:4;5243:12;;;;5278:15;;;;5192:1;5110:9;5083:220;;5314:461;5367:3;5405:5;5399:12;5432:6;5427:3;5420:19;5458:4;5487:2;5482:3;5478:12;5471:19;;5524:2;5517:5;5513:14;5545:1;5555:195;5569:6;5566:1;5563:13;5555:195;;;5634:13;;-1:-1:-1;;;;;5630:39:27;5618:52;;5690:12;;;;5725:15;;;;5666:1;5584:9;5555:195;;;-1:-1:-1;5766:3:27;;5314:461;-1:-1:-1;;;;;5314:461:27:o;5780:1398::-;-1:-1:-1;;;;;6251:32:27;;6233:51;;6221:3;6303:2;6321:18;;;6314:30;;;6367:13;;6396:18;;;6389:34;;;6192:4;;6442:3;;6303:2;6454:66;6367:13;6493:18;;;6476:15;;;6454:66;:::i;:::-;6627:14;;6620:22;6615:2;6600:18;;6593:50;6674:2;6659:18;;6652:34;;;6579:2;6558:15;-1:-1:-1;;6554:29:27;6539:45;;6721:3;6706:19;;6767:6;-1:-1:-1;6801:178:27;6815:4;6812:1;6809:11;6801:178;;;6878:13;;6893:4;6874:24;6862:37;;6919:12;;;;6954:15;;;;6835:1;6828:9;6801:178;;;6805:3;;;6988:53;7036:3;7025:9;7021:19;7013:6;6988:53;:::i;:::-;7102:2;7090:9;7086:2;7082:18;7078:27;7072:3;7061:9;7057:19;7050:56;7123:49;7168:2;7164;7160:11;7152:6;7123:49;:::i;:::-;7115:57;5780:1398;-1:-1:-1;;;;;;;;;;;;5780:1398:27:o;7183:274::-;7312:3;7350:6;7344:13;7366:53;7412:6;7407:3;7400:4;7392:6;7388:17;7366:53;:::i;:::-;7435:16;;;;;7183:274;-1:-1:-1;;7183:274:27:o;:::-;254:14215:18;;;;;;",
  "sourcePath": "contracts/CLHouse/CLHouse.sol",
  "type": "contract"
}