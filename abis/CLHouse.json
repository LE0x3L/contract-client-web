{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newApprovPercentage",
          "type": "uint256"
        }
      ],
      "name": "evtChangeGovRules",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum proposalEvent",
          "name": "eventProposal",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "propId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum proposalType",
          "name": "typeProposal",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "evtProposal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenOutCLV",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountOutCLV",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenInCLV",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountReceived",
          "type": "uint256"
        }
      ],
      "name": "evtSwapERC20",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "walletAddr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAdd",
          "type": "address"
        }
      ],
      "name": "evtTxERC20",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum assetsEvent",
          "name": "typeEvent",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "walletAddr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "evtTxEth",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum userEvent",
          "name": "eventUser",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "walletAddr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "evtUser",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "propId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "position",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "justification",
          "type": "string"
        }
      ],
      "name": "evtVoted",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_acceptance",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "AcceptRejectInvitation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CCLFACTORY",
      "outputs": [
        {
          "internalType": "contract ICLFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CLHAPI",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CLHLOCK",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CLHSAFE",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_expirationDuration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_keyPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxNumberOfKeys",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_lockName",
          "type": "string"
        }
      ],
      "name": "CreateLock",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_propId",
          "type": "uint256"
        }
      ],
      "name": "ExecProp",
      "outputs": [
        {
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "message",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "GetArrDataPropUser",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "walletAddr",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "isManager",
              "type": "bool"
            }
          ],
          "internalType": "struct strDataUser[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "GetArrProposalsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "GetArrUsersLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "GetCLHouseVersion",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "GetProposalList",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "proponent",
              "type": "address"
            },
            {
              "internalType": "enum proposalType",
              "name": "typeProposal",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "propDataId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "numVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "againstVotes",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "executed",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "rejected",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "internalType": "struct strProposal[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "HOUSE_GOVERNANCE_MODEL",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "HOUSE_NAME",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_houseName",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "_housePrivate",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_houseOpen",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "_govModel",
          "type": "bytes32"
        },
        {
          "internalType": "uint256[3]",
          "name": "_govRules",
          "type": "uint256[3]"
        },
        {
          "internalType": "address[6]",
          "name": "_CLC",
          "type": "address[6]"
        },
        {
          "internalType": "address[]",
          "name": "_ManagerWallets",
          "type": "address[]"
        }
      ],
      "name": "Init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenInCLV",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountOutCLV",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        }
      ],
      "name": "PropBuyERC20",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newApprovPercentage",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        }
      ],
      "name": "PropGovRules",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "propId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_walletAddr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "_isManager",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "PropInviteUser",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "propId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_walletAddr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "PropRemoveUser",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "propId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_signerWallet",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "PropRequestToJoin",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenOutCLV",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountOutCLV",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        }
      ],
      "name": "PropSellERC20",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenOutCLV",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenInCLV",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountOutCLV",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        }
      ],
      "name": "PropSwapERC20",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountOutCLV",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_tokenOutCLV",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        }
      ],
      "name": "PropTxERC20",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "propId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountOutCLV",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        }
      ],
      "name": "PropTxWei",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "propId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_whiteListNFT",
          "type": "address"
        }
      ],
      "name": "SetWhitelistCollection",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_propId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_support",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "_justification",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "VoteProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "arrDataPropGovRules",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "newApprovPercentage",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "arrDataPropTxAssets",
      "outputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountOutCLV",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tokenOutCLV",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenInCLV",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "arrDataPropUser",
      "outputs": [
        {
          "internalType": "address",
          "name": "walletAddr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "isManager",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "arrProposals",
      "outputs": [
        {
          "internalType": "address",
          "name": "proponent",
          "type": "address"
        },
        {
          "internalType": "enum proposalType",
          "name": "typeProposal",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "propDataId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "numVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "againstVotes",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "rejected",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "arrUsers",
      "outputs": [
        {
          "internalType": "address",
          "name": "walletAddr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isUser",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isManager",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_propId",
          "type": "uint256[]"
        },
        {
          "internalType": "bool",
          "name": "_support",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "_justification",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "bulkVote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "govRuleApprovPercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "govRuleMaxManagers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "govRuleMaxUsers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "houseOpen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "housePrivate",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "mapIdUser",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "mapInvitationUser",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "mapReq2Join",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "mapVotes",
      "outputs": [
        {
          "internalType": "bool",
          "name": "voted",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "inSupport",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "justification",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nftAdmin",
      "outputs": [
        {
          "internalType": "contract CLHNFTV2",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nftInvitation",
      "outputs": [
        {
          "internalType": "contract CLHNFTV2",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nftMember",
      "outputs": [
        {
          "internalType": "contract CLHNFTV2",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numManagers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numUsers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultCLH",
      "outputs": [
        {
          "internalType": "contract CLVault",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "whiteListNFT",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "18": "/home/trecetp/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/proxy/utils/Initializable.sol",
    "47": "contracts/CLCore/CLStorage.sol",
    "48": "contracts/CLCore/CLTypes.sol",
    "50": "contracts/CLHouse/CLHouse.sol",
    "65": "interfaces/IUnlock.sol"
  },
  "ast": {
    "absolutePath": "contracts/CLHouse/CLHouse.sol",
    "exportedSymbols": {
      "Address": [
        11440
      ],
      "CLBeacon": [
        5082
      ],
      "CLHNFTV2": [
        5834
      ],
      "CLHouse": [
        2502
      ],
      "CLHouseApi": [
        970
      ],
      "CLStorage": [
        1400
      ],
      "CLVault": [
        5584
      ],
      "Context": [
        12094
      ],
      "DebugDLGTCLL": [
        9323
      ],
      "ERC721Metadata": [
        5858
      ],
      "ERC721TokenReceiver": [
        5878
      ],
      "ERC721UL": [
        6414
      ],
      "IBeacon": [
        11832
      ],
      "ICLFactory": [
        6634
      ],
      "ICLHouse": [
        6882
      ],
      "IERC20": [
        12072
      ],
      "ISwapRouter": [
        7931
      ],
      "IUniswapV3SwapCallback": [
        11994
      ],
      "IUnlock": [
        7438
      ],
      "Initializable": [
        7165
      ],
      "InvalidGovernanceType": [
        9317
      ],
      "Ownable": [
        8215
      ],
      "TransferHelper": [
        8102
      ],
      "UpgradeableBeacon": [
        7695
      ],
      "__CLHOUSE_VERSION__": [
        9326
      ],
      "__CONTRACT_NAME_HASH__": [
        9355
      ],
      "__CONTRACT_VERSION_HASH__": [
        9363
      ],
      "__GOV_COMMITTEE__": [
        9345
      ],
      "__GOV_DICTATORSHIP__": [
        9340
      ],
      "__GOV_SIMPLE_MAJORITY__": [
        9350
      ],
      "__STR_EIP712DOMAIN_HASH__": [
        9371
      ],
      "__STR_OCBULKVOTE_HASH__": [
        9395
      ],
      "__STR_OCDELUSER_HASH__": [
        9411
      ],
      "__STR_OCINVIT_HASH__": [
        9379
      ],
      "__STR_OCNEWCLH_HASH__": [
        9427
      ],
      "__STR_OCNEWUSER_HASH__": [
        9403
      ],
      "__STR_OCREQUEST_HASH__": [
        9419
      ],
      "__STR_OCVOTE_HASH__": [
        9387
      ],
      "__UPGRADEABLE_CLF_VERSION__": [
        9332
      ],
      "__UPGRADEABLE_CLH_VERSION__": [
        9329
      ],
      "__UPGRADEABLE_NFT_VERSION__": [
        9335
      ],
      "assetsEvent": [
        9441
      ],
      "eCLC": [
        9466
      ],
      "gRule": [
        9459
      ],
      "proposalEvent": [
        9445
      ],
      "proposalType": [
        9455
      ],
      "strDataGovRules": [
        9523
      ],
      "strDataTxAssets": [
        9520
      ],
      "strDataUser": [
        9511
      ],
      "strProposal": [
        9497
      ],
      "strUser": [
        9477
      ],
      "strVote": [
        9504
      ],
      "userEvent": [
        9434
      ]
    },
    "id": 2503,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1833,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:50"
      },
      {
        "absolutePath": "/home/trecetp/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/proxy/utils/Initializable.sol",
        "file": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
        "id": 1834,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2503,
        "sourceUnit": 7166,
        "src": "58:63:50",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/CLCore/CLStorage.sol",
        "file": "../CLCore/CLStorage.sol",
        "id": 1835,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2503,
        "sourceUnit": 1401,
        "src": "122:33:50",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IUnlock.sol",
        "file": "../../interfaces/IUnlock.sol",
        "id": 1836,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2503,
        "sourceUnit": 7439,
        "src": "156:38:50",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1838,
              "name": "CLStorage",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1400,
              "src": "386:9:50"
            },
            "id": 1839,
            "nodeType": "InheritanceSpecifier",
            "src": "386:9:50"
          },
          {
            "baseName": {
              "id": 1840,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7165,
              "src": "397:13:50"
            },
            "id": 1841,
            "nodeType": "InheritanceSpecifier",
            "src": "397:13:50"
          }
        ],
        "canonicalName": "CLHouse",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1837,
          "nodeType": "StructuredDocumentation",
          "src": "197:169:50",
          "text": "@title Contract to implement and test the basic fuctions of CLHouses\n @author Leonardo Urrego\n @notice This contract for test only the most basic interactions"
        },
        "fullyImplemented": true,
        "id": 2502,
        "linearizedBaseContracts": [
          2502,
          7165,
          1400
        ],
        "name": "CLHouse",
        "nameLocation": "375:7:50",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1848,
              "nodeType": "Block",
              "src": "484:39:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1845,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7164,
                      "src": "494:20:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "494:22:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1847,
                  "nodeType": "ExpressionStatement",
                  "src": "494:22:50"
                }
              ]
            },
            "documentation": {
              "id": 1842,
              "nodeType": "StructuredDocumentation",
              "src": "417:48:50",
              "text": "@custom:oz-upgrades-unsafe-allow constructor"
            },
            "id": 1849,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1843,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "481:2:50"
            },
            "returnParameters": {
              "id": 1844,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "484:0:50"
            },
            "scope": 2502,
            "src": "470:53:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1906,
              "nodeType": "Block",
              "src": "1532:780:50",
              "statements": [
                {
                  "assignments": [
                    1878,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1878,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "1606:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 1906,
                      "src": "1601:18:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1877,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1601:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "documentation": "@custom:oz-upgrades-unsafe-allow delegatecall",
                  "id": 1900,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "5f5f434c48436f6e7374727563746f7228616464726573732c737472696e672c626f6f6c2c626f6f6c2c627974657333322c75696e743235365b335d2c616464726573735b365d2c616464726573735b5d29",
                            "id": 1889,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1734:84:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_729777edf0a75735082eecb8e761eeb4bff41ea1855f0a8ed453e417f9b2f926",
                              "typeString": "literal_string \"__CLHConstructor(address,string,bool,bool,bytes32,uint256[3],address[6],address[])\""
                            },
                            "value": "__CLHConstructor(address,string,bool,bool,bytes32,uint256[3],address[6],address[])"
                          },
                          {
                            "id": 1890,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1852,
                            "src": "1836:6:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1891,
                            "name": "_houseName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1854,
                            "src": "1861:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 1892,
                            "name": "_housePrivate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1856,
                            "src": "1889:13:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 1893,
                            "name": "_houseOpen",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1858,
                            "src": "1920:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 1894,
                            "name": "_govModel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1860,
                            "src": "1948:9:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 1895,
                            "name": "_govRules",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1864,
                            "src": "1975:9:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                              "typeString": "uint256[3] memory"
                            }
                          },
                          {
                            "id": 1896,
                            "name": "_CLC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1868,
                            "src": "2002:4:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$6_memory_ptr",
                              "typeString": "address[6] memory"
                            }
                          },
                          {
                            "id": 1897,
                            "name": "_ManagerWallets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1871,
                            "src": "2024:15:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_729777edf0a75735082eecb8e761eeb4bff41ea1855f0a8ed453e417f9b2f926",
                              "typeString": "literal_string \"__CLHConstructor(address,string,bool,bool,bytes32,uint256[3],address[6],address[])\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                              "typeString": "uint256[3] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_address_$6_memory_ptr",
                              "typeString": "address[6] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          ],
                          "expression": {
                            "id": 1887,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1693:3:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1888,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "1693:23:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 1898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1693:360:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 1879,
                          "name": "_CLC",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1868,
                          "src": "1625:4:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$6_memory_ptr",
                            "typeString": "address[6] memory"
                          }
                        },
                        "id": 1885,
                        "indexExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1882,
                                "name": "eCLC",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9466,
                                "src": "1640:4:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_eCLC_$9466_$",
                                  "typeString": "type(enum eCLC)"
                                }
                              },
                              "id": 1883,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "CLLConstructorCLH",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 9460,
                              "src": "1640:22:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_eCLC_$9466",
                                "typeString": "enum eCLC"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_eCLC_$9466",
                                "typeString": "enum eCLC"
                              }
                            ],
                            "id": 1881,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1631:7:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 1880,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1631:7:50",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1631:33:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1625:41:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1886,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "1625:54:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 1899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1625:438:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1600:463:50"
                },
                {
                  "condition": {
                    "id": 1902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2078:14:50",
                    "subExpression": {
                      "id": 1901,
                      "name": "successDGTCLL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1878,
                      "src": "2079:13:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1905,
                  "nodeType": "IfStatement",
                  "src": "2074:232:50",
                  "trueBody": {
                    "id": 1904,
                    "nodeType": "Block",
                    "src": "2095:211:50",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "2118:178:50",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2136:22:50",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2153:4:50",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2147:5:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2147:11:50"
                              },
                              "variables": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulTypedName",
                                  "src": "2140:3:50",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2175:28:50",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "returndatasize",
                                  "nodeType": "YulIdentifier",
                                  "src": "2187:14:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2187:16:50"
                              },
                              "variables": [
                                {
                                  "name": "size",
                                  "nodeType": "YulTypedName",
                                  "src": "2179:4:50",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "2235:3:50"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2240:1:50",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "2243:4:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "returndatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "2220:14:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2220:28:50"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2220:28:50"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "2272:3:50"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "2277:4:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "2265:6:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2265:17:50"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2265:17:50"
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [],
                        "id": 1903,
                        "nodeType": "InlineAssembly",
                        "src": "2109:187:50"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1850,
              "nodeType": "StructuredDocumentation",
              "src": "529:654:50",
              "text": "@notice Create a new CLH\n @dev Some parameters can be ignored depending on the governance model\n @param _owner The address of the deployed wallet\n @param _houseName Name given by the owner\n @param _housePrivate If is set to 1, the CLH is set to private\n @param _houseOpen If is set to 1, the CLH is set to Open\n @param _govModel keccak256 hash of the governance model, see the __GOV_* constans\n @param _govRules Array for goverment rules see `enum gRule`\n @param _CLC Array for CL Contracts and others see `enum eCLC`\n @param _ManagerWallets Whitelist of address for invitate as managers"
            },
            "functionSelector": "bf97e2da",
            "id": 1907,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1874,
                    "name": "__UPGRADEABLE_CLH_VERSION__",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9329,
                    "src": "1498:27:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 1875,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1873,
                  "name": "reinitializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7118,
                  "src": "1483:13:50"
                },
                "nodeType": "ModifierInvocation",
                "src": "1483:44:50"
              }
            ],
            "name": "Init",
            "nameLocation": "1197:4:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1872,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1852,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "1219:6:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 1907,
                  "src": "1211:14:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1851,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1211:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1854,
                  "mutability": "mutable",
                  "name": "_houseName",
                  "nameLocation": "1250:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 1907,
                  "src": "1236:24:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1853,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1236:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1856,
                  "mutability": "mutable",
                  "name": "_housePrivate",
                  "nameLocation": "1275:13:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 1907,
                  "src": "1270:18:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1855,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1270:4:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1858,
                  "mutability": "mutable",
                  "name": "_houseOpen",
                  "nameLocation": "1303:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 1907,
                  "src": "1298:15:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1857,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1298:4:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1860,
                  "mutability": "mutable",
                  "name": "_govModel",
                  "nameLocation": "1331:9:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 1907,
                  "src": "1323:17:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1859,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1323:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1864,
                  "mutability": "mutable",
                  "name": "_govRules",
                  "nameLocation": "1368:9:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 1907,
                  "src": "1350:27:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                    "typeString": "uint256[3]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1861,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1350:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1863,
                    "length": {
                      "hexValue": "33",
                      "id": 1862,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1358:1:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1350:10:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$3_storage_ptr",
                      "typeString": "uint256[3]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1868,
                  "mutability": "mutable",
                  "name": "_CLC",
                  "nameLocation": "1405:4:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 1907,
                  "src": "1387:22:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$6_memory_ptr",
                    "typeString": "address[6]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1865,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1387:7:50",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1867,
                    "length": {
                      "hexValue": "36",
                      "id": 1866,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1395:1:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_6_by_1",
                        "typeString": "int_const 6"
                      },
                      "value": "6"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1387:10:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$6_storage_ptr",
                      "typeString": "address[6]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1871,
                  "mutability": "mutable",
                  "name": "_ManagerWallets",
                  "nameLocation": "1436:15:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 1907,
                  "src": "1419:32:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1869,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1419:7:50",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1870,
                    "nodeType": "ArrayTypeName",
                    "src": "1419:9:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1201:256:50"
            },
            "returnParameters": {
              "id": 1876,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1532:0:50"
            },
            "scope": 2502,
            "src": "1188:1124:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1943,
              "nodeType": "Block",
              "src": "2821:607:50",
              "statements": [
                {
                  "assignments": [
                    1918
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1918,
                      "mutability": "mutable",
                      "name": "CLLGovernance",
                      "nameLocation": "2839:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 1943,
                      "src": "2831:21:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1917,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2831:7:50",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1922,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1919,
                        "name": "CCLFACTORY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1073,
                        "src": "2855:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLFactory_$6634",
                          "typeString": "contract ICLFactory"
                        }
                      },
                      "id": 1920,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "CLLGovernance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6568,
                      "src": "2855:24:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 1921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2855:26:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2831:50:50"
                },
                {
                  "assignments": [
                    1924,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1924,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "2955:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 1943,
                      "src": "2950:18:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1923,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2950:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "documentation": "@custom:oz-upgrades-unsafe-allow delegatecall",
                  "id": 1933,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4578656350726f702875696e7432353629",
                            "id": 1929,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3055:19:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_5f3d99b36eccea2d9a38fa911daeb9ce94a9ac486dd03f1648c38f62cafa2119",
                              "typeString": "literal_string \"ExecProp(uint256)\""
                            },
                            "value": "ExecProp(uint256)"
                          },
                          {
                            "id": 1930,
                            "name": "_propId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1910,
                            "src": "3092:7:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_5f3d99b36eccea2d9a38fa911daeb9ce94a9ac486dd03f1648c38f62cafa2119",
                              "typeString": "literal_string \"ExecProp(uint256)\""
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1927,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3014:3:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1928,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "3014:23:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 1931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3014:99:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 1925,
                        "name": "CLLGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1918,
                        "src": "2974:13:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1926,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "2974:26:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 1932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2974:149:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2949:174:50"
                },
                {
                  "condition": {
                    "id": 1935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3138:14:50",
                    "subExpression": {
                      "id": 1934,
                      "name": "successDGTCLL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1924,
                      "src": "3139:13:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1938,
                  "nodeType": "IfStatement",
                  "src": "3134:232:50",
                  "trueBody": {
                    "id": 1937,
                    "nodeType": "Block",
                    "src": "3155:211:50",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "3178:178:50",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3196:22:50",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3213:4:50",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3207:5:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3207:11:50"
                              },
                              "variables": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulTypedName",
                                  "src": "3200:3:50",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3235:28:50",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "returndatasize",
                                  "nodeType": "YulIdentifier",
                                  "src": "3247:14:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3247:16:50"
                              },
                              "variables": [
                                {
                                  "name": "size",
                                  "nodeType": "YulTypedName",
                                  "src": "3239:4:50",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "3295:3:50"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3300:1:50",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "3303:4:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "returndatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "3280:14:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3280:28:50"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3280:28:50"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "3332:3:50"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "3337:4:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "3325:6:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3325:17:50"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3325:17:50"
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [],
                        "id": 1936,
                        "nodeType": "InlineAssembly",
                        "src": "3169:187:50"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "74727565",
                        "id": 1939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3385:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "537563636573732065786563757465642070726f706f73616c",
                        "id": 1940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3392:27:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cc5063be902007aa4094c05d7977aa17bd625bcc90d4b58bc658ed91467f2f04",
                          "typeString": "literal_string \"Success executed proposal\""
                        },
                        "value": "Success executed proposal"
                      }
                    ],
                    "id": 1941,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3383:38:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_stringliteral_cc5063be902007aa4094c05d7977aa17bd625bcc90d4b58bc658ed91467f2f04_$",
                      "typeString": "tuple(bool,literal_string \"Success executed proposal\")"
                    }
                  },
                  "functionReturnParameters": 1916,
                  "id": 1942,
                  "nodeType": "Return",
                  "src": "3376:45:50"
                }
              ]
            },
            "documentation": {
              "id": 1908,
              "nodeType": "StructuredDocumentation",
              "src": "2318:344:50",
              "text": "@notice Execute (or reject) a proposal computing the votes and the governance model\n @dev Normally is called internally after each vote\n @param _propId ID of the proposal, based on `arrProposals`\n @return status True if the proposal can be execute, false in other cases\n @return message result of the transaction"
            },
            "functionSelector": "5f3d99b3",
            "id": 1944,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ExecProp",
            "nameLocation": "2676:8:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1911,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1910,
                  "mutability": "mutable",
                  "name": "_propId",
                  "nameLocation": "2702:7:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 1944,
                  "src": "2694:15:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1909,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2694:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2684:31:50"
            },
            "returnParameters": {
              "id": 1916,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1913,
                  "mutability": "mutable",
                  "name": "status",
                  "nameLocation": "2765:6:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 1944,
                  "src": "2760:11:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1912,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2760:4:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1915,
                  "mutability": "mutable",
                  "name": "message",
                  "nameLocation": "2799:7:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 1944,
                  "src": "2785:21:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1914,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2785:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2746:70:50"
            },
            "scope": 2502,
            "src": "2667:761:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1981,
              "nodeType": "Block",
              "src": "3880:660:50",
              "statements": [
                {
                  "assignments": [
                    1957
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1957,
                      "mutability": "mutable",
                      "name": "CLLGovernance",
                      "nameLocation": "3898:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 1981,
                      "src": "3890:21:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1956,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3890:7:50",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1961,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1958,
                        "name": "CCLFACTORY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1073,
                        "src": "3914:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLFactory_$6634",
                          "typeString": "contract ICLFactory"
                        }
                      },
                      "id": 1959,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "CLLGovernance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6568,
                      "src": "3914:24:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 1960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3914:26:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3890:50:50"
                },
                {
                  "assignments": [
                    1963,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1963,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "4014:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 1981,
                      "src": "4009:18:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1962,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4009:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "documentation": "@custom:oz-upgrades-unsafe-allow delegatecall",
                  "id": 1975,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "566f746550726f706f73616c2875696e743235362c626f6f6c2c737472696e672c627974657329",
                            "id": 1968,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4115:41:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c2b3aa089091839f7325bab8b8ed1dd8ad38b8c301fe29f7fcd75b4947c433c7",
                              "typeString": "literal_string \"VoteProposal(uint256,bool,string,bytes)\""
                            },
                            "value": "VoteProposal(uint256,bool,string,bytes)"
                          },
                          {
                            "id": 1969,
                            "name": "_propId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1947,
                            "src": "4174:7:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1970,
                            "name": "_support",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1949,
                            "src": "4199:8:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 1971,
                            "name": "_justification",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1951,
                            "src": "4225:14:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 1972,
                            "name": "_signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1953,
                            "src": "4257:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c2b3aa089091839f7325bab8b8ed1dd8ad38b8c301fe29f7fcd75b4947c433c7",
                              "typeString": "literal_string \"VoteProposal(uint256,bool,string,bytes)\""
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 1966,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "4073:3:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1967,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "4073:23:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 1973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4073:208:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 1964,
                        "name": "CLLGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1957,
                        "src": "4033:13:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1965,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "4033:26:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 1974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4033:258:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4008:283:50"
                },
                {
                  "condition": {
                    "id": 1977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "4306:14:50",
                    "subExpression": {
                      "id": 1976,
                      "name": "successDGTCLL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1963,
                      "src": "4307:13:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1980,
                  "nodeType": "IfStatement",
                  "src": "4302:232:50",
                  "trueBody": {
                    "id": 1979,
                    "nodeType": "Block",
                    "src": "4323:211:50",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "4346:178:50",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4364:22:50",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4381:4:50",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "4375:5:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4375:11:50"
                              },
                              "variables": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulTypedName",
                                  "src": "4368:3:50",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4403:28:50",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "returndatasize",
                                  "nodeType": "YulIdentifier",
                                  "src": "4415:14:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4415:16:50"
                              },
                              "variables": [
                                {
                                  "name": "size",
                                  "nodeType": "YulTypedName",
                                  "src": "4407:4:50",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "4463:3:50"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4468:1:50",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "4471:4:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "returndatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "4448:14:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4448:28:50"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4448:28:50"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "4500:3:50"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "4505:4:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "4493:6:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4493:17:50"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4493:17:50"
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [],
                        "id": 1978,
                        "nodeType": "InlineAssembly",
                        "src": "4337:187:50"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1945,
              "nodeType": "StructuredDocumentation",
              "src": "3434:275:50",
              "text": "@notice Used to vote a proposal\n @dev After vote the proposal automatically try to be executed\n @param _propId ID of the proposal, based on `arrProposals`\n @param _support True for accept, false to reject\n @param _justification About your vote"
            },
            "functionSelector": "c2b3aa08",
            "id": 1982,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "VoteProposal",
            "nameLocation": "3723:12:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1954,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1947,
                  "mutability": "mutable",
                  "name": "_propId",
                  "nameLocation": "3753:7:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 1982,
                  "src": "3745:15:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1946,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3745:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1949,
                  "mutability": "mutable",
                  "name": "_support",
                  "nameLocation": "3775:8:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 1982,
                  "src": "3770:13:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1948,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3770:4:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1951,
                  "mutability": "mutable",
                  "name": "_justification",
                  "nameLocation": "3807:14:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 1982,
                  "src": "3793:28:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1950,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3793:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1953,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "3844:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 1982,
                  "src": "3831:23:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1952,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3831:5:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3735:125:50"
            },
            "returnParameters": {
              "id": 1955,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3880:0:50"
            },
            "scope": 2502,
            "src": "3714:826:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2023,
              "nodeType": "Block",
              "src": "5241:759:50",
              "statements": [
                {
                  "assignments": [
                    2001
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2001,
                      "mutability": "mutable",
                      "name": "CLLGovernance",
                      "nameLocation": "5259:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2023,
                      "src": "5251:21:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2000,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5251:7:50",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2005,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2002,
                        "name": "CCLFACTORY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1073,
                        "src": "5275:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLFactory_$6634",
                          "typeString": "contract ICLFactory"
                        }
                      },
                      "id": 2003,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "CLLGovernance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6568,
                      "src": "5275:24:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 2004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5275:26:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5251:50:50"
                },
                {
                  "assignments": [
                    2007,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2007,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "5375:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2023,
                      "src": "5370:18:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2006,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5370:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "documentation": "@custom:oz-upgrades-unsafe-allow delegatecall",
                  "id": 2021,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f70496e766974655573657228616464726573732c737472696e672c737472696e672c626f6f6c2c75696e743235362c627974657329",
                            "id": 2012,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5476:58:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_31a0afa7f676c8f7b485e9d34a7076717af4b3943f1bb7f40d38feb26e5c6635",
                              "typeString": "literal_string \"PropInviteUser(address,string,string,bool,uint256,bytes)\""
                            },
                            "value": "PropInviteUser(address,string,string,bool,uint256,bytes)"
                          },
                          {
                            "id": 2013,
                            "name": "_walletAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1985,
                            "src": "5552:11:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2014,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1987,
                            "src": "5581:5:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 2015,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1989,
                            "src": "5604:12:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 2016,
                            "name": "_isManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1991,
                            "src": "5634:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 2017,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1993,
                            "src": "5662:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 2018,
                            "name": "_signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1995,
                            "src": "5690:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_31a0afa7f676c8f7b485e9d34a7076717af4b3943f1bb7f40d38feb26e5c6635",
                              "typeString": "literal_string \"PropInviteUser(address,string,string,bool,uint256,bytes)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 2010,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5434:3:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "5434:23:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 2019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5434:280:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 2008,
                        "name": "CLLGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2001,
                        "src": "5394:13:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 2009,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "5394:26:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 2020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5394:330:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5369:355:50"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "5744:250:50",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "5758:22:50",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5775:4:50",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "5769:5:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5769:11:50"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "5762:3:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "5793:28:50",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "5805:14:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5805:16:50"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "5797:4:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "5849:3:50"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5854:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "5857:4:50"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "5834:14:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5834:28:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5834:28:50"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5902:49:50",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "5927:3:50"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "5932:4:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "5920:6:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5920:17:50"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5920:17:50"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "5886:13:50"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "5878:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5878:23:50"
                        },
                        "nodeType": "YulIf",
                        "src": "5875:76:50"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "5964:20:50",
                        "value": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "5980:3:50"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "5974:5:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5974:10:50"
                        },
                        "variableNames": [
                          {
                            "name": "propId",
                            "nodeType": "YulIdentifier",
                            "src": "5964:6:50"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 1998,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "5964:6:50",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2007,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "5886:13:50",
                      "valueSize": 1
                    }
                  ],
                  "id": 2022,
                  "nodeType": "InlineAssembly",
                  "src": "5735:259:50"
                }
              ]
            },
            "documentation": {
              "id": 1983,
              "nodeType": "StructuredDocumentation",
              "src": "4546:425:50",
              "text": "@notice Generate a new proposal to invite a new user\n @dev the execution of this proposal only create an invitation \n @param _walletAddr  Address of the new user\n @param _name Can be the nickname or other reference to the User\n @param _description A text for the proposal\n @param _isManager True if is for a manager\n @return propId ID of the new proposal, based on `arrProposals`"
            },
            "functionSelector": "31a0afa7",
            "id": 2024,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropInviteUser",
            "nameLocation": "4985:14:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1996,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1985,
                  "mutability": "mutable",
                  "name": "_walletAddr",
                  "nameLocation": "5017:11:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2024,
                  "src": "5009:19:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1984,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5009:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1987,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "5052:5:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2024,
                  "src": "5038:19:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1986,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5038:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1989,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "5081:12:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2024,
                  "src": "5067:26:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1988,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5067:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1991,
                  "mutability": "mutable",
                  "name": "_isManager",
                  "nameLocation": "5108:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2024,
                  "src": "5103:15:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1990,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5103:4:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1993,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "5136:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2024,
                  "src": "5128:18:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1992,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5128:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1995,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "5169:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2024,
                  "src": "5156:23:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1994,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5156:5:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4999:186:50"
            },
            "returnParameters": {
              "id": 1999,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1998,
                  "mutability": "mutable",
                  "name": "propId",
                  "nameLocation": "5228:6:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2024,
                  "src": "5220:14:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1997,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5220:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5218:18:50"
            },
            "scope": 2502,
            "src": "4976:1024:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2059,
              "nodeType": "Block",
              "src": "6487:696:50",
              "statements": [
                {
                  "assignments": [
                    2039
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2039,
                      "mutability": "mutable",
                      "name": "CLLGovernance",
                      "nameLocation": "6505:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2059,
                      "src": "6497:21:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2038,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6497:7:50",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2043,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2040,
                        "name": "CCLFACTORY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1073,
                        "src": "6521:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLFactory_$6634",
                          "typeString": "contract ICLFactory"
                        }
                      },
                      "id": 2041,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "CLLGovernance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6568,
                      "src": "6521:24:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 2042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6521:26:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6497:50:50"
                },
                {
                  "assignments": [
                    2045,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2045,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "6621:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2059,
                      "src": "6616:18:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2044,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "6616:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "documentation": "@custom:oz-upgrades-unsafe-allow delegatecall",
                  "id": 2057,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f7052656d6f76655573657228616464726573732c737472696e672c75696e743235362c627974657329",
                            "id": 2050,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6722:46:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_2a57ef8465999602129e676b4a60c0623eb2cc91d38b1a125e7aae8223cea980",
                              "typeString": "literal_string \"PropRemoveUser(address,string,uint256,bytes)\""
                            },
                            "value": "PropRemoveUser(address,string,uint256,bytes)"
                          },
                          {
                            "id": 2051,
                            "name": "_walletAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2027,
                            "src": "6786:11:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2052,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2029,
                            "src": "6815:12:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 2053,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2031,
                            "src": "6845:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 2054,
                            "name": "_signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2033,
                            "src": "6873:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_2a57ef8465999602129e676b4a60c0623eb2cc91d38b1a125e7aae8223cea980",
                              "typeString": "literal_string \"PropRemoveUser(address,string,uint256,bytes)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 2048,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "6680:3:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2049,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "6680:23:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 2055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6680:217:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 2046,
                        "name": "CLLGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2039,
                        "src": "6640:13:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 2047,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "6640:26:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 2056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6640:267:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6615:292:50"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "6927:250:50",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "6941:22:50",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6958:4:50",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "6952:5:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6952:11:50"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "6945:3:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "6976:28:50",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "6988:14:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6988:16:50"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "6980:4:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "7032:3:50"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7037:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "7040:4:50"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "7017:14:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7017:28:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7017:28:50"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7085:49:50",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "7110:3:50"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "7115:4:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "7103:6:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7103:17:50"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7103:17:50"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "7069:13:50"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "7061:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7061:23:50"
                        },
                        "nodeType": "YulIf",
                        "src": "7058:76:50"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "7147:20:50",
                        "value": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "7163:3:50"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "7157:5:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7157:10:50"
                        },
                        "variableNames": [
                          {
                            "name": "propId",
                            "nodeType": "YulIdentifier",
                            "src": "7147:6:50"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 2036,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "7147:6:50",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2045,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "7069:13:50",
                      "valueSize": 1
                    }
                  ],
                  "id": 2058,
                  "nodeType": "InlineAssembly",
                  "src": "6918:259:50"
                }
              ]
            },
            "documentation": {
              "id": 2025,
              "nodeType": "StructuredDocumentation",
              "src": "6006:265:50",
              "text": "@notice Generate a new proposal for remove a user\n @dev The user can be a managaer\n @param _walletAddr user Address to be removed\n @param _description About the proposal\n @return propId ID of the new proposal, based on `arrProposals`"
            },
            "functionSelector": "2a57ef84",
            "id": 2060,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropRemoveUser",
            "nameLocation": "6285:14:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2034,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2027,
                  "mutability": "mutable",
                  "name": "_walletAddr",
                  "nameLocation": "6317:11:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2060,
                  "src": "6309:19:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2026,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6309:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2029,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "6352:12:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2060,
                  "src": "6338:26:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2028,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6338:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2031,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "6382:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2060,
                  "src": "6374:18:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2030,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6374:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2033,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "6415:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2060,
                  "src": "6402:23:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2032,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6402:5:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6299:132:50"
            },
            "returnParameters": {
              "id": 2037,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2036,
                  "mutability": "mutable",
                  "name": "propId",
                  "nameLocation": "6474:6:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2060,
                  "src": "6466:14:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2035,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6466:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6464:18:50"
            },
            "scope": 2502,
            "src": "6276:907:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2095,
              "nodeType": "Block",
              "src": "7724:688:50",
              "statements": [
                {
                  "assignments": [
                    2075
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2075,
                      "mutability": "mutable",
                      "name": "CLLGovernance",
                      "nameLocation": "7742:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2095,
                      "src": "7734:21:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2074,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7734:7:50",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2079,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2076,
                        "name": "CCLFACTORY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1073,
                        "src": "7758:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLFactory_$6634",
                          "typeString": "contract ICLFactory"
                        }
                      },
                      "id": 2077,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "CLLGovernance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6568,
                      "src": "7758:24:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 2078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7758:26:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7734:50:50"
                },
                {
                  "assignments": [
                    2081,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2081,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "7858:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2095,
                      "src": "7853:18:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2080,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7853:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "documentation": "@custom:oz-upgrades-unsafe-allow delegatecall",
                  "id": 2093,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f70547857656928616464726573732c75696e743235362c737472696e672c75696e7432353629",
                            "id": 2086,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7959:43:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_7c6385482cc50c34905baf4b5888e8798c5594a0a2bf4d252265bc9209354799",
                              "typeString": "literal_string \"PropTxWei(address,uint256,string,uint256)\""
                            },
                            "value": "PropTxWei(address,uint256,string,uint256)"
                          },
                          {
                            "id": 2087,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2063,
                            "src": "8020:3:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2088,
                            "name": "_amountOutCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2065,
                            "src": "8041:13:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 2089,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2067,
                            "src": "8072:12:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 2090,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2069,
                            "src": "8102:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_7c6385482cc50c34905baf4b5888e8798c5594a0a2bf4d252265bc9209354799",
                              "typeString": "literal_string \"PropTxWei(address,uint256,string,uint256)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2084,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7917:3:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "7917:23:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 2091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7917:209:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 2082,
                        "name": "CLLGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2075,
                        "src": "7877:13:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 2083,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "7877:26:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 2092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7877:259:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7852:284:50"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "8156:250:50",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "8170:22:50",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8187:4:50",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "8181:5:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8181:11:50"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "8174:3:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "8205:28:50",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "8217:14:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8217:16:50"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "8209:4:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "8261:3:50"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8266:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "8269:4:50"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "8246:14:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8246:28:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8246:28:50"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8314:49:50",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "8339:3:50"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "8344:4:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "8332:6:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8332:17:50"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8332:17:50"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "8298:13:50"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "8290:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8290:23:50"
                        },
                        "nodeType": "YulIf",
                        "src": "8287:76:50"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "8376:20:50",
                        "value": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "8392:3:50"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "8386:5:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8386:10:50"
                        },
                        "variableNames": [
                          {
                            "name": "propId",
                            "nodeType": "YulIdentifier",
                            "src": "8376:6:50"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 2072,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "8376:6:50",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2081,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "8298:13:50",
                      "valueSize": 1
                    }
                  ],
                  "id": 2094,
                  "nodeType": "InlineAssembly",
                  "src": "8147:259:50"
                }
              ]
            },
            "documentation": {
              "id": 2061,
              "nodeType": "StructuredDocumentation",
              "src": "7189:334:50",
              "text": "@notice generate a new proposal to transfer ETH in weis\n @dev When execute this proposal, the transfer is made\n @param _to Recipient address\n @param _amountOutCLV Amount to transfer (in wei)\n @param _description About this proposal\n @return propId ID of the new proposal, based on `arrProposals`"
            },
            "functionSelector": "7c638548",
            "id": 2096,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropTxWei",
            "nameLocation": "7537:9:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2070,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2063,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "7564:3:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2096,
                  "src": "7556:11:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2062,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7556:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2065,
                  "mutability": "mutable",
                  "name": "_amountOutCLV",
                  "nameLocation": "7585:13:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2096,
                  "src": "7577:21:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2064,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7577:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2067,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "7622:12:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2096,
                  "src": "7608:26:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2066,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7608:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2069,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "7652:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2096,
                  "src": "7644:18:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2068,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7644:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7546:122:50"
            },
            "returnParameters": {
              "id": 2073,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2072,
                  "mutability": "mutable",
                  "name": "propId",
                  "nameLocation": "7711:6:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2096,
                  "src": "7703:14:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2071,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7703:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7701:18:50"
            },
            "scope": 2502,
            "src": "7528:884:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2134,
              "nodeType": "Block",
              "src": "8985:728:50",
              "statements": [
                {
                  "assignments": [
                    2113
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2113,
                      "mutability": "mutable",
                      "name": "CLLGovernance",
                      "nameLocation": "9003:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2134,
                      "src": "8995:21:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2112,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8995:7:50",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2117,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2114,
                        "name": "CCLFACTORY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1073,
                        "src": "9019:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLFactory_$6634",
                          "typeString": "contract ICLFactory"
                        }
                      },
                      "id": 2115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "CLLGovernance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6568,
                      "src": "9019:24:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 2116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9019:26:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8995:50:50"
                },
                {
                  "assignments": [
                    2119,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2119,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "9119:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2134,
                      "src": "9114:18:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2118,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "9114:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "documentation": "@custom:oz-upgrades-unsafe-allow delegatecall",
                  "id": 2132,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f705478455243323028616464726573732c75696e743235362c616464726573732c737472696e672c75696e7432353629",
                            "id": 2124,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9220:53:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_de5ab14ee76e872eb390c8f0942b0cbe9e6de8609dea31f21b3c6b5cdfc0a34b",
                              "typeString": "literal_string \"PropTxERC20(address,uint256,address,string,uint256)\""
                            },
                            "value": "PropTxERC20(address,uint256,address,string,uint256)"
                          },
                          {
                            "id": 2125,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2099,
                            "src": "9291:3:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2126,
                            "name": "_amountOutCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2101,
                            "src": "9312:13:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 2127,
                            "name": "_tokenOutCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2103,
                            "src": "9343:12:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2128,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2105,
                            "src": "9373:12:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 2129,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2107,
                            "src": "9403:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_de5ab14ee76e872eb390c8f0942b0cbe9e6de8609dea31f21b3c6b5cdfc0a34b",
                              "typeString": "literal_string \"PropTxERC20(address,uint256,address,string,uint256)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2122,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "9178:3:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "9178:23:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 2130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9178:249:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 2120,
                        "name": "CLLGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2113,
                        "src": "9138:13:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 2121,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "9138:26:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 2131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9138:299:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9113:324:50"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "9457:250:50",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "9471:22:50",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9488:4:50",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "9482:5:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9482:11:50"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "9475:3:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "9506:28:50",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "9518:14:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9518:16:50"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "9510:4:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "9562:3:50"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9567:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "9570:4:50"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "9547:14:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9547:28:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9547:28:50"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9615:49:50",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "9640:3:50"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "9645:4:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "9633:6:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9633:17:50"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9633:17:50"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "9599:13:50"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "9591:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9591:23:50"
                        },
                        "nodeType": "YulIf",
                        "src": "9588:76:50"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "9677:20:50",
                        "value": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "9693:3:50"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "9687:5:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9687:10:50"
                        },
                        "variableNames": [
                          {
                            "name": "propId",
                            "nodeType": "YulIdentifier",
                            "src": "9677:6:50"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 2110,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "9677:6:50",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2119,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "9599:13:50",
                      "valueSize": 1
                    }
                  ],
                  "id": 2133,
                  "nodeType": "InlineAssembly",
                  "src": "9448:259:50"
                }
              ]
            },
            "documentation": {
              "id": 2097,
              "nodeType": "StructuredDocumentation",
              "src": "8418:334:50",
              "text": "@notice generate a new proposal to transfer ETH in weis\n @dev When execute this proposal, the transfer is made\n @param _to Recipient address\n @param _amountOutCLV Amount to transfer (in wei)\n @param _description About this proposal\n @return propId ID of the new proposal, based on `arrProposals`"
            },
            "functionSelector": "de5ab14e",
            "id": 2135,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropTxERC20",
            "nameLocation": "8766:11:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2099,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "8795:3:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2135,
                  "src": "8787:11:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2098,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8787:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2101,
                  "mutability": "mutable",
                  "name": "_amountOutCLV",
                  "nameLocation": "8816:13:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2135,
                  "src": "8808:21:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2100,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8808:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2103,
                  "mutability": "mutable",
                  "name": "_tokenOutCLV",
                  "nameLocation": "8847:12:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2135,
                  "src": "8839:20:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2102,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8839:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2105,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "8883:12:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2135,
                  "src": "8869:26:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2104,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8869:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2107,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "8913:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2135,
                  "src": "8905:18:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2106,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8905:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8777:152:50"
            },
            "returnParameters": {
              "id": 2111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2110,
                  "mutability": "mutable",
                  "name": "propId",
                  "nameLocation": "8972:6:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2135,
                  "src": "8964:14:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2109,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8964:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8962:18:50"
            },
            "scope": 2502,
            "src": "8757:956:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2167,
              "nodeType": "Block",
              "src": "10259:669:50",
              "statements": [
                {
                  "assignments": [
                    2148
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2148,
                      "mutability": "mutable",
                      "name": "CLLGovernance",
                      "nameLocation": "10277:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2167,
                      "src": "10269:21:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2147,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10269:7:50",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2152,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2149,
                        "name": "CCLFACTORY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1073,
                        "src": "10293:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLFactory_$6634",
                          "typeString": "contract ICLFactory"
                        }
                      },
                      "id": 2150,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "CLLGovernance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6568,
                      "src": "10293:24:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 2151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10293:26:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10269:50:50"
                },
                {
                  "assignments": [
                    2154,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2154,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "10393:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2167,
                      "src": "10388:18:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2153,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "10388:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "documentation": "@custom:oz-upgrades-unsafe-allow delegatecall",
                  "id": 2165,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f70476f7652756c65732875696e743235362c737472696e672c75696e7432353629",
                            "id": 2159,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10494:38:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_5de58f607a95103acd560c40247e4019876e7711f6d7e22c71e036f549ba4c67",
                              "typeString": "literal_string \"PropGovRules(uint256,string,uint256)\""
                            },
                            "value": "PropGovRules(uint256,string,uint256)"
                          },
                          {
                            "id": 2160,
                            "name": "_newApprovPercentage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2138,
                            "src": "10550:20:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 2161,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2140,
                            "src": "10588:12:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 2162,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2142,
                            "src": "10618:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_5de58f607a95103acd560c40247e4019876e7711f6d7e22c71e036f549ba4c67",
                              "typeString": "literal_string \"PropGovRules(uint256,string,uint256)\""
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2157,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "10452:3:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2158,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "10452:23:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 2163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10452:190:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 2155,
                        "name": "CLLGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2148,
                        "src": "10412:13:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 2156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "10412:26:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 2164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10412:240:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10387:265:50"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "10672:250:50",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "10686:22:50",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10703:4:50",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "10697:5:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10697:11:50"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "10690:3:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "10721:28:50",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "10733:14:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10733:16:50"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "10725:4:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "10777:3:50"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10782:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "10785:4:50"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "10762:14:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10762:28:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10762:28:50"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10830:49:50",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "10855:3:50"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "10860:4:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "10848:6:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10848:17:50"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10848:17:50"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "10814:13:50"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "10806:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10806:23:50"
                        },
                        "nodeType": "YulIf",
                        "src": "10803:76:50"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "10892:20:50",
                        "value": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "10908:3:50"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "10902:5:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10902:10:50"
                        },
                        "variableNames": [
                          {
                            "name": "propId",
                            "nodeType": "YulIdentifier",
                            "src": "10892:6:50"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 2145,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "10892:6:50",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2154,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "10814:13:50",
                      "valueSize": 1
                    }
                  ],
                  "id": 2166,
                  "nodeType": "InlineAssembly",
                  "src": "10663:259:50"
                }
              ]
            },
            "documentation": {
              "id": 2136,
              "nodeType": "StructuredDocumentation",
              "src": "9719:350:50",
              "text": "@notice Generate a new proposal for change some governance parameters\n @dev When execute this proposal the new values will be set\n @param _newApprovPercentage The new percentaje for accept or reject a proposal\n @param _description About the new proposal \n @return propId ID of the new proposal, based on `arrProposals`"
            },
            "functionSelector": "5de58f60",
            "id": 2168,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropGovRules",
            "nameLocation": "10083:12:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2138,
                  "mutability": "mutable",
                  "name": "_newApprovPercentage",
                  "nameLocation": "10113:20:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2168,
                  "src": "10105:28:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2137,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10105:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2140,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "10157:12:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2168,
                  "src": "10143:26:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2139,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10143:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2142,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "10187:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2168,
                  "src": "10179:18:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2141,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10179:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10095:108:50"
            },
            "returnParameters": {
              "id": 2146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2145,
                  "mutability": "mutable",
                  "name": "propId",
                  "nameLocation": "10246:6:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2168,
                  "src": "10238:14:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2144,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10238:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10236:18:50"
            },
            "scope": 2502,
            "src": "10074:854:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2203,
              "nodeType": "Block",
              "src": "11513:692:50",
              "statements": [
                {
                  "assignments": [
                    2183
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2183,
                      "mutability": "mutable",
                      "name": "CLLGovernance",
                      "nameLocation": "11531:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2203,
                      "src": "11523:21:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2182,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11523:7:50",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2187,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2184,
                        "name": "CCLFACTORY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1073,
                        "src": "11547:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLFactory_$6634",
                          "typeString": "contract ICLFactory"
                        }
                      },
                      "id": 2185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "CLLGovernance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6568,
                      "src": "11547:24:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 2186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11547:26:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11523:50:50"
                },
                {
                  "assignments": [
                    2189,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2189,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "11647:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2203,
                      "src": "11642:18:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2188,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "11642:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "documentation": "@custom:oz-upgrades-unsafe-allow delegatecall",
                  "id": 2201,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f7052657175657374546f4a6f696e28737472696e672c737472696e672c616464726573732c627974657329",
                            "id": 2194,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11748:48:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_12eab7ff6fe9f7f416b2dc702860595ffaeb66e553c2189821311594c7635b73",
                              "typeString": "literal_string \"PropRequestToJoin(string,string,address,bytes)\""
                            },
                            "value": "PropRequestToJoin(string,string,address,bytes)"
                          },
                          {
                            "id": 2195,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2171,
                            "src": "11814:5:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 2196,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2173,
                            "src": "11837:12:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 2197,
                            "name": "_signerWallet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2175,
                            "src": "11867:13:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2198,
                            "name": "_signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2177,
                            "src": "11898:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_12eab7ff6fe9f7f416b2dc702860595ffaeb66e553c2189821311594c7635b73",
                              "typeString": "literal_string \"PropRequestToJoin(string,string,address,bytes)\""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 2192,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "11706:3:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "11706:23:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 2199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11706:216:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 2190,
                        "name": "CLLGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2183,
                        "src": "11666:13:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 2191,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "11666:26:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 2200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11666:266:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11641:291:50"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "11952:247:50",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "11966:22:50",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11983:4:50",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "11977:5:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11977:11:50"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "11970:3:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "12001:28:50",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "12013:14:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12013:16:50"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "12005:4:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "12057:3:50"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12062:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "12065:4:50"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "12042:14:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12042:28:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12042:28:50"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12110:49:50",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "12135:3:50"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "12140:4:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "12128:6:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12128:17:50"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12128:17:50"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "12094:13:50"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "12086:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12086:23:50"
                        },
                        "nodeType": "YulIf",
                        "src": "12083:76:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "12179:3:50"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "12184:4:50"
                            }
                          ],
                          "functionName": {
                            "name": "return",
                            "nodeType": "YulIdentifier",
                            "src": "12172:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12172:17:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12172:17:50"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 2189,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "12094:13:50",
                      "valueSize": 1
                    }
                  ],
                  "id": 2202,
                  "nodeType": "InlineAssembly",
                  "src": "11943:256:50"
                }
              ]
            },
            "documentation": {
              "id": 2169,
              "nodeType": "StructuredDocumentation",
              "src": "10934:364:50",
              "text": "@notice Generate a proposal from a user that want to join to the CLH\n @dev Only avaiable in public CLH\n @param _name Nickname or other user identification\n @param _description About the request\n @param _signerWallet Address of signer to check OffChain signature\n @return propId ID of the new proposal, based on `arrProposals`"
            },
            "functionSelector": "12eab7ff",
            "id": 2204,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropRequestToJoin",
            "nameLocation": "11312:17:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2178,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2171,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "11353:5:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2204,
                  "src": "11339:19:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2170,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "11339:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2173,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "11382:12:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2204,
                  "src": "11368:26:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2172,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "11368:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2175,
                  "mutability": "mutable",
                  "name": "_signerWallet",
                  "nameLocation": "11412:13:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2204,
                  "src": "11404:21:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2174,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11404:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2177,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "11448:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2204,
                  "src": "11435:23:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2176,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11435:5:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11329:135:50"
            },
            "returnParameters": {
              "id": 2181,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2180,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2204,
                  "src": "11499:7:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2179,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11499:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11497:11:50"
            },
            "scope": 2502,
            "src": "11303:902:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2235,
              "nodeType": "Block",
              "src": "12447:613:50",
              "statements": [
                {
                  "assignments": [
                    2213
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2213,
                      "mutability": "mutable",
                      "name": "CLLUserManagement",
                      "nameLocation": "12465:17:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2235,
                      "src": "12457:25:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2212,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "12457:7:50",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2217,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2214,
                        "name": "CCLFACTORY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1073,
                        "src": "12485:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLFactory_$6634",
                          "typeString": "contract ICLFactory"
                        }
                      },
                      "id": 2215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "CLLUserManagement",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6563,
                      "src": "12485:28:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 2216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12485:30:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12457:58:50"
                },
                {
                  "assignments": [
                    2219,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2219,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "12589:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2235,
                      "src": "12584:18:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2218,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "12584:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "documentation": "@custom:oz-upgrades-unsafe-allow delegatecall",
                  "id": 2229,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "41636365707452656a656374496e7669746174696f6e28626f6f6c2c627974657329",
                            "id": 2224,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12694:36:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_81cf22d80f4ec7d62ace7f62bb20df069329fad76ea536d29d67fc68ae1b5019",
                              "typeString": "literal_string \"AcceptRejectInvitation(bool,bytes)\""
                            },
                            "value": "AcceptRejectInvitation(bool,bytes)"
                          },
                          {
                            "id": 2225,
                            "name": "_acceptance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2207,
                            "src": "12748:11:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 2226,
                            "name": "_signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2209,
                            "src": "12777:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_81cf22d80f4ec7d62ace7f62bb20df069329fad76ea536d29d67fc68ae1b5019",
                              "typeString": "literal_string \"AcceptRejectInvitation(bool,bytes)\""
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 2222,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "12652:3:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "12652:23:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 2227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12652:149:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 2220,
                        "name": "CLLUserManagement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2213,
                        "src": "12608:17:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 2221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "12608:30:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 2228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12608:203:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12583:228:50"
                },
                {
                  "condition": {
                    "id": 2231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "12826:14:50",
                    "subExpression": {
                      "id": 2230,
                      "name": "successDGTCLL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2219,
                      "src": "12827:13:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2234,
                  "nodeType": "IfStatement",
                  "src": "12822:232:50",
                  "trueBody": {
                    "id": 2233,
                    "nodeType": "Block",
                    "src": "12843:211:50",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "12866:178:50",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "12884:22:50",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12901:4:50",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "12895:5:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12895:11:50"
                              },
                              "variables": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulTypedName",
                                  "src": "12888:3:50",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "12923:28:50",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "returndatasize",
                                  "nodeType": "YulIdentifier",
                                  "src": "12935:14:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12935:16:50"
                              },
                              "variables": [
                                {
                                  "name": "size",
                                  "nodeType": "YulTypedName",
                                  "src": "12927:4:50",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "12983:3:50"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12988:1:50",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "12991:4:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "returndatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "12968:14:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12968:28:50"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12968:28:50"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "13020:3:50"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "13025:4:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "13013:6:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13013:17:50"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13013:17:50"
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [],
                        "id": 2232,
                        "nodeType": "InlineAssembly",
                        "src": "12857:187:50"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2205,
              "nodeType": "StructuredDocumentation",
              "src": "12211:113:50",
              "text": "@notice For an user that have an invitation pending\n @param _acceptance True for accept the invitation"
            },
            "functionSelector": "81cf22d8",
            "id": 2236,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "AcceptRejectInvitation",
            "nameLocation": "12338:22:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2210,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2207,
                  "mutability": "mutable",
                  "name": "_acceptance",
                  "nameLocation": "12375:11:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2236,
                  "src": "12370:16:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2206,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12370:4:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2209,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "12409:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2236,
                  "src": "12396:23:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2208,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12396:5:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12360:65:50"
            },
            "returnParameters": {
              "id": 2211,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12447:0:50"
            },
            "scope": 2502,
            "src": "12329:731:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2273,
              "nodeType": "Block",
              "src": "13297:735:50",
              "statements": [
                {
                  "assignments": [
                    2252
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2252,
                      "mutability": "mutable",
                      "name": "CLLGovernance",
                      "nameLocation": "13315:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2273,
                      "src": "13307:21:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2251,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "13307:7:50",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2256,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2253,
                        "name": "CCLFACTORY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1073,
                        "src": "13331:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLFactory_$6634",
                          "typeString": "contract ICLFactory"
                        }
                      },
                      "id": 2254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "CLLGovernance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6568,
                      "src": "13331:24:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 2255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13331:26:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13307:50:50"
                },
                {
                  "assignments": [
                    2258,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2258,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "13431:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2273,
                      "src": "13426:18:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2257,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "13426:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "documentation": "@custom:oz-upgrades-unsafe-allow delegatecall",
                  "id": 2271,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f7053776170455243323028616464726573732c616464726573732c75696e743235362c737472696e672c75696e7432353629",
                            "id": 2263,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13532:55:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_152de3b98ea86d627e1f008ef402ac90ecf10b8b7150905cf13cb40560733610",
                              "typeString": "literal_string \"PropSwapERC20(address,address,uint256,string,uint256)\""
                            },
                            "value": "PropSwapERC20(address,address,uint256,string,uint256)"
                          },
                          {
                            "id": 2264,
                            "name": "_tokenOutCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2238,
                            "src": "13605:12:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2265,
                            "name": "_tokenInCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2240,
                            "src": "13635:11:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2266,
                            "name": "_amountOutCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2242,
                            "src": "13664:13:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 2267,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2244,
                            "src": "13695:12:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 2268,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2246,
                            "src": "13725:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_152de3b98ea86d627e1f008ef402ac90ecf10b8b7150905cf13cb40560733610",
                              "typeString": "literal_string \"PropSwapERC20(address,address,uint256,string,uint256)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2261,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "13490:3:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "13490:23:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 2269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13490:259:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 2259,
                        "name": "CLLGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2252,
                        "src": "13450:13:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 2260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "13450:26:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 2270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13450:309:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13425:334:50"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "13779:247:50",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "13793:22:50",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13810:4:50",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "13804:5:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13804:11:50"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "13797:3:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "13828:28:50",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "13840:14:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13840:16:50"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "13832:4:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "13884:3:50"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13889:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "13892:4:50"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "13869:14:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13869:28:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13869:28:50"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13937:49:50",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "13962:3:50"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "13967:4:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "13955:6:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13955:17:50"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13955:17:50"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "13921:13:50"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "13913:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13913:23:50"
                        },
                        "nodeType": "YulIf",
                        "src": "13910:76:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "14006:3:50"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "14011:4:50"
                            }
                          ],
                          "functionName": {
                            "name": "return",
                            "nodeType": "YulIdentifier",
                            "src": "13999:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13999:17:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13999:17:50"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 2258,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "13921:13:50",
                      "valueSize": 1
                    }
                  ],
                  "id": 2272,
                  "nodeType": "InlineAssembly",
                  "src": "13770:256:50"
                }
              ]
            },
            "functionSelector": "152de3b9",
            "id": 2274,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropSwapERC20",
            "nameLocation": "13075:13:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2247,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2238,
                  "mutability": "mutable",
                  "name": "_tokenOutCLV",
                  "nameLocation": "13106:12:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2274,
                  "src": "13098:20:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2237,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13098:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2240,
                  "mutability": "mutable",
                  "name": "_tokenInCLV",
                  "nameLocation": "13136:11:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2274,
                  "src": "13128:19:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2239,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13128:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2242,
                  "mutability": "mutable",
                  "name": "_amountOutCLV",
                  "nameLocation": "13165:13:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2274,
                  "src": "13157:21:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2241,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13157:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2244,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "13202:12:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2274,
                  "src": "13188:26:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2243,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "13188:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2246,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "13232:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2274,
                  "src": "13224:18:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2245,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13224:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13088:160:50"
            },
            "returnParameters": {
              "id": 2250,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2249,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2274,
                  "src": "13283:7:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2248,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13283:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13281:11:50"
            },
            "scope": 2502,
            "src": "13066:966:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2308,
              "nodeType": "Block",
              "src": "14240:698:50",
              "statements": [
                {
                  "assignments": [
                    2288
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2288,
                      "mutability": "mutable",
                      "name": "CLLGovernance",
                      "nameLocation": "14258:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2308,
                      "src": "14250:21:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2287,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "14250:7:50",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2292,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2289,
                        "name": "CCLFACTORY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1073,
                        "src": "14274:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLFactory_$6634",
                          "typeString": "contract ICLFactory"
                        }
                      },
                      "id": 2290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "CLLGovernance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6568,
                      "src": "14274:24:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 2291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14274:26:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14250:50:50"
                },
                {
                  "assignments": [
                    2294,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2294,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "14374:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2308,
                      "src": "14369:18:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2293,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "14369:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "documentation": "@custom:oz-upgrades-unsafe-allow delegatecall",
                  "id": 2306,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f7053656c6c455243323028616464726573732c75696e743235362c737472696e672c75696e7432353629",
                            "id": 2299,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14475:47:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_04f17a9bb89b1e450e234a08e9c473746a395c39a699313d8ca6797b97b374af",
                              "typeString": "literal_string \"PropSellERC20(address,uint256,string,uint256)\""
                            },
                            "value": "PropSellERC20(address,uint256,string,uint256)"
                          },
                          {
                            "id": 2300,
                            "name": "_tokenOutCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2276,
                            "src": "14540:12:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2301,
                            "name": "_amountOutCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2278,
                            "src": "14570:13:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 2302,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2280,
                            "src": "14601:12:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 2303,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2282,
                            "src": "14631:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_04f17a9bb89b1e450e234a08e9c473746a395c39a699313d8ca6797b97b374af",
                              "typeString": "literal_string \"PropSellERC20(address,uint256,string,uint256)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2297,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "14433:3:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "14433:23:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 2304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14433:222:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 2295,
                        "name": "CLLGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2288,
                        "src": "14393:13:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 2296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "14393:26:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 2305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14393:272:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14368:297:50"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "14685:247:50",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "14699:22:50",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14716:4:50",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "14710:5:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14710:11:50"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "14703:3:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "14734:28:50",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "14746:14:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14746:16:50"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "14738:4:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "14790:3:50"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14795:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "14798:4:50"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "14775:14:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14775:28:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14775:28:50"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14843:49:50",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "14868:3:50"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "14873:4:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "14861:6:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14861:17:50"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14861:17:50"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "14827:13:50"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "14819:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14819:23:50"
                        },
                        "nodeType": "YulIf",
                        "src": "14816:76:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "14912:3:50"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "14917:4:50"
                            }
                          ],
                          "functionName": {
                            "name": "return",
                            "nodeType": "YulIdentifier",
                            "src": "14905:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14905:17:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14905:17:50"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 2294,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "14827:13:50",
                      "valueSize": 1
                    }
                  ],
                  "id": 2307,
                  "nodeType": "InlineAssembly",
                  "src": "14676:256:50"
                }
              ]
            },
            "functionSelector": "04f17a9b",
            "id": 2309,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropSellERC20",
            "nameLocation": "14047:13:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2283,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2276,
                  "mutability": "mutable",
                  "name": "_tokenOutCLV",
                  "nameLocation": "14078:12:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2309,
                  "src": "14070:20:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2275,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14070:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2278,
                  "mutability": "mutable",
                  "name": "_amountOutCLV",
                  "nameLocation": "14108:13:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2309,
                  "src": "14100:21:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2277,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14100:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2280,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "14145:12:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2309,
                  "src": "14131:26:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2279,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14131:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2282,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "14175:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2309,
                  "src": "14167:18:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2281,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14167:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14060:131:50"
            },
            "returnParameters": {
              "id": 2286,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2285,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2309,
                  "src": "14226:7:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2284,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14226:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14224:11:50"
            },
            "scope": 2502,
            "src": "14038:900:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2343,
              "nodeType": "Block",
              "src": "15144:696:50",
              "statements": [
                {
                  "assignments": [
                    2323
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2323,
                      "mutability": "mutable",
                      "name": "CLLGovernance",
                      "nameLocation": "15162:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2343,
                      "src": "15154:21:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2322,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "15154:7:50",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2327,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2324,
                        "name": "CCLFACTORY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1073,
                        "src": "15178:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLFactory_$6634",
                          "typeString": "contract ICLFactory"
                        }
                      },
                      "id": 2325,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "CLLGovernance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6568,
                      "src": "15178:24:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 2326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15178:26:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15154:50:50"
                },
                {
                  "assignments": [
                    2329,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2329,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "15278:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2343,
                      "src": "15273:18:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2328,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "15273:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "documentation": "@custom:oz-upgrades-unsafe-allow delegatecall",
                  "id": 2341,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f70427579455243323028616464726573732c75696e743235362c737472696e672c75696e7432353629",
                            "id": 2334,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15379:46:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_2266e1bc09a9739eac0cdf93a2f130fcaf0d67ad5f8d0909c155c6843375d27c",
                              "typeString": "literal_string \"PropBuyERC20(address,uint256,string,uint256)\""
                            },
                            "value": "PropBuyERC20(address,uint256,string,uint256)"
                          },
                          {
                            "id": 2335,
                            "name": "_tokenInCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2311,
                            "src": "15443:11:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2336,
                            "name": "_amountOutCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2313,
                            "src": "15472:13:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 2337,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2315,
                            "src": "15503:12:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 2338,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2317,
                            "src": "15533:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_2266e1bc09a9739eac0cdf93a2f130fcaf0d67ad5f8d0909c155c6843375d27c",
                              "typeString": "literal_string \"PropBuyERC20(address,uint256,string,uint256)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2332,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "15337:3:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "15337:23:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 2339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15337:220:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 2330,
                        "name": "CLLGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2323,
                        "src": "15297:13:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 2331,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "15297:26:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 2340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15297:270:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15272:295:50"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "15587:247:50",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "15601:22:50",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15618:4:50",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "15612:5:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15612:11:50"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "15605:3:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "15636:28:50",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "15648:14:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15648:16:50"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "15640:4:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "15692:3:50"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15697:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "15700:4:50"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "15677:14:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15677:28:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15677:28:50"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15745:49:50",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "15770:3:50"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "15775:4:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "15763:6:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15763:17:50"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15763:17:50"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "15729:13:50"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "15721:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15721:23:50"
                        },
                        "nodeType": "YulIf",
                        "src": "15718:76:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "15814:3:50"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "15819:4:50"
                            }
                          ],
                          "functionName": {
                            "name": "return",
                            "nodeType": "YulIdentifier",
                            "src": "15807:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15807:17:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15807:17:50"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 2329,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "15729:13:50",
                      "valueSize": 1
                    }
                  ],
                  "id": 2342,
                  "nodeType": "InlineAssembly",
                  "src": "15578:256:50"
                }
              ]
            },
            "functionSelector": "2266e1bc",
            "id": 2344,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropBuyERC20",
            "nameLocation": "14953:12:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2318,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2311,
                  "mutability": "mutable",
                  "name": "_tokenInCLV",
                  "nameLocation": "14983:11:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2344,
                  "src": "14975:19:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2310,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14975:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2313,
                  "mutability": "mutable",
                  "name": "_amountOutCLV",
                  "nameLocation": "15012:13:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2344,
                  "src": "15004:21:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2312,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15004:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2315,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "15049:12:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2344,
                  "src": "15035:26:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2314,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "15035:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2317,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "15079:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2344,
                  "src": "15071:18:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2316,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15071:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14965:130:50"
            },
            "returnParameters": {
              "id": 2321,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2320,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2344,
                  "src": "15130:7:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2319,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15130:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15128:11:50"
            },
            "scope": 2502,
            "src": "14944:896:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2378,
              "nodeType": "Block",
              "src": "16249:682:50",
              "statements": [
                {
                  "assignments": [
                    2358
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2358,
                      "mutability": "mutable",
                      "name": "CLLGovernance",
                      "nameLocation": "16267:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2378,
                      "src": "16259:21:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2357,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "16259:7:50",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2362,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2359,
                        "name": "CCLFACTORY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1073,
                        "src": "16283:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLFactory_$6634",
                          "typeString": "contract ICLFactory"
                        }
                      },
                      "id": 2360,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "CLLGovernance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6568,
                      "src": "16283:24:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 2361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16283:26:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16259:50:50"
                },
                {
                  "assignments": [
                    2364,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2364,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "16383:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2378,
                      "src": "16378:18:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2363,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "16378:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "documentation": "@custom:oz-upgrades-unsafe-allow delegatecall",
                  "id": 2376,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "62756c6b566f74652875696e743235365b5d2c626f6f6c2c737472696e672c627974657329",
                            "id": 2369,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16484:39:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_a1c89c9df67037900e8200fdeb8dc1c4034c53148e3fd96bb77dc63379bb6bcb",
                              "typeString": "literal_string \"bulkVote(uint256[],bool,string,bytes)\""
                            },
                            "value": "bulkVote(uint256[],bool,string,bytes)"
                          },
                          {
                            "id": 2370,
                            "name": "_propId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2348,
                            "src": "16541:7:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "id": 2371,
                            "name": "_support",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2350,
                            "src": "16566:8:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 2372,
                            "name": "_justification",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2352,
                            "src": "16592:14:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 2373,
                            "name": "_signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2354,
                            "src": "16624:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_a1c89c9df67037900e8200fdeb8dc1c4034c53148e3fd96bb77dc63379bb6bcb",
                              "typeString": "literal_string \"bulkVote(uint256[],bool,string,bytes)\""
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 2367,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "16442:3:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "16442:23:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 2374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16442:206:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 2365,
                        "name": "CLLGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2358,
                        "src": "16402:13:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 2366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "16402:26:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 2375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16402:256:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16377:281:50"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "16678:247:50",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "16692:22:50",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16709:4:50",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "16703:5:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16703:11:50"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "16696:3:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "16727:28:50",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "16739:14:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16739:16:50"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "16731:4:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "16783:3:50"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16788:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "16791:4:50"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "16768:14:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16768:28:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16768:28:50"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16836:49:50",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "16861:3:50"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "16866:4:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "16854:6:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16854:17:50"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16854:17:50"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "16820:13:50"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "16812:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16812:23:50"
                        },
                        "nodeType": "YulIf",
                        "src": "16809:76:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "16905:3:50"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "16910:4:50"
                            }
                          ],
                          "functionName": {
                            "name": "return",
                            "nodeType": "YulIdentifier",
                            "src": "16898:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16898:17:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16898:17:50"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 2364,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "16820:13:50",
                      "valueSize": 1
                    }
                  ],
                  "id": 2377,
                  "nodeType": "InlineAssembly",
                  "src": "16669:256:50"
                }
              ]
            },
            "documentation": {
              "id": 2345,
              "nodeType": "StructuredDocumentation",
              "src": "15847:224:50",
              "text": "@notice Vote for multiple proposal\n @param _propId Array with ID of the proposal to votes\n @param _support is the Vote (True or False) for all proposals\n @param _justification Description of the vote"
            },
            "functionSelector": "a1c89c9d",
            "id": 2379,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bulkVote",
            "nameLocation": "16085:8:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2355,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2348,
                  "mutability": "mutable",
                  "name": "_propId",
                  "nameLocation": "16120:7:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2379,
                  "src": "16103:24:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2346,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "16103:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2347,
                    "nodeType": "ArrayTypeName",
                    "src": "16103:9:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2350,
                  "mutability": "mutable",
                  "name": "_support",
                  "nameLocation": "16142:8:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2379,
                  "src": "16137:13:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2349,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "16137:4:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2352,
                  "mutability": "mutable",
                  "name": "_justification",
                  "nameLocation": "16174:14:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2379,
                  "src": "16160:28:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2351,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "16160:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2354,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "16211:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2379,
                  "src": "16198:23:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2353,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "16198:5:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16093:134:50"
            },
            "returnParameters": {
              "id": 2356,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16249:0:50"
            },
            "scope": 2502,
            "src": "16076:855:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2388,
              "nodeType": "Block",
              "src": "17039:39:50",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 2385,
                      "name": "arrUsers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1027,
                      "src": "17056:8:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_strUser_$9477_storage_$dyn_storage",
                        "typeString": "struct strUser storage ref[] storage ref"
                      }
                    },
                    "id": 2386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "17056:15:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2384,
                  "id": 2387,
                  "nodeType": "Return",
                  "src": "17049:22:50"
                }
              ]
            },
            "documentation": {
              "id": 2380,
              "nodeType": "StructuredDocumentation",
              "src": "16937:36:50",
              "text": "@notice Length of arrUsers array"
            },
            "functionSelector": "a693649a",
            "id": 2389,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetArrUsersLength",
            "nameLocation": "16987:17:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2381,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17004:2:50"
            },
            "returnParameters": {
              "id": 2384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2383,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2389,
                  "src": "17030:7:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2382,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17030:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17028:11:50"
            },
            "scope": 2502,
            "src": "16978:100:50",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2398,
              "nodeType": "Block",
              "src": "17194:43:50",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 2395,
                      "name": "arrProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1031,
                      "src": "17211:12:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_strProposal_$9497_storage_$dyn_storage",
                        "typeString": "struct strProposal storage ref[] storage ref"
                      }
                    },
                    "id": 2396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "17211:19:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2394,
                  "id": 2397,
                  "nodeType": "Return",
                  "src": "17204:26:50"
                }
              ]
            },
            "documentation": {
              "id": 2390,
              "nodeType": "StructuredDocumentation",
              "src": "17084:40:50",
              "text": "@notice Length of arrProposals array"
            },
            "functionSelector": "4e9d5472",
            "id": 2399,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetArrProposalsLength",
            "nameLocation": "17138:21:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2391,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17159:2:50"
            },
            "returnParameters": {
              "id": 2394,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2393,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2399,
                  "src": "17185:7:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2392,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17185:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17183:11:50"
            },
            "scope": 2502,
            "src": "17129:108:50",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2409,
              "nodeType": "Block",
              "src": "17416:36:50",
              "statements": [
                {
                  "expression": {
                    "id": 2407,
                    "name": "arrProposals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1031,
                    "src": "17433:12:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_strProposal_$9497_storage_$dyn_storage",
                      "typeString": "struct strProposal storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 2406,
                  "id": 2408,
                  "nodeType": "Return",
                  "src": "17426:19:50"
                }
              ]
            },
            "documentation": {
              "id": 2400,
              "nodeType": "StructuredDocumentation",
              "src": "17243:95:50",
              "text": "@notice The list of all Proposals\n @return arrProposals the array with all proposals"
            },
            "functionSelector": "b4c62192",
            "id": 2410,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetProposalList",
            "nameLocation": "17352:15:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2401,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17367:2:50"
            },
            "returnParameters": {
              "id": 2406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2405,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2410,
                  "src": "17393:20:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_strProposal_$9497_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct strProposal[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2403,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 2402,
                        "name": "strProposal",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 9497,
                        "src": "17393:11:50"
                      },
                      "referencedDeclaration": 9497,
                      "src": "17393:11:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_strProposal_$9497_storage_ptr",
                        "typeString": "struct strProposal"
                      }
                    },
                    "id": 2404,
                    "nodeType": "ArrayTypeName",
                    "src": "17393:13:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_strProposal_$9497_storage_$dyn_storage_ptr",
                      "typeString": "struct strProposal[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17391:24:50"
            },
            "scope": 2502,
            "src": "17343:109:50",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2420,
              "nodeType": "Block",
              "src": "17644:39:50",
              "statements": [
                {
                  "expression": {
                    "id": 2418,
                    "name": "arrDataPropUser",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1035,
                    "src": "17661:15:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_strDataUser_$9511_storage_$dyn_storage",
                      "typeString": "struct strDataUser storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 2417,
                  "id": 2419,
                  "nodeType": "Return",
                  "src": "17654:22:50"
                }
              ]
            },
            "documentation": {
              "id": 2411,
              "nodeType": "StructuredDocumentation",
              "src": "17458:105:50",
              "text": "@notice Get complete array of arrDataPropUser\n @return arrDataPropUser the array with all data"
            },
            "functionSelector": "29647ee5",
            "id": 2421,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetArrDataPropUser",
            "nameLocation": "17577:18:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2412,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17595:2:50"
            },
            "returnParameters": {
              "id": 2417,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2416,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2421,
                  "src": "17621:20:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_strDataUser_$9511_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct strDataUser[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2414,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 2413,
                        "name": "strDataUser",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 9511,
                        "src": "17621:11:50"
                      },
                      "referencedDeclaration": 9511,
                      "src": "17621:11:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_strDataUser_$9511_storage_ptr",
                        "typeString": "struct strDataUser"
                      }
                    },
                    "id": 2415,
                    "nodeType": "ArrayTypeName",
                    "src": "17621:13:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_strDataUser_$9511_storage_$dyn_storage_ptr",
                      "typeString": "struct strDataUser[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17619:24:50"
            },
            "scope": 2502,
            "src": "17568:115:50",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2428,
              "nodeType": "Block",
              "src": "17758:43:50",
              "statements": [
                {
                  "expression": {
                    "id": 2426,
                    "name": "__CLHOUSE_VERSION__",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9326,
                    "src": "17775:19:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 2425,
                  "id": 2427,
                  "nodeType": "Return",
                  "src": "17768:26:50"
                }
              ]
            },
            "functionSelector": "fe0298db",
            "id": 2429,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetCLHouseVersion",
            "nameLocation": "17698:17:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2422,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17715:2:50"
            },
            "returnParameters": {
              "id": 2425,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2424,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2429,
                  "src": "17742:13:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2423,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "17742:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17740:17:50"
            },
            "scope": 2502,
            "src": "17689:112:50",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2443,
              "nodeType": "Block",
              "src": "17873:83:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2435,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "17899:3:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "17899:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2434,
                      "name": "CheckIsManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1308,
                      "src": "17883:14:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                        "typeString": "function (address) view"
                      }
                    },
                    "id": 2437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17883:28:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2438,
                  "nodeType": "ExpressionStatement",
                  "src": "17883:28:50"
                },
                {
                  "expression": {
                    "id": 2441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2439,
                      "name": "whiteListNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1005,
                      "src": "17921:12:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2440,
                      "name": "_whiteListNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2431,
                      "src": "17936:13:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "17921:28:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2442,
                  "nodeType": "ExpressionStatement",
                  "src": "17921:28:50"
                }
              ]
            },
            "functionSelector": "840d30b4",
            "id": 2444,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SetWhitelistCollection",
            "nameLocation": "17816:22:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2432,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2431,
                  "mutability": "mutable",
                  "name": "_whiteListNFT",
                  "nameLocation": "17848:13:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2444,
                  "src": "17840:21:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2430,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17840:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17838:25:50"
            },
            "returnParameters": {
              "id": 2433,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17873:0:50"
            },
            "scope": 2502,
            "src": "17807:149:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2500,
              "nodeType": "Block",
              "src": "18188:545:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2458,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "18214:3:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "18214:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2457,
                      "name": "CheckIsManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1308,
                      "src": "18198:14:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                        "typeString": "function (address) view"
                      }
                    },
                    "id": 2460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18198:28:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2461,
                  "nodeType": "ExpressionStatement",
                  "src": "18198:28:50"
                },
                {
                  "assignments": [
                    2463
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2463,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "18249:6:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2500,
                      "src": "18236:19:50",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2462,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "18236:5:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2478,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "696e697469616c697a6528616464726573732c75696e743235362c616464726573732c75696e743235362c75696e743235362c737472696e6729",
                        "id": 2466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18295:60:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6eadde437099d0265e7165a15d81631ed9730315ed96ffeb677d29c93655bb57",
                          "typeString": "literal_string \"initialize(address,uint256,address,uint256,uint256,string)\""
                        },
                        "value": "initialize(address,uint256,address,uint256,uint256,string)"
                      },
                      {
                        "expression": {
                          "id": 2467,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "18369:3:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "18369:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2469,
                        "name": "_expirationDuration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2446,
                        "src": "18393:19:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2472,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18434:1:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18426:7:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2470,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18426:7:50",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18426:10:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2474,
                        "name": "_keyPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2448,
                        "src": "18450:9:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2475,
                        "name": "_maxNumberOfKeys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2450,
                        "src": "18473:16:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2476,
                        "name": "_lockName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2452,
                        "src": "18503:9:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_6eadde437099d0265e7165a15d81631ed9730315ed96ffeb677d29c93655bb57",
                          "typeString": "literal_string \"initialize(address,uint256,address,uint256,uint256,string)\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 2464,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "18258:3:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 2465,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "src": "18258:23:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 2477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18258:264:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18236:286:50"
                },
                {
                  "assignments": [
                    2480
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2480,
                      "mutability": "mutable",
                      "name": "aULF",
                      "nameLocation": "18541:4:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2500,
                      "src": "18533:12:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2479,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "18533:7:50",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2482,
                  "initialValue": {
                    "hexValue": "307836323731313861346642373437303136393131653563444138326532453737433533316538323036",
                    "id": 2481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "18548:42:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "value": "0x627118a4fB747016911e5cDA82e2E77C531e8206"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18533:57:50"
                },
                {
                  "assignments": [
                    2485
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2485,
                      "mutability": "mutable",
                      "name": "iULF",
                      "nameLocation": "18609:4:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2500,
                      "src": "18601:12:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUnlock_$7438",
                        "typeString": "contract IUnlock"
                      },
                      "typeName": {
                        "id": 2484,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2483,
                          "name": "IUnlock",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 7438,
                          "src": "18601:7:50"
                        },
                        "referencedDeclaration": 7438,
                        "src": "18601:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUnlock_$7438",
                          "typeString": "contract IUnlock"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2489,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2487,
                        "name": "aULF",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2480,
                        "src": "18625:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2486,
                      "name": "IUnlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7438,
                      "src": "18616:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IUnlock_$7438_$",
                        "typeString": "type(contract IUnlock)"
                      }
                    },
                    "id": 2488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18616:15:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUnlock_$7438",
                      "typeString": "contract IUnlock"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18601:30:50"
                },
                {
                  "expression": {
                    "id": 2496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2490,
                      "name": "CLHLOCK",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1007,
                      "src": "18642:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2493,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2463,
                          "src": "18689:6:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        {
                          "hexValue": "3131",
                          "id": 2494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18697:2:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_11_by_1",
                            "typeString": "int_const 11"
                          },
                          "value": "11"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_rational_11_by_1",
                            "typeString": "int_const 11"
                          }
                        ],
                        "expression": {
                          "id": 2491,
                          "name": "iULF",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2485,
                          "src": "18652:4:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUnlock_$7438",
                            "typeString": "contract IUnlock"
                          }
                        },
                        "id": 2492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "createUpgradeableLockAtVersion",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7219,
                        "src": "18652:35:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_uint16_$returns$_t_address_$",
                          "typeString": "function (bytes memory,uint16) external returns (address)"
                        }
                      },
                      "id": 2495,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18652:49:50",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "18642:59:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2497,
                  "nodeType": "ExpressionStatement",
                  "src": "18642:59:50"
                },
                {
                  "expression": {
                    "id": 2498,
                    "name": "CLHLOCK",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1007,
                    "src": "18719:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2456,
                  "id": 2499,
                  "nodeType": "Return",
                  "src": "18712:14:50"
                }
              ]
            },
            "functionSelector": "79c26fa4",
            "id": 2501,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "CreateLock",
            "nameLocation": "17971:10:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2453,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2446,
                  "mutability": "mutable",
                  "name": "_expirationDuration",
                  "nameLocation": "17999:19:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2501,
                  "src": "17991:27:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2445,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17991:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2448,
                  "mutability": "mutable",
                  "name": "_keyPrice",
                  "nameLocation": "18036:9:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2501,
                  "src": "18028:17:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2447,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18028:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2450,
                  "mutability": "mutable",
                  "name": "_maxNumberOfKeys",
                  "nameLocation": "18063:16:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2501,
                  "src": "18055:24:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2449,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18055:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2452,
                  "mutability": "mutable",
                  "name": "_lockName",
                  "nameLocation": "18103:9:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2501,
                  "src": "18089:23:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2451,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "18089:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17981:137:50"
            },
            "returnParameters": {
              "id": 2456,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2455,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2501,
                  "src": "18166:7:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2454,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18166:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18152:31:50"
            },
            "scope": 2502,
            "src": "17962:771:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2503,
        "src": "366:18369:50",
        "usedErrors": []
      }
    ],
    "src": "32:18703:50"
  },
  "bytecode": "60806040523480156200001157600080fd5b506200001c62000022565b620000f1565b60c554600160a81b900460ff1615620000915760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60c55460ff600160a01b90910481161015620000ef5760c5805460ff60a01b191660ff60a01b17905560405160ff81527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b612f4c80620001016000396000f3fe608060405234801561001057600080fd5b50600436106102a05760003560e01c80636c2f34e711610167578063b4c62192116100ce578063cb85669c11610087578063cb85669c1461065e578063de5ab14e14610686578063e68777d714610699578063e810a58e146106a2578063f00d6274146106ab578063fe0298db146106b857600080fd5b8063b4c62192146105a8578063baa4d5e9146105bd578063bf97e2da14610603578063c2b3aa0814610616578063c347d2fd14610629578063cada7f191461064b57600080fd5b8063860228fd11610120578063860228fd1461053e5780639360bfad1461055e5780639c630a8814610571578063a0a625f91461057a578063a1c89c9d1461058d578063a693649a146105a057600080fd5b80636c2f34e7146104bd57806370ff918c146104d057806379c26fa4146104f05780637c6385481461050357806381cf22d814610516578063840d30b41461052b57600080fd5b806322b4081c1161020b5780634e9d5472116101c45780634e9d54721461043957806350f7308a1461044157806359ca2d03146104615780635de58f60146104765780635f3d99b3146104895780636285e98c146104aa57600080fd5b806322b4081c146103b457806329647ee5146103d85780632a57ef84146103ed57806331a0afa7146104005780633a70693d146104135780633ed02fc41461042657600080fd5b80631707ace81161025d5780631707ace81461033857806319a50f491461035a5780631d5fd3ca146103635780631f2e13391461036c5780631f50dd271461038e5780632266e1bc146103a157600080fd5b806304f17a9b146102a5578063052f9b0a146102cb57806310790717146102f657806312eab7ff146103095780631343e9a51461031c578063152de3b914610325575b600080fd5b6102b86102b3366004612013565b6106d9565b6040519081526020015b60405180910390f35b60c4546102de906001600160a01b031681565b6040516001600160a01b0390911681526020016102c2565b6022546102de906001600160a01b031681565b6102b8610317366004612073565b610807565b6102b860055481565b6102b861033336600461210f565b6108db565b61034b610346366004612182565b6109b1565b6040516102c2939291906121f3565b6102b860025481565b6102b860625481565b60005461037e90610100900460ff1681565b60405190151581526020016102c2565b60c5546102de906001600160a01b031681565b6102b86103af366004612013565b610a7c565b6103c76103c2366004612182565b610b50565b6040516102c2959493929190612229565b6103e0610c2b565b6040516102c2919061226c565b6102b86103fb3660046122fa565b610d44565b6102b861040e366004612375565b610e7b565b6102b8610421366004612182565b610fb8565b6025546102de906001600160a01b031681565b6083546102b8565b6102b861044f366004612428565b60a36020526000908152604090205481565b610469610fd9565b6040516102c2919061244c565b6102b861048436600461245f565b611067565b61049c610497366004612182565b61119b565b6040516102c29291906124ae565b6024546102de906001600160a01b031681565b60c2546102de906001600160a01b031681565b6102b86104de366004612428565b60a26020526000908152604090205481565b6102de6104fe3660046124d1565b611307565b6102b8610511366004612013565b611407565b61052961052436600461251e565b6114db565b005b610529610539366004612428565b6115fb565b6102b861054c366004612428565b60a46020526000908152604090205481565b60c3546102de906001600160a01b031681565b6102b860045481565b60c1546102de906001600160a01b031681565b61052961059b36600461258e565b611626565b6082546102b8565b6105b06116ee565b6040516102c291906126a2565b6105d06105cb366004612182565b61186c565b604080516001600160a01b03958616815260208101949094529184169183019190915290911660608201526080016102c2565b61052961061136600461284e565b6118b4565b610529610624366004612951565b611a77565b61063c610637366004612993565b611b9d565b6040516102c2939291906129c3565b6023546102de906001600160a01b031681565b61067161066c366004612182565b611c5a565b6040516102c2999897969594939291906129ef565b6102b8610694366004612a56565b611d53565b6102b860035481565b6102b860065481565b60005461037e9060ff1681565b604080518082019091526005815264302e312e3160d81b6020820152610469565b60008060c160009054906101000a90046001600160a01b03166001600160a01b031663a327ab696040518163ffffffff1660e01b8152600401602060405180830381865afa15801561072f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107539190612aab565b90506000816001600160a01b0316878787876040516024016107789493929190612ac8565b60408051601f198184030181529181526020820180516001600160e01b03166304f17a9b60e01b179052516107ad9190612b00565b600060405180830381855af49150503d80600081146107e8576040519150601f19603f3d011682016040523d82523d6000602084013e6107ed565b606091505b505090506040513d806000833e82610803578082fd5b8082f35b60008060c160009054906101000a90046001600160a01b03166001600160a01b031663a327ab696040518163ffffffff1660e01b8152600401602060405180830381865afa15801561085d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108819190612aab565b90506000816001600160a01b0316878787876040516024016108a69493929190612b1c565b60408051601f198184030181529181526020820180516001600160e01b03166312eab7ff60e01b179052516107ad9190612b00565b60008060c160009054906101000a90046001600160a01b03166001600160a01b031663a327ab696040518163ffffffff1660e01b8152600401602060405180830381865afa158015610931573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109559190612aab565b90506000816001600160a01b0316888888888860405160240161097c959493929190612b6f565b60408051601f198184030181529181526020820180516001600160e01b031663152de3b960e01b179052516107ad9190612b00565b608481815481106109c157600080fd5b6000918252602090912060039091020180546001820180546001600160a01b039092169350906109f090612bb4565b80601f0160208091040260200160405190810160405280929190818152602001828054610a1c90612bb4565b8015610a695780601f10610a3e57610100808354040283529160200191610a69565b820191906000526020600020905b815481529060010190602001808311610a4c57829003601f168201915b5050506002909301549192505060ff1683565b60008060c160009054906101000a90046001600160a01b03166001600160a01b031663a327ab696040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ad2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af69190612aab565b90506000816001600160a01b031687878787604051602401610b1b9493929190612ac8565b60408051601f198184030181529181526020820180516001600160e01b0316630899b86f60e21b179052516107ad9190612b00565b60828181548110610b6057600080fd5b6000918252602090912060049091020180546001820180546001600160a01b03909216935090610b8f90612bb4565b80601f0160208091040260200160405190810160405280929190818152602001828054610bbb90612bb4565b8015610c085780601f10610bdd57610100808354040283529160200191610c08565b820191906000526020600020905b815481529060010190602001808311610beb57829003601f168201915b50505050600283015460039093015491929160ff80821692506101009091041685565b60606084805480602002602001604051908101604052809291908181526020016000905b82821015610d3b57600084815260209081902060408051606081019091526003850290910180546001600160a01b031682526001810180549293919291840191610c9890612bb4565b80601f0160208091040260200160405190810160405280929190818152602001828054610cc490612bb4565b8015610d115780601f10610ce657610100808354040283529160200191610d11565b820191906000526020600020905b815481529060010190602001808311610cf457829003601f168201915b50505091835250506002919091015460ff1615156020918201529082526001929092019101610c4f565b50505050905090565b60008060c160009054906101000a90046001600160a01b03166001600160a01b031663a327ab696040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dbe9190612aab565b90506000816001600160a01b031687878787604051602401610de39493929190612bef565b60408051601f198184030181529181526020820180516001600160e01b0316630a95fbe160e21b17905251610e189190612b00565b600060405180830381855af49150503d8060008114610e53576040519150601f19603f3d011682016040523d82523d6000602084013e610e58565b606091505b505090506040513d806000833e82610e6e578082fd5b5051979650505050505050565b60008060c160009054906101000a90046001600160a01b03166001600160a01b031663a327ab696040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ed1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ef59190612aab565b90506000816001600160a01b0316898989898989604051602401610f1e96959493929190612c2b565b60408051601f198184030181529181526020820180516001600160e01b03166331a0afa760e01b17905251610f539190612b00565b600060405180830381855af49150503d8060008114610f8e576040519150601f19603f3d011682016040523d82523d6000602084013e610f93565b606091505b505090506040513d806000833e82610fa9578082fd5b50519998505050505050505050565b60868181548110610fc857600080fd5b600091825260209091200154905081565b60428054610fe690612bb4565b80601f016020809104026020016040519081016040528092919081815260200182805461101290612bb4565b801561105f5780601f106110345761010080835404028352916020019161105f565b820191906000526020600020905b81548152906001019060200180831161104257829003601f168201915b505050505081565b60008060c160009054906101000a90046001600160a01b03166001600160a01b031663a327ab696040518163ffffffff1660e01b8152600401602060405180830381865afa1580156110bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e19190612aab565b90506000816001600160a01b031686868660405160240161110493929190612c90565b60408051601f198184030181529181526020820180516001600160e01b03166302ef2c7b60e51b179052516111399190612b00565b600060405180830381855af49150503d8060008114611174576040519150601f19603f3d011682016040523d82523d6000602084013e611179565b606091505b505090506040513d806000833e8261118f578082fd5b50519695505050505050565b60006060600060c160009054906101000a90046001600160a01b03166001600160a01b031663a327ab696040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112189190612aab565b90506000816001600160a01b03168560405160240161123991815260200190565b60408051601f198184030181529181526020820180516001600160e01b0316635f3d99b360e01b1790525161126e9190612b00565b600060405180830381855af49150503d80600081146112a9576040519150601f19603f3d011682016040523d82523d6000602084013e6112ae565b606091505b50509050806112c4576040513d806000833e8082fd5b60016040518060400160405280601981526020017f537563636573732065786563757465642070726f706f73616c00000000000000815250935093505050915091565b600061131233611e8d565b60003386600087878760405160240161133096959493929190612cb9565b60408051601f198184030181529181526020820180516001600160e01b0316636eadde4360e01b1790525163243d453b60e11b815290915073627118a4fb747016911e5cda82e2e77c531e8206908190819063487a8a7690611399908690600b90600401612d02565b6020604051808303816000875af11580156113b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113dc9190612aab565b602580546001600160a01b0319166001600160a01b0392909216918217905598975050505050505050565b60008060c160009054906101000a90046001600160a01b03166001600160a01b031663a327ab696040518163ffffffff1660e01b8152600401602060405180830381865afa15801561145d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114819190612aab565b90506000816001600160a01b0316878787876040516024016114a69493929190612ac8565b60408051601f198184030181529181526020820180516001600160e01b0316630f8c70a960e31b17905251610e189190612b00565b60c1546040805163529382d560e01b815290516000926001600160a01b03169163529382d59160048083019260209291908290030181865afa158015611525573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115499190612aab565b90506000816001600160a01b0316848460405160240161156a9291906124ae565b60408051601f198184030181529181526020820180516001600160e01b0316631039e45b60e31b1790525161159f9190612b00565b600060405180830381855af49150503d80600081146115da576040519150601f19603f3d011682016040523d82523d6000602084013e6115df565b606091505b50509050806115f5576040513d806000833e8082fd5b50505050565b61160433611e8d565b602480546001600160a01b0319166001600160a01b0392909216919091179055565b60c1546040805163a327ab6960e01b815290516000926001600160a01b03169163a327ab699160048083019260209291908290030181865afa158015611670573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116949190612aab565b90506000816001600160a01b0316868686866040516024016116b99493929190612d28565b60408051601f198184030181529181526020820180516001600160e01b031663a1c89c9d60e01b179052516107ad9190612b00565b60606083805480602002602001604051908101604052809291908181526020016000905b82821015610d3b5760008481526020908190206040805161012081019091526007850290910180546001600160a01b03811683529192909190830190600160a01b900460ff1660088111156117695761176961266a565b600881111561177a5761177a61266a565b815260200160018201805461178e90612bb4565b80601f01602080910402602001604051908101604052809291908181526020018280546117ba90612bb4565b80156118075780601f106117dc57610100808354040283529160200191611807565b820191906000526020600020905b8154815290600101906020018083116117ea57829003601f168201915b505050918352505060028201546020808301919091526003830154604083015260048301546060830152600583015460ff8082161515608085015261010090910416151560a083015260069092015460c0909101529082526001929092019101611712565b6085818154811061187c57600080fd5b600091825260209091206004909102018054600182015460028301546003909301546001600160a01b03928316945090928216911684565b60c554600190600160a81b900460ff161580156118df575060c55460ff808316600160a01b90920416105b6119475760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b60c5805460ff60a81b1960ff8416600160a01b021661ffff60a01b1990911617600160a81b17905582516040516000916001600160a01b03169061199d908c908c908c908c908c908c908c908c90602401612e18565b60408051601f198184030181529181526020820180516001600160e01b031663729777ed60e01b179052516119d29190612b00565b600060405180830381855af49150503d8060008114611a0d576040519150601f19603f3d011682016040523d82523d6000602084013e611a12565b606091505b5050905080611a28576040513d806000833e8082fd5b5060c5805460ff60a81b1916905560405160ff821681527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050505050505050565b60c1546040805163a327ab6960e01b815290516000926001600160a01b03169163a327ab699160048083019260209291908290030181865afa158015611ac1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ae59190612aab565b90506000816001600160a01b031686868686604051602401611b0a9493929190612eb0565b60408051601f198184030181529181526020820180516001600160e01b0316631856754160e31b17905251611b3f9190612b00565b600060405180830381855af49150503d8060008114611b7a576040519150601f19603f3d011682016040523d82523d6000602084013e611b7f565b606091505b5050905080611b95576040513d806000833e8082fd5b505050505050565b60a56020908152600092835260408084209091529082529020805460018201805460ff8084169461010090940416929190611bd790612bb4565b80601f0160208091040260200160405190810160405280929190818152602001828054611c0390612bb4565b8015611c505780601f10611c2557610100808354040283529160200191611c50565b820191906000526020600020905b815481529060010190602001808311611c3357829003601f168201915b5050505050905083565b60838181548110611c6a57600080fd5b6000918252602090912060079091020180546001820180546001600160a01b0383169450600160a01b90920460ff169291611ca490612bb4565b80601f0160208091040260200160405190810160405280929190818152602001828054611cd090612bb4565b8015611d1d5780601f10611cf257610100808354040283529160200191611d1d565b820191906000526020600020905b815481529060010190602001808311611d0057829003601f168201915b505050600284015460038501546004860154600587015460069097015495969295919450925060ff808316926101009004169089565b60008060c160009054906101000a90046001600160a01b03166001600160a01b031663a327ab696040518163ffffffff1660e01b8152600401602060405180830381865afa158015611da9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dcd9190612aab565b90506000816001600160a01b03168888888888604051602401611df4959493929190612ee3565b60408051601f198184030181529181526020820180516001600160e01b0316636f2d58a760e11b17905251611e299190612b00565b600060405180830381855af49150503d8060008114611e64576040519150601f19603f3d011682016040523d82523d6000602084013e611e69565b606091505b505090506040513d806000833e82611e7f578082fd5b505198975050505050505050565b6001600160a01b038116600090815260a26020526040902054608280549091908110611ebb57611ebb612d92565b600091825260209091206003600490920201015460ff610100909104161515600114611f1e5760405162461bcd60e51b81526020600482015260126024820152714e6f74206d616e616765722072696768747360701b604482015260640161193e565b50565b6001600160a01b0381168114611f1e57600080fd5b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b0381118282101715611f6e57611f6e611f36565b60405290565b604051601f8201601f191681016001600160401b0381118282101715611f9c57611f9c611f36565b604052919050565b600082601f830112611fb557600080fd5b81356001600160401b03811115611fce57611fce611f36565b611fe1601f8201601f1916602001611f74565b818152846020838601011115611ff657600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000806080858703121561202957600080fd5b843561203481611f21565b93506020850135925060408501356001600160401b0381111561205657600080fd5b61206287828801611fa4565b949793965093946060013593505050565b6000806000806080858703121561208957600080fd5b84356001600160401b03808211156120a057600080fd5b6120ac88838901611fa4565b955060208701359150808211156120c257600080fd5b6120ce88838901611fa4565b9450604087013591506120e082611f21565b909250606086013590808211156120f657600080fd5b5061210387828801611fa4565b91505092959194509250565b600080600080600060a0868803121561212757600080fd5b853561213281611f21565b9450602086013561214281611f21565b93506040860135925060608601356001600160401b0381111561216457600080fd5b61217088828901611fa4565b95989497509295608001359392505050565b60006020828403121561219457600080fd5b5035919050565b60005b838110156121b657818101518382015260200161219e565b838111156115f55750506000910152565b600081518084526121df81602086016020860161219b565b601f01601f19169290920160200192915050565b6001600160a01b0384168152606060208201819052600090612217908301856121c7565b90508215156040830152949350505050565b6001600160a01b038616815260a06020820181905260009061224d908301876121c7565b6040830195909552509115156060830152151560809091015292915050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156122ec57888303603f19018552815180516001600160a01b03168452878101516060898601819052906122cc828701826121c7565b928901511515958901959095525094870194925090860190600101612293565b509098975050505050505050565b6000806000806080858703121561231057600080fd5b843561231b81611f21565b935060208501356001600160401b038082111561233757600080fd5b61234388838901611fa4565b94506040870135935060608701359150808211156120f657600080fd5b8035801515811461237057600080fd5b919050565b60008060008060008060c0878903121561238e57600080fd5b863561239981611f21565b955060208701356001600160401b03808211156123b557600080fd5b6123c18a838b01611fa4565b965060408901359150808211156123d757600080fd5b6123e38a838b01611fa4565b95506123f160608a01612360565b94506080890135935060a089013591508082111561240e57600080fd5b5061241b89828a01611fa4565b9150509295509295509295565b60006020828403121561243a57600080fd5b813561244581611f21565b9392505050565b60208152600061244560208301846121c7565b60008060006060848603121561247457600080fd5b8335925060208401356001600160401b0381111561249157600080fd5b61249d86828701611fa4565b925050604084013590509250925092565b82151581526040602082015260006124c960408301846121c7565b949350505050565b600080600080608085870312156124e757600080fd5b84359350602085013592506040850135915060608501356001600160401b0381111561251257600080fd5b61210387828801611fa4565b6000806040838503121561253157600080fd5b61253a83612360565b915060208301356001600160401b0381111561255557600080fd5b61256185828601611fa4565b9150509250929050565b60006001600160401b0382111561258457612584611f36565b5060051b60200190565b600080600080608085870312156125a457600080fd5b84356001600160401b03808211156125bb57600080fd5b818701915087601f8301126125cf57600080fd5b813560206125e46125df8361256b565b611f74565b82815260059290921b8401810191818101908b84111561260357600080fd5b948201945b8386101561262157853582529482019490820190612608565b98506126309050898201612360565b96505050604087013591508082111561264857600080fd5b61265488838901611fa4565b935060608701359150808211156120f657600080fd5b634e487b7160e01b600052602160045260246000fd5b6009811061269e57634e487b7160e01b600052602160045260246000fd5b9052565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156122ec57888303603f19018552815180516001600160a01b03168452610120888201516126fc8a870182612680565b50878201518189870152612712828701826121c7565b606084810151908801526080808501519088015260a0808501519088015260c08085015115159088015260e080850151151590880152610100938401519390960192909252505093860193908601906001016126c9565b600082601f83011261277a57600080fd5b60405160c081018181106001600160401b038211171561279c5761279c611f36565b6040528060c08401858111156127b157600080fd5b845b818110156127d45780356127c681611f21565b8352602092830192016127b3565b509195945050505050565b600082601f8301126127f057600080fd5b813560206128006125df8361256b565b82815260059290921b8401810191818101908684111561281f57600080fd5b8286015b8481101561284357803561283681611f21565b8352918301918301612823565b509695505050505050565b6000806000806000806000806101e0898b03121561286b57600080fd5b883561287681611f21565b97506020898101356001600160401b038082111561289357600080fd5b61289f8d838e01611fa4565b99506128ad60408d01612360565b98506128bb60608d01612360565b975060808c013596508c60bf8d01126128d357600080fd5b6128db611f4c565b9150816101008d018e8111156128f057600080fd5b60a08e015b8181101561290c57803585529385019385016128f5565b5081975061291a8f82612769565b965050506101c08c013592508083111561293357600080fd5b50506129418b828c016127df565b9150509295985092959890939650565b6000806000806080858703121561296757600080fd5b8435935061297760208601612360565b925060408501356001600160401b038082111561264857600080fd5b600080604083850312156129a657600080fd5b8235915060208301356129b881611f21565b809150509250929050565b831515815282151560208201526060604082015260006129e660608301846121c7565b95945050505050565b6001600160a01b038a1681526000610120612a0d602084018c612680565b806040840152612a1f8184018b6121c7565b60608401999099525050608081019590955260a085019390935290151560c0840152151560e0830152610100909101529392505050565b600080600080600060a08688031215612a6e57600080fd5b8535612a7981611f21565b9450602086013593506040860135612a9081611f21565b925060608601356001600160401b0381111561216457600080fd5b600060208284031215612abd57600080fd5b815161244581611f21565b60018060a01b0385168152836020820152608060408201526000612aef60808301856121c7565b905082606083015295945050505050565b60008251612b1281846020870161219b565b9190910192915050565b608081526000612b2f60808301876121c7565b8281036020840152612b4181876121c7565b6001600160a01b038616604085015283810360608501529050612b6481856121c7565b979650505050505050565b6001600160a01b038681168252851660208201526040810184905260a060608201819052600090612ba2908301856121c7565b90508260808301529695505050505050565b600181811c90821680612bc857607f821691505b60208210811415612be957634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160a01b0385168152608060208201819052600090612c13908301866121c7565b8460408401528281036060840152612b6481856121c7565b6001600160a01b038716815260c060208201819052600090612c4f908301886121c7565b8281036040840152612c6181886121c7565b9050851515606084015284608084015282810360a0840152612c8381856121c7565b9998505050505050505050565b838152606060208201526000612ca960608301856121c7565b9050826040830152949350505050565b600060018060a01b03808916835287602084015280871660408401525084606083015283608083015260c060a0830152612cf660c08301846121c7565b98975050505050505050565b604081526000612d1560408301856121c7565b905061ffff831660208301529392505050565b6080808252855190820181905260009060209060a0840190828901845b82811015612d6157815184529284019290840190600101612d45565b505050861515828501528381036040850152612d7d81876121c7565b9150508281036060840152612b6481856121c7565b634e487b7160e01b600052603260045260246000fd5b8060005b60068110156115f55781516001600160a01b0316845260209384019390910190600101612dac565b600081518084526020808501945080840160005b83811015612e0d5781516001600160a01b031687529582019590820190600101612de8565b509495945050505050565b6001600160a01b03891681526101e0602080830182905260009190612e3f8483018c6121c7565b91508915156040850152881515606085015287608085015260a084018760005b6003811015612e7c57815183529183019190830190600101612e5f565b50505050612e8e610100840186612da8565b8281036101c0840152612ea18185612dd4565b9b9a5050505050505050505050565b8481528315156020820152608060408201526000612ed160808301856121c7565b8281036060840152612b6481856121c7565b6001600160a01b038681168252602082018690528416604082015260a060608201819052600090612ba2908301856121c756fea2646970667358221220b0f67357894a797ac6817c0b029515d92f8fdaece1e8056f489fc39ca03934f664736f6c634300080c0033",
  "bytecodeSha1": "175ce19d4d371909afd04c902c14743645be3f18",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "CLHouse",
  "coverageMap": {
    "branches": {
      "18": {
        "CLHouse.Init": {
          "20": [
            4396,
            4409,
            false
          ]
        }
      },
      "47": {
        "CLStorage.CheckIsManager": {
          "19": [
            4037,
            4091,
            true
          ]
        }
      },
      "48": {},
      "50": {
        "CLHouse.AcceptRejectInvitation": {
          "16": [
            12827,
            12840,
            false
          ]
        },
        "CLHouse.ExecProp": {
          "15": [
            3139,
            3152,
            false
          ]
        },
        "CLHouse.Init": {
          "17": [
            2079,
            2092,
            false
          ]
        },
        "CLHouse.VoteProposal": {
          "18": [
            4307,
            4320,
            false
          ]
        }
      },
      "65": {}
    },
    "statements": {
      "18": {},
      "47": {
        "CLStorage.CheckIsManager": {
          "14": [
            4028,
            4116
          ]
        }
      },
      "48": {},
      "50": {
        "CLHouse.AcceptRejectInvitation": {
          "8": [
            12822,
            13054
          ]
        },
        "CLHouse.CreateLock": {
          "6": [
            18198,
            18226
          ],
          "7": [
            18642,
            18701
          ]
        },
        "CLHouse.ExecProp": {
          "4": [
            3134,
            3366
          ],
          "5": [
            3376,
            3421
          ]
        },
        "CLHouse.GetArrDataPropUser": {
          "3": [
            17654,
            17676
          ]
        },
        "CLHouse.GetArrProposalsLength": {
          "0": [
            17204,
            17230
          ]
        },
        "CLHouse.GetArrUsersLength": {
          "1": [
            17049,
            17071
          ]
        },
        "CLHouse.GetCLHouseVersion": {
          "2": [
            17768,
            17794
          ]
        },
        "CLHouse.GetProposalList": {
          "11": [
            17426,
            17445
          ]
        },
        "CLHouse.Init": {
          "12": [
            2074,
            2306
          ]
        },
        "CLHouse.SetWhitelistCollection": {
          "9": [
            17883,
            17911
          ],
          "10": [
            17921,
            17949
          ]
        },
        "CLHouse.VoteProposal": {
          "13": [
            4302,
            4534
          ]
        }
      },
      "65": {}
    }
  },
  "dependencies": [
    "CLStorage",
    "IUnlock",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/Initializable"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "366:18369:50:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14038:900;;;;;;:::i;:::-;;:::i;:::-;;;2099:25:66;;;2087:2;2072:18;14038:900:50;;;;;;;;1638:25:47;;;;;-1:-1:-1;;;;;1638:25:47;;;;;;-1:-1:-1;;;;;2316:32:66;;;2298:51;;2286:2;2271:18;1638:25:47;2135:220:66;675:21:47;;;;;-1:-1:-1;;;;;675:21:47;;;11303:902:50;;;;;;:::i;:::-;;:::i;569:30:47:-;;;;;;13066:966:50;;;;;;:::i;:::-;;:::i;1026:36:47:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;464:23::-;;;;;;882:37;;;;;;412:21;;;;;;;;;;;;;;;5858:14:66;;5851:22;5833:41;;5821:2;5806:18;412:21:47;5693:187:66;1669:29:47;;;;;-1:-1:-1;;;;;1669:29:47;;;14944:896:50;;;;;;:::i;:::-;;:::i;956:25:47:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;17568:115:50:-;;;:::i;:::-;;;;;;;:::i;6276:907::-;;;;;;:::i;:::-;;:::i;4976:1024::-;;;;;;:::i;:::-;;:::i;1118:44:47:-;;;;;;:::i;:::-;;:::i;763:22::-;;;;;-1:-1:-1;;;;;763:22:47;;;17129:108:50;17211:12;:19;17129:108;;1250:54:47;;;;;;:::i;:::-;;;;;;;;;;;;;;822:24;;;:::i;:::-;;;;;;;:::i;10074:854:50:-;;;;;;:::i;:::-;;:::i;2667:761::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;730:27:47:-;;;;;-1:-1:-1;;;;;730:27:47;;;1579:23;;;;;-1:-1:-1;;;;;1579:23:47;;;1198:46;;;;;;:::i;:::-;;;;;;;;;;;;;;17962:771:50;;;;;;:::i;:::-;;:::i;7528:884::-;;;;;;:::i;:::-;;:::i;12329:731::-;;;;;;:::i;:::-;;:::i;:::-;;17807:149;;;;;;:::i;:::-;;:::i;1330:48:47:-;;;;;;:::i;:::-;;;;;;;;;;;;;;1608:24;;;;;-1:-1:-1;;;;;1608:24:47;;;525:38;;;;;;1545:28;;;;;-1:-1:-1;;;;;1545:28:47;;;16076:855:50;;;;;;:::i;:::-;;:::i;16978:100::-;17056:8;:15;16978:100;;17343:109;;;:::i;:::-;;;;;;;:::i;1068:44:47:-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;16308:15:66;;;16290:34;;16355:2;16340:18;;16333:34;;;;16403:15;;;16383:18;;;16376:43;;;;16455:15;;;16450:2;16435:18;;16428:43;16239:3;16224:19;1068:44:47;16021:456:66;1188:1124:50;;;;;;:::i;:::-;;:::i;3714:826::-;;;;;;:::i;:::-;;:::i;1404:67:47:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;702:22::-;;;;;-1:-1:-1;;;;;702:22:47;;;987:33;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::i;8757:956:50:-;;;;;;:::i;:::-;;:::i;493:26:47:-;;;;;;605:33;;;;;;382:24;;;;;;;;;17689:112:50;17775:19;;;;;;;;;;;;-1:-1:-1;;;17775:19:50;;;;17689:112;;14038:900;14226:7;14250:21;14274:10;;;;;;;;;-1:-1:-1;;;;;14274:10:50;-1:-1:-1;;;;;14274:24:50;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14250:50;;14369:18;14393:13;-1:-1:-1;;;;;14393:26:50;14540:12;14570:13;14601:12;14631:10;14433:222;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;14433:222:50;;;;;;;;;;;;;;-1:-1:-1;;;;;14433:222:50;-1:-1:-1;;;14433:222:50;;;14393:272;;;14433:222;14393:272;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14368:297;;;14716:4;14710:11;14746:16;14798:4;14795:1;14790:3;14775:28;14827:13;14816:76;;14873:4;14868:3;14861:17;14816:76;14917:4;14912:3;14905:17;11303:902;11499:7;11523:21;11547:10;;;;;;;;;-1:-1:-1;;;;;11547:10:50;-1:-1:-1;;;;;11547:24:50;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11523:50;;11642:18;11666:13;-1:-1:-1;;;;;11666:26:50;11814:5;11837:12;11867:13;11898:10;11706:216;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;11706:216:50;;;;;;;;;;;;;;-1:-1:-1;;;;;11706:216:50;-1:-1:-1;;;11706:216:50;;;11666:266;;;11706:216;11666:266;:::i;13066:966::-;13283:7;13307:21;13331:10;;;;;;;;;-1:-1:-1;;;;;13331:10:50;-1:-1:-1;;;;;13331:24:50;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13307:50;;13426:18;13450:13;-1:-1:-1;;;;;13450:26:50;13605:12;13635:11;13664:13;13695:12;13725:10;13490:259;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;13490:259:50;;;;;;;;;;;;;;-1:-1:-1;;;;;13490:259:50;-1:-1:-1;;;13490:259:50;;;13450:309;;;13490:259;13450:309;:::i;1026:36:47:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1026:36:47;;;;-1:-1:-1;1026:36:47;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1026:36:47;;;;;;;-1:-1:-1;;1026:36:47;;;:::o;14944:896:50:-;15130:7;15154:21;15178:10;;;;;;;;;-1:-1:-1;;;;;15178:10:50;-1:-1:-1;;;;;15178:24:50;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15154:50;;15273:18;15297:13;-1:-1:-1;;;;;15297:26:50;15443:11;15472:13;15503:12;15533:10;15337:220;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;15337:220:50;;;;;;;;;;;;;;-1:-1:-1;;;;;15337:220:50;-1:-1:-1;;;15337:220:50;;;15297:270;;;15337:220;15297:270;:::i;956:25:47:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;956:25:47;;;;-1:-1:-1;956:25:47;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;956:25:47;;;;;;;;;;;;;;;;;-1:-1:-1;956:25:47;;;;;;:::o;17568:115:50:-;17621:20;17661:15;17654:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;17654:22:50;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;17654:22:50;;;-1:-1:-1;;17654:22:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17568:115;:::o;6276:907::-;6466:14;6497:21;6521:10;;;;;;;;;-1:-1:-1;;;;;6521:10:50;-1:-1:-1;;;;;6521:24:50;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6497:50;;6616:18;6640:13;-1:-1:-1;;;;;6640:26:50;6786:11;6815:12;6845:10;6873;6680:217;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6680:217:50;;;;;;;;;;;;;;-1:-1:-1;;;;;6680:217:50;-1:-1:-1;;;6680:217:50;;;6640:267;;;6680:217;6640:267;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6615:292;;;6958:4;6952:11;6988:16;7040:4;7037:1;7032:3;7017:28;7069:13;7058:76;;7115:4;7110:3;7103:17;7058:76;-1:-1:-1;7157:10:50;;6276:907;-1:-1:-1;;;;;;;6276:907:50:o;4976:1024::-;5220:14;5251:21;5275:10;;;;;;;;;-1:-1:-1;;;;;5275:10:50;-1:-1:-1;;;;;5275:24:50;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5251:50;;5370:18;5394:13;-1:-1:-1;;;;;5394:26:50;5552:11;5581:5;5604:12;5634:10;5662;5690;5434:280;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5434:280:50;;;;;;;;;;;;;;-1:-1:-1;;;;;5434:280:50;-1:-1:-1;;;5434:280:50;;;5394:330;;;5434:280;5394:330;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5369:355;;;5775:4;5769:11;5805:16;5857:4;5854:1;5849:3;5834:28;5886:13;5875:76;;5932:4;5927:3;5920:17;5875:76;-1:-1:-1;5974:10:50;;4976:1024;-1:-1:-1;;;;;;;;;4976:1024:50:o;1118:44:47:-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1118:44:47;:::o;822:24::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;10074:854:50:-;10238:14;10269:21;10293:10;;;;;;;;;-1:-1:-1;;;;;10293:10:50;-1:-1:-1;;;;;10293:24:50;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10269:50;;10388:18;10412:13;-1:-1:-1;;;;;10412:26:50;10550:20;10588:12;10618:10;10452:190;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;10452:190:50;;;;;;;;;;;;;;-1:-1:-1;;;;;10452:190:50;-1:-1:-1;;;10452:190:50;;;10412:240;;;10452:190;10412:240;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10387:265;;;10703:4;10697:11;10733:16;10785:4;10782:1;10777:3;10762:28;10814:13;10803:76;;10860:4;10855:3;10848:17;10803:76;-1:-1:-1;10902:10:50;;10074:854;-1:-1:-1;;;;;;10074:854:50:o;2667:761::-;2760:11;2785:21;2831;2855:10;;;;;;;;;-1:-1:-1;;;;;2855:10:50;-1:-1:-1;;;;;2855:24:50;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2831:50;;2950:18;2974:13;-1:-1:-1;;;;;2974:26:50;3092:7;3014:99;;;;;;2099:25:66;;2087:2;2072:18;;1953:177;3014:99:50;;;;-1:-1:-1;;3014:99:50;;;;;;;;;;;;;;-1:-1:-1;;;;;3014:99:50;-1:-1:-1;;;3014:99:50;;;2974:149;;;3014:99;2974:149;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2949:174;;;3139:13;3134:232;;3213:4;3207:11;3247:16;3303:4;3300:1;3295:3;3280:28;3337:4;3332:3;3325:17;3134:232;3385:4;3376:45;;;;;;;;;;;;;;;;;;;;;;;2667:761;;;:::o;17962:771::-;18166:7;18198:28;18214:10;18198:14;:28::i;:::-;18236:19;18369:10;18393:19;18434:1;18450:9;18473:16;18503:9;18258:264;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;18258:264:50;;;;;;;;;;;;;;-1:-1:-1;;;;;18258:264:50;-1:-1:-1;;;18258:264:50;;;18652:49;-1:-1:-1;;;18652:49:50;;18258:264;;-1:-1:-1;18548:42:50;;;;;;18652:35;;:49;;18258:264;;18697:2;;18652:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18642:7;:59;;-1:-1:-1;;;;;;18642:59:50;-1:-1:-1;;;;;18642:59:50;;;;;;;;;;17962:771;-1:-1:-1;;;;;;;;17962:771:50:o;7528:884::-;7703:14;7734:21;7758:10;;;;;;;;;-1:-1:-1;;;;;7758:10:50;-1:-1:-1;;;;;7758:24:50;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7734:50;;7853:18;7877:13;-1:-1:-1;;;;;7877:26:50;8020:3;8041:13;8072:12;8102:10;7917:209;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;7917:209:50;;;;;;;;;;;;;;-1:-1:-1;;;;;7917:209:50;-1:-1:-1;;;7917:209:50;;;7877:259;;;7917:209;7877:259;:::i;12329:731::-;12485:10;;:30;;;-1:-1:-1;;;12485:30:50;;;;12457:25;;-1:-1:-1;;;;;12485:10:50;;:28;;:30;;;;;;;;;;;;;;:10;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12457:58;;12584:18;12608:17;-1:-1:-1;;;;;12608:30:50;12748:11;12777:10;12652:149;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;12652:149:50;;;;;;;;;;;;;;-1:-1:-1;;;;;12652:149:50;-1:-1:-1;;;12652:149:50;;;12608:203;;;12652:149;12608:203;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12583:228;;;12827:13;12822:232;;12901:4;12895:11;12935:16;12991:4;12988:1;12983:3;12968:28;13025:4;13020:3;13013:17;12822:232;12447:613;;12329:731;;:::o;17807:149::-;17883:28;17899:10;17883:14;:28::i;:::-;17921:12;:28;;-1:-1:-1;;;;;;17921:28:50;-1:-1:-1;;;;;17921:28:50;;;;;;;;;;17807:149::o;16076:855::-;16283:10;;:26;;;-1:-1:-1;;;16283:26:50;;;;16259:21;;-1:-1:-1;;;;;16283:10:50;;:24;;:26;;;;;;;;;;;;;;:10;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16259:50;;16378:18;16402:13;-1:-1:-1;;;;;16402:26:50;16541:7;16566:8;16592:14;16624:10;16442:206;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;16442:206:50;;;;;;;;;;;;;;-1:-1:-1;;;;;16442:206:50;-1:-1:-1;;;16442:206:50;;;16402:256;;;16442:206;16402:256;:::i;17343:109::-;17393:20;17433:12;17426:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;17426:19:50;;;;;;;;;;;;-1:-1:-1;;;17426:19:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;17426:19:50;;;-1:-1:-1;;17426:19:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1068:44:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1068:44:47;;;;-1:-1:-1;1068:44:47;;;;;;;:::o;1188:1124:50:-;4396:13:18;;294:1:48;;-1:-1:-1;;;4396:13:18;;;;4395:14;:40;;;;-1:-1:-1;4413:12:18;;:22;;;;-1:-1:-1;;;4413:12:18;;;;:22;4395:40;4387:99;;;;-1:-1:-1;;;4387:99:18;;29308:2:66;4387:99:18;;;29290:21:66;29347:2;29327:18;;;29320:30;29386:34;29366:18;;;29359:62;-1:-1:-1;;;29437:18:66;;;29430:44;29491:19;;4387:99:18;;;;;;;;;4496:12;:22;;-1:-1:-1;;;;4496:22:18;;;-1:-1:-1;;;4496:22:18;4528:20;-1:-1:-1;;;;4528:20:18;;;;-1:-1:-1;;;4528:20:18;;;1625:41:50;;1693:360:::1;::::0;-1:-1:-1;;;;;;;1625:54:50::1;::::0;1693:360:::1;::::0;1836:6;;1861:10;;1889:13;;1920:10;;1948:9;;1975;;1625:4;;2024:15;;1693:360:::1;;;:::i;:::-;;::::0;;-1:-1:-1;;1693:360:50;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;1693:360:50::1;-1:-1:-1::0;;;1693:360:50::1;::::0;;1625:438;::::1;::::0;1693:360;1625:438:::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1600:463;;;2079:13;2074:232;;2153:4;2147:11;2187:16;2243:4;2240:1;2235:3;2220:28;2277:4;2272:3;2265:17;2074:232;-1:-1:-1::0;4569:13:18;:21;;-1:-1:-1;;;;4569:21:18;;;4605:20;;31944:4:66;31932:17;;31914:36;;4605:20:18;;31902:2:66;31887:18;4605:20:18;;;;;;;1188:1124:50;;;;;;;;;:::o;3714:826::-;3914:10;;:26;;;-1:-1:-1;;;3914:26:50;;;;3890:21;;-1:-1:-1;;;;;3914:10:50;;:24;;:26;;;;;;;;;;;;;;:10;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3890:50;;4009:18;4033:13;-1:-1:-1;;;;;4033:26:50;4174:7;4199:8;4225:14;4257:10;4073:208;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4073:208:50;;;;;;;;;;;;;;-1:-1:-1;;;;;4073:208:50;-1:-1:-1;;;4073:208:50;;;4033:258;;;4073:208;4033:258;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4008:283;;;4307:13;4302:232;;4381:4;4375:11;4415:16;4471:4;4468:1;4463:3;4448:28;4505:4;4500:3;4493:17;4302:232;3880:660;;3714:826;;;;:::o;1404:67:47:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;987:33::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;987:33:47;;;-1:-1:-1;;;;987:33:47;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;987:33:47;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;987:33:47;-1:-1:-1;987:33:47;;;;;;;;;;;:::o;8757:956:50:-;8964:14;8995:21;9019:10;;;;;;;;;-1:-1:-1;;;;;9019:10:50;-1:-1:-1;;;;;9019:24:50;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8995:50;;9114:18;9138:13;-1:-1:-1;;;;;9138:26:50;9291:3;9312:13;9343:12;9373;9403:10;9178:249;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;9178:249:50;;;;;;;;;;;;;;-1:-1:-1;;;;;9178:249:50;-1:-1:-1;;;9178:249:50;;;9138:299;;;9178:249;9138:299;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9113:324;;;9488:4;9482:11;9518:16;9570:4;9567:1;9562:3;9547:28;9599:13;9588:76;;9645:4;9640:3;9633:17;9588:76;-1:-1:-1;9687:10:50;;8757:956;-1:-1:-1;;;;;;;;8757:956:50:o;3957:166:47:-;-1:-1:-1;;;;;4055:24:47;;;;;;:9;:24;;;;;;4045:8;:36;;:8;;4055:24;4045:36;;;;;;:::i;:::-;;;;;;;;;:46;:36;;;;;:46;;;;;;;;4037:54;;4045:46;4037:54;4028:88;;;;-1:-1:-1;;;4028:88:47;;33271:2:66;4028:88:47;;;33253:21:66;33310:2;33290:18;;;33283:30;-1:-1:-1;;;33329:18:66;;;33322:48;33387:18;;4028:88:47;33069:342:66;4028:88:47;3957:166;:::o;14:131:66:-;-1:-1:-1;;;;;89:31:66;;79:42;;69:70;;135:1;132;125:12;150:127;211:10;206:3;202:20;199:1;192:31;242:4;239:1;232:15;266:4;263:1;256:15;282:251;354:2;348:9;396:2;384:15;;-1:-1:-1;;;;;414:34:66;;450:22;;;411:62;408:88;;;476:18;;:::i;:::-;512:2;505:22;282:251;:::o;538:275::-;609:2;603:9;674:2;655:13;;-1:-1:-1;;651:27:66;639:40;;-1:-1:-1;;;;;694:34:66;;730:22;;;691:62;688:88;;;756:18;;:::i;:::-;792:2;785:22;538:275;;-1:-1:-1;538:275:66:o;818:531::-;861:5;914:3;907:4;899:6;895:17;891:27;881:55;;932:1;929;922:12;881:55;968:6;955:20;-1:-1:-1;;;;;990:2:66;987:26;984:52;;;1016:18;;:::i;:::-;1060:55;1103:2;1084:13;;-1:-1:-1;;1080:27:66;1109:4;1076:38;1060:55;:::i;:::-;1140:2;1131:7;1124:19;1186:3;1179:4;1174:2;1166:6;1162:15;1158:26;1155:35;1152:55;;;1203:1;1200;1193:12;1152:55;1268:2;1261:4;1253:6;1249:17;1242:4;1233:7;1229:18;1216:55;1316:1;1291:16;;;1309:4;1287:27;1280:38;;;;1295:7;818:531;-1:-1:-1;;;818:531:66:o;1354:594::-;1450:6;1458;1466;1474;1527:3;1515:9;1506:7;1502:23;1498:33;1495:53;;;1544:1;1541;1534:12;1495:53;1583:9;1570:23;1602:31;1627:5;1602:31;:::i;:::-;1652:5;-1:-1:-1;1704:2:66;1689:18;;1676:32;;-1:-1:-1;1759:2:66;1744:18;;1731:32;-1:-1:-1;;;;;1775:30:66;;1772:50;;;1818:1;1815;1808:12;1772:50;1841;1883:7;1874:6;1863:9;1859:22;1841:50;:::i;:::-;1354:594;;;;-1:-1:-1;1831:60:66;;1938:2;1923:18;1910:32;;-1:-1:-1;;;1354:594:66:o;2677:878::-;2792:6;2800;2808;2816;2869:3;2857:9;2848:7;2844:23;2840:33;2837:53;;;2886:1;2883;2876:12;2837:53;2926:9;2913:23;-1:-1:-1;;;;;2996:2:66;2988:6;2985:14;2982:34;;;3012:1;3009;3002:12;2982:34;3035:50;3077:7;3068:6;3057:9;3053:22;3035:50;:::i;:::-;3025:60;;3138:2;3127:9;3123:18;3110:32;3094:48;;3167:2;3157:8;3154:16;3151:36;;;3183:1;3180;3173:12;3151:36;3206:52;3250:7;3239:8;3228:9;3224:24;3206:52;:::i;:::-;3196:62;;3308:2;3297:9;3293:18;3280:32;3267:45;;3321:31;3346:5;3321:31;:::i;:::-;3371:5;;-1:-1:-1;3429:2:66;3414:18;;3401:32;;3445:16;;;3442:36;;;3474:1;3471;3464:12;3442:36;;3497:52;3541:7;3530:8;3519:9;3515:24;3497:52;:::i;:::-;3487:62;;;2677:878;;;;;;;:::o;3560:736::-;3665:6;3673;3681;3689;3697;3750:3;3738:9;3729:7;3725:23;3721:33;3718:53;;;3767:1;3764;3757:12;3718:53;3806:9;3793:23;3825:31;3850:5;3825:31;:::i;:::-;3875:5;-1:-1:-1;3932:2:66;3917:18;;3904:32;3945:33;3904:32;3945:33;:::i;:::-;3997:7;-1:-1:-1;4051:2:66;4036:18;;4023:32;;-1:-1:-1;4106:2:66;4091:18;;4078:32;-1:-1:-1;;;;;4122:30:66;;4119:50;;;4165:1;4162;4155:12;4119:50;4188;4230:7;4221:6;4210:9;4206:22;4188:50;:::i;:::-;3560:736;;;;-1:-1:-1;3560:736:66;;4285:3;4270:19;4257:33;;3560:736;-1:-1:-1;;;3560:736:66:o;4301:180::-;4360:6;4413:2;4401:9;4392:7;4388:23;4384:32;4381:52;;;4429:1;4426;4419:12;4381:52;-1:-1:-1;4452:23:66;;4301:180;-1:-1:-1;4301:180:66:o;4486:258::-;4558:1;4568:113;4582:6;4579:1;4576:13;4568:113;;;4658:11;;;4652:18;4639:11;;;4632:39;4604:2;4597:10;4568:113;;;4699:6;4696:1;4693:13;4690:48;;;-1:-1:-1;;4734:1:66;4716:16;;4709:27;4486:258::o;4749:::-;4791:3;4829:5;4823:12;4856:6;4851:3;4844:19;4872:63;4928:6;4921:4;4916:3;4912:14;4905:4;4898:5;4894:16;4872:63;:::i;:::-;4989:2;4968:15;-1:-1:-1;;4964:29:66;4955:39;;;;4996:4;4951:50;;4749:258;-1:-1:-1;;4749:258:66:o;5108:398::-;-1:-1:-1;;;;;5307:32:66;;5289:51;;5376:2;5371;5356:18;;5349:30;;;-1:-1:-1;;5396:45:66;;5422:18;;5414:6;5396:45;:::i;:::-;5388:53;;5491:6;5484:14;5477:22;5472:2;5461:9;5457:18;5450:50;5108:398;;;;;;:::o;5885:553::-;-1:-1:-1;;;;;6134:32:66;;6116:51;;6154:3;6198:2;6183:18;;6176:31;;;-1:-1:-1;;6224:46:66;;6250:19;;6242:6;6224:46;:::i;:::-;6301:2;6286:18;;6279:34;;;;-1:-1:-1;6356:14:66;;6349:22;6344:2;6329:18;;6322:50;6416:14;6409:22;6403:3;6388:19;;;6381:51;6216:54;5885:553;-1:-1:-1;;5885:553:66:o;6443:1193::-;6643:4;6672:2;6712;6701:9;6697:18;6742:2;6731:9;6724:21;6765:6;6800;6794:13;6831:6;6823;6816:22;6857:2;6847:12;;6890:2;6879:9;6875:18;6868:25;;6952:2;6942:6;6939:1;6935:14;6924:9;6920:30;6916:39;6990:2;6982:6;6978:15;7011:1;7021:586;7035:6;7032:1;7029:13;7021:586;;;7100:22;;;-1:-1:-1;;7096:36:66;7084:49;;7156:13;;7228:9;;-1:-1:-1;;;;;7224:35:66;7209:51;;7299:11;;;7293:18;7192:4;7331:15;;;7324:27;;;7192:4;7378:48;7410:15;;;7293:18;7378:48;:::i;:::-;7483:11;;;7477:18;7470:26;7463:34;7446:15;;;7439:59;;;;-1:-1:-1;7585:12:66;;;;7364:62;-1:-1:-1;7550:15:66;;;;7057:1;7050:9;7021:586;;;-1:-1:-1;7624:6:66;;6443:1193;-1:-1:-1;;;;;;;;6443:1193:66:o;7641:746::-;7746:6;7754;7762;7770;7823:3;7811:9;7802:7;7798:23;7794:33;7791:53;;;7840:1;7837;7830:12;7791:53;7879:9;7866:23;7898:31;7923:5;7898:31;:::i;:::-;7948:5;-1:-1:-1;8004:2:66;7989:18;;7976:32;-1:-1:-1;;;;;8057:14:66;;;8054:34;;;8084:1;8081;8074:12;8054:34;8107:50;8149:7;8140:6;8129:9;8125:22;8107:50;:::i;:::-;8097:60;;8204:2;8193:9;8189:18;8176:32;8166:42;;8261:2;8250:9;8246:18;8233:32;8217:48;;8290:2;8280:8;8277:16;8274:36;;;8306:1;8303;8296:12;8392:160;8457:20;;8513:13;;8506:21;8496:32;;8486:60;;8542:1;8539;8532:12;8486:60;8392:160;;;:::o;8557:1016::-;8687:6;8695;8703;8711;8719;8727;8780:3;8768:9;8759:7;8755:23;8751:33;8748:53;;;8797:1;8794;8787:12;8748:53;8836:9;8823:23;8855:31;8880:5;8855:31;:::i;:::-;8905:5;-1:-1:-1;8961:2:66;8946:18;;8933:32;-1:-1:-1;;;;;9014:14:66;;;9011:34;;;9041:1;9038;9031:12;9011:34;9064:50;9106:7;9097:6;9086:9;9082:22;9064:50;:::i;:::-;9054:60;;9167:2;9156:9;9152:18;9139:32;9123:48;;9196:2;9186:8;9183:16;9180:36;;;9212:1;9209;9202:12;9180:36;9235:52;9279:7;9268:8;9257:9;9253:24;9235:52;:::i;:::-;9225:62;;9306:35;9337:2;9326:9;9322:18;9306:35;:::i;:::-;9296:45;;9388:3;9377:9;9373:19;9360:33;9350:43;;9446:3;9435:9;9431:19;9418:33;9402:49;;9476:2;9466:8;9463:16;9460:36;;;9492:1;9489;9482:12;9460:36;;9515:52;9559:7;9548:8;9537:9;9533:24;9515:52;:::i;:::-;9505:62;;;8557:1016;;;;;;;;:::o;9578:247::-;9637:6;9690:2;9678:9;9669:7;9665:23;9661:32;9658:52;;;9706:1;9703;9696:12;9658:52;9745:9;9732:23;9764:31;9789:5;9764:31;:::i;:::-;9814:5;9578:247;-1:-1:-1;;;9578:247:66:o;9830:220::-;9979:2;9968:9;9961:21;9942:4;9999:45;10040:2;10029:9;10025:18;10017:6;9999:45;:::i;10055:458::-;10142:6;10150;10158;10211:2;10199:9;10190:7;10186:23;10182:32;10179:52;;;10227:1;10224;10217:12;10179:52;10263:9;10250:23;10240:33;;10324:2;10313:9;10309:18;10296:32;-1:-1:-1;;;;;10343:6:66;10340:30;10337:50;;;10383:1;10380;10373:12;10337:50;10406;10448:7;10439:6;10428:9;10424:22;10406:50;:::i;:::-;10396:60;;;10503:2;10492:9;10488:18;10475:32;10465:42;;10055:458;;;;;:::o;10518:301::-;10703:6;10696:14;10689:22;10678:9;10671:41;10748:2;10743;10732:9;10728:18;10721:30;10652:4;10768:45;10809:2;10798:9;10794:18;10786:6;10768:45;:::i;:::-;10760:53;10518:301;-1:-1:-1;;;;10518:301:66:o;11056:527::-;11152:6;11160;11168;11176;11229:3;11217:9;11208:7;11204:23;11200:33;11197:53;;;11246:1;11243;11236:12;11197:53;11282:9;11269:23;11259:33;;11339:2;11328:9;11324:18;11311:32;11301:42;;11390:2;11379:9;11375:18;11362:32;11352:42;;11445:2;11434:9;11430:18;11417:32;-1:-1:-1;;;;;11464:6:66;11461:30;11458:50;;;11504:1;11501;11494:12;11458:50;11527;11569:7;11560:6;11549:9;11545:22;11527:50;:::i;11588:389::-;11662:6;11670;11723:2;11711:9;11702:7;11698:23;11694:32;11691:52;;;11739:1;11736;11729:12;11691:52;11762:26;11778:9;11762:26;:::i;:::-;11752:36;;11839:2;11828:9;11824:18;11811:32;-1:-1:-1;;;;;11858:6:66;11855:30;11852:50;;;11898:1;11895;11888:12;11852:50;11921;11963:7;11954:6;11943:9;11939:22;11921:50;:::i;:::-;11911:60;;;11588:389;;;;;:::o;12209:183::-;12269:4;-1:-1:-1;;;;;12294:6:66;12291:30;12288:56;;;12324:18;;:::i;:::-;-1:-1:-1;12369:1:66;12365:14;12381:4;12361:25;;12209:183::o;12397:1382::-;12524:6;12532;12540;12548;12601:3;12589:9;12580:7;12576:23;12572:33;12569:53;;;12618:1;12615;12608:12;12569:53;12658:9;12645:23;-1:-1:-1;;;;;12728:2:66;12720:6;12717:14;12714:34;;;12744:1;12741;12734:12;12714:34;12782:6;12771:9;12767:22;12757:32;;12827:7;12820:4;12816:2;12812:13;12808:27;12798:55;;12849:1;12846;12839:12;12798:55;12885:2;12872:16;12907:4;12931:60;12947:43;12987:2;12947:43;:::i;:::-;12931:60;:::i;:::-;13025:15;;;13107:1;13103:10;;;;13095:19;;13091:28;;;13056:12;;;;13131:19;;;13128:39;;;13163:1;13160;13153:12;13128:39;13187:11;;;;13207:142;13223:6;13218:3;13215:15;13207:142;;;13289:17;;13277:30;;13240:12;;;;13327;;;;13207:142;;;13368:5;-1:-1:-1;13392:35:66;;-1:-1:-1;13408:18:66;;;13392:35;:::i;:::-;13382:45;;;;13480:2;13469:9;13465:18;13452:32;13436:48;;13509:2;13499:8;13496:16;13493:36;;;13525:1;13522;13515:12;13493:36;13548:52;13592:7;13581:8;13570:9;13566:24;13548:52;:::i;:::-;13538:62;;13653:2;13642:9;13638:18;13625:32;13609:48;;13682:2;13672:8;13669:16;13666:36;;;13698:1;13695;13688:12;13784:127;13845:10;13840:3;13836:20;13833:1;13826:31;13876:4;13873:1;13866:15;13900:4;13897:1;13890:15;13916:240;14000:1;13993:5;13990:12;13980:143;;14045:10;14040:3;14036:20;14033:1;14026:31;14080:4;14077:1;14070:15;14108:4;14105:1;14098:15;13980:143;14132:18;;13916:240::o;14161:1855::-;14361:4;14390:2;14430;14419:9;14415:18;14460:2;14449:9;14442:21;14483:6;14518;14512:13;14549:6;14541;14534:22;14575:2;14565:12;;14608:2;14597:9;14593:18;14586:25;;14670:2;14660:6;14657:1;14653:14;14642:9;14638:30;14634:39;14708:2;14700:6;14696:15;14729:1;14739:1248;14753:6;14750:1;14747:13;14739:1248;;;14818:22;;;-1:-1:-1;;14814:36:66;14802:49;;14874:13;;14948:9;;-1:-1:-1;;;;;2426:31:66;2414:44;;14910:6;15013:2;15009;15005:11;14999:18;15030:59;15085:2;15077:6;15073:15;15059:12;15030:59;:::i;:::-;;15138:2;15134;15130:11;15124:18;15179:2;15174;15166:6;15162:15;15155:27;15209:50;15255:2;15247:6;15243:15;15227:14;15209:50;:::i;:::-;15282:4;15329:11;;;15323:18;15306:15;;;15299:43;15365:4;15412:11;;;15406:18;15389:15;;;15382:43;15448:4;15495:11;;;15489:18;15472:15;;;15465:43;15531:4;15576:11;;;15570:18;5082:13;5075:21;15633:15;;;5063:34;15672:4;15717:11;;;15711:18;5082:13;5075:21;15774:15;;;5063:34;15814:6;15864:12;;;15858:19;15840:16;;;;15833:45;;;;-1:-1:-1;;15965:12:66;;;;15930:15;;;;14775:1;14768:9;14739:1248;;16482:723;16532:5;16585:3;16578:4;16570:6;16566:17;16562:27;16552:55;;16603:1;16600;16593:12;16552:55;16636:2;16630:9;16678:3;16670:6;16666:16;16748:6;16736:10;16733:22;-1:-1:-1;;;;;16700:10:66;16697:34;16694:62;16691:88;;;16759:18;;:::i;:::-;16795:2;16788:22;16830:6;16871:3;16859:16;;16887:15;;;16884:35;;;16915:1;16912;16905:12;16884:35;16939:6;16954:221;16970:6;16965:3;16962:15;16954:221;;;17052:3;17039:17;17069:31;17094:5;17069:31;:::i;:::-;17113:18;;17160:4;17151:14;;;;16987;16954:221;;;-1:-1:-1;17193:6:66;;16482:723;-1:-1:-1;;;;;16482:723:66:o;17210:737::-;17264:5;17317:3;17310:4;17302:6;17298:17;17294:27;17284:55;;17335:1;17332;17325:12;17284:55;17371:6;17358:20;17397:4;17421:60;17437:43;17477:2;17437:43;:::i;17421:60::-;17515:15;;;17601:1;17597:10;;;;17585:23;;17581:32;;;17546:12;;;;17625:15;;;17622:35;;;17653:1;17650;17643:12;17622:35;17689:2;17681:6;17677:15;17701:217;17717:6;17712:3;17709:15;17701:217;;;17797:3;17784:17;17814:31;17839:5;17814:31;:::i;:::-;17858:18;;17896:12;;;;17734;;17701:217;;;-1:-1:-1;17936:5:66;17210:737;-1:-1:-1;;;;;;17210:737:66:o;17952:1513::-;18149:6;18157;18165;18173;18181;18189;18197;18205;18258:3;18246:9;18237:7;18233:23;18229:33;18226:53;;;18275:1;18272;18265:12;18226:53;18314:9;18301:23;18333:31;18358:5;18333:31;:::i;:::-;18383:5;-1:-1:-1;18407:2:66;18445:18;;;18432:32;-1:-1:-1;;;;;18513:14:66;;;18510:34;;;18540:1;18537;18530:12;18510:34;18563:50;18605:7;18596:6;18585:9;18581:22;18563:50;:::i;:::-;18553:60;;18632:35;18663:2;18652:9;18648:18;18632:35;:::i;:::-;18622:45;;18686:35;18717:2;18706:9;18702:18;18686:35;:::i;:::-;18676:45;;18768:3;18757:9;18753:19;18740:33;18730:43;;18817:7;18811:3;18800:9;18796:19;18792:33;18782:61;;18839:1;18836;18829:12;18782:61;18863:22;;:::i;:::-;18852:33;;18907:3;18948;18937:9;18933:19;18975:7;18967:6;18964:19;18961:39;;;18996:1;18993;18986:12;18961:39;19035:3;19024:9;19020:19;19048:142;19064:6;19059:3;19056:15;19048:142;;;19130:17;;19118:30;;19168:12;;;;19081;;19048:142;;;19052:3;19209:5;19199:15;;19233:41;19266:7;19258:6;19233:41;:::i;:::-;19223:51;;;;19327:3;19316:9;19312:19;19299:33;19283:49;;19357:2;19347:8;19344:16;19341:36;;;19373:1;19370;19363:12;19341:36;;;19396:63;19451:7;19440:8;19429:9;19425:24;19396:63;:::i;:::-;19386:73;;;17952:1513;;;;;;;;;;;:::o;19470:679::-;19572:6;19580;19588;19596;19649:3;19637:9;19628:7;19624:23;19620:33;19617:53;;;19666:1;19663;19656:12;19617:53;19702:9;19689:23;19679:33;;19731:35;19762:2;19751:9;19747:18;19731:35;:::i;:::-;19721:45;;19817:2;19806:9;19802:18;19789:32;-1:-1:-1;;;;;19881:2:66;19873:6;19870:14;19867:34;;;19897:1;19894;19887:12;20154:315;20222:6;20230;20283:2;20271:9;20262:7;20258:23;20254:32;20251:52;;;20299:1;20296;20289:12;20251:52;20335:9;20322:23;20312:33;;20395:2;20384:9;20380:18;20367:32;20408:31;20433:5;20408:31;:::i;:::-;20458:5;20448:15;;;20154:315;;;;;:::o;20474:382::-;20681:6;20674:14;20667:22;20656:9;20649:41;20740:6;20733:14;20726:22;20721:2;20710:9;20706:18;20699:50;20785:2;20780;20769:9;20765:18;20758:30;20630:4;20805:45;20846:2;20835:9;20831:18;20823:6;20805:45;:::i;:::-;20797:53;20474:382;-1:-1:-1;;;;;20474:382:66:o;20861:898::-;-1:-1:-1;;;;;21259:32:66;;21241:51;;21200:4;21229:3;21301:56;21353:2;21338:18;;21330:6;21301:56;:::i;:::-;21393:2;21388;21377:9;21373:18;21366:30;21413:45;21454:2;21443:9;21439:18;21431:6;21413:45;:::i;:::-;21489:2;21474:18;;21467:34;;;;-1:-1:-1;;21532:3:66;21517:19;;21510:35;;;;21576:3;21561:19;;21554:35;;;;21633:14;;21626:22;21620:3;21605:19;;21598:51;21693:14;21686:22;21680:3;21665:19;;21658:51;21740:3;21725:19;;;21718:35;21405:53;20861:898;-1:-1:-1;;;20861:898:66:o;21764:736::-;21869:6;21877;21885;21893;21901;21954:3;21942:9;21933:7;21929:23;21925:33;21922:53;;;21971:1;21968;21961:12;21922:53;22010:9;21997:23;22029:31;22054:5;22029:31;:::i;:::-;22079:5;-1:-1:-1;22131:2:66;22116:18;;22103:32;;-1:-1:-1;22187:2:66;22172:18;;22159:32;22200:33;22159:32;22200:33;:::i;:::-;22252:7;-1:-1:-1;22310:2:66;22295:18;;22282:32;-1:-1:-1;;;;;22326:30:66;;22323:50;;;22369:1;22366;22359:12;22505:251;22575:6;22628:2;22616:9;22607:7;22603:23;22599:32;22596:52;;;22644:1;22641;22634:12;22596:52;22676:9;22670:16;22695:31;22720:5;22695:31;:::i;22761:461::-;23023:1;23019;23014:3;23010:11;23006:19;22998:6;22994:32;22983:9;22976:51;23063:6;23058:2;23047:9;23043:18;23036:34;23106:3;23101:2;23090:9;23086:18;23079:31;22957:4;23127:46;23168:3;23157:9;23153:19;23145:6;23127:46;:::i;:::-;23119:54;;23209:6;23204:2;23193:9;23189:18;23182:34;22761:461;;;;;;;:::o;23227:274::-;23356:3;23394:6;23388:13;23410:53;23456:6;23451:3;23444:4;23436:6;23432:17;23410:53;:::i;:::-;23479:16;;;;;23227:274;-1:-1:-1;;23227:274:66:o;23506:643::-;23777:3;23766:9;23759:22;23740:4;23804:46;23845:3;23834:9;23830:19;23822:6;23804:46;:::i;:::-;23898:9;23890:6;23886:22;23881:2;23870:9;23866:18;23859:50;23932:33;23958:6;23950;23932:33;:::i;:::-;-1:-1:-1;;;;;24001:32:66;;23996:2;23981:18;;23974:60;24070:22;;;24065:2;24050:18;;24043:50;23918:47;-1:-1:-1;24110:33:66;23918:47;24128:6;24110:33;:::i;:::-;24102:41;23506:643;-1:-1:-1;;;;;;;23506:643:66:o;24154:563::-;-1:-1:-1;;;;;24453:15:66;;;24435:34;;24505:15;;24500:2;24485:18;;24478:43;24552:2;24537:18;;24530:34;;;24415:3;24595:2;24580:18;;24573:31;;;24378:4;;24621:46;;24647:19;;24639:6;24621:46;:::i;:::-;24613:54;;24704:6;24698:3;24687:9;24683:19;24676:35;24154:563;;;;;;;;:::o;24722:380::-;24801:1;24797:12;;;;24844;;;24865:61;;24919:4;24911:6;24907:17;24897:27;;24865:61;24972:2;24964:6;24961:14;24941:18;24938:38;24935:161;;;25018:10;25013:3;25009:20;25006:1;24999:31;25053:4;25050:1;25043:15;25081:4;25078:1;25071:15;24935:161;;24722:380;;;:::o;25107:551::-;-1:-1:-1;;;;;25358:32:66;;25340:51;;25427:3;25422:2;25407:18;;25400:31;;;-1:-1:-1;;25454:46:66;;25480:19;;25472:6;25454:46;:::i;:::-;25536:6;25531:2;25520:9;25516:18;25509:34;25591:9;25583:6;25579:22;25574:2;25563:9;25559:18;25552:50;25619:33;25645:6;25637;25619:33;:::i;25663:797::-;-1:-1:-1;;;;;25984:32:66;;25966:51;;26053:3;26048:2;26033:18;;26026:31;;;-1:-1:-1;;26080:46:66;;26106:19;;26098:6;26080:46;:::i;:::-;26174:9;26166:6;26162:22;26157:2;26146:9;26142:18;26135:50;26208:33;26234:6;26226;26208:33;:::i;:::-;26194:47;;26291:6;26284:14;26277:22;26272:2;26261:9;26257:18;26250:50;26337:6;26331:3;26320:9;26316:19;26309:35;26393:9;26385:6;26381:22;26375:3;26364:9;26360:19;26353:51;26421:33;26447:6;26439;26421:33;:::i;:::-;26413:41;25663:797;-1:-1:-1;;;;;;;;;25663:797:66:o;26465:362::-;26670:6;26659:9;26652:25;26713:2;26708;26697:9;26693:18;26686:30;26633:4;26733:45;26774:2;26763:9;26759:18;26751:6;26733:45;:::i;:::-;26725:53;;26814:6;26809:2;26798:9;26794:18;26787:34;26465:362;;;;;;:::o;26832:635::-;27084:4;27130:1;27126;27121:3;27117:11;27113:19;27171:2;27163:6;27159:15;27148:9;27141:34;27211:6;27206:2;27195:9;27191:18;27184:34;27266:2;27258:6;27254:15;27249:2;27238:9;27234:18;27227:43;;27306:6;27301:2;27290:9;27286:18;27279:34;27350:6;27344:3;27333:9;27329:19;27322:35;27394:3;27388;27377:9;27373:19;27366:32;27415:46;27456:3;27445:9;27441:19;27433:6;27415:46;:::i;:::-;27407:54;26832:635;-1:-1:-1;;;;;;;;26832:635:66:o;27472:310::-;27655:2;27644:9;27637:21;27618:4;27675:45;27716:2;27705:9;27701:18;27693:6;27675:45;:::i;:::-;27667:53;;27768:6;27760;27756:19;27751:2;27740:9;27736:18;27729:47;27472:310;;;;;:::o;28091:1010::-;28397:3;28410:22;;;28481:13;;28382:19;;;28503:22;;;28349:4;;28579;;28556:3;28541:19;;;28606:15;;;28349:4;28649:169;28663:6;28660:1;28657:13;28649:169;;;28724:13;;28712:26;;28758:12;;;;28793:15;;;;28685:1;28678:9;28649:169;;;28653:3;;;28868:6;28861:14;28854:22;28849:2;28838:9;28834:18;28827:50;28922:9;28917:3;28913:19;28908:2;28897:9;28893:18;28886:47;28956:30;28982:3;28974:6;28956:30;:::i;:::-;28942:44;;;29034:9;29026:6;29022:22;29017:2;29006:9;29002:18;28995:50;29062:33;29088:6;29080;29062:33;:::i;29521:127::-;29582:10;29577:3;29573:20;29570:1;29563:31;29613:4;29610:1;29603:15;29637:4;29634:1;29627:15;29653:352;29746:5;29769:1;29779:220;29793:4;29790:1;29787:11;29779:220;;;29856:13;;-1:-1:-1;;;;;29852:39:66;29840:52;;29915:4;29939:12;;;;29974:15;;;;29888:1;29806:9;29779:220;;30010:461;30063:3;30101:5;30095:12;30128:6;30123:3;30116:19;30154:4;30183:2;30178:3;30174:12;30167:19;;30220:2;30213:5;30209:14;30241:1;30251:195;30265:6;30262:1;30259:13;30251:195;;;30330:13;;-1:-1:-1;;;;;30326:39:66;30314:52;;30386:12;;;;30421:15;;;;30362:1;30280:9;30251:195;;;-1:-1:-1;30462:3:66;;30010:461;-1:-1:-1;;;;;30010:461:66:o;30476:1291::-;-1:-1:-1;;;;;30973:32:66;;30955:51;;30943:3;31025:2;31043:18;;;31036:30;;;30914:4;;30943:3;31089:45;31115:18;;;31107:6;31089:45;:::i;:::-;31075:59;;31184:6;31177:14;31170:22;31165:2;31154:9;31150:18;31143:50;31243:6;31236:14;31229:22;31224:2;31213:9;31209:18;31202:50;31289:6;31283:3;31272:9;31268:19;31261:35;31331:3;31320:9;31316:19;31377:6;31401:1;31411:167;31425:4;31422:1;31419:11;31411:167;;;31484:13;;31472:26;;31518:12;;;;31553:15;;;;31445:1;31438:9;31411:167;;;31415:3;;;;31587:53;31635:3;31624:9;31620:19;31612:6;31587:53;:::i;:::-;31689:9;31681:6;31677:22;31671:3;31660:9;31656:19;31649:51;31717:44;31754:6;31746;31717:44;:::i;:::-;31709:52;30476:1291;-1:-1:-1;;;;;;;;;;;30476:1291:66:o;31961:535::-;32206:6;32195:9;32188:25;32263:6;32256:14;32249:22;32244:2;32233:9;32229:18;32222:50;32308:3;32303:2;32292:9;32288:18;32281:31;32169:4;32335:46;32376:3;32365:9;32361:19;32353:6;32335:46;:::i;:::-;32429:9;32421:6;32417:22;32412:2;32401:9;32397:18;32390:50;32457:33;32483:6;32475;32457:33;:::i;32501:563::-;-1:-1:-1;;;;;32800:15:66;;;32782:34;;32847:2;32832:18;;32825:34;;;32895:15;;32890:2;32875:18;;32868:43;32762:3;32942:2;32927:18;;32920:31;;;32725:4;;32968:46;;32994:19;;32986:6;32968:46;:::i",
  "language": "Solidity",
  "natspec": {
    "author": "Leonardo Urrego",
    "events": {
      "evtUser(uint8,address,string)": {
        "notice": "### Contract events ###"
      }
    },
    "kind": "dev",
    "methods": {
      "AcceptRejectInvitation(bool,bytes)": {
        "notice": "For an user that have an invitation pending",
        "params": {
          "_acceptance": "True for accept the invitation"
        }
      },
      "ExecProp(uint256)": {
        "details": "Normally is called internally after each vote",
        "notice": "Execute (or reject) a proposal computing the votes and the governance model",
        "params": {
          "_propId": "ID of the proposal, based on `arrProposals`"
        },
        "returns": {
          "message": "result of the transaction",
          "status": "True if the proposal can be execute, false in other cases"
        }
      },
      "GetArrDataPropUser()": {
        "notice": "Get complete array of arrDataPropUser",
        "returns": {
          "_0": "arrDataPropUser the array with all data"
        }
      },
      "GetArrProposalsLength()": {
        "notice": "Length of arrProposals array"
      },
      "GetArrUsersLength()": {
        "notice": "Length of arrUsers array"
      },
      "GetProposalList()": {
        "notice": "The list of all Proposals",
        "returns": {
          "_0": "arrProposals the array with all proposals"
        }
      },
      "Init(address,string,bool,bool,bytes32,uint256[3],address[6],address[])": {
        "details": "Some parameters can be ignored depending on the governance model",
        "notice": "Create a new CLH",
        "params": {
          "_CLC": "Array for CL Contracts and others see `enum eCLC`",
          "_ManagerWallets": "Whitelist of address for invitate as managers",
          "_govModel": "keccak256 hash of the governance model, see the __GOV_* constans",
          "_govRules": "Array for goverment rules see `enum gRule`",
          "_houseName": "Name given by the owner",
          "_houseOpen": "If is set to 1, the CLH is set to Open",
          "_housePrivate": "If is set to 1, the CLH is set to private",
          "_owner": "The address of the deployed wallet"
        }
      },
      "PropGovRules(uint256,string,uint256)": {
        "details": "When execute this proposal the new values will be set",
        "notice": "Generate a new proposal for change some governance parameters",
        "params": {
          "_description": "About the new proposal ",
          "_newApprovPercentage": "The new percentaje for accept or reject a proposal"
        },
        "returns": {
          "propId": "ID of the new proposal, based on `arrProposals`"
        }
      },
      "PropInviteUser(address,string,string,bool,uint256,bytes)": {
        "details": "the execution of this proposal only create an invitation ",
        "notice": "Generate a new proposal to invite a new user",
        "params": {
          "_description": "A text for the proposal",
          "_isManager": "True if is for a manager",
          "_name": "Can be the nickname or other reference to the User",
          "_walletAddr": "Address of the new user"
        },
        "returns": {
          "propId": "ID of the new proposal, based on `arrProposals`"
        }
      },
      "PropRemoveUser(address,string,uint256,bytes)": {
        "details": "The user can be a managaer",
        "notice": "Generate a new proposal for remove a user",
        "params": {
          "_description": "About the proposal",
          "_walletAddr": "user Address to be removed"
        },
        "returns": {
          "propId": "ID of the new proposal, based on `arrProposals`"
        }
      },
      "PropRequestToJoin(string,string,address,bytes)": {
        "details": "Only avaiable in public CLH",
        "notice": "Generate a proposal from a user that want to join to the CLH",
        "params": {
          "_description": "About the request",
          "_name": "Nickname or other user identification",
          "_signerWallet": "Address of signer to check OffChain signature"
        },
        "returns": {
          "_0": "propId ID of the new proposal, based on `arrProposals`"
        }
      },
      "PropTxERC20(address,uint256,address,string,uint256)": {
        "details": "When execute this proposal, the transfer is made",
        "notice": "generate a new proposal to transfer ETH in weis",
        "params": {
          "_amountOutCLV": "Amount to transfer (in wei)",
          "_description": "About this proposal",
          "_to": "Recipient address"
        },
        "returns": {
          "propId": "ID of the new proposal, based on `arrProposals`"
        }
      },
      "PropTxWei(address,uint256,string,uint256)": {
        "details": "When execute this proposal, the transfer is made",
        "notice": "generate a new proposal to transfer ETH in weis",
        "params": {
          "_amountOutCLV": "Amount to transfer (in wei)",
          "_description": "About this proposal",
          "_to": "Recipient address"
        },
        "returns": {
          "propId": "ID of the new proposal, based on `arrProposals`"
        }
      },
      "VoteProposal(uint256,bool,string,bytes)": {
        "details": "After vote the proposal automatically try to be executed",
        "notice": "Used to vote a proposal",
        "params": {
          "_justification": "About your vote",
          "_propId": "ID of the proposal, based on `arrProposals`",
          "_support": "True for accept, false to reject"
        }
      },
      "bulkVote(uint256[],bool,string,bytes)": {
        "notice": "Vote for multiple proposal",
        "params": {
          "_justification": "Description of the vote",
          "_propId": "Array with ID of the proposal to votes",
          "_support": "is the Vote (True or False) for all proposals"
        }
      },
      "constructor": {
        "custom:oz-upgrades-unsafe-allow": "constructor"
      },
      "housePrivate()": {
        "notice": "### CLH Public Variables ###"
      }
    },
    "notice": "This contract for test only the most basic interactions",
    "title": "Contract to implement and test the basic fuctions of CLHouses",
    "version": 1
  },
  "offset": [
    366,
    18735
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2A0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6C2F34E7 GT PUSH2 0x167 JUMPI DUP1 PUSH4 0xB4C62192 GT PUSH2 0xCE JUMPI DUP1 PUSH4 0xCB85669C GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xCB85669C EQ PUSH2 0x65E JUMPI DUP1 PUSH4 0xDE5AB14E EQ PUSH2 0x686 JUMPI DUP1 PUSH4 0xE68777D7 EQ PUSH2 0x699 JUMPI DUP1 PUSH4 0xE810A58E EQ PUSH2 0x6A2 JUMPI DUP1 PUSH4 0xF00D6274 EQ PUSH2 0x6AB JUMPI DUP1 PUSH4 0xFE0298DB EQ PUSH2 0x6B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB4C62192 EQ PUSH2 0x5A8 JUMPI DUP1 PUSH4 0xBAA4D5E9 EQ PUSH2 0x5BD JUMPI DUP1 PUSH4 0xBF97E2DA EQ PUSH2 0x603 JUMPI DUP1 PUSH4 0xC2B3AA08 EQ PUSH2 0x616 JUMPI DUP1 PUSH4 0xC347D2FD EQ PUSH2 0x629 JUMPI DUP1 PUSH4 0xCADA7F19 EQ PUSH2 0x64B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x860228FD GT PUSH2 0x120 JUMPI DUP1 PUSH4 0x860228FD EQ PUSH2 0x53E JUMPI DUP1 PUSH4 0x9360BFAD EQ PUSH2 0x55E JUMPI DUP1 PUSH4 0x9C630A88 EQ PUSH2 0x571 JUMPI DUP1 PUSH4 0xA0A625F9 EQ PUSH2 0x57A JUMPI DUP1 PUSH4 0xA1C89C9D EQ PUSH2 0x58D JUMPI DUP1 PUSH4 0xA693649A EQ PUSH2 0x5A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6C2F34E7 EQ PUSH2 0x4BD JUMPI DUP1 PUSH4 0x70FF918C EQ PUSH2 0x4D0 JUMPI DUP1 PUSH4 0x79C26FA4 EQ PUSH2 0x4F0 JUMPI DUP1 PUSH4 0x7C638548 EQ PUSH2 0x503 JUMPI DUP1 PUSH4 0x81CF22D8 EQ PUSH2 0x516 JUMPI DUP1 PUSH4 0x840D30B4 EQ PUSH2 0x52B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x22B4081C GT PUSH2 0x20B JUMPI DUP1 PUSH4 0x4E9D5472 GT PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x4E9D5472 EQ PUSH2 0x439 JUMPI DUP1 PUSH4 0x50F7308A EQ PUSH2 0x441 JUMPI DUP1 PUSH4 0x59CA2D03 EQ PUSH2 0x461 JUMPI DUP1 PUSH4 0x5DE58F60 EQ PUSH2 0x476 JUMPI DUP1 PUSH4 0x5F3D99B3 EQ PUSH2 0x489 JUMPI DUP1 PUSH4 0x6285E98C EQ PUSH2 0x4AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x22B4081C EQ PUSH2 0x3B4 JUMPI DUP1 PUSH4 0x29647EE5 EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0x2A57EF84 EQ PUSH2 0x3ED JUMPI DUP1 PUSH4 0x31A0AFA7 EQ PUSH2 0x400 JUMPI DUP1 PUSH4 0x3A70693D EQ PUSH2 0x413 JUMPI DUP1 PUSH4 0x3ED02FC4 EQ PUSH2 0x426 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1707ACE8 GT PUSH2 0x25D JUMPI DUP1 PUSH4 0x1707ACE8 EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0x19A50F49 EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0x1D5FD3CA EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0x1F2E1339 EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0x1F50DD27 EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0x2266E1BC EQ PUSH2 0x3A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4F17A9B EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x52F9B0A EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0x10790717 EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0x12EAB7FF EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0x1343E9A5 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0x152DE3B9 EQ PUSH2 0x325 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2B8 PUSH2 0x2B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2013 JUMP JUMPDEST PUSH2 0x6D9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0xC4 SLOAD PUSH2 0x2DE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2C2 JUMP JUMPDEST PUSH1 0x22 SLOAD PUSH2 0x2DE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x317 CALLDATASIZE PUSH1 0x4 PUSH2 0x2073 JUMP JUMPDEST PUSH2 0x807 JUMP JUMPDEST PUSH2 0x2B8 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x333 CALLDATASIZE PUSH1 0x4 PUSH2 0x210F JUMP JUMPDEST PUSH2 0x8DB JUMP JUMPDEST PUSH2 0x34B PUSH2 0x346 CALLDATASIZE PUSH1 0x4 PUSH2 0x2182 JUMP JUMPDEST PUSH2 0x9B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH2 0x2B8 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2B8 PUSH1 0x62 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x37E SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2C2 JUMP JUMPDEST PUSH1 0xC5 SLOAD PUSH2 0x2DE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x3AF CALLDATASIZE PUSH1 0x4 PUSH2 0x2013 JUMP JUMPDEST PUSH2 0xA7C JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0x3C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2182 JUMP JUMPDEST PUSH2 0xB50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C2 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2229 JUMP JUMPDEST PUSH2 0x3E0 PUSH2 0xC2B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x226C JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x3FB CALLDATASIZE PUSH1 0x4 PUSH2 0x22FA JUMP JUMPDEST PUSH2 0xD44 JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x40E CALLDATASIZE PUSH1 0x4 PUSH2 0x2375 JUMP JUMPDEST PUSH2 0xE7B JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x421 CALLDATASIZE PUSH1 0x4 PUSH2 0x2182 JUMP JUMPDEST PUSH2 0xFB8 JUMP JUMPDEST PUSH1 0x25 SLOAD PUSH2 0x2DE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x83 SLOAD PUSH2 0x2B8 JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x44F CALLDATASIZE PUSH1 0x4 PUSH2 0x2428 JUMP JUMPDEST PUSH1 0xA3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x469 PUSH2 0xFD9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x244C JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x484 CALLDATASIZE PUSH1 0x4 PUSH2 0x245F JUMP JUMPDEST PUSH2 0x1067 JUMP JUMPDEST PUSH2 0x49C PUSH2 0x497 CALLDATASIZE PUSH1 0x4 PUSH2 0x2182 JUMP JUMPDEST PUSH2 0x119B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C2 SWAP3 SWAP2 SWAP1 PUSH2 0x24AE JUMP JUMPDEST PUSH1 0x24 SLOAD PUSH2 0x2DE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xC2 SLOAD PUSH2 0x2DE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x4DE CALLDATASIZE PUSH1 0x4 PUSH2 0x2428 JUMP JUMPDEST PUSH1 0xA2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2DE PUSH2 0x4FE CALLDATASIZE PUSH1 0x4 PUSH2 0x24D1 JUMP JUMPDEST PUSH2 0x1307 JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x511 CALLDATASIZE PUSH1 0x4 PUSH2 0x2013 JUMP JUMPDEST PUSH2 0x1407 JUMP JUMPDEST PUSH2 0x529 PUSH2 0x524 CALLDATASIZE PUSH1 0x4 PUSH2 0x251E JUMP JUMPDEST PUSH2 0x14DB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x529 PUSH2 0x539 CALLDATASIZE PUSH1 0x4 PUSH2 0x2428 JUMP JUMPDEST PUSH2 0x15FB JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x54C CALLDATASIZE PUSH1 0x4 PUSH2 0x2428 JUMP JUMPDEST PUSH1 0xA4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC3 SLOAD PUSH2 0x2DE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2B8 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC1 SLOAD PUSH2 0x2DE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x529 PUSH2 0x59B CALLDATASIZE PUSH1 0x4 PUSH2 0x258E JUMP JUMPDEST PUSH2 0x1626 JUMP JUMPDEST PUSH1 0x82 SLOAD PUSH2 0x2B8 JUMP JUMPDEST PUSH2 0x5B0 PUSH2 0x16EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x26A2 JUMP JUMPDEST PUSH2 0x5D0 PUSH2 0x5CB CALLDATASIZE PUSH1 0x4 PUSH2 0x2182 JUMP JUMPDEST PUSH2 0x186C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP2 DUP5 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x2C2 JUMP JUMPDEST PUSH2 0x529 PUSH2 0x611 CALLDATASIZE PUSH1 0x4 PUSH2 0x284E JUMP JUMPDEST PUSH2 0x18B4 JUMP JUMPDEST PUSH2 0x529 PUSH2 0x624 CALLDATASIZE PUSH1 0x4 PUSH2 0x2951 JUMP JUMPDEST PUSH2 0x1A77 JUMP JUMPDEST PUSH2 0x63C PUSH2 0x637 CALLDATASIZE PUSH1 0x4 PUSH2 0x2993 JUMP JUMPDEST PUSH2 0x1B9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x29C3 JUMP JUMPDEST PUSH1 0x23 SLOAD PUSH2 0x2DE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x671 PUSH2 0x66C CALLDATASIZE PUSH1 0x4 PUSH2 0x2182 JUMP JUMPDEST PUSH2 0x1C5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C2 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x29EF JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x694 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A56 JUMP JUMPDEST PUSH2 0x1D53 JUMP JUMPDEST PUSH2 0x2B8 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2B8 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x37E SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH5 0x302E312E31 PUSH1 0xD8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x469 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA327AB69 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x72F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x753 SWAP2 SWAP1 PUSH2 0x2AAB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x778 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2AC8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x4F17A9B PUSH1 0xE0 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x7AD SWAP2 SWAP1 PUSH2 0x2B00 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x7ED JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP3 PUSH2 0x803 JUMPI DUP1 DUP3 REVERT JUMPDEST DUP1 DUP3 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA327AB69 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x85D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x881 SWAP2 SWAP1 PUSH2 0x2AAB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x8A6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B1C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x12EAB7FF PUSH1 0xE0 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x7AD SWAP2 SWAP1 PUSH2 0x2B00 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA327AB69 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x931 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x955 SWAP2 SWAP1 PUSH2 0x2AAB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x97C SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B6F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x152DE3B9 PUSH1 0xE0 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x7AD SWAP2 SWAP1 PUSH2 0x2B00 JUMP JUMPDEST PUSH1 0x84 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x9C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP4 POP SWAP1 PUSH2 0x9F0 SWAP1 PUSH2 0x2BB4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA1C SWAP1 PUSH2 0x2BB4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA69 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA3E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA69 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA4C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x2 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 POP POP PUSH1 0xFF AND DUP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA327AB69 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAD2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAF6 SWAP2 SWAP1 PUSH2 0x2AAB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xB1B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2AC8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x899B86F PUSH1 0xE2 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x7AD SWAP2 SWAP1 PUSH2 0x2B00 JUMP JUMPDEST PUSH1 0x82 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xB60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP4 POP SWAP1 PUSH2 0xB8F SWAP1 PUSH2 0x2BB4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBBB SWAP1 PUSH2 0x2BB4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC08 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBDD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC08 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBEB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 SWAP2 PUSH1 0xFF DUP1 DUP3 AND SWAP3 POP PUSH2 0x100 SWAP1 SWAP2 DIV AND DUP6 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x84 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xD3B JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP6 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD SWAP3 SWAP4 SWAP2 SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH2 0xC98 SWAP1 PUSH2 0x2BB4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xCC4 SWAP1 PUSH2 0x2BB4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD11 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCE6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD11 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCF4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x2 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x20 SWAP2 DUP3 ADD MSTORE SWAP1 DUP3 MSTORE PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0xC4F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA327AB69 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD9A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDBE SWAP2 SWAP1 PUSH2 0x2AAB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xDE3 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2BEF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA95FBE1 PUSH1 0xE2 SHL OR SWAP1 MSTORE MLOAD PUSH2 0xE18 SWAP2 SWAP1 PUSH2 0x2B00 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xE53 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xE58 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP3 PUSH2 0xE6E JUMPI DUP1 DUP3 REVERT JUMPDEST POP MLOAD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA327AB69 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xED1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEF5 SWAP2 SWAP1 PUSH2 0x2AAB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xF1E SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2C2B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x31A0AFA7 PUSH1 0xE0 SHL OR SWAP1 MSTORE MLOAD PUSH2 0xF53 SWAP2 SWAP1 PUSH2 0x2B00 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xF8E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF93 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP3 PUSH2 0xFA9 JUMPI DUP1 DUP3 REVERT JUMPDEST POP MLOAD SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x86 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xFC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x42 DUP1 SLOAD PUSH2 0xFE6 SWAP1 PUSH2 0x2BB4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1012 SWAP1 PUSH2 0x2BB4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x105F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1034 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x105F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1042 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA327AB69 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10BD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10E1 SWAP2 SWAP1 PUSH2 0x2AAB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1104 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2C90 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x2EF2C7B PUSH1 0xE5 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x1139 SWAP2 SWAP1 PUSH2 0x2B00 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1174 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1179 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP3 PUSH2 0x118F JUMPI DUP1 DUP3 REVERT JUMPDEST POP MLOAD SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH1 0xC1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA327AB69 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11F4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1218 SWAP2 SWAP1 PUSH2 0x2AAB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1239 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x5F3D99B3 PUSH1 0xE0 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x126E SWAP2 SWAP1 PUSH2 0x2B00 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x12A9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12AE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x12C4 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP1 DUP3 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x537563636573732065786563757465642070726F706F73616C00000000000000 DUP2 MSTORE POP SWAP4 POP SWAP4 POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1312 CALLER PUSH2 0x1E8D JUMP JUMPDEST PUSH1 0x0 CALLER DUP7 PUSH1 0x0 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1330 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2CB9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x6EADDE43 PUSH1 0xE0 SHL OR SWAP1 MSTORE MLOAD PUSH4 0x243D453B PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH20 0x627118A4FB747016911E5CDA82E2E77C531E8206 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH4 0x487A8A76 SWAP1 PUSH2 0x1399 SWAP1 DUP7 SWAP1 PUSH1 0xB SWAP1 PUSH1 0x4 ADD PUSH2 0x2D02 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13B8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13DC SWAP2 SWAP1 PUSH2 0x2AAB JUMP JUMPDEST PUSH1 0x25 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA327AB69 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x145D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1481 SWAP2 SWAP1 PUSH2 0x2AAB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x14A6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2AC8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xF8C70A9 PUSH1 0xE3 SHL OR SWAP1 MSTORE MLOAD PUSH2 0xE18 SWAP2 SWAP1 PUSH2 0x2B00 JUMP JUMPDEST PUSH1 0xC1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x529382D5 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x529382D5 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1525 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1549 SWAP2 SWAP1 PUSH2 0x2AAB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x156A SWAP3 SWAP2 SWAP1 PUSH2 0x24AE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x1039E45B PUSH1 0xE3 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x159F SWAP2 SWAP1 PUSH2 0x2B00 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x15DA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x15DF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x15F5 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP1 DUP3 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1604 CALLER PUSH2 0x1E8D JUMP JUMPDEST PUSH1 0x24 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xC1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA327AB69 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xA327AB69 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1670 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1694 SWAP2 SWAP1 PUSH2 0x2AAB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x16B9 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D28 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA1C89C9D PUSH1 0xE0 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x7AD SWAP2 SWAP1 PUSH2 0x2B00 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x83 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xD3B JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x7 DUP6 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP4 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x8 DUP2 GT ISZERO PUSH2 0x1769 JUMPI PUSH2 0x1769 PUSH2 0x266A JUMP JUMPDEST PUSH1 0x8 DUP2 GT ISZERO PUSH2 0x177A JUMPI PUSH2 0x177A PUSH2 0x266A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x178E SWAP1 PUSH2 0x2BB4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x17BA SWAP1 PUSH2 0x2BB4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1807 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x17DC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1807 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x17EA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0x80 DUP6 ADD MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x6 SWAP1 SWAP3 ADD SLOAD PUSH1 0xC0 SWAP1 SWAP2 ADD MSTORE SWAP1 DUP3 MSTORE PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1712 JUMP JUMPDEST PUSH1 0x85 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x187C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP5 POP SWAP1 SWAP3 DUP3 AND SWAP2 AND DUP5 JUMP JUMPDEST PUSH1 0xC5 SLOAD PUSH1 0x1 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x18DF JUMPI POP PUSH1 0xC5 SLOAD PUSH1 0xFF DUP1 DUP4 AND PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP3 DIV AND LT JUMPDEST PUSH2 0x1947 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC5 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT PUSH1 0xFF DUP5 AND PUSH1 0x1 PUSH1 0xA0 SHL MUL AND PUSH2 0xFFFF PUSH1 0xA0 SHL NOT SWAP1 SWAP2 AND OR PUSH1 0x1 PUSH1 0xA8 SHL OR SWAP1 SSTORE DUP3 MLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x199D SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 PUSH1 0x24 ADD PUSH2 0x2E18 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x729777ED PUSH1 0xE0 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x19D2 SWAP2 SWAP1 PUSH2 0x2B00 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1A0D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1A12 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1A28 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP1 DUP3 REVERT JUMPDEST POP PUSH1 0xC5 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0xFF DUP3 AND DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xC1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA327AB69 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xA327AB69 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AC1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AE5 SWAP2 SWAP1 PUSH2 0x2AAB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1B0A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2EB0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x18567541 PUSH1 0xE3 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x1B3F SWAP2 SWAP1 PUSH2 0x2B00 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1B7A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1B7F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1B95 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP1 DUP3 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xA5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0xFF DUP1 DUP5 AND SWAP5 PUSH2 0x100 SWAP1 SWAP5 DIV AND SWAP3 SWAP2 SWAP1 PUSH2 0x1BD7 SWAP1 PUSH2 0x2BB4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1C03 SWAP1 PUSH2 0x2BB4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1C50 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1C25 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1C50 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1C33 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x83 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1C6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x7 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP5 POP PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP3 DIV PUSH1 0xFF AND SWAP3 SWAP2 PUSH2 0x1CA4 SWAP1 PUSH2 0x2BB4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1CD0 SWAP1 PUSH2 0x2BB4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1D1D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1CF2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1D1D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1D00 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x2 DUP5 ADD SLOAD PUSH1 0x3 DUP6 ADD SLOAD PUSH1 0x4 DUP7 ADD SLOAD PUSH1 0x5 DUP8 ADD SLOAD PUSH1 0x6 SWAP1 SWAP8 ADD SLOAD SWAP6 SWAP7 SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP PUSH1 0xFF DUP1 DUP4 AND SWAP3 PUSH2 0x100 SWAP1 DIV AND SWAP1 DUP10 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA327AB69 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1DA9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DCD SWAP2 SWAP1 PUSH2 0x2AAB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1DF4 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2EE3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x6F2D58A7 PUSH1 0xE1 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x1E29 SWAP2 SWAP1 PUSH2 0x2B00 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1E64 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1E69 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP3 PUSH2 0x1E7F JUMPI DUP1 DUP3 REVERT JUMPDEST POP MLOAD SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x82 DUP1 SLOAD SWAP1 SWAP2 SWAP1 DUP2 LT PUSH2 0x1EBB JUMPI PUSH2 0x1EBB PUSH2 0x2D92 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 PUSH1 0x4 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF PUSH2 0x100 SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x1F1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x4E6F74206D616E6167657220726967687473 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x193E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1F1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1F6E JUMPI PUSH2 0x1F6E PUSH2 0x1F36 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1F9C JUMPI PUSH2 0x1F9C PUSH2 0x1F36 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1FB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1FCE JUMPI PUSH2 0x1FCE PUSH2 0x1F36 JUMP JUMPDEST PUSH2 0x1FE1 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x1F74 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x1FF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2029 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x2034 DUP2 PUSH2 0x1F21 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2056 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2062 DUP8 DUP3 DUP9 ADD PUSH2 0x1FA4 JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP4 SWAP5 PUSH1 0x60 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2089 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x20A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20AC DUP9 DUP4 DUP10 ADD PUSH2 0x1FA4 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x20C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20CE DUP9 DUP4 DUP10 ADD PUSH2 0x1FA4 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH2 0x20E0 DUP3 PUSH2 0x1F21 JUMP JUMPDEST SWAP1 SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x20F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2103 DUP8 DUP3 DUP9 ADD PUSH2 0x1FA4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2127 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x2132 DUP2 PUSH2 0x1F21 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x2142 DUP2 PUSH2 0x1F21 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2170 DUP9 DUP3 DUP10 ADD PUSH2 0x1FA4 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP3 SWAP6 PUSH1 0x80 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x21B6 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x219E JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x15F5 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x21DF DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x219B JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2217 SWAP1 DUP4 ADD DUP6 PUSH2 0x21C7 JUMP JUMPDEST SWAP1 POP DUP3 ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x224D SWAP1 DUP4 ADD DUP8 PUSH2 0x21C7 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE POP SWAP2 ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x80 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 SWAP3 POP DUP3 DUP7 ADD SWAP2 POP DUP3 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD DUP5 DUP9 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x22EC JUMPI DUP9 DUP4 SUB PUSH1 0x3F NOT ADD DUP6 MSTORE DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE DUP8 DUP2 ADD MLOAD PUSH1 0x60 DUP10 DUP7 ADD DUP2 SWAP1 MSTORE SWAP1 PUSH2 0x22CC DUP3 DUP8 ADD DUP3 PUSH2 0x21C7 JUMP JUMPDEST SWAP3 DUP10 ADD MLOAD ISZERO ISZERO SWAP6 DUP10 ADD SWAP6 SWAP1 SWAP6 MSTORE POP SWAP5 DUP8 ADD SWAP5 SWAP3 POP SWAP1 DUP7 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2293 JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x231B DUP2 PUSH2 0x1F21 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x2337 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2343 DUP9 DUP4 DUP10 ADD PUSH2 0x1FA4 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x20F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2370 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x238E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x2399 DUP2 PUSH2 0x1F21 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x23B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x23C1 DUP11 DUP4 DUP12 ADD PUSH2 0x1FA4 JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x23D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x23E3 DUP11 DUP4 DUP12 ADD PUSH2 0x1FA4 JUMP JUMPDEST SWAP6 POP PUSH2 0x23F1 PUSH1 0x60 DUP11 ADD PUSH2 0x2360 JUMP JUMPDEST SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x240E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x241B DUP10 DUP3 DUP11 ADD PUSH2 0x1FA4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x243A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2445 DUP2 PUSH2 0x1F21 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2445 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x21C7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2474 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2491 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x249D DUP7 DUP3 DUP8 ADD PUSH2 0x1FA4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x24C9 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x21C7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x24E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2512 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2103 DUP8 DUP3 DUP9 ADD PUSH2 0x1FA4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2531 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x253A DUP4 PUSH2 0x2360 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2555 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2561 DUP6 DUP3 DUP7 ADD PUSH2 0x1FA4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x2584 JUMPI PUSH2 0x2584 PUSH2 0x1F36 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x25A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x25BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x25CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x25E4 PUSH2 0x25DF DUP4 PUSH2 0x256B JUMP JUMPDEST PUSH2 0x1F74 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP12 DUP5 GT ISZERO PUSH2 0x2603 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x2621 JUMPI DUP6 CALLDATALOAD DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x2608 JUMP JUMPDEST SWAP9 POP PUSH2 0x2630 SWAP1 POP DUP10 DUP3 ADD PUSH2 0x2360 JUMP JUMPDEST SWAP7 POP POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2648 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2654 DUP9 DUP4 DUP10 ADD PUSH2 0x1FA4 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x20F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x9 DUP2 LT PUSH2 0x269E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 SWAP3 POP DUP3 DUP7 ADD SWAP2 POP DUP3 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD DUP5 DUP9 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x22EC JUMPI DUP9 DUP4 SUB PUSH1 0x3F NOT ADD DUP6 MSTORE DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH2 0x120 DUP9 DUP3 ADD MLOAD PUSH2 0x26FC DUP11 DUP8 ADD DUP3 PUSH2 0x2680 JUMP JUMPDEST POP DUP8 DUP3 ADD MLOAD DUP2 DUP10 DUP8 ADD MSTORE PUSH2 0x2712 DUP3 DUP8 ADD DUP3 PUSH2 0x21C7 JUMP JUMPDEST PUSH1 0x60 DUP5 DUP2 ADD MLOAD SWAP1 DUP9 ADD MSTORE PUSH1 0x80 DUP1 DUP6 ADD MLOAD SWAP1 DUP9 ADD MSTORE PUSH1 0xA0 DUP1 DUP6 ADD MLOAD SWAP1 DUP9 ADD MSTORE PUSH1 0xC0 DUP1 DUP6 ADD MLOAD ISZERO ISZERO SWAP1 DUP9 ADD MSTORE PUSH1 0xE0 DUP1 DUP6 ADD MLOAD ISZERO ISZERO SWAP1 DUP9 ADD MSTORE PUSH2 0x100 SWAP4 DUP5 ADD MLOAD SWAP4 SWAP1 SWAP7 ADD SWAP3 SWAP1 SWAP3 MSTORE POP POP SWAP4 DUP7 ADD SWAP4 SWAP1 DUP7 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x26C9 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x277A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xC0 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR ISZERO PUSH2 0x279C JUMPI PUSH2 0x279C PUSH2 0x1F36 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP1 PUSH1 0xC0 DUP5 ADD DUP6 DUP2 GT ISZERO PUSH2 0x27B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x27D4 JUMPI DUP1 CALLDATALOAD PUSH2 0x27C6 DUP2 PUSH2 0x1F21 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x27B3 JUMP JUMPDEST POP SWAP2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x27F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x2800 PUSH2 0x25DF DUP4 PUSH2 0x256B JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x281F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x2843 JUMPI DUP1 CALLDATALOAD PUSH2 0x2836 DUP2 PUSH2 0x1F21 JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x2823 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1E0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x286B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH2 0x2876 DUP2 PUSH2 0x1F21 JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 DUP2 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x2893 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x289F DUP14 DUP4 DUP15 ADD PUSH2 0x1FA4 JUMP JUMPDEST SWAP10 POP PUSH2 0x28AD PUSH1 0x40 DUP14 ADD PUSH2 0x2360 JUMP JUMPDEST SWAP9 POP PUSH2 0x28BB PUSH1 0x60 DUP14 ADD PUSH2 0x2360 JUMP JUMPDEST SWAP8 POP PUSH1 0x80 DUP13 ADD CALLDATALOAD SWAP7 POP DUP13 PUSH1 0xBF DUP14 ADD SLT PUSH2 0x28D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x28DB PUSH2 0x1F4C JUMP JUMPDEST SWAP2 POP DUP2 PUSH2 0x100 DUP14 ADD DUP15 DUP2 GT ISZERO PUSH2 0x28F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA0 DUP15 ADD JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x290C JUMPI DUP1 CALLDATALOAD DUP6 MSTORE SWAP4 DUP6 ADD SWAP4 DUP6 ADD PUSH2 0x28F5 JUMP JUMPDEST POP DUP2 SWAP8 POP PUSH2 0x291A DUP16 DUP3 PUSH2 0x2769 JUMP JUMPDEST SWAP7 POP POP POP PUSH2 0x1C0 DUP13 ADD CALLDATALOAD SWAP3 POP DUP1 DUP4 GT ISZERO PUSH2 0x2933 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH2 0x2941 DUP12 DUP3 DUP13 ADD PUSH2 0x27DF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2967 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH2 0x2977 PUSH1 0x20 DUP7 ADD PUSH2 0x2360 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x2648 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x29A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x29B8 DUP2 PUSH2 0x1F21 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP4 ISZERO ISZERO DUP2 MSTORE DUP3 ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x29E6 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x21C7 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP2 MSTORE PUSH1 0x0 PUSH2 0x120 PUSH2 0x2A0D PUSH1 0x20 DUP5 ADD DUP13 PUSH2 0x2680 JUMP JUMPDEST DUP1 PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x2A1F DUP2 DUP5 ADD DUP12 PUSH2 0x21C7 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD SWAP10 SWAP1 SWAP10 MSTORE POP POP PUSH1 0x80 DUP2 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0xA0 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0xC0 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 SWAP1 SWAP2 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2A6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x2A79 DUP2 PUSH2 0x1F21 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH2 0x2A90 DUP2 PUSH2 0x1F21 JUMP JUMPDEST SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2ABD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2445 DUP2 PUSH2 0x1F21 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2AEF PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x21C7 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x60 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2B12 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x219B JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2B2F PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x21C7 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2B41 DUP2 DUP8 PUSH2 0x21C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x40 DUP6 ADD MSTORE DUP4 DUP2 SUB PUSH1 0x60 DUP6 ADD MSTORE SWAP1 POP PUSH2 0x2B64 DUP2 DUP6 PUSH2 0x21C7 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2BA2 SWAP1 DUP4 ADD DUP6 PUSH2 0x21C7 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x80 DUP4 ADD MSTORE SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2BC8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2BE9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2C13 SWAP1 DUP4 ADD DUP7 PUSH2 0x21C7 JUMP JUMPDEST DUP5 PUSH1 0x40 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x2B64 DUP2 DUP6 PUSH2 0x21C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP2 MSTORE PUSH1 0xC0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2C4F SWAP1 DUP4 ADD DUP9 PUSH2 0x21C7 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x2C61 DUP2 DUP9 PUSH2 0x21C7 JUMP JUMPDEST SWAP1 POP DUP6 ISZERO ISZERO PUSH1 0x60 DUP5 ADD MSTORE DUP5 PUSH1 0x80 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0x2C83 DUP2 DUP6 PUSH2 0x21C7 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2CA9 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x21C7 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND DUP4 MSTORE DUP8 PUSH1 0x20 DUP5 ADD MSTORE DUP1 DUP8 AND PUSH1 0x40 DUP5 ADD MSTORE POP DUP5 PUSH1 0x60 DUP4 ADD MSTORE DUP4 PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xC0 PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x2CF6 PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x21C7 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2D15 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x21C7 JUMP JUMPDEST SWAP1 POP PUSH2 0xFFFF DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP1 DUP3 MSTORE DUP6 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0xA0 DUP5 ADD SWAP1 DUP3 DUP10 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2D61 JUMPI DUP2 MLOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2D45 JUMP JUMPDEST POP POP POP DUP7 ISZERO ISZERO DUP3 DUP6 ADD MSTORE DUP4 DUP2 SUB PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x2D7D DUP2 DUP8 PUSH2 0x21C7 JUMP JUMPDEST SWAP2 POP POP DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x2B64 DUP2 DUP6 PUSH2 0x21C7 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 PUSH1 0x0 JUMPDEST PUSH1 0x6 DUP2 LT ISZERO PUSH2 0x15F5 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2DAC JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2E0D JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2DE8 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP2 MSTORE PUSH2 0x1E0 PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH2 0x2E3F DUP5 DUP4 ADD DUP13 PUSH2 0x21C7 JUMP JUMPDEST SWAP2 POP DUP10 ISZERO ISZERO PUSH1 0x40 DUP6 ADD MSTORE DUP9 ISZERO ISZERO PUSH1 0x60 DUP6 ADD MSTORE DUP8 PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD DUP8 PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x2E7C JUMPI DUP2 MLOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2E5F JUMP JUMPDEST POP POP POP POP PUSH2 0x2E8E PUSH2 0x100 DUP5 ADD DUP7 PUSH2 0x2DA8 JUMP JUMPDEST DUP3 DUP2 SUB PUSH2 0x1C0 DUP5 ADD MSTORE PUSH2 0x2EA1 DUP2 DUP6 PUSH2 0x2DD4 JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP5 DUP2 MSTORE DUP4 ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2ED1 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x21C7 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x2B64 DUP2 DUP6 PUSH2 0x21C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE DUP5 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2BA2 SWAP1 DUP4 ADD DUP6 PUSH2 0x21C7 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 0xF6 PUSH20 0x57894A797AC6817C0B029515D92F8FDAECE1E805 PUSH16 0x489FC39CA03934F664736F6C63430008 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        366,
        18735
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "CALLVALUE",
      "path": "50"
    },
    "6": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "7": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "8": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "12": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "REVERT",
      "path": "50"
    },
    "16": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "17": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "POP",
      "path": "50"
    },
    "18": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "21": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "LT",
      "path": "50"
    },
    "22": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2A0"
    },
    "25": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "26": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "CALLDATALOAD",
      "path": "50"
    },
    "29": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "SHR",
      "path": "50"
    },
    "32": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "33": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x6C2F34E7"
    },
    "38": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "GT",
      "path": "50"
    },
    "39": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x167"
    },
    "42": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "43": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "44": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xB4C62192"
    },
    "49": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "GT",
      "path": "50"
    },
    "50": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xCE"
    },
    "53": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "54": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "55": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xCB85669C"
    },
    "60": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "GT",
      "path": "50"
    },
    "61": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x87"
    },
    "64": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "65": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "66": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xCB85669C"
    },
    "71": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "EQ",
      "path": "50"
    },
    "72": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x65E"
    },
    "75": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "76": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "77": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xDE5AB14E"
    },
    "82": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "EQ",
      "path": "50"
    },
    "83": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x686"
    },
    "86": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "87": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "88": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xE68777D7"
    },
    "93": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "EQ",
      "path": "50"
    },
    "94": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x699"
    },
    "97": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "98": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "99": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xE810A58E"
    },
    "104": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "EQ",
      "path": "50"
    },
    "105": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x6A2"
    },
    "108": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "109": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "110": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xF00D6274"
    },
    "115": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "EQ",
      "path": "50"
    },
    "116": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x6AB"
    },
    "119": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "120": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "121": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xFE0298DB"
    },
    "126": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "EQ",
      "path": "50"
    },
    "127": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x6B8"
    },
    "130": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "131": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "133": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "134": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "REVERT",
      "path": "50"
    },
    "135": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "136": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "137": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xB4C62192"
    },
    "142": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "EQ",
      "path": "50"
    },
    "143": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x5A8"
    },
    "146": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "147": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "148": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xBAA4D5E9"
    },
    "153": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "EQ",
      "path": "50"
    },
    "154": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x5BD"
    },
    "157": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "158": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "159": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xBF97E2DA"
    },
    "164": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "EQ",
      "path": "50"
    },
    "165": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x603"
    },
    "168": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "169": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "170": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xC2B3AA08"
    },
    "175": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "EQ",
      "path": "50"
    },
    "176": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x616"
    },
    "179": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "180": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "181": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xC347D2FD"
    },
    "186": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "EQ",
      "path": "50"
    },
    "187": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x629"
    },
    "190": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "191": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "192": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xCADA7F19"
    },
    "197": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "EQ",
      "path": "50"
    },
    "198": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x64B"
    },
    "201": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "202": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "204": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "205": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "REVERT",
      "path": "50"
    },
    "206": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "207": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "208": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x860228FD"
    },
    "213": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "GT",
      "path": "50"
    },
    "214": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x120"
    },
    "217": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "218": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "219": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x860228FD"
    },
    "224": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "EQ",
      "path": "50"
    },
    "225": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x53E"
    },
    "228": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "229": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "230": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x9360BFAD"
    },
    "235": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "EQ",
      "path": "50"
    },
    "236": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x55E"
    },
    "239": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "240": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "241": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x9C630A88"
    },
    "246": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "EQ",
      "path": "50"
    },
    "247": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x571"
    },
    "250": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "251": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "252": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xA0A625F9"
    },
    "257": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "EQ",
      "path": "50"
    },
    "258": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x57A"
    },
    "261": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "262": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "263": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xA1C89C9D"
    },
    "268": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "EQ",
      "path": "50"
    },
    "269": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x58D"
    },
    "272": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "273": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "274": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xA693649A"
    },
    "279": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "EQ",
      "path": "50"
    },
    "280": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x5A0"
    },
    "283": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "284": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "286": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "287": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "REVERT",
      "path": "50"
    },
    "288": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "289": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "290": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x6C2F34E7"
    },
    "295": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "EQ",
      "path": "50"
    },
    "296": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x4BD"
    },
    "299": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "300": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "301": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x70FF918C"
    },
    "306": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "EQ",
      "path": "50"
    },
    "307": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x4D0"
    },
    "310": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "311": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "312": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x79C26FA4"
    },
    "317": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "EQ",
      "path": "50"
    },
    "318": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x4F0"
    },
    "321": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "322": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "323": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x7C638548"
    },
    "328": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "EQ",
      "path": "50"
    },
    "329": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x503"
    },
    "332": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "333": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "334": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x81CF22D8"
    },
    "339": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "EQ",
      "path": "50"
    },
    "340": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x516"
    },
    "343": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "344": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "345": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x840D30B4"
    },
    "350": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "EQ",
      "path": "50"
    },
    "351": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x52B"
    },
    "354": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "355": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "357": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "358": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "REVERT",
      "path": "50"
    },
    "359": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "360": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "361": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x22B4081C"
    },
    "366": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "GT",
      "path": "50"
    },
    "367": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x20B"
    },
    "370": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "371": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "372": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x4E9D5472"
    },
    "377": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "GT",
      "path": "50"
    },
    "378": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1C4"
    },
    "381": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "382": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "383": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x4E9D5472"
    },
    "388": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "EQ",
      "path": "50"
    },
    "389": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x439"
    },
    "392": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "393": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "394": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x50F7308A"
    },
    "399": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "EQ",
      "path": "50"
    },
    "400": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x441"
    },
    "403": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "404": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "405": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x59CA2D03"
    },
    "410": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "EQ",
      "path": "50"
    },
    "411": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x461"
    },
    "414": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "415": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "416": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x5DE58F60"
    },
    "421": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "EQ",
      "path": "50"
    },
    "422": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x476"
    },
    "425": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "426": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "427": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x5F3D99B3"
    },
    "432": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "EQ",
      "path": "50"
    },
    "433": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x489"
    },
    "436": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "437": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "438": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x6285E98C"
    },
    "443": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "EQ",
      "path": "50"
    },
    "444": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x4AA"
    },
    "447": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "448": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "450": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "451": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "REVERT",
      "path": "50"
    },
    "452": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "453": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "454": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x22B4081C"
    },
    "459": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "EQ",
      "path": "50"
    },
    "460": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x3B4"
    },
    "463": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "464": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "465": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x29647EE5"
    },
    "470": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "EQ",
      "path": "50"
    },
    "471": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x3D8"
    },
    "474": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "475": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "476": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x2A57EF84"
    },
    "481": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "EQ",
      "path": "50"
    },
    "482": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x3ED"
    },
    "485": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "486": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "487": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x31A0AFA7"
    },
    "492": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "EQ",
      "path": "50"
    },
    "493": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x400"
    },
    "496": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "497": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "498": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x3A70693D"
    },
    "503": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "EQ",
      "path": "50"
    },
    "504": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x413"
    },
    "507": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "508": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "509": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x3ED02FC4"
    },
    "514": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "EQ",
      "path": "50"
    },
    "515": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x426"
    },
    "518": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "519": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "521": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "522": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "REVERT",
      "path": "50"
    },
    "523": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "524": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "525": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x1707ACE8"
    },
    "530": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "GT",
      "path": "50"
    },
    "531": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x25D"
    },
    "534": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "535": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "536": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x1707ACE8"
    },
    "541": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "EQ",
      "path": "50"
    },
    "542": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x338"
    },
    "545": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "546": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "547": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x19A50F49"
    },
    "552": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "EQ",
      "path": "50"
    },
    "553": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x35A"
    },
    "556": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "557": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "558": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x1D5FD3CA"
    },
    "563": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "EQ",
      "path": "50"
    },
    "564": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x363"
    },
    "567": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "568": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "569": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x1F2E1339"
    },
    "574": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "EQ",
      "path": "50"
    },
    "575": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x36C"
    },
    "578": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "579": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "580": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x1F50DD27"
    },
    "585": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "EQ",
      "path": "50"
    },
    "586": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x38E"
    },
    "589": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "590": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "591": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x2266E1BC"
    },
    "596": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "EQ",
      "path": "50"
    },
    "597": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x3A1"
    },
    "600": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "601": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "603": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "604": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "REVERT",
      "path": "50"
    },
    "605": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "606": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "607": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x4F17A9B"
    },
    "612": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "EQ",
      "path": "50"
    },
    "613": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2A5"
    },
    "616": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "617": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "618": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x52F9B0A"
    },
    "623": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "EQ",
      "path": "50"
    },
    "624": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2CB"
    },
    "627": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "628": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "629": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x10790717"
    },
    "634": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "EQ",
      "path": "50"
    },
    "635": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2F6"
    },
    "638": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "639": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "640": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x12EAB7FF"
    },
    "645": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "EQ",
      "path": "50"
    },
    "646": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x309"
    },
    "649": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "650": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "651": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x1343E9A5"
    },
    "656": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "EQ",
      "path": "50"
    },
    "657": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x31C"
    },
    "660": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "661": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "662": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x152DE3B9"
    },
    "667": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "EQ",
      "path": "50"
    },
    "668": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x325"
    },
    "671": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "672": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "673": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "675": {
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "DUP1",
      "path": "50"
    },
    "676": {
      "first_revert": true,
      "fn": null,
      "offset": [
        366,
        18735
      ],
      "op": "REVERT",
      "path": "50"
    },
    "677": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14038,
        14938
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "678": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14038,
        14938
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2B8"
    },
    "681": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14038,
        14938
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2B3"
    },
    "684": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14038,
        14938
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "685": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14038,
        14938
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "687": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14038,
        14938
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2013"
    },
    "690": {
      "fn": "CLHouse.PropSellERC20",
      "jump": "i",
      "offset": [
        14038,
        14938
      ],
      "op": "JUMP",
      "path": "50"
    },
    "691": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14038,
        14938
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "692": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14038,
        14938
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x6D9"
    },
    "695": {
      "fn": "CLHouse.PropSellERC20",
      "jump": "i",
      "offset": [
        14038,
        14938
      ],
      "op": "JUMP",
      "path": "50"
    },
    "696": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14038,
        14938
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "697": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14038,
        14938
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "699": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14038,
        14938
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "700": {
      "op": "SWAP1"
    },
    "701": {
      "op": "DUP2"
    },
    "702": {
      "op": "MSTORE"
    },
    "703": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "705": {
      "op": "ADD"
    },
    "706": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14038,
        14938
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "707": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14038,
        14938
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "709": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14038,
        14938
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "710": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14038,
        14938
      ],
      "op": "DUP1",
      "path": "50"
    },
    "711": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14038,
        14938
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "712": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14038,
        14938
      ],
      "op": "SUB",
      "path": "50"
    },
    "713": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14038,
        14938
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "714": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14038,
        14938
      ],
      "op": "RETURN",
      "path": "50"
    },
    "715": {
      "offset": [
        1638,
        1663
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "716": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1638,
        1663
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0xC4"
    },
    "718": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1638,
        1663
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "719": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1638,
        1663
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2DE"
    },
    "722": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1638,
        1663
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "727": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "729": {
      "op": "SHL"
    },
    "730": {
      "op": "SUB"
    },
    "731": {
      "offset": [
        1638,
        1663
      ],
      "op": "AND",
      "path": "47"
    },
    "732": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1638,
        1663
      ],
      "op": "DUP2",
      "path": "47"
    },
    "733": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1638,
        1663
      ],
      "op": "JUMP",
      "path": "47"
    },
    "734": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1638,
        1663
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "735": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1638,
        1663
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "737": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1638,
        1663
      ],
      "op": "MLOAD",
      "path": "47"
    },
    "738": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "740": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "742": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "744": {
      "op": "SHL"
    },
    "745": {
      "op": "SUB"
    },
    "746": {
      "op": "SWAP1"
    },
    "747": {
      "op": "SWAP2"
    },
    "748": {
      "op": "AND"
    },
    "749": {
      "op": "DUP2"
    },
    "750": {
      "op": "MSTORE"
    },
    "751": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "753": {
      "op": "ADD"
    },
    "754": {
      "offset": [
        1638,
        1663
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2C2"
    },
    "757": {
      "op": "JUMP"
    },
    "758": {
      "offset": [
        675,
        696
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "759": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        675,
        696
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x22"
    },
    "761": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        675,
        696
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "762": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        675,
        696
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2DE"
    },
    "765": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        675,
        696
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "770": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "772": {
      "op": "SHL"
    },
    "773": {
      "op": "SUB"
    },
    "774": {
      "offset": [
        675,
        696
      ],
      "op": "AND",
      "path": "47"
    },
    "775": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        675,
        696
      ],
      "op": "DUP2",
      "path": "47"
    },
    "776": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        675,
        696
      ],
      "op": "JUMP",
      "path": "47"
    },
    "777": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11303,
        12205
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "778": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11303,
        12205
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2B8"
    },
    "781": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11303,
        12205
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x317"
    },
    "784": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11303,
        12205
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "785": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11303,
        12205
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "787": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11303,
        12205
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2073"
    },
    "790": {
      "fn": "CLHouse.PropRequestToJoin",
      "jump": "i",
      "offset": [
        11303,
        12205
      ],
      "op": "JUMP",
      "path": "50"
    },
    "791": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11303,
        12205
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "792": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11303,
        12205
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x807"
    },
    "795": {
      "fn": "CLHouse.PropRequestToJoin",
      "jump": "i",
      "offset": [
        11303,
        12205
      ],
      "op": "JUMP",
      "path": "50"
    },
    "796": {
      "offset": [
        569,
        599
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "797": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        569,
        599
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2B8"
    },
    "800": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        569,
        599
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x5"
    },
    "802": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        569,
        599
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "803": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        569,
        599
      ],
      "op": "DUP2",
      "path": "47"
    },
    "804": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        569,
        599
      ],
      "op": "JUMP",
      "path": "47"
    },
    "805": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13066,
        14032
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "806": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13066,
        14032
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2B8"
    },
    "809": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13066,
        14032
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x333"
    },
    "812": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13066,
        14032
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "813": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13066,
        14032
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "815": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13066,
        14032
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x210F"
    },
    "818": {
      "fn": "CLHouse.PropSwapERC20",
      "jump": "i",
      "offset": [
        13066,
        14032
      ],
      "op": "JUMP",
      "path": "50"
    },
    "819": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13066,
        14032
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "820": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13066,
        14032
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x8DB"
    },
    "823": {
      "fn": "CLHouse.PropSwapERC20",
      "jump": "i",
      "offset": [
        13066,
        14032
      ],
      "op": "JUMP",
      "path": "50"
    },
    "824": {
      "offset": [
        1026,
        1062
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "825": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x34B"
    },
    "828": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x346"
    },
    "831": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "CALLDATASIZE",
      "path": "47"
    },
    "832": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x4"
    },
    "834": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2182"
    },
    "837": {
      "fn": "CLHouse.PropSwapERC20",
      "jump": "i",
      "offset": [
        1026,
        1062
      ],
      "op": "JUMP",
      "path": "47"
    },
    "838": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "839": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x9B1"
    },
    "842": {
      "fn": "CLHouse.PropSwapERC20",
      "jump": "i",
      "offset": [
        1026,
        1062
      ],
      "op": "JUMP",
      "path": "47"
    },
    "843": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "844": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "846": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "MLOAD",
      "path": "47"
    },
    "847": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2C2"
    },
    "850": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "SWAP4",
      "path": "47"
    },
    "851": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "852": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "853": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "854": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x21F3"
    },
    "857": {
      "fn": "CLHouse.PropSwapERC20",
      "jump": "i",
      "offset": [
        1026,
        1062
      ],
      "op": "JUMP",
      "path": "47"
    },
    "858": {
      "offset": [
        464,
        487
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "859": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        464,
        487
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2B8"
    },
    "862": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        464,
        487
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x2"
    },
    "864": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        464,
        487
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "865": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        464,
        487
      ],
      "op": "DUP2",
      "path": "47"
    },
    "866": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        464,
        487
      ],
      "op": "JUMP",
      "path": "47"
    },
    "867": {
      "offset": [
        882,
        919
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "868": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        882,
        919
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2B8"
    },
    "871": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        882,
        919
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x62"
    },
    "873": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        882,
        919
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "874": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        882,
        919
      ],
      "op": "DUP2",
      "path": "47"
    },
    "875": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        882,
        919
      ],
      "op": "JUMP",
      "path": "47"
    },
    "876": {
      "offset": [
        412,
        433
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "877": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        412,
        433
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "879": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        412,
        433
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "880": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        412,
        433
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x37E"
    },
    "883": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        412,
        433
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "884": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        412,
        433
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x100"
    },
    "887": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        412,
        433
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "888": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        412,
        433
      ],
      "op": "DIV",
      "path": "47"
    },
    "889": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        412,
        433
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0xFF"
    },
    "891": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        412,
        433
      ],
      "op": "AND",
      "path": "47"
    },
    "892": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        412,
        433
      ],
      "op": "DUP2",
      "path": "47"
    },
    "893": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        412,
        433
      ],
      "op": "JUMP",
      "path": "47"
    },
    "894": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        412,
        433
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "895": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        412,
        433
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "897": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        412,
        433
      ],
      "op": "MLOAD",
      "path": "47"
    },
    "898": {
      "op": "SWAP1"
    },
    "899": {
      "op": "ISZERO"
    },
    "900": {
      "op": "ISZERO"
    },
    "901": {
      "op": "DUP2"
    },
    "902": {
      "op": "MSTORE"
    },
    "903": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "905": {
      "op": "ADD"
    },
    "906": {
      "offset": [
        412,
        433
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2C2"
    },
    "909": {
      "op": "JUMP"
    },
    "910": {
      "offset": [
        1669,
        1698
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "911": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1669,
        1698
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0xC5"
    },
    "913": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1669,
        1698
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "914": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1669,
        1698
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2DE"
    },
    "917": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1669,
        1698
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "922": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "924": {
      "op": "SHL"
    },
    "925": {
      "op": "SUB"
    },
    "926": {
      "offset": [
        1669,
        1698
      ],
      "op": "AND",
      "path": "47"
    },
    "927": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1669,
        1698
      ],
      "op": "DUP2",
      "path": "47"
    },
    "928": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1669,
        1698
      ],
      "op": "JUMP",
      "path": "47"
    },
    "929": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14944,
        15840
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "930": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14944,
        15840
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2B8"
    },
    "933": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14944,
        15840
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x3AF"
    },
    "936": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14944,
        15840
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "937": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14944,
        15840
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "939": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14944,
        15840
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2013"
    },
    "942": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "i",
      "offset": [
        14944,
        15840
      ],
      "op": "JUMP",
      "path": "50"
    },
    "943": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14944,
        15840
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "944": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14944,
        15840
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xA7C"
    },
    "947": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "i",
      "offset": [
        14944,
        15840
      ],
      "op": "JUMP",
      "path": "50"
    },
    "948": {
      "offset": [
        956,
        981
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "949": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x3C7"
    },
    "952": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x3C2"
    },
    "955": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "CALLDATASIZE",
      "path": "47"
    },
    "956": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x4"
    },
    "958": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2182"
    },
    "961": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "i",
      "offset": [
        956,
        981
      ],
      "op": "JUMP",
      "path": "47"
    },
    "962": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "963": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0xB50"
    },
    "966": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "i",
      "offset": [
        956,
        981
      ],
      "op": "JUMP",
      "path": "47"
    },
    "967": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "968": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "970": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "MLOAD",
      "path": "47"
    },
    "971": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2C2"
    },
    "974": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "SWAP6",
      "path": "47"
    },
    "975": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "SWAP5",
      "path": "47"
    },
    "976": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "SWAP4",
      "path": "47"
    },
    "977": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "978": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "979": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "980": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2229"
    },
    "983": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "i",
      "offset": [
        956,
        981
      ],
      "op": "JUMP",
      "path": "47"
    },
    "984": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17568,
        17683
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "985": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17568,
        17683
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x3E0"
    },
    "988": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17568,
        17683
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xC2B"
    },
    "991": {
      "fn": "CLHouse.GetArrDataPropUser",
      "jump": "i",
      "offset": [
        17568,
        17683
      ],
      "op": "JUMP",
      "path": "50"
    },
    "992": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17568,
        17683
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "993": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17568,
        17683
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "995": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17568,
        17683
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "996": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17568,
        17683
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2C2"
    },
    "999": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17568,
        17683
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1000": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17568,
        17683
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1001": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17568,
        17683
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x226C"
    },
    "1004": {
      "fn": "CLHouse.GetArrDataPropUser",
      "jump": "i",
      "offset": [
        17568,
        17683
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1005": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6276,
        7183
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1006": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6276,
        7183
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2B8"
    },
    "1009": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6276,
        7183
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x3FB"
    },
    "1012": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6276,
        7183
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "1013": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6276,
        7183
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "1015": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6276,
        7183
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x22FA"
    },
    "1018": {
      "fn": "CLHouse.PropRemoveUser",
      "jump": "i",
      "offset": [
        6276,
        7183
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1019": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6276,
        7183
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1020": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6276,
        7183
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xD44"
    },
    "1023": {
      "fn": "CLHouse.PropRemoveUser",
      "jump": "i",
      "offset": [
        6276,
        7183
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1024": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4976,
        6000
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1025": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4976,
        6000
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2B8"
    },
    "1028": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4976,
        6000
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x40E"
    },
    "1031": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4976,
        6000
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "1032": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4976,
        6000
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "1034": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4976,
        6000
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2375"
    },
    "1037": {
      "fn": "CLHouse.PropInviteUser",
      "jump": "i",
      "offset": [
        4976,
        6000
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1038": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4976,
        6000
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1039": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4976,
        6000
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xE7B"
    },
    "1042": {
      "fn": "CLHouse.PropInviteUser",
      "jump": "i",
      "offset": [
        4976,
        6000
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1043": {
      "offset": [
        1118,
        1162
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1044": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1118,
        1162
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2B8"
    },
    "1047": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1118,
        1162
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x421"
    },
    "1050": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1118,
        1162
      ],
      "op": "CALLDATASIZE",
      "path": "47"
    },
    "1051": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1118,
        1162
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x4"
    },
    "1053": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1118,
        1162
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2182"
    },
    "1056": {
      "fn": "CLHouse.PropInviteUser",
      "jump": "i",
      "offset": [
        1118,
        1162
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1057": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1118,
        1162
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1058": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1118,
        1162
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0xFB8"
    },
    "1061": {
      "fn": "CLHouse.PropInviteUser",
      "jump": "i",
      "offset": [
        1118,
        1162
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1062": {
      "offset": [
        763,
        785
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1063": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        763,
        785
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x25"
    },
    "1065": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        763,
        785
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "1066": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        763,
        785
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2DE"
    },
    "1069": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        763,
        785
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "1070": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1072": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1074": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1076": {
      "op": "SHL"
    },
    "1077": {
      "op": "SUB"
    },
    "1078": {
      "offset": [
        763,
        785
      ],
      "op": "AND",
      "path": "47"
    },
    "1079": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        763,
        785
      ],
      "op": "DUP2",
      "path": "47"
    },
    "1080": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        763,
        785
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1081": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        17129,
        17237
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1082": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        17211,
        17223
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 0,
      "value": "0x83"
    },
    "1084": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        17211,
        17230
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "1085": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        17129,
        17237
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2B8"
    },
    "1088": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        17129,
        17237
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1089": {
      "offset": [
        1250,
        1304
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1090": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        1250,
        1304
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2B8"
    },
    "1093": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        1250,
        1304
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x44F"
    },
    "1096": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        1250,
        1304
      ],
      "op": "CALLDATASIZE",
      "path": "47"
    },
    "1097": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        1250,
        1304
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x4"
    },
    "1099": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        1250,
        1304
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2428"
    },
    "1102": {
      "fn": "CLHouse.GetArrProposalsLength",
      "jump": "i",
      "offset": [
        1250,
        1304
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1103": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        1250,
        1304
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1104": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        1250,
        1304
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0xA3"
    },
    "1106": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        1250,
        1304
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "1108": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        1250,
        1304
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "1109": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        1250,
        1304
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "1111": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        1250,
        1304
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "1112": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        1250,
        1304
      ],
      "op": "DUP2",
      "path": "47"
    },
    "1113": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        1250,
        1304
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "1114": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        1250,
        1304
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "1116": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        1250,
        1304
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "1117": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        1250,
        1304
      ],
      "op": "KECCAK256",
      "path": "47"
    },
    "1118": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        1250,
        1304
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "1119": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        1250,
        1304
      ],
      "op": "DUP2",
      "path": "47"
    },
    "1120": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        1250,
        1304
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1121": {
      "offset": [
        822,
        846
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1122": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        822,
        846
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x469"
    },
    "1125": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        822,
        846
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0xFD9"
    },
    "1128": {
      "fn": "CLHouse.GetArrProposalsLength",
      "jump": "i",
      "offset": [
        822,
        846
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1129": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        822,
        846
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1130": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        822,
        846
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "1132": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        822,
        846
      ],
      "op": "MLOAD",
      "path": "47"
    },
    "1133": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        822,
        846
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2C2"
    },
    "1136": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        822,
        846
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "1137": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        822,
        846
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "1138": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        822,
        846
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x244C"
    },
    "1141": {
      "fn": "CLHouse.GetArrProposalsLength",
      "jump": "i",
      "offset": [
        822,
        846
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1142": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10074,
        10928
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1143": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10074,
        10928
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2B8"
    },
    "1146": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10074,
        10928
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x484"
    },
    "1149": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10074,
        10928
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "1150": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10074,
        10928
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "1152": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10074,
        10928
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x245F"
    },
    "1155": {
      "fn": "CLHouse.PropGovRules",
      "jump": "i",
      "offset": [
        10074,
        10928
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1156": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10074,
        10928
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1157": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10074,
        10928
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1067"
    },
    "1160": {
      "fn": "CLHouse.PropGovRules",
      "jump": "i",
      "offset": [
        10074,
        10928
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1161": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2667,
        3428
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1162": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2667,
        3428
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x49C"
    },
    "1165": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2667,
        3428
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x497"
    },
    "1168": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2667,
        3428
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "1169": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2667,
        3428
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "1171": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2667,
        3428
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2182"
    },
    "1174": {
      "fn": "CLHouse.ExecProp",
      "jump": "i",
      "offset": [
        2667,
        3428
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1175": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2667,
        3428
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1176": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2667,
        3428
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x119B"
    },
    "1179": {
      "fn": "CLHouse.ExecProp",
      "jump": "i",
      "offset": [
        2667,
        3428
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1180": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2667,
        3428
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1181": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2667,
        3428
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1183": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2667,
        3428
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1184": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2667,
        3428
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2C2"
    },
    "1187": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2667,
        3428
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "1188": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2667,
        3428
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1189": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2667,
        3428
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1190": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2667,
        3428
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x24AE"
    },
    "1193": {
      "fn": "CLHouse.ExecProp",
      "jump": "i",
      "offset": [
        2667,
        3428
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1194": {
      "offset": [
        730,
        757
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1195": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        730,
        757
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x24"
    },
    "1197": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        730,
        757
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "1198": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        730,
        757
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2DE"
    },
    "1201": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        730,
        757
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "1202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1204": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1206": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1208": {
      "op": "SHL"
    },
    "1209": {
      "op": "SUB"
    },
    "1210": {
      "offset": [
        730,
        757
      ],
      "op": "AND",
      "path": "47"
    },
    "1211": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        730,
        757
      ],
      "op": "DUP2",
      "path": "47"
    },
    "1212": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        730,
        757
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1213": {
      "offset": [
        1579,
        1602
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1214": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1579,
        1602
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0xC2"
    },
    "1216": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1579,
        1602
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "1217": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1579,
        1602
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2DE"
    },
    "1220": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1579,
        1602
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "1221": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1223": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1225": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1227": {
      "op": "SHL"
    },
    "1228": {
      "op": "SUB"
    },
    "1229": {
      "offset": [
        1579,
        1602
      ],
      "op": "AND",
      "path": "47"
    },
    "1230": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1579,
        1602
      ],
      "op": "DUP2",
      "path": "47"
    },
    "1231": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1579,
        1602
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1232": {
      "offset": [
        1198,
        1244
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1233": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1198,
        1244
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2B8"
    },
    "1236": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1198,
        1244
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x4DE"
    },
    "1239": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1198,
        1244
      ],
      "op": "CALLDATASIZE",
      "path": "47"
    },
    "1240": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1198,
        1244
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x4"
    },
    "1242": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1198,
        1244
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2428"
    },
    "1245": {
      "fn": "CLHouse.ExecProp",
      "jump": "i",
      "offset": [
        1198,
        1244
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1246": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1198,
        1244
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1247": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1198,
        1244
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0xA2"
    },
    "1249": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1198,
        1244
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "1251": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1198,
        1244
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "1252": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1198,
        1244
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "1254": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1198,
        1244
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "1255": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1198,
        1244
      ],
      "op": "DUP2",
      "path": "47"
    },
    "1256": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1198,
        1244
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "1257": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1198,
        1244
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "1259": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1198,
        1244
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "1260": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1198,
        1244
      ],
      "op": "KECCAK256",
      "path": "47"
    },
    "1261": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1198,
        1244
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "1262": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1198,
        1244
      ],
      "op": "DUP2",
      "path": "47"
    },
    "1263": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1198,
        1244
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1264": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        17962,
        18733
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1265": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        17962,
        18733
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2DE"
    },
    "1268": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        17962,
        18733
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x4FE"
    },
    "1271": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        17962,
        18733
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "1272": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        17962,
        18733
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "1274": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        17962,
        18733
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x24D1"
    },
    "1277": {
      "fn": "CLHouse.CreateLock",
      "jump": "i",
      "offset": [
        17962,
        18733
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1278": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        17962,
        18733
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1279": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        17962,
        18733
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1307"
    },
    "1282": {
      "fn": "CLHouse.CreateLock",
      "jump": "i",
      "offset": [
        17962,
        18733
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1283": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7528,
        8412
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1284": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7528,
        8412
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2B8"
    },
    "1287": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7528,
        8412
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x511"
    },
    "1290": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7528,
        8412
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "1291": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7528,
        8412
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "1293": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7528,
        8412
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2013"
    },
    "1296": {
      "fn": "CLHouse.PropTxWei",
      "jump": "i",
      "offset": [
        7528,
        8412
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1297": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7528,
        8412
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1298": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7528,
        8412
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1407"
    },
    "1301": {
      "fn": "CLHouse.PropTxWei",
      "jump": "i",
      "offset": [
        7528,
        8412
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1302": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12329,
        13060
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1303": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12329,
        13060
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x529"
    },
    "1306": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12329,
        13060
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x524"
    },
    "1309": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12329,
        13060
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "1310": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12329,
        13060
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "1312": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12329,
        13060
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x251E"
    },
    "1315": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "jump": "i",
      "offset": [
        12329,
        13060
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1316": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12329,
        13060
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1317": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12329,
        13060
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x14DB"
    },
    "1320": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "jump": "i",
      "offset": [
        12329,
        13060
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1321": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12329,
        13060
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1322": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12329,
        13060
      ],
      "op": "STOP",
      "path": "50"
    },
    "1323": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        17807,
        17956
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1324": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        17807,
        17956
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x529"
    },
    "1327": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        17807,
        17956
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x539"
    },
    "1330": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        17807,
        17956
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "1331": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        17807,
        17956
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "1333": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        17807,
        17956
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2428"
    },
    "1336": {
      "fn": "CLHouse.SetWhitelistCollection",
      "jump": "i",
      "offset": [
        17807,
        17956
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1337": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        17807,
        17956
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1338": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        17807,
        17956
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x15FB"
    },
    "1341": {
      "fn": "CLHouse.SetWhitelistCollection",
      "jump": "i",
      "offset": [
        17807,
        17956
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1342": {
      "offset": [
        1330,
        1378
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1343": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        1330,
        1378
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2B8"
    },
    "1346": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        1330,
        1378
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x54C"
    },
    "1349": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        1330,
        1378
      ],
      "op": "CALLDATASIZE",
      "path": "47"
    },
    "1350": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        1330,
        1378
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x4"
    },
    "1352": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        1330,
        1378
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2428"
    },
    "1355": {
      "fn": "CLHouse.SetWhitelistCollection",
      "jump": "i",
      "offset": [
        1330,
        1378
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1356": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        1330,
        1378
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1357": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        1330,
        1378
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0xA4"
    },
    "1359": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        1330,
        1378
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "1361": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        1330,
        1378
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "1362": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        1330,
        1378
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "1364": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        1330,
        1378
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "1365": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        1330,
        1378
      ],
      "op": "DUP2",
      "path": "47"
    },
    "1366": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        1330,
        1378
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "1367": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        1330,
        1378
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "1369": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        1330,
        1378
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "1370": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        1330,
        1378
      ],
      "op": "KECCAK256",
      "path": "47"
    },
    "1371": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        1330,
        1378
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "1372": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        1330,
        1378
      ],
      "op": "DUP2",
      "path": "47"
    },
    "1373": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        1330,
        1378
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1374": {
      "offset": [
        1608,
        1632
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1375": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        1608,
        1632
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0xC3"
    },
    "1377": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        1608,
        1632
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "1378": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        1608,
        1632
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2DE"
    },
    "1381": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        1608,
        1632
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "1382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1386": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1388": {
      "op": "SHL"
    },
    "1389": {
      "op": "SUB"
    },
    "1390": {
      "offset": [
        1608,
        1632
      ],
      "op": "AND",
      "path": "47"
    },
    "1391": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        1608,
        1632
      ],
      "op": "DUP2",
      "path": "47"
    },
    "1392": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        1608,
        1632
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1393": {
      "offset": [
        525,
        563
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1394": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        525,
        563
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2B8"
    },
    "1397": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        525,
        563
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x4"
    },
    "1399": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        525,
        563
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "1400": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        525,
        563
      ],
      "op": "DUP2",
      "path": "47"
    },
    "1401": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        525,
        563
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1402": {
      "offset": [
        1545,
        1573
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1403": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        1545,
        1573
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0xC1"
    },
    "1405": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        1545,
        1573
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "1406": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        1545,
        1573
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2DE"
    },
    "1409": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        1545,
        1573
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "1410": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1414": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1416": {
      "op": "SHL"
    },
    "1417": {
      "op": "SUB"
    },
    "1418": {
      "offset": [
        1545,
        1573
      ],
      "op": "AND",
      "path": "47"
    },
    "1419": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        1545,
        1573
      ],
      "op": "DUP2",
      "path": "47"
    },
    "1420": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        1545,
        1573
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1421": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16076,
        16931
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1422": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16076,
        16931
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x529"
    },
    "1425": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16076,
        16931
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x59B"
    },
    "1428": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16076,
        16931
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "1429": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16076,
        16931
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "1431": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16076,
        16931
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x258E"
    },
    "1434": {
      "fn": "CLHouse.bulkVote",
      "jump": "i",
      "offset": [
        16076,
        16931
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1435": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16076,
        16931
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1436": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16076,
        16931
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1626"
    },
    "1439": {
      "fn": "CLHouse.bulkVote",
      "jump": "i",
      "offset": [
        16076,
        16931
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1440": {
      "fn": "CLHouse.GetArrUsersLength",
      "offset": [
        16978,
        17078
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1441": {
      "fn": "CLHouse.GetArrUsersLength",
      "offset": [
        17056,
        17064
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 1,
      "value": "0x82"
    },
    "1443": {
      "fn": "CLHouse.GetArrUsersLength",
      "offset": [
        17056,
        17071
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "1444": {
      "fn": "CLHouse.GetArrUsersLength",
      "offset": [
        16978,
        17078
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2B8"
    },
    "1447": {
      "fn": "CLHouse.GetArrUsersLength",
      "offset": [
        16978,
        17078
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1448": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17343,
        17452
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1449": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17343,
        17452
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x5B0"
    },
    "1452": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17343,
        17452
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x16EE"
    },
    "1455": {
      "fn": "CLHouse.GetProposalList",
      "jump": "i",
      "offset": [
        17343,
        17452
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1456": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17343,
        17452
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1457": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17343,
        17452
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1459": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17343,
        17452
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1460": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17343,
        17452
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2C2"
    },
    "1463": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17343,
        17452
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1464": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17343,
        17452
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1465": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17343,
        17452
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x26A2"
    },
    "1468": {
      "fn": "CLHouse.GetProposalList",
      "jump": "i",
      "offset": [
        17343,
        17452
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1469": {
      "offset": [
        1068,
        1112
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1470": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1068,
        1112
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x5D0"
    },
    "1473": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1068,
        1112
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x5CB"
    },
    "1476": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1068,
        1112
      ],
      "op": "CALLDATASIZE",
      "path": "47"
    },
    "1477": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1068,
        1112
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x4"
    },
    "1479": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1068,
        1112
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2182"
    },
    "1482": {
      "fn": "CLHouse.GetProposalList",
      "jump": "i",
      "offset": [
        1068,
        1112
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1483": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1068,
        1112
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1484": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1068,
        1112
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x186C"
    },
    "1487": {
      "fn": "CLHouse.GetProposalList",
      "jump": "i",
      "offset": [
        1068,
        1112
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1488": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1068,
        1112
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1489": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1068,
        1112
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "1491": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1068,
        1112
      ],
      "op": "DUP1",
      "path": "47"
    },
    "1492": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1068,
        1112
      ],
      "op": "MLOAD",
      "path": "47"
    },
    "1493": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1495": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1497": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1499": {
      "op": "SHL"
    },
    "1500": {
      "op": "SUB"
    },
    "1501": {
      "op": "SWAP6"
    },
    "1502": {
      "op": "DUP7"
    },
    "1503": {
      "op": "AND"
    },
    "1504": {
      "op": "DUP2"
    },
    "1505": {
      "op": "MSTORE"
    },
    "1506": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1508": {
      "op": "DUP2"
    },
    "1509": {
      "op": "ADD"
    },
    "1510": {
      "op": "SWAP5"
    },
    "1511": {
      "op": "SWAP1"
    },
    "1512": {
      "op": "SWAP5"
    },
    "1513": {
      "op": "MSTORE"
    },
    "1514": {
      "op": "SWAP2"
    },
    "1515": {
      "op": "DUP5"
    },
    "1516": {
      "op": "AND"
    },
    "1517": {
      "op": "SWAP2"
    },
    "1518": {
      "op": "DUP4"
    },
    "1519": {
      "op": "ADD"
    },
    "1520": {
      "op": "SWAP2"
    },
    "1521": {
      "op": "SWAP1"
    },
    "1522": {
      "op": "SWAP2"
    },
    "1523": {
      "op": "MSTORE"
    },
    "1524": {
      "op": "SWAP1"
    },
    "1525": {
      "op": "SWAP2"
    },
    "1526": {
      "op": "AND"
    },
    "1527": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1529": {
      "op": "DUP3"
    },
    "1530": {
      "op": "ADD"
    },
    "1531": {
      "op": "MSTORE"
    },
    "1532": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1534": {
      "op": "ADD"
    },
    "1535": {
      "offset": [
        1068,
        1112
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2C2"
    },
    "1538": {
      "op": "JUMP"
    },
    "1539": {
      "fn": "CLHouse.Init",
      "offset": [
        1188,
        2312
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1540": {
      "fn": "CLHouse.Init",
      "offset": [
        1188,
        2312
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x529"
    },
    "1543": {
      "fn": "CLHouse.Init",
      "offset": [
        1188,
        2312
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x611"
    },
    "1546": {
      "fn": "CLHouse.Init",
      "offset": [
        1188,
        2312
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "1547": {
      "fn": "CLHouse.Init",
      "offset": [
        1188,
        2312
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "1549": {
      "fn": "CLHouse.Init",
      "offset": [
        1188,
        2312
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x284E"
    },
    "1552": {
      "fn": "CLHouse.Init",
      "jump": "i",
      "offset": [
        1188,
        2312
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1553": {
      "fn": "CLHouse.Init",
      "offset": [
        1188,
        2312
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1554": {
      "fn": "CLHouse.Init",
      "offset": [
        1188,
        2312
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x18B4"
    },
    "1557": {
      "fn": "CLHouse.Init",
      "jump": "i",
      "offset": [
        1188,
        2312
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1558": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3714,
        4540
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1559": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3714,
        4540
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x529"
    },
    "1562": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3714,
        4540
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x624"
    },
    "1565": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3714,
        4540
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "1566": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3714,
        4540
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "1568": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3714,
        4540
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2951"
    },
    "1571": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        3714,
        4540
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1572": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3714,
        4540
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1573": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3714,
        4540
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1A77"
    },
    "1576": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        3714,
        4540
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1577": {
      "offset": [
        1404,
        1471
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1578": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x63C"
    },
    "1581": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x637"
    },
    "1584": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "CALLDATASIZE",
      "path": "47"
    },
    "1585": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x4"
    },
    "1587": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2993"
    },
    "1590": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        1404,
        1471
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1591": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1592": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1B9D"
    },
    "1595": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        1404,
        1471
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1596": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1597": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "1599": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "MLOAD",
      "path": "47"
    },
    "1600": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2C2"
    },
    "1603": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "SWAP4",
      "path": "47"
    },
    "1604": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "1605": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "1606": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "1607": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x29C3"
    },
    "1610": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        1404,
        1471
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1611": {
      "offset": [
        702,
        724
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1612": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        702,
        724
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x23"
    },
    "1614": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        702,
        724
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "1615": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        702,
        724
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2DE"
    },
    "1618": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        702,
        724
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "1619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1623": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1625": {
      "op": "SHL"
    },
    "1626": {
      "op": "SUB"
    },
    "1627": {
      "offset": [
        702,
        724
      ],
      "op": "AND",
      "path": "47"
    },
    "1628": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        702,
        724
      ],
      "op": "DUP2",
      "path": "47"
    },
    "1629": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        702,
        724
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1630": {
      "offset": [
        987,
        1020
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1631": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x671"
    },
    "1634": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x66C"
    },
    "1637": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "CALLDATASIZE",
      "path": "47"
    },
    "1638": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x4"
    },
    "1640": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2182"
    },
    "1643": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        987,
        1020
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1644": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1645": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1C5A"
    },
    "1648": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        987,
        1020
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1649": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1650": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "1652": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "MLOAD",
      "path": "47"
    },
    "1653": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2C2"
    },
    "1656": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "SWAP10",
      "path": "47"
    },
    "1657": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "SWAP9",
      "path": "47"
    },
    "1658": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "SWAP8",
      "path": "47"
    },
    "1659": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "SWAP7",
      "path": "47"
    },
    "1660": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "SWAP6",
      "path": "47"
    },
    "1661": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "SWAP5",
      "path": "47"
    },
    "1662": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "SWAP4",
      "path": "47"
    },
    "1663": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "1664": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "1665": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "1666": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x29EF"
    },
    "1669": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        987,
        1020
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1670": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8757,
        9713
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1671": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8757,
        9713
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2B8"
    },
    "1674": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8757,
        9713
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x694"
    },
    "1677": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8757,
        9713
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "1678": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8757,
        9713
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "1680": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8757,
        9713
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2A56"
    },
    "1683": {
      "fn": "CLHouse.PropTxERC20",
      "jump": "i",
      "offset": [
        8757,
        9713
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1684": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8757,
        9713
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1685": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8757,
        9713
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1D53"
    },
    "1688": {
      "fn": "CLHouse.PropTxERC20",
      "jump": "i",
      "offset": [
        8757,
        9713
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1689": {
      "offset": [
        493,
        519
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1690": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        493,
        519
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2B8"
    },
    "1693": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        493,
        519
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x3"
    },
    "1695": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        493,
        519
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "1696": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        493,
        519
      ],
      "op": "DUP2",
      "path": "47"
    },
    "1697": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        493,
        519
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1698": {
      "offset": [
        605,
        638
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1699": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        605,
        638
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2B8"
    },
    "1702": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        605,
        638
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x6"
    },
    "1704": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        605,
        638
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "1705": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        605,
        638
      ],
      "op": "DUP2",
      "path": "47"
    },
    "1706": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        605,
        638
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1707": {
      "offset": [
        382,
        406
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1708": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        382,
        406
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "1710": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        382,
        406
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "1711": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        382,
        406
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x37E"
    },
    "1714": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        382,
        406
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "1715": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        382,
        406
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0xFF"
    },
    "1717": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        382,
        406
      ],
      "op": "AND",
      "path": "47"
    },
    "1718": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        382,
        406
      ],
      "op": "DUP2",
      "path": "47"
    },
    "1719": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        382,
        406
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1720": {
      "fn": "CLHouse.GetCLHouseVersion",
      "offset": [
        17689,
        17801
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1721": {
      "fn": "CLHouse.GetCLHouseVersion",
      "offset": [
        17775,
        17794
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 2,
      "value": "0x40"
    },
    "1723": {
      "fn": "CLHouse.GetCLHouseVersion",
      "offset": [
        17775,
        17794
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1724": {
      "fn": "CLHouse.GetCLHouseVersion",
      "offset": [
        17775,
        17794
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1725": {
      "fn": "CLHouse.GetCLHouseVersion",
      "offset": [
        17775,
        17794
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1726": {
      "fn": "CLHouse.GetCLHouseVersion",
      "offset": [
        17775,
        17794
      ],
      "op": "DUP3",
      "path": "50"
    },
    "1727": {
      "fn": "CLHouse.GetCLHouseVersion",
      "offset": [
        17775,
        17794
      ],
      "op": "ADD",
      "path": "50"
    },
    "1728": {
      "fn": "CLHouse.GetCLHouseVersion",
      "offset": [
        17775,
        17794
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1729": {
      "fn": "CLHouse.GetCLHouseVersion",
      "offset": [
        17775,
        17794
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1730": {
      "fn": "CLHouse.GetCLHouseVersion",
      "offset": [
        17775,
        17794
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1731": {
      "fn": "CLHouse.GetCLHouseVersion",
      "offset": [
        17775,
        17794
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x5"
    },
    "1733": {
      "fn": "CLHouse.GetCLHouseVersion",
      "offset": [
        17775,
        17794
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1734": {
      "fn": "CLHouse.GetCLHouseVersion",
      "offset": [
        17775,
        17794
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1735": {
      "op": "PUSH5",
      "value": "0x302E312E31"
    },
    "1741": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "1743": {
      "op": "SHL"
    },
    "1744": {
      "fn": "CLHouse.GetCLHouseVersion",
      "offset": [
        17775,
        17794
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "1746": {
      "fn": "CLHouse.GetCLHouseVersion",
      "offset": [
        17775,
        17794
      ],
      "op": "DUP3",
      "path": "50"
    },
    "1747": {
      "fn": "CLHouse.GetCLHouseVersion",
      "offset": [
        17775,
        17794
      ],
      "op": "ADD",
      "path": "50"
    },
    "1748": {
      "fn": "CLHouse.GetCLHouseVersion",
      "offset": [
        17775,
        17794
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1749": {
      "fn": "CLHouse.GetCLHouseVersion",
      "offset": [
        17689,
        17801
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x469"
    },
    "1752": {
      "fn": "CLHouse.GetCLHouseVersion",
      "offset": [
        17689,
        17801
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1753": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14038,
        14938
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1754": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14226,
        14233
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "1756": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14250,
        14271
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1757": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14284
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xC1"
    },
    "1759": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14284
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "1761": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14284
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1762": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14284
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "1763": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14284
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1764": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14284
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x100"
    },
    "1767": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14284
      ],
      "op": "EXP",
      "path": "50"
    },
    "1768": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14284
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1769": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14284
      ],
      "op": "DIV",
      "path": "50"
    },
    "1770": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1774": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1776": {
      "op": "SHL"
    },
    "1777": {
      "op": "SUB"
    },
    "1778": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14284
      ],
      "op": "AND",
      "path": "50"
    },
    "1779": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1781": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1783": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1785": {
      "op": "SHL"
    },
    "1786": {
      "op": "SUB"
    },
    "1787": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14298
      ],
      "op": "AND",
      "path": "50"
    },
    "1788": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14298
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xA327AB69"
    },
    "1793": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1795": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1796": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1797": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xFFFFFFFF"
    },
    "1802": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "AND",
      "path": "50"
    },
    "1803": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xE0"
    },
    "1805": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "SHL",
      "path": "50"
    },
    "1806": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1807": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1808": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "1810": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "ADD",
      "path": "50"
    },
    "1811": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "1813": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1815": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1816": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1817": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "DUP4",
      "path": "50"
    },
    "1818": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "SUB",
      "path": "50"
    },
    "1819": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1820": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "DUP7",
      "path": "50"
    },
    "1821": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "GAS",
      "path": "50"
    },
    "1822": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "STATICCALL",
      "path": "50"
    },
    "1823": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "1824": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1825": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "1826": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x72F"
    },
    "1829": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "1830": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "1831": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "1833": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1834": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "1835": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "1836": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "1838": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "REVERT",
      "path": "50"
    },
    "1839": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1840": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "POP",
      "path": "50"
    },
    "1841": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "POP",
      "path": "50"
    },
    "1842": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "POP",
      "path": "50"
    },
    "1843": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "POP",
      "path": "50"
    },
    "1844": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1846": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1847": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "1848": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "1850": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "NOT",
      "path": "50"
    },
    "1851": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "1853": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "DUP3",
      "path": "50"
    },
    "1854": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "ADD",
      "path": "50"
    },
    "1855": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "AND",
      "path": "50"
    },
    "1856": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "DUP3",
      "path": "50"
    },
    "1857": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "ADD",
      "path": "50"
    },
    "1858": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1859": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1861": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1862": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "POP",
      "path": "50"
    },
    "1863": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1864": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "ADD",
      "path": "50"
    },
    "1865": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1866": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x753"
    },
    "1869": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1870": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1871": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2AAB"
    },
    "1874": {
      "fn": "CLHouse.PropSellERC20",
      "jump": "i",
      "offset": [
        14274,
        14300
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1875": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14274,
        14300
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1876": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14250,
        14300
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1877": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14250,
        14300
      ],
      "op": "POP",
      "path": "50"
    },
    "1878": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14369,
        14387
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "1880": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14393,
        14406
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1883": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1885": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1887": {
      "op": "SHL"
    },
    "1888": {
      "op": "SUB"
    },
    "1889": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14393,
        14419
      ],
      "op": "AND",
      "path": "50"
    },
    "1890": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14540,
        14552
      ],
      "op": "DUP8",
      "path": "50"
    },
    "1891": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14570,
        14583
      ],
      "op": "DUP8",
      "path": "50"
    },
    "1892": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14601,
        14613
      ],
      "op": "DUP8",
      "path": "50"
    },
    "1893": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14631,
        14641
      ],
      "op": "DUP8",
      "path": "50"
    },
    "1894": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14433,
        14655
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1896": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14433,
        14655
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1897": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14433,
        14655
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x24"
    },
    "1899": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14433,
        14655
      ],
      "op": "ADD",
      "path": "50"
    },
    "1900": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14433,
        14655
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x778"
    },
    "1903": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14433,
        14655
      ],
      "op": "SWAP5",
      "path": "50"
    },
    "1904": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14433,
        14655
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "1905": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14433,
        14655
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "1906": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14433,
        14655
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1907": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14433,
        14655
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1908": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14433,
        14655
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2AC8"
    },
    "1911": {
      "fn": "CLHouse.PropSellERC20",
      "jump": "i",
      "offset": [
        14433,
        14655
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1912": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14433,
        14655
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1913": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14433,
        14655
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1915": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14433,
        14655
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1916": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14433,
        14655
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1917": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1919": {
      "op": "NOT"
    },
    "1920": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14433,
        14655
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1921": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14433,
        14655
      ],
      "op": "DUP5",
      "path": "50"
    },
    "1922": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14433,
        14655
      ],
      "op": "SUB",
      "path": "50"
    },
    "1923": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14433,
        14655
      ],
      "op": "ADD",
      "path": "50"
    },
    "1924": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14433,
        14655
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1925": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14433,
        14655
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1926": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14433,
        14655
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1927": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14433,
        14655
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1928": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14433,
        14655
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1929": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14433,
        14655
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "1931": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14433,
        14655
      ],
      "op": "DUP3",
      "path": "50"
    },
    "1932": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14433,
        14655
      ],
      "op": "ADD",
      "path": "50"
    },
    "1933": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14433,
        14655
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1934": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14433,
        14655
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1935": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1939": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1941": {
      "op": "SHL"
    },
    "1942": {
      "op": "SUB"
    },
    "1943": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14433,
        14655
      ],
      "op": "AND",
      "path": "50"
    },
    "1944": {
      "op": "PUSH4",
      "value": "0x4F17A9B"
    },
    "1949": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1951": {
      "op": "SHL"
    },
    "1952": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14433,
        14655
      ],
      "op": "OR",
      "path": "50"
    },
    "1953": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14433,
        14655
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1954": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14433,
        14655
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1955": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14393,
        14665
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1956": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14393,
        14665
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x7AD"
    },
    "1959": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14393,
        14665
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1960": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14433,
        14655
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1961": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14393,
        14665
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2B00"
    },
    "1964": {
      "fn": "CLHouse.PropSellERC20",
      "jump": "i",
      "offset": [
        14393,
        14665
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1965": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14393,
        14665
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1966": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14393,
        14665
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "1968": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14393,
        14665
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1970": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14393,
        14665
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1971": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14393,
        14665
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1972": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14393,
        14665
      ],
      "op": "DUP4",
      "path": "50"
    },
    "1973": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14393,
        14665
      ],
      "op": "SUB",
      "path": "50"
    },
    "1974": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14393,
        14665
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1975": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14393,
        14665
      ],
      "op": "DUP6",
      "path": "50"
    },
    "1976": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14393,
        14665
      ],
      "op": "GAS",
      "path": "50"
    },
    "1977": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14393,
        14665
      ],
      "op": "DELEGATECALL",
      "path": "50"
    },
    "1978": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14393,
        14665
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1979": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14393,
        14665
      ],
      "op": "POP",
      "path": "50"
    },
    "1980": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14393,
        14665
      ],
      "op": "POP",
      "path": "50"
    },
    "1981": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14393,
        14665
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "1982": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14393,
        14665
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1983": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14393,
        14665
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "1985": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14393,
        14665
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1986": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14393,
        14665
      ],
      "op": "EQ",
      "path": "50"
    },
    "1987": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14393,
        14665
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x7E8"
    },
    "1990": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14393,
        14665
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "1991": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14393,
        14665
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1993": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14393,
        14665
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1994": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14393,
        14665
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1995": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14393,
        14665
      ],
      "op": "POP",
      "path": "50"
    },
    "1996": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14393,
        14665
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "1998": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14393,
        14665
      ],
      "op": "NOT",
      "path": "50"
    },
    "1999": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14393,
        14665
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x3F"
    },
    "2001": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14393,
        14665
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "2002": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14393,
        14665
      ],
      "op": "ADD",
      "path": "50"
    },
    "2003": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14393,
        14665
      ],
      "op": "AND",
      "path": "50"
    },
    "2004": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14393,
        14665
      ],
      "op": "DUP3",
      "path": "50"
    },
    "2005": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14393,
        14665
      ],
      "op": "ADD",
      "path": "50"
    },
    "2006": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14393,
        14665
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "2008": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14393,
        14665
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2009": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14393,
        14665
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "2010": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14393,
        14665
      ],
      "op": "DUP3",
      "path": "50"
    },
    "2011": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14393,
        14665
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2012": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14393,
        14665
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "2013": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14393,
        14665
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2015": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14393,
        14665
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "2017": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14393,
        14665
      ],
      "op": "DUP5",
      "path": "50"
    },
    "2018": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14393,
        14665
      ],
      "op": "ADD",
      "path": "50"
    },
    "2019": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14393,
        14665
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "2020": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14393,
        14665
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x7ED"
    },
    "2023": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14393,
        14665
      ],
      "op": "JUMP",
      "path": "50"
    },
    "2024": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14393,
        14665
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2025": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14393,
        14665
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x60"
    },
    "2027": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14393,
        14665
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2028": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14393,
        14665
      ],
      "op": "POP",
      "path": "50"
    },
    "2029": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14393,
        14665
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2030": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14393,
        14665
      ],
      "op": "POP",
      "path": "50"
    },
    "2031": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14368,
        14665
      ],
      "op": "POP",
      "path": "50"
    },
    "2032": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14368,
        14665
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2033": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14368,
        14665
      ],
      "op": "POP",
      "path": "50"
    },
    "2034": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14716,
        14720
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "2036": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14710,
        14721
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2037": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14746,
        14762
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "2038": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14798,
        14802
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2039": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14795,
        14796
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2041": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14790,
        14793
      ],
      "op": "DUP4",
      "path": "50"
    },
    "2042": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14775,
        14803
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "2043": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14827,
        14840
      ],
      "op": "DUP3",
      "path": "50"
    },
    "2044": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14816,
        14892
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x803"
    },
    "2047": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14816,
        14892
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "2048": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14873,
        14877
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2049": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14868,
        14871
      ],
      "op": "DUP3",
      "path": "50"
    },
    "2050": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14861,
        14878
      ],
      "op": "REVERT",
      "path": "50"
    },
    "2051": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14816,
        14892
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2052": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14917,
        14921
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2053": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14912,
        14915
      ],
      "op": "DUP3",
      "path": "50"
    },
    "2054": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14905,
        14922
      ],
      "op": "RETURN",
      "path": "50"
    },
    "2055": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11303,
        12205
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2056": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11499,
        11506
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2058": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11523,
        11544
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2059": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11557
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xC1"
    },
    "2061": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11557
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2063": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11557
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2064": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11557
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "2065": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11557
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2066": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11557
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x100"
    },
    "2069": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11557
      ],
      "op": "EXP",
      "path": "50"
    },
    "2070": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11557
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2071": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11557
      ],
      "op": "DIV",
      "path": "50"
    },
    "2072": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2074": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2076": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2078": {
      "op": "SHL"
    },
    "2079": {
      "op": "SUB"
    },
    "2080": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11557
      ],
      "op": "AND",
      "path": "50"
    },
    "2081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2085": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2087": {
      "op": "SHL"
    },
    "2088": {
      "op": "SUB"
    },
    "2089": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11571
      ],
      "op": "AND",
      "path": "50"
    },
    "2090": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11571
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xA327AB69"
    },
    "2095": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "2097": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2098": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2099": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xFFFFFFFF"
    },
    "2104": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "AND",
      "path": "50"
    },
    "2105": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xE0"
    },
    "2107": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "SHL",
      "path": "50"
    },
    "2108": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2109": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2110": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "2112": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "ADD",
      "path": "50"
    },
    "2113": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "2115": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "2117": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2118": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2119": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "DUP4",
      "path": "50"
    },
    "2120": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "SUB",
      "path": "50"
    },
    "2121": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2122": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "DUP7",
      "path": "50"
    },
    "2123": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "GAS",
      "path": "50"
    },
    "2124": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "STATICCALL",
      "path": "50"
    },
    "2125": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "2126": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2127": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "2128": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x85D"
    },
    "2131": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "2132": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "2133": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2135": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2136": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "2137": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "2138": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2140": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "REVERT",
      "path": "50"
    },
    "2141": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2142": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "POP",
      "path": "50"
    },
    "2143": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "POP",
      "path": "50"
    },
    "2144": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "POP",
      "path": "50"
    },
    "2145": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "POP",
      "path": "50"
    },
    "2146": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "2148": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2149": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "2150": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "2152": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "NOT",
      "path": "50"
    },
    "2153": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "2155": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "DUP3",
      "path": "50"
    },
    "2156": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "ADD",
      "path": "50"
    },
    "2157": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "AND",
      "path": "50"
    },
    "2158": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "DUP3",
      "path": "50"
    },
    "2159": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "ADD",
      "path": "50"
    },
    "2160": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2161": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "2163": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2164": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "POP",
      "path": "50"
    },
    "2165": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2166": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "ADD",
      "path": "50"
    },
    "2167": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2168": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x881"
    },
    "2171": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2172": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2173": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2AAB"
    },
    "2176": {
      "fn": "CLHouse.PropRequestToJoin",
      "jump": "i",
      "offset": [
        11547,
        11573
      ],
      "op": "JUMP",
      "path": "50"
    },
    "2177": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11547,
        11573
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2178": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11523,
        11573
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2179": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11523,
        11573
      ],
      "op": "POP",
      "path": "50"
    },
    "2180": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11642,
        11660
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2182": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11666,
        11679
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2183": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2185": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2187": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2189": {
      "op": "SHL"
    },
    "2190": {
      "op": "SUB"
    },
    "2191": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11666,
        11692
      ],
      "op": "AND",
      "path": "50"
    },
    "2192": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11814,
        11819
      ],
      "op": "DUP8",
      "path": "50"
    },
    "2193": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11837,
        11849
      ],
      "op": "DUP8",
      "path": "50"
    },
    "2194": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11867,
        11880
      ],
      "op": "DUP8",
      "path": "50"
    },
    "2195": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11898,
        11908
      ],
      "op": "DUP8",
      "path": "50"
    },
    "2196": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11706,
        11922
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "2198": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11706,
        11922
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2199": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11706,
        11922
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x24"
    },
    "2201": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11706,
        11922
      ],
      "op": "ADD",
      "path": "50"
    },
    "2202": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11706,
        11922
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x8A6"
    },
    "2205": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11706,
        11922
      ],
      "op": "SWAP5",
      "path": "50"
    },
    "2206": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11706,
        11922
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "2207": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11706,
        11922
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "2208": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11706,
        11922
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2209": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11706,
        11922
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2210": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11706,
        11922
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2B1C"
    },
    "2213": {
      "fn": "CLHouse.PropRequestToJoin",
      "jump": "i",
      "offset": [
        11706,
        11922
      ],
      "op": "JUMP",
      "path": "50"
    },
    "2214": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11706,
        11922
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2215": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11706,
        11922
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "2217": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11706,
        11922
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2218": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11706,
        11922
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2219": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2221": {
      "op": "NOT"
    },
    "2222": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11706,
        11922
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2223": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11706,
        11922
      ],
      "op": "DUP5",
      "path": "50"
    },
    "2224": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11706,
        11922
      ],
      "op": "SUB",
      "path": "50"
    },
    "2225": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11706,
        11922
      ],
      "op": "ADD",
      "path": "50"
    },
    "2226": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11706,
        11922
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2227": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11706,
        11922
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2228": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11706,
        11922
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2229": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11706,
        11922
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2230": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11706,
        11922
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2231": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11706,
        11922
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "2233": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11706,
        11922
      ],
      "op": "DUP3",
      "path": "50"
    },
    "2234": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11706,
        11922
      ],
      "op": "ADD",
      "path": "50"
    },
    "2235": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11706,
        11922
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2236": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11706,
        11922
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2241": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2243": {
      "op": "SHL"
    },
    "2244": {
      "op": "SUB"
    },
    "2245": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11706,
        11922
      ],
      "op": "AND",
      "path": "50"
    },
    "2246": {
      "op": "PUSH4",
      "value": "0x12EAB7FF"
    },
    "2251": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2253": {
      "op": "SHL"
    },
    "2254": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11706,
        11922
      ],
      "op": "OR",
      "path": "50"
    },
    "2255": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11706,
        11922
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2256": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11706,
        11922
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2257": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11666,
        11932
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2258": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11666,
        11932
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x7AD"
    },
    "2261": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11666,
        11932
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2262": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11706,
        11922
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2263": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11666,
        11932
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2B00"
    },
    "2266": {
      "fn": "CLHouse.PropRequestToJoin",
      "jump": "i",
      "offset": [
        11666,
        11932
      ],
      "op": "JUMP",
      "path": "50"
    },
    "2267": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13066,
        14032
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2268": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13283,
        13290
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2270": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13307,
        13328
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2271": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13341
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xC1"
    },
    "2273": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13341
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2275": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13341
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2276": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13341
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "2277": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13341
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2278": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13341
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x100"
    },
    "2281": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13341
      ],
      "op": "EXP",
      "path": "50"
    },
    "2282": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13341
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2283": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13341
      ],
      "op": "DIV",
      "path": "50"
    },
    "2284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2288": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2290": {
      "op": "SHL"
    },
    "2291": {
      "op": "SUB"
    },
    "2292": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13341
      ],
      "op": "AND",
      "path": "50"
    },
    "2293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2297": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2299": {
      "op": "SHL"
    },
    "2300": {
      "op": "SUB"
    },
    "2301": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13355
      ],
      "op": "AND",
      "path": "50"
    },
    "2302": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13355
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xA327AB69"
    },
    "2307": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "2309": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2310": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2311": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xFFFFFFFF"
    },
    "2316": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "AND",
      "path": "50"
    },
    "2317": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xE0"
    },
    "2319": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "SHL",
      "path": "50"
    },
    "2320": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2321": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2322": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "2324": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "ADD",
      "path": "50"
    },
    "2325": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "2327": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "2329": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2330": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2331": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "DUP4",
      "path": "50"
    },
    "2332": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "SUB",
      "path": "50"
    },
    "2333": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2334": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "DUP7",
      "path": "50"
    },
    "2335": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "GAS",
      "path": "50"
    },
    "2336": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "STATICCALL",
      "path": "50"
    },
    "2337": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "2338": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2339": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "2340": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x931"
    },
    "2343": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "2344": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "2345": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2347": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2348": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "2349": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "2350": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2352": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "REVERT",
      "path": "50"
    },
    "2353": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2354": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "POP",
      "path": "50"
    },
    "2355": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "POP",
      "path": "50"
    },
    "2356": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "POP",
      "path": "50"
    },
    "2357": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "POP",
      "path": "50"
    },
    "2358": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "2360": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2361": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "2362": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "2364": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "NOT",
      "path": "50"
    },
    "2365": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "2367": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "DUP3",
      "path": "50"
    },
    "2368": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "ADD",
      "path": "50"
    },
    "2369": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "AND",
      "path": "50"
    },
    "2370": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "DUP3",
      "path": "50"
    },
    "2371": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "ADD",
      "path": "50"
    },
    "2372": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2373": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "2375": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2376": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "POP",
      "path": "50"
    },
    "2377": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2378": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "ADD",
      "path": "50"
    },
    "2379": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2380": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x955"
    },
    "2383": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2384": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2385": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2AAB"
    },
    "2388": {
      "fn": "CLHouse.PropSwapERC20",
      "jump": "i",
      "offset": [
        13331,
        13357
      ],
      "op": "JUMP",
      "path": "50"
    },
    "2389": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13331,
        13357
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2390": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13307,
        13357
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2391": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13307,
        13357
      ],
      "op": "POP",
      "path": "50"
    },
    "2392": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13426,
        13444
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2394": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13450,
        13463
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2395": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2397": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2399": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2401": {
      "op": "SHL"
    },
    "2402": {
      "op": "SUB"
    },
    "2403": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13450,
        13476
      ],
      "op": "AND",
      "path": "50"
    },
    "2404": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13605,
        13617
      ],
      "op": "DUP9",
      "path": "50"
    },
    "2405": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13635,
        13646
      ],
      "op": "DUP9",
      "path": "50"
    },
    "2406": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13664,
        13677
      ],
      "op": "DUP9",
      "path": "50"
    },
    "2407": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13695,
        13707
      ],
      "op": "DUP9",
      "path": "50"
    },
    "2408": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13725,
        13735
      ],
      "op": "DUP9",
      "path": "50"
    },
    "2409": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13490,
        13749
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "2411": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13490,
        13749
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2412": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13490,
        13749
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x24"
    },
    "2414": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13490,
        13749
      ],
      "op": "ADD",
      "path": "50"
    },
    "2415": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13490,
        13749
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x97C"
    },
    "2418": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13490,
        13749
      ],
      "op": "SWAP6",
      "path": "50"
    },
    "2419": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13490,
        13749
      ],
      "op": "SWAP5",
      "path": "50"
    },
    "2420": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13490,
        13749
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "2421": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13490,
        13749
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "2422": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13490,
        13749
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2423": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13490,
        13749
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2424": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13490,
        13749
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2B6F"
    },
    "2427": {
      "fn": "CLHouse.PropSwapERC20",
      "jump": "i",
      "offset": [
        13490,
        13749
      ],
      "op": "JUMP",
      "path": "50"
    },
    "2428": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13490,
        13749
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2429": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13490,
        13749
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "2431": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13490,
        13749
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2432": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13490,
        13749
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2433": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2435": {
      "op": "NOT"
    },
    "2436": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13490,
        13749
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2437": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13490,
        13749
      ],
      "op": "DUP5",
      "path": "50"
    },
    "2438": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13490,
        13749
      ],
      "op": "SUB",
      "path": "50"
    },
    "2439": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13490,
        13749
      ],
      "op": "ADD",
      "path": "50"
    },
    "2440": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13490,
        13749
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2441": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13490,
        13749
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2442": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13490,
        13749
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2443": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13490,
        13749
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2444": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13490,
        13749
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2445": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13490,
        13749
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "2447": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13490,
        13749
      ],
      "op": "DUP3",
      "path": "50"
    },
    "2448": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13490,
        13749
      ],
      "op": "ADD",
      "path": "50"
    },
    "2449": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13490,
        13749
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2450": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13490,
        13749
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2453": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2455": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2457": {
      "op": "SHL"
    },
    "2458": {
      "op": "SUB"
    },
    "2459": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13490,
        13749
      ],
      "op": "AND",
      "path": "50"
    },
    "2460": {
      "op": "PUSH4",
      "value": "0x152DE3B9"
    },
    "2465": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2467": {
      "op": "SHL"
    },
    "2468": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13490,
        13749
      ],
      "op": "OR",
      "path": "50"
    },
    "2469": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13490,
        13749
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2470": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13490,
        13749
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2471": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13450,
        13759
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2472": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13450,
        13759
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x7AD"
    },
    "2475": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13450,
        13759
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2476": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13490,
        13749
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2477": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13450,
        13759
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2B00"
    },
    "2480": {
      "fn": "CLHouse.PropSwapERC20",
      "jump": "i",
      "offset": [
        13450,
        13759
      ],
      "op": "JUMP",
      "path": "50"
    },
    "2481": {
      "offset": [
        1026,
        1062
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "2482": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x84"
    },
    "2484": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "DUP2",
      "path": "47"
    },
    "2485": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "DUP2",
      "path": "47"
    },
    "2486": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "2487": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "DUP2",
      "path": "47"
    },
    "2488": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "LT",
      "path": "47"
    },
    "2489": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x9C1"
    },
    "2492": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "2493": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "2495": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2496": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "REVERT",
      "path": "47"
    },
    "2497": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "2498": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "2500": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "2501": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "DUP3",
      "path": "47"
    },
    "2502": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "2503": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "2505": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2506": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "2507": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "KECCAK256",
      "path": "47"
    },
    "2508": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x3"
    },
    "2510": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2511": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "2512": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "MUL",
      "path": "47"
    },
    "2513": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "ADD",
      "path": "47"
    },
    "2514": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2515": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "2516": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1"
    },
    "2518": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "DUP3",
      "path": "47"
    },
    "2519": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "ADD",
      "path": "47"
    },
    "2520": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2521": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "2522": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2524": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2526": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2528": {
      "op": "SHL"
    },
    "2529": {
      "op": "SUB"
    },
    "2530": {
      "offset": [
        1026,
        1062
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2531": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "2532": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "AND",
      "path": "47"
    },
    "2533": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "SWAP4",
      "path": "47"
    },
    "2534": {
      "op": "POP"
    },
    "2535": {
      "offset": [
        1026,
        1062
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2536": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x9F0"
    },
    "2539": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2540": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2BB4"
    },
    "2543": {
      "fn": "CLHouse.PropSwapERC20",
      "jump": "i",
      "offset": [
        1026,
        1062
      ],
      "op": "JUMP",
      "path": "47"
    },
    "2544": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "2545": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2546": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1F"
    },
    "2548": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "ADD",
      "path": "47"
    },
    "2549": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "2551": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2552": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "2553": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "DIV",
      "path": "47"
    },
    "2554": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "MUL",
      "path": "47"
    },
    "2555": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "2557": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "ADD",
      "path": "47"
    },
    "2558": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "2560": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "MLOAD",
      "path": "47"
    },
    "2561": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2562": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "DUP2",
      "path": "47"
    },
    "2563": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "ADD",
      "path": "47"
    },
    "2564": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "2566": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "2567": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2568": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "2569": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "2570": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2571": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "DUP2",
      "path": "47"
    },
    "2572": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "DUP2",
      "path": "47"
    },
    "2573": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "2574": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "2576": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "ADD",
      "path": "47"
    },
    "2577": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "DUP3",
      "path": "47"
    },
    "2578": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2579": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "2580": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0xA1C"
    },
    "2583": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2584": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2BB4"
    },
    "2587": {
      "fn": "CLHouse.PropSwapERC20",
      "jump": "i",
      "offset": [
        1026,
        1062
      ],
      "op": "JUMP",
      "path": "47"
    },
    "2588": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "2589": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2590": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "ISZERO",
      "path": "47"
    },
    "2591": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0xA69"
    },
    "2594": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "2595": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2596": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1F"
    },
    "2598": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "LT",
      "path": "47"
    },
    "2599": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0xA3E"
    },
    "2602": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "2603": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x100"
    },
    "2606": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2607": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "DUP4",
      "path": "47"
    },
    "2608": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "2609": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "DIV",
      "path": "47"
    },
    "2610": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "MUL",
      "path": "47"
    },
    "2611": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "DUP4",
      "path": "47"
    },
    "2612": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "2613": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "2614": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "2616": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "ADD",
      "path": "47"
    },
    "2617": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "2618": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0xA69"
    },
    "2621": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "JUMP",
      "path": "47"
    },
    "2622": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "2623": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "DUP3",
      "path": "47"
    },
    "2624": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "ADD",
      "path": "47"
    },
    "2625": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "2626": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2627": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "2629": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "2630": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "2632": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "2634": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "KECCAK256",
      "path": "47"
    },
    "2635": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2636": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "2637": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "DUP2",
      "path": "47"
    },
    "2638": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "2639": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "DUP2",
      "path": "47"
    },
    "2640": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "2641": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2642": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1"
    },
    "2644": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "ADD",
      "path": "47"
    },
    "2645": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2646": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "2648": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "ADD",
      "path": "47"
    },
    "2649": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2650": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "DUP4",
      "path": "47"
    },
    "2651": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "GT",
      "path": "47"
    },
    "2652": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0xA4C"
    },
    "2655": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "2656": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "DUP3",
      "path": "47"
    },
    "2657": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2658": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "SUB",
      "path": "47"
    },
    "2659": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1F"
    },
    "2661": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "AND",
      "path": "47"
    },
    "2662": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "DUP3",
      "path": "47"
    },
    "2663": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "ADD",
      "path": "47"
    },
    "2664": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "2665": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "2666": {
      "op": "POP"
    },
    "2667": {
      "op": "POP"
    },
    "2668": {
      "op": "POP"
    },
    "2669": {
      "offset": [
        1026,
        1062
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x2"
    },
    "2671": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2672": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "SWAP4",
      "path": "47"
    },
    "2673": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "ADD",
      "path": "47"
    },
    "2674": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "2675": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "2676": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "2677": {
      "op": "POP"
    },
    "2678": {
      "op": "POP"
    },
    "2679": {
      "offset": [
        1026,
        1062
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0xFF"
    },
    "2681": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "AND",
      "path": "47"
    },
    "2682": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1026,
        1062
      ],
      "op": "DUP4",
      "path": "47"
    },
    "2683": {
      "fn": "CLHouse.PropSwapERC20",
      "jump": "o",
      "offset": [
        1026,
        1062
      ],
      "op": "JUMP",
      "path": "47"
    },
    "2684": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14944,
        15840
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2685": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15130,
        15137
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2687": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15154,
        15175
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2688": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15188
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xC1"
    },
    "2690": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15188
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2692": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15188
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2693": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15188
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "2694": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15188
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2695": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15188
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x100"
    },
    "2698": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15188
      ],
      "op": "EXP",
      "path": "50"
    },
    "2699": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15188
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2700": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15188
      ],
      "op": "DIV",
      "path": "50"
    },
    "2701": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2705": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2707": {
      "op": "SHL"
    },
    "2708": {
      "op": "SUB"
    },
    "2709": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15188
      ],
      "op": "AND",
      "path": "50"
    },
    "2710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2712": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2714": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2716": {
      "op": "SHL"
    },
    "2717": {
      "op": "SUB"
    },
    "2718": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15202
      ],
      "op": "AND",
      "path": "50"
    },
    "2719": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15202
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xA327AB69"
    },
    "2724": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "2726": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2727": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2728": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xFFFFFFFF"
    },
    "2733": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "AND",
      "path": "50"
    },
    "2734": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xE0"
    },
    "2736": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "SHL",
      "path": "50"
    },
    "2737": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2738": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2739": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "2741": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "ADD",
      "path": "50"
    },
    "2742": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "2744": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "2746": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2747": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2748": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "DUP4",
      "path": "50"
    },
    "2749": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "SUB",
      "path": "50"
    },
    "2750": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2751": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "DUP7",
      "path": "50"
    },
    "2752": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "GAS",
      "path": "50"
    },
    "2753": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "STATICCALL",
      "path": "50"
    },
    "2754": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "2755": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2756": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "2757": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xAD2"
    },
    "2760": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "2761": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "2762": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2764": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2765": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "2766": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "2767": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2769": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "REVERT",
      "path": "50"
    },
    "2770": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2771": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "POP",
      "path": "50"
    },
    "2772": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "POP",
      "path": "50"
    },
    "2773": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "POP",
      "path": "50"
    },
    "2774": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "POP",
      "path": "50"
    },
    "2775": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "2777": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2778": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "2779": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "2781": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "NOT",
      "path": "50"
    },
    "2782": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "2784": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "DUP3",
      "path": "50"
    },
    "2785": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "ADD",
      "path": "50"
    },
    "2786": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "AND",
      "path": "50"
    },
    "2787": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "DUP3",
      "path": "50"
    },
    "2788": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "ADD",
      "path": "50"
    },
    "2789": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2790": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "2792": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2793": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "POP",
      "path": "50"
    },
    "2794": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2795": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "ADD",
      "path": "50"
    },
    "2796": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2797": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xAF6"
    },
    "2800": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2801": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2802": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2AAB"
    },
    "2805": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "i",
      "offset": [
        15178,
        15204
      ],
      "op": "JUMP",
      "path": "50"
    },
    "2806": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15178,
        15204
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2807": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15154,
        15204
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2808": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15154,
        15204
      ],
      "op": "POP",
      "path": "50"
    },
    "2809": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15273,
        15291
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2811": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15297,
        15310
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2812": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2814": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2816": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2818": {
      "op": "SHL"
    },
    "2819": {
      "op": "SUB"
    },
    "2820": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15297,
        15323
      ],
      "op": "AND",
      "path": "50"
    },
    "2821": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15443,
        15454
      ],
      "op": "DUP8",
      "path": "50"
    },
    "2822": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15472,
        15485
      ],
      "op": "DUP8",
      "path": "50"
    },
    "2823": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15503,
        15515
      ],
      "op": "DUP8",
      "path": "50"
    },
    "2824": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15533,
        15543
      ],
      "op": "DUP8",
      "path": "50"
    },
    "2825": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15337,
        15557
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "2827": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15337,
        15557
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2828": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15337,
        15557
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x24"
    },
    "2830": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15337,
        15557
      ],
      "op": "ADD",
      "path": "50"
    },
    "2831": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15337,
        15557
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xB1B"
    },
    "2834": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15337,
        15557
      ],
      "op": "SWAP5",
      "path": "50"
    },
    "2835": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15337,
        15557
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "2836": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15337,
        15557
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "2837": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15337,
        15557
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2838": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15337,
        15557
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2839": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15337,
        15557
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2AC8"
    },
    "2842": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "i",
      "offset": [
        15337,
        15557
      ],
      "op": "JUMP",
      "path": "50"
    },
    "2843": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15337,
        15557
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2844": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15337,
        15557
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "2846": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15337,
        15557
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2847": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15337,
        15557
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2848": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2850": {
      "op": "NOT"
    },
    "2851": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15337,
        15557
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2852": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15337,
        15557
      ],
      "op": "DUP5",
      "path": "50"
    },
    "2853": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15337,
        15557
      ],
      "op": "SUB",
      "path": "50"
    },
    "2854": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15337,
        15557
      ],
      "op": "ADD",
      "path": "50"
    },
    "2855": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15337,
        15557
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2856": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15337,
        15557
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2857": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15337,
        15557
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2858": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15337,
        15557
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2859": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15337,
        15557
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2860": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15337,
        15557
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "2862": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15337,
        15557
      ],
      "op": "DUP3",
      "path": "50"
    },
    "2863": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15337,
        15557
      ],
      "op": "ADD",
      "path": "50"
    },
    "2864": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15337,
        15557
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2865": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15337,
        15557
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2866": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2868": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2870": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2872": {
      "op": "SHL"
    },
    "2873": {
      "op": "SUB"
    },
    "2874": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15337,
        15557
      ],
      "op": "AND",
      "path": "50"
    },
    "2875": {
      "op": "PUSH4",
      "value": "0x899B86F"
    },
    "2880": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2882": {
      "op": "SHL"
    },
    "2883": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15337,
        15557
      ],
      "op": "OR",
      "path": "50"
    },
    "2884": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15337,
        15557
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2885": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15337,
        15557
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2886": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15297,
        15567
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2887": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15297,
        15567
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x7AD"
    },
    "2890": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15297,
        15567
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2891": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15337,
        15557
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2892": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15297,
        15567
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2B00"
    },
    "2895": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "i",
      "offset": [
        15297,
        15567
      ],
      "op": "JUMP",
      "path": "50"
    },
    "2896": {
      "offset": [
        956,
        981
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "2897": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x82"
    },
    "2899": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "DUP2",
      "path": "47"
    },
    "2900": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "DUP2",
      "path": "47"
    },
    "2901": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "2902": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "DUP2",
      "path": "47"
    },
    "2903": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "LT",
      "path": "47"
    },
    "2904": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0xB60"
    },
    "2907": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "2908": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "2910": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2911": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "REVERT",
      "path": "47"
    },
    "2912": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "2913": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "2915": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "2916": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "DUP3",
      "path": "47"
    },
    "2917": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "2918": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "2920": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2921": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "2922": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "KECCAK256",
      "path": "47"
    },
    "2923": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x4"
    },
    "2925": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2926": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "2927": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "MUL",
      "path": "47"
    },
    "2928": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "ADD",
      "path": "47"
    },
    "2929": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2930": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "2931": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1"
    },
    "2933": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "DUP3",
      "path": "47"
    },
    "2934": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "ADD",
      "path": "47"
    },
    "2935": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2936": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "2937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2941": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2943": {
      "op": "SHL"
    },
    "2944": {
      "op": "SUB"
    },
    "2945": {
      "offset": [
        956,
        981
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2946": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "2947": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "AND",
      "path": "47"
    },
    "2948": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "SWAP4",
      "path": "47"
    },
    "2949": {
      "op": "POP"
    },
    "2950": {
      "offset": [
        956,
        981
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2951": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0xB8F"
    },
    "2954": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2955": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2BB4"
    },
    "2958": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "i",
      "offset": [
        956,
        981
      ],
      "op": "JUMP",
      "path": "47"
    },
    "2959": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "2960": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2961": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1F"
    },
    "2963": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "ADD",
      "path": "47"
    },
    "2964": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "2966": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2967": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "2968": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "DIV",
      "path": "47"
    },
    "2969": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "MUL",
      "path": "47"
    },
    "2970": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "2972": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "ADD",
      "path": "47"
    },
    "2973": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "2975": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "MLOAD",
      "path": "47"
    },
    "2976": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2977": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "DUP2",
      "path": "47"
    },
    "2978": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "ADD",
      "path": "47"
    },
    "2979": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "2981": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "2982": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2983": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "2984": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "2985": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2986": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "DUP2",
      "path": "47"
    },
    "2987": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "DUP2",
      "path": "47"
    },
    "2988": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "2989": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "2991": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "ADD",
      "path": "47"
    },
    "2992": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "DUP3",
      "path": "47"
    },
    "2993": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2994": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "2995": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0xBBB"
    },
    "2998": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2999": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2BB4"
    },
    "3002": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "i",
      "offset": [
        956,
        981
      ],
      "op": "JUMP",
      "path": "47"
    },
    "3003": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "3004": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "DUP1",
      "path": "47"
    },
    "3005": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "ISZERO",
      "path": "47"
    },
    "3006": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0xC08"
    },
    "3009": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "3010": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "DUP1",
      "path": "47"
    },
    "3011": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1F"
    },
    "3013": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "LT",
      "path": "47"
    },
    "3014": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0xBDD"
    },
    "3017": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "3018": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x100"
    },
    "3021": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "DUP1",
      "path": "47"
    },
    "3022": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "DUP4",
      "path": "47"
    },
    "3023": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "3024": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "DIV",
      "path": "47"
    },
    "3025": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "MUL",
      "path": "47"
    },
    "3026": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "DUP4",
      "path": "47"
    },
    "3027": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "3028": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "3029": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "3031": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "ADD",
      "path": "47"
    },
    "3032": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "3033": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0xC08"
    },
    "3036": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "JUMP",
      "path": "47"
    },
    "3037": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "3038": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "DUP3",
      "path": "47"
    },
    "3039": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "ADD",
      "path": "47"
    },
    "3040": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "3041": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "3042": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "3044": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "3045": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "3047": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "3049": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "KECCAK256",
      "path": "47"
    },
    "3050": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "3051": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "3052": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "DUP2",
      "path": "47"
    },
    "3053": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "3054": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "DUP2",
      "path": "47"
    },
    "3055": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "3056": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "3057": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1"
    },
    "3059": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "ADD",
      "path": "47"
    },
    "3060": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "3061": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "3063": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "ADD",
      "path": "47"
    },
    "3064": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "DUP1",
      "path": "47"
    },
    "3065": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "DUP4",
      "path": "47"
    },
    "3066": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "GT",
      "path": "47"
    },
    "3067": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0xBEB"
    },
    "3070": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "3071": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "DUP3",
      "path": "47"
    },
    "3072": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "3073": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "SUB",
      "path": "47"
    },
    "3074": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1F"
    },
    "3076": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "AND",
      "path": "47"
    },
    "3077": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "DUP3",
      "path": "47"
    },
    "3078": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "ADD",
      "path": "47"
    },
    "3079": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "3080": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "3081": {
      "op": "POP"
    },
    "3082": {
      "op": "POP"
    },
    "3083": {
      "op": "POP"
    },
    "3084": {
      "op": "POP"
    },
    "3085": {
      "offset": [
        956,
        981
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x2"
    },
    "3087": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "DUP4",
      "path": "47"
    },
    "3088": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "ADD",
      "path": "47"
    },
    "3089": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "3090": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x3"
    },
    "3092": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "3093": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "SWAP4",
      "path": "47"
    },
    "3094": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "ADD",
      "path": "47"
    },
    "3095": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "3096": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "3097": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "3098": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "3099": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0xFF"
    },
    "3101": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "DUP1",
      "path": "47"
    },
    "3102": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "DUP3",
      "path": "47"
    },
    "3103": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "AND",
      "path": "47"
    },
    "3104": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "3105": {
      "op": "POP"
    },
    "3106": {
      "offset": [
        956,
        981
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x100"
    },
    "3109": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "3110": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "3111": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "DIV",
      "path": "47"
    },
    "3112": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "AND",
      "path": "47"
    },
    "3113": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        956,
        981
      ],
      "op": "DUP6",
      "path": "47"
    },
    "3114": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "o",
      "offset": [
        956,
        981
      ],
      "op": "JUMP",
      "path": "47"
    },
    "3115": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17568,
        17683
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3116": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17621,
        17641
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x60"
    },
    "3118": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17661,
        17676
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 3,
      "value": "0x84"
    },
    "3120": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3121": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "3122": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3123": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "3125": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "MUL",
      "path": "50"
    },
    "3126": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "3128": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "ADD",
      "path": "50"
    },
    "3129": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3131": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3132": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3133": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3134": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "ADD",
      "path": "50"
    },
    "3135": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3137": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3138": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3139": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "3140": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3141": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3142": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3143": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3144": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3145": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "3147": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "ADD",
      "path": "50"
    },
    "3148": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3150": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3151": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3152": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3153": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3154": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "LT",
      "path": "50"
    },
    "3155": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "3156": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xD3B"
    },
    "3159": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "3160": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3162": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "DUP5",
      "path": "50"
    },
    "3163": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3164": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3165": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "3167": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3168": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3169": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3170": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "KECCAK256",
      "path": "50"
    },
    "3171": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3173": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3174": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3175": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x60"
    },
    "3177": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3178": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "ADD",
      "path": "50"
    },
    "3179": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3180": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3181": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3182": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x3"
    },
    "3184": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "DUP6",
      "path": "50"
    },
    "3185": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "MUL",
      "path": "50"
    },
    "3186": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3187": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3188": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "ADD",
      "path": "50"
    },
    "3189": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3190": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "3191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3195": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3197": {
      "op": "SHL"
    },
    "3198": {
      "op": "SUB"
    },
    "3199": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "AND",
      "path": "50"
    },
    "3200": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3201": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3202": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1"
    },
    "3204": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3205": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "ADD",
      "path": "50"
    },
    "3206": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3207": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "3208": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "3209": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "3210": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3211": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "3212": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3213": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "DUP5",
      "path": "50"
    },
    "3214": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "ADD",
      "path": "50"
    },
    "3215": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3216": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xC98"
    },
    "3219": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3220": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2BB4"
    },
    "3223": {
      "fn": "CLHouse.GetArrDataPropUser",
      "jump": "i",
      "offset": [
        17654,
        17676
      ],
      "op": "JUMP",
      "path": "50"
    },
    "3224": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3225": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3226": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "3228": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "ADD",
      "path": "50"
    },
    "3229": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "3231": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3232": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3233": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "DIV",
      "path": "50"
    },
    "3234": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "MUL",
      "path": "50"
    },
    "3235": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "3237": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "ADD",
      "path": "50"
    },
    "3238": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3240": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3241": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3242": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3243": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "ADD",
      "path": "50"
    },
    "3244": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3246": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3247": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3248": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "3249": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3250": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3251": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3252": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3253": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3254": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "3256": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "ADD",
      "path": "50"
    },
    "3257": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3258": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3259": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "3260": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xCC4"
    },
    "3263": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3264": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2BB4"
    },
    "3267": {
      "fn": "CLHouse.GetArrDataPropUser",
      "jump": "i",
      "offset": [
        17654,
        17676
      ],
      "op": "JUMP",
      "path": "50"
    },
    "3268": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3269": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3270": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "3271": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xD11"
    },
    "3274": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "3275": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3276": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "3278": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "LT",
      "path": "50"
    },
    "3279": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xCE6"
    },
    "3282": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "3283": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x100"
    },
    "3286": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3287": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "DUP4",
      "path": "50"
    },
    "3288": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "3289": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "DIV",
      "path": "50"
    },
    "3290": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "MUL",
      "path": "50"
    },
    "3291": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "DUP4",
      "path": "50"
    },
    "3292": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3293": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3294": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "3296": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "ADD",
      "path": "50"
    },
    "3297": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3298": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xD11"
    },
    "3301": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "JUMP",
      "path": "50"
    },
    "3302": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3303": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3304": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "ADD",
      "path": "50"
    },
    "3305": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3306": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3307": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3309": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3310": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "3312": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3314": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "KECCAK256",
      "path": "50"
    },
    "3315": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3316": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3317": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3318": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "3319": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3320": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3321": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3322": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1"
    },
    "3324": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "ADD",
      "path": "50"
    },
    "3325": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3326": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "3328": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "ADD",
      "path": "50"
    },
    "3329": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3330": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "DUP4",
      "path": "50"
    },
    "3331": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "GT",
      "path": "50"
    },
    "3332": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xCF4"
    },
    "3335": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "3336": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3337": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3338": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "SUB",
      "path": "50"
    },
    "3339": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "3341": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "AND",
      "path": "50"
    },
    "3342": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3343": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "ADD",
      "path": "50"
    },
    "3344": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3345": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3346": {
      "op": "POP"
    },
    "3347": {
      "op": "POP"
    },
    "3348": {
      "op": "POP"
    },
    "3349": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3350": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "DUP4",
      "path": "50"
    },
    "3351": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3352": {
      "op": "POP"
    },
    "3353": {
      "op": "POP"
    },
    "3354": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x2"
    },
    "3356": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3357": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3358": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3359": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "ADD",
      "path": "50"
    },
    "3360": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "3361": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xFF"
    },
    "3363": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "AND",
      "path": "50"
    },
    "3364": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "3365": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "3366": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "3368": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3369": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3370": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "ADD",
      "path": "50"
    },
    "3371": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3372": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3373": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3374": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3375": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1"
    },
    "3377": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "3378": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3379": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "3380": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "ADD",
      "path": "50"
    },
    "3381": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3382": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "ADD",
      "path": "50"
    },
    "3383": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xC4F"
    },
    "3386": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "JUMP",
      "path": "50"
    },
    "3387": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3388": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "POP",
      "path": "50"
    },
    "3389": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "POP",
      "path": "50"
    },
    "3390": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "POP",
      "path": "50"
    },
    "3391": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "POP",
      "path": "50"
    },
    "3392": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3393": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17654,
        17676
      ],
      "op": "POP",
      "path": "50"
    },
    "3394": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17568,
        17683
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3395": {
      "fn": "CLHouse.GetArrDataPropUser",
      "jump": "o",
      "offset": [
        17568,
        17683
      ],
      "op": "JUMP",
      "path": "50"
    },
    "3396": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6276,
        7183
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3397": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6466,
        6480
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3399": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6497,
        6518
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3400": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6531
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xC1"
    },
    "3402": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6531
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3404": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6531
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3405": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6531
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "3406": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6531
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3407": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6531
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x100"
    },
    "3410": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6531
      ],
      "op": "EXP",
      "path": "50"
    },
    "3411": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6531
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3412": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6531
      ],
      "op": "DIV",
      "path": "50"
    },
    "3413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3417": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3419": {
      "op": "SHL"
    },
    "3420": {
      "op": "SUB"
    },
    "3421": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6531
      ],
      "op": "AND",
      "path": "50"
    },
    "3422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3426": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3428": {
      "op": "SHL"
    },
    "3429": {
      "op": "SUB"
    },
    "3430": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6545
      ],
      "op": "AND",
      "path": "50"
    },
    "3431": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6545
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xA327AB69"
    },
    "3436": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3438": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3439": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3440": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xFFFFFFFF"
    },
    "3445": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "AND",
      "path": "50"
    },
    "3446": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xE0"
    },
    "3448": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "SHL",
      "path": "50"
    },
    "3449": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3450": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3451": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "3453": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "ADD",
      "path": "50"
    },
    "3454": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "3456": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3458": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3459": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3460": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "DUP4",
      "path": "50"
    },
    "3461": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "SUB",
      "path": "50"
    },
    "3462": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3463": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "DUP7",
      "path": "50"
    },
    "3464": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "GAS",
      "path": "50"
    },
    "3465": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "STATICCALL",
      "path": "50"
    },
    "3466": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "3467": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3468": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "3469": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xD9A"
    },
    "3472": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "3473": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "3474": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3476": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3477": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "3478": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "3479": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3481": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "REVERT",
      "path": "50"
    },
    "3482": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3483": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "POP",
      "path": "50"
    },
    "3484": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "POP",
      "path": "50"
    },
    "3485": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "POP",
      "path": "50"
    },
    "3486": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "POP",
      "path": "50"
    },
    "3487": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3489": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3490": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "3491": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "3493": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "NOT",
      "path": "50"
    },
    "3494": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "3496": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3497": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "ADD",
      "path": "50"
    },
    "3498": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "AND",
      "path": "50"
    },
    "3499": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3500": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "ADD",
      "path": "50"
    },
    "3501": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3502": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3504": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3505": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "POP",
      "path": "50"
    },
    "3506": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3507": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "ADD",
      "path": "50"
    },
    "3508": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3509": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xDBE"
    },
    "3512": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3513": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3514": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2AAB"
    },
    "3517": {
      "fn": "CLHouse.PropRemoveUser",
      "jump": "i",
      "offset": [
        6521,
        6547
      ],
      "op": "JUMP",
      "path": "50"
    },
    "3518": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6521,
        6547
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3519": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6497,
        6547
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3520": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6497,
        6547
      ],
      "op": "POP",
      "path": "50"
    },
    "3521": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6616,
        6634
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3523": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6640,
        6653
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3524": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3526": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3528": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3530": {
      "op": "SHL"
    },
    "3531": {
      "op": "SUB"
    },
    "3532": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6640,
        6666
      ],
      "op": "AND",
      "path": "50"
    },
    "3533": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6786,
        6797
      ],
      "op": "DUP8",
      "path": "50"
    },
    "3534": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6815,
        6827
      ],
      "op": "DUP8",
      "path": "50"
    },
    "3535": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6845,
        6855
      ],
      "op": "DUP8",
      "path": "50"
    },
    "3536": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6873,
        6883
      ],
      "op": "DUP8",
      "path": "50"
    },
    "3537": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6680,
        6897
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3539": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6680,
        6897
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3540": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6680,
        6897
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x24"
    },
    "3542": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6680,
        6897
      ],
      "op": "ADD",
      "path": "50"
    },
    "3543": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6680,
        6897
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xDE3"
    },
    "3546": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6680,
        6897
      ],
      "op": "SWAP5",
      "path": "50"
    },
    "3547": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6680,
        6897
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "3548": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6680,
        6897
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "3549": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6680,
        6897
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3550": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6680,
        6897
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3551": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6680,
        6897
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2BEF"
    },
    "3554": {
      "fn": "CLHouse.PropRemoveUser",
      "jump": "i",
      "offset": [
        6680,
        6897
      ],
      "op": "JUMP",
      "path": "50"
    },
    "3555": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6680,
        6897
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3556": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6680,
        6897
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3558": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6680,
        6897
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3559": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6680,
        6897
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3560": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3562": {
      "op": "NOT"
    },
    "3563": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6680,
        6897
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3564": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6680,
        6897
      ],
      "op": "DUP5",
      "path": "50"
    },
    "3565": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6680,
        6897
      ],
      "op": "SUB",
      "path": "50"
    },
    "3566": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6680,
        6897
      ],
      "op": "ADD",
      "path": "50"
    },
    "3567": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6680,
        6897
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3568": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6680,
        6897
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3569": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6680,
        6897
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3570": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6680,
        6897
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3571": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6680,
        6897
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3572": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6680,
        6897
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "3574": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6680,
        6897
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3575": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6680,
        6897
      ],
      "op": "ADD",
      "path": "50"
    },
    "3576": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6680,
        6897
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3577": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6680,
        6897
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3580": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3582": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3584": {
      "op": "SHL"
    },
    "3585": {
      "op": "SUB"
    },
    "3586": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6680,
        6897
      ],
      "op": "AND",
      "path": "50"
    },
    "3587": {
      "op": "PUSH4",
      "value": "0xA95FBE1"
    },
    "3592": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "3594": {
      "op": "SHL"
    },
    "3595": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6680,
        6897
      ],
      "op": "OR",
      "path": "50"
    },
    "3596": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6680,
        6897
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3597": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6680,
        6897
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3598": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6640,
        6907
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3599": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6640,
        6907
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xE18"
    },
    "3602": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6640,
        6907
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3603": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6680,
        6897
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3604": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6640,
        6907
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2B00"
    },
    "3607": {
      "fn": "CLHouse.PropRemoveUser",
      "jump": "i",
      "offset": [
        6640,
        6907
      ],
      "op": "JUMP",
      "path": "50"
    },
    "3608": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6640,
        6907
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3609": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6640,
        6907
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3611": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6640,
        6907
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3613": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6640,
        6907
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3614": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6640,
        6907
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3615": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6640,
        6907
      ],
      "op": "DUP4",
      "path": "50"
    },
    "3616": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6640,
        6907
      ],
      "op": "SUB",
      "path": "50"
    },
    "3617": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6640,
        6907
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3618": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6640,
        6907
      ],
      "op": "DUP6",
      "path": "50"
    },
    "3619": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6640,
        6907
      ],
      "op": "GAS",
      "path": "50"
    },
    "3620": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6640,
        6907
      ],
      "op": "DELEGATECALL",
      "path": "50"
    },
    "3621": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6640,
        6907
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3622": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6640,
        6907
      ],
      "op": "POP",
      "path": "50"
    },
    "3623": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6640,
        6907
      ],
      "op": "POP",
      "path": "50"
    },
    "3624": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6640,
        6907
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "3625": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6640,
        6907
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3626": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6640,
        6907
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3628": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6640,
        6907
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3629": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6640,
        6907
      ],
      "op": "EQ",
      "path": "50"
    },
    "3630": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6640,
        6907
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xE53"
    },
    "3633": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6640,
        6907
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "3634": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6640,
        6907
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3636": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6640,
        6907
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3637": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6640,
        6907
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3638": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6640,
        6907
      ],
      "op": "POP",
      "path": "50"
    },
    "3639": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6640,
        6907
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "3641": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6640,
        6907
      ],
      "op": "NOT",
      "path": "50"
    },
    "3642": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6640,
        6907
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x3F"
    },
    "3644": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6640,
        6907
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "3645": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6640,
        6907
      ],
      "op": "ADD",
      "path": "50"
    },
    "3646": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6640,
        6907
      ],
      "op": "AND",
      "path": "50"
    },
    "3647": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6640,
        6907
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3648": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6640,
        6907
      ],
      "op": "ADD",
      "path": "50"
    },
    "3649": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6640,
        6907
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3651": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6640,
        6907
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3652": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6640,
        6907
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "3653": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6640,
        6907
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3654": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6640,
        6907
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3655": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6640,
        6907
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "3656": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6640,
        6907
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3658": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6640,
        6907
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "3660": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6640,
        6907
      ],
      "op": "DUP5",
      "path": "50"
    },
    "3661": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6640,
        6907
      ],
      "op": "ADD",
      "path": "50"
    },
    "3662": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6640,
        6907
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "3663": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6640,
        6907
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xE58"
    },
    "3666": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6640,
        6907
      ],
      "op": "JUMP",
      "path": "50"
    },
    "3667": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6640,
        6907
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3668": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6640,
        6907
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x60"
    },
    "3670": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6640,
        6907
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3671": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6640,
        6907
      ],
      "op": "POP",
      "path": "50"
    },
    "3672": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6640,
        6907
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3673": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6640,
        6907
      ],
      "op": "POP",
      "path": "50"
    },
    "3674": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6615,
        6907
      ],
      "op": "POP",
      "path": "50"
    },
    "3675": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6615,
        6907
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3676": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6615,
        6907
      ],
      "op": "POP",
      "path": "50"
    },
    "3677": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6958,
        6962
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3679": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6952,
        6963
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3680": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6988,
        7004
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "3681": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        7040,
        7044
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3682": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        7037,
        7038
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3684": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        7032,
        7035
      ],
      "op": "DUP4",
      "path": "50"
    },
    "3685": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        7017,
        7045
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "3686": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        7069,
        7082
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3687": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        7058,
        7134
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xE6E"
    },
    "3690": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        7058,
        7134
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "3691": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        7115,
        7119
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3692": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        7110,
        7113
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3693": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        7103,
        7120
      ],
      "op": "REVERT",
      "path": "50"
    },
    "3694": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        7058,
        7134
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3695": {
      "op": "POP"
    },
    "3696": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        7157,
        7167
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3697": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        7157,
        7167
      ],
      "op": "SWAP8",
      "path": "50"
    },
    "3698": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6276,
        7183
      ],
      "op": "SWAP7",
      "path": "50"
    },
    "3699": {
      "op": "POP"
    },
    "3700": {
      "op": "POP"
    },
    "3701": {
      "op": "POP"
    },
    "3702": {
      "op": "POP"
    },
    "3703": {
      "op": "POP"
    },
    "3704": {
      "op": "POP"
    },
    "3705": {
      "op": "POP"
    },
    "3706": {
      "fn": "CLHouse.PropRemoveUser",
      "jump": "o",
      "offset": [
        6276,
        7183
      ],
      "op": "JUMP",
      "path": "50"
    },
    "3707": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4976,
        6000
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3708": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5220,
        5234
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3710": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5251,
        5272
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3711": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5285
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xC1"
    },
    "3713": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5285
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3715": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5285
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3716": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5285
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "3717": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5285
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3718": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5285
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x100"
    },
    "3721": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5285
      ],
      "op": "EXP",
      "path": "50"
    },
    "3722": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5285
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3723": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5285
      ],
      "op": "DIV",
      "path": "50"
    },
    "3724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3726": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3728": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3730": {
      "op": "SHL"
    },
    "3731": {
      "op": "SUB"
    },
    "3732": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5285
      ],
      "op": "AND",
      "path": "50"
    },
    "3733": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3737": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3739": {
      "op": "SHL"
    },
    "3740": {
      "op": "SUB"
    },
    "3741": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5299
      ],
      "op": "AND",
      "path": "50"
    },
    "3742": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5299
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xA327AB69"
    },
    "3747": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3749": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3750": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3751": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xFFFFFFFF"
    },
    "3756": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "AND",
      "path": "50"
    },
    "3757": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xE0"
    },
    "3759": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "SHL",
      "path": "50"
    },
    "3760": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3761": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3762": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "3764": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "ADD",
      "path": "50"
    },
    "3765": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "3767": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3769": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3770": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3771": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "DUP4",
      "path": "50"
    },
    "3772": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "SUB",
      "path": "50"
    },
    "3773": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3774": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "DUP7",
      "path": "50"
    },
    "3775": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "GAS",
      "path": "50"
    },
    "3776": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "STATICCALL",
      "path": "50"
    },
    "3777": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "3778": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3779": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "3780": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xED1"
    },
    "3783": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "3784": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "3785": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3787": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3788": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "3789": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "3790": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3792": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "REVERT",
      "path": "50"
    },
    "3793": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3794": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "POP",
      "path": "50"
    },
    "3795": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "POP",
      "path": "50"
    },
    "3796": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "POP",
      "path": "50"
    },
    "3797": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "POP",
      "path": "50"
    },
    "3798": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3800": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3801": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "3802": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "3804": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "NOT",
      "path": "50"
    },
    "3805": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "3807": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3808": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "ADD",
      "path": "50"
    },
    "3809": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "AND",
      "path": "50"
    },
    "3810": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3811": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "ADD",
      "path": "50"
    },
    "3812": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3813": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3815": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3816": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "POP",
      "path": "50"
    },
    "3817": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3818": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "ADD",
      "path": "50"
    },
    "3819": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3820": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xEF5"
    },
    "3823": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3824": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3825": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2AAB"
    },
    "3828": {
      "fn": "CLHouse.PropInviteUser",
      "jump": "i",
      "offset": [
        5275,
        5301
      ],
      "op": "JUMP",
      "path": "50"
    },
    "3829": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5275,
        5301
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3830": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5251,
        5301
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3831": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5251,
        5301
      ],
      "op": "POP",
      "path": "50"
    },
    "3832": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5370,
        5388
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3834": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5394,
        5407
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3839": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3841": {
      "op": "SHL"
    },
    "3842": {
      "op": "SUB"
    },
    "3843": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5394,
        5420
      ],
      "op": "AND",
      "path": "50"
    },
    "3844": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5552,
        5563
      ],
      "op": "DUP10",
      "path": "50"
    },
    "3845": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5581,
        5586
      ],
      "op": "DUP10",
      "path": "50"
    },
    "3846": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5604,
        5616
      ],
      "op": "DUP10",
      "path": "50"
    },
    "3847": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5634,
        5644
      ],
      "op": "DUP10",
      "path": "50"
    },
    "3848": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5662,
        5672
      ],
      "op": "DUP10",
      "path": "50"
    },
    "3849": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5690,
        5700
      ],
      "op": "DUP10",
      "path": "50"
    },
    "3850": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5434,
        5714
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3852": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5434,
        5714
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3853": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5434,
        5714
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x24"
    },
    "3855": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5434,
        5714
      ],
      "op": "ADD",
      "path": "50"
    },
    "3856": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5434,
        5714
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xF1E"
    },
    "3859": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5434,
        5714
      ],
      "op": "SWAP7",
      "path": "50"
    },
    "3860": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5434,
        5714
      ],
      "op": "SWAP6",
      "path": "50"
    },
    "3861": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5434,
        5714
      ],
      "op": "SWAP5",
      "path": "50"
    },
    "3862": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5434,
        5714
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "3863": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5434,
        5714
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "3864": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5434,
        5714
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3865": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5434,
        5714
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3866": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5434,
        5714
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2C2B"
    },
    "3869": {
      "fn": "CLHouse.PropInviteUser",
      "jump": "i",
      "offset": [
        5434,
        5714
      ],
      "op": "JUMP",
      "path": "50"
    },
    "3870": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5434,
        5714
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3871": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5434,
        5714
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3873": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5434,
        5714
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3874": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5434,
        5714
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3875": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3877": {
      "op": "NOT"
    },
    "3878": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5434,
        5714
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3879": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5434,
        5714
      ],
      "op": "DUP5",
      "path": "50"
    },
    "3880": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5434,
        5714
      ],
      "op": "SUB",
      "path": "50"
    },
    "3881": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5434,
        5714
      ],
      "op": "ADD",
      "path": "50"
    },
    "3882": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5434,
        5714
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3883": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5434,
        5714
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3884": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5434,
        5714
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3885": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5434,
        5714
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3886": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5434,
        5714
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3887": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5434,
        5714
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "3889": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5434,
        5714
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3890": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5434,
        5714
      ],
      "op": "ADD",
      "path": "50"
    },
    "3891": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5434,
        5714
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3892": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5434,
        5714
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3893": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3895": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3897": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3899": {
      "op": "SHL"
    },
    "3900": {
      "op": "SUB"
    },
    "3901": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5434,
        5714
      ],
      "op": "AND",
      "path": "50"
    },
    "3902": {
      "op": "PUSH4",
      "value": "0x31A0AFA7"
    },
    "3907": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3909": {
      "op": "SHL"
    },
    "3910": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5434,
        5714
      ],
      "op": "OR",
      "path": "50"
    },
    "3911": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5434,
        5714
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3912": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5434,
        5714
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3913": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5394,
        5724
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3914": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5394,
        5724
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xF53"
    },
    "3917": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5394,
        5724
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3918": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5434,
        5714
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3919": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5394,
        5724
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2B00"
    },
    "3922": {
      "fn": "CLHouse.PropInviteUser",
      "jump": "i",
      "offset": [
        5394,
        5724
      ],
      "op": "JUMP",
      "path": "50"
    },
    "3923": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5394,
        5724
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3924": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5394,
        5724
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3926": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5394,
        5724
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3928": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5394,
        5724
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3929": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5394,
        5724
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3930": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5394,
        5724
      ],
      "op": "DUP4",
      "path": "50"
    },
    "3931": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5394,
        5724
      ],
      "op": "SUB",
      "path": "50"
    },
    "3932": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5394,
        5724
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3933": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5394,
        5724
      ],
      "op": "DUP6",
      "path": "50"
    },
    "3934": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5394,
        5724
      ],
      "op": "GAS",
      "path": "50"
    },
    "3935": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5394,
        5724
      ],
      "op": "DELEGATECALL",
      "path": "50"
    },
    "3936": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5394,
        5724
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3937": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5394,
        5724
      ],
      "op": "POP",
      "path": "50"
    },
    "3938": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5394,
        5724
      ],
      "op": "POP",
      "path": "50"
    },
    "3939": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5394,
        5724
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "3940": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5394,
        5724
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3941": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5394,
        5724
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3943": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5394,
        5724
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3944": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5394,
        5724
      ],
      "op": "EQ",
      "path": "50"
    },
    "3945": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5394,
        5724
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xF8E"
    },
    "3948": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5394,
        5724
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "3949": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5394,
        5724
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3951": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5394,
        5724
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3952": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5394,
        5724
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3953": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5394,
        5724
      ],
      "op": "POP",
      "path": "50"
    },
    "3954": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5394,
        5724
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "3956": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5394,
        5724
      ],
      "op": "NOT",
      "path": "50"
    },
    "3957": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5394,
        5724
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x3F"
    },
    "3959": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5394,
        5724
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "3960": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5394,
        5724
      ],
      "op": "ADD",
      "path": "50"
    },
    "3961": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5394,
        5724
      ],
      "op": "AND",
      "path": "50"
    },
    "3962": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5394,
        5724
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3963": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5394,
        5724
      ],
      "op": "ADD",
      "path": "50"
    },
    "3964": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5394,
        5724
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3966": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5394,
        5724
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3967": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5394,
        5724
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "3968": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5394,
        5724
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3969": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5394,
        5724
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3970": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5394,
        5724
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "3971": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5394,
        5724
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3973": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5394,
        5724
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "3975": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5394,
        5724
      ],
      "op": "DUP5",
      "path": "50"
    },
    "3976": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5394,
        5724
      ],
      "op": "ADD",
      "path": "50"
    },
    "3977": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5394,
        5724
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "3978": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5394,
        5724
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xF93"
    },
    "3981": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5394,
        5724
      ],
      "op": "JUMP",
      "path": "50"
    },
    "3982": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5394,
        5724
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3983": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5394,
        5724
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x60"
    },
    "3985": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5394,
        5724
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3986": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5394,
        5724
      ],
      "op": "POP",
      "path": "50"
    },
    "3987": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5394,
        5724
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3988": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5394,
        5724
      ],
      "op": "POP",
      "path": "50"
    },
    "3989": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5369,
        5724
      ],
      "op": "POP",
      "path": "50"
    },
    "3990": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5369,
        5724
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3991": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5369,
        5724
      ],
      "op": "POP",
      "path": "50"
    },
    "3992": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5775,
        5779
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3994": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5769,
        5780
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3995": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5805,
        5821
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "3996": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5857,
        5861
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3997": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5854,
        5855
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3999": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5849,
        5852
      ],
      "op": "DUP4",
      "path": "50"
    },
    "4000": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5834,
        5862
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "4001": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5886,
        5899
      ],
      "op": "DUP3",
      "path": "50"
    },
    "4002": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5875,
        5951
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xFA9"
    },
    "4005": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5875,
        5951
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "4006": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5932,
        5936
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4007": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5927,
        5930
      ],
      "op": "DUP3",
      "path": "50"
    },
    "4008": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5920,
        5937
      ],
      "op": "REVERT",
      "path": "50"
    },
    "4009": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5875,
        5951
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4010": {
      "op": "POP"
    },
    "4011": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5974,
        5984
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4012": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5974,
        5984
      ],
      "op": "SWAP10",
      "path": "50"
    },
    "4013": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4976,
        6000
      ],
      "op": "SWAP9",
      "path": "50"
    },
    "4014": {
      "op": "POP"
    },
    "4015": {
      "op": "POP"
    },
    "4016": {
      "op": "POP"
    },
    "4017": {
      "op": "POP"
    },
    "4018": {
      "op": "POP"
    },
    "4019": {
      "op": "POP"
    },
    "4020": {
      "op": "POP"
    },
    "4021": {
      "op": "POP"
    },
    "4022": {
      "op": "POP"
    },
    "4023": {
      "fn": "CLHouse.PropInviteUser",
      "jump": "o",
      "offset": [
        4976,
        6000
      ],
      "op": "JUMP",
      "path": "50"
    },
    "4024": {
      "offset": [
        1118,
        1162
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "4025": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1118,
        1162
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x86"
    },
    "4027": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1118,
        1162
      ],
      "op": "DUP2",
      "path": "47"
    },
    "4028": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1118,
        1162
      ],
      "op": "DUP2",
      "path": "47"
    },
    "4029": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1118,
        1162
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "4030": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1118,
        1162
      ],
      "op": "DUP2",
      "path": "47"
    },
    "4031": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1118,
        1162
      ],
      "op": "LT",
      "path": "47"
    },
    "4032": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1118,
        1162
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0xFC8"
    },
    "4035": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1118,
        1162
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "4036": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1118,
        1162
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "4038": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1118,
        1162
      ],
      "op": "DUP1",
      "path": "47"
    },
    "4039": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1118,
        1162
      ],
      "op": "REVERT",
      "path": "47"
    },
    "4040": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1118,
        1162
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "4041": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1118,
        1162
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "4043": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1118,
        1162
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "4044": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1118,
        1162
      ],
      "op": "DUP3",
      "path": "47"
    },
    "4045": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1118,
        1162
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "4046": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1118,
        1162
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "4048": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1118,
        1162
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "4049": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1118,
        1162
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "4050": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1118,
        1162
      ],
      "op": "KECCAK256",
      "path": "47"
    },
    "4051": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1118,
        1162
      ],
      "op": "ADD",
      "path": "47"
    },
    "4052": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1118,
        1162
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "4053": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1118,
        1162
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "4054": {
      "op": "POP"
    },
    "4055": {
      "offset": [
        1118,
        1162
      ],
      "op": "DUP2",
      "path": "47"
    },
    "4056": {
      "fn": "CLHouse.PropInviteUser",
      "jump": "o",
      "offset": [
        1118,
        1162
      ],
      "op": "JUMP",
      "path": "47"
    },
    "4057": {
      "offset": [
        822,
        846
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "4058": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x42"
    },
    "4060": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "DUP1",
      "path": "47"
    },
    "4061": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "4062": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0xFE6"
    },
    "4065": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "4066": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2BB4"
    },
    "4069": {
      "fn": "CLHouse.PropInviteUser",
      "jump": "i",
      "offset": [
        822,
        846
      ],
      "op": "JUMP",
      "path": "47"
    },
    "4070": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "4071": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "DUP1",
      "path": "47"
    },
    "4072": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1F"
    },
    "4074": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "ADD",
      "path": "47"
    },
    "4075": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "4077": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "DUP1",
      "path": "47"
    },
    "4078": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "4079": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "DIV",
      "path": "47"
    },
    "4080": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "MUL",
      "path": "47"
    },
    "4081": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "4083": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "ADD",
      "path": "47"
    },
    "4084": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "4086": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "MLOAD",
      "path": "47"
    },
    "4087": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "4088": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "DUP2",
      "path": "47"
    },
    "4089": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "ADD",
      "path": "47"
    },
    "4090": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "4092": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "4093": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "DUP1",
      "path": "47"
    },
    "4094": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "4095": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "4096": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "4097": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "DUP2",
      "path": "47"
    },
    "4098": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "DUP2",
      "path": "47"
    },
    "4099": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "4100": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "4102": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "ADD",
      "path": "47"
    },
    "4103": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "DUP3",
      "path": "47"
    },
    "4104": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "DUP1",
      "path": "47"
    },
    "4105": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "4106": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1012"
    },
    "4109": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "4110": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2BB4"
    },
    "4113": {
      "fn": "CLHouse.PropInviteUser",
      "jump": "i",
      "offset": [
        822,
        846
      ],
      "op": "JUMP",
      "path": "47"
    },
    "4114": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "4115": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "DUP1",
      "path": "47"
    },
    "4116": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "ISZERO",
      "path": "47"
    },
    "4117": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x105F"
    },
    "4120": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "4121": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "DUP1",
      "path": "47"
    },
    "4122": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1F"
    },
    "4124": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "LT",
      "path": "47"
    },
    "4125": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1034"
    },
    "4128": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "4129": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x100"
    },
    "4132": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "DUP1",
      "path": "47"
    },
    "4133": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "DUP4",
      "path": "47"
    },
    "4134": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "4135": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "DIV",
      "path": "47"
    },
    "4136": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "MUL",
      "path": "47"
    },
    "4137": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "DUP4",
      "path": "47"
    },
    "4138": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "4139": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "4140": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "4142": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "ADD",
      "path": "47"
    },
    "4143": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "4144": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x105F"
    },
    "4147": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "JUMP",
      "path": "47"
    },
    "4148": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "4149": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "DUP3",
      "path": "47"
    },
    "4150": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "ADD",
      "path": "47"
    },
    "4151": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "4152": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "4153": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "4155": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "4156": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "4158": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "4160": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "KECCAK256",
      "path": "47"
    },
    "4161": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "4162": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "4163": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "DUP2",
      "path": "47"
    },
    "4164": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "4165": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "DUP2",
      "path": "47"
    },
    "4166": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "4167": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "4168": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1"
    },
    "4170": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "ADD",
      "path": "47"
    },
    "4171": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "4172": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "4174": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "ADD",
      "path": "47"
    },
    "4175": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "DUP1",
      "path": "47"
    },
    "4176": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "DUP4",
      "path": "47"
    },
    "4177": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "GT",
      "path": "47"
    },
    "4178": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1042"
    },
    "4181": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "4182": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "DUP3",
      "path": "47"
    },
    "4183": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "4184": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "SUB",
      "path": "47"
    },
    "4185": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1F"
    },
    "4187": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "AND",
      "path": "47"
    },
    "4188": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "DUP3",
      "path": "47"
    },
    "4189": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "ADD",
      "path": "47"
    },
    "4190": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "4191": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "4192": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "POP",
      "path": "47"
    },
    "4193": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "POP",
      "path": "47"
    },
    "4194": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "POP",
      "path": "47"
    },
    "4195": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "POP",
      "path": "47"
    },
    "4196": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "POP",
      "path": "47"
    },
    "4197": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        822,
        846
      ],
      "op": "DUP2",
      "path": "47"
    },
    "4198": {
      "fn": "CLHouse.PropInviteUser",
      "jump": "o",
      "offset": [
        822,
        846
      ],
      "op": "JUMP",
      "path": "47"
    },
    "4199": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10074,
        10928
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4200": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10238,
        10252
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4202": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10269,
        10290
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4203": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10303
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xC1"
    },
    "4205": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10303
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4207": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10303
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4208": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10303
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "4209": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10303
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4210": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10303
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x100"
    },
    "4213": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10303
      ],
      "op": "EXP",
      "path": "50"
    },
    "4214": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10303
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4215": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10303
      ],
      "op": "DIV",
      "path": "50"
    },
    "4216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4218": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4220": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4222": {
      "op": "SHL"
    },
    "4223": {
      "op": "SUB"
    },
    "4224": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10303
      ],
      "op": "AND",
      "path": "50"
    },
    "4225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4227": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4229": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4231": {
      "op": "SHL"
    },
    "4232": {
      "op": "SUB"
    },
    "4233": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10317
      ],
      "op": "AND",
      "path": "50"
    },
    "4234": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10317
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xA327AB69"
    },
    "4239": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4241": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4242": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4243": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xFFFFFFFF"
    },
    "4248": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "AND",
      "path": "50"
    },
    "4249": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xE0"
    },
    "4251": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "SHL",
      "path": "50"
    },
    "4252": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4253": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4254": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "4256": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "ADD",
      "path": "50"
    },
    "4257": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "4259": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4261": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4262": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4263": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "DUP4",
      "path": "50"
    },
    "4264": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "SUB",
      "path": "50"
    },
    "4265": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4266": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "DUP7",
      "path": "50"
    },
    "4267": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "GAS",
      "path": "50"
    },
    "4268": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "STATICCALL",
      "path": "50"
    },
    "4269": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "4270": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4271": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "4272": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x10BD"
    },
    "4275": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "4276": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "4277": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4279": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4280": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "4281": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "4282": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4284": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "REVERT",
      "path": "50"
    },
    "4285": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4286": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "POP",
      "path": "50"
    },
    "4287": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "POP",
      "path": "50"
    },
    "4288": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "POP",
      "path": "50"
    },
    "4289": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "POP",
      "path": "50"
    },
    "4290": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4292": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4293": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "4294": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "4296": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "NOT",
      "path": "50"
    },
    "4297": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "4299": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "DUP3",
      "path": "50"
    },
    "4300": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "ADD",
      "path": "50"
    },
    "4301": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "AND",
      "path": "50"
    },
    "4302": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "DUP3",
      "path": "50"
    },
    "4303": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "ADD",
      "path": "50"
    },
    "4304": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4305": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4307": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4308": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "POP",
      "path": "50"
    },
    "4309": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4310": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "ADD",
      "path": "50"
    },
    "4311": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4312": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x10E1"
    },
    "4315": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "4316": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4317": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2AAB"
    },
    "4320": {
      "fn": "CLHouse.PropGovRules",
      "jump": "i",
      "offset": [
        10293,
        10319
      ],
      "op": "JUMP",
      "path": "50"
    },
    "4321": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10319
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4322": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10269,
        10319
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4323": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10269,
        10319
      ],
      "op": "POP",
      "path": "50"
    },
    "4324": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10388,
        10406
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4326": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10412,
        10425
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4329": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4331": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4333": {
      "op": "SHL"
    },
    "4334": {
      "op": "SUB"
    },
    "4335": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10412,
        10438
      ],
      "op": "AND",
      "path": "50"
    },
    "4336": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10550,
        10570
      ],
      "op": "DUP7",
      "path": "50"
    },
    "4337": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10588,
        10600
      ],
      "op": "DUP7",
      "path": "50"
    },
    "4338": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10618,
        10628
      ],
      "op": "DUP7",
      "path": "50"
    },
    "4339": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10452,
        10642
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4341": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10452,
        10642
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4342": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10452,
        10642
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x24"
    },
    "4344": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10452,
        10642
      ],
      "op": "ADD",
      "path": "50"
    },
    "4345": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10452,
        10642
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1104"
    },
    "4348": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10452,
        10642
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "4349": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10452,
        10642
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "4350": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10452,
        10642
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "4351": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10452,
        10642
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4352": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10452,
        10642
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2C90"
    },
    "4355": {
      "fn": "CLHouse.PropGovRules",
      "jump": "i",
      "offset": [
        10452,
        10642
      ],
      "op": "JUMP",
      "path": "50"
    },
    "4356": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10452,
        10642
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4357": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10452,
        10642
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4359": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10452,
        10642
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4360": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10452,
        10642
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4361": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4363": {
      "op": "NOT"
    },
    "4364": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10452,
        10642
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4365": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10452,
        10642
      ],
      "op": "DUP5",
      "path": "50"
    },
    "4366": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10452,
        10642
      ],
      "op": "SUB",
      "path": "50"
    },
    "4367": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10452,
        10642
      ],
      "op": "ADD",
      "path": "50"
    },
    "4368": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10452,
        10642
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4369": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10452,
        10642
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4370": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10452,
        10642
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "4371": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10452,
        10642
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4372": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10452,
        10642
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4373": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10452,
        10642
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "4375": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10452,
        10642
      ],
      "op": "DUP3",
      "path": "50"
    },
    "4376": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10452,
        10642
      ],
      "op": "ADD",
      "path": "50"
    },
    "4377": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10452,
        10642
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4378": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10452,
        10642
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4383": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4385": {
      "op": "SHL"
    },
    "4386": {
      "op": "SUB"
    },
    "4387": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10452,
        10642
      ],
      "op": "AND",
      "path": "50"
    },
    "4388": {
      "op": "PUSH4",
      "value": "0x2EF2C7B"
    },
    "4393": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4395": {
      "op": "SHL"
    },
    "4396": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10452,
        10642
      ],
      "op": "OR",
      "path": "50"
    },
    "4397": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10452,
        10642
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4398": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10452,
        10642
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4399": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10412,
        10652
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4400": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10412,
        10652
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1139"
    },
    "4403": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10412,
        10652
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "4404": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10452,
        10642
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4405": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10412,
        10652
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2B00"
    },
    "4408": {
      "fn": "CLHouse.PropGovRules",
      "jump": "i",
      "offset": [
        10412,
        10652
      ],
      "op": "JUMP",
      "path": "50"
    },
    "4409": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10412,
        10652
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4410": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10412,
        10652
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4412": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10412,
        10652
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4414": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10412,
        10652
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4415": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10412,
        10652
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4416": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10412,
        10652
      ],
      "op": "DUP4",
      "path": "50"
    },
    "4417": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10412,
        10652
      ],
      "op": "SUB",
      "path": "50"
    },
    "4418": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10412,
        10652
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4419": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10412,
        10652
      ],
      "op": "DUP6",
      "path": "50"
    },
    "4420": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10412,
        10652
      ],
      "op": "GAS",
      "path": "50"
    },
    "4421": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10412,
        10652
      ],
      "op": "DELEGATECALL",
      "path": "50"
    },
    "4422": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10412,
        10652
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "4423": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10412,
        10652
      ],
      "op": "POP",
      "path": "50"
    },
    "4424": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10412,
        10652
      ],
      "op": "POP",
      "path": "50"
    },
    "4425": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10412,
        10652
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "4426": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10412,
        10652
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4427": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10412,
        10652
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4429": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10412,
        10652
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4430": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10412,
        10652
      ],
      "op": "EQ",
      "path": "50"
    },
    "4431": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10412,
        10652
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1174"
    },
    "4434": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10412,
        10652
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "4435": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10412,
        10652
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4437": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10412,
        10652
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4438": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10412,
        10652
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "4439": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10412,
        10652
      ],
      "op": "POP",
      "path": "50"
    },
    "4440": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10412,
        10652
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "4442": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10412,
        10652
      ],
      "op": "NOT",
      "path": "50"
    },
    "4443": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10412,
        10652
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x3F"
    },
    "4445": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10412,
        10652
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "4446": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10412,
        10652
      ],
      "op": "ADD",
      "path": "50"
    },
    "4447": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10412,
        10652
      ],
      "op": "AND",
      "path": "50"
    },
    "4448": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10412,
        10652
      ],
      "op": "DUP3",
      "path": "50"
    },
    "4449": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10412,
        10652
      ],
      "op": "ADD",
      "path": "50"
    },
    "4450": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10412,
        10652
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4452": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10412,
        10652
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4453": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10412,
        10652
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "4454": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10412,
        10652
      ],
      "op": "DUP3",
      "path": "50"
    },
    "4455": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10412,
        10652
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4456": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10412,
        10652
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "4457": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10412,
        10652
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4459": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10412,
        10652
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "4461": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10412,
        10652
      ],
      "op": "DUP5",
      "path": "50"
    },
    "4462": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10412,
        10652
      ],
      "op": "ADD",
      "path": "50"
    },
    "4463": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10412,
        10652
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "4464": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10412,
        10652
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1179"
    },
    "4467": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10412,
        10652
      ],
      "op": "JUMP",
      "path": "50"
    },
    "4468": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10412,
        10652
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4469": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10412,
        10652
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x60"
    },
    "4471": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10412,
        10652
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "4472": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10412,
        10652
      ],
      "op": "POP",
      "path": "50"
    },
    "4473": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10412,
        10652
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4474": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10412,
        10652
      ],
      "op": "POP",
      "path": "50"
    },
    "4475": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10387,
        10652
      ],
      "op": "POP",
      "path": "50"
    },
    "4476": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10387,
        10652
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4477": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10387,
        10652
      ],
      "op": "POP",
      "path": "50"
    },
    "4478": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10703,
        10707
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4480": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10697,
        10708
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4481": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10733,
        10749
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "4482": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10785,
        10789
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4483": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10782,
        10783
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4485": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10777,
        10780
      ],
      "op": "DUP4",
      "path": "50"
    },
    "4486": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10762,
        10790
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "4487": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10814,
        10827
      ],
      "op": "DUP3",
      "path": "50"
    },
    "4488": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10803,
        10879
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x118F"
    },
    "4491": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10803,
        10879
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "4492": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10860,
        10864
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4493": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10855,
        10858
      ],
      "op": "DUP3",
      "path": "50"
    },
    "4494": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10848,
        10865
      ],
      "op": "REVERT",
      "path": "50"
    },
    "4495": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10803,
        10879
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4496": {
      "op": "POP"
    },
    "4497": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10902,
        10912
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4498": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10902,
        10912
      ],
      "op": "SWAP7",
      "path": "50"
    },
    "4499": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10074,
        10928
      ],
      "op": "SWAP6",
      "path": "50"
    },
    "4500": {
      "op": "POP"
    },
    "4501": {
      "op": "POP"
    },
    "4502": {
      "op": "POP"
    },
    "4503": {
      "op": "POP"
    },
    "4504": {
      "op": "POP"
    },
    "4505": {
      "op": "POP"
    },
    "4506": {
      "fn": "CLHouse.PropGovRules",
      "jump": "o",
      "offset": [
        10074,
        10928
      ],
      "op": "JUMP",
      "path": "50"
    },
    "4507": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2667,
        3428
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4508": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2760,
        2771
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4510": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2785,
        2806
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x60"
    },
    "4512": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2831,
        2852
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4514": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2865
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xC1"
    },
    "4516": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2865
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4518": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2865
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4519": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2865
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "4520": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2865
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4521": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2865
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x100"
    },
    "4524": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2865
      ],
      "op": "EXP",
      "path": "50"
    },
    "4525": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2865
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4526": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2865
      ],
      "op": "DIV",
      "path": "50"
    },
    "4527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4531": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4533": {
      "op": "SHL"
    },
    "4534": {
      "op": "SUB"
    },
    "4535": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2865
      ],
      "op": "AND",
      "path": "50"
    },
    "4536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4538": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4540": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4542": {
      "op": "SHL"
    },
    "4543": {
      "op": "SUB"
    },
    "4544": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2879
      ],
      "op": "AND",
      "path": "50"
    },
    "4545": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2879
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xA327AB69"
    },
    "4550": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4552": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4553": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4554": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xFFFFFFFF"
    },
    "4559": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "AND",
      "path": "50"
    },
    "4560": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xE0"
    },
    "4562": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "SHL",
      "path": "50"
    },
    "4563": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4564": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4565": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "4567": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "ADD",
      "path": "50"
    },
    "4568": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "4570": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4572": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4573": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4574": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "DUP4",
      "path": "50"
    },
    "4575": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "SUB",
      "path": "50"
    },
    "4576": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4577": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "DUP7",
      "path": "50"
    },
    "4578": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "GAS",
      "path": "50"
    },
    "4579": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "STATICCALL",
      "path": "50"
    },
    "4580": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "4581": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4582": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "4583": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x11F4"
    },
    "4586": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "4587": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "4588": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4590": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4591": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "4592": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "4593": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4595": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "REVERT",
      "path": "50"
    },
    "4596": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4597": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "POP",
      "path": "50"
    },
    "4598": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "POP",
      "path": "50"
    },
    "4599": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "POP",
      "path": "50"
    },
    "4600": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "POP",
      "path": "50"
    },
    "4601": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4603": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4604": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "4605": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "4607": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "NOT",
      "path": "50"
    },
    "4608": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "4610": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "DUP3",
      "path": "50"
    },
    "4611": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "ADD",
      "path": "50"
    },
    "4612": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "AND",
      "path": "50"
    },
    "4613": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "DUP3",
      "path": "50"
    },
    "4614": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "ADD",
      "path": "50"
    },
    "4615": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4616": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4618": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4619": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "POP",
      "path": "50"
    },
    "4620": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4621": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "ADD",
      "path": "50"
    },
    "4622": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4623": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1218"
    },
    "4626": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "4627": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4628": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2AAB"
    },
    "4631": {
      "fn": "CLHouse.ExecProp",
      "jump": "i",
      "offset": [
        2855,
        2881
      ],
      "op": "JUMP",
      "path": "50"
    },
    "4632": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2855,
        2881
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4633": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2831,
        2881
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4634": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2831,
        2881
      ],
      "op": "POP",
      "path": "50"
    },
    "4635": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2950,
        2968
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4637": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2974,
        2987
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4642": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4644": {
      "op": "SHL"
    },
    "4645": {
      "op": "SUB"
    },
    "4646": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2974,
        3000
      ],
      "op": "AND",
      "path": "50"
    },
    "4647": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3092,
        3099
      ],
      "op": "DUP6",
      "path": "50"
    },
    "4648": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3014,
        3113
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4650": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3014,
        3113
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4651": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3014,
        3113
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x24"
    },
    "4653": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3014,
        3113
      ],
      "op": "ADD",
      "path": "50"
    },
    "4654": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3014,
        3113
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1239"
    },
    "4657": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3014,
        3113
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "4658": {
      "op": "DUP2"
    },
    "4659": {
      "op": "MSTORE"
    },
    "4660": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4662": {
      "op": "ADD"
    },
    "4663": {
      "op": "SWAP1"
    },
    "4664": {
      "op": "JUMP"
    },
    "4665": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3014,
        3113
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4666": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3014,
        3113
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4668": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3014,
        3113
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4669": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3014,
        3113
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4670": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4672": {
      "op": "NOT"
    },
    "4673": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3014,
        3113
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4674": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3014,
        3113
      ],
      "op": "DUP5",
      "path": "50"
    },
    "4675": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3014,
        3113
      ],
      "op": "SUB",
      "path": "50"
    },
    "4676": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3014,
        3113
      ],
      "op": "ADD",
      "path": "50"
    },
    "4677": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3014,
        3113
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4678": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3014,
        3113
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4679": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3014,
        3113
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "4680": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3014,
        3113
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4681": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3014,
        3113
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4682": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3014,
        3113
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "4684": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3014,
        3113
      ],
      "op": "DUP3",
      "path": "50"
    },
    "4685": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3014,
        3113
      ],
      "op": "ADD",
      "path": "50"
    },
    "4686": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3014,
        3113
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4687": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3014,
        3113
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4688": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4690": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4692": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4694": {
      "op": "SHL"
    },
    "4695": {
      "op": "SUB"
    },
    "4696": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3014,
        3113
      ],
      "op": "AND",
      "path": "50"
    },
    "4697": {
      "op": "PUSH4",
      "value": "0x5F3D99B3"
    },
    "4702": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4704": {
      "op": "SHL"
    },
    "4705": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3014,
        3113
      ],
      "op": "OR",
      "path": "50"
    },
    "4706": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3014,
        3113
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4707": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3014,
        3113
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4708": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2974,
        3123
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4709": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2974,
        3123
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x126E"
    },
    "4712": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2974,
        3123
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "4713": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3014,
        3113
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4714": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2974,
        3123
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2B00"
    },
    "4717": {
      "fn": "CLHouse.ExecProp",
      "jump": "i",
      "offset": [
        2974,
        3123
      ],
      "op": "JUMP",
      "path": "50"
    },
    "4718": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2974,
        3123
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4719": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2974,
        3123
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4721": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2974,
        3123
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4723": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2974,
        3123
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4724": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2974,
        3123
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4725": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2974,
        3123
      ],
      "op": "DUP4",
      "path": "50"
    },
    "4726": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2974,
        3123
      ],
      "op": "SUB",
      "path": "50"
    },
    "4727": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2974,
        3123
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4728": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2974,
        3123
      ],
      "op": "DUP6",
      "path": "50"
    },
    "4729": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2974,
        3123
      ],
      "op": "GAS",
      "path": "50"
    },
    "4730": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2974,
        3123
      ],
      "op": "DELEGATECALL",
      "path": "50"
    },
    "4731": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2974,
        3123
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "4732": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2974,
        3123
      ],
      "op": "POP",
      "path": "50"
    },
    "4733": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2974,
        3123
      ],
      "op": "POP",
      "path": "50"
    },
    "4734": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2974,
        3123
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "4735": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2974,
        3123
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4736": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2974,
        3123
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4738": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2974,
        3123
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4739": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2974,
        3123
      ],
      "op": "EQ",
      "path": "50"
    },
    "4740": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2974,
        3123
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x12A9"
    },
    "4743": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2974,
        3123
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "4744": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2974,
        3123
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4746": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2974,
        3123
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4747": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2974,
        3123
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "4748": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2974,
        3123
      ],
      "op": "POP",
      "path": "50"
    },
    "4749": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2974,
        3123
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "4751": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2974,
        3123
      ],
      "op": "NOT",
      "path": "50"
    },
    "4752": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2974,
        3123
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x3F"
    },
    "4754": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2974,
        3123
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "4755": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2974,
        3123
      ],
      "op": "ADD",
      "path": "50"
    },
    "4756": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2974,
        3123
      ],
      "op": "AND",
      "path": "50"
    },
    "4757": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2974,
        3123
      ],
      "op": "DUP3",
      "path": "50"
    },
    "4758": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2974,
        3123
      ],
      "op": "ADD",
      "path": "50"
    },
    "4759": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2974,
        3123
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4761": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2974,
        3123
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4762": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2974,
        3123
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "4763": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2974,
        3123
      ],
      "op": "DUP3",
      "path": "50"
    },
    "4764": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2974,
        3123
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4765": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2974,
        3123
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "4766": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2974,
        3123
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4768": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2974,
        3123
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "4770": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2974,
        3123
      ],
      "op": "DUP5",
      "path": "50"
    },
    "4771": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2974,
        3123
      ],
      "op": "ADD",
      "path": "50"
    },
    "4772": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2974,
        3123
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "4773": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2974,
        3123
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x12AE"
    },
    "4776": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2974,
        3123
      ],
      "op": "JUMP",
      "path": "50"
    },
    "4777": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2974,
        3123
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4778": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2974,
        3123
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x60"
    },
    "4780": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2974,
        3123
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "4781": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2974,
        3123
      ],
      "op": "POP",
      "path": "50"
    },
    "4782": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2974,
        3123
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4783": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2974,
        3123
      ],
      "op": "POP",
      "path": "50"
    },
    "4784": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2949,
        3123
      ],
      "op": "POP",
      "path": "50"
    },
    "4785": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2949,
        3123
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4786": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2949,
        3123
      ],
      "op": "POP",
      "path": "50"
    },
    "4787": {
      "branch": 15,
      "fn": "CLHouse.ExecProp",
      "offset": [
        3139,
        3152
      ],
      "op": "DUP1",
      "path": "50",
      "statement": 4
    },
    "4788": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3134,
        3366
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x12C4"
    },
    "4791": {
      "branch": 15,
      "fn": "CLHouse.ExecProp",
      "offset": [
        3134,
        3366
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "4792": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3213,
        3217
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4794": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3207,
        3218
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4795": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3247,
        3263
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "4796": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3303,
        3307
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4797": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3300,
        3301
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4799": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3295,
        3298
      ],
      "op": "DUP4",
      "path": "50"
    },
    "4800": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3280,
        3308
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "4801": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3337,
        3341
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4802": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3332,
        3335
      ],
      "op": "DUP3",
      "path": "50"
    },
    "4803": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3325,
        3342
      ],
      "op": "REVERT",
      "path": "50"
    },
    "4804": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3134,
        3366
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4805": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3385,
        3389
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 5,
      "value": "0x1"
    },
    "4807": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3376,
        3421
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4809": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3376,
        3421
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4810": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3376,
        3421
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4811": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3376,
        3421
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4813": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3376,
        3421
      ],
      "op": "ADD",
      "path": "50"
    },
    "4814": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3376,
        3421
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4816": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3376,
        3421
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4817": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3376,
        3421
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4818": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3376,
        3421
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x19"
    },
    "4820": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3376,
        3421
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4821": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3376,
        3421
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4822": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3376,
        3421
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "4824": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3376,
        3421
      ],
      "op": "ADD",
      "path": "50"
    },
    "4825": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3376,
        3421
      ],
      "op": "PUSH32",
      "path": "50",
      "value": "0x537563636573732065786563757465642070726F706F73616C00000000000000"
    },
    "4858": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3376,
        3421
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4859": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3376,
        3421
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4860": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3376,
        3421
      ],
      "op": "POP",
      "path": "50"
    },
    "4861": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3376,
        3421
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "4862": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3376,
        3421
      ],
      "op": "POP",
      "path": "50"
    },
    "4863": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3376,
        3421
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "4864": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3376,
        3421
      ],
      "op": "POP",
      "path": "50"
    },
    "4865": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3376,
        3421
      ],
      "op": "POP",
      "path": "50"
    },
    "4866": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3376,
        3421
      ],
      "op": "POP",
      "path": "50"
    },
    "4867": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2667,
        3428
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "4868": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2667,
        3428
      ],
      "op": "POP",
      "path": "50"
    },
    "4869": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2667,
        3428
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "4870": {
      "fn": "CLHouse.ExecProp",
      "jump": "o",
      "offset": [
        2667,
        3428
      ],
      "op": "JUMP",
      "path": "50"
    },
    "4871": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        17962,
        18733
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4872": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18166,
        18173
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4874": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18198,
        18226
      ],
      "op": "PUSH2",
      "path": "50",
      "statement": 6,
      "value": "0x1312"
    },
    "4877": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18214,
        18224
      ],
      "op": "CALLER",
      "path": "50"
    },
    "4878": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18198,
        18212
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1E8D"
    },
    "4881": {
      "fn": "CLHouse.CreateLock",
      "jump": "i",
      "offset": [
        18198,
        18226
      ],
      "op": "JUMP",
      "path": "50"
    },
    "4882": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18198,
        18226
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4883": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18236,
        18255
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4885": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18369,
        18379
      ],
      "op": "CALLER",
      "path": "50"
    },
    "4886": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18393,
        18412
      ],
      "op": "DUP7",
      "path": "50"
    },
    "4887": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18434,
        18435
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4889": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18450,
        18459
      ],
      "op": "DUP8",
      "path": "50"
    },
    "4890": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18473,
        18489
      ],
      "op": "DUP8",
      "path": "50"
    },
    "4891": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18503,
        18512
      ],
      "op": "DUP8",
      "path": "50"
    },
    "4892": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18258,
        18522
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4894": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18258,
        18522
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4895": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18258,
        18522
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x24"
    },
    "4897": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18258,
        18522
      ],
      "op": "ADD",
      "path": "50"
    },
    "4898": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18258,
        18522
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1330"
    },
    "4901": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18258,
        18522
      ],
      "op": "SWAP7",
      "path": "50"
    },
    "4902": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18258,
        18522
      ],
      "op": "SWAP6",
      "path": "50"
    },
    "4903": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18258,
        18522
      ],
      "op": "SWAP5",
      "path": "50"
    },
    "4904": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18258,
        18522
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "4905": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18258,
        18522
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "4906": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18258,
        18522
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "4907": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18258,
        18522
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4908": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18258,
        18522
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2CB9"
    },
    "4911": {
      "fn": "CLHouse.CreateLock",
      "jump": "i",
      "offset": [
        18258,
        18522
      ],
      "op": "JUMP",
      "path": "50"
    },
    "4912": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18258,
        18522
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4913": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18258,
        18522
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4915": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18258,
        18522
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4916": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18258,
        18522
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4917": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4919": {
      "op": "NOT"
    },
    "4920": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18258,
        18522
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4921": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18258,
        18522
      ],
      "op": "DUP5",
      "path": "50"
    },
    "4922": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18258,
        18522
      ],
      "op": "SUB",
      "path": "50"
    },
    "4923": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18258,
        18522
      ],
      "op": "ADD",
      "path": "50"
    },
    "4924": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18258,
        18522
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4925": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18258,
        18522
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4926": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18258,
        18522
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "4927": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18258,
        18522
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4928": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18258,
        18522
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4929": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18258,
        18522
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "4931": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18258,
        18522
      ],
      "op": "DUP3",
      "path": "50"
    },
    "4932": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18258,
        18522
      ],
      "op": "ADD",
      "path": "50"
    },
    "4933": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18258,
        18522
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4934": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18258,
        18522
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4935": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4939": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4941": {
      "op": "SHL"
    },
    "4942": {
      "op": "SUB"
    },
    "4943": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18258,
        18522
      ],
      "op": "AND",
      "path": "50"
    },
    "4944": {
      "op": "PUSH4",
      "value": "0x6EADDE43"
    },
    "4949": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4951": {
      "op": "SHL"
    },
    "4952": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18258,
        18522
      ],
      "op": "OR",
      "path": "50"
    },
    "4953": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18258,
        18522
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4954": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18258,
        18522
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4955": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18701
      ],
      "op": "MLOAD",
      "path": "50",
      "statement": 7
    },
    "4956": {
      "op": "PUSH4",
      "value": "0x243D453B"
    },
    "4961": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4963": {
      "op": "SHL"
    },
    "4964": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18701
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4965": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18701
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4966": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18258,
        18522
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4967": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18258,
        18522
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "4968": {
      "op": "POP"
    },
    "4969": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18548,
        18590
      ],
      "op": "PUSH20",
      "path": "50",
      "value": "0x627118A4FB747016911E5CDA82E2E77C531E8206"
    },
    "4990": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18548,
        18590
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4991": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18548,
        18590
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4992": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18548,
        18590
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4993": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18548,
        18590
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4994": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18548,
        18590
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4995": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18687
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x487A8A76"
    },
    "5000": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18687
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5001": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18701
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1399"
    },
    "5004": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18701
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5005": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18258,
        18522
      ],
      "op": "DUP7",
      "path": "50"
    },
    "5006": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18258,
        18522
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5007": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18697,
        18699
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xB"
    },
    "5009": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18697,
        18699
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5010": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18701
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "5012": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18701
      ],
      "op": "ADD",
      "path": "50"
    },
    "5013": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18701
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2D02"
    },
    "5016": {
      "fn": "CLHouse.CreateLock",
      "jump": "i",
      "offset": [
        18652,
        18701
      ],
      "op": "JUMP",
      "path": "50"
    },
    "5017": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18701
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5018": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18701
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "5020": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18701
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5022": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18701
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5023": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18701
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5024": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18701
      ],
      "op": "DUP4",
      "path": "50"
    },
    "5025": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18701
      ],
      "op": "SUB",
      "path": "50"
    },
    "5026": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18701
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5027": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18701
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5029": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18701
      ],
      "op": "DUP8",
      "path": "50"
    },
    "5030": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18701
      ],
      "op": "GAS",
      "path": "50"
    },
    "5031": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18701
      ],
      "op": "CALL",
      "path": "50"
    },
    "5032": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18701
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "5033": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18701
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5034": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18701
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "5035": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18701
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x13B8"
    },
    "5038": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18701
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "5039": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18701
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "5040": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18701
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5042": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18701
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5043": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18701
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "5044": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18701
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "5045": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18701
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5047": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18701
      ],
      "op": "REVERT",
      "path": "50"
    },
    "5048": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18701
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5049": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18701
      ],
      "op": "POP",
      "path": "50"
    },
    "5050": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18701
      ],
      "op": "POP",
      "path": "50"
    },
    "5051": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18701
      ],
      "op": "POP",
      "path": "50"
    },
    "5052": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18701
      ],
      "op": "POP",
      "path": "50"
    },
    "5053": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18701
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5055": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18701
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5056": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18701
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "5057": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18701
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "5059": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18701
      ],
      "op": "NOT",
      "path": "50"
    },
    "5060": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18701
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "5062": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18701
      ],
      "op": "DUP3",
      "path": "50"
    },
    "5063": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18701
      ],
      "op": "ADD",
      "path": "50"
    },
    "5064": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18701
      ],
      "op": "AND",
      "path": "50"
    },
    "5065": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18701
      ],
      "op": "DUP3",
      "path": "50"
    },
    "5066": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18701
      ],
      "op": "ADD",
      "path": "50"
    },
    "5067": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18701
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5068": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18701
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5070": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18701
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5071": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18701
      ],
      "op": "POP",
      "path": "50"
    },
    "5072": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18701
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5073": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18701
      ],
      "op": "ADD",
      "path": "50"
    },
    "5074": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18701
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5075": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18701
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x13DC"
    },
    "5078": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18701
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5079": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18701
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5080": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18701
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2AAB"
    },
    "5083": {
      "fn": "CLHouse.CreateLock",
      "jump": "i",
      "offset": [
        18652,
        18701
      ],
      "op": "JUMP",
      "path": "50"
    },
    "5084": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18652,
        18701
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5085": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18642,
        18649
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x25"
    },
    "5087": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18642,
        18701
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5088": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18642,
        18701
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "5089": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5091": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5093": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5095": {
      "op": "SHL"
    },
    "5096": {
      "op": "SUB"
    },
    "5097": {
      "op": "NOT"
    },
    "5098": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18642,
        18701
      ],
      "op": "AND",
      "path": "50"
    },
    "5099": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5103": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5105": {
      "op": "SHL"
    },
    "5106": {
      "op": "SUB"
    },
    "5107": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18642,
        18701
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "5108": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18642,
        18701
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5109": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18642,
        18701
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "5110": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18642,
        18701
      ],
      "op": "AND",
      "path": "50"
    },
    "5111": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18642,
        18701
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5112": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18642,
        18701
      ],
      "op": "DUP3",
      "path": "50"
    },
    "5113": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18642,
        18701
      ],
      "op": "OR",
      "path": "50"
    },
    "5114": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18642,
        18701
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5115": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18642,
        18701
      ],
      "op": "SSTORE",
      "path": "50"
    },
    "5116": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        18642,
        18701
      ],
      "op": "SWAP9",
      "path": "50"
    },
    "5117": {
      "fn": "CLHouse.CreateLock",
      "offset": [
        17962,
        18733
      ],
      "op": "SWAP8",
      "path": "50"
    },
    "5118": {
      "op": "POP"
    },
    "5119": {
      "op": "POP"
    },
    "5120": {
      "op": "POP"
    },
    "5121": {
      "op": "POP"
    },
    "5122": {
      "op": "POP"
    },
    "5123": {
      "op": "POP"
    },
    "5124": {
      "op": "POP"
    },
    "5125": {
      "op": "POP"
    },
    "5126": {
      "fn": "CLHouse.CreateLock",
      "jump": "o",
      "offset": [
        17962,
        18733
      ],
      "op": "JUMP",
      "path": "50"
    },
    "5127": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7528,
        8412
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5128": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7703,
        7717
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5130": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7734,
        7755
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5131": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7768
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xC1"
    },
    "5133": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7768
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5135": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7768
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5136": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7768
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "5137": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7768
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5138": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7768
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x100"
    },
    "5141": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7768
      ],
      "op": "EXP",
      "path": "50"
    },
    "5142": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7768
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5143": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7768
      ],
      "op": "DIV",
      "path": "50"
    },
    "5144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5148": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5150": {
      "op": "SHL"
    },
    "5151": {
      "op": "SUB"
    },
    "5152": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7768
      ],
      "op": "AND",
      "path": "50"
    },
    "5153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5157": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5159": {
      "op": "SHL"
    },
    "5160": {
      "op": "SUB"
    },
    "5161": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7782
      ],
      "op": "AND",
      "path": "50"
    },
    "5162": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7782
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xA327AB69"
    },
    "5167": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5169": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5170": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5171": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xFFFFFFFF"
    },
    "5176": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "AND",
      "path": "50"
    },
    "5177": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xE0"
    },
    "5179": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "SHL",
      "path": "50"
    },
    "5180": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5181": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5182": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "5184": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "ADD",
      "path": "50"
    },
    "5185": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "5187": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5189": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5190": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5191": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "DUP4",
      "path": "50"
    },
    "5192": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "SUB",
      "path": "50"
    },
    "5193": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5194": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "DUP7",
      "path": "50"
    },
    "5195": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "GAS",
      "path": "50"
    },
    "5196": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "STATICCALL",
      "path": "50"
    },
    "5197": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "5198": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5199": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "5200": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x145D"
    },
    "5203": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "5204": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "5205": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5207": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5208": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "5209": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "5210": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5212": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "REVERT",
      "path": "50"
    },
    "5213": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5214": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "POP",
      "path": "50"
    },
    "5215": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "POP",
      "path": "50"
    },
    "5216": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "POP",
      "path": "50"
    },
    "5217": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "POP",
      "path": "50"
    },
    "5218": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5220": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5221": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "5222": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "5224": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "NOT",
      "path": "50"
    },
    "5225": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "5227": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "DUP3",
      "path": "50"
    },
    "5228": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "ADD",
      "path": "50"
    },
    "5229": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "AND",
      "path": "50"
    },
    "5230": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "DUP3",
      "path": "50"
    },
    "5231": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "ADD",
      "path": "50"
    },
    "5232": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5233": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5235": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5236": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "POP",
      "path": "50"
    },
    "5237": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5238": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "ADD",
      "path": "50"
    },
    "5239": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5240": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1481"
    },
    "5243": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5244": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5245": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2AAB"
    },
    "5248": {
      "fn": "CLHouse.PropTxWei",
      "jump": "i",
      "offset": [
        7758,
        7784
      ],
      "op": "JUMP",
      "path": "50"
    },
    "5249": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7758,
        7784
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5250": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7734,
        7784
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5251": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7734,
        7784
      ],
      "op": "POP",
      "path": "50"
    },
    "5252": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7853,
        7871
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5254": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7877,
        7890
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5259": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5261": {
      "op": "SHL"
    },
    "5262": {
      "op": "SUB"
    },
    "5263": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7877,
        7903
      ],
      "op": "AND",
      "path": "50"
    },
    "5264": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        8020,
        8023
      ],
      "op": "DUP8",
      "path": "50"
    },
    "5265": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        8041,
        8054
      ],
      "op": "DUP8",
      "path": "50"
    },
    "5266": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        8072,
        8084
      ],
      "op": "DUP8",
      "path": "50"
    },
    "5267": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        8102,
        8112
      ],
      "op": "DUP8",
      "path": "50"
    },
    "5268": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7917,
        8126
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5270": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7917,
        8126
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5271": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7917,
        8126
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x24"
    },
    "5273": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7917,
        8126
      ],
      "op": "ADD",
      "path": "50"
    },
    "5274": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7917,
        8126
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x14A6"
    },
    "5277": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7917,
        8126
      ],
      "op": "SWAP5",
      "path": "50"
    },
    "5278": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7917,
        8126
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "5279": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7917,
        8126
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "5280": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7917,
        8126
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5281": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7917,
        8126
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5282": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7917,
        8126
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2AC8"
    },
    "5285": {
      "fn": "CLHouse.PropTxWei",
      "jump": "i",
      "offset": [
        7917,
        8126
      ],
      "op": "JUMP",
      "path": "50"
    },
    "5286": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7917,
        8126
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5287": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7917,
        8126
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5289": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7917,
        8126
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5290": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7917,
        8126
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5291": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5293": {
      "op": "NOT"
    },
    "5294": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7917,
        8126
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5295": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7917,
        8126
      ],
      "op": "DUP5",
      "path": "50"
    },
    "5296": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7917,
        8126
      ],
      "op": "SUB",
      "path": "50"
    },
    "5297": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7917,
        8126
      ],
      "op": "ADD",
      "path": "50"
    },
    "5298": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7917,
        8126
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5299": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7917,
        8126
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5300": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7917,
        8126
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5301": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7917,
        8126
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5302": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7917,
        8126
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5303": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7917,
        8126
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "5305": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7917,
        8126
      ],
      "op": "DUP3",
      "path": "50"
    },
    "5306": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7917,
        8126
      ],
      "op": "ADD",
      "path": "50"
    },
    "5307": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7917,
        8126
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5308": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7917,
        8126
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5313": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5315": {
      "op": "SHL"
    },
    "5316": {
      "op": "SUB"
    },
    "5317": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7917,
        8126
      ],
      "op": "AND",
      "path": "50"
    },
    "5318": {
      "op": "PUSH4",
      "value": "0xF8C70A9"
    },
    "5323": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "5325": {
      "op": "SHL"
    },
    "5326": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7917,
        8126
      ],
      "op": "OR",
      "path": "50"
    },
    "5327": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7917,
        8126
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5328": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7917,
        8126
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5329": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7877,
        8136
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5330": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7877,
        8136
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xE18"
    },
    "5333": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7877,
        8136
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5334": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7917,
        8126
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5335": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7877,
        8136
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2B00"
    },
    "5338": {
      "fn": "CLHouse.PropTxWei",
      "jump": "i",
      "offset": [
        7877,
        8136
      ],
      "op": "JUMP",
      "path": "50"
    },
    "5339": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12329,
        13060
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5340": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12495
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xC1"
    },
    "5342": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12495
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "5343": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5345": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5346": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5347": {
      "op": "PUSH4",
      "value": "0x529382D5"
    },
    "5352": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5354": {
      "op": "SHL"
    },
    "5355": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5356": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5357": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5358": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5359": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12457,
        12482
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5361": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12457,
        12482
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "5362": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5364": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5366": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5368": {
      "op": "SHL"
    },
    "5369": {
      "op": "SUB"
    },
    "5370": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12495
      ],
      "op": "AND",
      "path": "50"
    },
    "5371": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12495
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5372": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12513
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x529382D5"
    },
    "5377": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12513
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5378": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "5380": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5381": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "DUP4",
      "path": "50"
    },
    "5382": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "ADD",
      "path": "50"
    },
    "5383": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "5384": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "5386": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "5387": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5388": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5389": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "DUP3",
      "path": "50"
    },
    "5390": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5391": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "SUB",
      "path": "50"
    },
    "5392": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "ADD",
      "path": "50"
    },
    "5393": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5394": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12495
      ],
      "op": "DUP7",
      "path": "50"
    },
    "5395": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "GAS",
      "path": "50"
    },
    "5396": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "STATICCALL",
      "path": "50"
    },
    "5397": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "5398": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5399": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "5400": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1525"
    },
    "5403": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "5404": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "5405": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5407": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5408": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "5409": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "5410": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5412": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "REVERT",
      "path": "50"
    },
    "5413": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5414": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "POP",
      "path": "50"
    },
    "5415": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "POP",
      "path": "50"
    },
    "5416": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "POP",
      "path": "50"
    },
    "5417": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "POP",
      "path": "50"
    },
    "5418": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5420": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5421": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "5422": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "5424": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "NOT",
      "path": "50"
    },
    "5425": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "5427": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "DUP3",
      "path": "50"
    },
    "5428": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "ADD",
      "path": "50"
    },
    "5429": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "AND",
      "path": "50"
    },
    "5430": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "DUP3",
      "path": "50"
    },
    "5431": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "ADD",
      "path": "50"
    },
    "5432": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5433": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5435": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5436": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "POP",
      "path": "50"
    },
    "5437": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5438": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "ADD",
      "path": "50"
    },
    "5439": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5440": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1549"
    },
    "5443": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5444": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5445": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2AAB"
    },
    "5448": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "jump": "i",
      "offset": [
        12485,
        12515
      ],
      "op": "JUMP",
      "path": "50"
    },
    "5449": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12485,
        12515
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5450": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12457,
        12515
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5451": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12457,
        12515
      ],
      "op": "POP",
      "path": "50"
    },
    "5452": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12584,
        12602
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5454": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12608,
        12625
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5455": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5459": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5461": {
      "op": "SHL"
    },
    "5462": {
      "op": "SUB"
    },
    "5463": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12608,
        12638
      ],
      "op": "AND",
      "path": "50"
    },
    "5464": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12748,
        12759
      ],
      "op": "DUP5",
      "path": "50"
    },
    "5465": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12777,
        12787
      ],
      "op": "DUP5",
      "path": "50"
    },
    "5466": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12652,
        12801
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5468": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12652,
        12801
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5469": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12652,
        12801
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x24"
    },
    "5471": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12652,
        12801
      ],
      "op": "ADD",
      "path": "50"
    },
    "5472": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12652,
        12801
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x156A"
    },
    "5475": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12652,
        12801
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "5476": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12652,
        12801
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5477": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12652,
        12801
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5478": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12652,
        12801
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x24AE"
    },
    "5481": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "jump": "i",
      "offset": [
        12652,
        12801
      ],
      "op": "JUMP",
      "path": "50"
    },
    "5482": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12652,
        12801
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5483": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12652,
        12801
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5485": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12652,
        12801
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5486": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12652,
        12801
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5487": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5489": {
      "op": "NOT"
    },
    "5490": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12652,
        12801
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5491": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12652,
        12801
      ],
      "op": "DUP5",
      "path": "50"
    },
    "5492": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12652,
        12801
      ],
      "op": "SUB",
      "path": "50"
    },
    "5493": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12652,
        12801
      ],
      "op": "ADD",
      "path": "50"
    },
    "5494": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12652,
        12801
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5495": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12652,
        12801
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5496": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12652,
        12801
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5497": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12652,
        12801
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5498": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12652,
        12801
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5499": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12652,
        12801
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "5501": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12652,
        12801
      ],
      "op": "DUP3",
      "path": "50"
    },
    "5502": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12652,
        12801
      ],
      "op": "ADD",
      "path": "50"
    },
    "5503": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12652,
        12801
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5504": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12652,
        12801
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5509": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5511": {
      "op": "SHL"
    },
    "5512": {
      "op": "SUB"
    },
    "5513": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12652,
        12801
      ],
      "op": "AND",
      "path": "50"
    },
    "5514": {
      "op": "PUSH4",
      "value": "0x1039E45B"
    },
    "5519": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "5521": {
      "op": "SHL"
    },
    "5522": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12652,
        12801
      ],
      "op": "OR",
      "path": "50"
    },
    "5523": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12652,
        12801
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5524": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12652,
        12801
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5525": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12608,
        12811
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5526": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12608,
        12811
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x159F"
    },
    "5529": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12608,
        12811
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5530": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12652,
        12801
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5531": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12608,
        12811
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2B00"
    },
    "5534": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "jump": "i",
      "offset": [
        12608,
        12811
      ],
      "op": "JUMP",
      "path": "50"
    },
    "5535": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12608,
        12811
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5536": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12608,
        12811
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5538": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12608,
        12811
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5540": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12608,
        12811
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5541": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12608,
        12811
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5542": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12608,
        12811
      ],
      "op": "DUP4",
      "path": "50"
    },
    "5543": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12608,
        12811
      ],
      "op": "SUB",
      "path": "50"
    },
    "5544": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12608,
        12811
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5545": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12608,
        12811
      ],
      "op": "DUP6",
      "path": "50"
    },
    "5546": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12608,
        12811
      ],
      "op": "GAS",
      "path": "50"
    },
    "5547": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12608,
        12811
      ],
      "op": "DELEGATECALL",
      "path": "50"
    },
    "5548": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12608,
        12811
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5549": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12608,
        12811
      ],
      "op": "POP",
      "path": "50"
    },
    "5550": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12608,
        12811
      ],
      "op": "POP",
      "path": "50"
    },
    "5551": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12608,
        12811
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "5552": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12608,
        12811
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5553": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12608,
        12811
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5555": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12608,
        12811
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5556": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12608,
        12811
      ],
      "op": "EQ",
      "path": "50"
    },
    "5557": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12608,
        12811
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x15DA"
    },
    "5560": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12608,
        12811
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "5561": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12608,
        12811
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5563": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12608,
        12811
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5564": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12608,
        12811
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5565": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12608,
        12811
      ],
      "op": "POP",
      "path": "50"
    },
    "5566": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12608,
        12811
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "5568": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12608,
        12811
      ],
      "op": "NOT",
      "path": "50"
    },
    "5569": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12608,
        12811
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x3F"
    },
    "5571": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12608,
        12811
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "5572": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12608,
        12811
      ],
      "op": "ADD",
      "path": "50"
    },
    "5573": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12608,
        12811
      ],
      "op": "AND",
      "path": "50"
    },
    "5574": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12608,
        12811
      ],
      "op": "DUP3",
      "path": "50"
    },
    "5575": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12608,
        12811
      ],
      "op": "ADD",
      "path": "50"
    },
    "5576": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12608,
        12811
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5578": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12608,
        12811
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5579": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12608,
        12811
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "5580": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12608,
        12811
      ],
      "op": "DUP3",
      "path": "50"
    },
    "5581": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12608,
        12811
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5582": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12608,
        12811
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "5583": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12608,
        12811
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5585": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12608,
        12811
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "5587": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12608,
        12811
      ],
      "op": "DUP5",
      "path": "50"
    },
    "5588": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12608,
        12811
      ],
      "op": "ADD",
      "path": "50"
    },
    "5589": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12608,
        12811
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "5590": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12608,
        12811
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x15DF"
    },
    "5593": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12608,
        12811
      ],
      "op": "JUMP",
      "path": "50"
    },
    "5594": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12608,
        12811
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5595": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12608,
        12811
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x60"
    },
    "5597": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12608,
        12811
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5598": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12608,
        12811
      ],
      "op": "POP",
      "path": "50"
    },
    "5599": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12608,
        12811
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5600": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12608,
        12811
      ],
      "op": "POP",
      "path": "50"
    },
    "5601": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12583,
        12811
      ],
      "op": "POP",
      "path": "50"
    },
    "5602": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12583,
        12811
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5603": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12583,
        12811
      ],
      "op": "POP",
      "path": "50"
    },
    "5604": {
      "branch": 16,
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12827,
        12840
      ],
      "op": "DUP1",
      "path": "50",
      "statement": 8
    },
    "5605": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12822,
        13054
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x15F5"
    },
    "5608": {
      "branch": 16,
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12822,
        13054
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "5609": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12901,
        12905
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5611": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12895,
        12906
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5612": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12935,
        12951
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "5613": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12991,
        12995
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5614": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12988,
        12989
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5616": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12983,
        12986
      ],
      "op": "DUP4",
      "path": "50"
    },
    "5617": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12968,
        12996
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "5618": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        13025,
        13029
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5619": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        13020,
        13023
      ],
      "op": "DUP3",
      "path": "50"
    },
    "5620": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        13013,
        13030
      ],
      "op": "REVERT",
      "path": "50"
    },
    "5621": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12822,
        13054
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5622": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12447,
        13060
      ],
      "op": "POP",
      "path": "50"
    },
    "5623": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12447,
        13060
      ],
      "op": "POP",
      "path": "50"
    },
    "5624": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12329,
        13060
      ],
      "op": "POP",
      "path": "50"
    },
    "5625": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12329,
        13060
      ],
      "op": "POP",
      "path": "50"
    },
    "5626": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "jump": "o",
      "offset": [
        12329,
        13060
      ],
      "op": "JUMP",
      "path": "50"
    },
    "5627": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        17807,
        17956
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5628": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        17883,
        17911
      ],
      "op": "PUSH2",
      "path": "50",
      "statement": 9,
      "value": "0x1604"
    },
    "5631": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        17899,
        17909
      ],
      "op": "CALLER",
      "path": "50"
    },
    "5632": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        17883,
        17897
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1E8D"
    },
    "5635": {
      "fn": "CLHouse.SetWhitelistCollection",
      "jump": "i",
      "offset": [
        17883,
        17911
      ],
      "op": "JUMP",
      "path": "50"
    },
    "5636": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        17883,
        17911
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5637": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        17921,
        17933
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 10,
      "value": "0x24"
    },
    "5639": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        17921,
        17949
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5640": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        17921,
        17949
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "5641": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5643": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5645": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5647": {
      "op": "SHL"
    },
    "5648": {
      "op": "SUB"
    },
    "5649": {
      "op": "NOT"
    },
    "5650": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        17921,
        17949
      ],
      "op": "AND",
      "path": "50"
    },
    "5651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5653": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5655": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5657": {
      "op": "SHL"
    },
    "5658": {
      "op": "SUB"
    },
    "5659": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        17921,
        17949
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "5660": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        17921,
        17949
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5661": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        17921,
        17949
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "5662": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        17921,
        17949
      ],
      "op": "AND",
      "path": "50"
    },
    "5663": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        17921,
        17949
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5664": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        17921,
        17949
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5665": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        17921,
        17949
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5666": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        17921,
        17949
      ],
      "op": "OR",
      "path": "50"
    },
    "5667": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        17921,
        17949
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5668": {
      "fn": "CLHouse.SetWhitelistCollection",
      "offset": [
        17921,
        17949
      ],
      "op": "SSTORE",
      "path": "50"
    },
    "5669": {
      "fn": "CLHouse.SetWhitelistCollection",
      "jump": "o",
      "offset": [
        17807,
        17956
      ],
      "op": "JUMP",
      "path": "50"
    },
    "5670": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16076,
        16931
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5671": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16293
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xC1"
    },
    "5673": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16293
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "5674": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5676": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5677": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5678": {
      "op": "PUSH4",
      "value": "0xA327AB69"
    },
    "5683": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5685": {
      "op": "SHL"
    },
    "5686": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5687": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5688": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5689": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5690": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16259,
        16280
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5692": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16259,
        16280
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "5693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5697": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5699": {
      "op": "SHL"
    },
    "5700": {
      "op": "SUB"
    },
    "5701": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16293
      ],
      "op": "AND",
      "path": "50"
    },
    "5702": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16293
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5703": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16307
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xA327AB69"
    },
    "5708": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16307
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5709": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "5711": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5712": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "DUP4",
      "path": "50"
    },
    "5713": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "ADD",
      "path": "50"
    },
    "5714": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "5715": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "5717": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "5718": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5719": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5720": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "DUP3",
      "path": "50"
    },
    "5721": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5722": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "SUB",
      "path": "50"
    },
    "5723": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "ADD",
      "path": "50"
    },
    "5724": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5725": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16293
      ],
      "op": "DUP7",
      "path": "50"
    },
    "5726": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "GAS",
      "path": "50"
    },
    "5727": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "STATICCALL",
      "path": "50"
    },
    "5728": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "5729": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5730": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "5731": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1670"
    },
    "5734": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "5735": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "5736": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5738": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5739": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "5740": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "5741": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5743": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "REVERT",
      "path": "50"
    },
    "5744": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5745": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "POP",
      "path": "50"
    },
    "5746": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "POP",
      "path": "50"
    },
    "5747": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "POP",
      "path": "50"
    },
    "5748": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "POP",
      "path": "50"
    },
    "5749": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5751": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5752": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "5753": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "5755": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "NOT",
      "path": "50"
    },
    "5756": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "5758": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "DUP3",
      "path": "50"
    },
    "5759": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "ADD",
      "path": "50"
    },
    "5760": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "AND",
      "path": "50"
    },
    "5761": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "DUP3",
      "path": "50"
    },
    "5762": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "ADD",
      "path": "50"
    },
    "5763": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5764": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5766": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5767": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "POP",
      "path": "50"
    },
    "5768": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5769": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "ADD",
      "path": "50"
    },
    "5770": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5771": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1694"
    },
    "5774": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5775": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5776": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2AAB"
    },
    "5779": {
      "fn": "CLHouse.bulkVote",
      "jump": "i",
      "offset": [
        16283,
        16309
      ],
      "op": "JUMP",
      "path": "50"
    },
    "5780": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16283,
        16309
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5781": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16259,
        16309
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5782": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16259,
        16309
      ],
      "op": "POP",
      "path": "50"
    },
    "5783": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16378,
        16396
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5785": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16402,
        16415
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5790": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5792": {
      "op": "SHL"
    },
    "5793": {
      "op": "SUB"
    },
    "5794": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16402,
        16428
      ],
      "op": "AND",
      "path": "50"
    },
    "5795": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16541,
        16548
      ],
      "op": "DUP7",
      "path": "50"
    },
    "5796": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16566,
        16574
      ],
      "op": "DUP7",
      "path": "50"
    },
    "5797": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16592,
        16606
      ],
      "op": "DUP7",
      "path": "50"
    },
    "5798": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16624,
        16634
      ],
      "op": "DUP7",
      "path": "50"
    },
    "5799": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16442,
        16648
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5801": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16442,
        16648
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5802": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16442,
        16648
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x24"
    },
    "5804": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16442,
        16648
      ],
      "op": "ADD",
      "path": "50"
    },
    "5805": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16442,
        16648
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x16B9"
    },
    "5808": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16442,
        16648
      ],
      "op": "SWAP5",
      "path": "50"
    },
    "5809": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16442,
        16648
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "5810": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16442,
        16648
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "5811": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16442,
        16648
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5812": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16442,
        16648
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5813": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16442,
        16648
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2D28"
    },
    "5816": {
      "fn": "CLHouse.bulkVote",
      "jump": "i",
      "offset": [
        16442,
        16648
      ],
      "op": "JUMP",
      "path": "50"
    },
    "5817": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16442,
        16648
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5818": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16442,
        16648
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5820": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16442,
        16648
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5821": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16442,
        16648
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5822": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5824": {
      "op": "NOT"
    },
    "5825": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16442,
        16648
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5826": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16442,
        16648
      ],
      "op": "DUP5",
      "path": "50"
    },
    "5827": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16442,
        16648
      ],
      "op": "SUB",
      "path": "50"
    },
    "5828": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16442,
        16648
      ],
      "op": "ADD",
      "path": "50"
    },
    "5829": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16442,
        16648
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5830": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16442,
        16648
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5831": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16442,
        16648
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5832": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16442,
        16648
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5833": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16442,
        16648
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5834": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16442,
        16648
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "5836": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16442,
        16648
      ],
      "op": "DUP3",
      "path": "50"
    },
    "5837": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16442,
        16648
      ],
      "op": "ADD",
      "path": "50"
    },
    "5838": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16442,
        16648
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5839": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16442,
        16648
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5840": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5842": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5844": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5846": {
      "op": "SHL"
    },
    "5847": {
      "op": "SUB"
    },
    "5848": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16442,
        16648
      ],
      "op": "AND",
      "path": "50"
    },
    "5849": {
      "op": "PUSH4",
      "value": "0xA1C89C9D"
    },
    "5854": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5856": {
      "op": "SHL"
    },
    "5857": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16442,
        16648
      ],
      "op": "OR",
      "path": "50"
    },
    "5858": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16442,
        16648
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5859": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16442,
        16648
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5860": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16402,
        16658
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5861": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16402,
        16658
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x7AD"
    },
    "5864": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16402,
        16658
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5865": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16442,
        16648
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5866": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16402,
        16658
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2B00"
    },
    "5869": {
      "fn": "CLHouse.bulkVote",
      "jump": "i",
      "offset": [
        16402,
        16658
      ],
      "op": "JUMP",
      "path": "50"
    },
    "5870": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17343,
        17452
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5871": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17393,
        17413
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x60"
    },
    "5873": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17433,
        17445
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 11,
      "value": "0x83"
    },
    "5875": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5876": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "5877": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5878": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "5880": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "MUL",
      "path": "50"
    },
    "5881": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "5883": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "ADD",
      "path": "50"
    },
    "5884": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5886": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5887": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5888": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5889": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "ADD",
      "path": "50"
    },
    "5890": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5892": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5893": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5894": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "5895": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5896": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5897": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5898": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5899": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5900": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "5902": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "ADD",
      "path": "50"
    },
    "5903": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5905": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5906": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5907": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DUP3",
      "path": "50"
    },
    "5908": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DUP3",
      "path": "50"
    },
    "5909": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "LT",
      "path": "50"
    },
    "5910": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "5911": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xD3B"
    },
    "5914": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "5915": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5917": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DUP5",
      "path": "50"
    },
    "5918": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5919": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5920": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "5922": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5923": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5924": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5925": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "KECCAK256",
      "path": "50"
    },
    "5926": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5928": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5929": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5930": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x120"
    },
    "5933": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5934": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "ADD",
      "path": "50"
    },
    "5935": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5936": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5937": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5938": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x7"
    },
    "5940": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DUP6",
      "path": "50"
    },
    "5941": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "MUL",
      "path": "50"
    },
    "5942": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5943": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5944": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "ADD",
      "path": "50"
    },
    "5945": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5946": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "5947": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5949": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5951": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5953": {
      "op": "SHL"
    },
    "5954": {
      "op": "SUB"
    },
    "5955": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5956": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "AND",
      "path": "50"
    },
    "5957": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DUP4",
      "path": "50"
    },
    "5958": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5959": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5960": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "5961": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5962": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5963": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5964": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DUP4",
      "path": "50"
    },
    "5965": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "ADD",
      "path": "50"
    },
    "5966": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5969": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5971": {
      "op": "SHL"
    },
    "5972": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5973": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DIV",
      "path": "50"
    },
    "5974": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xFF"
    },
    "5976": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "AND",
      "path": "50"
    },
    "5977": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x8"
    },
    "5979": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5980": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "GT",
      "path": "50"
    },
    "5981": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "5982": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1769"
    },
    "5985": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "5986": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1769"
    },
    "5989": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x266A"
    },
    "5992": {
      "fn": "CLHouse.GetProposalList",
      "jump": "i",
      "offset": [
        17426,
        17445
      ],
      "op": "JUMP",
      "path": "50"
    },
    "5993": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5994": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x8"
    },
    "5996": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5997": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "GT",
      "path": "50"
    },
    "5998": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "5999": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x177A"
    },
    "6002": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "6003": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x177A"
    },
    "6006": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x266A"
    },
    "6009": {
      "fn": "CLHouse.GetProposalList",
      "jump": "i",
      "offset": [
        17426,
        17445
      ],
      "op": "JUMP",
      "path": "50"
    },
    "6010": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "6011": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DUP2",
      "path": "50"
    },
    "6012": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6013": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "6015": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "ADD",
      "path": "50"
    },
    "6016": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1"
    },
    "6018": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DUP3",
      "path": "50"
    },
    "6019": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "ADD",
      "path": "50"
    },
    "6020": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6021": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "6022": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x178E"
    },
    "6025": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6026": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2BB4"
    },
    "6029": {
      "fn": "CLHouse.GetProposalList",
      "jump": "i",
      "offset": [
        17426,
        17445
      ],
      "op": "JUMP",
      "path": "50"
    },
    "6030": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "6031": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6032": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "6034": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "ADD",
      "path": "50"
    },
    "6035": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "6037": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6038": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6039": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DIV",
      "path": "50"
    },
    "6040": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "MUL",
      "path": "50"
    },
    "6041": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "6043": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "ADD",
      "path": "50"
    },
    "6044": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "6046": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "6047": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6048": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DUP2",
      "path": "50"
    },
    "6049": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "ADD",
      "path": "50"
    },
    "6050": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "6052": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6053": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6054": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "6055": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6056": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6057": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DUP2",
      "path": "50"
    },
    "6058": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DUP2",
      "path": "50"
    },
    "6059": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6060": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "6062": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "ADD",
      "path": "50"
    },
    "6063": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DUP3",
      "path": "50"
    },
    "6064": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6065": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "6066": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x17BA"
    },
    "6069": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6070": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2BB4"
    },
    "6073": {
      "fn": "CLHouse.GetProposalList",
      "jump": "i",
      "offset": [
        17426,
        17445
      ],
      "op": "JUMP",
      "path": "50"
    },
    "6074": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "6075": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6076": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "6077": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1807"
    },
    "6080": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "6081": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6082": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "6084": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "LT",
      "path": "50"
    },
    "6085": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x17DC"
    },
    "6088": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "6089": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x100"
    },
    "6092": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6093": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DUP4",
      "path": "50"
    },
    "6094": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "6095": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DIV",
      "path": "50"
    },
    "6096": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "MUL",
      "path": "50"
    },
    "6097": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DUP4",
      "path": "50"
    },
    "6098": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6099": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6100": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "6102": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "ADD",
      "path": "50"
    },
    "6103": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6104": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1807"
    },
    "6107": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "JUMP",
      "path": "50"
    },
    "6108": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "6109": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DUP3",
      "path": "50"
    },
    "6110": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "ADD",
      "path": "50"
    },
    "6111": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6112": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6113": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "6115": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6116": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "6118": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "6120": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "KECCAK256",
      "path": "50"
    },
    "6121": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6122": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "6123": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DUP2",
      "path": "50"
    },
    "6124": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "6125": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DUP2",
      "path": "50"
    },
    "6126": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6127": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6128": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1"
    },
    "6130": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "ADD",
      "path": "50"
    },
    "6131": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6132": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "6134": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "ADD",
      "path": "50"
    },
    "6135": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6136": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DUP4",
      "path": "50"
    },
    "6137": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "GT",
      "path": "50"
    },
    "6138": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x17EA"
    },
    "6141": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "6142": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DUP3",
      "path": "50"
    },
    "6143": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6144": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SUB",
      "path": "50"
    },
    "6145": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "6147": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "AND",
      "path": "50"
    },
    "6148": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DUP3",
      "path": "50"
    },
    "6149": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "ADD",
      "path": "50"
    },
    "6150": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6151": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "6152": {
      "op": "POP"
    },
    "6153": {
      "op": "POP"
    },
    "6154": {
      "op": "POP"
    },
    "6155": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6156": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DUP4",
      "path": "50"
    },
    "6157": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6158": {
      "op": "POP"
    },
    "6159": {
      "op": "POP"
    },
    "6160": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x2"
    },
    "6162": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DUP3",
      "path": "50"
    },
    "6163": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "ADD",
      "path": "50"
    },
    "6164": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "6165": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "6167": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6168": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DUP4",
      "path": "50"
    },
    "6169": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "ADD",
      "path": "50"
    },
    "6170": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6171": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6172": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6173": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6174": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x3"
    },
    "6176": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DUP4",
      "path": "50"
    },
    "6177": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "ADD",
      "path": "50"
    },
    "6178": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "6179": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "6181": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DUP4",
      "path": "50"
    },
    "6182": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "ADD",
      "path": "50"
    },
    "6183": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6184": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "6186": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DUP4",
      "path": "50"
    },
    "6187": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "ADD",
      "path": "50"
    },
    "6188": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "6189": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x60"
    },
    "6191": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DUP4",
      "path": "50"
    },
    "6192": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "ADD",
      "path": "50"
    },
    "6193": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6194": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x5"
    },
    "6196": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DUP4",
      "path": "50"
    },
    "6197": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "ADD",
      "path": "50"
    },
    "6198": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "6199": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xFF"
    },
    "6201": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6202": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DUP3",
      "path": "50"
    },
    "6203": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "AND",
      "path": "50"
    },
    "6204": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "6205": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "6206": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x80"
    },
    "6208": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DUP6",
      "path": "50"
    },
    "6209": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "ADD",
      "path": "50"
    },
    "6210": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6211": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x100"
    },
    "6214": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6215": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6216": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DIV",
      "path": "50"
    },
    "6217": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "AND",
      "path": "50"
    },
    "6218": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "6219": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "6220": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xA0"
    },
    "6222": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DUP4",
      "path": "50"
    },
    "6223": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "ADD",
      "path": "50"
    },
    "6224": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6225": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x6"
    },
    "6227": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6228": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "6229": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "ADD",
      "path": "50"
    },
    "6230": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "6231": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xC0"
    },
    "6233": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6234": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6235": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "ADD",
      "path": "50"
    },
    "6236": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6237": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6238": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "DUP3",
      "path": "50"
    },
    "6239": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6240": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1"
    },
    "6242": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "6243": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6244": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "6245": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "ADD",
      "path": "50"
    },
    "6246": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6247": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "ADD",
      "path": "50"
    },
    "6248": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1712"
    },
    "6251": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17426,
        17445
      ],
      "op": "JUMP",
      "path": "50"
    },
    "6252": {
      "offset": [
        1068,
        1112
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "6253": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1068,
        1112
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x85"
    },
    "6255": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1068,
        1112
      ],
      "op": "DUP2",
      "path": "47"
    },
    "6256": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1068,
        1112
      ],
      "op": "DUP2",
      "path": "47"
    },
    "6257": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1068,
        1112
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "6258": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1068,
        1112
      ],
      "op": "DUP2",
      "path": "47"
    },
    "6259": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1068,
        1112
      ],
      "op": "LT",
      "path": "47"
    },
    "6260": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1068,
        1112
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x187C"
    },
    "6263": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1068,
        1112
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "6264": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1068,
        1112
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "6266": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1068,
        1112
      ],
      "op": "DUP1",
      "path": "47"
    },
    "6267": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1068,
        1112
      ],
      "op": "REVERT",
      "path": "47"
    },
    "6268": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1068,
        1112
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "6269": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1068,
        1112
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "6271": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1068,
        1112
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "6272": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1068,
        1112
      ],
      "op": "DUP3",
      "path": "47"
    },
    "6273": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1068,
        1112
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "6274": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1068,
        1112
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "6276": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1068,
        1112
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6277": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1068,
        1112
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "6278": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1068,
        1112
      ],
      "op": "KECCAK256",
      "path": "47"
    },
    "6279": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1068,
        1112
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x4"
    },
    "6281": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1068,
        1112
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6282": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1068,
        1112
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "6283": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1068,
        1112
      ],
      "op": "MUL",
      "path": "47"
    },
    "6284": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1068,
        1112
      ],
      "op": "ADD",
      "path": "47"
    },
    "6285": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1068,
        1112
      ],
      "op": "DUP1",
      "path": "47"
    },
    "6286": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1068,
        1112
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "6287": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1068,
        1112
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1"
    },
    "6289": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1068,
        1112
      ],
      "op": "DUP3",
      "path": "47"
    },
    "6290": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1068,
        1112
      ],
      "op": "ADD",
      "path": "47"
    },
    "6291": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1068,
        1112
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "6292": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1068,
        1112
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x2"
    },
    "6294": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1068,
        1112
      ],
      "op": "DUP4",
      "path": "47"
    },
    "6295": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1068,
        1112
      ],
      "op": "ADD",
      "path": "47"
    },
    "6296": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1068,
        1112
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "6297": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1068,
        1112
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x3"
    },
    "6299": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1068,
        1112
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6300": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1068,
        1112
      ],
      "op": "SWAP4",
      "path": "47"
    },
    "6301": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1068,
        1112
      ],
      "op": "ADD",
      "path": "47"
    },
    "6302": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1068,
        1112
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "6303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6307": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6309": {
      "op": "SHL"
    },
    "6310": {
      "op": "SUB"
    },
    "6311": {
      "offset": [
        1068,
        1112
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "6312": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1068,
        1112
      ],
      "op": "DUP4",
      "path": "47"
    },
    "6313": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1068,
        1112
      ],
      "op": "AND",
      "path": "47"
    },
    "6314": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1068,
        1112
      ],
      "op": "SWAP5",
      "path": "47"
    },
    "6315": {
      "op": "POP"
    },
    "6316": {
      "offset": [
        1068,
        1112
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6317": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1068,
        1112
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "6318": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1068,
        1112
      ],
      "op": "DUP3",
      "path": "47"
    },
    "6319": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1068,
        1112
      ],
      "op": "AND",
      "path": "47"
    },
    "6320": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1068,
        1112
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "6321": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1068,
        1112
      ],
      "op": "AND",
      "path": "47"
    },
    "6322": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1068,
        1112
      ],
      "op": "DUP5",
      "path": "47"
    },
    "6323": {
      "fn": "CLHouse.GetProposalList",
      "jump": "o",
      "offset": [
        1068,
        1112
      ],
      "op": "JUMP",
      "path": "47"
    },
    "6324": {
      "fn": "CLHouse.Init",
      "offset": [
        1188,
        2312
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "6325": {
      "offset": [
        4396,
        4409
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xC5"
    },
    "6327": {
      "fn": "CLHouse.Init",
      "offset": [
        4396,
        4409
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "6328": {
      "offset": [
        294,
        295
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x1"
    },
    "6330": {
      "fn": "CLHouse.Init",
      "offset": [
        294,
        295
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "6331": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6333": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "6335": {
      "op": "SHL"
    },
    "6336": {
      "offset": [
        4396,
        4409
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6337": {
      "fn": "CLHouse.Init",
      "offset": [
        4396,
        4409
      ],
      "op": "DIV",
      "path": "18"
    },
    "6338": {
      "fn": "CLHouse.Init",
      "offset": [
        4396,
        4409
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "6340": {
      "branch": 20,
      "fn": "CLHouse.Init",
      "offset": [
        4396,
        4409
      ],
      "op": "AND",
      "path": "18"
    },
    "6341": {
      "offset": [
        4395,
        4409
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "6342": {
      "offset": [
        4395,
        4435
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6343": {
      "fn": "CLHouse.Init",
      "offset": [
        4395,
        4435
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "6344": {
      "fn": "CLHouse.Init",
      "offset": [
        4395,
        4435
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x18DF"
    },
    "6347": {
      "branch": 20,
      "offset": [
        4395,
        4435
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "6348": {
      "op": "POP"
    },
    "6349": {
      "offset": [
        4413,
        4425
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xC5"
    },
    "6351": {
      "fn": "CLHouse.Init",
      "offset": [
        4413,
        4425
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "6352": {
      "offset": [
        4413,
        4435
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "6354": {
      "fn": "CLHouse.Init",
      "offset": [
        4413,
        4435
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6355": {
      "fn": "CLHouse.Init",
      "offset": [
        4413,
        4435
      ],
      "op": "DUP4",
      "path": "18"
    },
    "6356": {
      "fn": "CLHouse.Init",
      "offset": [
        4413,
        4435
      ],
      "op": "AND",
      "path": "18"
    },
    "6357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6359": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6361": {
      "op": "SHL"
    },
    "6362": {
      "offset": [
        4413,
        4425
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6363": {
      "fn": "CLHouse.Init",
      "offset": [
        4413,
        4425
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "6364": {
      "fn": "CLHouse.Init",
      "offset": [
        4413,
        4425
      ],
      "op": "DIV",
      "path": "18"
    },
    "6365": {
      "fn": "CLHouse.Init",
      "offset": [
        4413,
        4425
      ],
      "op": "AND",
      "path": "18"
    },
    "6366": {
      "offset": [
        4413,
        4435
      ],
      "op": "LT",
      "path": "18"
    },
    "6367": {
      "offset": [
        4395,
        4435
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6368": {
      "offset": [
        4387,
        4486
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1947"
    },
    "6371": {
      "offset": [
        4387,
        4486
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "6372": {
      "fn": "CLHouse.Init",
      "offset": [
        4387,
        4486
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "6374": {
      "fn": "CLHouse.Init",
      "offset": [
        4387,
        4486
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6375": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6379": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6381": {
      "op": "SHL"
    },
    "6382": {
      "offset": [
        4387,
        4486
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6383": {
      "fn": "CLHouse.Init",
      "offset": [
        4387,
        4486
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6384": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6386": {
      "offset": [
        4387,
        4486
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "6388": {
      "fn": "CLHouse.Init",
      "offset": [
        4387,
        4486
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6389": {
      "fn": "CLHouse.Init",
      "offset": [
        4387,
        4486
      ],
      "op": "ADD",
      "path": "18"
    },
    "6390": {
      "op": "MSTORE"
    },
    "6391": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "6393": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6395": {
      "op": "DUP3"
    },
    "6396": {
      "op": "ADD"
    },
    "6397": {
      "op": "MSTORE"
    },
    "6398": {
      "op": "PUSH32",
      "value": "0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
    },
    "6431": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6433": {
      "op": "DUP3"
    },
    "6434": {
      "op": "ADD"
    },
    "6435": {
      "op": "MSTORE"
    },
    "6436": {
      "op": "PUSH14",
      "value": "0x191E481A5B9A5D1A585B1A5E9959"
    },
    "6451": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "6453": {
      "op": "SHL"
    },
    "6454": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6456": {
      "op": "DUP3"
    },
    "6457": {
      "op": "ADD"
    },
    "6458": {
      "op": "MSTORE"
    },
    "6459": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6461": {
      "op": "ADD"
    },
    "6462": {
      "offset": [
        4387,
        4486
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6463": {
      "fn": "CLHouse.Init",
      "offset": [
        4387,
        4486
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "6465": {
      "fn": "CLHouse.Init",
      "offset": [
        4387,
        4486
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6466": {
      "fn": "CLHouse.Init",
      "offset": [
        4387,
        4486
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6467": {
      "fn": "CLHouse.Init",
      "offset": [
        4387,
        4486
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6468": {
      "fn": "CLHouse.Init",
      "offset": [
        4387,
        4486
      ],
      "op": "SUB",
      "path": "18"
    },
    "6469": {
      "fn": "CLHouse.Init",
      "offset": [
        4387,
        4486
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6470": {
      "fn": "CLHouse.Init",
      "offset": [
        4387,
        4486
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "18"
    },
    "6471": {
      "fn": "CLHouse.Init",
      "offset": [
        4387,
        4486
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6472": {
      "offset": [
        4496,
        4508
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xC5"
    },
    "6474": {
      "offset": [
        4496,
        4518
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6475": {
      "fn": "CLHouse.Init",
      "offset": [
        4496,
        4518
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "6476": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6478": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "6480": {
      "op": "SHL"
    },
    "6481": {
      "op": "NOT"
    },
    "6482": {
      "offset": [
        4496,
        4518
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "6484": {
      "fn": "CLHouse.Init",
      "offset": [
        4496,
        4518
      ],
      "op": "DUP5",
      "path": "18"
    },
    "6485": {
      "fn": "CLHouse.Init",
      "offset": [
        4496,
        4518
      ],
      "op": "AND",
      "path": "18"
    },
    "6486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6488": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6490": {
      "op": "SHL"
    },
    "6491": {
      "offset": [
        4496,
        4518
      ],
      "op": "MUL",
      "path": "18"
    },
    "6492": {
      "offset": [
        4528,
        4548
      ],
      "op": "AND",
      "path": "18"
    },
    "6493": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "6496": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6498": {
      "op": "SHL"
    },
    "6499": {
      "op": "NOT"
    },
    "6500": {
      "offset": [
        4528,
        4548
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6501": {
      "fn": "CLHouse.Init",
      "offset": [
        4528,
        4548
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6502": {
      "fn": "CLHouse.Init",
      "offset": [
        4528,
        4548
      ],
      "op": "AND",
      "path": "18"
    },
    "6503": {
      "fn": "CLHouse.Init",
      "offset": [
        4528,
        4548
      ],
      "op": "OR",
      "path": "18"
    },
    "6504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6506": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "6508": {
      "op": "SHL"
    },
    "6509": {
      "offset": [
        4528,
        4548
      ],
      "op": "OR",
      "path": "18"
    },
    "6510": {
      "fn": "CLHouse.Init",
      "offset": [
        4528,
        4548
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6511": {
      "fn": "CLHouse.Init",
      "offset": [
        4528,
        4548
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "6512": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        1666
      ],
      "op": "DUP3",
      "path": "50"
    },
    "6513": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        1666
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "6514": {
      "fn": "CLHouse.Init",
      "offset": [
        1693,
        2053
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "6516": {
      "fn": "CLHouse.Init",
      "offset": [
        1693,
        2053
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "6517": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6519": {
      "op": "SWAP2"
    },
    "6520": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6522": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6524": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6526": {
      "op": "SHL"
    },
    "6527": {
      "op": "SUB"
    },
    "6528": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        1679
      ],
      "op": "AND",
      "path": "50"
    },
    "6529": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        1679
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6530": {
      "fn": "CLHouse.Init",
      "offset": [
        1693,
        2053
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x199D"
    },
    "6533": {
      "fn": "CLHouse.Init",
      "offset": [
        1693,
        2053
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6534": {
      "fn": "CLHouse.Init",
      "offset": [
        1836,
        1842
      ],
      "op": "DUP13",
      "path": "50"
    },
    "6535": {
      "fn": "CLHouse.Init",
      "offset": [
        1836,
        1842
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6536": {
      "fn": "CLHouse.Init",
      "offset": [
        1861,
        1871
      ],
      "op": "DUP13",
      "path": "50"
    },
    "6537": {
      "fn": "CLHouse.Init",
      "offset": [
        1861,
        1871
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6538": {
      "fn": "CLHouse.Init",
      "offset": [
        1889,
        1902
      ],
      "op": "DUP13",
      "path": "50"
    },
    "6539": {
      "fn": "CLHouse.Init",
      "offset": [
        1889,
        1902
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6540": {
      "fn": "CLHouse.Init",
      "offset": [
        1920,
        1930
      ],
      "op": "DUP13",
      "path": "50"
    },
    "6541": {
      "fn": "CLHouse.Init",
      "offset": [
        1920,
        1930
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6542": {
      "fn": "CLHouse.Init",
      "offset": [
        1948,
        1957
      ],
      "op": "DUP13",
      "path": "50"
    },
    "6543": {
      "fn": "CLHouse.Init",
      "offset": [
        1948,
        1957
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6544": {
      "fn": "CLHouse.Init",
      "offset": [
        1975,
        1984
      ],
      "op": "DUP13",
      "path": "50"
    },
    "6545": {
      "fn": "CLHouse.Init",
      "offset": [
        1975,
        1984
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6546": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        1629
      ],
      "op": "DUP13",
      "path": "50"
    },
    "6547": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        1629
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6548": {
      "fn": "CLHouse.Init",
      "offset": [
        2024,
        2039
      ],
      "op": "DUP13",
      "path": "50"
    },
    "6549": {
      "fn": "CLHouse.Init",
      "offset": [
        2024,
        2039
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6550": {
      "fn": "CLHouse.Init",
      "offset": [
        1693,
        2053
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x24"
    },
    "6552": {
      "fn": "CLHouse.Init",
      "offset": [
        1693,
        2053
      ],
      "op": "ADD",
      "path": "50"
    },
    "6553": {
      "fn": "CLHouse.Init",
      "offset": [
        1693,
        2053
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2E18"
    },
    "6556": {
      "fn": "CLHouse.Init",
      "jump": "i",
      "offset": [
        1693,
        2053
      ],
      "op": "JUMP",
      "path": "50"
    },
    "6557": {
      "fn": "CLHouse.Init",
      "offset": [
        1693,
        2053
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "6558": {
      "fn": "CLHouse.Init",
      "offset": [
        1693,
        2053
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "6560": {
      "fn": "CLHouse.Init",
      "offset": [
        1693,
        2053
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6561": {
      "fn": "CLHouse.Init",
      "offset": [
        1693,
        2053
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "6562": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6564": {
      "op": "NOT"
    },
    "6565": {
      "fn": "CLHouse.Init",
      "offset": [
        1693,
        2053
      ],
      "op": "DUP2",
      "path": "50"
    },
    "6566": {
      "fn": "CLHouse.Init",
      "offset": [
        1693,
        2053
      ],
      "op": "DUP5",
      "path": "50"
    },
    "6567": {
      "fn": "CLHouse.Init",
      "offset": [
        1693,
        2053
      ],
      "op": "SUB",
      "path": "50"
    },
    "6568": {
      "fn": "CLHouse.Init",
      "offset": [
        1693,
        2053
      ],
      "op": "ADD",
      "path": "50"
    },
    "6569": {
      "fn": "CLHouse.Init",
      "offset": [
        1693,
        2053
      ],
      "op": "DUP2",
      "path": "50"
    },
    "6570": {
      "fn": "CLHouse.Init",
      "offset": [
        1693,
        2053
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6571": {
      "fn": "CLHouse.Init",
      "offset": [
        1693,
        2053
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6572": {
      "fn": "CLHouse.Init",
      "offset": [
        1693,
        2053
      ],
      "op": "DUP2",
      "path": "50"
    },
    "6573": {
      "fn": "CLHouse.Init",
      "offset": [
        1693,
        2053
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6574": {
      "fn": "CLHouse.Init",
      "offset": [
        1693,
        2053
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "6576": {
      "fn": "CLHouse.Init",
      "offset": [
        1693,
        2053
      ],
      "op": "DUP3",
      "path": "50"
    },
    "6577": {
      "fn": "CLHouse.Init",
      "offset": [
        1693,
        2053
      ],
      "op": "ADD",
      "path": "50"
    },
    "6578": {
      "fn": "CLHouse.Init",
      "offset": [
        1693,
        2053
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6579": {
      "fn": "CLHouse.Init",
      "offset": [
        1693,
        2053
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "6580": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6584": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6586": {
      "op": "SHL"
    },
    "6587": {
      "op": "SUB"
    },
    "6588": {
      "fn": "CLHouse.Init",
      "offset": [
        1693,
        2053
      ],
      "op": "AND",
      "path": "50"
    },
    "6589": {
      "op": "PUSH4",
      "value": "0x729777ED"
    },
    "6594": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6596": {
      "op": "SHL"
    },
    "6597": {
      "fn": "CLHouse.Init",
      "offset": [
        1693,
        2053
      ],
      "op": "OR",
      "path": "50"
    },
    "6598": {
      "fn": "CLHouse.Init",
      "offset": [
        1693,
        2053
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6599": {
      "fn": "CLHouse.Init",
      "offset": [
        1693,
        2053
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6600": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        2063
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "6601": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        2063
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x19D2"
    },
    "6604": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        2063
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6605": {
      "fn": "CLHouse.Init",
      "offset": [
        1693,
        2053
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6606": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        2063
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2B00"
    },
    "6609": {
      "fn": "CLHouse.Init",
      "jump": "i",
      "offset": [
        1625,
        2063
      ],
      "op": "JUMP",
      "path": "50"
    },
    "6610": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        2063
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "6611": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        2063
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "6613": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        2063
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "6615": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        2063
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "6616": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        2063
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6617": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        2063
      ],
      "op": "DUP4",
      "path": "50"
    },
    "6618": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        2063
      ],
      "op": "SUB",
      "path": "50"
    },
    "6619": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        2063
      ],
      "op": "DUP2",
      "path": "50"
    },
    "6620": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        2063
      ],
      "op": "DUP6",
      "path": "50"
    },
    "6621": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        2063
      ],
      "op": "GAS",
      "path": "50"
    },
    "6622": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        2063
      ],
      "op": "DELEGATECALL",
      "path": "50"
    },
    "6623": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        2063
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6624": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        2063
      ],
      "op": "POP",
      "path": "50"
    },
    "6625": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        2063
      ],
      "op": "POP",
      "path": "50"
    },
    "6626": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        2063
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "6627": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        2063
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6628": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        2063
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "6630": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        2063
      ],
      "op": "DUP2",
      "path": "50"
    },
    "6631": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        2063
      ],
      "op": "EQ",
      "path": "50"
    },
    "6632": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        2063
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1A0D"
    },
    "6635": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        2063
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "6636": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        2063
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "6638": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        2063
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "6639": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        2063
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6640": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        2063
      ],
      "op": "POP",
      "path": "50"
    },
    "6641": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        2063
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "6643": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        2063
      ],
      "op": "NOT",
      "path": "50"
    },
    "6644": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        2063
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x3F"
    },
    "6646": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        2063
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "6647": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        2063
      ],
      "op": "ADD",
      "path": "50"
    },
    "6648": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        2063
      ],
      "op": "AND",
      "path": "50"
    },
    "6649": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        2063
      ],
      "op": "DUP3",
      "path": "50"
    },
    "6650": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        2063
      ],
      "op": "ADD",
      "path": "50"
    },
    "6651": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        2063
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "6653": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        2063
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6654": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        2063
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "6655": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        2063
      ],
      "op": "DUP3",
      "path": "50"
    },
    "6656": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        2063
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6657": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        2063
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "6658": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        2063
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "6660": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        2063
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "6662": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        2063
      ],
      "op": "DUP5",
      "path": "50"
    },
    "6663": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        2063
      ],
      "op": "ADD",
      "path": "50"
    },
    "6664": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        2063
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "6665": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        2063
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1A12"
    },
    "6668": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        2063
      ],
      "op": "JUMP",
      "path": "50"
    },
    "6669": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        2063
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "6670": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        2063
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x60"
    },
    "6672": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        2063
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6673": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        2063
      ],
      "op": "POP",
      "path": "50"
    },
    "6674": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        2063
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "6675": {
      "fn": "CLHouse.Init",
      "offset": [
        1625,
        2063
      ],
      "op": "POP",
      "path": "50"
    },
    "6676": {
      "fn": "CLHouse.Init",
      "offset": [
        1600,
        2063
      ],
      "op": "POP",
      "path": "50"
    },
    "6677": {
      "fn": "CLHouse.Init",
      "offset": [
        1600,
        2063
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6678": {
      "fn": "CLHouse.Init",
      "offset": [
        1600,
        2063
      ],
      "op": "POP",
      "path": "50"
    },
    "6679": {
      "branch": 17,
      "fn": "CLHouse.Init",
      "offset": [
        2079,
        2092
      ],
      "op": "DUP1",
      "path": "50",
      "statement": 12
    },
    "6680": {
      "fn": "CLHouse.Init",
      "offset": [
        2074,
        2306
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1A28"
    },
    "6683": {
      "branch": 17,
      "fn": "CLHouse.Init",
      "offset": [
        2074,
        2306
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "6684": {
      "fn": "CLHouse.Init",
      "offset": [
        2153,
        2157
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "6686": {
      "fn": "CLHouse.Init",
      "offset": [
        2147,
        2158
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "6687": {
      "fn": "CLHouse.Init",
      "offset": [
        2187,
        2203
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "6688": {
      "fn": "CLHouse.Init",
      "offset": [
        2243,
        2247
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6689": {
      "fn": "CLHouse.Init",
      "offset": [
        2240,
        2241
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "6691": {
      "fn": "CLHouse.Init",
      "offset": [
        2235,
        2238
      ],
      "op": "DUP4",
      "path": "50"
    },
    "6692": {
      "fn": "CLHouse.Init",
      "offset": [
        2220,
        2248
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "6693": {
      "fn": "CLHouse.Init",
      "offset": [
        2277,
        2281
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6694": {
      "fn": "CLHouse.Init",
      "offset": [
        2272,
        2275
      ],
      "op": "DUP3",
      "path": "50"
    },
    "6695": {
      "fn": "CLHouse.Init",
      "offset": [
        2265,
        2282
      ],
      "op": "REVERT",
      "path": "50"
    },
    "6696": {
      "fn": "CLHouse.Init",
      "offset": [
        2074,
        2306
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "6697": {
      "op": "POP"
    },
    "6698": {
      "offset": [
        4569,
        4582
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xC5"
    },
    "6700": {
      "offset": [
        4569,
        4590
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6701": {
      "fn": "CLHouse.Init",
      "offset": [
        4569,
        4590
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "6702": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6704": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "6706": {
      "op": "SHL"
    },
    "6707": {
      "op": "NOT"
    },
    "6708": {
      "offset": [
        4569,
        4590
      ],
      "op": "AND",
      "path": "18"
    },
    "6709": {
      "fn": "CLHouse.Init",
      "offset": [
        4569,
        4590
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6710": {
      "fn": "CLHouse.Init",
      "offset": [
        4569,
        4590
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "6711": {
      "offset": [
        4605,
        4625
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "6713": {
      "fn": "CLHouse.Init",
      "offset": [
        4605,
        4625
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6714": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6716": {
      "op": "DUP3"
    },
    "6717": {
      "op": "AND"
    },
    "6718": {
      "op": "DUP2"
    },
    "6719": {
      "op": "MSTORE"
    },
    "6720": {
      "offset": [
        4605,
        4625
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498"
    },
    "6753": {
      "fn": "CLHouse.Init",
      "offset": [
        4605,
        4625
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6754": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6756": {
      "op": "ADD"
    },
    "6757": {
      "offset": [
        4605,
        4625
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "6759": {
      "fn": "CLHouse.Init",
      "offset": [
        4605,
        4625
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6760": {
      "fn": "CLHouse.Init",
      "offset": [
        4605,
        4625
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6761": {
      "fn": "CLHouse.Init",
      "offset": [
        4605,
        4625
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6762": {
      "fn": "CLHouse.Init",
      "offset": [
        4605,
        4625
      ],
      "op": "SUB",
      "path": "18"
    },
    "6763": {
      "fn": "CLHouse.Init",
      "offset": [
        4605,
        4625
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6764": {
      "fn": "CLHouse.Init",
      "offset": [
        4605,
        4625
      ],
      "op": "LOG1",
      "path": "18"
    },
    "6765": {
      "fn": "CLHouse.Init",
      "offset": [
        1188,
        2312
      ],
      "op": "POP",
      "path": "50"
    },
    "6766": {
      "fn": "CLHouse.Init",
      "offset": [
        1188,
        2312
      ],
      "op": "POP",
      "path": "50"
    },
    "6767": {
      "fn": "CLHouse.Init",
      "offset": [
        1188,
        2312
      ],
      "op": "POP",
      "path": "50"
    },
    "6768": {
      "fn": "CLHouse.Init",
      "offset": [
        1188,
        2312
      ],
      "op": "POP",
      "path": "50"
    },
    "6769": {
      "fn": "CLHouse.Init",
      "offset": [
        1188,
        2312
      ],
      "op": "POP",
      "path": "50"
    },
    "6770": {
      "fn": "CLHouse.Init",
      "offset": [
        1188,
        2312
      ],
      "op": "POP",
      "path": "50"
    },
    "6771": {
      "fn": "CLHouse.Init",
      "offset": [
        1188,
        2312
      ],
      "op": "POP",
      "path": "50"
    },
    "6772": {
      "fn": "CLHouse.Init",
      "offset": [
        1188,
        2312
      ],
      "op": "POP",
      "path": "50"
    },
    "6773": {
      "fn": "CLHouse.Init",
      "offset": [
        1188,
        2312
      ],
      "op": "POP",
      "path": "50"
    },
    "6774": {
      "fn": "CLHouse.Init",
      "jump": "o",
      "offset": [
        1188,
        2312
      ],
      "op": "JUMP",
      "path": "50"
    },
    "6775": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3714,
        4540
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "6776": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3924
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xC1"
    },
    "6778": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3924
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "6779": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "6781": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6782": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "6783": {
      "op": "PUSH4",
      "value": "0xA327AB69"
    },
    "6788": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6790": {
      "op": "SHL"
    },
    "6791": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "DUP2",
      "path": "50"
    },
    "6792": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6793": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6794": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "6795": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3890,
        3911
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "6797": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3890,
        3911
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "6798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6800": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6802": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6804": {
      "op": "SHL"
    },
    "6805": {
      "op": "SUB"
    },
    "6806": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3924
      ],
      "op": "AND",
      "path": "50"
    },
    "6807": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3924
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6808": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3938
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xA327AB69"
    },
    "6813": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3938
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6814": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "6816": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6817": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "DUP4",
      "path": "50"
    },
    "6818": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "ADD",
      "path": "50"
    },
    "6819": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "6820": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "6822": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "6823": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6824": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6825": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "DUP3",
      "path": "50"
    },
    "6826": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6827": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "SUB",
      "path": "50"
    },
    "6828": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "ADD",
      "path": "50"
    },
    "6829": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "DUP2",
      "path": "50"
    },
    "6830": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3924
      ],
      "op": "DUP7",
      "path": "50"
    },
    "6831": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "GAS",
      "path": "50"
    },
    "6832": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "STATICCALL",
      "path": "50"
    },
    "6833": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "6834": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6835": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "6836": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1AC1"
    },
    "6839": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "6840": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "6841": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "6843": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6844": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "6845": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "6846": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "6848": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "REVERT",
      "path": "50"
    },
    "6849": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "6850": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "POP",
      "path": "50"
    },
    "6851": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "POP",
      "path": "50"
    },
    "6852": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "POP",
      "path": "50"
    },
    "6853": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "POP",
      "path": "50"
    },
    "6854": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "6856": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "6857": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "6858": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "6860": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "NOT",
      "path": "50"
    },
    "6861": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "6863": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "DUP3",
      "path": "50"
    },
    "6864": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "ADD",
      "path": "50"
    },
    "6865": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "AND",
      "path": "50"
    },
    "6866": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "DUP3",
      "path": "50"
    },
    "6867": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "ADD",
      "path": "50"
    },
    "6868": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6869": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "6871": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6872": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "POP",
      "path": "50"
    },
    "6873": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "DUP2",
      "path": "50"
    },
    "6874": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "ADD",
      "path": "50"
    },
    "6875": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6876": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1AE5"
    },
    "6879": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6880": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6881": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2AAB"
    },
    "6884": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        3914,
        3940
      ],
      "op": "JUMP",
      "path": "50"
    },
    "6885": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3914,
        3940
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "6886": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3890,
        3940
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6887": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3890,
        3940
      ],
      "op": "POP",
      "path": "50"
    },
    "6888": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4009,
        4027
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "6890": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4033,
        4046
      ],
      "op": "DUP2",
      "path": "50"
    },
    "6891": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6893": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6895": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6897": {
      "op": "SHL"
    },
    "6898": {
      "op": "SUB"
    },
    "6899": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4033,
        4059
      ],
      "op": "AND",
      "path": "50"
    },
    "6900": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4174,
        4181
      ],
      "op": "DUP7",
      "path": "50"
    },
    "6901": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4199,
        4207
      ],
      "op": "DUP7",
      "path": "50"
    },
    "6902": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4225,
        4239
      ],
      "op": "DUP7",
      "path": "50"
    },
    "6903": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4257,
        4267
      ],
      "op": "DUP7",
      "path": "50"
    },
    "6904": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4073,
        4281
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "6906": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4073,
        4281
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "6907": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4073,
        4281
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x24"
    },
    "6909": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4073,
        4281
      ],
      "op": "ADD",
      "path": "50"
    },
    "6910": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4073,
        4281
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1B0A"
    },
    "6913": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4073,
        4281
      ],
      "op": "SWAP5",
      "path": "50"
    },
    "6914": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4073,
        4281
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "6915": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4073,
        4281
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "6916": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4073,
        4281
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6917": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4073,
        4281
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6918": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4073,
        4281
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2EB0"
    },
    "6921": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        4073,
        4281
      ],
      "op": "JUMP",
      "path": "50"
    },
    "6922": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4073,
        4281
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "6923": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4073,
        4281
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "6925": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4073,
        4281
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6926": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4073,
        4281
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "6927": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6929": {
      "op": "NOT"
    },
    "6930": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4073,
        4281
      ],
      "op": "DUP2",
      "path": "50"
    },
    "6931": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4073,
        4281
      ],
      "op": "DUP5",
      "path": "50"
    },
    "6932": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4073,
        4281
      ],
      "op": "SUB",
      "path": "50"
    },
    "6933": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4073,
        4281
      ],
      "op": "ADD",
      "path": "50"
    },
    "6934": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4073,
        4281
      ],
      "op": "DUP2",
      "path": "50"
    },
    "6935": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4073,
        4281
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6936": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4073,
        4281
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6937": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4073,
        4281
      ],
      "op": "DUP2",
      "path": "50"
    },
    "6938": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4073,
        4281
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6939": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4073,
        4281
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "6941": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4073,
        4281
      ],
      "op": "DUP3",
      "path": "50"
    },
    "6942": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4073,
        4281
      ],
      "op": "ADD",
      "path": "50"
    },
    "6943": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4073,
        4281
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6944": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4073,
        4281
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "6945": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6947": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6949": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6951": {
      "op": "SHL"
    },
    "6952": {
      "op": "SUB"
    },
    "6953": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4073,
        4281
      ],
      "op": "AND",
      "path": "50"
    },
    "6954": {
      "op": "PUSH4",
      "value": "0x18567541"
    },
    "6959": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "6961": {
      "op": "SHL"
    },
    "6962": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4073,
        4281
      ],
      "op": "OR",
      "path": "50"
    },
    "6963": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4073,
        4281
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6964": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4073,
        4281
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6965": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4033,
        4291
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "6966": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4033,
        4291
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1B3F"
    },
    "6969": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4033,
        4291
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6970": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4073,
        4281
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6971": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4033,
        4291
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2B00"
    },
    "6974": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        4033,
        4291
      ],
      "op": "JUMP",
      "path": "50"
    },
    "6975": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4033,
        4291
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "6976": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4033,
        4291
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "6978": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4033,
        4291
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "6980": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4033,
        4291
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "6981": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4033,
        4291
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6982": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4033,
        4291
      ],
      "op": "DUP4",
      "path": "50"
    },
    "6983": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4033,
        4291
      ],
      "op": "SUB",
      "path": "50"
    },
    "6984": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4033,
        4291
      ],
      "op": "DUP2",
      "path": "50"
    },
    "6985": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4033,
        4291
      ],
      "op": "DUP6",
      "path": "50"
    },
    "6986": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4033,
        4291
      ],
      "op": "GAS",
      "path": "50"
    },
    "6987": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4033,
        4291
      ],
      "op": "DELEGATECALL",
      "path": "50"
    },
    "6988": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4033,
        4291
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6989": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4033,
        4291
      ],
      "op": "POP",
      "path": "50"
    },
    "6990": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4033,
        4291
      ],
      "op": "POP",
      "path": "50"
    },
    "6991": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4033,
        4291
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "6992": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4033,
        4291
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6993": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4033,
        4291
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "6995": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4033,
        4291
      ],
      "op": "DUP2",
      "path": "50"
    },
    "6996": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4033,
        4291
      ],
      "op": "EQ",
      "path": "50"
    },
    "6997": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4033,
        4291
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1B7A"
    },
    "7000": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4033,
        4291
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "7001": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4033,
        4291
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "7003": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4033,
        4291
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "7004": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4033,
        4291
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "7005": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4033,
        4291
      ],
      "op": "POP",
      "path": "50"
    },
    "7006": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4033,
        4291
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "7008": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4033,
        4291
      ],
      "op": "NOT",
      "path": "50"
    },
    "7009": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4033,
        4291
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x3F"
    },
    "7011": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4033,
        4291
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "7012": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4033,
        4291
      ],
      "op": "ADD",
      "path": "50"
    },
    "7013": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4033,
        4291
      ],
      "op": "AND",
      "path": "50"
    },
    "7014": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4033,
        4291
      ],
      "op": "DUP3",
      "path": "50"
    },
    "7015": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4033,
        4291
      ],
      "op": "ADD",
      "path": "50"
    },
    "7016": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4033,
        4291
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "7018": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4033,
        4291
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "7019": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4033,
        4291
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "7020": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4033,
        4291
      ],
      "op": "DUP3",
      "path": "50"
    },
    "7021": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4033,
        4291
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "7022": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4033,
        4291
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "7023": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4033,
        4291
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "7025": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4033,
        4291
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "7027": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4033,
        4291
      ],
      "op": "DUP5",
      "path": "50"
    },
    "7028": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4033,
        4291
      ],
      "op": "ADD",
      "path": "50"
    },
    "7029": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4033,
        4291
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "7030": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4033,
        4291
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1B7F"
    },
    "7033": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4033,
        4291
      ],
      "op": "JUMP",
      "path": "50"
    },
    "7034": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4033,
        4291
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "7035": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4033,
        4291
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x60"
    },
    "7037": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4033,
        4291
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "7038": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4033,
        4291
      ],
      "op": "POP",
      "path": "50"
    },
    "7039": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4033,
        4291
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "7040": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4033,
        4291
      ],
      "op": "POP",
      "path": "50"
    },
    "7041": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4008,
        4291
      ],
      "op": "POP",
      "path": "50"
    },
    "7042": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4008,
        4291
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "7043": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4008,
        4291
      ],
      "op": "POP",
      "path": "50"
    },
    "7044": {
      "branch": 18,
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4307,
        4320
      ],
      "op": "DUP1",
      "path": "50",
      "statement": 13
    },
    "7045": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4302,
        4534
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1B95"
    },
    "7048": {
      "branch": 18,
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4302,
        4534
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "7049": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4381,
        4385
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "7051": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4375,
        4386
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "7052": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4415,
        4431
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "7053": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4471,
        4475
      ],
      "op": "DUP1",
      "path": "50"
    },
    "7054": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4468,
        4469
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "7056": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4463,
        4466
      ],
      "op": "DUP4",
      "path": "50"
    },
    "7057": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4448,
        4476
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "7058": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4505,
        4509
      ],
      "op": "DUP1",
      "path": "50"
    },
    "7059": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4500,
        4503
      ],
      "op": "DUP3",
      "path": "50"
    },
    "7060": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4493,
        4510
      ],
      "op": "REVERT",
      "path": "50"
    },
    "7061": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4302,
        4534
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "7062": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3880,
        4540
      ],
      "op": "POP",
      "path": "50"
    },
    "7063": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3880,
        4540
      ],
      "op": "POP",
      "path": "50"
    },
    "7064": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3714,
        4540
      ],
      "op": "POP",
      "path": "50"
    },
    "7065": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3714,
        4540
      ],
      "op": "POP",
      "path": "50"
    },
    "7066": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3714,
        4540
      ],
      "op": "POP",
      "path": "50"
    },
    "7067": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3714,
        4540
      ],
      "op": "POP",
      "path": "50"
    },
    "7068": {
      "fn": "CLHouse.VoteProposal",
      "jump": "o",
      "offset": [
        3714,
        4540
      ],
      "op": "JUMP",
      "path": "50"
    },
    "7069": {
      "offset": [
        1404,
        1471
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "7070": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0xA5"
    },
    "7072": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "7074": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "7075": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "DUP2",
      "path": "47"
    },
    "7076": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "7077": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "7079": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "7080": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "DUP4",
      "path": "47"
    },
    "7081": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "7082": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "7084": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "DUP1",
      "path": "47"
    },
    "7085": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "DUP5",
      "path": "47"
    },
    "7086": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "KECCAK256",
      "path": "47"
    },
    "7087": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "7088": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "7089": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "7090": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "7091": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "DUP3",
      "path": "47"
    },
    "7092": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "7093": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "7094": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "KECCAK256",
      "path": "47"
    },
    "7095": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "DUP1",
      "path": "47"
    },
    "7096": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "7097": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1"
    },
    "7099": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "DUP3",
      "path": "47"
    },
    "7100": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "ADD",
      "path": "47"
    },
    "7101": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "DUP1",
      "path": "47"
    },
    "7102": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "7103": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0xFF"
    },
    "7105": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "DUP1",
      "path": "47"
    },
    "7106": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "DUP5",
      "path": "47"
    },
    "7107": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "AND",
      "path": "47"
    },
    "7108": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "SWAP5",
      "path": "47"
    },
    "7109": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x100"
    },
    "7112": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "7113": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "SWAP5",
      "path": "47"
    },
    "7114": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "DIV",
      "path": "47"
    },
    "7115": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "AND",
      "path": "47"
    },
    "7116": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "7117": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "7118": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "7119": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1BD7"
    },
    "7122": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "7123": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2BB4"
    },
    "7126": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        1404,
        1471
      ],
      "op": "JUMP",
      "path": "47"
    },
    "7127": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "7128": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "DUP1",
      "path": "47"
    },
    "7129": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1F"
    },
    "7131": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "ADD",
      "path": "47"
    },
    "7132": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "7134": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "DUP1",
      "path": "47"
    },
    "7135": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "7136": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "DIV",
      "path": "47"
    },
    "7137": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "MUL",
      "path": "47"
    },
    "7138": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "7140": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "ADD",
      "path": "47"
    },
    "7141": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "7143": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "MLOAD",
      "path": "47"
    },
    "7144": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "7145": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "DUP2",
      "path": "47"
    },
    "7146": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "ADD",
      "path": "47"
    },
    "7147": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "7149": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "7150": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "DUP1",
      "path": "47"
    },
    "7151": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "7152": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "7153": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "7154": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "DUP2",
      "path": "47"
    },
    "7155": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "DUP2",
      "path": "47"
    },
    "7156": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "7157": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "7159": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "ADD",
      "path": "47"
    },
    "7160": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "DUP3",
      "path": "47"
    },
    "7161": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "DUP1",
      "path": "47"
    },
    "7162": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "7163": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1C03"
    },
    "7166": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "7167": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2BB4"
    },
    "7170": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        1404,
        1471
      ],
      "op": "JUMP",
      "path": "47"
    },
    "7171": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "7172": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "DUP1",
      "path": "47"
    },
    "7173": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "ISZERO",
      "path": "47"
    },
    "7174": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1C50"
    },
    "7177": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "7178": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "DUP1",
      "path": "47"
    },
    "7179": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1F"
    },
    "7181": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "LT",
      "path": "47"
    },
    "7182": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1C25"
    },
    "7185": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "7186": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x100"
    },
    "7189": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "DUP1",
      "path": "47"
    },
    "7190": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "DUP4",
      "path": "47"
    },
    "7191": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "7192": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "DIV",
      "path": "47"
    },
    "7193": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "MUL",
      "path": "47"
    },
    "7194": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "DUP4",
      "path": "47"
    },
    "7195": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "7196": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "7197": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "7199": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "ADD",
      "path": "47"
    },
    "7200": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "7201": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1C50"
    },
    "7204": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "JUMP",
      "path": "47"
    },
    "7205": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "7206": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "DUP3",
      "path": "47"
    },
    "7207": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "ADD",
      "path": "47"
    },
    "7208": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "7209": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "7210": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "7212": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "7213": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "7215": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "7217": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "KECCAK256",
      "path": "47"
    },
    "7218": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "7219": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "7220": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "DUP2",
      "path": "47"
    },
    "7221": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "7222": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "DUP2",
      "path": "47"
    },
    "7223": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "7224": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "7225": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1"
    },
    "7227": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "ADD",
      "path": "47"
    },
    "7228": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "7229": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "7231": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "ADD",
      "path": "47"
    },
    "7232": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "DUP1",
      "path": "47"
    },
    "7233": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "DUP4",
      "path": "47"
    },
    "7234": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "GT",
      "path": "47"
    },
    "7235": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1C33"
    },
    "7238": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "7239": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "DUP3",
      "path": "47"
    },
    "7240": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "7241": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "SUB",
      "path": "47"
    },
    "7242": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1F"
    },
    "7244": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "AND",
      "path": "47"
    },
    "7245": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "DUP3",
      "path": "47"
    },
    "7246": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "ADD",
      "path": "47"
    },
    "7247": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "7248": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "7249": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "POP",
      "path": "47"
    },
    "7250": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "POP",
      "path": "47"
    },
    "7251": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "POP",
      "path": "47"
    },
    "7252": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "POP",
      "path": "47"
    },
    "7253": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "POP",
      "path": "47"
    },
    "7254": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "7255": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "POP",
      "path": "47"
    },
    "7256": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1404,
        1471
      ],
      "op": "DUP4",
      "path": "47"
    },
    "7257": {
      "fn": "CLHouse.VoteProposal",
      "jump": "o",
      "offset": [
        1404,
        1471
      ],
      "op": "JUMP",
      "path": "47"
    },
    "7258": {
      "offset": [
        987,
        1020
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "7259": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x83"
    },
    "7261": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "DUP2",
      "path": "47"
    },
    "7262": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "DUP2",
      "path": "47"
    },
    "7263": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "7264": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "DUP2",
      "path": "47"
    },
    "7265": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "LT",
      "path": "47"
    },
    "7266": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1C6A"
    },
    "7269": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "7270": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "7272": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "DUP1",
      "path": "47"
    },
    "7273": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "REVERT",
      "path": "47"
    },
    "7274": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "7275": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "7277": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "7278": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "DUP3",
      "path": "47"
    },
    "7279": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "7280": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "7282": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "7283": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "7284": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "KECCAK256",
      "path": "47"
    },
    "7285": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x7"
    },
    "7287": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "7288": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "7289": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "MUL",
      "path": "47"
    },
    "7290": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "ADD",
      "path": "47"
    },
    "7291": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "DUP1",
      "path": "47"
    },
    "7292": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "7293": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1"
    },
    "7295": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "DUP3",
      "path": "47"
    },
    "7296": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "ADD",
      "path": "47"
    },
    "7297": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "DUP1",
      "path": "47"
    },
    "7298": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "7299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7303": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7305": {
      "op": "SHL"
    },
    "7306": {
      "op": "SUB"
    },
    "7307": {
      "offset": [
        987,
        1020
      ],
      "op": "DUP4",
      "path": "47"
    },
    "7308": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "AND",
      "path": "47"
    },
    "7309": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "SWAP5",
      "path": "47"
    },
    "7310": {
      "op": "POP"
    },
    "7311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7313": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7315": {
      "op": "SHL"
    },
    "7316": {
      "offset": [
        987,
        1020
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "7317": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "7318": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "DIV",
      "path": "47"
    },
    "7319": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0xFF"
    },
    "7321": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "AND",
      "path": "47"
    },
    "7322": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "7323": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "7324": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1CA4"
    },
    "7327": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "7328": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2BB4"
    },
    "7331": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        987,
        1020
      ],
      "op": "JUMP",
      "path": "47"
    },
    "7332": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "7333": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "DUP1",
      "path": "47"
    },
    "7334": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1F"
    },
    "7336": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "ADD",
      "path": "47"
    },
    "7337": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "7339": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "DUP1",
      "path": "47"
    },
    "7340": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "7341": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "DIV",
      "path": "47"
    },
    "7342": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "MUL",
      "path": "47"
    },
    "7343": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "7345": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "ADD",
      "path": "47"
    },
    "7346": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "7348": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "MLOAD",
      "path": "47"
    },
    "7349": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "7350": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "DUP2",
      "path": "47"
    },
    "7351": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "ADD",
      "path": "47"
    },
    "7352": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "7354": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "7355": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "DUP1",
      "path": "47"
    },
    "7356": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "7357": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "7358": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "7359": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "DUP2",
      "path": "47"
    },
    "7360": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "DUP2",
      "path": "47"
    },
    "7361": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "7362": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "7364": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "ADD",
      "path": "47"
    },
    "7365": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "DUP3",
      "path": "47"
    },
    "7366": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "DUP1",
      "path": "47"
    },
    "7367": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "7368": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1CD0"
    },
    "7371": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "7372": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2BB4"
    },
    "7375": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        987,
        1020
      ],
      "op": "JUMP",
      "path": "47"
    },
    "7376": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "7377": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "DUP1",
      "path": "47"
    },
    "7378": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "ISZERO",
      "path": "47"
    },
    "7379": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1D1D"
    },
    "7382": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "7383": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "DUP1",
      "path": "47"
    },
    "7384": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1F"
    },
    "7386": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "LT",
      "path": "47"
    },
    "7387": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1CF2"
    },
    "7390": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "7391": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x100"
    },
    "7394": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "DUP1",
      "path": "47"
    },
    "7395": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "DUP4",
      "path": "47"
    },
    "7396": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "7397": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "DIV",
      "path": "47"
    },
    "7398": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "MUL",
      "path": "47"
    },
    "7399": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "DUP4",
      "path": "47"
    },
    "7400": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "7401": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "7402": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "7404": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "ADD",
      "path": "47"
    },
    "7405": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "7406": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1D1D"
    },
    "7409": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "JUMP",
      "path": "47"
    },
    "7410": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "7411": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "DUP3",
      "path": "47"
    },
    "7412": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "ADD",
      "path": "47"
    },
    "7413": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "7414": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "7415": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "7417": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "7418": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "7420": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "7422": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "KECCAK256",
      "path": "47"
    },
    "7423": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "7424": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "7425": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "DUP2",
      "path": "47"
    },
    "7426": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "7427": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "DUP2",
      "path": "47"
    },
    "7428": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "7429": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "7430": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1"
    },
    "7432": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "ADD",
      "path": "47"
    },
    "7433": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "7434": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "7436": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "ADD",
      "path": "47"
    },
    "7437": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "DUP1",
      "path": "47"
    },
    "7438": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "DUP4",
      "path": "47"
    },
    "7439": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "GT",
      "path": "47"
    },
    "7440": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1D00"
    },
    "7443": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "7444": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "DUP3",
      "path": "47"
    },
    "7445": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "7446": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "SUB",
      "path": "47"
    },
    "7447": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1F"
    },
    "7449": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "AND",
      "path": "47"
    },
    "7450": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "DUP3",
      "path": "47"
    },
    "7451": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "ADD",
      "path": "47"
    },
    "7452": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "7453": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "7454": {
      "op": "POP"
    },
    "7455": {
      "op": "POP"
    },
    "7456": {
      "op": "POP"
    },
    "7457": {
      "offset": [
        987,
        1020
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x2"
    },
    "7459": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "DUP5",
      "path": "47"
    },
    "7460": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "ADD",
      "path": "47"
    },
    "7461": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "7462": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x3"
    },
    "7464": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "DUP6",
      "path": "47"
    },
    "7465": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "ADD",
      "path": "47"
    },
    "7466": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "7467": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x4"
    },
    "7469": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "DUP7",
      "path": "47"
    },
    "7470": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "ADD",
      "path": "47"
    },
    "7471": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "7472": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x5"
    },
    "7474": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "DUP8",
      "path": "47"
    },
    "7475": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "ADD",
      "path": "47"
    },
    "7476": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "7477": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x6"
    },
    "7479": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "7480": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "SWAP8",
      "path": "47"
    },
    "7481": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "ADD",
      "path": "47"
    },
    "7482": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "7483": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "SWAP6",
      "path": "47"
    },
    "7484": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "SWAP7",
      "path": "47"
    },
    "7485": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "7486": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "SWAP6",
      "path": "47"
    },
    "7487": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "7488": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "SWAP5",
      "path": "47"
    },
    "7489": {
      "op": "POP"
    },
    "7490": {
      "offset": [
        987,
        1020
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "7491": {
      "op": "POP"
    },
    "7492": {
      "offset": [
        987,
        1020
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0xFF"
    },
    "7494": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "DUP1",
      "path": "47"
    },
    "7495": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "DUP4",
      "path": "47"
    },
    "7496": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "AND",
      "path": "47"
    },
    "7497": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "7498": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x100"
    },
    "7501": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "7502": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "DIV",
      "path": "47"
    },
    "7503": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "AND",
      "path": "47"
    },
    "7504": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "7505": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        987,
        1020
      ],
      "op": "DUP10",
      "path": "47"
    },
    "7506": {
      "fn": "CLHouse.VoteProposal",
      "jump": "o",
      "offset": [
        987,
        1020
      ],
      "op": "JUMP",
      "path": "47"
    },
    "7507": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8757,
        9713
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "7508": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8964,
        8978
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "7510": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8995,
        9016
      ],
      "op": "DUP1",
      "path": "50"
    },
    "7511": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9029
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xC1"
    },
    "7513": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9029
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "7515": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9029
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "7516": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9029
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "7517": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9029
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "7518": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9029
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x100"
    },
    "7521": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9029
      ],
      "op": "EXP",
      "path": "50"
    },
    "7522": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9029
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "7523": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9029
      ],
      "op": "DIV",
      "path": "50"
    },
    "7524": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7526": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7528": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7530": {
      "op": "SHL"
    },
    "7531": {
      "op": "SUB"
    },
    "7532": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9029
      ],
      "op": "AND",
      "path": "50"
    },
    "7533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7537": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7539": {
      "op": "SHL"
    },
    "7540": {
      "op": "SUB"
    },
    "7541": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9043
      ],
      "op": "AND",
      "path": "50"
    },
    "7542": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9043
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xA327AB69"
    },
    "7547": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "7549": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "7550": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "DUP2",
      "path": "50"
    },
    "7551": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xFFFFFFFF"
    },
    "7556": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "AND",
      "path": "50"
    },
    "7557": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xE0"
    },
    "7559": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "SHL",
      "path": "50"
    },
    "7560": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "DUP2",
      "path": "50"
    },
    "7561": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "7562": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "7564": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "ADD",
      "path": "50"
    },
    "7565": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "7567": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "7569": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "7570": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "DUP1",
      "path": "50"
    },
    "7571": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "DUP4",
      "path": "50"
    },
    "7572": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "SUB",
      "path": "50"
    },
    "7573": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "DUP2",
      "path": "50"
    },
    "7574": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "DUP7",
      "path": "50"
    },
    "7575": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "GAS",
      "path": "50"
    },
    "7576": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "STATICCALL",
      "path": "50"
    },
    "7577": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "7578": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "DUP1",
      "path": "50"
    },
    "7579": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "7580": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1DA9"
    },
    "7583": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "7584": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "7585": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "7587": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "DUP1",
      "path": "50"
    },
    "7588": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "7589": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "7590": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "7592": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "REVERT",
      "path": "50"
    },
    "7593": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "7594": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "POP",
      "path": "50"
    },
    "7595": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "POP",
      "path": "50"
    },
    "7596": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "POP",
      "path": "50"
    },
    "7597": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "POP",
      "path": "50"
    },
    "7598": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "7600": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "7601": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "7602": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "7604": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "NOT",
      "path": "50"
    },
    "7605": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "7607": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "DUP3",
      "path": "50"
    },
    "7608": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "ADD",
      "path": "50"
    },
    "7609": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "AND",
      "path": "50"
    },
    "7610": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "DUP3",
      "path": "50"
    },
    "7611": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "ADD",
      "path": "50"
    },
    "7612": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "DUP1",
      "path": "50"
    },
    "7613": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "7615": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "7616": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "POP",
      "path": "50"
    },
    "7617": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "DUP2",
      "path": "50"
    },
    "7618": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "ADD",
      "path": "50"
    },
    "7619": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "7620": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1DCD"
    },
    "7623": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "7624": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "7625": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2AAB"
    },
    "7628": {
      "fn": "CLHouse.PropTxERC20",
      "jump": "i",
      "offset": [
        9019,
        9045
      ],
      "op": "JUMP",
      "path": "50"
    },
    "7629": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9019,
        9045
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "7630": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8995,
        9045
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "7631": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8995,
        9045
      ],
      "op": "POP",
      "path": "50"
    },
    "7632": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9114,
        9132
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "7634": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9138,
        9151
      ],
      "op": "DUP2",
      "path": "50"
    },
    "7635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7639": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7641": {
      "op": "SHL"
    },
    "7642": {
      "op": "SUB"
    },
    "7643": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9138,
        9164
      ],
      "op": "AND",
      "path": "50"
    },
    "7644": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9291,
        9294
      ],
      "op": "DUP9",
      "path": "50"
    },
    "7645": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9312,
        9325
      ],
      "op": "DUP9",
      "path": "50"
    },
    "7646": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9343,
        9355
      ],
      "op": "DUP9",
      "path": "50"
    },
    "7647": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9373,
        9385
      ],
      "op": "DUP9",
      "path": "50"
    },
    "7648": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9403,
        9413
      ],
      "op": "DUP9",
      "path": "50"
    },
    "7649": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9178,
        9427
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "7651": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9178,
        9427
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "7652": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9178,
        9427
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x24"
    },
    "7654": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9178,
        9427
      ],
      "op": "ADD",
      "path": "50"
    },
    "7655": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9178,
        9427
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1DF4"
    },
    "7658": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9178,
        9427
      ],
      "op": "SWAP6",
      "path": "50"
    },
    "7659": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9178,
        9427
      ],
      "op": "SWAP5",
      "path": "50"
    },
    "7660": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9178,
        9427
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "7661": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9178,
        9427
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "7662": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9178,
        9427
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "7663": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9178,
        9427
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "7664": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9178,
        9427
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2EE3"
    },
    "7667": {
      "fn": "CLHouse.PropTxERC20",
      "jump": "i",
      "offset": [
        9178,
        9427
      ],
      "op": "JUMP",
      "path": "50"
    },
    "7668": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9178,
        9427
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "7669": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9178,
        9427
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "7671": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9178,
        9427
      ],
      "op": "DUP1",
      "path": "50"
    },
    "7672": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9178,
        9427
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "7673": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7675": {
      "op": "NOT"
    },
    "7676": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9178,
        9427
      ],
      "op": "DUP2",
      "path": "50"
    },
    "7677": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9178,
        9427
      ],
      "op": "DUP5",
      "path": "50"
    },
    "7678": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9178,
        9427
      ],
      "op": "SUB",
      "path": "50"
    },
    "7679": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9178,
        9427
      ],
      "op": "ADD",
      "path": "50"
    },
    "7680": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9178,
        9427
      ],
      "op": "DUP2",
      "path": "50"
    },
    "7681": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9178,
        9427
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "7682": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9178,
        9427
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "7683": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9178,
        9427
      ],
      "op": "DUP2",
      "path": "50"
    },
    "7684": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9178,
        9427
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "7685": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9178,
        9427
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "7687": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9178,
        9427
      ],
      "op": "DUP3",
      "path": "50"
    },
    "7688": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9178,
        9427
      ],
      "op": "ADD",
      "path": "50"
    },
    "7689": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9178,
        9427
      ],
      "op": "DUP1",
      "path": "50"
    },
    "7690": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9178,
        9427
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "7691": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7695": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7697": {
      "op": "SHL"
    },
    "7698": {
      "op": "SUB"
    },
    "7699": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9178,
        9427
      ],
      "op": "AND",
      "path": "50"
    },
    "7700": {
      "op": "PUSH4",
      "value": "0x6F2D58A7"
    },
    "7705": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "7707": {
      "op": "SHL"
    },
    "7708": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9178,
        9427
      ],
      "op": "OR",
      "path": "50"
    },
    "7709": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9178,
        9427
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "7710": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9178,
        9427
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "7711": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9138,
        9437
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "7712": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9138,
        9437
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1E29"
    },
    "7715": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9138,
        9437
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "7716": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9178,
        9427
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "7717": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9138,
        9437
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2B00"
    },
    "7720": {
      "fn": "CLHouse.PropTxERC20",
      "jump": "i",
      "offset": [
        9138,
        9437
      ],
      "op": "JUMP",
      "path": "50"
    },
    "7721": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9138,
        9437
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "7722": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9138,
        9437
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "7724": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9138,
        9437
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "7726": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9138,
        9437
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "7727": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9138,
        9437
      ],
      "op": "DUP1",
      "path": "50"
    },
    "7728": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9138,
        9437
      ],
      "op": "DUP4",
      "path": "50"
    },
    "7729": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9138,
        9437
      ],
      "op": "SUB",
      "path": "50"
    },
    "7730": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9138,
        9437
      ],
      "op": "DUP2",
      "path": "50"
    },
    "7731": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9138,
        9437
      ],
      "op": "DUP6",
      "path": "50"
    },
    "7732": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9138,
        9437
      ],
      "op": "GAS",
      "path": "50"
    },
    "7733": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9138,
        9437
      ],
      "op": "DELEGATECALL",
      "path": "50"
    },
    "7734": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9138,
        9437
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "7735": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9138,
        9437
      ],
      "op": "POP",
      "path": "50"
    },
    "7736": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9138,
        9437
      ],
      "op": "POP",
      "path": "50"
    },
    "7737": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9138,
        9437
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "7738": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9138,
        9437
      ],
      "op": "DUP1",
      "path": "50"
    },
    "7739": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9138,
        9437
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "7741": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9138,
        9437
      ],
      "op": "DUP2",
      "path": "50"
    },
    "7742": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9138,
        9437
      ],
      "op": "EQ",
      "path": "50"
    },
    "7743": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9138,
        9437
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1E64"
    },
    "7746": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9138,
        9437
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "7747": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9138,
        9437
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "7749": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9138,
        9437
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "7750": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9138,
        9437
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "7751": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9138,
        9437
      ],
      "op": "POP",
      "path": "50"
    },
    "7752": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9138,
        9437
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "7754": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9138,
        9437
      ],
      "op": "NOT",
      "path": "50"
    },
    "7755": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9138,
        9437
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x3F"
    },
    "7757": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9138,
        9437
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "7758": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9138,
        9437
      ],
      "op": "ADD",
      "path": "50"
    },
    "7759": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9138,
        9437
      ],
      "op": "AND",
      "path": "50"
    },
    "7760": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9138,
        9437
      ],
      "op": "DUP3",
      "path": "50"
    },
    "7761": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9138,
        9437
      ],
      "op": "ADD",
      "path": "50"
    },
    "7762": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9138,
        9437
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "7764": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9138,
        9437
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "7765": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9138,
        9437
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "7766": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9138,
        9437
      ],
      "op": "DUP3",
      "path": "50"
    },
    "7767": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9138,
        9437
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "7768": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9138,
        9437
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "7769": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9138,
        9437
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "7771": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9138,
        9437
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "7773": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9138,
        9437
      ],
      "op": "DUP5",
      "path": "50"
    },
    "7774": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9138,
        9437
      ],
      "op": "ADD",
      "path": "50"
    },
    "7775": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9138,
        9437
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "7776": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9138,
        9437
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1E69"
    },
    "7779": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9138,
        9437
      ],
      "op": "JUMP",
      "path": "50"
    },
    "7780": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9138,
        9437
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "7781": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9138,
        9437
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x60"
    },
    "7783": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9138,
        9437
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "7784": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9138,
        9437
      ],
      "op": "POP",
      "path": "50"
    },
    "7785": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9138,
        9437
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "7786": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9138,
        9437
      ],
      "op": "POP",
      "path": "50"
    },
    "7787": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9113,
        9437
      ],
      "op": "POP",
      "path": "50"
    },
    "7788": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9113,
        9437
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "7789": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9113,
        9437
      ],
      "op": "POP",
      "path": "50"
    },
    "7790": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9488,
        9492
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "7792": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9482,
        9493
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "7793": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9518,
        9534
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "7794": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9570,
        9574
      ],
      "op": "DUP1",
      "path": "50"
    },
    "7795": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9567,
        9568
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "7797": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9562,
        9565
      ],
      "op": "DUP4",
      "path": "50"
    },
    "7798": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9547,
        9575
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "7799": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9599,
        9612
      ],
      "op": "DUP3",
      "path": "50"
    },
    "7800": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9588,
        9664
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1E7F"
    },
    "7803": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9588,
        9664
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "7804": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9645,
        9649
      ],
      "op": "DUP1",
      "path": "50"
    },
    "7805": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9640,
        9643
      ],
      "op": "DUP3",
      "path": "50"
    },
    "7806": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9633,
        9650
      ],
      "op": "REVERT",
      "path": "50"
    },
    "7807": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9588,
        9664
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "7808": {
      "op": "POP"
    },
    "7809": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9687,
        9697
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "7810": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9687,
        9697
      ],
      "op": "SWAP9",
      "path": "50"
    },
    "7811": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8757,
        9713
      ],
      "op": "SWAP8",
      "path": "50"
    },
    "7812": {
      "op": "POP"
    },
    "7813": {
      "op": "POP"
    },
    "7814": {
      "op": "POP"
    },
    "7815": {
      "op": "POP"
    },
    "7816": {
      "op": "POP"
    },
    "7817": {
      "op": "POP"
    },
    "7818": {
      "op": "POP"
    },
    "7819": {
      "op": "POP"
    },
    "7820": {
      "fn": "CLHouse.PropTxERC20",
      "jump": "o",
      "offset": [
        8757,
        9713
      ],
      "op": "JUMP",
      "path": "50"
    },
    "7821": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        3957,
        4123
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "7822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7824": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7826": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7828": {
      "op": "SHL"
    },
    "7829": {
      "op": "SUB"
    },
    "7830": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4055,
        4079
      ],
      "op": "DUP2",
      "path": "47",
      "statement": 14
    },
    "7831": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4055,
        4079
      ],
      "op": "AND",
      "path": "47"
    },
    "7832": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4055,
        4079
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "7834": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4055,
        4079
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "7835": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4055,
        4079
      ],
      "op": "DUP2",
      "path": "47"
    },
    "7836": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4055,
        4079
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "7837": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4055,
        4064
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0xA2"
    },
    "7839": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4055,
        4079
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "7841": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4055,
        4079
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "7842": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4055,
        4079
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "7844": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4055,
        4079
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "7845": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4055,
        4079
      ],
      "op": "KECCAK256",
      "path": "47"
    },
    "7846": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4055,
        4079
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "7847": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4045,
        4053
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x82"
    },
    "7849": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4045,
        4081
      ],
      "op": "DUP1",
      "path": "47"
    },
    "7850": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4045,
        4081
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "7851": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4045,
        4053
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "7852": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4045,
        4053
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "7853": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4055,
        4079
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "7854": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4045,
        4081
      ],
      "op": "DUP2",
      "path": "47"
    },
    "7855": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4045,
        4081
      ],
      "op": "LT",
      "path": "47"
    },
    "7856": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4045,
        4081
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1EBB"
    },
    "7859": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4045,
        4081
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "7860": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4045,
        4081
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1EBB"
    },
    "7863": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4045,
        4081
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2D92"
    },
    "7866": {
      "fn": "CLStorage.CheckIsManager",
      "jump": "i",
      "offset": [
        4045,
        4081
      ],
      "op": "JUMP",
      "path": "47"
    },
    "7867": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4045,
        4081
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "7868": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4045,
        4081
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "7870": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4045,
        4081
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "7871": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4045,
        4081
      ],
      "op": "DUP3",
      "path": "47"
    },
    "7872": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4045,
        4081
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "7873": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4045,
        4081
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "7875": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4045,
        4081
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "7876": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4045,
        4081
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "7877": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4045,
        4081
      ],
      "op": "KECCAK256",
      "path": "47"
    },
    "7878": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4045,
        4091
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x3"
    },
    "7880": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4045,
        4081
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x4"
    },
    "7882": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4045,
        4081
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "7883": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4045,
        4081
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "7884": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4045,
        4081
      ],
      "op": "MUL",
      "path": "47"
    },
    "7885": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4045,
        4081
      ],
      "op": "ADD",
      "path": "47"
    },
    "7886": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4045,
        4091
      ],
      "op": "ADD",
      "path": "47"
    },
    "7887": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4045,
        4091
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "7888": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4045,
        4091
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0xFF"
    },
    "7890": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4045,
        4091
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x100"
    },
    "7893": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4045,
        4091
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "7894": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4045,
        4091
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "7895": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4045,
        4091
      ],
      "op": "DIV",
      "path": "47"
    },
    "7896": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4045,
        4091
      ],
      "op": "AND",
      "path": "47"
    },
    "7897": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4037,
        4091
      ],
      "op": "ISZERO",
      "path": "47"
    },
    "7898": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4037,
        4091
      ],
      "op": "ISZERO",
      "path": "47"
    },
    "7899": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4045,
        4091
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1"
    },
    "7901": {
      "branch": 19,
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4037,
        4091
      ],
      "op": "EQ",
      "path": "47"
    },
    "7902": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4028,
        4116
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1F1E"
    },
    "7905": {
      "branch": 19,
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4028,
        4116
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "7906": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4028,
        4116
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "7908": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4028,
        4116
      ],
      "op": "MLOAD",
      "path": "47"
    },
    "7909": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7913": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7915": {
      "op": "SHL"
    },
    "7916": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4028,
        4116
      ],
      "op": "DUP2",
      "path": "47"
    },
    "7917": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4028,
        4116
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "7918": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7920": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4028,
        4116
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x4"
    },
    "7922": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4028,
        4116
      ],
      "op": "DUP3",
      "path": "47"
    },
    "7923": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4028,
        4116
      ],
      "op": "ADD",
      "path": "47"
    },
    "7924": {
      "op": "MSTORE"
    },
    "7925": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "7927": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7929": {
      "op": "DUP3"
    },
    "7930": {
      "op": "ADD"
    },
    "7931": {
      "op": "MSTORE"
    },
    "7932": {
      "op": "PUSH18",
      "value": "0x4E6F74206D616E6167657220726967687473"
    },
    "7951": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "7953": {
      "op": "SHL"
    },
    "7954": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7956": {
      "op": "DUP3"
    },
    "7957": {
      "op": "ADD"
    },
    "7958": {
      "op": "MSTORE"
    },
    "7959": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7961": {
      "op": "ADD"
    },
    "7962": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4028,
        4116
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x193E"
    },
    "7965": {
      "op": "JUMP"
    },
    "7966": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        4028,
        4116
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "7967": {
      "fn": "CLStorage.CheckIsManager",
      "offset": [
        3957,
        4123
      ],
      "op": "POP",
      "path": "47"
    },
    "7968": {
      "fn": "CLStorage.CheckIsManager",
      "jump": "o",
      "offset": [
        3957,
        4123
      ],
      "op": "JUMP",
      "path": "47"
    },
    "7969": {
      "op": "JUMPDEST"
    },
    "7970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7974": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7976": {
      "op": "SHL"
    },
    "7977": {
      "op": "SUB"
    },
    "7978": {
      "op": "DUP2"
    },
    "7979": {
      "op": "AND"
    },
    "7980": {
      "op": "DUP2"
    },
    "7981": {
      "op": "EQ"
    },
    "7982": {
      "op": "PUSH2",
      "value": "0x1F1E"
    },
    "7985": {
      "op": "JUMPI"
    },
    "7986": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7988": {
      "op": "DUP1"
    },
    "7989": {
      "op": "REVERT"
    },
    "7990": {
      "op": "JUMPDEST"
    },
    "7991": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7996": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7998": {
      "op": "SHL"
    },
    "7999": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8001": {
      "op": "MSTORE"
    },
    "8002": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "8004": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8006": {
      "op": "MSTORE"
    },
    "8007": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8009": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8011": {
      "op": "REVERT"
    },
    "8012": {
      "op": "JUMPDEST"
    },
    "8013": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8015": {
      "op": "MLOAD"
    },
    "8016": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8018": {
      "op": "DUP2"
    },
    "8019": {
      "op": "ADD"
    },
    "8020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8022": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8024": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8026": {
      "op": "SHL"
    },
    "8027": {
      "op": "SUB"
    },
    "8028": {
      "op": "DUP2"
    },
    "8029": {
      "op": "GT"
    },
    "8030": {
      "op": "DUP3"
    },
    "8031": {
      "op": "DUP3"
    },
    "8032": {
      "op": "LT"
    },
    "8033": {
      "op": "OR"
    },
    "8034": {
      "op": "ISZERO"
    },
    "8035": {
      "op": "PUSH2",
      "value": "0x1F6E"
    },
    "8038": {
      "op": "JUMPI"
    },
    "8039": {
      "op": "PUSH2",
      "value": "0x1F6E"
    },
    "8042": {
      "op": "PUSH2",
      "value": "0x1F36"
    },
    "8045": {
      "jump": "i",
      "op": "JUMP"
    },
    "8046": {
      "op": "JUMPDEST"
    },
    "8047": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8049": {
      "op": "MSTORE"
    },
    "8050": {
      "op": "SWAP1"
    },
    "8051": {
      "jump": "o",
      "op": "JUMP"
    },
    "8052": {
      "op": "JUMPDEST"
    },
    "8053": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8055": {
      "op": "MLOAD"
    },
    "8056": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8058": {
      "op": "DUP3"
    },
    "8059": {
      "op": "ADD"
    },
    "8060": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8062": {
      "op": "NOT"
    },
    "8063": {
      "op": "AND"
    },
    "8064": {
      "op": "DUP2"
    },
    "8065": {
      "op": "ADD"
    },
    "8066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8068": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8070": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8072": {
      "op": "SHL"
    },
    "8073": {
      "op": "SUB"
    },
    "8074": {
      "op": "DUP2"
    },
    "8075": {
      "op": "GT"
    },
    "8076": {
      "op": "DUP3"
    },
    "8077": {
      "op": "DUP3"
    },
    "8078": {
      "op": "LT"
    },
    "8079": {
      "op": "OR"
    },
    "8080": {
      "op": "ISZERO"
    },
    "8081": {
      "op": "PUSH2",
      "value": "0x1F9C"
    },
    "8084": {
      "op": "JUMPI"
    },
    "8085": {
      "op": "PUSH2",
      "value": "0x1F9C"
    },
    "8088": {
      "op": "PUSH2",
      "value": "0x1F36"
    },
    "8091": {
      "jump": "i",
      "op": "JUMP"
    },
    "8092": {
      "op": "JUMPDEST"
    },
    "8093": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8095": {
      "op": "MSTORE"
    },
    "8096": {
      "op": "SWAP2"
    },
    "8097": {
      "op": "SWAP1"
    },
    "8098": {
      "op": "POP"
    },
    "8099": {
      "jump": "o",
      "op": "JUMP"
    },
    "8100": {
      "op": "JUMPDEST"
    },
    "8101": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8103": {
      "op": "DUP3"
    },
    "8104": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8106": {
      "op": "DUP4"
    },
    "8107": {
      "op": "ADD"
    },
    "8108": {
      "op": "SLT"
    },
    "8109": {
      "op": "PUSH2",
      "value": "0x1FB5"
    },
    "8112": {
      "op": "JUMPI"
    },
    "8113": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8115": {
      "op": "DUP1"
    },
    "8116": {
      "op": "REVERT"
    },
    "8117": {
      "op": "JUMPDEST"
    },
    "8118": {
      "op": "DUP2"
    },
    "8119": {
      "op": "CALLDATALOAD"
    },
    "8120": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8122": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8124": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8126": {
      "op": "SHL"
    },
    "8127": {
      "op": "SUB"
    },
    "8128": {
      "op": "DUP2"
    },
    "8129": {
      "op": "GT"
    },
    "8130": {
      "op": "ISZERO"
    },
    "8131": {
      "op": "PUSH2",
      "value": "0x1FCE"
    },
    "8134": {
      "op": "JUMPI"
    },
    "8135": {
      "op": "PUSH2",
      "value": "0x1FCE"
    },
    "8138": {
      "op": "PUSH2",
      "value": "0x1F36"
    },
    "8141": {
      "jump": "i",
      "op": "JUMP"
    },
    "8142": {
      "op": "JUMPDEST"
    },
    "8143": {
      "op": "PUSH2",
      "value": "0x1FE1"
    },
    "8146": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8148": {
      "op": "DUP3"
    },
    "8149": {
      "op": "ADD"
    },
    "8150": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8152": {
      "op": "NOT"
    },
    "8153": {
      "op": "AND"
    },
    "8154": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8156": {
      "op": "ADD"
    },
    "8157": {
      "op": "PUSH2",
      "value": "0x1F74"
    },
    "8160": {
      "jump": "i",
      "op": "JUMP"
    },
    "8161": {
      "op": "JUMPDEST"
    },
    "8162": {
      "op": "DUP2"
    },
    "8163": {
      "op": "DUP2"
    },
    "8164": {
      "op": "MSTORE"
    },
    "8165": {
      "op": "DUP5"
    },
    "8166": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8168": {
      "op": "DUP4"
    },
    "8169": {
      "op": "DUP7"
    },
    "8170": {
      "op": "ADD"
    },
    "8171": {
      "op": "ADD"
    },
    "8172": {
      "op": "GT"
    },
    "8173": {
      "op": "ISZERO"
    },
    "8174": {
      "op": "PUSH2",
      "value": "0x1FF6"
    },
    "8177": {
      "op": "JUMPI"
    },
    "8178": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8180": {
      "op": "DUP1"
    },
    "8181": {
      "op": "REVERT"
    },
    "8182": {
      "op": "JUMPDEST"
    },
    "8183": {
      "op": "DUP2"
    },
    "8184": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8186": {
      "op": "DUP6"
    },
    "8187": {
      "op": "ADD"
    },
    "8188": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8190": {
      "op": "DUP4"
    },
    "8191": {
      "op": "ADD"
    },
    "8192": {
      "op": "CALLDATACOPY"
    },
    "8193": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8195": {
      "op": "SWAP2"
    },
    "8196": {
      "op": "DUP2"
    },
    "8197": {
      "op": "ADD"
    },
    "8198": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8200": {
      "op": "ADD"
    },
    "8201": {
      "op": "SWAP2"
    },
    "8202": {
      "op": "SWAP1"
    },
    "8203": {
      "op": "SWAP2"
    },
    "8204": {
      "op": "MSTORE"
    },
    "8205": {
      "op": "SWAP4"
    },
    "8206": {
      "op": "SWAP3"
    },
    "8207": {
      "op": "POP"
    },
    "8208": {
      "op": "POP"
    },
    "8209": {
      "op": "POP"
    },
    "8210": {
      "jump": "o",
      "op": "JUMP"
    },
    "8211": {
      "op": "JUMPDEST"
    },
    "8212": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8214": {
      "op": "DUP1"
    },
    "8215": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8217": {
      "op": "DUP1"
    },
    "8218": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8220": {
      "op": "DUP6"
    },
    "8221": {
      "op": "DUP8"
    },
    "8222": {
      "op": "SUB"
    },
    "8223": {
      "op": "SLT"
    },
    "8224": {
      "op": "ISZERO"
    },
    "8225": {
      "op": "PUSH2",
      "value": "0x2029"
    },
    "8228": {
      "op": "JUMPI"
    },
    "8229": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8231": {
      "op": "DUP1"
    },
    "8232": {
      "op": "REVERT"
    },
    "8233": {
      "op": "JUMPDEST"
    },
    "8234": {
      "op": "DUP5"
    },
    "8235": {
      "op": "CALLDATALOAD"
    },
    "8236": {
      "op": "PUSH2",
      "value": "0x2034"
    },
    "8239": {
      "op": "DUP2"
    },
    "8240": {
      "op": "PUSH2",
      "value": "0x1F21"
    },
    "8243": {
      "jump": "i",
      "op": "JUMP"
    },
    "8244": {
      "op": "JUMPDEST"
    },
    "8245": {
      "op": "SWAP4"
    },
    "8246": {
      "op": "POP"
    },
    "8247": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8249": {
      "op": "DUP6"
    },
    "8250": {
      "op": "ADD"
    },
    "8251": {
      "op": "CALLDATALOAD"
    },
    "8252": {
      "op": "SWAP3"
    },
    "8253": {
      "op": "POP"
    },
    "8254": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8256": {
      "op": "DUP6"
    },
    "8257": {
      "op": "ADD"
    },
    "8258": {
      "op": "CALLDATALOAD"
    },
    "8259": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8261": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8263": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8265": {
      "op": "SHL"
    },
    "8266": {
      "op": "SUB"
    },
    "8267": {
      "op": "DUP2"
    },
    "8268": {
      "op": "GT"
    },
    "8269": {
      "op": "ISZERO"
    },
    "8270": {
      "op": "PUSH2",
      "value": "0x2056"
    },
    "8273": {
      "op": "JUMPI"
    },
    "8274": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8276": {
      "op": "DUP1"
    },
    "8277": {
      "op": "REVERT"
    },
    "8278": {
      "op": "JUMPDEST"
    },
    "8279": {
      "op": "PUSH2",
      "value": "0x2062"
    },
    "8282": {
      "op": "DUP8"
    },
    "8283": {
      "op": "DUP3"
    },
    "8284": {
      "op": "DUP9"
    },
    "8285": {
      "op": "ADD"
    },
    "8286": {
      "op": "PUSH2",
      "value": "0x1FA4"
    },
    "8289": {
      "jump": "i",
      "op": "JUMP"
    },
    "8290": {
      "op": "JUMPDEST"
    },
    "8291": {
      "op": "SWAP5"
    },
    "8292": {
      "op": "SWAP8"
    },
    "8293": {
      "op": "SWAP4"
    },
    "8294": {
      "op": "SWAP7"
    },
    "8295": {
      "op": "POP"
    },
    "8296": {
      "op": "SWAP4"
    },
    "8297": {
      "op": "SWAP5"
    },
    "8298": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8300": {
      "op": "ADD"
    },
    "8301": {
      "op": "CALLDATALOAD"
    },
    "8302": {
      "op": "SWAP4"
    },
    "8303": {
      "op": "POP"
    },
    "8304": {
      "op": "POP"
    },
    "8305": {
      "op": "POP"
    },
    "8306": {
      "jump": "o",
      "op": "JUMP"
    },
    "8307": {
      "op": "JUMPDEST"
    },
    "8308": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8310": {
      "op": "DUP1"
    },
    "8311": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8313": {
      "op": "DUP1"
    },
    "8314": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8316": {
      "op": "DUP6"
    },
    "8317": {
      "op": "DUP8"
    },
    "8318": {
      "op": "SUB"
    },
    "8319": {
      "op": "SLT"
    },
    "8320": {
      "op": "ISZERO"
    },
    "8321": {
      "op": "PUSH2",
      "value": "0x2089"
    },
    "8324": {
      "op": "JUMPI"
    },
    "8325": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8327": {
      "op": "DUP1"
    },
    "8328": {
      "op": "REVERT"
    },
    "8329": {
      "op": "JUMPDEST"
    },
    "8330": {
      "op": "DUP5"
    },
    "8331": {
      "op": "CALLDATALOAD"
    },
    "8332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8336": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8338": {
      "op": "SHL"
    },
    "8339": {
      "op": "SUB"
    },
    "8340": {
      "op": "DUP1"
    },
    "8341": {
      "op": "DUP3"
    },
    "8342": {
      "op": "GT"
    },
    "8343": {
      "op": "ISZERO"
    },
    "8344": {
      "op": "PUSH2",
      "value": "0x20A0"
    },
    "8347": {
      "op": "JUMPI"
    },
    "8348": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8350": {
      "op": "DUP1"
    },
    "8351": {
      "op": "REVERT"
    },
    "8352": {
      "op": "JUMPDEST"
    },
    "8353": {
      "op": "PUSH2",
      "value": "0x20AC"
    },
    "8356": {
      "op": "DUP9"
    },
    "8357": {
      "op": "DUP4"
    },
    "8358": {
      "op": "DUP10"
    },
    "8359": {
      "op": "ADD"
    },
    "8360": {
      "op": "PUSH2",
      "value": "0x1FA4"
    },
    "8363": {
      "jump": "i",
      "op": "JUMP"
    },
    "8364": {
      "op": "JUMPDEST"
    },
    "8365": {
      "op": "SWAP6"
    },
    "8366": {
      "op": "POP"
    },
    "8367": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8369": {
      "op": "DUP8"
    },
    "8370": {
      "op": "ADD"
    },
    "8371": {
      "op": "CALLDATALOAD"
    },
    "8372": {
      "op": "SWAP2"
    },
    "8373": {
      "op": "POP"
    },
    "8374": {
      "op": "DUP1"
    },
    "8375": {
      "op": "DUP3"
    },
    "8376": {
      "op": "GT"
    },
    "8377": {
      "op": "ISZERO"
    },
    "8378": {
      "op": "PUSH2",
      "value": "0x20C2"
    },
    "8381": {
      "op": "JUMPI"
    },
    "8382": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8384": {
      "op": "DUP1"
    },
    "8385": {
      "op": "REVERT"
    },
    "8386": {
      "op": "JUMPDEST"
    },
    "8387": {
      "op": "PUSH2",
      "value": "0x20CE"
    },
    "8390": {
      "op": "DUP9"
    },
    "8391": {
      "op": "DUP4"
    },
    "8392": {
      "op": "DUP10"
    },
    "8393": {
      "op": "ADD"
    },
    "8394": {
      "op": "PUSH2",
      "value": "0x1FA4"
    },
    "8397": {
      "jump": "i",
      "op": "JUMP"
    },
    "8398": {
      "op": "JUMPDEST"
    },
    "8399": {
      "op": "SWAP5"
    },
    "8400": {
      "op": "POP"
    },
    "8401": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8403": {
      "op": "DUP8"
    },
    "8404": {
      "op": "ADD"
    },
    "8405": {
      "op": "CALLDATALOAD"
    },
    "8406": {
      "op": "SWAP2"
    },
    "8407": {
      "op": "POP"
    },
    "8408": {
      "op": "PUSH2",
      "value": "0x20E0"
    },
    "8411": {
      "op": "DUP3"
    },
    "8412": {
      "op": "PUSH2",
      "value": "0x1F21"
    },
    "8415": {
      "jump": "i",
      "op": "JUMP"
    },
    "8416": {
      "op": "JUMPDEST"
    },
    "8417": {
      "op": "SWAP1"
    },
    "8418": {
      "op": "SWAP3"
    },
    "8419": {
      "op": "POP"
    },
    "8420": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8422": {
      "op": "DUP7"
    },
    "8423": {
      "op": "ADD"
    },
    "8424": {
      "op": "CALLDATALOAD"
    },
    "8425": {
      "op": "SWAP1"
    },
    "8426": {
      "op": "DUP1"
    },
    "8427": {
      "op": "DUP3"
    },
    "8428": {
      "op": "GT"
    },
    "8429": {
      "op": "ISZERO"
    },
    "8430": {
      "op": "PUSH2",
      "value": "0x20F6"
    },
    "8433": {
      "op": "JUMPI"
    },
    "8434": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8436": {
      "op": "DUP1"
    },
    "8437": {
      "op": "REVERT"
    },
    "8438": {
      "op": "JUMPDEST"
    },
    "8439": {
      "op": "POP"
    },
    "8440": {
      "op": "PUSH2",
      "value": "0x2103"
    },
    "8443": {
      "op": "DUP8"
    },
    "8444": {
      "op": "DUP3"
    },
    "8445": {
      "op": "DUP9"
    },
    "8446": {
      "op": "ADD"
    },
    "8447": {
      "op": "PUSH2",
      "value": "0x1FA4"
    },
    "8450": {
      "jump": "i",
      "op": "JUMP"
    },
    "8451": {
      "op": "JUMPDEST"
    },
    "8452": {
      "op": "SWAP2"
    },
    "8453": {
      "op": "POP"
    },
    "8454": {
      "op": "POP"
    },
    "8455": {
      "op": "SWAP3"
    },
    "8456": {
      "op": "SWAP6"
    },
    "8457": {
      "op": "SWAP2"
    },
    "8458": {
      "op": "SWAP5"
    },
    "8459": {
      "op": "POP"
    },
    "8460": {
      "op": "SWAP3"
    },
    "8461": {
      "op": "POP"
    },
    "8462": {
      "jump": "o",
      "op": "JUMP"
    },
    "8463": {
      "op": "JUMPDEST"
    },
    "8464": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8466": {
      "op": "DUP1"
    },
    "8467": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8469": {
      "op": "DUP1"
    },
    "8470": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8472": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8474": {
      "op": "DUP7"
    },
    "8475": {
      "op": "DUP9"
    },
    "8476": {
      "op": "SUB"
    },
    "8477": {
      "op": "SLT"
    },
    "8478": {
      "op": "ISZERO"
    },
    "8479": {
      "op": "PUSH2",
      "value": "0x2127"
    },
    "8482": {
      "op": "JUMPI"
    },
    "8483": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8485": {
      "op": "DUP1"
    },
    "8486": {
      "op": "REVERT"
    },
    "8487": {
      "op": "JUMPDEST"
    },
    "8488": {
      "op": "DUP6"
    },
    "8489": {
      "op": "CALLDATALOAD"
    },
    "8490": {
      "op": "PUSH2",
      "value": "0x2132"
    },
    "8493": {
      "op": "DUP2"
    },
    "8494": {
      "op": "PUSH2",
      "value": "0x1F21"
    },
    "8497": {
      "jump": "i",
      "op": "JUMP"
    },
    "8498": {
      "op": "JUMPDEST"
    },
    "8499": {
      "op": "SWAP5"
    },
    "8500": {
      "op": "POP"
    },
    "8501": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8503": {
      "op": "DUP7"
    },
    "8504": {
      "op": "ADD"
    },
    "8505": {
      "op": "CALLDATALOAD"
    },
    "8506": {
      "op": "PUSH2",
      "value": "0x2142"
    },
    "8509": {
      "op": "DUP2"
    },
    "8510": {
      "op": "PUSH2",
      "value": "0x1F21"
    },
    "8513": {
      "jump": "i",
      "op": "JUMP"
    },
    "8514": {
      "op": "JUMPDEST"
    },
    "8515": {
      "op": "SWAP4"
    },
    "8516": {
      "op": "POP"
    },
    "8517": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8519": {
      "op": "DUP7"
    },
    "8520": {
      "op": "ADD"
    },
    "8521": {
      "op": "CALLDATALOAD"
    },
    "8522": {
      "op": "SWAP3"
    },
    "8523": {
      "op": "POP"
    },
    "8524": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8526": {
      "op": "DUP7"
    },
    "8527": {
      "op": "ADD"
    },
    "8528": {
      "op": "CALLDATALOAD"
    },
    "8529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8533": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8535": {
      "op": "SHL"
    },
    "8536": {
      "op": "SUB"
    },
    "8537": {
      "op": "DUP2"
    },
    "8538": {
      "op": "GT"
    },
    "8539": {
      "op": "ISZERO"
    },
    "8540": {
      "op": "PUSH2",
      "value": "0x2164"
    },
    "8543": {
      "op": "JUMPI"
    },
    "8544": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8546": {
      "op": "DUP1"
    },
    "8547": {
      "op": "REVERT"
    },
    "8548": {
      "op": "JUMPDEST"
    },
    "8549": {
      "op": "PUSH2",
      "value": "0x2170"
    },
    "8552": {
      "op": "DUP9"
    },
    "8553": {
      "op": "DUP3"
    },
    "8554": {
      "op": "DUP10"
    },
    "8555": {
      "op": "ADD"
    },
    "8556": {
      "op": "PUSH2",
      "value": "0x1FA4"
    },
    "8559": {
      "jump": "i",
      "op": "JUMP"
    },
    "8560": {
      "op": "JUMPDEST"
    },
    "8561": {
      "op": "SWAP6"
    },
    "8562": {
      "op": "SWAP9"
    },
    "8563": {
      "op": "SWAP5"
    },
    "8564": {
      "op": "SWAP8"
    },
    "8565": {
      "op": "POP"
    },
    "8566": {
      "op": "SWAP3"
    },
    "8567": {
      "op": "SWAP6"
    },
    "8568": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8570": {
      "op": "ADD"
    },
    "8571": {
      "op": "CALLDATALOAD"
    },
    "8572": {
      "op": "SWAP4"
    },
    "8573": {
      "op": "SWAP3"
    },
    "8574": {
      "op": "POP"
    },
    "8575": {
      "op": "POP"
    },
    "8576": {
      "op": "POP"
    },
    "8577": {
      "jump": "o",
      "op": "JUMP"
    },
    "8578": {
      "op": "JUMPDEST"
    },
    "8579": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8581": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8583": {
      "op": "DUP3"
    },
    "8584": {
      "op": "DUP5"
    },
    "8585": {
      "op": "SUB"
    },
    "8586": {
      "op": "SLT"
    },
    "8587": {
      "op": "ISZERO"
    },
    "8588": {
      "op": "PUSH2",
      "value": "0x2194"
    },
    "8591": {
      "op": "JUMPI"
    },
    "8592": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8594": {
      "op": "DUP1"
    },
    "8595": {
      "op": "REVERT"
    },
    "8596": {
      "op": "JUMPDEST"
    },
    "8597": {
      "op": "POP"
    },
    "8598": {
      "op": "CALLDATALOAD"
    },
    "8599": {
      "op": "SWAP2"
    },
    "8600": {
      "op": "SWAP1"
    },
    "8601": {
      "op": "POP"
    },
    "8602": {
      "jump": "o",
      "op": "JUMP"
    },
    "8603": {
      "op": "JUMPDEST"
    },
    "8604": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8606": {
      "op": "JUMPDEST"
    },
    "8607": {
      "op": "DUP4"
    },
    "8608": {
      "op": "DUP2"
    },
    "8609": {
      "op": "LT"
    },
    "8610": {
      "op": "ISZERO"
    },
    "8611": {
      "op": "PUSH2",
      "value": "0x21B6"
    },
    "8614": {
      "op": "JUMPI"
    },
    "8615": {
      "op": "DUP2"
    },
    "8616": {
      "op": "DUP2"
    },
    "8617": {
      "op": "ADD"
    },
    "8618": {
      "op": "MLOAD"
    },
    "8619": {
      "op": "DUP4"
    },
    "8620": {
      "op": "DUP3"
    },
    "8621": {
      "op": "ADD"
    },
    "8622": {
      "op": "MSTORE"
    },
    "8623": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8625": {
      "op": "ADD"
    },
    "8626": {
      "op": "PUSH2",
      "value": "0x219E"
    },
    "8629": {
      "op": "JUMP"
    },
    "8630": {
      "op": "JUMPDEST"
    },
    "8631": {
      "op": "DUP4"
    },
    "8632": {
      "op": "DUP2"
    },
    "8633": {
      "op": "GT"
    },
    "8634": {
      "op": "ISZERO"
    },
    "8635": {
      "op": "PUSH2",
      "value": "0x15F5"
    },
    "8638": {
      "op": "JUMPI"
    },
    "8639": {
      "op": "POP"
    },
    "8640": {
      "op": "POP"
    },
    "8641": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8643": {
      "op": "SWAP2"
    },
    "8644": {
      "op": "ADD"
    },
    "8645": {
      "op": "MSTORE"
    },
    "8646": {
      "jump": "o",
      "op": "JUMP"
    },
    "8647": {
      "op": "JUMPDEST"
    },
    "8648": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8650": {
      "op": "DUP2"
    },
    "8651": {
      "op": "MLOAD"
    },
    "8652": {
      "op": "DUP1"
    },
    "8653": {
      "op": "DUP5"
    },
    "8654": {
      "op": "MSTORE"
    },
    "8655": {
      "op": "PUSH2",
      "value": "0x21DF"
    },
    "8658": {
      "op": "DUP2"
    },
    "8659": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8661": {
      "op": "DUP7"
    },
    "8662": {
      "op": "ADD"
    },
    "8663": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8665": {
      "op": "DUP7"
    },
    "8666": {
      "op": "ADD"
    },
    "8667": {
      "op": "PUSH2",
      "value": "0x219B"
    },
    "8670": {
      "jump": "i",
      "op": "JUMP"
    },
    "8671": {
      "op": "JUMPDEST"
    },
    "8672": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8674": {
      "op": "ADD"
    },
    "8675": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8677": {
      "op": "NOT"
    },
    "8678": {
      "op": "AND"
    },
    "8679": {
      "op": "SWAP3"
    },
    "8680": {
      "op": "SWAP1"
    },
    "8681": {
      "op": "SWAP3"
    },
    "8682": {
      "op": "ADD"
    },
    "8683": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8685": {
      "op": "ADD"
    },
    "8686": {
      "op": "SWAP3"
    },
    "8687": {
      "op": "SWAP2"
    },
    "8688": {
      "op": "POP"
    },
    "8689": {
      "op": "POP"
    },
    "8690": {
      "jump": "o",
      "op": "JUMP"
    },
    "8691": {
      "op": "JUMPDEST"
    },
    "8692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8696": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8698": {
      "op": "SHL"
    },
    "8699": {
      "op": "SUB"
    },
    "8700": {
      "op": "DUP5"
    },
    "8701": {
      "op": "AND"
    },
    "8702": {
      "op": "DUP2"
    },
    "8703": {
      "op": "MSTORE"
    },
    "8704": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8706": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8708": {
      "op": "DUP3"
    },
    "8709": {
      "op": "ADD"
    },
    "8710": {
      "op": "DUP2"
    },
    "8711": {
      "op": "SWAP1"
    },
    "8712": {
      "op": "MSTORE"
    },
    "8713": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8715": {
      "op": "SWAP1"
    },
    "8716": {
      "op": "PUSH2",
      "value": "0x2217"
    },
    "8719": {
      "op": "SWAP1"
    },
    "8720": {
      "op": "DUP4"
    },
    "8721": {
      "op": "ADD"
    },
    "8722": {
      "op": "DUP6"
    },
    "8723": {
      "op": "PUSH2",
      "value": "0x21C7"
    },
    "8726": {
      "jump": "i",
      "op": "JUMP"
    },
    "8727": {
      "op": "JUMPDEST"
    },
    "8728": {
      "op": "SWAP1"
    },
    "8729": {
      "op": "POP"
    },
    "8730": {
      "op": "DUP3"
    },
    "8731": {
      "op": "ISZERO"
    },
    "8732": {
      "op": "ISZERO"
    },
    "8733": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8735": {
      "op": "DUP4"
    },
    "8736": {
      "op": "ADD"
    },
    "8737": {
      "op": "MSTORE"
    },
    "8738": {
      "op": "SWAP5"
    },
    "8739": {
      "op": "SWAP4"
    },
    "8740": {
      "op": "POP"
    },
    "8741": {
      "op": "POP"
    },
    "8742": {
      "op": "POP"
    },
    "8743": {
      "op": "POP"
    },
    "8744": {
      "jump": "o",
      "op": "JUMP"
    },
    "8745": {
      "op": "JUMPDEST"
    },
    "8746": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8748": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8750": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8752": {
      "op": "SHL"
    },
    "8753": {
      "op": "SUB"
    },
    "8754": {
      "op": "DUP7"
    },
    "8755": {
      "op": "AND"
    },
    "8756": {
      "op": "DUP2"
    },
    "8757": {
      "op": "MSTORE"
    },
    "8758": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8760": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8762": {
      "op": "DUP3"
    },
    "8763": {
      "op": "ADD"
    },
    "8764": {
      "op": "DUP2"
    },
    "8765": {
      "op": "SWAP1"
    },
    "8766": {
      "op": "MSTORE"
    },
    "8767": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8769": {
      "op": "SWAP1"
    },
    "8770": {
      "op": "PUSH2",
      "value": "0x224D"
    },
    "8773": {
      "op": "SWAP1"
    },
    "8774": {
      "op": "DUP4"
    },
    "8775": {
      "op": "ADD"
    },
    "8776": {
      "op": "DUP8"
    },
    "8777": {
      "op": "PUSH2",
      "value": "0x21C7"
    },
    "8780": {
      "jump": "i",
      "op": "JUMP"
    },
    "8781": {
      "op": "JUMPDEST"
    },
    "8782": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8784": {
      "op": "DUP4"
    },
    "8785": {
      "op": "ADD"
    },
    "8786": {
      "op": "SWAP6"
    },
    "8787": {
      "op": "SWAP1"
    },
    "8788": {
      "op": "SWAP6"
    },
    "8789": {
      "op": "MSTORE"
    },
    "8790": {
      "op": "POP"
    },
    "8791": {
      "op": "SWAP2"
    },
    "8792": {
      "op": "ISZERO"
    },
    "8793": {
      "op": "ISZERO"
    },
    "8794": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8796": {
      "op": "DUP4"
    },
    "8797": {
      "op": "ADD"
    },
    "8798": {
      "op": "MSTORE"
    },
    "8799": {
      "op": "ISZERO"
    },
    "8800": {
      "op": "ISZERO"
    },
    "8801": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8803": {
      "op": "SWAP1"
    },
    "8804": {
      "op": "SWAP2"
    },
    "8805": {
      "op": "ADD"
    },
    "8806": {
      "op": "MSTORE"
    },
    "8807": {
      "op": "SWAP3"
    },
    "8808": {
      "op": "SWAP2"
    },
    "8809": {
      "op": "POP"
    },
    "8810": {
      "op": "POP"
    },
    "8811": {
      "jump": "o",
      "op": "JUMP"
    },
    "8812": {
      "op": "JUMPDEST"
    },
    "8813": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8815": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8817": {
      "op": "DUP1"
    },
    "8818": {
      "op": "DUP4"
    },
    "8819": {
      "op": "ADD"
    },
    "8820": {
      "op": "DUP2"
    },
    "8821": {
      "op": "DUP5"
    },
    "8822": {
      "op": "MSTORE"
    },
    "8823": {
      "op": "DUP1"
    },
    "8824": {
      "op": "DUP6"
    },
    "8825": {
      "op": "MLOAD"
    },
    "8826": {
      "op": "DUP1"
    },
    "8827": {
      "op": "DUP4"
    },
    "8828": {
      "op": "MSTORE"
    },
    "8829": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8831": {
      "op": "SWAP3"
    },
    "8832": {
      "op": "POP"
    },
    "8833": {
      "op": "DUP3"
    },
    "8834": {
      "op": "DUP7"
    },
    "8835": {
      "op": "ADD"
    },
    "8836": {
      "op": "SWAP2"
    },
    "8837": {
      "op": "POP"
    },
    "8838": {
      "op": "DUP3"
    },
    "8839": {
      "op": "DUP2"
    },
    "8840": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "8842": {
      "op": "SHL"
    },
    "8843": {
      "op": "DUP8"
    },
    "8844": {
      "op": "ADD"
    },
    "8845": {
      "op": "ADD"
    },
    "8846": {
      "op": "DUP5"
    },
    "8847": {
      "op": "DUP9"
    },
    "8848": {
      "op": "ADD"
    },
    "8849": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8851": {
      "op": "JUMPDEST"
    },
    "8852": {
      "op": "DUP4"
    },
    "8853": {
      "op": "DUP2"
    },
    "8854": {
      "op": "LT"
    },
    "8855": {
      "op": "ISZERO"
    },
    "8856": {
      "op": "PUSH2",
      "value": "0x22EC"
    },
    "8859": {
      "op": "JUMPI"
    },
    "8860": {
      "op": "DUP9"
    },
    "8861": {
      "op": "DUP4"
    },
    "8862": {
      "op": "SUB"
    },
    "8863": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "8865": {
      "op": "NOT"
    },
    "8866": {
      "op": "ADD"
    },
    "8867": {
      "op": "DUP6"
    },
    "8868": {
      "op": "MSTORE"
    },
    "8869": {
      "op": "DUP2"
    },
    "8870": {
      "op": "MLOAD"
    },
    "8871": {
      "op": "DUP1"
    },
    "8872": {
      "op": "MLOAD"
    },
    "8873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8877": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8879": {
      "op": "SHL"
    },
    "8880": {
      "op": "SUB"
    },
    "8881": {
      "op": "AND"
    },
    "8882": {
      "op": "DUP5"
    },
    "8883": {
      "op": "MSTORE"
    },
    "8884": {
      "op": "DUP8"
    },
    "8885": {
      "op": "DUP2"
    },
    "8886": {
      "op": "ADD"
    },
    "8887": {
      "op": "MLOAD"
    },
    "8888": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8890": {
      "op": "DUP10"
    },
    "8891": {
      "op": "DUP7"
    },
    "8892": {
      "op": "ADD"
    },
    "8893": {
      "op": "DUP2"
    },
    "8894": {
      "op": "SWAP1"
    },
    "8895": {
      "op": "MSTORE"
    },
    "8896": {
      "op": "SWAP1"
    },
    "8897": {
      "op": "PUSH2",
      "value": "0x22CC"
    },
    "8900": {
      "op": "DUP3"
    },
    "8901": {
      "op": "DUP8"
    },
    "8902": {
      "op": "ADD"
    },
    "8903": {
      "op": "DUP3"
    },
    "8904": {
      "op": "PUSH2",
      "value": "0x21C7"
    },
    "8907": {
      "jump": "i",
      "op": "JUMP"
    },
    "8908": {
      "op": "JUMPDEST"
    },
    "8909": {
      "op": "SWAP3"
    },
    "8910": {
      "op": "DUP10"
    },
    "8911": {
      "op": "ADD"
    },
    "8912": {
      "op": "MLOAD"
    },
    "8913": {
      "op": "ISZERO"
    },
    "8914": {
      "op": "ISZERO"
    },
    "8915": {
      "op": "SWAP6"
    },
    "8916": {
      "op": "DUP10"
    },
    "8917": {
      "op": "ADD"
    },
    "8918": {
      "op": "SWAP6"
    },
    "8919": {
      "op": "SWAP1"
    },
    "8920": {
      "op": "SWAP6"
    },
    "8921": {
      "op": "MSTORE"
    },
    "8922": {
      "op": "POP"
    },
    "8923": {
      "op": "SWAP5"
    },
    "8924": {
      "op": "DUP8"
    },
    "8925": {
      "op": "ADD"
    },
    "8926": {
      "op": "SWAP5"
    },
    "8927": {
      "op": "SWAP3"
    },
    "8928": {
      "op": "POP"
    },
    "8929": {
      "op": "SWAP1"
    },
    "8930": {
      "op": "DUP7"
    },
    "8931": {
      "op": "ADD"
    },
    "8932": {
      "op": "SWAP1"
    },
    "8933": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8935": {
      "op": "ADD"
    },
    "8936": {
      "op": "PUSH2",
      "value": "0x2293"
    },
    "8939": {
      "op": "JUMP"
    },
    "8940": {
      "op": "JUMPDEST"
    },
    "8941": {
      "op": "POP"
    },
    "8942": {
      "op": "SWAP1"
    },
    "8943": {
      "op": "SWAP9"
    },
    "8944": {
      "op": "SWAP8"
    },
    "8945": {
      "op": "POP"
    },
    "8946": {
      "op": "POP"
    },
    "8947": {
      "op": "POP"
    },
    "8948": {
      "op": "POP"
    },
    "8949": {
      "op": "POP"
    },
    "8950": {
      "op": "POP"
    },
    "8951": {
      "op": "POP"
    },
    "8952": {
      "op": "POP"
    },
    "8953": {
      "jump": "o",
      "op": "JUMP"
    },
    "8954": {
      "op": "JUMPDEST"
    },
    "8955": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8957": {
      "op": "DUP1"
    },
    "8958": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8960": {
      "op": "DUP1"
    },
    "8961": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8963": {
      "op": "DUP6"
    },
    "8964": {
      "op": "DUP8"
    },
    "8965": {
      "op": "SUB"
    },
    "8966": {
      "op": "SLT"
    },
    "8967": {
      "op": "ISZERO"
    },
    "8968": {
      "op": "PUSH2",
      "value": "0x2310"
    },
    "8971": {
      "op": "JUMPI"
    },
    "8972": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8974": {
      "op": "DUP1"
    },
    "8975": {
      "op": "REVERT"
    },
    "8976": {
      "op": "JUMPDEST"
    },
    "8977": {
      "op": "DUP5"
    },
    "8978": {
      "op": "CALLDATALOAD"
    },
    "8979": {
      "op": "PUSH2",
      "value": "0x231B"
    },
    "8982": {
      "op": "DUP2"
    },
    "8983": {
      "op": "PUSH2",
      "value": "0x1F21"
    },
    "8986": {
      "jump": "i",
      "op": "JUMP"
    },
    "8987": {
      "op": "JUMPDEST"
    },
    "8988": {
      "op": "SWAP4"
    },
    "8989": {
      "op": "POP"
    },
    "8990": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8992": {
      "op": "DUP6"
    },
    "8993": {
      "op": "ADD"
    },
    "8994": {
      "op": "CALLDATALOAD"
    },
    "8995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8997": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8999": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9001": {
      "op": "SHL"
    },
    "9002": {
      "op": "SUB"
    },
    "9003": {
      "op": "DUP1"
    },
    "9004": {
      "op": "DUP3"
    },
    "9005": {
      "op": "GT"
    },
    "9006": {
      "op": "ISZERO"
    },
    "9007": {
      "op": "PUSH2",
      "value": "0x2337"
    },
    "9010": {
      "op": "JUMPI"
    },
    "9011": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9013": {
      "op": "DUP1"
    },
    "9014": {
      "op": "REVERT"
    },
    "9015": {
      "op": "JUMPDEST"
    },
    "9016": {
      "op": "PUSH2",
      "value": "0x2343"
    },
    "9019": {
      "op": "DUP9"
    },
    "9020": {
      "op": "DUP4"
    },
    "9021": {
      "op": "DUP10"
    },
    "9022": {
      "op": "ADD"
    },
    "9023": {
      "op": "PUSH2",
      "value": "0x1FA4"
    },
    "9026": {
      "jump": "i",
      "op": "JUMP"
    },
    "9027": {
      "op": "JUMPDEST"
    },
    "9028": {
      "op": "SWAP5"
    },
    "9029": {
      "op": "POP"
    },
    "9030": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9032": {
      "op": "DUP8"
    },
    "9033": {
      "op": "ADD"
    },
    "9034": {
      "op": "CALLDATALOAD"
    },
    "9035": {
      "op": "SWAP4"
    },
    "9036": {
      "op": "POP"
    },
    "9037": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9039": {
      "op": "DUP8"
    },
    "9040": {
      "op": "ADD"
    },
    "9041": {
      "op": "CALLDATALOAD"
    },
    "9042": {
      "op": "SWAP2"
    },
    "9043": {
      "op": "POP"
    },
    "9044": {
      "op": "DUP1"
    },
    "9045": {
      "op": "DUP3"
    },
    "9046": {
      "op": "GT"
    },
    "9047": {
      "op": "ISZERO"
    },
    "9048": {
      "op": "PUSH2",
      "value": "0x20F6"
    },
    "9051": {
      "op": "JUMPI"
    },
    "9052": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9054": {
      "op": "DUP1"
    },
    "9055": {
      "op": "REVERT"
    },
    "9056": {
      "op": "JUMPDEST"
    },
    "9057": {
      "op": "DUP1"
    },
    "9058": {
      "op": "CALLDATALOAD"
    },
    "9059": {
      "op": "DUP1"
    },
    "9060": {
      "op": "ISZERO"
    },
    "9061": {
      "op": "ISZERO"
    },
    "9062": {
      "op": "DUP2"
    },
    "9063": {
      "op": "EQ"
    },
    "9064": {
      "op": "PUSH2",
      "value": "0x2370"
    },
    "9067": {
      "op": "JUMPI"
    },
    "9068": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9070": {
      "op": "DUP1"
    },
    "9071": {
      "op": "REVERT"
    },
    "9072": {
      "op": "JUMPDEST"
    },
    "9073": {
      "op": "SWAP2"
    },
    "9074": {
      "op": "SWAP1"
    },
    "9075": {
      "op": "POP"
    },
    "9076": {
      "jump": "o",
      "op": "JUMP"
    },
    "9077": {
      "op": "JUMPDEST"
    },
    "9078": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9080": {
      "op": "DUP1"
    },
    "9081": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9083": {
      "op": "DUP1"
    },
    "9084": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9086": {
      "op": "DUP1"
    },
    "9087": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "9089": {
      "op": "DUP8"
    },
    "9090": {
      "op": "DUP10"
    },
    "9091": {
      "op": "SUB"
    },
    "9092": {
      "op": "SLT"
    },
    "9093": {
      "op": "ISZERO"
    },
    "9094": {
      "op": "PUSH2",
      "value": "0x238E"
    },
    "9097": {
      "op": "JUMPI"
    },
    "9098": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9100": {
      "op": "DUP1"
    },
    "9101": {
      "op": "REVERT"
    },
    "9102": {
      "op": "JUMPDEST"
    },
    "9103": {
      "op": "DUP7"
    },
    "9104": {
      "op": "CALLDATALOAD"
    },
    "9105": {
      "op": "PUSH2",
      "value": "0x2399"
    },
    "9108": {
      "op": "DUP2"
    },
    "9109": {
      "op": "PUSH2",
      "value": "0x1F21"
    },
    "9112": {
      "jump": "i",
      "op": "JUMP"
    },
    "9113": {
      "op": "JUMPDEST"
    },
    "9114": {
      "op": "SWAP6"
    },
    "9115": {
      "op": "POP"
    },
    "9116": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9118": {
      "op": "DUP8"
    },
    "9119": {
      "op": "ADD"
    },
    "9120": {
      "op": "CALLDATALOAD"
    },
    "9121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9123": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9125": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9127": {
      "op": "SHL"
    },
    "9128": {
      "op": "SUB"
    },
    "9129": {
      "op": "DUP1"
    },
    "9130": {
      "op": "DUP3"
    },
    "9131": {
      "op": "GT"
    },
    "9132": {
      "op": "ISZERO"
    },
    "9133": {
      "op": "PUSH2",
      "value": "0x23B5"
    },
    "9136": {
      "op": "JUMPI"
    },
    "9137": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9139": {
      "op": "DUP1"
    },
    "9140": {
      "op": "REVERT"
    },
    "9141": {
      "op": "JUMPDEST"
    },
    "9142": {
      "op": "PUSH2",
      "value": "0x23C1"
    },
    "9145": {
      "op": "DUP11"
    },
    "9146": {
      "op": "DUP4"
    },
    "9147": {
      "op": "DUP12"
    },
    "9148": {
      "op": "ADD"
    },
    "9149": {
      "op": "PUSH2",
      "value": "0x1FA4"
    },
    "9152": {
      "jump": "i",
      "op": "JUMP"
    },
    "9153": {
      "op": "JUMPDEST"
    },
    "9154": {
      "op": "SWAP7"
    },
    "9155": {
      "op": "POP"
    },
    "9156": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9158": {
      "op": "DUP10"
    },
    "9159": {
      "op": "ADD"
    },
    "9160": {
      "op": "CALLDATALOAD"
    },
    "9161": {
      "op": "SWAP2"
    },
    "9162": {
      "op": "POP"
    },
    "9163": {
      "op": "DUP1"
    },
    "9164": {
      "op": "DUP3"
    },
    "9165": {
      "op": "GT"
    },
    "9166": {
      "op": "ISZERO"
    },
    "9167": {
      "op": "PUSH2",
      "value": "0x23D7"
    },
    "9170": {
      "op": "JUMPI"
    },
    "9171": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9173": {
      "op": "DUP1"
    },
    "9174": {
      "op": "REVERT"
    },
    "9175": {
      "op": "JUMPDEST"
    },
    "9176": {
      "op": "PUSH2",
      "value": "0x23E3"
    },
    "9179": {
      "op": "DUP11"
    },
    "9180": {
      "op": "DUP4"
    },
    "9181": {
      "op": "DUP12"
    },
    "9182": {
      "op": "ADD"
    },
    "9183": {
      "op": "PUSH2",
      "value": "0x1FA4"
    },
    "9186": {
      "jump": "i",
      "op": "JUMP"
    },
    "9187": {
      "op": "JUMPDEST"
    },
    "9188": {
      "op": "SWAP6"
    },
    "9189": {
      "op": "POP"
    },
    "9190": {
      "op": "PUSH2",
      "value": "0x23F1"
    },
    "9193": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9195": {
      "op": "DUP11"
    },
    "9196": {
      "op": "ADD"
    },
    "9197": {
      "op": "PUSH2",
      "value": "0x2360"
    },
    "9200": {
      "jump": "i",
      "op": "JUMP"
    },
    "9201": {
      "op": "JUMPDEST"
    },
    "9202": {
      "op": "SWAP5"
    },
    "9203": {
      "op": "POP"
    },
    "9204": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9206": {
      "op": "DUP10"
    },
    "9207": {
      "op": "ADD"
    },
    "9208": {
      "op": "CALLDATALOAD"
    },
    "9209": {
      "op": "SWAP4"
    },
    "9210": {
      "op": "POP"
    },
    "9211": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9213": {
      "op": "DUP10"
    },
    "9214": {
      "op": "ADD"
    },
    "9215": {
      "op": "CALLDATALOAD"
    },
    "9216": {
      "op": "SWAP2"
    },
    "9217": {
      "op": "POP"
    },
    "9218": {
      "op": "DUP1"
    },
    "9219": {
      "op": "DUP3"
    },
    "9220": {
      "op": "GT"
    },
    "9221": {
      "op": "ISZERO"
    },
    "9222": {
      "op": "PUSH2",
      "value": "0x240E"
    },
    "9225": {
      "op": "JUMPI"
    },
    "9226": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9228": {
      "op": "DUP1"
    },
    "9229": {
      "op": "REVERT"
    },
    "9230": {
      "op": "JUMPDEST"
    },
    "9231": {
      "op": "POP"
    },
    "9232": {
      "op": "PUSH2",
      "value": "0x241B"
    },
    "9235": {
      "op": "DUP10"
    },
    "9236": {
      "op": "DUP3"
    },
    "9237": {
      "op": "DUP11"
    },
    "9238": {
      "op": "ADD"
    },
    "9239": {
      "op": "PUSH2",
      "value": "0x1FA4"
    },
    "9242": {
      "jump": "i",
      "op": "JUMP"
    },
    "9243": {
      "op": "JUMPDEST"
    },
    "9244": {
      "op": "SWAP2"
    },
    "9245": {
      "op": "POP"
    },
    "9246": {
      "op": "POP"
    },
    "9247": {
      "op": "SWAP3"
    },
    "9248": {
      "op": "SWAP6"
    },
    "9249": {
      "op": "POP"
    },
    "9250": {
      "op": "SWAP3"
    },
    "9251": {
      "op": "SWAP6"
    },
    "9252": {
      "op": "POP"
    },
    "9253": {
      "op": "SWAP3"
    },
    "9254": {
      "op": "SWAP6"
    },
    "9255": {
      "jump": "o",
      "op": "JUMP"
    },
    "9256": {
      "op": "JUMPDEST"
    },
    "9257": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9259": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9261": {
      "op": "DUP3"
    },
    "9262": {
      "op": "DUP5"
    },
    "9263": {
      "op": "SUB"
    },
    "9264": {
      "op": "SLT"
    },
    "9265": {
      "op": "ISZERO"
    },
    "9266": {
      "op": "PUSH2",
      "value": "0x243A"
    },
    "9269": {
      "op": "JUMPI"
    },
    "9270": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9272": {
      "op": "DUP1"
    },
    "9273": {
      "op": "REVERT"
    },
    "9274": {
      "op": "JUMPDEST"
    },
    "9275": {
      "op": "DUP2"
    },
    "9276": {
      "op": "CALLDATALOAD"
    },
    "9277": {
      "op": "PUSH2",
      "value": "0x2445"
    },
    "9280": {
      "op": "DUP2"
    },
    "9281": {
      "op": "PUSH2",
      "value": "0x1F21"
    },
    "9284": {
      "jump": "i",
      "op": "JUMP"
    },
    "9285": {
      "op": "JUMPDEST"
    },
    "9286": {
      "op": "SWAP4"
    },
    "9287": {
      "op": "SWAP3"
    },
    "9288": {
      "op": "POP"
    },
    "9289": {
      "op": "POP"
    },
    "9290": {
      "op": "POP"
    },
    "9291": {
      "jump": "o",
      "op": "JUMP"
    },
    "9292": {
      "op": "JUMPDEST"
    },
    "9293": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9295": {
      "op": "DUP2"
    },
    "9296": {
      "op": "MSTORE"
    },
    "9297": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9299": {
      "op": "PUSH2",
      "value": "0x2445"
    },
    "9302": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9304": {
      "op": "DUP4"
    },
    "9305": {
      "op": "ADD"
    },
    "9306": {
      "op": "DUP5"
    },
    "9307": {
      "op": "PUSH2",
      "value": "0x21C7"
    },
    "9310": {
      "jump": "i",
      "op": "JUMP"
    },
    "9311": {
      "op": "JUMPDEST"
    },
    "9312": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9314": {
      "op": "DUP1"
    },
    "9315": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9317": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9319": {
      "op": "DUP5"
    },
    "9320": {
      "op": "DUP7"
    },
    "9321": {
      "op": "SUB"
    },
    "9322": {
      "op": "SLT"
    },
    "9323": {
      "op": "ISZERO"
    },
    "9324": {
      "op": "PUSH2",
      "value": "0x2474"
    },
    "9327": {
      "op": "JUMPI"
    },
    "9328": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9330": {
      "op": "DUP1"
    },
    "9331": {
      "op": "REVERT"
    },
    "9332": {
      "op": "JUMPDEST"
    },
    "9333": {
      "op": "DUP4"
    },
    "9334": {
      "op": "CALLDATALOAD"
    },
    "9335": {
      "op": "SWAP3"
    },
    "9336": {
      "op": "POP"
    },
    "9337": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9339": {
      "op": "DUP5"
    },
    "9340": {
      "op": "ADD"
    },
    "9341": {
      "op": "CALLDATALOAD"
    },
    "9342": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9346": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9348": {
      "op": "SHL"
    },
    "9349": {
      "op": "SUB"
    },
    "9350": {
      "op": "DUP2"
    },
    "9351": {
      "op": "GT"
    },
    "9352": {
      "op": "ISZERO"
    },
    "9353": {
      "op": "PUSH2",
      "value": "0x2491"
    },
    "9356": {
      "op": "JUMPI"
    },
    "9357": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9359": {
      "op": "DUP1"
    },
    "9360": {
      "op": "REVERT"
    },
    "9361": {
      "op": "JUMPDEST"
    },
    "9362": {
      "op": "PUSH2",
      "value": "0x249D"
    },
    "9365": {
      "op": "DUP7"
    },
    "9366": {
      "op": "DUP3"
    },
    "9367": {
      "op": "DUP8"
    },
    "9368": {
      "op": "ADD"
    },
    "9369": {
      "op": "PUSH2",
      "value": "0x1FA4"
    },
    "9372": {
      "jump": "i",
      "op": "JUMP"
    },
    "9373": {
      "op": "JUMPDEST"
    },
    "9374": {
      "op": "SWAP3"
    },
    "9375": {
      "op": "POP"
    },
    "9376": {
      "op": "POP"
    },
    "9377": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9379": {
      "op": "DUP5"
    },
    "9380": {
      "op": "ADD"
    },
    "9381": {
      "op": "CALLDATALOAD"
    },
    "9382": {
      "op": "SWAP1"
    },
    "9383": {
      "op": "POP"
    },
    "9384": {
      "op": "SWAP3"
    },
    "9385": {
      "op": "POP"
    },
    "9386": {
      "op": "SWAP3"
    },
    "9387": {
      "op": "POP"
    },
    "9388": {
      "op": "SWAP3"
    },
    "9389": {
      "jump": "o",
      "op": "JUMP"
    },
    "9390": {
      "op": "JUMPDEST"
    },
    "9391": {
      "op": "DUP3"
    },
    "9392": {
      "op": "ISZERO"
    },
    "9393": {
      "op": "ISZERO"
    },
    "9394": {
      "op": "DUP2"
    },
    "9395": {
      "op": "MSTORE"
    },
    "9396": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9398": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9400": {
      "op": "DUP3"
    },
    "9401": {
      "op": "ADD"
    },
    "9402": {
      "op": "MSTORE"
    },
    "9403": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9405": {
      "op": "PUSH2",
      "value": "0x24C9"
    },
    "9408": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9410": {
      "op": "DUP4"
    },
    "9411": {
      "op": "ADD"
    },
    "9412": {
      "op": "DUP5"
    },
    "9413": {
      "op": "PUSH2",
      "value": "0x21C7"
    },
    "9416": {
      "jump": "i",
      "op": "JUMP"
    },
    "9417": {
      "op": "JUMPDEST"
    },
    "9418": {
      "op": "SWAP5"
    },
    "9419": {
      "op": "SWAP4"
    },
    "9420": {
      "op": "POP"
    },
    "9421": {
      "op": "POP"
    },
    "9422": {
      "op": "POP"
    },
    "9423": {
      "op": "POP"
    },
    "9424": {
      "jump": "o",
      "op": "JUMP"
    },
    "9425": {
      "op": "JUMPDEST"
    },
    "9426": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9428": {
      "op": "DUP1"
    },
    "9429": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9431": {
      "op": "DUP1"
    },
    "9432": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9434": {
      "op": "DUP6"
    },
    "9435": {
      "op": "DUP8"
    },
    "9436": {
      "op": "SUB"
    },
    "9437": {
      "op": "SLT"
    },
    "9438": {
      "op": "ISZERO"
    },
    "9439": {
      "op": "PUSH2",
      "value": "0x24E7"
    },
    "9442": {
      "op": "JUMPI"
    },
    "9443": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9445": {
      "op": "DUP1"
    },
    "9446": {
      "op": "REVERT"
    },
    "9447": {
      "op": "JUMPDEST"
    },
    "9448": {
      "op": "DUP5"
    },
    "9449": {
      "op": "CALLDATALOAD"
    },
    "9450": {
      "op": "SWAP4"
    },
    "9451": {
      "op": "POP"
    },
    "9452": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9454": {
      "op": "DUP6"
    },
    "9455": {
      "op": "ADD"
    },
    "9456": {
      "op": "CALLDATALOAD"
    },
    "9457": {
      "op": "SWAP3"
    },
    "9458": {
      "op": "POP"
    },
    "9459": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9461": {
      "op": "DUP6"
    },
    "9462": {
      "op": "ADD"
    },
    "9463": {
      "op": "CALLDATALOAD"
    },
    "9464": {
      "op": "SWAP2"
    },
    "9465": {
      "op": "POP"
    },
    "9466": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9468": {
      "op": "DUP6"
    },
    "9469": {
      "op": "ADD"
    },
    "9470": {
      "op": "CALLDATALOAD"
    },
    "9471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9473": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9475": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9477": {
      "op": "SHL"
    },
    "9478": {
      "op": "SUB"
    },
    "9479": {
      "op": "DUP2"
    },
    "9480": {
      "op": "GT"
    },
    "9481": {
      "op": "ISZERO"
    },
    "9482": {
      "op": "PUSH2",
      "value": "0x2512"
    },
    "9485": {
      "op": "JUMPI"
    },
    "9486": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9488": {
      "op": "DUP1"
    },
    "9489": {
      "op": "REVERT"
    },
    "9490": {
      "op": "JUMPDEST"
    },
    "9491": {
      "op": "PUSH2",
      "value": "0x2103"
    },
    "9494": {
      "op": "DUP8"
    },
    "9495": {
      "op": "DUP3"
    },
    "9496": {
      "op": "DUP9"
    },
    "9497": {
      "op": "ADD"
    },
    "9498": {
      "op": "PUSH2",
      "value": "0x1FA4"
    },
    "9501": {
      "jump": "i",
      "op": "JUMP"
    },
    "9502": {
      "op": "JUMPDEST"
    },
    "9503": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9505": {
      "op": "DUP1"
    },
    "9506": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9508": {
      "op": "DUP4"
    },
    "9509": {
      "op": "DUP6"
    },
    "9510": {
      "op": "SUB"
    },
    "9511": {
      "op": "SLT"
    },
    "9512": {
      "op": "ISZERO"
    },
    "9513": {
      "op": "PUSH2",
      "value": "0x2531"
    },
    "9516": {
      "op": "JUMPI"
    },
    "9517": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9519": {
      "op": "DUP1"
    },
    "9520": {
      "op": "REVERT"
    },
    "9521": {
      "op": "JUMPDEST"
    },
    "9522": {
      "op": "PUSH2",
      "value": "0x253A"
    },
    "9525": {
      "op": "DUP4"
    },
    "9526": {
      "op": "PUSH2",
      "value": "0x2360"
    },
    "9529": {
      "jump": "i",
      "op": "JUMP"
    },
    "9530": {
      "op": "JUMPDEST"
    },
    "9531": {
      "op": "SWAP2"
    },
    "9532": {
      "op": "POP"
    },
    "9533": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9535": {
      "op": "DUP4"
    },
    "9536": {
      "op": "ADD"
    },
    "9537": {
      "op": "CALLDATALOAD"
    },
    "9538": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9542": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9544": {
      "op": "SHL"
    },
    "9545": {
      "op": "SUB"
    },
    "9546": {
      "op": "DUP2"
    },
    "9547": {
      "op": "GT"
    },
    "9548": {
      "op": "ISZERO"
    },
    "9549": {
      "op": "PUSH2",
      "value": "0x2555"
    },
    "9552": {
      "op": "JUMPI"
    },
    "9553": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9555": {
      "op": "DUP1"
    },
    "9556": {
      "op": "REVERT"
    },
    "9557": {
      "op": "JUMPDEST"
    },
    "9558": {
      "op": "PUSH2",
      "value": "0x2561"
    },
    "9561": {
      "op": "DUP6"
    },
    "9562": {
      "op": "DUP3"
    },
    "9563": {
      "op": "DUP7"
    },
    "9564": {
      "op": "ADD"
    },
    "9565": {
      "op": "PUSH2",
      "value": "0x1FA4"
    },
    "9568": {
      "jump": "i",
      "op": "JUMP"
    },
    "9569": {
      "op": "JUMPDEST"
    },
    "9570": {
      "op": "SWAP2"
    },
    "9571": {
      "op": "POP"
    },
    "9572": {
      "op": "POP"
    },
    "9573": {
      "op": "SWAP3"
    },
    "9574": {
      "op": "POP"
    },
    "9575": {
      "op": "SWAP3"
    },
    "9576": {
      "op": "SWAP1"
    },
    "9577": {
      "op": "POP"
    },
    "9578": {
      "jump": "o",
      "op": "JUMP"
    },
    "9579": {
      "op": "JUMPDEST"
    },
    "9580": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9584": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9586": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9588": {
      "op": "SHL"
    },
    "9589": {
      "op": "SUB"
    },
    "9590": {
      "op": "DUP3"
    },
    "9591": {
      "op": "GT"
    },
    "9592": {
      "op": "ISZERO"
    },
    "9593": {
      "op": "PUSH2",
      "value": "0x2584"
    },
    "9596": {
      "op": "JUMPI"
    },
    "9597": {
      "op": "PUSH2",
      "value": "0x2584"
    },
    "9600": {
      "op": "PUSH2",
      "value": "0x1F36"
    },
    "9603": {
      "jump": "i",
      "op": "JUMP"
    },
    "9604": {
      "op": "JUMPDEST"
    },
    "9605": {
      "op": "POP"
    },
    "9606": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "9608": {
      "op": "SHL"
    },
    "9609": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9611": {
      "op": "ADD"
    },
    "9612": {
      "op": "SWAP1"
    },
    "9613": {
      "jump": "o",
      "op": "JUMP"
    },
    "9614": {
      "op": "JUMPDEST"
    },
    "9615": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9617": {
      "op": "DUP1"
    },
    "9618": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9620": {
      "op": "DUP1"
    },
    "9621": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9623": {
      "op": "DUP6"
    },
    "9624": {
      "op": "DUP8"
    },
    "9625": {
      "op": "SUB"
    },
    "9626": {
      "op": "SLT"
    },
    "9627": {
      "op": "ISZERO"
    },
    "9628": {
      "op": "PUSH2",
      "value": "0x25A4"
    },
    "9631": {
      "op": "JUMPI"
    },
    "9632": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9634": {
      "op": "DUP1"
    },
    "9635": {
      "op": "REVERT"
    },
    "9636": {
      "op": "JUMPDEST"
    },
    "9637": {
      "op": "DUP5"
    },
    "9638": {
      "op": "CALLDATALOAD"
    },
    "9639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9641": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9643": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9645": {
      "op": "SHL"
    },
    "9646": {
      "op": "SUB"
    },
    "9647": {
      "op": "DUP1"
    },
    "9648": {
      "op": "DUP3"
    },
    "9649": {
      "op": "GT"
    },
    "9650": {
      "op": "ISZERO"
    },
    "9651": {
      "op": "PUSH2",
      "value": "0x25BB"
    },
    "9654": {
      "op": "JUMPI"
    },
    "9655": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9657": {
      "op": "DUP1"
    },
    "9658": {
      "op": "REVERT"
    },
    "9659": {
      "op": "JUMPDEST"
    },
    "9660": {
      "op": "DUP2"
    },
    "9661": {
      "op": "DUP8"
    },
    "9662": {
      "op": "ADD"
    },
    "9663": {
      "op": "SWAP2"
    },
    "9664": {
      "op": "POP"
    },
    "9665": {
      "op": "DUP8"
    },
    "9666": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9668": {
      "op": "DUP4"
    },
    "9669": {
      "op": "ADD"
    },
    "9670": {
      "op": "SLT"
    },
    "9671": {
      "op": "PUSH2",
      "value": "0x25CF"
    },
    "9674": {
      "op": "JUMPI"
    },
    "9675": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9677": {
      "op": "DUP1"
    },
    "9678": {
      "op": "REVERT"
    },
    "9679": {
      "op": "JUMPDEST"
    },
    "9680": {
      "op": "DUP2"
    },
    "9681": {
      "op": "CALLDATALOAD"
    },
    "9682": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9684": {
      "op": "PUSH2",
      "value": "0x25E4"
    },
    "9687": {
      "op": "PUSH2",
      "value": "0x25DF"
    },
    "9690": {
      "op": "DUP4"
    },
    "9691": {
      "op": "PUSH2",
      "value": "0x256B"
    },
    "9694": {
      "jump": "i",
      "op": "JUMP"
    },
    "9695": {
      "op": "JUMPDEST"
    },
    "9696": {
      "op": "PUSH2",
      "value": "0x1F74"
    },
    "9699": {
      "jump": "i",
      "op": "JUMP"
    },
    "9700": {
      "op": "JUMPDEST"
    },
    "9701": {
      "op": "DUP3"
    },
    "9702": {
      "op": "DUP2"
    },
    "9703": {
      "op": "MSTORE"
    },
    "9704": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "9706": {
      "op": "SWAP3"
    },
    "9707": {
      "op": "SWAP1"
    },
    "9708": {
      "op": "SWAP3"
    },
    "9709": {
      "op": "SHL"
    },
    "9710": {
      "op": "DUP5"
    },
    "9711": {
      "op": "ADD"
    },
    "9712": {
      "op": "DUP2"
    },
    "9713": {
      "op": "ADD"
    },
    "9714": {
      "op": "SWAP2"
    },
    "9715": {
      "op": "DUP2"
    },
    "9716": {
      "op": "DUP2"
    },
    "9717": {
      "op": "ADD"
    },
    "9718": {
      "op": "SWAP1"
    },
    "9719": {
      "op": "DUP12"
    },
    "9720": {
      "op": "DUP5"
    },
    "9721": {
      "op": "GT"
    },
    "9722": {
      "op": "ISZERO"
    },
    "9723": {
      "op": "PUSH2",
      "value": "0x2603"
    },
    "9726": {
      "op": "JUMPI"
    },
    "9727": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9729": {
      "op": "DUP1"
    },
    "9730": {
      "op": "REVERT"
    },
    "9731": {
      "op": "JUMPDEST"
    },
    "9732": {
      "op": "SWAP5"
    },
    "9733": {
      "op": "DUP3"
    },
    "9734": {
      "op": "ADD"
    },
    "9735": {
      "op": "SWAP5"
    },
    "9736": {
      "op": "JUMPDEST"
    },
    "9737": {
      "op": "DUP4"
    },
    "9738": {
      "op": "DUP7"
    },
    "9739": {
      "op": "LT"
    },
    "9740": {
      "op": "ISZERO"
    },
    "9741": {
      "op": "PUSH2",
      "value": "0x2621"
    },
    "9744": {
      "op": "JUMPI"
    },
    "9745": {
      "op": "DUP6"
    },
    "9746": {
      "op": "CALLDATALOAD"
    },
    "9747": {
      "op": "DUP3"
    },
    "9748": {
      "op": "MSTORE"
    },
    "9749": {
      "op": "SWAP5"
    },
    "9750": {
      "op": "DUP3"
    },
    "9751": {
      "op": "ADD"
    },
    "9752": {
      "op": "SWAP5"
    },
    "9753": {
      "op": "SWAP1"
    },
    "9754": {
      "op": "DUP3"
    },
    "9755": {
      "op": "ADD"
    },
    "9756": {
      "op": "SWAP1"
    },
    "9757": {
      "op": "PUSH2",
      "value": "0x2608"
    },
    "9760": {
      "op": "JUMP"
    },
    "9761": {
      "op": "JUMPDEST"
    },
    "9762": {
      "op": "SWAP9"
    },
    "9763": {
      "op": "POP"
    },
    "9764": {
      "op": "PUSH2",
      "value": "0x2630"
    },
    "9767": {
      "op": "SWAP1"
    },
    "9768": {
      "op": "POP"
    },
    "9769": {
      "op": "DUP10"
    },
    "9770": {
      "op": "DUP3"
    },
    "9771": {
      "op": "ADD"
    },
    "9772": {
      "op": "PUSH2",
      "value": "0x2360"
    },
    "9775": {
      "jump": "i",
      "op": "JUMP"
    },
    "9776": {
      "op": "JUMPDEST"
    },
    "9777": {
      "op": "SWAP7"
    },
    "9778": {
      "op": "POP"
    },
    "9779": {
      "op": "POP"
    },
    "9780": {
      "op": "POP"
    },
    "9781": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9783": {
      "op": "DUP8"
    },
    "9784": {
      "op": "ADD"
    },
    "9785": {
      "op": "CALLDATALOAD"
    },
    "9786": {
      "op": "SWAP2"
    },
    "9787": {
      "op": "POP"
    },
    "9788": {
      "op": "DUP1"
    },
    "9789": {
      "op": "DUP3"
    },
    "9790": {
      "op": "GT"
    },
    "9791": {
      "op": "ISZERO"
    },
    "9792": {
      "op": "PUSH2",
      "value": "0x2648"
    },
    "9795": {
      "op": "JUMPI"
    },
    "9796": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9798": {
      "op": "DUP1"
    },
    "9799": {
      "op": "REVERT"
    },
    "9800": {
      "op": "JUMPDEST"
    },
    "9801": {
      "op": "PUSH2",
      "value": "0x2654"
    },
    "9804": {
      "op": "DUP9"
    },
    "9805": {
      "op": "DUP4"
    },
    "9806": {
      "op": "DUP10"
    },
    "9807": {
      "op": "ADD"
    },
    "9808": {
      "op": "PUSH2",
      "value": "0x1FA4"
    },
    "9811": {
      "jump": "i",
      "op": "JUMP"
    },
    "9812": {
      "op": "JUMPDEST"
    },
    "9813": {
      "op": "SWAP4"
    },
    "9814": {
      "op": "POP"
    },
    "9815": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9817": {
      "op": "DUP8"
    },
    "9818": {
      "op": "ADD"
    },
    "9819": {
      "op": "CALLDATALOAD"
    },
    "9820": {
      "op": "SWAP2"
    },
    "9821": {
      "op": "POP"
    },
    "9822": {
      "op": "DUP1"
    },
    "9823": {
      "op": "DUP3"
    },
    "9824": {
      "op": "GT"
    },
    "9825": {
      "op": "ISZERO"
    },
    "9826": {
      "op": "PUSH2",
      "value": "0x20F6"
    },
    "9829": {
      "op": "JUMPI"
    },
    "9830": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9832": {
      "op": "DUP1"
    },
    "9833": {
      "op": "REVERT"
    },
    "9834": {
      "op": "JUMPDEST"
    },
    "9835": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9840": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9842": {
      "op": "SHL"
    },
    "9843": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9845": {
      "op": "MSTORE"
    },
    "9846": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "9848": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9850": {
      "op": "MSTORE"
    },
    "9851": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9853": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9855": {
      "op": "REVERT"
    },
    "9856": {
      "op": "JUMPDEST"
    },
    "9857": {
      "op": "PUSH1",
      "value": "0x9"
    },
    "9859": {
      "op": "DUP2"
    },
    "9860": {
      "op": "LT"
    },
    "9861": {
      "op": "PUSH2",
      "value": "0x269E"
    },
    "9864": {
      "op": "JUMPI"
    },
    "9865": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9870": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9872": {
      "op": "SHL"
    },
    "9873": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9875": {
      "op": "MSTORE"
    },
    "9876": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "9878": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9880": {
      "op": "MSTORE"
    },
    "9881": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9883": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9885": {
      "op": "REVERT"
    },
    "9886": {
      "op": "JUMPDEST"
    },
    "9887": {
      "op": "SWAP1"
    },
    "9888": {
      "op": "MSTORE"
    },
    "9889": {
      "jump": "o",
      "op": "JUMP"
    },
    "9890": {
      "op": "JUMPDEST"
    },
    "9891": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9893": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9895": {
      "op": "DUP1"
    },
    "9896": {
      "op": "DUP4"
    },
    "9897": {
      "op": "ADD"
    },
    "9898": {
      "op": "DUP2"
    },
    "9899": {
      "op": "DUP5"
    },
    "9900": {
      "op": "MSTORE"
    },
    "9901": {
      "op": "DUP1"
    },
    "9902": {
      "op": "DUP6"
    },
    "9903": {
      "op": "MLOAD"
    },
    "9904": {
      "op": "DUP1"
    },
    "9905": {
      "op": "DUP4"
    },
    "9906": {
      "op": "MSTORE"
    },
    "9907": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9909": {
      "op": "SWAP3"
    },
    "9910": {
      "op": "POP"
    },
    "9911": {
      "op": "DUP3"
    },
    "9912": {
      "op": "DUP7"
    },
    "9913": {
      "op": "ADD"
    },
    "9914": {
      "op": "SWAP2"
    },
    "9915": {
      "op": "POP"
    },
    "9916": {
      "op": "DUP3"
    },
    "9917": {
      "op": "DUP2"
    },
    "9918": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "9920": {
      "op": "SHL"
    },
    "9921": {
      "op": "DUP8"
    },
    "9922": {
      "op": "ADD"
    },
    "9923": {
      "op": "ADD"
    },
    "9924": {
      "op": "DUP5"
    },
    "9925": {
      "op": "DUP9"
    },
    "9926": {
      "op": "ADD"
    },
    "9927": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9929": {
      "op": "JUMPDEST"
    },
    "9930": {
      "op": "DUP4"
    },
    "9931": {
      "op": "DUP2"
    },
    "9932": {
      "op": "LT"
    },
    "9933": {
      "op": "ISZERO"
    },
    "9934": {
      "op": "PUSH2",
      "value": "0x22EC"
    },
    "9937": {
      "op": "JUMPI"
    },
    "9938": {
      "op": "DUP9"
    },
    "9939": {
      "op": "DUP4"
    },
    "9940": {
      "op": "SUB"
    },
    "9941": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "9943": {
      "op": "NOT"
    },
    "9944": {
      "op": "ADD"
    },
    "9945": {
      "op": "DUP6"
    },
    "9946": {
      "op": "MSTORE"
    },
    "9947": {
      "op": "DUP2"
    },
    "9948": {
      "op": "MLOAD"
    },
    "9949": {
      "op": "DUP1"
    },
    "9950": {
      "op": "MLOAD"
    },
    "9951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9953": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9955": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9957": {
      "op": "SHL"
    },
    "9958": {
      "op": "SUB"
    },
    "9959": {
      "op": "AND"
    },
    "9960": {
      "op": "DUP5"
    },
    "9961": {
      "op": "MSTORE"
    },
    "9962": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "9965": {
      "op": "DUP9"
    },
    "9966": {
      "op": "DUP3"
    },
    "9967": {
      "op": "ADD"
    },
    "9968": {
      "op": "MLOAD"
    },
    "9969": {
      "op": "PUSH2",
      "value": "0x26FC"
    },
    "9972": {
      "op": "DUP11"
    },
    "9973": {
      "op": "DUP8"
    },
    "9974": {
      "op": "ADD"
    },
    "9975": {
      "op": "DUP3"
    },
    "9976": {
      "op": "PUSH2",
      "value": "0x2680"
    },
    "9979": {
      "jump": "i",
      "op": "JUMP"
    },
    "9980": {
      "op": "JUMPDEST"
    },
    "9981": {
      "op": "POP"
    },
    "9982": {
      "op": "DUP8"
    },
    "9983": {
      "op": "DUP3"
    },
    "9984": {
      "op": "ADD"
    },
    "9985": {
      "op": "MLOAD"
    },
    "9986": {
      "op": "DUP2"
    },
    "9987": {
      "op": "DUP10"
    },
    "9988": {
      "op": "DUP8"
    },
    "9989": {
      "op": "ADD"
    },
    "9990": {
      "op": "MSTORE"
    },
    "9991": {
      "op": "PUSH2",
      "value": "0x2712"
    },
    "9994": {
      "op": "DUP3"
    },
    "9995": {
      "op": "DUP8"
    },
    "9996": {
      "op": "ADD"
    },
    "9997": {
      "op": "DUP3"
    },
    "9998": {
      "op": "PUSH2",
      "value": "0x21C7"
    },
    "10001": {
      "jump": "i",
      "op": "JUMP"
    },
    "10002": {
      "op": "JUMPDEST"
    },
    "10003": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10005": {
      "op": "DUP5"
    },
    "10006": {
      "op": "DUP2"
    },
    "10007": {
      "op": "ADD"
    },
    "10008": {
      "op": "MLOAD"
    },
    "10009": {
      "op": "SWAP1"
    },
    "10010": {
      "op": "DUP9"
    },
    "10011": {
      "op": "ADD"
    },
    "10012": {
      "op": "MSTORE"
    },
    "10013": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10015": {
      "op": "DUP1"
    },
    "10016": {
      "op": "DUP6"
    },
    "10017": {
      "op": "ADD"
    },
    "10018": {
      "op": "MLOAD"
    },
    "10019": {
      "op": "SWAP1"
    },
    "10020": {
      "op": "DUP9"
    },
    "10021": {
      "op": "ADD"
    },
    "10022": {
      "op": "MSTORE"
    },
    "10023": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10025": {
      "op": "DUP1"
    },
    "10026": {
      "op": "DUP6"
    },
    "10027": {
      "op": "ADD"
    },
    "10028": {
      "op": "MLOAD"
    },
    "10029": {
      "op": "SWAP1"
    },
    "10030": {
      "op": "DUP9"
    },
    "10031": {
      "op": "ADD"
    },
    "10032": {
      "op": "MSTORE"
    },
    "10033": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "10035": {
      "op": "DUP1"
    },
    "10036": {
      "op": "DUP6"
    },
    "10037": {
      "op": "ADD"
    },
    "10038": {
      "op": "MLOAD"
    },
    "10039": {
      "op": "ISZERO"
    },
    "10040": {
      "op": "ISZERO"
    },
    "10041": {
      "op": "SWAP1"
    },
    "10042": {
      "op": "DUP9"
    },
    "10043": {
      "op": "ADD"
    },
    "10044": {
      "op": "MSTORE"
    },
    "10045": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10047": {
      "op": "DUP1"
    },
    "10048": {
      "op": "DUP6"
    },
    "10049": {
      "op": "ADD"
    },
    "10050": {
      "op": "MLOAD"
    },
    "10051": {
      "op": "ISZERO"
    },
    "10052": {
      "op": "ISZERO"
    },
    "10053": {
      "op": "SWAP1"
    },
    "10054": {
      "op": "DUP9"
    },
    "10055": {
      "op": "ADD"
    },
    "10056": {
      "op": "MSTORE"
    },
    "10057": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "10060": {
      "op": "SWAP4"
    },
    "10061": {
      "op": "DUP5"
    },
    "10062": {
      "op": "ADD"
    },
    "10063": {
      "op": "MLOAD"
    },
    "10064": {
      "op": "SWAP4"
    },
    "10065": {
      "op": "SWAP1"
    },
    "10066": {
      "op": "SWAP7"
    },
    "10067": {
      "op": "ADD"
    },
    "10068": {
      "op": "SWAP3"
    },
    "10069": {
      "op": "SWAP1"
    },
    "10070": {
      "op": "SWAP3"
    },
    "10071": {
      "op": "MSTORE"
    },
    "10072": {
      "op": "POP"
    },
    "10073": {
      "op": "POP"
    },
    "10074": {
      "op": "SWAP4"
    },
    "10075": {
      "op": "DUP7"
    },
    "10076": {
      "op": "ADD"
    },
    "10077": {
      "op": "SWAP4"
    },
    "10078": {
      "op": "SWAP1"
    },
    "10079": {
      "op": "DUP7"
    },
    "10080": {
      "op": "ADD"
    },
    "10081": {
      "op": "SWAP1"
    },
    "10082": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10084": {
      "op": "ADD"
    },
    "10085": {
      "op": "PUSH2",
      "value": "0x26C9"
    },
    "10088": {
      "op": "JUMP"
    },
    "10089": {
      "op": "JUMPDEST"
    },
    "10090": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10092": {
      "op": "DUP3"
    },
    "10093": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10095": {
      "op": "DUP4"
    },
    "10096": {
      "op": "ADD"
    },
    "10097": {
      "op": "SLT"
    },
    "10098": {
      "op": "PUSH2",
      "value": "0x277A"
    },
    "10101": {
      "op": "JUMPI"
    },
    "10102": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10104": {
      "op": "DUP1"
    },
    "10105": {
      "op": "REVERT"
    },
    "10106": {
      "op": "JUMPDEST"
    },
    "10107": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10109": {
      "op": "MLOAD"
    },
    "10110": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "10112": {
      "op": "DUP2"
    },
    "10113": {
      "op": "ADD"
    },
    "10114": {
      "op": "DUP2"
    },
    "10115": {
      "op": "DUP2"
    },
    "10116": {
      "op": "LT"
    },
    "10117": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10121": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10123": {
      "op": "SHL"
    },
    "10124": {
      "op": "SUB"
    },
    "10125": {
      "op": "DUP3"
    },
    "10126": {
      "op": "GT"
    },
    "10127": {
      "op": "OR"
    },
    "10128": {
      "op": "ISZERO"
    },
    "10129": {
      "op": "PUSH2",
      "value": "0x279C"
    },
    "10132": {
      "op": "JUMPI"
    },
    "10133": {
      "op": "PUSH2",
      "value": "0x279C"
    },
    "10136": {
      "op": "PUSH2",
      "value": "0x1F36"
    },
    "10139": {
      "jump": "i",
      "op": "JUMP"
    },
    "10140": {
      "op": "JUMPDEST"
    },
    "10141": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10143": {
      "op": "MSTORE"
    },
    "10144": {
      "op": "DUP1"
    },
    "10145": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "10147": {
      "op": "DUP5"
    },
    "10148": {
      "op": "ADD"
    },
    "10149": {
      "op": "DUP6"
    },
    "10150": {
      "op": "DUP2"
    },
    "10151": {
      "op": "GT"
    },
    "10152": {
      "op": "ISZERO"
    },
    "10153": {
      "op": "PUSH2",
      "value": "0x27B1"
    },
    "10156": {
      "op": "JUMPI"
    },
    "10157": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10159": {
      "op": "DUP1"
    },
    "10160": {
      "op": "REVERT"
    },
    "10161": {
      "op": "JUMPDEST"
    },
    "10162": {
      "op": "DUP5"
    },
    "10163": {
      "op": "JUMPDEST"
    },
    "10164": {
      "op": "DUP2"
    },
    "10165": {
      "op": "DUP2"
    },
    "10166": {
      "op": "LT"
    },
    "10167": {
      "op": "ISZERO"
    },
    "10168": {
      "op": "PUSH2",
      "value": "0x27D4"
    },
    "10171": {
      "op": "JUMPI"
    },
    "10172": {
      "op": "DUP1"
    },
    "10173": {
      "op": "CALLDATALOAD"
    },
    "10174": {
      "op": "PUSH2",
      "value": "0x27C6"
    },
    "10177": {
      "op": "DUP2"
    },
    "10178": {
      "op": "PUSH2",
      "value": "0x1F21"
    },
    "10181": {
      "jump": "i",
      "op": "JUMP"
    },
    "10182": {
      "op": "JUMPDEST"
    },
    "10183": {
      "op": "DUP4"
    },
    "10184": {
      "op": "MSTORE"
    },
    "10185": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10187": {
      "op": "SWAP3"
    },
    "10188": {
      "op": "DUP4"
    },
    "10189": {
      "op": "ADD"
    },
    "10190": {
      "op": "SWAP3"
    },
    "10191": {
      "op": "ADD"
    },
    "10192": {
      "op": "PUSH2",
      "value": "0x27B3"
    },
    "10195": {
      "op": "JUMP"
    },
    "10196": {
      "op": "JUMPDEST"
    },
    "10197": {
      "op": "POP"
    },
    "10198": {
      "op": "SWAP2"
    },
    "10199": {
      "op": "SWAP6"
    },
    "10200": {
      "op": "SWAP5"
    },
    "10201": {
      "op": "POP"
    },
    "10202": {
      "op": "POP"
    },
    "10203": {
      "op": "POP"
    },
    "10204": {
      "op": "POP"
    },
    "10205": {
      "op": "POP"
    },
    "10206": {
      "jump": "o",
      "op": "JUMP"
    },
    "10207": {
      "op": "JUMPDEST"
    },
    "10208": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10210": {
      "op": "DUP3"
    },
    "10211": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10213": {
      "op": "DUP4"
    },
    "10214": {
      "op": "ADD"
    },
    "10215": {
      "op": "SLT"
    },
    "10216": {
      "op": "PUSH2",
      "value": "0x27F0"
    },
    "10219": {
      "op": "JUMPI"
    },
    "10220": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10222": {
      "op": "DUP1"
    },
    "10223": {
      "op": "REVERT"
    },
    "10224": {
      "op": "JUMPDEST"
    },
    "10225": {
      "op": "DUP2"
    },
    "10226": {
      "op": "CALLDATALOAD"
    },
    "10227": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10229": {
      "op": "PUSH2",
      "value": "0x2800"
    },
    "10232": {
      "op": "PUSH2",
      "value": "0x25DF"
    },
    "10235": {
      "op": "DUP4"
    },
    "10236": {
      "op": "PUSH2",
      "value": "0x256B"
    },
    "10239": {
      "jump": "i",
      "op": "JUMP"
    },
    "10240": {
      "op": "JUMPDEST"
    },
    "10241": {
      "op": "DUP3"
    },
    "10242": {
      "op": "DUP2"
    },
    "10243": {
      "op": "MSTORE"
    },
    "10244": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "10246": {
      "op": "SWAP3"
    },
    "10247": {
      "op": "SWAP1"
    },
    "10248": {
      "op": "SWAP3"
    },
    "10249": {
      "op": "SHL"
    },
    "10250": {
      "op": "DUP5"
    },
    "10251": {
      "op": "ADD"
    },
    "10252": {
      "op": "DUP2"
    },
    "10253": {
      "op": "ADD"
    },
    "10254": {
      "op": "SWAP2"
    },
    "10255": {
      "op": "DUP2"
    },
    "10256": {
      "op": "DUP2"
    },
    "10257": {
      "op": "ADD"
    },
    "10258": {
      "op": "SWAP1"
    },
    "10259": {
      "op": "DUP7"
    },
    "10260": {
      "op": "DUP5"
    },
    "10261": {
      "op": "GT"
    },
    "10262": {
      "op": "ISZERO"
    },
    "10263": {
      "op": "PUSH2",
      "value": "0x281F"
    },
    "10266": {
      "op": "JUMPI"
    },
    "10267": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10269": {
      "op": "DUP1"
    },
    "10270": {
      "op": "REVERT"
    },
    "10271": {
      "op": "JUMPDEST"
    },
    "10272": {
      "op": "DUP3"
    },
    "10273": {
      "op": "DUP7"
    },
    "10274": {
      "op": "ADD"
    },
    "10275": {
      "op": "JUMPDEST"
    },
    "10276": {
      "op": "DUP5"
    },
    "10277": {
      "op": "DUP2"
    },
    "10278": {
      "op": "LT"
    },
    "10279": {
      "op": "ISZERO"
    },
    "10280": {
      "op": "PUSH2",
      "value": "0x2843"
    },
    "10283": {
      "op": "JUMPI"
    },
    "10284": {
      "op": "DUP1"
    },
    "10285": {
      "op": "CALLDATALOAD"
    },
    "10286": {
      "op": "PUSH2",
      "value": "0x2836"
    },
    "10289": {
      "op": "DUP2"
    },
    "10290": {
      "op": "PUSH2",
      "value": "0x1F21"
    },
    "10293": {
      "jump": "i",
      "op": "JUMP"
    },
    "10294": {
      "op": "JUMPDEST"
    },
    "10295": {
      "op": "DUP4"
    },
    "10296": {
      "op": "MSTORE"
    },
    "10297": {
      "op": "SWAP2"
    },
    "10298": {
      "op": "DUP4"
    },
    "10299": {
      "op": "ADD"
    },
    "10300": {
      "op": "SWAP2"
    },
    "10301": {
      "op": "DUP4"
    },
    "10302": {
      "op": "ADD"
    },
    "10303": {
      "op": "PUSH2",
      "value": "0x2823"
    },
    "10306": {
      "op": "JUMP"
    },
    "10307": {
      "op": "JUMPDEST"
    },
    "10308": {
      "op": "POP"
    },
    "10309": {
      "op": "SWAP7"
    },
    "10310": {
      "op": "SWAP6"
    },
    "10311": {
      "op": "POP"
    },
    "10312": {
      "op": "POP"
    },
    "10313": {
      "op": "POP"
    },
    "10314": {
      "op": "POP"
    },
    "10315": {
      "op": "POP"
    },
    "10316": {
      "op": "POP"
    },
    "10317": {
      "jump": "o",
      "op": "JUMP"
    },
    "10318": {
      "op": "JUMPDEST"
    },
    "10319": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10321": {
      "op": "DUP1"
    },
    "10322": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10324": {
      "op": "DUP1"
    },
    "10325": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10327": {
      "op": "DUP1"
    },
    "10328": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10330": {
      "op": "DUP1"
    },
    "10331": {
      "op": "PUSH2",
      "value": "0x1E0"
    },
    "10334": {
      "op": "DUP10"
    },
    "10335": {
      "op": "DUP12"
    },
    "10336": {
      "op": "SUB"
    },
    "10337": {
      "op": "SLT"
    },
    "10338": {
      "op": "ISZERO"
    },
    "10339": {
      "op": "PUSH2",
      "value": "0x286B"
    },
    "10342": {
      "op": "JUMPI"
    },
    "10343": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10345": {
      "op": "DUP1"
    },
    "10346": {
      "op": "REVERT"
    },
    "10347": {
      "op": "JUMPDEST"
    },
    "10348": {
      "op": "DUP9"
    },
    "10349": {
      "op": "CALLDATALOAD"
    },
    "10350": {
      "op": "PUSH2",
      "value": "0x2876"
    },
    "10353": {
      "op": "DUP2"
    },
    "10354": {
      "op": "PUSH2",
      "value": "0x1F21"
    },
    "10357": {
      "jump": "i",
      "op": "JUMP"
    },
    "10358": {
      "op": "JUMPDEST"
    },
    "10359": {
      "op": "SWAP8"
    },
    "10360": {
      "op": "POP"
    },
    "10361": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10363": {
      "op": "DUP10"
    },
    "10364": {
      "op": "DUP2"
    },
    "10365": {
      "op": "ADD"
    },
    "10366": {
      "op": "CALLDATALOAD"
    },
    "10367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10371": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10373": {
      "op": "SHL"
    },
    "10374": {
      "op": "SUB"
    },
    "10375": {
      "op": "DUP1"
    },
    "10376": {
      "op": "DUP3"
    },
    "10377": {
      "op": "GT"
    },
    "10378": {
      "op": "ISZERO"
    },
    "10379": {
      "op": "PUSH2",
      "value": "0x2893"
    },
    "10382": {
      "op": "JUMPI"
    },
    "10383": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10385": {
      "op": "DUP1"
    },
    "10386": {
      "op": "REVERT"
    },
    "10387": {
      "op": "JUMPDEST"
    },
    "10388": {
      "op": "PUSH2",
      "value": "0x289F"
    },
    "10391": {
      "op": "DUP14"
    },
    "10392": {
      "op": "DUP4"
    },
    "10393": {
      "op": "DUP15"
    },
    "10394": {
      "op": "ADD"
    },
    "10395": {
      "op": "PUSH2",
      "value": "0x1FA4"
    },
    "10398": {
      "jump": "i",
      "op": "JUMP"
    },
    "10399": {
      "op": "JUMPDEST"
    },
    "10400": {
      "op": "SWAP10"
    },
    "10401": {
      "op": "POP"
    },
    "10402": {
      "op": "PUSH2",
      "value": "0x28AD"
    },
    "10405": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10407": {
      "op": "DUP14"
    },
    "10408": {
      "op": "ADD"
    },
    "10409": {
      "op": "PUSH2",
      "value": "0x2360"
    },
    "10412": {
      "jump": "i",
      "op": "JUMP"
    },
    "10413": {
      "op": "JUMPDEST"
    },
    "10414": {
      "op": "SWAP9"
    },
    "10415": {
      "op": "POP"
    },
    "10416": {
      "op": "PUSH2",
      "value": "0x28BB"
    },
    "10419": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10421": {
      "op": "DUP14"
    },
    "10422": {
      "op": "ADD"
    },
    "10423": {
      "op": "PUSH2",
      "value": "0x2360"
    },
    "10426": {
      "jump": "i",
      "op": "JUMP"
    },
    "10427": {
      "op": "JUMPDEST"
    },
    "10428": {
      "op": "SWAP8"
    },
    "10429": {
      "op": "POP"
    },
    "10430": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10432": {
      "op": "DUP13"
    },
    "10433": {
      "op": "ADD"
    },
    "10434": {
      "op": "CALLDATALOAD"
    },
    "10435": {
      "op": "SWAP7"
    },
    "10436": {
      "op": "POP"
    },
    "10437": {
      "op": "DUP13"
    },
    "10438": {
      "op": "PUSH1",
      "value": "0xBF"
    },
    "10440": {
      "op": "DUP14"
    },
    "10441": {
      "op": "ADD"
    },
    "10442": {
      "op": "SLT"
    },
    "10443": {
      "op": "PUSH2",
      "value": "0x28D3"
    },
    "10446": {
      "op": "JUMPI"
    },
    "10447": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10449": {
      "op": "DUP1"
    },
    "10450": {
      "op": "REVERT"
    },
    "10451": {
      "op": "JUMPDEST"
    },
    "10452": {
      "op": "PUSH2",
      "value": "0x28DB"
    },
    "10455": {
      "op": "PUSH2",
      "value": "0x1F4C"
    },
    "10458": {
      "jump": "i",
      "op": "JUMP"
    },
    "10459": {
      "op": "JUMPDEST"
    },
    "10460": {
      "op": "SWAP2"
    },
    "10461": {
      "op": "POP"
    },
    "10462": {
      "op": "DUP2"
    },
    "10463": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "10466": {
      "op": "DUP14"
    },
    "10467": {
      "op": "ADD"
    },
    "10468": {
      "op": "DUP15"
    },
    "10469": {
      "op": "DUP2"
    },
    "10470": {
      "op": "GT"
    },
    "10471": {
      "op": "ISZERO"
    },
    "10472": {
      "op": "PUSH2",
      "value": "0x28F0"
    },
    "10475": {
      "op": "JUMPI"
    },
    "10476": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10478": {
      "op": "DUP1"
    },
    "10479": {
      "op": "REVERT"
    },
    "10480": {
      "op": "JUMPDEST"
    },
    "10481": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10483": {
      "op": "DUP15"
    },
    "10484": {
      "op": "ADD"
    },
    "10485": {
      "op": "JUMPDEST"
    },
    "10486": {
      "op": "DUP2"
    },
    "10487": {
      "op": "DUP2"
    },
    "10488": {
      "op": "LT"
    },
    "10489": {
      "op": "ISZERO"
    },
    "10490": {
      "op": "PUSH2",
      "value": "0x290C"
    },
    "10493": {
      "op": "JUMPI"
    },
    "10494": {
      "op": "DUP1"
    },
    "10495": {
      "op": "CALLDATALOAD"
    },
    "10496": {
      "op": "DUP6"
    },
    "10497": {
      "op": "MSTORE"
    },
    "10498": {
      "op": "SWAP4"
    },
    "10499": {
      "op": "DUP6"
    },
    "10500": {
      "op": "ADD"
    },
    "10501": {
      "op": "SWAP4"
    },
    "10502": {
      "op": "DUP6"
    },
    "10503": {
      "op": "ADD"
    },
    "10504": {
      "op": "PUSH2",
      "value": "0x28F5"
    },
    "10507": {
      "op": "JUMP"
    },
    "10508": {
      "op": "JUMPDEST"
    },
    "10509": {
      "op": "POP"
    },
    "10510": {
      "op": "DUP2"
    },
    "10511": {
      "op": "SWAP8"
    },
    "10512": {
      "op": "POP"
    },
    "10513": {
      "op": "PUSH2",
      "value": "0x291A"
    },
    "10516": {
      "op": "DUP16"
    },
    "10517": {
      "op": "DUP3"
    },
    "10518": {
      "op": "PUSH2",
      "value": "0x2769"
    },
    "10521": {
      "jump": "i",
      "op": "JUMP"
    },
    "10522": {
      "op": "JUMPDEST"
    },
    "10523": {
      "op": "SWAP7"
    },
    "10524": {
      "op": "POP"
    },
    "10525": {
      "op": "POP"
    },
    "10526": {
      "op": "POP"
    },
    "10527": {
      "op": "PUSH2",
      "value": "0x1C0"
    },
    "10530": {
      "op": "DUP13"
    },
    "10531": {
      "op": "ADD"
    },
    "10532": {
      "op": "CALLDATALOAD"
    },
    "10533": {
      "op": "SWAP3"
    },
    "10534": {
      "op": "POP"
    },
    "10535": {
      "op": "DUP1"
    },
    "10536": {
      "op": "DUP4"
    },
    "10537": {
      "op": "GT"
    },
    "10538": {
      "op": "ISZERO"
    },
    "10539": {
      "op": "PUSH2",
      "value": "0x2933"
    },
    "10542": {
      "op": "JUMPI"
    },
    "10543": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10545": {
      "op": "DUP1"
    },
    "10546": {
      "op": "REVERT"
    },
    "10547": {
      "op": "JUMPDEST"
    },
    "10548": {
      "op": "POP"
    },
    "10549": {
      "op": "POP"
    },
    "10550": {
      "op": "PUSH2",
      "value": "0x2941"
    },
    "10553": {
      "op": "DUP12"
    },
    "10554": {
      "op": "DUP3"
    },
    "10555": {
      "op": "DUP13"
    },
    "10556": {
      "op": "ADD"
    },
    "10557": {
      "op": "PUSH2",
      "value": "0x27DF"
    },
    "10560": {
      "jump": "i",
      "op": "JUMP"
    },
    "10561": {
      "op": "JUMPDEST"
    },
    "10562": {
      "op": "SWAP2"
    },
    "10563": {
      "op": "POP"
    },
    "10564": {
      "op": "POP"
    },
    "10565": {
      "op": "SWAP3"
    },
    "10566": {
      "op": "SWAP6"
    },
    "10567": {
      "op": "SWAP9"
    },
    "10568": {
      "op": "POP"
    },
    "10569": {
      "op": "SWAP3"
    },
    "10570": {
      "op": "SWAP6"
    },
    "10571": {
      "op": "SWAP9"
    },
    "10572": {
      "op": "SWAP1"
    },
    "10573": {
      "op": "SWAP4"
    },
    "10574": {
      "op": "SWAP7"
    },
    "10575": {
      "op": "POP"
    },
    "10576": {
      "jump": "o",
      "op": "JUMP"
    },
    "10577": {
      "op": "JUMPDEST"
    },
    "10578": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10580": {
      "op": "DUP1"
    },
    "10581": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10583": {
      "op": "DUP1"
    },
    "10584": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10586": {
      "op": "DUP6"
    },
    "10587": {
      "op": "DUP8"
    },
    "10588": {
      "op": "SUB"
    },
    "10589": {
      "op": "SLT"
    },
    "10590": {
      "op": "ISZERO"
    },
    "10591": {
      "op": "PUSH2",
      "value": "0x2967"
    },
    "10594": {
      "op": "JUMPI"
    },
    "10595": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10597": {
      "op": "DUP1"
    },
    "10598": {
      "op": "REVERT"
    },
    "10599": {
      "op": "JUMPDEST"
    },
    "10600": {
      "op": "DUP5"
    },
    "10601": {
      "op": "CALLDATALOAD"
    },
    "10602": {
      "op": "SWAP4"
    },
    "10603": {
      "op": "POP"
    },
    "10604": {
      "op": "PUSH2",
      "value": "0x2977"
    },
    "10607": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10609": {
      "op": "DUP7"
    },
    "10610": {
      "op": "ADD"
    },
    "10611": {
      "op": "PUSH2",
      "value": "0x2360"
    },
    "10614": {
      "jump": "i",
      "op": "JUMP"
    },
    "10615": {
      "op": "JUMPDEST"
    },
    "10616": {
      "op": "SWAP3"
    },
    "10617": {
      "op": "POP"
    },
    "10618": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10620": {
      "op": "DUP6"
    },
    "10621": {
      "op": "ADD"
    },
    "10622": {
      "op": "CALLDATALOAD"
    },
    "10623": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10627": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10629": {
      "op": "SHL"
    },
    "10630": {
      "op": "SUB"
    },
    "10631": {
      "op": "DUP1"
    },
    "10632": {
      "op": "DUP3"
    },
    "10633": {
      "op": "GT"
    },
    "10634": {
      "op": "ISZERO"
    },
    "10635": {
      "op": "PUSH2",
      "value": "0x2648"
    },
    "10638": {
      "op": "JUMPI"
    },
    "10639": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10641": {
      "op": "DUP1"
    },
    "10642": {
      "op": "REVERT"
    },
    "10643": {
      "op": "JUMPDEST"
    },
    "10644": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10646": {
      "op": "DUP1"
    },
    "10647": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10649": {
      "op": "DUP4"
    },
    "10650": {
      "op": "DUP6"
    },
    "10651": {
      "op": "SUB"
    },
    "10652": {
      "op": "SLT"
    },
    "10653": {
      "op": "ISZERO"
    },
    "10654": {
      "op": "PUSH2",
      "value": "0x29A6"
    },
    "10657": {
      "op": "JUMPI"
    },
    "10658": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10660": {
      "op": "DUP1"
    },
    "10661": {
      "op": "REVERT"
    },
    "10662": {
      "op": "JUMPDEST"
    },
    "10663": {
      "op": "DUP3"
    },
    "10664": {
      "op": "CALLDATALOAD"
    },
    "10665": {
      "op": "SWAP2"
    },
    "10666": {
      "op": "POP"
    },
    "10667": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10669": {
      "op": "DUP4"
    },
    "10670": {
      "op": "ADD"
    },
    "10671": {
      "op": "CALLDATALOAD"
    },
    "10672": {
      "op": "PUSH2",
      "value": "0x29B8"
    },
    "10675": {
      "op": "DUP2"
    },
    "10676": {
      "op": "PUSH2",
      "value": "0x1F21"
    },
    "10679": {
      "jump": "i",
      "op": "JUMP"
    },
    "10680": {
      "op": "JUMPDEST"
    },
    "10681": {
      "op": "DUP1"
    },
    "10682": {
      "op": "SWAP2"
    },
    "10683": {
      "op": "POP"
    },
    "10684": {
      "op": "POP"
    },
    "10685": {
      "op": "SWAP3"
    },
    "10686": {
      "op": "POP"
    },
    "10687": {
      "op": "SWAP3"
    },
    "10688": {
      "op": "SWAP1"
    },
    "10689": {
      "op": "POP"
    },
    "10690": {
      "jump": "o",
      "op": "JUMP"
    },
    "10691": {
      "op": "JUMPDEST"
    },
    "10692": {
      "op": "DUP4"
    },
    "10693": {
      "op": "ISZERO"
    },
    "10694": {
      "op": "ISZERO"
    },
    "10695": {
      "op": "DUP2"
    },
    "10696": {
      "op": "MSTORE"
    },
    "10697": {
      "op": "DUP3"
    },
    "10698": {
      "op": "ISZERO"
    },
    "10699": {
      "op": "ISZERO"
    },
    "10700": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10702": {
      "op": "DUP3"
    },
    "10703": {
      "op": "ADD"
    },
    "10704": {
      "op": "MSTORE"
    },
    "10705": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10707": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10709": {
      "op": "DUP3"
    },
    "10710": {
      "op": "ADD"
    },
    "10711": {
      "op": "MSTORE"
    },
    "10712": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10714": {
      "op": "PUSH2",
      "value": "0x29E6"
    },
    "10717": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10719": {
      "op": "DUP4"
    },
    "10720": {
      "op": "ADD"
    },
    "10721": {
      "op": "DUP5"
    },
    "10722": {
      "op": "PUSH2",
      "value": "0x21C7"
    },
    "10725": {
      "jump": "i",
      "op": "JUMP"
    },
    "10726": {
      "op": "JUMPDEST"
    },
    "10727": {
      "op": "SWAP6"
    },
    "10728": {
      "op": "SWAP5"
    },
    "10729": {
      "op": "POP"
    },
    "10730": {
      "op": "POP"
    },
    "10731": {
      "op": "POP"
    },
    "10732": {
      "op": "POP"
    },
    "10733": {
      "op": "POP"
    },
    "10734": {
      "jump": "o",
      "op": "JUMP"
    },
    "10735": {
      "op": "JUMPDEST"
    },
    "10736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10738": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10740": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10742": {
      "op": "SHL"
    },
    "10743": {
      "op": "SUB"
    },
    "10744": {
      "op": "DUP11"
    },
    "10745": {
      "op": "AND"
    },
    "10746": {
      "op": "DUP2"
    },
    "10747": {
      "op": "MSTORE"
    },
    "10748": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10750": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "10753": {
      "op": "PUSH2",
      "value": "0x2A0D"
    },
    "10756": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10758": {
      "op": "DUP5"
    },
    "10759": {
      "op": "ADD"
    },
    "10760": {
      "op": "DUP13"
    },
    "10761": {
      "op": "PUSH2",
      "value": "0x2680"
    },
    "10764": {
      "jump": "i",
      "op": "JUMP"
    },
    "10765": {
      "op": "JUMPDEST"
    },
    "10766": {
      "op": "DUP1"
    },
    "10767": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10769": {
      "op": "DUP5"
    },
    "10770": {
      "op": "ADD"
    },
    "10771": {
      "op": "MSTORE"
    },
    "10772": {
      "op": "PUSH2",
      "value": "0x2A1F"
    },
    "10775": {
      "op": "DUP2"
    },
    "10776": {
      "op": "DUP5"
    },
    "10777": {
      "op": "ADD"
    },
    "10778": {
      "op": "DUP12"
    },
    "10779": {
      "op": "PUSH2",
      "value": "0x21C7"
    },
    "10782": {
      "jump": "i",
      "op": "JUMP"
    },
    "10783": {
      "op": "JUMPDEST"
    },
    "10784": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10786": {
      "op": "DUP5"
    },
    "10787": {
      "op": "ADD"
    },
    "10788": {
      "op": "SWAP10"
    },
    "10789": {
      "op": "SWAP1"
    },
    "10790": {
      "op": "SWAP10"
    },
    "10791": {
      "op": "MSTORE"
    },
    "10792": {
      "op": "POP"
    },
    "10793": {
      "op": "POP"
    },
    "10794": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10796": {
      "op": "DUP2"
    },
    "10797": {
      "op": "ADD"
    },
    "10798": {
      "op": "SWAP6"
    },
    "10799": {
      "op": "SWAP1"
    },
    "10800": {
      "op": "SWAP6"
    },
    "10801": {
      "op": "MSTORE"
    },
    "10802": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10804": {
      "op": "DUP6"
    },
    "10805": {
      "op": "ADD"
    },
    "10806": {
      "op": "SWAP4"
    },
    "10807": {
      "op": "SWAP1"
    },
    "10808": {
      "op": "SWAP4"
    },
    "10809": {
      "op": "MSTORE"
    },
    "10810": {
      "op": "SWAP1"
    },
    "10811": {
      "op": "ISZERO"
    },
    "10812": {
      "op": "ISZERO"
    },
    "10813": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "10815": {
      "op": "DUP5"
    },
    "10816": {
      "op": "ADD"
    },
    "10817": {
      "op": "MSTORE"
    },
    "10818": {
      "op": "ISZERO"
    },
    "10819": {
      "op": "ISZERO"
    },
    "10820": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10822": {
      "op": "DUP4"
    },
    "10823": {
      "op": "ADD"
    },
    "10824": {
      "op": "MSTORE"
    },
    "10825": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "10828": {
      "op": "SWAP1"
    },
    "10829": {
      "op": "SWAP2"
    },
    "10830": {
      "op": "ADD"
    },
    "10831": {
      "op": "MSTORE"
    },
    "10832": {
      "op": "SWAP4"
    },
    "10833": {
      "op": "SWAP3"
    },
    "10834": {
      "op": "POP"
    },
    "10835": {
      "op": "POP"
    },
    "10836": {
      "op": "POP"
    },
    "10837": {
      "jump": "o",
      "op": "JUMP"
    },
    "10838": {
      "op": "JUMPDEST"
    },
    "10839": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10841": {
      "op": "DUP1"
    },
    "10842": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10844": {
      "op": "DUP1"
    },
    "10845": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10847": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10849": {
      "op": "DUP7"
    },
    "10850": {
      "op": "DUP9"
    },
    "10851": {
      "op": "SUB"
    },
    "10852": {
      "op": "SLT"
    },
    "10853": {
      "op": "ISZERO"
    },
    "10854": {
      "op": "PUSH2",
      "value": "0x2A6E"
    },
    "10857": {
      "op": "JUMPI"
    },
    "10858": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10860": {
      "op": "DUP1"
    },
    "10861": {
      "op": "REVERT"
    },
    "10862": {
      "op": "JUMPDEST"
    },
    "10863": {
      "op": "DUP6"
    },
    "10864": {
      "op": "CALLDATALOAD"
    },
    "10865": {
      "op": "PUSH2",
      "value": "0x2A79"
    },
    "10868": {
      "op": "DUP2"
    },
    "10869": {
      "op": "PUSH2",
      "value": "0x1F21"
    },
    "10872": {
      "jump": "i",
      "op": "JUMP"
    },
    "10873": {
      "op": "JUMPDEST"
    },
    "10874": {
      "op": "SWAP5"
    },
    "10875": {
      "op": "POP"
    },
    "10876": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10878": {
      "op": "DUP7"
    },
    "10879": {
      "op": "ADD"
    },
    "10880": {
      "op": "CALLDATALOAD"
    },
    "10881": {
      "op": "SWAP4"
    },
    "10882": {
      "op": "POP"
    },
    "10883": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10885": {
      "op": "DUP7"
    },
    "10886": {
      "op": "ADD"
    },
    "10887": {
      "op": "CALLDATALOAD"
    },
    "10888": {
      "op": "PUSH2",
      "value": "0x2A90"
    },
    "10891": {
      "op": "DUP2"
    },
    "10892": {
      "op": "PUSH2",
      "value": "0x1F21"
    },
    "10895": {
      "jump": "i",
      "op": "JUMP"
    },
    "10896": {
      "op": "JUMPDEST"
    },
    "10897": {
      "op": "SWAP3"
    },
    "10898": {
      "op": "POP"
    },
    "10899": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10901": {
      "op": "DUP7"
    },
    "10902": {
      "op": "ADD"
    },
    "10903": {
      "op": "CALLDATALOAD"
    },
    "10904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10908": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10910": {
      "op": "SHL"
    },
    "10911": {
      "op": "SUB"
    },
    "10912": {
      "op": "DUP2"
    },
    "10913": {
      "op": "GT"
    },
    "10914": {
      "op": "ISZERO"
    },
    "10915": {
      "op": "PUSH2",
      "value": "0x2164"
    },
    "10918": {
      "op": "JUMPI"
    },
    "10919": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10921": {
      "op": "DUP1"
    },
    "10922": {
      "op": "REVERT"
    },
    "10923": {
      "op": "JUMPDEST"
    },
    "10924": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10926": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10928": {
      "op": "DUP3"
    },
    "10929": {
      "op": "DUP5"
    },
    "10930": {
      "op": "SUB"
    },
    "10931": {
      "op": "SLT"
    },
    "10932": {
      "op": "ISZERO"
    },
    "10933": {
      "op": "PUSH2",
      "value": "0x2ABD"
    },
    "10936": {
      "op": "JUMPI"
    },
    "10937": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10939": {
      "op": "DUP1"
    },
    "10940": {
      "op": "REVERT"
    },
    "10941": {
      "op": "JUMPDEST"
    },
    "10942": {
      "op": "DUP2"
    },
    "10943": {
      "op": "MLOAD"
    },
    "10944": {
      "op": "PUSH2",
      "value": "0x2445"
    },
    "10947": {
      "op": "DUP2"
    },
    "10948": {
      "op": "PUSH2",
      "value": "0x1F21"
    },
    "10951": {
      "jump": "i",
      "op": "JUMP"
    },
    "10952": {
      "op": "JUMPDEST"
    },
    "10953": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10955": {
      "op": "DUP1"
    },
    "10956": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10958": {
      "op": "SHL"
    },
    "10959": {
      "op": "SUB"
    },
    "10960": {
      "op": "DUP6"
    },
    "10961": {
      "op": "AND"
    },
    "10962": {
      "op": "DUP2"
    },
    "10963": {
      "op": "MSTORE"
    },
    "10964": {
      "op": "DUP4"
    },
    "10965": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10967": {
      "op": "DUP3"
    },
    "10968": {
      "op": "ADD"
    },
    "10969": {
      "op": "MSTORE"
    },
    "10970": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10972": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10974": {
      "op": "DUP3"
    },
    "10975": {
      "op": "ADD"
    },
    "10976": {
      "op": "MSTORE"
    },
    "10977": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10979": {
      "op": "PUSH2",
      "value": "0x2AEF"
    },
    "10982": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10984": {
      "op": "DUP4"
    },
    "10985": {
      "op": "ADD"
    },
    "10986": {
      "op": "DUP6"
    },
    "10987": {
      "op": "PUSH2",
      "value": "0x21C7"
    },
    "10990": {
      "jump": "i",
      "op": "JUMP"
    },
    "10991": {
      "op": "JUMPDEST"
    },
    "10992": {
      "op": "SWAP1"
    },
    "10993": {
      "op": "POP"
    },
    "10994": {
      "op": "DUP3"
    },
    "10995": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10997": {
      "op": "DUP4"
    },
    "10998": {
      "op": "ADD"
    },
    "10999": {
      "op": "MSTORE"
    },
    "11000": {
      "op": "SWAP6"
    },
    "11001": {
      "op": "SWAP5"
    },
    "11002": {
      "op": "POP"
    },
    "11003": {
      "op": "POP"
    },
    "11004": {
      "op": "POP"
    },
    "11005": {
      "op": "POP"
    },
    "11006": {
      "op": "POP"
    },
    "11007": {
      "jump": "o",
      "op": "JUMP"
    },
    "11008": {
      "op": "JUMPDEST"
    },
    "11009": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11011": {
      "op": "DUP3"
    },
    "11012": {
      "op": "MLOAD"
    },
    "11013": {
      "op": "PUSH2",
      "value": "0x2B12"
    },
    "11016": {
      "op": "DUP2"
    },
    "11017": {
      "op": "DUP5"
    },
    "11018": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11020": {
      "op": "DUP8"
    },
    "11021": {
      "op": "ADD"
    },
    "11022": {
      "op": "PUSH2",
      "value": "0x219B"
    },
    "11025": {
      "jump": "i",
      "op": "JUMP"
    },
    "11026": {
      "op": "JUMPDEST"
    },
    "11027": {
      "op": "SWAP2"
    },
    "11028": {
      "op": "SWAP1"
    },
    "11029": {
      "op": "SWAP2"
    },
    "11030": {
      "op": "ADD"
    },
    "11031": {
      "op": "SWAP3"
    },
    "11032": {
      "op": "SWAP2"
    },
    "11033": {
      "op": "POP"
    },
    "11034": {
      "op": "POP"
    },
    "11035": {
      "jump": "o",
      "op": "JUMP"
    },
    "11036": {
      "op": "JUMPDEST"
    },
    "11037": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11039": {
      "op": "DUP2"
    },
    "11040": {
      "op": "MSTORE"
    },
    "11041": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11043": {
      "op": "PUSH2",
      "value": "0x2B2F"
    },
    "11046": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11048": {
      "op": "DUP4"
    },
    "11049": {
      "op": "ADD"
    },
    "11050": {
      "op": "DUP8"
    },
    "11051": {
      "op": "PUSH2",
      "value": "0x21C7"
    },
    "11054": {
      "jump": "i",
      "op": "JUMP"
    },
    "11055": {
      "op": "JUMPDEST"
    },
    "11056": {
      "op": "DUP3"
    },
    "11057": {
      "op": "DUP2"
    },
    "11058": {
      "op": "SUB"
    },
    "11059": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11061": {
      "op": "DUP5"
    },
    "11062": {
      "op": "ADD"
    },
    "11063": {
      "op": "MSTORE"
    },
    "11064": {
      "op": "PUSH2",
      "value": "0x2B41"
    },
    "11067": {
      "op": "DUP2"
    },
    "11068": {
      "op": "DUP8"
    },
    "11069": {
      "op": "PUSH2",
      "value": "0x21C7"
    },
    "11072": {
      "jump": "i",
      "op": "JUMP"
    },
    "11073": {
      "op": "JUMPDEST"
    },
    "11074": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11076": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11078": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11080": {
      "op": "SHL"
    },
    "11081": {
      "op": "SUB"
    },
    "11082": {
      "op": "DUP7"
    },
    "11083": {
      "op": "AND"
    },
    "11084": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11086": {
      "op": "DUP6"
    },
    "11087": {
      "op": "ADD"
    },
    "11088": {
      "op": "MSTORE"
    },
    "11089": {
      "op": "DUP4"
    },
    "11090": {
      "op": "DUP2"
    },
    "11091": {
      "op": "SUB"
    },
    "11092": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11094": {
      "op": "DUP6"
    },
    "11095": {
      "op": "ADD"
    },
    "11096": {
      "op": "MSTORE"
    },
    "11097": {
      "op": "SWAP1"
    },
    "11098": {
      "op": "POP"
    },
    "11099": {
      "op": "PUSH2",
      "value": "0x2B64"
    },
    "11102": {
      "op": "DUP2"
    },
    "11103": {
      "op": "DUP6"
    },
    "11104": {
      "op": "PUSH2",
      "value": "0x21C7"
    },
    "11107": {
      "jump": "i",
      "op": "JUMP"
    },
    "11108": {
      "op": "JUMPDEST"
    },
    "11109": {
      "op": "SWAP8"
    },
    "11110": {
      "op": "SWAP7"
    },
    "11111": {
      "op": "POP"
    },
    "11112": {
      "op": "POP"
    },
    "11113": {
      "op": "POP"
    },
    "11114": {
      "op": "POP"
    },
    "11115": {
      "op": "POP"
    },
    "11116": {
      "op": "POP"
    },
    "11117": {
      "op": "POP"
    },
    "11118": {
      "jump": "o",
      "op": "JUMP"
    },
    "11119": {
      "op": "JUMPDEST"
    },
    "11120": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11122": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11124": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11126": {
      "op": "SHL"
    },
    "11127": {
      "op": "SUB"
    },
    "11128": {
      "op": "DUP7"
    },
    "11129": {
      "op": "DUP2"
    },
    "11130": {
      "op": "AND"
    },
    "11131": {
      "op": "DUP3"
    },
    "11132": {
      "op": "MSTORE"
    },
    "11133": {
      "op": "DUP6"
    },
    "11134": {
      "op": "AND"
    },
    "11135": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11137": {
      "op": "DUP3"
    },
    "11138": {
      "op": "ADD"
    },
    "11139": {
      "op": "MSTORE"
    },
    "11140": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11142": {
      "op": "DUP2"
    },
    "11143": {
      "op": "ADD"
    },
    "11144": {
      "op": "DUP5"
    },
    "11145": {
      "op": "SWAP1"
    },
    "11146": {
      "op": "MSTORE"
    },
    "11147": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11149": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11151": {
      "op": "DUP3"
    },
    "11152": {
      "op": "ADD"
    },
    "11153": {
      "op": "DUP2"
    },
    "11154": {
      "op": "SWAP1"
    },
    "11155": {
      "op": "MSTORE"
    },
    "11156": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11158": {
      "op": "SWAP1"
    },
    "11159": {
      "op": "PUSH2",
      "value": "0x2BA2"
    },
    "11162": {
      "op": "SWAP1"
    },
    "11163": {
      "op": "DUP4"
    },
    "11164": {
      "op": "ADD"
    },
    "11165": {
      "op": "DUP6"
    },
    "11166": {
      "op": "PUSH2",
      "value": "0x21C7"
    },
    "11169": {
      "jump": "i",
      "op": "JUMP"
    },
    "11170": {
      "op": "JUMPDEST"
    },
    "11171": {
      "op": "SWAP1"
    },
    "11172": {
      "op": "POP"
    },
    "11173": {
      "op": "DUP3"
    },
    "11174": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11176": {
      "op": "DUP4"
    },
    "11177": {
      "op": "ADD"
    },
    "11178": {
      "op": "MSTORE"
    },
    "11179": {
      "op": "SWAP7"
    },
    "11180": {
      "op": "SWAP6"
    },
    "11181": {
      "op": "POP"
    },
    "11182": {
      "op": "POP"
    },
    "11183": {
      "op": "POP"
    },
    "11184": {
      "op": "POP"
    },
    "11185": {
      "op": "POP"
    },
    "11186": {
      "op": "POP"
    },
    "11187": {
      "jump": "o",
      "op": "JUMP"
    },
    "11188": {
      "op": "JUMPDEST"
    },
    "11189": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11191": {
      "op": "DUP2"
    },
    "11192": {
      "op": "DUP2"
    },
    "11193": {
      "op": "SHR"
    },
    "11194": {
      "op": "SWAP1"
    },
    "11195": {
      "op": "DUP3"
    },
    "11196": {
      "op": "AND"
    },
    "11197": {
      "op": "DUP1"
    },
    "11198": {
      "op": "PUSH2",
      "value": "0x2BC8"
    },
    "11201": {
      "op": "JUMPI"
    },
    "11202": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "11204": {
      "op": "DUP3"
    },
    "11205": {
      "op": "AND"
    },
    "11206": {
      "op": "SWAP2"
    },
    "11207": {
      "op": "POP"
    },
    "11208": {
      "op": "JUMPDEST"
    },
    "11209": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11211": {
      "op": "DUP3"
    },
    "11212": {
      "op": "LT"
    },
    "11213": {
      "op": "DUP2"
    },
    "11214": {
      "op": "EQ"
    },
    "11215": {
      "op": "ISZERO"
    },
    "11216": {
      "op": "PUSH2",
      "value": "0x2BE9"
    },
    "11219": {
      "op": "JUMPI"
    },
    "11220": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11225": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11227": {
      "op": "SHL"
    },
    "11228": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11230": {
      "op": "MSTORE"
    },
    "11231": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "11233": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11235": {
      "op": "MSTORE"
    },
    "11236": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11238": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11240": {
      "op": "REVERT"
    },
    "11241": {
      "op": "JUMPDEST"
    },
    "11242": {
      "op": "POP"
    },
    "11243": {
      "op": "SWAP2"
    },
    "11244": {
      "op": "SWAP1"
    },
    "11245": {
      "op": "POP"
    },
    "11246": {
      "jump": "o",
      "op": "JUMP"
    },
    "11247": {
      "op": "JUMPDEST"
    },
    "11248": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11252": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11254": {
      "op": "SHL"
    },
    "11255": {
      "op": "SUB"
    },
    "11256": {
      "op": "DUP6"
    },
    "11257": {
      "op": "AND"
    },
    "11258": {
      "op": "DUP2"
    },
    "11259": {
      "op": "MSTORE"
    },
    "11260": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11262": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11264": {
      "op": "DUP3"
    },
    "11265": {
      "op": "ADD"
    },
    "11266": {
      "op": "DUP2"
    },
    "11267": {
      "op": "SWAP1"
    },
    "11268": {
      "op": "MSTORE"
    },
    "11269": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11271": {
      "op": "SWAP1"
    },
    "11272": {
      "op": "PUSH2",
      "value": "0x2C13"
    },
    "11275": {
      "op": "SWAP1"
    },
    "11276": {
      "op": "DUP4"
    },
    "11277": {
      "op": "ADD"
    },
    "11278": {
      "op": "DUP7"
    },
    "11279": {
      "op": "PUSH2",
      "value": "0x21C7"
    },
    "11282": {
      "jump": "i",
      "op": "JUMP"
    },
    "11283": {
      "op": "JUMPDEST"
    },
    "11284": {
      "op": "DUP5"
    },
    "11285": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11287": {
      "op": "DUP5"
    },
    "11288": {
      "op": "ADD"
    },
    "11289": {
      "op": "MSTORE"
    },
    "11290": {
      "op": "DUP3"
    },
    "11291": {
      "op": "DUP2"
    },
    "11292": {
      "op": "SUB"
    },
    "11293": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11295": {
      "op": "DUP5"
    },
    "11296": {
      "op": "ADD"
    },
    "11297": {
      "op": "MSTORE"
    },
    "11298": {
      "op": "PUSH2",
      "value": "0x2B64"
    },
    "11301": {
      "op": "DUP2"
    },
    "11302": {
      "op": "DUP6"
    },
    "11303": {
      "op": "PUSH2",
      "value": "0x21C7"
    },
    "11306": {
      "jump": "i",
      "op": "JUMP"
    },
    "11307": {
      "op": "JUMPDEST"
    },
    "11308": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11312": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11314": {
      "op": "SHL"
    },
    "11315": {
      "op": "SUB"
    },
    "11316": {
      "op": "DUP8"
    },
    "11317": {
      "op": "AND"
    },
    "11318": {
      "op": "DUP2"
    },
    "11319": {
      "op": "MSTORE"
    },
    "11320": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "11322": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11324": {
      "op": "DUP3"
    },
    "11325": {
      "op": "ADD"
    },
    "11326": {
      "op": "DUP2"
    },
    "11327": {
      "op": "SWAP1"
    },
    "11328": {
      "op": "MSTORE"
    },
    "11329": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11331": {
      "op": "SWAP1"
    },
    "11332": {
      "op": "PUSH2",
      "value": "0x2C4F"
    },
    "11335": {
      "op": "SWAP1"
    },
    "11336": {
      "op": "DUP4"
    },
    "11337": {
      "op": "ADD"
    },
    "11338": {
      "op": "DUP9"
    },
    "11339": {
      "op": "PUSH2",
      "value": "0x21C7"
    },
    "11342": {
      "jump": "i",
      "op": "JUMP"
    },
    "11343": {
      "op": "JUMPDEST"
    },
    "11344": {
      "op": "DUP3"
    },
    "11345": {
      "op": "DUP2"
    },
    "11346": {
      "op": "SUB"
    },
    "11347": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11349": {
      "op": "DUP5"
    },
    "11350": {
      "op": "ADD"
    },
    "11351": {
      "op": "MSTORE"
    },
    "11352": {
      "op": "PUSH2",
      "value": "0x2C61"
    },
    "11355": {
      "op": "DUP2"
    },
    "11356": {
      "op": "DUP9"
    },
    "11357": {
      "op": "PUSH2",
      "value": "0x21C7"
    },
    "11360": {
      "jump": "i",
      "op": "JUMP"
    },
    "11361": {
      "op": "JUMPDEST"
    },
    "11362": {
      "op": "SWAP1"
    },
    "11363": {
      "op": "POP"
    },
    "11364": {
      "op": "DUP6"
    },
    "11365": {
      "op": "ISZERO"
    },
    "11366": {
      "op": "ISZERO"
    },
    "11367": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11369": {
      "op": "DUP5"
    },
    "11370": {
      "op": "ADD"
    },
    "11371": {
      "op": "MSTORE"
    },
    "11372": {
      "op": "DUP5"
    },
    "11373": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11375": {
      "op": "DUP5"
    },
    "11376": {
      "op": "ADD"
    },
    "11377": {
      "op": "MSTORE"
    },
    "11378": {
      "op": "DUP3"
    },
    "11379": {
      "op": "DUP2"
    },
    "11380": {
      "op": "SUB"
    },
    "11381": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11383": {
      "op": "DUP5"
    },
    "11384": {
      "op": "ADD"
    },
    "11385": {
      "op": "MSTORE"
    },
    "11386": {
      "op": "PUSH2",
      "value": "0x2C83"
    },
    "11389": {
      "op": "DUP2"
    },
    "11390": {
      "op": "DUP6"
    },
    "11391": {
      "op": "PUSH2",
      "value": "0x21C7"
    },
    "11394": {
      "jump": "i",
      "op": "JUMP"
    },
    "11395": {
      "op": "JUMPDEST"
    },
    "11396": {
      "op": "SWAP10"
    },
    "11397": {
      "op": "SWAP9"
    },
    "11398": {
      "op": "POP"
    },
    "11399": {
      "op": "POP"
    },
    "11400": {
      "op": "POP"
    },
    "11401": {
      "op": "POP"
    },
    "11402": {
      "op": "POP"
    },
    "11403": {
      "op": "POP"
    },
    "11404": {
      "op": "POP"
    },
    "11405": {
      "op": "POP"
    },
    "11406": {
      "op": "POP"
    },
    "11407": {
      "jump": "o",
      "op": "JUMP"
    },
    "11408": {
      "op": "JUMPDEST"
    },
    "11409": {
      "op": "DUP4"
    },
    "11410": {
      "op": "DUP2"
    },
    "11411": {
      "op": "MSTORE"
    },
    "11412": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11414": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11416": {
      "op": "DUP3"
    },
    "11417": {
      "op": "ADD"
    },
    "11418": {
      "op": "MSTORE"
    },
    "11419": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11421": {
      "op": "PUSH2",
      "value": "0x2CA9"
    },
    "11424": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11426": {
      "op": "DUP4"
    },
    "11427": {
      "op": "ADD"
    },
    "11428": {
      "op": "DUP6"
    },
    "11429": {
      "op": "PUSH2",
      "value": "0x21C7"
    },
    "11432": {
      "jump": "i",
      "op": "JUMP"
    },
    "11433": {
      "op": "JUMPDEST"
    },
    "11434": {
      "op": "SWAP1"
    },
    "11435": {
      "op": "POP"
    },
    "11436": {
      "op": "DUP3"
    },
    "11437": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11439": {
      "op": "DUP4"
    },
    "11440": {
      "op": "ADD"
    },
    "11441": {
      "op": "MSTORE"
    },
    "11442": {
      "op": "SWAP5"
    },
    "11443": {
      "op": "SWAP4"
    },
    "11444": {
      "op": "POP"
    },
    "11445": {
      "op": "POP"
    },
    "11446": {
      "op": "POP"
    },
    "11447": {
      "op": "POP"
    },
    "11448": {
      "jump": "o",
      "op": "JUMP"
    },
    "11449": {
      "op": "JUMPDEST"
    },
    "11450": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11454": {
      "op": "DUP1"
    },
    "11455": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11457": {
      "op": "SHL"
    },
    "11458": {
      "op": "SUB"
    },
    "11459": {
      "op": "DUP1"
    },
    "11460": {
      "op": "DUP10"
    },
    "11461": {
      "op": "AND"
    },
    "11462": {
      "op": "DUP4"
    },
    "11463": {
      "op": "MSTORE"
    },
    "11464": {
      "op": "DUP8"
    },
    "11465": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11467": {
      "op": "DUP5"
    },
    "11468": {
      "op": "ADD"
    },
    "11469": {
      "op": "MSTORE"
    },
    "11470": {
      "op": "DUP1"
    },
    "11471": {
      "op": "DUP8"
    },
    "11472": {
      "op": "AND"
    },
    "11473": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11475": {
      "op": "DUP5"
    },
    "11476": {
      "op": "ADD"
    },
    "11477": {
      "op": "MSTORE"
    },
    "11478": {
      "op": "POP"
    },
    "11479": {
      "op": "DUP5"
    },
    "11480": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11482": {
      "op": "DUP4"
    },
    "11483": {
      "op": "ADD"
    },
    "11484": {
      "op": "MSTORE"
    },
    "11485": {
      "op": "DUP4"
    },
    "11486": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11488": {
      "op": "DUP4"
    },
    "11489": {
      "op": "ADD"
    },
    "11490": {
      "op": "MSTORE"
    },
    "11491": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "11493": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11495": {
      "op": "DUP4"
    },
    "11496": {
      "op": "ADD"
    },
    "11497": {
      "op": "MSTORE"
    },
    "11498": {
      "op": "PUSH2",
      "value": "0x2CF6"
    },
    "11501": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "11503": {
      "op": "DUP4"
    },
    "11504": {
      "op": "ADD"
    },
    "11505": {
      "op": "DUP5"
    },
    "11506": {
      "op": "PUSH2",
      "value": "0x21C7"
    },
    "11509": {
      "jump": "i",
      "op": "JUMP"
    },
    "11510": {
      "op": "JUMPDEST"
    },
    "11511": {
      "op": "SWAP9"
    },
    "11512": {
      "op": "SWAP8"
    },
    "11513": {
      "op": "POP"
    },
    "11514": {
      "op": "POP"
    },
    "11515": {
      "op": "POP"
    },
    "11516": {
      "op": "POP"
    },
    "11517": {
      "op": "POP"
    },
    "11518": {
      "op": "POP"
    },
    "11519": {
      "op": "POP"
    },
    "11520": {
      "op": "POP"
    },
    "11521": {
      "jump": "o",
      "op": "JUMP"
    },
    "11522": {
      "op": "JUMPDEST"
    },
    "11523": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11525": {
      "op": "DUP2"
    },
    "11526": {
      "op": "MSTORE"
    },
    "11527": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11529": {
      "op": "PUSH2",
      "value": "0x2D15"
    },
    "11532": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11534": {
      "op": "DUP4"
    },
    "11535": {
      "op": "ADD"
    },
    "11536": {
      "op": "DUP6"
    },
    "11537": {
      "op": "PUSH2",
      "value": "0x21C7"
    },
    "11540": {
      "jump": "i",
      "op": "JUMP"
    },
    "11541": {
      "op": "JUMPDEST"
    },
    "11542": {
      "op": "SWAP1"
    },
    "11543": {
      "op": "POP"
    },
    "11544": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "11547": {
      "op": "DUP4"
    },
    "11548": {
      "op": "AND"
    },
    "11549": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11551": {
      "op": "DUP4"
    },
    "11552": {
      "op": "ADD"
    },
    "11553": {
      "op": "MSTORE"
    },
    "11554": {
      "op": "SWAP4"
    },
    "11555": {
      "op": "SWAP3"
    },
    "11556": {
      "op": "POP"
    },
    "11557": {
      "op": "POP"
    },
    "11558": {
      "op": "POP"
    },
    "11559": {
      "jump": "o",
      "op": "JUMP"
    },
    "11560": {
      "op": "JUMPDEST"
    },
    "11561": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11563": {
      "op": "DUP1"
    },
    "11564": {
      "op": "DUP3"
    },
    "11565": {
      "op": "MSTORE"
    },
    "11566": {
      "op": "DUP6"
    },
    "11567": {
      "op": "MLOAD"
    },
    "11568": {
      "op": "SWAP1"
    },
    "11569": {
      "op": "DUP3"
    },
    "11570": {
      "op": "ADD"
    },
    "11571": {
      "op": "DUP2"
    },
    "11572": {
      "op": "SWAP1"
    },
    "11573": {
      "op": "MSTORE"
    },
    "11574": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11576": {
      "op": "SWAP1"
    },
    "11577": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11579": {
      "op": "SWAP1"
    },
    "11580": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11582": {
      "op": "DUP5"
    },
    "11583": {
      "op": "ADD"
    },
    "11584": {
      "op": "SWAP1"
    },
    "11585": {
      "op": "DUP3"
    },
    "11586": {
      "op": "DUP10"
    },
    "11587": {
      "op": "ADD"
    },
    "11588": {
      "op": "DUP5"
    },
    "11589": {
      "op": "JUMPDEST"
    },
    "11590": {
      "op": "DUP3"
    },
    "11591": {
      "op": "DUP2"
    },
    "11592": {
      "op": "LT"
    },
    "11593": {
      "op": "ISZERO"
    },
    "11594": {
      "op": "PUSH2",
      "value": "0x2D61"
    },
    "11597": {
      "op": "JUMPI"
    },
    "11598": {
      "op": "DUP2"
    },
    "11599": {
      "op": "MLOAD"
    },
    "11600": {
      "op": "DUP5"
    },
    "11601": {
      "op": "MSTORE"
    },
    "11602": {
      "op": "SWAP3"
    },
    "11603": {
      "op": "DUP5"
    },
    "11604": {
      "op": "ADD"
    },
    "11605": {
      "op": "SWAP3"
    },
    "11606": {
      "op": "SWAP1"
    },
    "11607": {
      "op": "DUP5"
    },
    "11608": {
      "op": "ADD"
    },
    "11609": {
      "op": "SWAP1"
    },
    "11610": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11612": {
      "op": "ADD"
    },
    "11613": {
      "op": "PUSH2",
      "value": "0x2D45"
    },
    "11616": {
      "op": "JUMP"
    },
    "11617": {
      "op": "JUMPDEST"
    },
    "11618": {
      "op": "POP"
    },
    "11619": {
      "op": "POP"
    },
    "11620": {
      "op": "POP"
    },
    "11621": {
      "op": "DUP7"
    },
    "11622": {
      "op": "ISZERO"
    },
    "11623": {
      "op": "ISZERO"
    },
    "11624": {
      "op": "DUP3"
    },
    "11625": {
      "op": "DUP6"
    },
    "11626": {
      "op": "ADD"
    },
    "11627": {
      "op": "MSTORE"
    },
    "11628": {
      "op": "DUP4"
    },
    "11629": {
      "op": "DUP2"
    },
    "11630": {
      "op": "SUB"
    },
    "11631": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11633": {
      "op": "DUP6"
    },
    "11634": {
      "op": "ADD"
    },
    "11635": {
      "op": "MSTORE"
    },
    "11636": {
      "op": "PUSH2",
      "value": "0x2D7D"
    },
    "11639": {
      "op": "DUP2"
    },
    "11640": {
      "op": "DUP8"
    },
    "11641": {
      "op": "PUSH2",
      "value": "0x21C7"
    },
    "11644": {
      "jump": "i",
      "op": "JUMP"
    },
    "11645": {
      "op": "JUMPDEST"
    },
    "11646": {
      "op": "SWAP2"
    },
    "11647": {
      "op": "POP"
    },
    "11648": {
      "op": "POP"
    },
    "11649": {
      "op": "DUP3"
    },
    "11650": {
      "op": "DUP2"
    },
    "11651": {
      "op": "SUB"
    },
    "11652": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11654": {
      "op": "DUP5"
    },
    "11655": {
      "op": "ADD"
    },
    "11656": {
      "op": "MSTORE"
    },
    "11657": {
      "op": "PUSH2",
      "value": "0x2B64"
    },
    "11660": {
      "op": "DUP2"
    },
    "11661": {
      "op": "DUP6"
    },
    "11662": {
      "op": "PUSH2",
      "value": "0x21C7"
    },
    "11665": {
      "jump": "i",
      "op": "JUMP"
    },
    "11666": {
      "op": "JUMPDEST"
    },
    "11667": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11672": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11674": {
      "op": "SHL"
    },
    "11675": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11677": {
      "op": "MSTORE"
    },
    "11678": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "11680": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11682": {
      "op": "MSTORE"
    },
    "11683": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11685": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11687": {
      "op": "REVERT"
    },
    "11688": {
      "op": "JUMPDEST"
    },
    "11689": {
      "op": "DUP1"
    },
    "11690": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11692": {
      "op": "JUMPDEST"
    },
    "11693": {
      "op": "PUSH1",
      "value": "0x6"
    },
    "11695": {
      "op": "DUP2"
    },
    "11696": {
      "op": "LT"
    },
    "11697": {
      "op": "ISZERO"
    },
    "11698": {
      "op": "PUSH2",
      "value": "0x15F5"
    },
    "11701": {
      "op": "JUMPI"
    },
    "11702": {
      "op": "DUP2"
    },
    "11703": {
      "op": "MLOAD"
    },
    "11704": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11708": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11710": {
      "op": "SHL"
    },
    "11711": {
      "op": "SUB"
    },
    "11712": {
      "op": "AND"
    },
    "11713": {
      "op": "DUP5"
    },
    "11714": {
      "op": "MSTORE"
    },
    "11715": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11717": {
      "op": "SWAP4"
    },
    "11718": {
      "op": "DUP5"
    },
    "11719": {
      "op": "ADD"
    },
    "11720": {
      "op": "SWAP4"
    },
    "11721": {
      "op": "SWAP1"
    },
    "11722": {
      "op": "SWAP2"
    },
    "11723": {
      "op": "ADD"
    },
    "11724": {
      "op": "SWAP1"
    },
    "11725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11727": {
      "op": "ADD"
    },
    "11728": {
      "op": "PUSH2",
      "value": "0x2DAC"
    },
    "11731": {
      "op": "JUMP"
    },
    "11732": {
      "op": "JUMPDEST"
    },
    "11733": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11735": {
      "op": "DUP2"
    },
    "11736": {
      "op": "MLOAD"
    },
    "11737": {
      "op": "DUP1"
    },
    "11738": {
      "op": "DUP5"
    },
    "11739": {
      "op": "MSTORE"
    },
    "11740": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11742": {
      "op": "DUP1"
    },
    "11743": {
      "op": "DUP6"
    },
    "11744": {
      "op": "ADD"
    },
    "11745": {
      "op": "SWAP5"
    },
    "11746": {
      "op": "POP"
    },
    "11747": {
      "op": "DUP1"
    },
    "11748": {
      "op": "DUP5"
    },
    "11749": {
      "op": "ADD"
    },
    "11750": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11752": {
      "op": "JUMPDEST"
    },
    "11753": {
      "op": "DUP4"
    },
    "11754": {
      "op": "DUP2"
    },
    "11755": {
      "op": "LT"
    },
    "11756": {
      "op": "ISZERO"
    },
    "11757": {
      "op": "PUSH2",
      "value": "0x2E0D"
    },
    "11760": {
      "op": "JUMPI"
    },
    "11761": {
      "op": "DUP2"
    },
    "11762": {
      "op": "MLOAD"
    },
    "11763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11767": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11769": {
      "op": "SHL"
    },
    "11770": {
      "op": "SUB"
    },
    "11771": {
      "op": "AND"
    },
    "11772": {
      "op": "DUP8"
    },
    "11773": {
      "op": "MSTORE"
    },
    "11774": {
      "op": "SWAP6"
    },
    "11775": {
      "op": "DUP3"
    },
    "11776": {
      "op": "ADD"
    },
    "11777": {
      "op": "SWAP6"
    },
    "11778": {
      "op": "SWAP1"
    },
    "11779": {
      "op": "DUP3"
    },
    "11780": {
      "op": "ADD"
    },
    "11781": {
      "op": "SWAP1"
    },
    "11782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11784": {
      "op": "ADD"
    },
    "11785": {
      "op": "PUSH2",
      "value": "0x2DE8"
    },
    "11788": {
      "op": "JUMP"
    },
    "11789": {
      "op": "JUMPDEST"
    },
    "11790": {
      "op": "POP"
    },
    "11791": {
      "op": "SWAP5"
    },
    "11792": {
      "op": "SWAP6"
    },
    "11793": {
      "op": "SWAP5"
    },
    "11794": {
      "op": "POP"
    },
    "11795": {
      "op": "POP"
    },
    "11796": {
      "op": "POP"
    },
    "11797": {
      "op": "POP"
    },
    "11798": {
      "op": "POP"
    },
    "11799": {
      "jump": "o",
      "op": "JUMP"
    },
    "11800": {
      "op": "JUMPDEST"
    },
    "11801": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11805": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11807": {
      "op": "SHL"
    },
    "11808": {
      "op": "SUB"
    },
    "11809": {
      "op": "DUP10"
    },
    "11810": {
      "op": "AND"
    },
    "11811": {
      "op": "DUP2"
    },
    "11812": {
      "op": "MSTORE"
    },
    "11813": {
      "op": "PUSH2",
      "value": "0x1E0"
    },
    "11816": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11818": {
      "op": "DUP1"
    },
    "11819": {
      "op": "DUP4"
    },
    "11820": {
      "op": "ADD"
    },
    "11821": {
      "op": "DUP3"
    },
    "11822": {
      "op": "SWAP1"
    },
    "11823": {
      "op": "MSTORE"
    },
    "11824": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11826": {
      "op": "SWAP2"
    },
    "11827": {
      "op": "SWAP1"
    },
    "11828": {
      "op": "PUSH2",
      "value": "0x2E3F"
    },
    "11831": {
      "op": "DUP5"
    },
    "11832": {
      "op": "DUP4"
    },
    "11833": {
      "op": "ADD"
    },
    "11834": {
      "op": "DUP13"
    },
    "11835": {
      "op": "PUSH2",
      "value": "0x21C7"
    },
    "11838": {
      "jump": "i",
      "op": "JUMP"
    },
    "11839": {
      "op": "JUMPDEST"
    },
    "11840": {
      "op": "SWAP2"
    },
    "11841": {
      "op": "POP"
    },
    "11842": {
      "op": "DUP10"
    },
    "11843": {
      "op": "ISZERO"
    },
    "11844": {
      "op": "ISZERO"
    },
    "11845": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11847": {
      "op": "DUP6"
    },
    "11848": {
      "op": "ADD"
    },
    "11849": {
      "op": "MSTORE"
    },
    "11850": {
      "op": "DUP9"
    },
    "11851": {
      "op": "ISZERO"
    },
    "11852": {
      "op": "ISZERO"
    },
    "11853": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11855": {
      "op": "DUP6"
    },
    "11856": {
      "op": "ADD"
    },
    "11857": {
      "op": "MSTORE"
    },
    "11858": {
      "op": "DUP8"
    },
    "11859": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11861": {
      "op": "DUP6"
    },
    "11862": {
      "op": "ADD"
    },
    "11863": {
      "op": "MSTORE"
    },
    "11864": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11866": {
      "op": "DUP5"
    },
    "11867": {
      "op": "ADD"
    },
    "11868": {
      "op": "DUP8"
    },
    "11869": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11871": {
      "op": "JUMPDEST"
    },
    "11872": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "11874": {
      "op": "DUP2"
    },
    "11875": {
      "op": "LT"
    },
    "11876": {
      "op": "ISZERO"
    },
    "11877": {
      "op": "PUSH2",
      "value": "0x2E7C"
    },
    "11880": {
      "op": "JUMPI"
    },
    "11881": {
      "op": "DUP2"
    },
    "11882": {
      "op": "MLOAD"
    },
    "11883": {
      "op": "DUP4"
    },
    "11884": {
      "op": "MSTORE"
    },
    "11885": {
      "op": "SWAP2"
    },
    "11886": {
      "op": "DUP4"
    },
    "11887": {
      "op": "ADD"
    },
    "11888": {
      "op": "SWAP2"
    },
    "11889": {
      "op": "SWAP1"
    },
    "11890": {
      "op": "DUP4"
    },
    "11891": {
      "op": "ADD"
    },
    "11892": {
      "op": "SWAP1"
    },
    "11893": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11895": {
      "op": "ADD"
    },
    "11896": {
      "op": "PUSH2",
      "value": "0x2E5F"
    },
    "11899": {
      "op": "JUMP"
    },
    "11900": {
      "op": "JUMPDEST"
    },
    "11901": {
      "op": "POP"
    },
    "11902": {
      "op": "POP"
    },
    "11903": {
      "op": "POP"
    },
    "11904": {
      "op": "POP"
    },
    "11905": {
      "op": "PUSH2",
      "value": "0x2E8E"
    },
    "11908": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "11911": {
      "op": "DUP5"
    },
    "11912": {
      "op": "ADD"
    },
    "11913": {
      "op": "DUP7"
    },
    "11914": {
      "op": "PUSH2",
      "value": "0x2DA8"
    },
    "11917": {
      "jump": "i",
      "op": "JUMP"
    },
    "11918": {
      "op": "JUMPDEST"
    },
    "11919": {
      "op": "DUP3"
    },
    "11920": {
      "op": "DUP2"
    },
    "11921": {
      "op": "SUB"
    },
    "11922": {
      "op": "PUSH2",
      "value": "0x1C0"
    },
    "11925": {
      "op": "DUP5"
    },
    "11926": {
      "op": "ADD"
    },
    "11927": {
      "op": "MSTORE"
    },
    "11928": {
      "op": "PUSH2",
      "value": "0x2EA1"
    },
    "11931": {
      "op": "DUP2"
    },
    "11932": {
      "op": "DUP6"
    },
    "11933": {
      "op": "PUSH2",
      "value": "0x2DD4"
    },
    "11936": {
      "jump": "i",
      "op": "JUMP"
    },
    "11937": {
      "op": "JUMPDEST"
    },
    "11938": {
      "op": "SWAP12"
    },
    "11939": {
      "op": "SWAP11"
    },
    "11940": {
      "op": "POP"
    },
    "11941": {
      "op": "POP"
    },
    "11942": {
      "op": "POP"
    },
    "11943": {
      "op": "POP"
    },
    "11944": {
      "op": "POP"
    },
    "11945": {
      "op": "POP"
    },
    "11946": {
      "op": "POP"
    },
    "11947": {
      "op": "POP"
    },
    "11948": {
      "op": "POP"
    },
    "11949": {
      "op": "POP"
    },
    "11950": {
      "op": "POP"
    },
    "11951": {
      "jump": "o",
      "op": "JUMP"
    },
    "11952": {
      "op": "JUMPDEST"
    },
    "11953": {
      "op": "DUP5"
    },
    "11954": {
      "op": "DUP2"
    },
    "11955": {
      "op": "MSTORE"
    },
    "11956": {
      "op": "DUP4"
    },
    "11957": {
      "op": "ISZERO"
    },
    "11958": {
      "op": "ISZERO"
    },
    "11959": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11961": {
      "op": "DUP3"
    },
    "11962": {
      "op": "ADD"
    },
    "11963": {
      "op": "MSTORE"
    },
    "11964": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11966": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11968": {
      "op": "DUP3"
    },
    "11969": {
      "op": "ADD"
    },
    "11970": {
      "op": "MSTORE"
    },
    "11971": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11973": {
      "op": "PUSH2",
      "value": "0x2ED1"
    },
    "11976": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11978": {
      "op": "DUP4"
    },
    "11979": {
      "op": "ADD"
    },
    "11980": {
      "op": "DUP6"
    },
    "11981": {
      "op": "PUSH2",
      "value": "0x21C7"
    },
    "11984": {
      "jump": "i",
      "op": "JUMP"
    },
    "11985": {
      "op": "JUMPDEST"
    },
    "11986": {
      "op": "DUP3"
    },
    "11987": {
      "op": "DUP2"
    },
    "11988": {
      "op": "SUB"
    },
    "11989": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11991": {
      "op": "DUP5"
    },
    "11992": {
      "op": "ADD"
    },
    "11993": {
      "op": "MSTORE"
    },
    "11994": {
      "op": "PUSH2",
      "value": "0x2B64"
    },
    "11997": {
      "op": "DUP2"
    },
    "11998": {
      "op": "DUP6"
    },
    "11999": {
      "op": "PUSH2",
      "value": "0x21C7"
    },
    "12002": {
      "jump": "i",
      "op": "JUMP"
    },
    "12003": {
      "op": "JUMPDEST"
    },
    "12004": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12006": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12008": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12010": {
      "op": "SHL"
    },
    "12011": {
      "op": "SUB"
    },
    "12012": {
      "op": "DUP7"
    },
    "12013": {
      "op": "DUP2"
    },
    "12014": {
      "op": "AND"
    },
    "12015": {
      "op": "DUP3"
    },
    "12016": {
      "op": "MSTORE"
    },
    "12017": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12019": {
      "op": "DUP3"
    },
    "12020": {
      "op": "ADD"
    },
    "12021": {
      "op": "DUP7"
    },
    "12022": {
      "op": "SWAP1"
    },
    "12023": {
      "op": "MSTORE"
    },
    "12024": {
      "op": "DUP5"
    },
    "12025": {
      "op": "AND"
    },
    "12026": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12028": {
      "op": "DUP3"
    },
    "12029": {
      "op": "ADD"
    },
    "12030": {
      "op": "MSTORE"
    },
    "12031": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12033": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12035": {
      "op": "DUP3"
    },
    "12036": {
      "op": "ADD"
    },
    "12037": {
      "op": "DUP2"
    },
    "12038": {
      "op": "SWAP1"
    },
    "12039": {
      "op": "MSTORE"
    },
    "12040": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12042": {
      "op": "SWAP1"
    },
    "12043": {
      "op": "PUSH2",
      "value": "0x2BA2"
    },
    "12046": {
      "op": "SWAP1"
    },
    "12047": {
      "op": "DUP4"
    },
    "12048": {
      "op": "ADD"
    },
    "12049": {
      "op": "DUP6"
    },
    "12050": {
      "op": "PUSH2",
      "value": "0x21C7"
    },
    "12053": {
      "jump": "i",
      "op": "JUMP"
    }
  },
  "sha1": "f9ce3f5c7ae9395515041dcf477bf33355dd2115",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.11;\n\nimport \"@openzeppelin/contracts/proxy/utils/Initializable.sol\";\nimport \"../CLCore/CLStorage.sol\";\nimport \"../../interfaces/IUnlock.sol\";\n\n\n/// @title Contract to implement and test the basic fuctions of CLHouses\n/// @author Leonardo Urrego\n/// @notice This contract for test only the most basic interactions\ncontract CLHouse is CLStorage, Initializable {\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor() {\n        _disableInitializers();\n    }\n\n    /// @notice Create a new CLH\n    /// @dev Some parameters can be ignored depending on the governance model\n    /// @param _owner The address of the deployed wallet\n    /// @param _houseName Name given by the owner\n    /// @param _housePrivate If is set to 1, the CLH is set to private\n    /// @param _houseOpen If is set to 1, the CLH is set to Open\n    /// @param _govModel keccak256 hash of the governance model, see the __GOV_* constans\n    /// @param _govRules Array for goverment rules see `enum gRule`\n    /// @param _CLC Array for CL Contracts and others see `enum eCLC`\n    /// @param _ManagerWallets Whitelist of address for invitate as managers\n    function Init(\n        address _owner, \n        string memory _houseName,\n        bool _housePrivate,\n        bool _houseOpen,\n        bytes32 _govModel,\n        uint256[3] memory _govRules,\n        address[6] memory _CLC,\n        address[] memory _ManagerWallets\n    )\n        external\n        reinitializer( __UPGRADEABLE_CLH_VERSION__ )\n    {\n        /// @custom:oz-upgrades-unsafe-allow delegatecall\n        (bool successDGTCLL, ) = _CLC[ uint256( eCLC.CLLConstructorCLH ) ].delegatecall(\n            abi.encodeWithSignature(\n                \"__CLHConstructor(address,string,bool,bool,bytes32,uint256[3],address[6],address[])\",\n                _owner, \n                _houseName,\n                _housePrivate,\n                _houseOpen,\n                _govModel,\n                _govRules,\n                _CLC,\n                _ManagerWallets\n            )\n        );\n\n        if( !successDGTCLL ) {\n            assembly {\n                let ptr := mload(0x40)\n                let size := returndatasize()\n                returndatacopy(ptr, 0, size)\n                revert(ptr, size)\n            }\n        }\n    }\n\n    /// @notice Execute (or reject) a proposal computing the votes and the governance model\n    /// @dev Normally is called internally after each vote\n    /// @param _propId ID of the proposal, based on `arrProposals`\n    /// @return status True if the proposal can be execute, false in other cases\n    /// @return message result of the transaction\n    function ExecProp(\n        uint256 _propId\n    )\n        public\n        returns(\n            bool status,\n            string memory message\n        )\n    {\n        address CLLGovernance = CCLFACTORY.CLLGovernance();\n        /// @custom:oz-upgrades-unsafe-allow delegatecall\n        (bool successDGTCLL, ) = CLLGovernance.delegatecall(\n            abi.encodeWithSignature(\n                \"ExecProp(uint256)\",\n                _propId\n            )\n        );\n\n        if( !successDGTCLL ) {\n            assembly {\n                let ptr := mload(0x40)\n                let size := returndatasize()\n                returndatacopy(ptr, 0, size)\n                revert(ptr, size)\n            }\n        }\n\n        return ( true , \"Success executed proposal\" );\n    }\n\n    /// @notice Used to vote a proposal\n    /// @dev After vote the proposal automatically try to be executed\n    /// @param _propId ID of the proposal, based on `arrProposals`\n    /// @param _support True for accept, false to reject\n    /// @param _justification About your vote\n    function VoteProposal(\n        uint256 _propId,\n        bool _support,\n        string memory _justification,\n        bytes memory _signature\n    )\n        public\n    {\n        address CLLGovernance = CCLFACTORY.CLLGovernance();\n        /// @custom:oz-upgrades-unsafe-allow delegatecall\n        (bool successDGTCLL, ) = CLLGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"VoteProposal(uint256,bool,string,bytes)\",\n                _propId,\n                _support,\n                _justification,\n                _signature\n            )\n        );\n\n        if( !successDGTCLL ) {\n            assembly {\n                let ptr := mload(0x40)\n                let size := returndatasize()\n                returndatacopy(ptr, 0, size)\n                revert(ptr, size)\n            }\n        }\n    }\n\n    /// @notice Generate a new proposal to invite a new user\n    /// @dev the execution of this proposal only create an invitation \n    /// @param _walletAddr  Address of the new user\n    /// @param _name Can be the nickname or other reference to the User\n    /// @param _description A text for the proposal\n    /// @param _isManager True if is for a manager\n    /// @return propId ID of the new proposal, based on `arrProposals`\n    function PropInviteUser(\n        address _walletAddr,\n        string memory _name,\n        string memory _description,\n        bool _isManager,\n        uint256 _delayTime,\n        bytes memory _signature\n    )\n        external\n        returns( uint256 propId )\n    {\n        address CLLGovernance = CCLFACTORY.CLLGovernance();\n        /// @custom:oz-upgrades-unsafe-allow delegatecall\n        (bool successDGTCLL, ) = CLLGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropInviteUser(address,string,string,bool,uint256,bytes)\",\n                _walletAddr,\n                _name,\n                _description,\n                _isManager,\n                _delayTime,\n                _signature\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            propId := mload(ptr)\n        }\n    }\n\n    /// @notice Generate a new proposal for remove a user\n    /// @dev The user can be a managaer\n    /// @param _walletAddr user Address to be removed\n    /// @param _description About the proposal\n    /// @return propId ID of the new proposal, based on `arrProposals`\n    function PropRemoveUser(\n        address _walletAddr,\n        string memory _description,\n        uint256 _delayTime,\n        bytes memory _signature\n    )\n        external\n        returns( uint256 propId )\n    {\n        address CLLGovernance = CCLFACTORY.CLLGovernance();\n        /// @custom:oz-upgrades-unsafe-allow delegatecall\n        (bool successDGTCLL, ) = CLLGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropRemoveUser(address,string,uint256,bytes)\",\n                _walletAddr,\n                _description,\n                _delayTime,\n                _signature\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            propId := mload(ptr)\n        }\n    }\n\n    /// @notice generate a new proposal to transfer ETH in weis\n    /// @dev When execute this proposal, the transfer is made\n    /// @param _to Recipient address\n    /// @param _amountOutCLV Amount to transfer (in wei)\n    /// @param _description About this proposal\n    /// @return propId ID of the new proposal, based on `arrProposals`\n    function PropTxWei(\n        address _to,\n        uint256 _amountOutCLV,\n        string memory _description,\n        uint256 _delayTime\n    )\n        external\n        returns( uint256 propId )\n    {\n        address CLLGovernance = CCLFACTORY.CLLGovernance();\n        /// @custom:oz-upgrades-unsafe-allow delegatecall\n        (bool successDGTCLL, ) = CLLGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropTxWei(address,uint256,string,uint256)\",\n                _to,\n                _amountOutCLV,\n                _description,\n                _delayTime\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            propId := mload(ptr)\n        }\n    }\n\n    /// @notice generate a new proposal to transfer ETH in weis\n    /// @dev When execute this proposal, the transfer is made\n    /// @param _to Recipient address\n    /// @param _amountOutCLV Amount to transfer (in wei)\n    /// @param _description About this proposal\n    /// @return propId ID of the new proposal, based on `arrProposals`\n    function PropTxERC20(\n        address _to,\n        uint256 _amountOutCLV,\n        address _tokenOutCLV,\n        string memory _description,\n        uint256 _delayTime\n    )\n        external\n        returns( uint256 propId )\n    {\n        address CLLGovernance = CCLFACTORY.CLLGovernance();\n        /// @custom:oz-upgrades-unsafe-allow delegatecall\n        (bool successDGTCLL, ) = CLLGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropTxERC20(address,uint256,address,string,uint256)\",\n                _to,\n                _amountOutCLV,\n                _tokenOutCLV,\n                _description,\n                _delayTime\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            propId := mload(ptr)\n        }\n    }\n\n    /// @notice Generate a new proposal for change some governance parameters\n    /// @dev When execute this proposal the new values will be set\n    /// @param _newApprovPercentage The new percentaje for accept or reject a proposal\n    /// @param _description About the new proposal \n    /// @return propId ID of the new proposal, based on `arrProposals`\n    function PropGovRules(\n        uint256 _newApprovPercentage,\n        string memory _description,\n        uint256 _delayTime\n    )\n        external\n        returns( uint256 propId )\n    {\n        address CLLGovernance = CCLFACTORY.CLLGovernance();\n        /// @custom:oz-upgrades-unsafe-allow delegatecall\n        (bool successDGTCLL, ) = CLLGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropGovRules(uint256,string,uint256)\",\n                _newApprovPercentage,\n                _description,\n                _delayTime\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            propId := mload(ptr)\n        }\n    }\n\n    /// @notice Generate a proposal from a user that want to join to the CLH\n    /// @dev Only avaiable in public CLH\n    /// @param _name Nickname or other user identification\n    /// @param _description About the request\n    /// @param _signerWallet Address of signer to check OffChain signature\n    /// @return propId ID of the new proposal, based on `arrProposals`\n    function PropRequestToJoin(\n        string memory _name,\n        string memory _description,\n        address _signerWallet,\n        bytes memory _signature\n    )\n        external\n        returns( uint256 )\n    {\n        address CLLGovernance = CCLFACTORY.CLLGovernance();\n        /// @custom:oz-upgrades-unsafe-allow delegatecall\n        (bool successDGTCLL, ) = CLLGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropRequestToJoin(string,string,address,bytes)\",\n                _name,\n                _description,\n                _signerWallet,\n                _signature\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            return(ptr, size)\n        }\n    }\n\n    /// @notice For an user that have an invitation pending\n    /// @param _acceptance True for accept the invitation\n    function AcceptRejectInvitation(\n        bool _acceptance,\n        bytes memory _signature\n    )\n        external\n    {\n        address CLLUserManagement = CCLFACTORY.CLLUserManagement();\n        /// @custom:oz-upgrades-unsafe-allow delegatecall\n        (bool successDGTCLL, ) = CLLUserManagement.delegatecall(\n            abi.encodeWithSignature( \n                \"AcceptRejectInvitation(bool,bytes)\",\n                _acceptance,\n                _signature\n            )\n        );\n\n        if( !successDGTCLL ) {\n            assembly {\n                let ptr := mload(0x40)\n                let size := returndatasize()\n                returndatacopy(ptr, 0, size)\n                revert(ptr, size)\n            }\n        }\n    }\n\n    function PropSwapERC20(\n        address _tokenOutCLV,\n        address _tokenInCLV,\n        uint256 _amountOutCLV,\n        string memory _description,\n        uint256 _delayTime\n    )\n        external\n        returns( uint256 )\n    {\n        address CLLGovernance = CCLFACTORY.CLLGovernance();\n        /// @custom:oz-upgrades-unsafe-allow delegatecall\n        (bool successDGTCLL, ) = CLLGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropSwapERC20(address,address,uint256,string,uint256)\",\n                _tokenOutCLV,\n                _tokenInCLV,\n                _amountOutCLV,\n                _description,\n                _delayTime\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            return(ptr, size)\n        }\n    }\n\n    function PropSellERC20(\n        address _tokenOutCLV,\n        uint256 _amountOutCLV,\n        string memory _description,\n        uint256 _delayTime\n    )\n        external\n        returns( uint256 )\n    {\n        address CLLGovernance = CCLFACTORY.CLLGovernance();\n        /// @custom:oz-upgrades-unsafe-allow delegatecall\n        (bool successDGTCLL, ) = CLLGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropSellERC20(address,uint256,string,uint256)\",\n                _tokenOutCLV,\n                _amountOutCLV,\n                _description,\n                _delayTime\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            return(ptr, size)\n        }\n    }\n\n    function PropBuyERC20(\n        address _tokenInCLV,\n        uint256 _amountOutCLV,\n        string memory _description,\n        uint256 _delayTime\n    )\n        external\n        returns( uint256 )\n    {\n        address CLLGovernance = CCLFACTORY.CLLGovernance();\n        /// @custom:oz-upgrades-unsafe-allow delegatecall\n        (bool successDGTCLL, ) = CLLGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropBuyERC20(address,uint256,string,uint256)\",\n                _tokenInCLV,\n                _amountOutCLV,\n                _description,\n                _delayTime\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            return(ptr, size)\n        }\n    }\n\n\n    /// @notice Vote for multiple proposal\n    /// @param _propId Array with ID of the proposal to votes\n    /// @param _support is the Vote (True or False) for all proposals\n    /// @param _justification Description of the vote\n    function bulkVote(\n        uint256[] memory _propId,\n        bool _support,\n        string memory _justification,\n        bytes memory _signature\n    )\n        external\n    {\n        address CLLGovernance = CCLFACTORY.CLLGovernance();\n        /// @custom:oz-upgrades-unsafe-allow delegatecall\n        (bool successDGTCLL, ) = CLLGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"bulkVote(uint256[],bool,string,bytes)\",\n                _propId,\n                _support,\n                _justification,\n                _signature\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            return(ptr, size)\n        }\n    }\n\n    /// @notice Length of arrUsers array\n    function GetArrUsersLength() external view returns( uint256 ){\n        return arrUsers.length;\n    }\n\n    /// @notice Length of arrProposals array\n    function GetArrProposalsLength() external view returns( uint256 ){\n        return arrProposals.length;\n    }\n\n    /// @notice The list of all Proposals\n    /// @return arrProposals the array with all proposals\n    function GetProposalList() external view returns( strProposal[] memory ) {\n        return arrProposals;\n    }\n\n    /// @notice Get complete array of arrDataPropUser\n    /// @return arrDataPropUser the array with all data\n    function GetArrDataPropUser() external view returns( strDataUser[] memory ) {\n        return arrDataPropUser;\n    }\n\n    function GetCLHouseVersion() external view returns ( string memory ) {\n        return __CLHOUSE_VERSION__;\n    }\n\n    function SetWhitelistCollection( address _whiteListNFT ) external {\n        CheckIsManager( msg.sender );\n        whiteListNFT = _whiteListNFT;\n    }\n\n    function CreateLock(\n        uint256 _expirationDuration,\n        uint256 _keyPrice,\n        uint256 _maxNumberOfKeys,\n        string memory _lockName\n    )\n        external\n        returns (\n            address\n        )\n    {\n        CheckIsManager( msg.sender );\n        bytes memory params = abi.encodeWithSignature(\n            'initialize(address,uint256,address,uint256,uint256,string)',\n            msg.sender,\n            _expirationDuration,\n            address(0),\n            _keyPrice,\n            _maxNumberOfKeys,\n            _lockName\n        );\n\n        address aULF = 0x627118a4fB747016911e5cDA82e2E77C531e8206;\n\n        IUnlock iULF = IUnlock( aULF );\n\n        CLHLOCK = iULF.createUpgradeableLockAtVersion( params, 11 );\n\n        return CLHLOCK;\n    }\n}",
  "sourceMap": "366:18369:50:-:0;;;470:53;;;;;;;;;-1:-1:-1;494:22:50;:20;:22::i;:::-;366:18369;;5366:279:18;5434:13;;-1:-1:-1;;;5434:13:18;;;;5433:14;5425:66;;;;-1:-1:-1;;;5425:66:18;;216:2:66;5425:66:18;;;198:21:66;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:66;;;338:37;392:19;;5425:66:18;;;;;;;;5505:12;;5520:15;-1:-1:-1;;;5505:12:18;;;;;:30;5501:138;;;5551:12;:30;;-1:-1:-1;;;;5551:30:18;-1:-1:-1;;;5551:30:18;;;5600:28;;5566:15;564:36:66;;5600:28:18;;552:2:66;537:18;5600:28:18;;;;;;;5501:138;5366:279::o;422:184:66:-;366:18369:50;;;;;;",
  "sourcePath": "contracts/CLHouse/CLHouse.sol",
  "type": "contract"
}