{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_houseName",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "_housePrivate",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "_govModel",
          "type": "bytes32"
        },
        {
          "internalType": "uint8[3]",
          "name": "_govRules",
          "type": "uint8[3]"
        },
        {
          "internalType": "address[4]",
          "name": "_CCL",
          "type": "address[4]"
        },
        {
          "internalType": "address[]",
          "name": "_whiteListWallets",
          "type": "address[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newApprovPercentage",
          "type": "uint256"
        }
      ],
      "name": "evtChangeGovRules",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum memberEvent",
          "name": "eventMember",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "walletAddr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "evtMember",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum proposalEvent",
          "name": "eventProposal",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "propId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum proposalType",
          "name": "typeProposal",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "evtProposal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenOutCLV",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountOutCLV",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenInCLV",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountReceived",
          "type": "uint256"
        }
      ],
      "name": "evtSwapERC20",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "walletAddr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAdd",
          "type": "address"
        }
      ],
      "name": "evtTxERC20",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum assetsEvent",
          "name": "typeEvent",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "walletAddr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "evtTxEth",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "propId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "position",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "justification",
          "type": "string"
        }
      ],
      "name": "evtVoted",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_acceptance",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "AcceptRejectInvitation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_propId",
          "type": "uint256"
        }
      ],
      "name": "ExecProp",
      "outputs": [
        {
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "message",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "GetArrMembersLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "GetArrProposalsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "GetProposalList",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "proponent",
              "type": "address"
            },
            {
              "internalType": "enum proposalType",
              "name": "typeProposal",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "propDataId",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "numVotes",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "againstVotes",
              "type": "uint8"
            },
            {
              "internalType": "bool",
              "name": "executed",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "rejected",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "internalType": "struct strProposal[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "HOUSE_GOVERNANCE_MODEL",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "HOUSE_NAME",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenInCLV",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountOutCLV",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        }
      ],
      "name": "PropBuyERC20",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "propId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_newApprovPercentage",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        }
      ],
      "name": "PropGovRules",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "propId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_walletAddr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "_isManager",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "PropInviteMember",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "propId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_walletAddr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "PropRemoveMember",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "propId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "PropRequestToJoin",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenOutCLV",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountOutCLV",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        }
      ],
      "name": "PropSellERC20",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "propId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenOutCLV",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenInCLV",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountOutCLV",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        }
      ],
      "name": "PropSwapERC20",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "propId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountOutCLV",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_tokenOutCLV",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        }
      ],
      "name": "PropTxERC20",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "propId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountOutCLV",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        }
      ],
      "name": "PropTxWei",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "propId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_propId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_support",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "_justification",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "VoteProposal",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "arrDataPropAddMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "walletAddr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "isManager",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "arrDataPropGovRules",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "newApprovPercentage",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "arrDataPropTxAssets",
      "outputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountOutCLV",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tokenOutCLV",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenInCLV",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "arrMembers",
      "outputs": [
        {
          "internalType": "address",
          "name": "walletAddr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isMember",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isManager",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "arrProposals",
      "outputs": [
        {
          "internalType": "address",
          "name": "proponent",
          "type": "address"
        },
        {
          "internalType": "enum proposalType",
          "name": "typeProposal",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "propDataId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "numVotes",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "againstVotes",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "rejected",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "govRuleApprovPercentage",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "govRuleMaxActiveMembers",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "govRuleMaxManagerMembers",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "housePrivate",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "mapIdMember",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "mapInvitationMember",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "mapVotes",
      "outputs": [
        {
          "internalType": "bool",
          "name": "voted",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "inSupport",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "justification",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nftAdmin",
      "outputs": [
        {
          "internalType": "contract CLHNFT",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nftInvitation",
      "outputs": [
        {
          "internalType": "contract CLHNFT",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nftMember",
      "outputs": [
        {
          "internalType": "contract CLHNFT",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numActiveMembers",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numManagerMembers",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultCLH",
      "outputs": [
        {
          "internalType": "contract CLVault",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "35": "contracts/CLHouse/CLHouse.sol",
    "37": "contracts/CLHouse/CLStorage.sol",
    "41": "contracts/CLHouse/ICLHouse.sol"
  },
  "ast": {
    "absolutePath": "contracts/CLHouse/CLHouse.sol",
    "exportedSymbols": {
      "Address": [
        9684
      ],
      "ApiCLHouse": [
        663
      ],
      "CLHNFT": [
        5125
      ],
      "CLHouse": [
        1531
      ],
      "CLStorage": [
        2003
      ],
      "CLVault": [
        2453
      ],
      "Context": [
        9228
      ],
      "Counters": [
        7477
      ],
      "DebugDLGTCLL": [
        4699
      ],
      "ERC165": [
        9911
      ],
      "ERC721": [
        7245
      ],
      "ERC721Burnable": [
        7275
      ],
      "ERC721URIStorage": [
        7403
      ],
      "ICLF": [
        4790
      ],
      "ICLHouse": [
        5013
      ],
      "IERC165": [
        10653
      ],
      "IERC20": [
        6274
      ],
      "IERC721": [
        9344
      ],
      "IERC721Metadata": [
        9389
      ],
      "IERC721Receiver": [
        9362
      ],
      "ISwapRouter": [
        6025
      ],
      "IUniswapV3SwapCallback": [
        9206
      ],
      "InvalidGovernanceType": [
        4693
      ],
      "Ownable": [
        6379
      ],
      "Strings": [
        9887
      ],
      "TransferHelper": [
        6196
      ],
      "__CONTRACT_NAME_HASH__": [
        4628
      ],
      "__CONTRACT_VERSION_HASH__": [
        4633
      ],
      "__GOV_COMMITTEE__": [
        4618
      ],
      "__GOV_DICTATORSHIP__": [
        4613
      ],
      "__GOV_SIMPLE_MAJORITY__": [
        4623
      ],
      "__STR_EIP712DOMAIN_HASH__": [
        4641
      ],
      "__STR_OCDELMEMBER_HASH__": [
        4673
      ],
      "__STR_OCINVIT_HASH__": [
        4649
      ],
      "__STR_OCNEWCLH_HASH__": [
        4689
      ],
      "__STR_OCNEWMEMBER_HASH__": [
        4665
      ],
      "__STR_OCREQUEST_HASH__": [
        4681
      ],
      "__STR_OCVOTE_HASH__": [
        4657
      ],
      "assetsEvent": [
        4713
      ],
      "memberEvent": [
        4706
      ],
      "proposalEvent": [
        4717
      ],
      "proposalType": [
        4727
      ],
      "strDataAddMember": [
        4772
      ],
      "strDataGovRules": [
        4784
      ],
      "strDataTxAssets": [
        4781
      ],
      "strMember": [
        4738
      ],
      "strProposal": [
        4758
      ],
      "strVote": [
        4765
      ]
    },
    "id": 1532,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1048,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:35"
      },
      {
        "absolutePath": "contracts/CLHouse/CLStorage.sol",
        "file": "./CLStorage.sol",
        "id": 1049,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1532,
        "sourceUnit": 2004,
        "src": "58:25:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1051,
              "name": "CLStorage",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2003,
              "src": "274:9:35"
            },
            "id": 1052,
            "nodeType": "InheritanceSpecifier",
            "src": "274:9:35"
          }
        ],
        "canonicalName": "CLHouse",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1050,
          "nodeType": "StructuredDocumentation",
          "src": "85:169:35",
          "text": "@title Contract to implement and test the basic fuctions of CLHouses\n @author Leonardo Urrego\n @notice This contract for test only the most basic interactions"
        },
        "fullyImplemented": true,
        "id": 1531,
        "linearizedBaseContracts": [
          1531,
          2003
        ],
        "name": "CLHouse",
        "nameLocation": "263:7:35",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1110,
              "nodeType": "Block",
              "src": "1564:1032:35",
              "statements": [
                {
                  "assignments": [
                    1076,
                    1078
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1076,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "1580:13:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 1110,
                      "src": "1575:18:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1075,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1575:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1078,
                      "mutability": "mutable",
                      "name": "dataDLGTCLL",
                      "nameLocation": "1608:11:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 1110,
                      "src": "1595:24:35",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1077,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1595:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1104,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "434c4c434c48436f6e7374727563746f7228616464726573732c737472696e672c626f6f6c2c627974657333322c75696e74385b335d2c616464726573735b335d2c616464726573735b5d29",
                            "id": 1085,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1698:78:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_e68ea1fdbfead766c26aebd314a693bf8c87bea6e57d3c174581bdf732ef91e2",
                              "typeString": "literal_string \"CLLCLHConstructor(address,string,bool,bytes32,uint8[3],address[3],address[])\""
                            },
                            "value": "CLLCLHConstructor(address,string,bool,bytes32,uint8[3],address[3],address[])"
                          },
                          {
                            "id": 1086,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1055,
                            "src": "1794:6:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1087,
                            "name": "_houseName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1057,
                            "src": "1819:10:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 1088,
                            "name": "_housePrivate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1059,
                            "src": "1847:13:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 1089,
                            "name": "_govModel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1061,
                            "src": "1878:9:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 1090,
                            "name": "_govRules",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1065,
                            "src": "1905:9:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint8_$3_memory_ptr",
                              "typeString": "uint8[3] memory"
                            }
                          },
                          {
                            "components": [
                              {
                                "baseExpression": {
                                  "id": 1091,
                                  "name": "_CCL",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1069,
                                  "src": "2121:4:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$4_memory_ptr",
                                    "typeString": "address[4] memory"
                                  }
                                },
                                "id": 1093,
                                "indexExpression": {
                                  "hexValue": "30",
                                  "id": 1092,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2126:1:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2121:7:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "baseExpression": {
                                  "id": 1094,
                                  "name": "_CCL",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1069,
                                  "src": "2130:4:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$4_memory_ptr",
                                    "typeString": "address[4] memory"
                                  }
                                },
                                "id": 1096,
                                "indexExpression": {
                                  "hexValue": "31",
                                  "id": 1095,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2135:1:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2130:7:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "baseExpression": {
                                  "id": 1097,
                                  "name": "_CCL",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1069,
                                  "src": "2139:4:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$4_memory_ptr",
                                    "typeString": "address[4] memory"
                                  }
                                },
                                "id": 1099,
                                "indexExpression": {
                                  "hexValue": "33",
                                  "id": 1098,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2144:1:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_3_by_1",
                                    "typeString": "int_const 3"
                                  },
                                  "value": "3"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2139:7:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "id": 1100,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "2119:29:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$3_memory_ptr",
                              "typeString": "address[3] memory"
                            }
                          },
                          {
                            "id": 1101,
                            "name": "_whiteListWallets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1072,
                            "src": "2306:17:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_e68ea1fdbfead766c26aebd314a693bf8c87bea6e57d3c174581bdf732ef91e2",
                              "typeString": "literal_string \"CLLCLHConstructor(address,string,bool,bytes32,uint8[3],address[3],address[])\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint8_$3_memory_ptr",
                              "typeString": "uint8[3] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_address_$3_memory_ptr",
                              "typeString": "address[3] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          ],
                          "expression": {
                            "id": 1083,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1657:3:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1084,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "1657:23:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 1102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1657:680:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 1079,
                          "name": "_CCL",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1069,
                          "src": "1623:4:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$4_memory_ptr",
                            "typeString": "address[4] memory"
                          }
                        },
                        "id": 1081,
                        "indexExpression": {
                          "hexValue": "32",
                          "id": 1080,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1628:1:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1623:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1082,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "1623:20:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 1103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1623:724:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1574:773:35"
                },
                {
                  "condition": {
                    "id": 1106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2362:14:35",
                    "subExpression": {
                      "id": 1105,
                      "name": "successDGTCLL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1076,
                      "src": "2363:13:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1109,
                  "nodeType": "IfStatement",
                  "src": "2358:232:35",
                  "trueBody": {
                    "id": 1108,
                    "nodeType": "Block",
                    "src": "2379:211:35",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "2402:178:35",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2420:22:35",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2437:4:35",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2431:5:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2431:11:35"
                              },
                              "variables": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulTypedName",
                                  "src": "2424:3:35",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2459:28:35",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "returndatasize",
                                  "nodeType": "YulIdentifier",
                                  "src": "2471:14:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2471:16:35"
                              },
                              "variables": [
                                {
                                  "name": "size",
                                  "nodeType": "YulTypedName",
                                  "src": "2463:4:35",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "2519:3:35"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2524:1:35",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "2527:4:35"
                                  }
                                ],
                                "functionName": {
                                  "name": "returndatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "2504:14:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2504:28:35"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2504:28:35"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "2556:3:35"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "2561:4:35"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "2549:6:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2549:17:35"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2549:17:35"
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [],
                        "id": 1107,
                        "nodeType": "InlineAssembly",
                        "src": "2393:187:35"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1053,
              "nodeType": "StructuredDocumentation",
              "src": "969:74:35",
              "text": "@param _whiteListWallets Whitelist of address for invitate as managers"
            },
            "id": 1111,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1073,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1055,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "1077:6:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1111,
                  "src": "1069:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1054,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1069:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1057,
                  "mutability": "mutable",
                  "name": "_houseName",
                  "nameLocation": "1107:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1111,
                  "src": "1093:24:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1056,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1093:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1059,
                  "mutability": "mutable",
                  "name": "_housePrivate",
                  "nameLocation": "1132:13:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1111,
                  "src": "1127:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1058,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1127:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1061,
                  "mutability": "mutable",
                  "name": "_govModel",
                  "nameLocation": "1163:9:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1111,
                  "src": "1155:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1060,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1155:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1065,
                  "mutability": "mutable",
                  "name": "_govRules",
                  "nameLocation": "1198:9:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1111,
                  "src": "1182:25:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint8_$3_memory_ptr",
                    "typeString": "uint8[3]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1062,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "1182:5:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 1064,
                    "length": {
                      "hexValue": "33",
                      "id": 1063,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1188:1:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1182:8:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint8_$3_storage_ptr",
                      "typeString": "uint8[3]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1069,
                  "mutability": "mutable",
                  "name": "_CCL",
                  "nameLocation": "1365:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1111,
                  "src": "1347:22:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$4_memory_ptr",
                    "typeString": "address[4]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1066,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1347:7:35",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1068,
                    "length": {
                      "hexValue": "34",
                      "id": 1067,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1355:1:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_4_by_1",
                        "typeString": "int_const 4"
                      },
                      "value": "4"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1347:10:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$4_storage_ptr",
                      "typeString": "address[4]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1072,
                  "mutability": "mutable",
                  "name": "_whiteListWallets",
                  "nameLocation": "1536:17:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1111,
                  "src": "1519:34:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1070,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1519:7:35",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1071,
                    "nodeType": "ArrayTypeName",
                    "src": "1519:9:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1059:500:35"
            },
            "returnParameters": {
              "id": 1074,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1564:0:35"
            },
            "scope": 1531,
            "src": "1048:1548:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1143,
              "nodeType": "Block",
              "src": "3105:514:35",
              "statements": [
                {
                  "assignments": [
                    1122,
                    1124
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1122,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "3121:13:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 1143,
                      "src": "3116:18:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1121,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3116:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1124,
                      "mutability": "mutable",
                      "name": "dataDLGTCLL",
                      "nameLocation": "3149:11:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 1143,
                      "src": "3136:24:35",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1123,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3136:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1133,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "5f4578656350726f702875696e7432353629",
                            "id": 1129,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3245:20:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_4eeb7b857add57878aabffd3a0fa25ef81d4ec5c9dbab986b196eb787b30e8b1",
                              "typeString": "literal_string \"_ExecProp(uint256)\""
                            },
                            "value": "_ExecProp(uint256)"
                          },
                          {
                            "id": 1130,
                            "name": "_propId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1114,
                            "src": "3283:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_4eeb7b857add57878aabffd3a0fa25ef81d4ec5c9dbab986b196eb787b30e8b1",
                              "typeString": "literal_string \"_ExecProp(uint256)\""
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1127,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3204:3:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "3204:23:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 1131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3204:100:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 1125,
                        "name": "CLCGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1886,
                        "src": "3164:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "3164:26:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 1132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3164:150:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3115:199:35"
                },
                {
                  "condition": {
                    "id": 1135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3329:14:35",
                    "subExpression": {
                      "id": 1134,
                      "name": "successDGTCLL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1122,
                      "src": "3330:13:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1138,
                  "nodeType": "IfStatement",
                  "src": "3325:232:35",
                  "trueBody": {
                    "id": 1137,
                    "nodeType": "Block",
                    "src": "3346:211:35",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "3369:178:35",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3387:22:35",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3404:4:35",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3398:5:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3398:11:35"
                              },
                              "variables": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulTypedName",
                                  "src": "3391:3:35",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3426:28:35",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "returndatasize",
                                  "nodeType": "YulIdentifier",
                                  "src": "3438:14:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3438:16:35"
                              },
                              "variables": [
                                {
                                  "name": "size",
                                  "nodeType": "YulTypedName",
                                  "src": "3430:4:35",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "3486:3:35"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3491:1:35",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "3494:4:35"
                                  }
                                ],
                                "functionName": {
                                  "name": "returndatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "3471:14:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3471:28:35"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3471:28:35"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "3523:3:35"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "3528:4:35"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "3516:6:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3516:17:35"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3516:17:35"
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [],
                        "id": 1136,
                        "nodeType": "InlineAssembly",
                        "src": "3360:187:35"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "74727565",
                        "id": 1139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3576:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "537563636573732065786563757465642070726f706f73616c",
                        "id": 1140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3583:27:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cc5063be902007aa4094c05d7977aa17bd625bcc90d4b58bc658ed91467f2f04",
                          "typeString": "literal_string \"Success executed proposal\""
                        },
                        "value": "Success executed proposal"
                      }
                    ],
                    "id": 1141,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3574:38:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_stringliteral_cc5063be902007aa4094c05d7977aa17bd625bcc90d4b58bc658ed91467f2f04_$",
                      "typeString": "tuple(bool,literal_string \"Success executed proposal\")"
                    }
                  },
                  "functionReturnParameters": 1120,
                  "id": 1142,
                  "nodeType": "Return",
                  "src": "3567:45:35"
                }
              ]
            },
            "documentation": {
              "id": 1112,
              "nodeType": "StructuredDocumentation",
              "src": "2602:344:35",
              "text": "@notice Execute (or reject) a proposal computing the votes and the governance model\n @dev Normally is called internally after each vote\n @param _propId ID of the proposal, based on `arrProposals`\n @return status True if the proposal can be execute, false in other cases\n @return message result of the transaction"
            },
            "functionSelector": "5f3d99b3",
            "id": 1144,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ExecProp",
            "nameLocation": "2960:8:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1114,
                  "mutability": "mutable",
                  "name": "_propId",
                  "nameLocation": "2986:7:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1144,
                  "src": "2978:15:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1113,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2978:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2968:31:35"
            },
            "returnParameters": {
              "id": 1120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1117,
                  "mutability": "mutable",
                  "name": "status",
                  "nameLocation": "3049:6:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1144,
                  "src": "3044:11:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1116,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3044:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1119,
                  "mutability": "mutable",
                  "name": "message",
                  "nameLocation": "3083:7:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1144,
                  "src": "3069:21:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1118,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3069:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3030:70:35"
            },
            "scope": 1531,
            "src": "2951:668:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1181,
              "nodeType": "Block",
              "src": "4142:590:35",
              "statements": [
                {
                  "assignments": [
                    1159,
                    1161
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1159,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "4158:13:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 1181,
                      "src": "4153:18:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1158,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4153:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1161,
                      "mutability": "mutable",
                      "name": "dataDLGTCLL",
                      "nameLocation": "4186:11:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 1181,
                      "src": "4173:24:35",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1160,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "4173:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1173,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "5f566f746550726f706f73616c2875696e743235362c626f6f6c2c737472696e672c627974657329",
                            "id": 1166,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4283:42:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9e803dfb72a8a330bf69a328f99d1211cf6856e0741bce8c093f91ab5708b6f8",
                              "typeString": "literal_string \"_VoteProposal(uint256,bool,string,bytes)\""
                            },
                            "value": "_VoteProposal(uint256,bool,string,bytes)"
                          },
                          {
                            "id": 1167,
                            "name": "_propId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1147,
                            "src": "4344:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1168,
                            "name": "_support",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1149,
                            "src": "4369:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 1169,
                            "name": "_justification",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1151,
                            "src": "4395:14:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 1170,
                            "name": "_signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1153,
                            "src": "4427:10:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9e803dfb72a8a330bf69a328f99d1211cf6856e0741bce8c093f91ab5708b6f8",
                              "typeString": "literal_string \"_VoteProposal(uint256,bool,string,bytes)\""
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 1164,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "4241:3:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "4241:23:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 1171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4241:210:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 1162,
                        "name": "CLCGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1886,
                        "src": "4201:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "4201:26:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 1172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4201:260:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4152:309:35"
                },
                {
                  "condition": {
                    "id": 1175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "4476:14:35",
                    "subExpression": {
                      "id": 1174,
                      "name": "successDGTCLL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1159,
                      "src": "4477:13:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1178,
                  "nodeType": "IfStatement",
                  "src": "4472:232:35",
                  "trueBody": {
                    "id": 1177,
                    "nodeType": "Block",
                    "src": "4493:211:35",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "4516:178:35",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4534:22:35",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4551:4:35",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "4545:5:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4545:11:35"
                              },
                              "variables": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulTypedName",
                                  "src": "4538:3:35",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4573:28:35",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "returndatasize",
                                  "nodeType": "YulIdentifier",
                                  "src": "4585:14:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4585:16:35"
                              },
                              "variables": [
                                {
                                  "name": "size",
                                  "nodeType": "YulTypedName",
                                  "src": "4577:4:35",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "4633:3:35"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4638:1:35",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "4641:4:35"
                                  }
                                ],
                                "functionName": {
                                  "name": "returndatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "4618:14:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4618:28:35"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4618:28:35"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "4670:3:35"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "4675:4:35"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "4663:6:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4663:17:35"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4663:17:35"
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [],
                        "id": 1176,
                        "nodeType": "InlineAssembly",
                        "src": "4507:187:35"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 1179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4721:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1157,
                  "id": 1180,
                  "nodeType": "Return",
                  "src": "4714:11:35"
                }
              ]
            },
            "documentation": {
              "id": 1145,
              "nodeType": "StructuredDocumentation",
              "src": "3625:322:35",
              "text": "@notice Used to vote a proposal\n @dev After vote the proposal automatically try to be executed\n @param _propId ID of the proposal, based on `arrProposals`\n @param _support True for accept, false to reject\n @param _justification About your vote\n @return true is the vote can be stored"
            },
            "functionSelector": "c2b3aa08",
            "id": 1182,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "VoteProposal",
            "nameLocation": "3961:12:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1147,
                  "mutability": "mutable",
                  "name": "_propId",
                  "nameLocation": "3991:7:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1182,
                  "src": "3983:15:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1146,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3983:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1149,
                  "mutability": "mutable",
                  "name": "_support",
                  "nameLocation": "4013:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1182,
                  "src": "4008:13:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1148,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4008:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1151,
                  "mutability": "mutable",
                  "name": "_justification",
                  "nameLocation": "4045:14:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1182,
                  "src": "4031:28:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1150,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4031:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1153,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "4082:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1182,
                  "src": "4069:23:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1152,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4069:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3973:125:35"
            },
            "returnParameters": {
              "id": 1157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1156,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1182,
                  "src": "4131:4:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1155,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4131:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4129:8:35"
            },
            "scope": 1531,
            "src": "3952:780:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1219,
              "nodeType": "Block",
              "src": "5445:668:35",
              "statements": [
                {
                  "assignments": [
                    1201,
                    1203
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1201,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "5461:13:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 1219,
                      "src": "5456:18:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1200,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5456:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1203,
                      "mutability": "mutable",
                      "name": "dataDLGTCLL",
                      "nameLocation": "5489:11:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 1219,
                      "src": "5476:24:35",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1202,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5476:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1217,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f70496e766974654d656d62657228616464726573732c737472696e672c737472696e672c626f6f6c2c75696e743235362c627974657329",
                            "id": 1208,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5586:60:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_34b8bb6c3b744660b6c093fc632f91008c28e96a5b6d14e1295c63bf45ce2103",
                              "typeString": "literal_string \"PropInviteMember(address,string,string,bool,uint256,bytes)\""
                            },
                            "value": "PropInviteMember(address,string,string,bool,uint256,bytes)"
                          },
                          {
                            "id": 1209,
                            "name": "_walletAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1185,
                            "src": "5665:11:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1210,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1187,
                            "src": "5694:5:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 1211,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1189,
                            "src": "5717:12:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 1212,
                            "name": "_isManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1191,
                            "src": "5747:10:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 1213,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1193,
                            "src": "5775:10:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1214,
                            "name": "_signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1195,
                            "src": "5803:10:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_34b8bb6c3b744660b6c093fc632f91008c28e96a5b6d14e1295c63bf45ce2103",
                              "typeString": "literal_string \"PropInviteMember(address,string,string,bool,uint256,bytes)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 1206,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5544:3:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "5544:23:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 1215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5544:283:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 1204,
                        "name": "CLCGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1886,
                        "src": "5504:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "5504:26:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 1216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5504:333:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5455:382:35"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "5857:250:35",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "5871:22:35",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5888:4:35",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "5882:5:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5882:11:35"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "5875:3:35",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "5906:28:35",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "5918:14:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5918:16:35"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "5910:4:35",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "5962:3:35"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5967:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "5970:4:35"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "5947:14:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5947:28:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5947:28:35"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6015:49:35",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "6040:3:35"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "6045:4:35"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "6033:6:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6033:17:35"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6033:17:35"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "5999:13:35"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "5991:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5991:23:35"
                        },
                        "nodeType": "YulIf",
                        "src": "5988:76:35"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "6077:20:35",
                        "value": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "6093:3:35"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "6087:5:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6087:10:35"
                        },
                        "variableNames": [
                          {
                            "name": "propId",
                            "nodeType": "YulIdentifier",
                            "src": "6077:6:35"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 1198,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "6077:6:35",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1201,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "5999:13:35",
                      "valueSize": 1
                    }
                  ],
                  "id": 1218,
                  "nodeType": "InlineAssembly",
                  "src": "5848:259:35"
                }
              ]
            },
            "documentation": {
              "id": 1183,
              "nodeType": "StructuredDocumentation",
              "src": "4739:434:35",
              "text": "@notice Generate a new proposal to invite a new member\n @dev the execution of this proposal only create an invitation \n @param _walletAddr  Address of the new user\n @param _name Can be the nickname or other reference to the User\n @param _description A text for the proposal\n @param _isManager True if is for a manager member\n @return propId ID of the new proposal, based on `arrProposals`"
            },
            "functionSelector": "34b8bb6c",
            "id": 1220,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropInviteMember",
            "nameLocation": "5187:16:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1196,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1185,
                  "mutability": "mutable",
                  "name": "_walletAddr",
                  "nameLocation": "5221:11:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1220,
                  "src": "5213:19:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1184,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5213:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1187,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "5256:5:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1220,
                  "src": "5242:19:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1186,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5242:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1189,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "5285:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1220,
                  "src": "5271:26:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1188,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5271:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1191,
                  "mutability": "mutable",
                  "name": "_isManager",
                  "nameLocation": "5312:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1220,
                  "src": "5307:15:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1190,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5307:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1193,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "5340:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1220,
                  "src": "5332:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1192,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5332:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1195,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "5373:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1220,
                  "src": "5360:23:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1194,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5360:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5203:186:35"
            },
            "returnParameters": {
              "id": 1199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1198,
                  "mutability": "mutable",
                  "name": "propId",
                  "nameLocation": "5432:6:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1220,
                  "src": "5424:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1197,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5424:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5422:18:35"
            },
            "scope": 1531,
            "src": "5178:935:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1251,
              "nodeType": "Block",
              "src": "6608:605:35",
              "statements": [
                {
                  "assignments": [
                    1235,
                    1237
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1235,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "6624:13:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 1251,
                      "src": "6619:18:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1234,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "6619:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1237,
                      "mutability": "mutable",
                      "name": "dataDLGTCLL",
                      "nameLocation": "6652:11:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 1251,
                      "src": "6639:24:35",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1236,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "6639:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1249,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f7052656d6f76654d656d62657228616464726573732c737472696e672c75696e743235362c627974657329",
                            "id": 1242,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6749:48:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_f65bbcdec921266b2279577497eb9678d7dfb816a5df75d72fa5743680820014",
                              "typeString": "literal_string \"PropRemoveMember(address,string,uint256,bytes)\""
                            },
                            "value": "PropRemoveMember(address,string,uint256,bytes)"
                          },
                          {
                            "id": 1243,
                            "name": "_walletAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1223,
                            "src": "6816:11:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1244,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1225,
                            "src": "6845:12:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 1245,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1227,
                            "src": "6875:10:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1246,
                            "name": "_signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1229,
                            "src": "6903:10:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_f65bbcdec921266b2279577497eb9678d7dfb816a5df75d72fa5743680820014",
                              "typeString": "literal_string \"PropRemoveMember(address,string,uint256,bytes)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 1240,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "6707:3:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "6707:23:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 1247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6707:220:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 1238,
                        "name": "CLCGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1886,
                        "src": "6667:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1239,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "6667:26:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 1248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6667:270:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6618:319:35"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "6957:250:35",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "6971:22:35",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6988:4:35",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "6982:5:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6982:11:35"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "6975:3:35",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "7006:28:35",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "7018:14:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7018:16:35"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "7010:4:35",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "7062:3:35"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7067:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "7070:4:35"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "7047:14:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7047:28:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7047:28:35"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7115:49:35",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "7140:3:35"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "7145:4:35"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "7133:6:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7133:17:35"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7133:17:35"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "7099:13:35"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "7091:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7091:23:35"
                        },
                        "nodeType": "YulIf",
                        "src": "7088:76:35"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "7177:20:35",
                        "value": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "7193:3:35"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "7187:5:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7187:10:35"
                        },
                        "variableNames": [
                          {
                            "name": "propId",
                            "nodeType": "YulIdentifier",
                            "src": "7177:6:35"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 1232,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "7177:6:35",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1235,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "7099:13:35",
                      "valueSize": 1
                    }
                  ],
                  "id": 1250,
                  "nodeType": "InlineAssembly",
                  "src": "6948:259:35"
                }
              ]
            },
            "documentation": {
              "id": 1221,
              "nodeType": "StructuredDocumentation",
              "src": "6119:271:35",
              "text": "@notice Generate a new proposal for remove a member\n @dev The member can be a managaer\n @param _walletAddr member Address to be removed\n @param _description About the proposal\n @return propId ID of the new proposal, based on `arrProposals`"
            },
            "functionSelector": "f65bbcde",
            "id": 1252,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropRemoveMember",
            "nameLocation": "6404:16:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1230,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1223,
                  "mutability": "mutable",
                  "name": "_walletAddr",
                  "nameLocation": "6438:11:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1252,
                  "src": "6430:19:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1222,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6430:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1225,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "6473:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1252,
                  "src": "6459:26:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1224,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6459:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1227,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "6503:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1252,
                  "src": "6495:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1226,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6495:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1229,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "6536:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1252,
                  "src": "6523:23:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1228,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6523:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6420:132:35"
            },
            "returnParameters": {
              "id": 1233,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1232,
                  "mutability": "mutable",
                  "name": "propId",
                  "nameLocation": "6595:6:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1252,
                  "src": "6587:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1231,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6587:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6585:18:35"
            },
            "scope": 1531,
            "src": "6395:818:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1283,
              "nodeType": "Block",
              "src": "7754:595:35",
              "statements": [
                {
                  "assignments": [
                    1267,
                    1269
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1267,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "7770:13:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 1283,
                      "src": "7765:18:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1266,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7765:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1269,
                      "mutability": "mutable",
                      "name": "dataDLGTCLL",
                      "nameLocation": "7798:11:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 1283,
                      "src": "7785:24:35",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1268,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "7785:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1281,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f70547857656928616464726573732c75696e743235362c737472696e672c75696e7432353629",
                            "id": 1274,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7895:43:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_7c6385482cc50c34905baf4b5888e8798c5594a0a2bf4d252265bc9209354799",
                              "typeString": "literal_string \"PropTxWei(address,uint256,string,uint256)\""
                            },
                            "value": "PropTxWei(address,uint256,string,uint256)"
                          },
                          {
                            "id": 1275,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1255,
                            "src": "7957:3:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1276,
                            "name": "_amountOutCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1257,
                            "src": "7978:13:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1277,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1259,
                            "src": "8009:12:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 1278,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1261,
                            "src": "8039:10:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_7c6385482cc50c34905baf4b5888e8798c5594a0a2bf4d252265bc9209354799",
                              "typeString": "literal_string \"PropTxWei(address,uint256,string,uint256)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1272,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7853:3:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "7853:23:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 1279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7853:210:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 1270,
                        "name": "CLCGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1886,
                        "src": "7813:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "7813:26:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 1280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7813:260:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7764:309:35"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "8093:250:35",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "8107:22:35",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8124:4:35",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "8118:5:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8118:11:35"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "8111:3:35",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "8142:28:35",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "8154:14:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8154:16:35"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "8146:4:35",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "8198:3:35"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8203:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "8206:4:35"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "8183:14:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8183:28:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8183:28:35"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8251:49:35",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "8276:3:35"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "8281:4:35"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "8269:6:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8269:17:35"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8269:17:35"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "8235:13:35"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "8227:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8227:23:35"
                        },
                        "nodeType": "YulIf",
                        "src": "8224:76:35"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "8313:20:35",
                        "value": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "8329:3:35"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "8323:5:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8323:10:35"
                        },
                        "variableNames": [
                          {
                            "name": "propId",
                            "nodeType": "YulIdentifier",
                            "src": "8313:6:35"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 1264,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "8313:6:35",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1267,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "8235:13:35",
                      "valueSize": 1
                    }
                  ],
                  "id": 1282,
                  "nodeType": "InlineAssembly",
                  "src": "8084:259:35"
                }
              ]
            },
            "documentation": {
              "id": 1253,
              "nodeType": "StructuredDocumentation",
              "src": "7219:334:35",
              "text": "@notice generate a new proposal to transfer ETH in weis\n @dev When execute this proposal, the transfer is made\n @param _to Recipient address\n @param _amountOutCLV Amount to transfer (in wei)\n @param _description About this proposal\n @return propId ID of the new proposal, based on `arrProposals`"
            },
            "functionSelector": "7c638548",
            "id": 1284,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropTxWei",
            "nameLocation": "7567:9:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1262,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1255,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "7594:3:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1284,
                  "src": "7586:11:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1254,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7586:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1257,
                  "mutability": "mutable",
                  "name": "_amountOutCLV",
                  "nameLocation": "7615:13:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1284,
                  "src": "7607:21:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1256,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7607:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1259,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "7652:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1284,
                  "src": "7638:26:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1258,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7638:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1261,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "7682:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1284,
                  "src": "7674:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1260,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7674:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7576:122:35"
            },
            "returnParameters": {
              "id": 1265,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1264,
                  "mutability": "mutable",
                  "name": "propId",
                  "nameLocation": "7741:6:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1284,
                  "src": "7733:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1263,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7733:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7731:18:35"
            },
            "scope": 1531,
            "src": "7558:791:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1318,
              "nodeType": "Block",
              "src": "8922:635:35",
              "statements": [
                {
                  "assignments": [
                    1301,
                    1303
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1301,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "8938:13:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 1318,
                      "src": "8933:18:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1300,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "8933:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1303,
                      "mutability": "mutable",
                      "name": "dataDLGTCLL",
                      "nameLocation": "8966:11:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 1318,
                      "src": "8953:24:35",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1302,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "8953:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1316,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f705478455243323028616464726573732c75696e743235362c616464726573732c737472696e672c75696e7432353629",
                            "id": 1308,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9063:53:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_de5ab14ee76e872eb390c8f0942b0cbe9e6de8609dea31f21b3c6b5cdfc0a34b",
                              "typeString": "literal_string \"PropTxERC20(address,uint256,address,string,uint256)\""
                            },
                            "value": "PropTxERC20(address,uint256,address,string,uint256)"
                          },
                          {
                            "id": 1309,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1287,
                            "src": "9135:3:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1310,
                            "name": "_amountOutCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1289,
                            "src": "9156:13:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1311,
                            "name": "_tokenOutCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1291,
                            "src": "9187:12:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1312,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1293,
                            "src": "9217:12:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 1313,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1295,
                            "src": "9247:10:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_de5ab14ee76e872eb390c8f0942b0cbe9e6de8609dea31f21b3c6b5cdfc0a34b",
                              "typeString": "literal_string \"PropTxERC20(address,uint256,address,string,uint256)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1306,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "9021:3:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "9021:23:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 1314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9021:250:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 1304,
                        "name": "CLCGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1886,
                        "src": "8981:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1305,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "8981:26:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 1315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8981:300:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8932:349:35"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "9301:250:35",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "9315:22:35",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9332:4:35",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "9326:5:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9326:11:35"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "9319:3:35",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "9350:28:35",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "9362:14:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9362:16:35"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "9354:4:35",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "9406:3:35"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9411:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "9414:4:35"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "9391:14:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9391:28:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9391:28:35"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9459:49:35",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "9484:3:35"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "9489:4:35"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "9477:6:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9477:17:35"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9477:17:35"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "9443:13:35"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "9435:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9435:23:35"
                        },
                        "nodeType": "YulIf",
                        "src": "9432:76:35"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "9521:20:35",
                        "value": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "9537:3:35"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "9531:5:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9531:10:35"
                        },
                        "variableNames": [
                          {
                            "name": "propId",
                            "nodeType": "YulIdentifier",
                            "src": "9521:6:35"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 1298,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "9521:6:35",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1301,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "9443:13:35",
                      "valueSize": 1
                    }
                  ],
                  "id": 1317,
                  "nodeType": "InlineAssembly",
                  "src": "9292:259:35"
                }
              ]
            },
            "documentation": {
              "id": 1285,
              "nodeType": "StructuredDocumentation",
              "src": "8355:334:35",
              "text": "@notice generate a new proposal to transfer ETH in weis\n @dev When execute this proposal, the transfer is made\n @param _to Recipient address\n @param _amountOutCLV Amount to transfer (in wei)\n @param _description About this proposal\n @return propId ID of the new proposal, based on `arrProposals`"
            },
            "functionSelector": "de5ab14e",
            "id": 1319,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropTxERC20",
            "nameLocation": "8703:11:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1296,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1287,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "8732:3:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1319,
                  "src": "8724:11:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1286,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8724:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1289,
                  "mutability": "mutable",
                  "name": "_amountOutCLV",
                  "nameLocation": "8753:13:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1319,
                  "src": "8745:21:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1288,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8745:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1291,
                  "mutability": "mutable",
                  "name": "_tokenOutCLV",
                  "nameLocation": "8784:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1319,
                  "src": "8776:20:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1290,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8776:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1293,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "8820:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1319,
                  "src": "8806:26:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1292,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8806:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1295,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "8850:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1319,
                  "src": "8842:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1294,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8842:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8714:152:35"
            },
            "returnParameters": {
              "id": 1299,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1298,
                  "mutability": "mutable",
                  "name": "propId",
                  "nameLocation": "8909:6:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1319,
                  "src": "8901:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1297,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8901:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8899:18:35"
            },
            "scope": 1531,
            "src": "8694:863:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1347,
              "nodeType": "Block",
              "src": "10101:574:35",
              "statements": [
                {
                  "assignments": [
                    1332,
                    1334
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1332,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "10117:13:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 1347,
                      "src": "10112:18:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1331,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "10112:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1334,
                      "mutability": "mutable",
                      "name": "dataDLGTCLL",
                      "nameLocation": "10145:11:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 1347,
                      "src": "10132:24:35",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1333,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "10132:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1345,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f70476f7652756c65732875696e74382c737472696e672c75696e7432353629",
                            "id": 1339,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10242:36:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_70acb761237d5585eadfc2ae41fe8a485128e55ebdae74fa45652b412e62ee83",
                              "typeString": "literal_string \"PropGovRules(uint8,string,uint256)\""
                            },
                            "value": "PropGovRules(uint8,string,uint256)"
                          },
                          {
                            "id": 1340,
                            "name": "_newApprovPercentage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1322,
                            "src": "10297:20:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          {
                            "id": 1341,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1324,
                            "src": "10335:12:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 1342,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1326,
                            "src": "10365:10:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_70acb761237d5585eadfc2ae41fe8a485128e55ebdae74fa45652b412e62ee83",
                              "typeString": "literal_string \"PropGovRules(uint8,string,uint256)\""
                            },
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1337,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "10200:3:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "10200:23:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 1343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10200:189:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 1335,
                        "name": "CLCGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1886,
                        "src": "10160:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1336,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "10160:26:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 1344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10160:239:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10111:288:35"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "10419:250:35",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "10433:22:35",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10450:4:35",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "10444:5:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10444:11:35"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "10437:3:35",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "10468:28:35",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "10480:14:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10480:16:35"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "10472:4:35",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "10524:3:35"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10529:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "10532:4:35"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "10509:14:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10509:28:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10509:28:35"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10577:49:35",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "10602:3:35"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "10607:4:35"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "10595:6:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10595:17:35"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10595:17:35"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "10561:13:35"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "10553:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10553:23:35"
                        },
                        "nodeType": "YulIf",
                        "src": "10550:76:35"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "10639:20:35",
                        "value": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "10655:3:35"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "10649:5:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10649:10:35"
                        },
                        "variableNames": [
                          {
                            "name": "propId",
                            "nodeType": "YulIdentifier",
                            "src": "10639:6:35"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 1329,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "10639:6:35",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1332,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "10561:13:35",
                      "valueSize": 1
                    }
                  ],
                  "id": 1346,
                  "nodeType": "InlineAssembly",
                  "src": "10410:259:35"
                }
              ]
            },
            "documentation": {
              "id": 1320,
              "nodeType": "StructuredDocumentation",
              "src": "9563:350:35",
              "text": "@notice Generate a new proposal for change some governance parameters\n @dev When execute this proposal the new values will be set\n @param _newApprovPercentage The new percentaje for accept or reject a proposal\n @param _description About the new proposal \n @return propId ID of the new proposal, based on `arrProposals`"
            },
            "functionSelector": "70acb761",
            "id": 1348,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropGovRules",
            "nameLocation": "9927:12:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1327,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1322,
                  "mutability": "mutable",
                  "name": "_newApprovPercentage",
                  "nameLocation": "9955:20:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1348,
                  "src": "9949:26:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1321,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "9949:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1324,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "9999:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1348,
                  "src": "9985:26:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1323,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9985:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1326,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "10029:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1348,
                  "src": "10021:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1325,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10021:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9939:106:35"
            },
            "returnParameters": {
              "id": 1330,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1329,
                  "mutability": "mutable",
                  "name": "propId",
                  "nameLocation": "10088:6:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1348,
                  "src": "10080:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1328,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10080:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10078:18:35"
            },
            "scope": 1531,
            "src": "9918:757:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1376,
              "nodeType": "Block",
              "src": "11154:560:35",
              "statements": [
                {
                  "assignments": [
                    1361,
                    1363
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1361,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "11170:13:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 1376,
                      "src": "11165:18:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1360,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "11165:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1363,
                      "mutability": "mutable",
                      "name": "dataDLGTCLL",
                      "nameLocation": "11198:11:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 1376,
                      "src": "11185:24:35",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1362,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "11185:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1374,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f7052657175657374546f4a6f696e28737472696e672c737472696e672c627974657329",
                            "id": 1368,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11295:40:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_a19a5f5094957b68797a833ce3e8ce60bcd0e148d0183b60e4fdf5efc7499e5e",
                              "typeString": "literal_string \"PropRequestToJoin(string,string,bytes)\""
                            },
                            "value": "PropRequestToJoin(string,string,bytes)"
                          },
                          {
                            "id": 1369,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1351,
                            "src": "11354:5:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 1370,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1353,
                            "src": "11377:12:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 1371,
                            "name": "_signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1355,
                            "src": "11407:10:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_a19a5f5094957b68797a833ce3e8ce60bcd0e148d0183b60e4fdf5efc7499e5e",
                              "typeString": "literal_string \"PropRequestToJoin(string,string,bytes)\""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 1366,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "11253:3:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "11253:23:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 1372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11253:178:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 1364,
                        "name": "CLCGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1886,
                        "src": "11213:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1365,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "11213:26:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 1373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11213:228:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11164:277:35"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "11461:247:35",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "11475:22:35",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11492:4:35",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "11486:5:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11486:11:35"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "11479:3:35",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "11510:28:35",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "11522:14:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11522:16:35"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "11514:4:35",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "11566:3:35"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11571:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "11574:4:35"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "11551:14:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11551:28:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11551:28:35"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11619:49:35",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "11644:3:35"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "11649:4:35"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "11637:6:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11637:17:35"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11637:17:35"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "11603:13:35"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "11595:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11595:23:35"
                        },
                        "nodeType": "YulIf",
                        "src": "11592:76:35"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "11688:3:35"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "11693:4:35"
                            }
                          ],
                          "functionName": {
                            "name": "return",
                            "nodeType": "YulIdentifier",
                            "src": "11681:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11681:17:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11681:17:35"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 1361,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "11603:13:35",
                      "valueSize": 1
                    }
                  ],
                  "id": 1375,
                  "nodeType": "InlineAssembly",
                  "src": "11452:256:35"
                }
              ]
            },
            "documentation": {
              "id": 1349,
              "nodeType": "StructuredDocumentation",
              "src": "10681:289:35",
              "text": "@notice Generate a proposal from a user that want to join to the CLH\n @dev Only avaiable in public CLH\n @param _name Nickname or other user identification\n @param _description About the request\n @return propId ID of the new proposal, based on `arrProposals`"
            },
            "functionSelector": "a19a5f50",
            "id": 1377,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropRequestToJoin",
            "nameLocation": "10984:17:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1356,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1351,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "11025:5:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1377,
                  "src": "11011:19:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1350,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "11011:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1353,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "11054:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1377,
                  "src": "11040:26:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1352,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "11040:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1355,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "11089:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1377,
                  "src": "11076:23:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1354,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11076:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11001:104:35"
            },
            "returnParameters": {
              "id": 1359,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1358,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1377,
                  "src": "11140:7:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1357,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11140:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11138:11:35"
            },
            "scope": 1531,
            "src": "10975:739:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1404,
              "nodeType": "Block",
              "src": "11970:512:35",
              "statements": [
                {
                  "assignments": [
                    1386,
                    1388
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1386,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "11986:13:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 1404,
                      "src": "11981:18:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1385,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "11981:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1388,
                      "mutability": "mutable",
                      "name": "dataDLGTCLL",
                      "nameLocation": "12014:11:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 1404,
                      "src": "12001:24:35",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1387,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "12001:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1398,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "41636365707452656a656374496e7669746174696f6e28626f6f6c2c627974657329",
                            "id": 1393,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12116:36:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_81cf22d80f4ec7d62ace7f62bb20df069329fad76ea536d29d67fc68ae1b5019",
                              "typeString": "literal_string \"AcceptRejectInvitation(bool,bytes)\""
                            },
                            "value": "AcceptRejectInvitation(bool,bytes)"
                          },
                          {
                            "id": 1394,
                            "name": "_acceptance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1380,
                            "src": "12170:11:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 1395,
                            "name": "_signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1382,
                            "src": "12199:10:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_81cf22d80f4ec7d62ace7f62bb20df069329fad76ea536d29d67fc68ae1b5019",
                              "typeString": "literal_string \"AcceptRejectInvitation(bool,bytes)\""
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 1391,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "12075:3:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "12075:23:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 1396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12075:148:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 1389,
                        "name": "CLCMemberManagement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1884,
                        "src": "12029:19:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1390,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "12029:32:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 1397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12029:204:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11980:253:35"
                },
                {
                  "condition": {
                    "id": 1400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "12248:14:35",
                    "subExpression": {
                      "id": 1399,
                      "name": "successDGTCLL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1386,
                      "src": "12249:13:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1403,
                  "nodeType": "IfStatement",
                  "src": "12244:232:35",
                  "trueBody": {
                    "id": 1402,
                    "nodeType": "Block",
                    "src": "12265:211:35",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "12288:178:35",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "12306:22:35",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12323:4:35",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "12317:5:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12317:11:35"
                              },
                              "variables": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulTypedName",
                                  "src": "12310:3:35",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "12345:28:35",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "returndatasize",
                                  "nodeType": "YulIdentifier",
                                  "src": "12357:14:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12357:16:35"
                              },
                              "variables": [
                                {
                                  "name": "size",
                                  "nodeType": "YulTypedName",
                                  "src": "12349:4:35",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "12405:3:35"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12410:1:35",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "12413:4:35"
                                  }
                                ],
                                "functionName": {
                                  "name": "returndatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "12390:14:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12390:28:35"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12390:28:35"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "12442:3:35"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "12447:4:35"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "12435:6:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12435:17:35"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12435:17:35"
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [],
                        "id": 1401,
                        "nodeType": "InlineAssembly",
                        "src": "12279:187:35"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1378,
              "nodeType": "StructuredDocumentation",
              "src": "11720:127:35",
              "text": "@notice For an user that have an invitation pending\n @dev \n @param _acceptance True for accept the invitation"
            },
            "functionSelector": "81cf22d8",
            "id": 1405,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "AcceptRejectInvitation",
            "nameLocation": "11861:22:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1383,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1380,
                  "mutability": "mutable",
                  "name": "_acceptance",
                  "nameLocation": "11898:11:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1405,
                  "src": "11893:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1379,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11893:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1382,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "11932:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1405,
                  "src": "11919:23:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1381,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11919:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11883:65:35"
            },
            "returnParameters": {
              "id": 1384,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11970:0:35"
            },
            "scope": 1531,
            "src": "11852:630:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1438,
              "nodeType": "Block",
              "src": "12726:647:35",
              "statements": [
                {
                  "assignments": [
                    1421,
                    1423
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1421,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "12742:13:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 1438,
                      "src": "12737:18:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1420,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "12737:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1423,
                      "mutability": "mutable",
                      "name": "dataDLGTCLL",
                      "nameLocation": "12770:11:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 1438,
                      "src": "12757:24:35",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1422,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "12757:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1436,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f7053776170455243323028616464726573732c616464726573732c75696e743235362c737472696e672c75696e7432353629",
                            "id": 1428,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12867:55:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_152de3b98ea86d627e1f008ef402ac90ecf10b8b7150905cf13cb40560733610",
                              "typeString": "literal_string \"PropSwapERC20(address,address,uint256,string,uint256)\""
                            },
                            "value": "PropSwapERC20(address,address,uint256,string,uint256)"
                          },
                          {
                            "id": 1429,
                            "name": "_tokenOutCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1407,
                            "src": "12942:12:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1430,
                            "name": "_tokenInCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1409,
                            "src": "12973:11:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1431,
                            "name": "_amountOutCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1411,
                            "src": "13003:13:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1432,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1413,
                            "src": "13035:12:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 1433,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1415,
                            "src": "13066:10:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_152de3b98ea86d627e1f008ef402ac90ecf10b8b7150905cf13cb40560733610",
                              "typeString": "literal_string \"PropSwapERC20(address,address,uint256,string,uint256)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1426,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "12825:3:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "12825:23:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 1434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12825:265:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 1424,
                        "name": "CLCGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1886,
                        "src": "12785:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1425,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "12785:26:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 1435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12785:315:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12736:364:35"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "13120:247:35",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "13134:22:35",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13151:4:35",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "13145:5:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13145:11:35"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "13138:3:35",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "13169:28:35",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "13181:14:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13181:16:35"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "13173:4:35",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "13225:3:35"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13230:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "13233:4:35"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "13210:14:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13210:28:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13210:28:35"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13278:49:35",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "13303:3:35"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "13308:4:35"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "13296:6:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13296:17:35"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13296:17:35"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "13262:13:35"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "13254:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13254:23:35"
                        },
                        "nodeType": "YulIf",
                        "src": "13251:76:35"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "13347:3:35"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "13352:4:35"
                            }
                          ],
                          "functionName": {
                            "name": "return",
                            "nodeType": "YulIdentifier",
                            "src": "13340:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13340:17:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13340:17:35"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 1421,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "13262:13:35",
                      "valueSize": 1
                    }
                  ],
                  "id": 1437,
                  "nodeType": "InlineAssembly",
                  "src": "13111:256:35"
                }
              ]
            },
            "functionSelector": "152de3b9",
            "id": 1439,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropSwapERC20",
            "nameLocation": "12497:13:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1416,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1407,
                  "mutability": "mutable",
                  "name": "_tokenOutCLV",
                  "nameLocation": "12528:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1439,
                  "src": "12520:20:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1406,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12520:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1409,
                  "mutability": "mutable",
                  "name": "_tokenInCLV",
                  "nameLocation": "12558:11:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1439,
                  "src": "12550:19:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1408,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12550:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1411,
                  "mutability": "mutable",
                  "name": "_amountOutCLV",
                  "nameLocation": "12587:13:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1439,
                  "src": "12579:21:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1410,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12579:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1413,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "12624:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1439,
                  "src": "12610:26:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1412,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "12610:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1415,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "12654:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1439,
                  "src": "12646:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1414,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12646:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12510:160:35"
            },
            "returnParameters": {
              "id": 1419,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1418,
                  "mutability": "mutable",
                  "name": "propId",
                  "nameLocation": "12713:6:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1439,
                  "src": "12705:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1417,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12705:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12703:18:35"
            },
            "scope": 1531,
            "src": "12488:885:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1469,
              "nodeType": "Block",
              "src": "13588:609:35",
              "statements": [
                {
                  "assignments": [
                    1453,
                    1455
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1453,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "13604:13:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 1469,
                      "src": "13599:18:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1452,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "13599:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1455,
                      "mutability": "mutable",
                      "name": "dataDLGTCLL",
                      "nameLocation": "13632:11:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 1469,
                      "src": "13619:24:35",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1454,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "13619:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1467,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f7053656c6c455243323028616464726573732c75696e743235362c737472696e672c75696e7432353629",
                            "id": 1460,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13729:47:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_04f17a9bb89b1e450e234a08e9c473746a395c39a699313d8ca6797b97b374af",
                              "typeString": "literal_string \"PropSellERC20(address,uint256,string,uint256)\""
                            },
                            "value": "PropSellERC20(address,uint256,string,uint256)"
                          },
                          {
                            "id": 1461,
                            "name": "_tokenOutCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1441,
                            "src": "13796:12:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1462,
                            "name": "_amountOutCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1443,
                            "src": "13827:13:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1463,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1445,
                            "src": "13859:12:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 1464,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1447,
                            "src": "13890:10:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_04f17a9bb89b1e450e234a08e9c473746a395c39a699313d8ca6797b97b374af",
                              "typeString": "literal_string \"PropSellERC20(address,uint256,string,uint256)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1458,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "13687:3:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "13687:23:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 1465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13687:227:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 1456,
                        "name": "CLCGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1886,
                        "src": "13647:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1457,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "13647:26:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 1466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13647:277:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13598:326:35"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "13944:247:35",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "13958:22:35",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13975:4:35",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "13969:5:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13969:11:35"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "13962:3:35",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "13993:28:35",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "14005:14:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14005:16:35"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "13997:4:35",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "14049:3:35"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14054:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "14057:4:35"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "14034:14:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14034:28:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14034:28:35"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14102:49:35",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "14127:3:35"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "14132:4:35"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "14120:6:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14120:17:35"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14120:17:35"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "14086:13:35"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "14078:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14078:23:35"
                        },
                        "nodeType": "YulIf",
                        "src": "14075:76:35"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "14171:3:35"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "14176:4:35"
                            }
                          ],
                          "functionName": {
                            "name": "return",
                            "nodeType": "YulIdentifier",
                            "src": "14164:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14164:17:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14164:17:35"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 1453,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "14086:13:35",
                      "valueSize": 1
                    }
                  ],
                  "id": 1468,
                  "nodeType": "InlineAssembly",
                  "src": "13935:256:35"
                }
              ]
            },
            "functionSelector": "04f17a9b",
            "id": 1470,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropSellERC20",
            "nameLocation": "13388:13:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1448,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1441,
                  "mutability": "mutable",
                  "name": "_tokenOutCLV",
                  "nameLocation": "13419:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1470,
                  "src": "13411:20:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1440,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13411:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1443,
                  "mutability": "mutable",
                  "name": "_amountOutCLV",
                  "nameLocation": "13449:13:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1470,
                  "src": "13441:21:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1442,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13441:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1445,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "13486:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1470,
                  "src": "13472:26:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1444,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "13472:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1447,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "13516:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1470,
                  "src": "13508:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1446,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13508:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13401:131:35"
            },
            "returnParameters": {
              "id": 1451,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1450,
                  "mutability": "mutable",
                  "name": "propId",
                  "nameLocation": "13575:6:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1470,
                  "src": "13567:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1449,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13567:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13565:18:35"
            },
            "scope": 1531,
            "src": "13379:818:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1500,
              "nodeType": "Block",
              "src": "14410:607:35",
              "statements": [
                {
                  "assignments": [
                    1484,
                    1486
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1484,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "14426:13:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 1500,
                      "src": "14421:18:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1483,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "14421:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1486,
                      "mutability": "mutable",
                      "name": "dataDLGTCLL",
                      "nameLocation": "14454:11:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 1500,
                      "src": "14441:24:35",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1485,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "14441:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1498,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f70427579455243323028616464726573732c75696e743235362c737472696e672c75696e7432353629",
                            "id": 1491,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14551:46:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_2266e1bc09a9739eac0cdf93a2f130fcaf0d67ad5f8d0909c155c6843375d27c",
                              "typeString": "literal_string \"PropBuyERC20(address,uint256,string,uint256)\""
                            },
                            "value": "PropBuyERC20(address,uint256,string,uint256)"
                          },
                          {
                            "id": 1492,
                            "name": "_tokenInCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1472,
                            "src": "14617:11:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1493,
                            "name": "_amountOutCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1474,
                            "src": "14647:13:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1494,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1476,
                            "src": "14679:12:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 1495,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1478,
                            "src": "14710:10:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_2266e1bc09a9739eac0cdf93a2f130fcaf0d67ad5f8d0909c155c6843375d27c",
                              "typeString": "literal_string \"PropBuyERC20(address,uint256,string,uint256)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1489,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "14509:3:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "14509:23:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 1496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14509:225:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 1487,
                        "name": "CLCGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1886,
                        "src": "14469:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1488,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "14469:26:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 1497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14469:275:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14420:324:35"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "14764:247:35",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "14778:22:35",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14795:4:35",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "14789:5:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14789:11:35"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "14782:3:35",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "14813:28:35",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "14825:14:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14825:16:35"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "14817:4:35",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "14869:3:35"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14874:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "14877:4:35"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "14854:14:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14854:28:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14854:28:35"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14922:49:35",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "14947:3:35"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "14952:4:35"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "14940:6:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14940:17:35"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14940:17:35"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "14906:13:35"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "14898:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14898:23:35"
                        },
                        "nodeType": "YulIf",
                        "src": "14895:76:35"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "14991:3:35"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "14996:4:35"
                            }
                          ],
                          "functionName": {
                            "name": "return",
                            "nodeType": "YulIdentifier",
                            "src": "14984:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14984:17:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14984:17:35"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 1484,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "14906:13:35",
                      "valueSize": 1
                    }
                  ],
                  "id": 1499,
                  "nodeType": "InlineAssembly",
                  "src": "14755:256:35"
                }
              ]
            },
            "functionSelector": "2266e1bc",
            "id": 1501,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropBuyERC20",
            "nameLocation": "14212:12:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1479,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1472,
                  "mutability": "mutable",
                  "name": "_tokenInCLV",
                  "nameLocation": "14242:11:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1501,
                  "src": "14234:19:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1471,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14234:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1474,
                  "mutability": "mutable",
                  "name": "_amountOutCLV",
                  "nameLocation": "14271:13:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1501,
                  "src": "14263:21:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1473,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14263:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1476,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "14308:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1501,
                  "src": "14294:26:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1475,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14294:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1478,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "14338:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1501,
                  "src": "14330:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1477,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14330:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14224:130:35"
            },
            "returnParameters": {
              "id": 1482,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1481,
                  "mutability": "mutable",
                  "name": "propId",
                  "nameLocation": "14397:6:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 1501,
                  "src": "14389:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1480,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14389:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14387:18:35"
            },
            "scope": 1531,
            "src": "14203:814:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1509,
              "nodeType": "Block",
              "src": "15086:41:35",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 1506,
                      "name": "arrMembers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1937,
                      "src": "15103:10:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_strMember_$4738_storage_$dyn_storage",
                        "typeString": "struct strMember storage ref[] storage ref"
                      }
                    },
                    "id": 1507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "15103:17:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1505,
                  "id": 1508,
                  "nodeType": "Return",
                  "src": "15096:24:35"
                }
              ]
            },
            "functionSelector": "824c88da",
            "id": 1510,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetArrMembersLength",
            "nameLocation": "15032:19:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1502,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15051:2:35"
            },
            "returnParameters": {
              "id": 1505,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1504,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1510,
                  "src": "15077:7:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1503,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15077:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15075:11:35"
            },
            "scope": 1531,
            "src": "15023:104:35",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1518,
              "nodeType": "Block",
              "src": "15198:43:35",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 1515,
                      "name": "arrProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1921,
                      "src": "15215:12:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_strProposal_$4758_storage_$dyn_storage",
                        "typeString": "struct strProposal storage ref[] storage ref"
                      }
                    },
                    "id": 1516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "15215:19:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1514,
                  "id": 1517,
                  "nodeType": "Return",
                  "src": "15208:26:35"
                }
              ]
            },
            "functionSelector": "4e9d5472",
            "id": 1519,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetArrProposalsLength",
            "nameLocation": "15142:21:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1511,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15163:2:35"
            },
            "returnParameters": {
              "id": 1514,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1513,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1519,
                  "src": "15189:7:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1512,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15189:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15187:11:35"
            },
            "scope": 1531,
            "src": "15133:108:35",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1529,
              "nodeType": "Block",
              "src": "15468:36:35",
              "statements": [
                {
                  "expression": {
                    "id": 1527,
                    "name": "arrProposals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1921,
                    "src": "15485:12:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_strProposal_$4758_storage_$dyn_storage",
                      "typeString": "struct strProposal storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 1526,
                  "id": 1528,
                  "nodeType": "Return",
                  "src": "15478:19:35"
                }
              ]
            },
            "documentation": {
              "id": 1520,
              "nodeType": "StructuredDocumentation",
              "src": "15247:95:35",
              "text": "@notice The list of all Proposals\n @return arrProposals the array with all proposals"
            },
            "functionSelector": "b4c62192",
            "id": 1530,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetProposalList",
            "nameLocation": "15356:15:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1521,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15371:2:35"
            },
            "returnParameters": {
              "id": 1526,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1525,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1530,
                  "src": "15433:20:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_strProposal_$4758_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct strProposal[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1523,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1522,
                        "name": "strProposal",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 4758,
                        "src": "15433:11:35"
                      },
                      "referencedDeclaration": 4758,
                      "src": "15433:11:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_strProposal_$4758_storage_ptr",
                        "typeString": "struct strProposal"
                      }
                    },
                    "id": 1524,
                    "nodeType": "ArrayTypeName",
                    "src": "15433:13:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_strProposal_$4758_storage_$dyn_storage_ptr",
                      "typeString": "struct strProposal[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15419:44:35"
            },
            "scope": 1531,
            "src": "15347:157:35",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1532,
        "src": "254:15252:35",
        "usedErrors": []
      }
    ],
    "src": "32:15474:35"
  },
  "bytecode": "",
  "bytecodeSha1": "d739367242b4eb2ce482cd5447290eda1a75010d",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "CLHouse",
  "coverageMap": {
    "branches": {
      "35": {
        "CLHouse.AcceptRejectInvitation": {
          "9": [
            12249,
            12262,
            false
          ]
        },
        "CLHouse.ExecProp": {
          "8": [
            3330,
            3343,
            false
          ]
        },
        "CLHouse.VoteProposal": {
          "10": [
            4477,
            4490,
            false
          ]
        }
      },
      "37": {},
      "41": {}
    },
    "statements": {
      "35": {
        "CLHouse.AcceptRejectInvitation": {
          "4": [
            12244,
            12476
          ]
        },
        "CLHouse.ExecProp": {
          "2": [
            3325,
            3557
          ],
          "3": [
            3567,
            3612
          ]
        },
        "CLHouse.GetArrMembersLength": {
          "1": [
            15096,
            15120
          ]
        },
        "CLHouse.GetArrProposalsLength": {
          "0": [
            15208,
            15234
          ]
        },
        "CLHouse.GetProposalList": {
          "5": [
            15478,
            15497
          ]
        },
        "CLHouse.VoteProposal": {
          "6": [
            4472,
            4704
          ],
          "7": [
            4714,
            4725
          ]
        }
      },
      "37": {},
      "41": {}
    }
  },
  "dependencies": [
    "CLStorage"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "254:15252:35:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13379:818;;;;;;:::i;:::-;;:::i;:::-;;;1732:25:46;;;1720:2;1705:18;13379:818:35;;;;;;;;895:23:37;;;;;-1:-1:-1;;;;;895:23:37;;;;;;-1:-1:-1;;;;;1947:32:46;;;1929:51;;1917:2;1902:18;895:23:37;1768:218:46;615:38:37;;;;;;;;;;;;;;;2243:4:46;2231:17;;;2213:36;;2201:2;2186:18;615:38:37;2071:184:46;1039:48:37;;;;;;:::i;:::-;;;;;;;;;;;;;;12488:885:35;;;;;;:::i;:::-;;:::i;782:37:37:-;;;;;;924:27;;;;;-1:-1:-1;;;;;924:27:37;;;14203:814:35;;;;;;:::i;:::-;;:::i;5178:935::-;;;;;;:::i;:::-;;:::i;1343:44:37:-;;;;;;:::i;:::-;;:::i;15133:108:35:-;15215:12;:19;15133:108;;320:24:37;;;:::i;:::-;;;;;;;:::i;2951:668:35:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;838:23:37:-;;;;;-1:-1:-1;;;;;838:23:37;;;9918:757:35;;;;;;:::i;:::-;;:::i;7558:791::-;;;;;;:::i;:::-;;:::i;11852:630::-;;;;;;:::i;:::-;;:::i;:::-;;15023:104;15103:10;:17;15023:104;;1393:29:37;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;495:30::-;;;;;;;;;;;;867:22;;;;;-1:-1:-1;;;;;867:22:37;;;957:56;;;;;;:::i;:::-;;;;;;;;;;;;;;531:36;;;;;;;;;;;;10975:739:35;;;;;;:::i;:::-;;:::i;573:36:37:-;;;;;;;;;;;;15347:157:35;;;:::i;:::-;;;;;;;:::i;1293:44:37:-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;10943:15:46;;;10925:34;;10990:2;10975:18;;10968:34;;;;11038:15;;;11018:18;;;11011:43;;;;11090:15;;;11085:2;11070:18;;11063:43;10874:3;10859:19;1293:44:37;10656:456:46;1241:46:37;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;3952:780:35:-;;;;;;:::i;:::-;;:::i;:::-;;;12369:14:46;;12362:22;12344:41;;12332:2;12317:18;3952:780:35;12204:187:46;1093:67:37;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;1202:33::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::i;460:29::-;;;;;;;;;8694:863:35;;;;;;:::i;:::-;;:::i;672:24:37:-;;;;;;;;;;;;6395:818:35;;;;;;:::i;:::-;;:::i;13379:::-;13647:13;;13687:227;;13567:14;;;;;;-1:-1:-1;;;;;13647:13:35;;13687:227;;13796:12;;13827:13;;13859:12;;13890:10;;13687:227;;;:::i;:::-;;;;-1:-1:-1;;13687:227:35;;;;;;;;;;;;;;-1:-1:-1;;;;;13687:227:35;-1:-1:-1;;;13687:227:35;;;13647:277;;;13687:227;13647:277;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13598:326;;;;13975:4;13969:11;14005:16;14057:4;14054:1;14049:3;14034:28;14086:13;14075:76;;14132:4;14127:3;14120:17;14075:76;14176:4;14171:3;14164:17;12488:885;12785:13;;12825:265;;12705:14;;;;;;-1:-1:-1;;;;;12785:13:35;;12825:265;;12942:12;;12973:11;;13003:13;;13035:12;;13066:10;;12825:265;;;:::i;:::-;;;;-1:-1:-1;;12825:265:35;;;;;;;;;;;;;;-1:-1:-1;;;;;12825:265:35;-1:-1:-1;;;12825:265:35;;;12785:315;;;12825:265;12785:315;:::i;14203:814::-;14469:13;;14509:225;;14389:14;;;;;;-1:-1:-1;;;;;14469:13:35;;14509:225;;14617:11;;14647:13;;14679:12;;14710:10;;14509:225;;;:::i;:::-;;;;-1:-1:-1;;14509:225:35;;;;;;;;;;;;;;-1:-1:-1;;;;;14509:225:35;-1:-1:-1;;;14509:225:35;;;14469:275;;;14509:225;14469:275;:::i;5178:935::-;5504:13;;5544:283;;5424:14;;;;;;-1:-1:-1;;;;;5504:13:35;;5544:283;;5665:11;;5694:5;;5717:12;;5747:10;;5775;;5803;;5544:283;;;:::i;:::-;;;;-1:-1:-1;;5544:283:35;;;;;;;;;;;;;;-1:-1:-1;;;;;5544:283:35;-1:-1:-1;;;5544:283:35;;;5504:333;;;5544:283;5504:333;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5455:382;;;;5888:4;5882:11;5918:16;5970:4;5967:1;5962:3;5947:28;5999:13;5988:76;;6045:4;6040:3;6033:17;5988:76;-1:-1:-1;6087:10:35;;5178:935;-1:-1:-1;;;;;;;;;5178:935:35:o;1343:44:37:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1343:44:37;:::o;320:24::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2951:668:35:-;3164:13;;3204:100;;;;;1732:25:46;;;3044:11:35;;3069:21;;3044:11;;;;-1:-1:-1;;;;;3164:13:35;;;;1705:18:46;;3204:100:35;;;-1:-1:-1;;3204:100:35;;;;;;;;;;;;;;-1:-1:-1;;;;;3204:100:35;-1:-1:-1;;;3204:100:35;;;3164:150;;;3204:100;3164:150;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3115:199;;;;3330:13;3325:232;;3404:4;3398:11;3438:16;3494:4;3491:1;3486:3;3471:28;3528:4;3523:3;3516:17;3325:232;3576:4;3567:45;;;;;;;;;;;;;;;;;;;;;;;2951:668;;;:::o;9918:757::-;10160:13;;10200:189;;10080:14;;;;;;-1:-1:-1;;;;;10160:13:35;;10200:189;;10297:20;;10335:12;;10365:10;;10200:189;;;:::i;:::-;;;;-1:-1:-1;;10200:189:35;;;;;;;;;;;;;;-1:-1:-1;;;;;10200:189:35;-1:-1:-1;;;10200:189:35;;;10160:239;;;10200:189;10160:239;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10111:288;;;;10450:4;10444:11;10480:16;10532:4;10529:1;10524:3;10509:28;10561:13;10550:76;;10607:4;10602:3;10595:17;10550:76;-1:-1:-1;10649:10:35;;9918:757;-1:-1:-1;;;;;;9918:757:35:o;7558:791::-;7813:13;;7853:210;;7733:14;;;;;;-1:-1:-1;;;;;7813:13:35;;7853:210;;7957:3;;7978:13;;8009:12;;8039:10;;7853:210;;;:::i;:::-;;;;-1:-1:-1;;7853:210:35;;;;;;;;;;;;;;-1:-1:-1;;;;;7853:210:35;-1:-1:-1;;;7853:210:35;;;7813:260;;;7853:210;7813:260;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7764:309;;;;8124:4;8118:11;8154:16;8206:4;8203:1;8198:3;8183:28;8235:13;8224:76;;8281:4;8276:3;8269:17;8224:76;-1:-1:-1;8323:10:35;;7558:791;-1:-1:-1;;;;;;;7558:791:35:o;11852:630::-;11981:18;12001:24;12029:19;;;;;;;;;-1:-1:-1;;;;;12029:19:35;-1:-1:-1;;;;;12029:32:35;12170:11;12199:10;12075:148;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;12075:148:35;;;;;;;;;;;;;;-1:-1:-1;;;;;12075:148:35;-1:-1:-1;;;12075:148:35;;;12029:204;;;12075:148;12029:204;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11980:253;;;;12249:13;12244:232;;12323:4;12317:11;12357:16;12413:4;12410:1;12405:3;12390:28;12447:4;12442:3;12435:17;12244:232;11970:512;;11852:630;;:::o;1393:29:37:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1393:29:37;;;;-1:-1:-1;1393:29:37;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1393:29:37;;;;;;;;;;;;;;;;;-1:-1:-1;1393:29:37;;;;;;:::o;10975:739:35:-;11213:13;;11253:178;;11140:7;;;;;;-1:-1:-1;;;;;11213:13:35;;11253:178;;11354:5;;11377:12;;11407:10;;11253:178;;;:::i;:::-;;;;-1:-1:-1;;11253:178:35;;;;;;;;;;;;;;-1:-1:-1;;;;;11253:178:35;-1:-1:-1;;;11253:178:35;;;11213:228;;;11253:178;11213:228;:::i;15347:157::-;15433:20;15485:12;15478:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15478:19:35;;;;;;;;;;;;-1:-1:-1;;;15478:19:35;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;15478:19:35;;;-1:-1:-1;;15478:19:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15347:157;:::o;1293:44:37:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1293:44:37;;;;-1:-1:-1;1293:44:37;;;;;;;:::o;1241:46::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1241:46:37;;;;-1:-1:-1;1241:46:37;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1241:46:37;;;;;;;-1:-1:-1;;1241:46:37;;;:::o;3952:780:35:-;4201:13;;4241:210;;4131:4;;;;;;-1:-1:-1;;;;;4201:13:35;;4241:210;;4344:7;;4369:8;;4395:14;;4427:10;;4241:210;;;:::i;:::-;;;;-1:-1:-1;;4241:210:35;;;;;;;;;;;;;;-1:-1:-1;;;;;4241:210:35;-1:-1:-1;;;4241:210:35;;;4201:260;;;4241:210;4201:260;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4152:309;;;;4477:13;4472:232;;4551:4;4545:11;4585:16;4641:4;4638:1;4633:3;4618:28;4675:4;4670:3;4663:17;4472:232;-1:-1:-1;4721:4:35;;3952:780;-1:-1:-1;;;;;;3952:780:35:o;1093:67:37:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1202:33::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1202:33:37;;;-1:-1:-1;;;;1202:33:37;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1202:33:37;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1202:33:37;;;;;;-1:-1:-1;1202:33:37;;;;;;;;;;;;:::o;8694:863:35:-;8981:13;;9021:250;;8901:14;;;;;;-1:-1:-1;;;;;8981:13:35;;9021:250;;9135:3;;9156:13;;9187:12;;9217;;9247:10;;9021:250;;;:::i;:::-;;;;-1:-1:-1;;9021:250:35;;;;;;;;;;;;;;-1:-1:-1;;;;;9021:250:35;-1:-1:-1;;;9021:250:35;;;8981:300;;;9021:250;8981:300;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8932:349;;;;9332:4;9326:11;9362:16;9414:4;9411:1;9406:3;9391:28;9443:13;9432:76;;9489:4;9484:3;9477:17;9432:76;-1:-1:-1;9531:10:35;;8694:863;-1:-1:-1;;;;;;;;8694:863:35:o;6395:818::-;6667:13;;6707:220;;6587:14;;;;;;-1:-1:-1;;;;;6667:13:35;;6707:220;;6816:11;;6845:12;;6875:10;;6903;;6707:220;;;:::i;:::-;;;;-1:-1:-1;;6707:220:35;;;;;;;;;;;;;;-1:-1:-1;;;;;6707:220:35;-1:-1:-1;;;6707:220:35;;;6667:270;;;6707:220;6667:270;:::i;14:173:46:-;82:20;;-1:-1:-1;;;;;131:31:46;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:127::-;253:10;248:3;244:20;241:1;234:31;284:4;281:1;274:15;308:4;305:1;298:15;324:719;367:5;420:3;413:4;405:6;401:17;397:27;387:55;;438:1;435;428:12;387:55;474:6;461:20;500:18;537:2;533;530:10;527:36;;;543:18;;:::i;:::-;618:2;612:9;586:2;672:13;;-1:-1:-1;;668:22:46;;;692:2;664:31;660:40;648:53;;;716:18;;;736:22;;;713:46;710:72;;;762:18;;:::i;:::-;802:10;798:2;791:22;837:2;829:6;822:18;883:3;876:4;871:2;863:6;859:15;855:26;852:35;849:55;;;900:1;897;890:12;849:55;964:2;957:4;949:6;945:17;938:4;930:6;926:17;913:54;1011:1;1004:4;999:2;991:6;987:15;983:26;976:37;1031:6;1022:15;;;;;;324:719;;;;:::o;1048:533::-;1144:6;1152;1160;1168;1221:3;1209:9;1200:7;1196:23;1192:33;1189:53;;;1238:1;1235;1228:12;1189:53;1261:29;1280:9;1261:29;:::i;:::-;1251:39;;1337:2;1326:9;1322:18;1309:32;1299:42;;1392:2;1381:9;1377:18;1364:32;1419:18;1411:6;1408:30;1405:50;;;1451:1;1448;1441:12;1405:50;1474;1516:7;1507:6;1496:9;1492:22;1474:50;:::i;:::-;1048:533;;;;-1:-1:-1;1464:60:46;;1571:2;1556:18;1543:32;;-1:-1:-1;;;1048:533:46:o;2260:186::-;2319:6;2372:2;2360:9;2351:7;2347:23;2343:32;2340:52;;;2388:1;2385;2378:12;2340:52;2411:29;2430:9;2411:29;:::i;:::-;2401:39;2260:186;-1:-1:-1;;;2260:186:46:o;2451:608::-;2556:6;2564;2572;2580;2588;2641:3;2629:9;2620:7;2616:23;2612:33;2609:53;;;2658:1;2655;2648:12;2609:53;2681:29;2700:9;2681:29;:::i;:::-;2671:39;;2729:38;2763:2;2752:9;2748:18;2729:38;:::i;:::-;2719:48;;2814:2;2803:9;2799:18;2786:32;2776:42;;2869:2;2858:9;2854:18;2841:32;2896:18;2888:6;2885:30;2882:50;;;2928:1;2925;2918:12;2882:50;2951;2993:7;2984:6;2973:9;2969:22;2951:50;:::i;:::-;2451:608;;;;-1:-1:-1;2451:608:46;;3048:3;3033:19;3020:33;;2451:608;-1:-1:-1;;;2451:608:46:o;3246:160::-;3311:20;;3367:13;;3360:21;3350:32;;3340:60;;3396:1;3393;3386:12;3411:955;3541:6;3549;3557;3565;3573;3581;3634:3;3622:9;3613:7;3609:23;3605:33;3602:53;;;3651:1;3648;3641:12;3602:53;3674:29;3693:9;3674:29;:::i;:::-;3664:39;;3754:2;3743:9;3739:18;3726:32;3777:18;3818:2;3810:6;3807:14;3804:34;;;3834:1;3831;3824:12;3804:34;3857:50;3899:7;3890:6;3879:9;3875:22;3857:50;:::i;:::-;3847:60;;3960:2;3949:9;3945:18;3932:32;3916:48;;3989:2;3979:8;3976:16;3973:36;;;4005:1;4002;3995:12;3973:36;4028:52;4072:7;4061:8;4050:9;4046:24;4028:52;:::i;:::-;4018:62;;4099:35;4130:2;4119:9;4115:18;4099:35;:::i;:::-;4089:45;;4181:3;4170:9;4166:19;4153:33;4143:43;;4239:3;4228:9;4224:19;4211:33;4195:49;;4269:2;4259:8;4256:16;4253:36;;;4285:1;4282;4275:12;4253:36;;4308:52;4352:7;4341:8;4330:9;4326:24;4308:52;:::i;:::-;4298:62;;;3411:955;;;;;;;;:::o;4371:180::-;4430:6;4483:2;4471:9;4462:7;4458:23;4454:32;4451:52;;;4499:1;4496;4489:12;4451:52;-1:-1:-1;4522:23:46;;4371:180;-1:-1:-1;4371:180:46:o;4556:258::-;4628:1;4638:113;4652:6;4649:1;4646:13;4638:113;;;4728:11;;;4722:18;4709:11;;;4702:39;4674:2;4667:10;4638:113;;;4769:6;4766:1;4763:13;4760:48;;;-1:-1:-1;;4804:1:46;4786:16;;4779:27;4556:258::o;4819:::-;4861:3;4899:5;4893:12;4926:6;4921:3;4914:19;4942:63;4998:6;4991:4;4986:3;4982:14;4975:4;4968:5;4964:16;4942:63;:::i;:::-;5059:2;5038:15;-1:-1:-1;;5034:29:46;5025:39;;;;5066:4;5021:50;;4819:258;-1:-1:-1;;4819:258:46:o;5082:220::-;5231:2;5220:9;5213:21;5194:4;5251:45;5292:2;5281:9;5277:18;5269:6;5251:45;:::i;5403:301::-;5588:6;5581:14;5574:22;5563:9;5556:41;5633:2;5628;5617:9;5613:18;5606:30;5537:4;5653:45;5694:2;5683:9;5679:18;5671:6;5653:45;:::i;:::-;5645:53;5403:301;-1:-1:-1;;;;5403:301:46:o;5941:547::-;6026:6;6034;6042;6095:2;6083:9;6074:7;6070:23;6066:32;6063:52;;;6111:1;6108;6101:12;6063:52;6150:9;6137:23;6200:4;6193:5;6189:16;6182:5;6179:27;6169:55;;6220:1;6217;6210:12;6169:55;6243:5;-1:-1:-1;6299:2:46;6284:18;;6271:32;6326:18;6315:30;;6312:50;;;6358:1;6355;6348:12;6312:50;6381;6423:7;6414:6;6403:9;6399:22;6381:50;:::i;:::-;6371:60;;;6478:2;6467:9;6463:18;6450:32;6440:42;;5941:547;;;;;:::o;6493:389::-;6567:6;6575;6628:2;6616:9;6607:7;6603:23;6599:32;6596:52;;;6644:1;6641;6634:12;6596:52;6667:26;6683:9;6667:26;:::i;:::-;6657:36;;6744:2;6733:9;6729:18;6716:32;6771:18;6763:6;6760:30;6757:50;;;6803:1;6800;6793:12;6757:50;6826;6868:7;6859:6;6848:9;6844:22;6826:50;:::i;:::-;6816:60;;;6493:389;;;;;:::o;6996:553::-;-1:-1:-1;;;;;7245:32:46;;7227:51;;7265:3;7309:2;7294:18;;7287:31;;;-1:-1:-1;;7335:46:46;;7361:19;;7353:6;7335:46;:::i;:::-;7412:2;7397:18;;7390:34;;;;-1:-1:-1;7467:14:46;;7460:22;7455:2;7440:18;;7433:50;7527:14;7520:22;7514:3;7499:19;;;7492:51;7327:54;6996:553;-1:-1:-1;;6996:553:46:o;7554:742::-;7660:6;7668;7676;7729:2;7717:9;7708:7;7704:23;7700:32;7697:52;;;7745:1;7742;7735:12;7697:52;7785:9;7772:23;7814:18;7855:2;7847:6;7844:14;7841:34;;;7871:1;7868;7861:12;7841:34;7894:50;7936:7;7927:6;7916:9;7912:22;7894:50;:::i;:::-;7884:60;;7997:2;7986:9;7982:18;7969:32;7953:48;;8026:2;8016:8;8013:16;8010:36;;;8042:1;8039;8032:12;8010:36;8065:52;8109:7;8098:8;8087:9;8083:24;8065:52;:::i;:::-;8055:62;;8170:2;8159:9;8155:18;8142:32;8126:48;;8199:2;8189:8;8186:16;8183:36;;;8215:1;8212;8205:12;8183:36;;8238:52;8282:7;8271:8;8260:9;8256:24;8238:52;:::i;:::-;8228:62;;;7554:742;;;;;:::o;8301:127::-;8362:10;8357:3;8353:20;8350:1;8343:31;8393:4;8390:1;8383:15;8417:4;8414:1;8407:15;8433:240;8517:1;8510:5;8507:12;8497:143;;8562:10;8557:3;8553:20;8550:1;8543:31;8597:4;8594:1;8587:15;8625:4;8622:1;8615:15;8497:143;8649:18;;8433:240::o;8678:1973::-;8878:4;8907:2;8947;8936:9;8932:18;8977:2;8966:9;8959:21;9000:6;9035;9029:13;9066:6;9058;9051:22;9092:2;9082:12;;9125:2;9114:9;9110:18;9103:25;;9187:2;9177:6;9174:1;9170:14;9159:9;9155:30;9151:39;9225:2;9217:6;9213:15;9246:1;9256:1366;9270:6;9267:1;9264:13;9256:1366;;;9335:22;;;-1:-1:-1;;9331:36:46;9319:49;;9391:13;;9465:9;;-1:-1:-1;;;;;6953:31:46;6941:44;;9427:6;9530:2;9526;9522:11;9516:18;9547:59;9602:2;9594:6;9590:15;9576:12;9547:59;:::i;:::-;;9655:2;9651;9647:11;9641:18;9696:2;9691;9683:6;9679:15;9672:27;9726:50;9772:2;9764:6;9760:15;9744:14;9726:50;:::i;:::-;9712:64;;;9799:4;9854:2;9850;9846:11;9840:18;9835:2;9827:6;9823:15;9816:43;;9882:4;9935:2;9931;9927:11;9921:18;9952:49;9997:2;9989:6;9985:15;9969:14;2058:4;2047:16;2035:29;;1991:75;9952:49;-1:-1:-1;;10024:4:46;10069:11;;;10063:18;2058:4;2047:16;10127:15;;;2035:29;10166:4;10211:11;;;10205:18;5377:13;5370:21;10268:15;;;5358:34;10307:4;10352:11;;;10346:18;5377:13;5370:21;10409:15;;;5358:34;10449:6;10499:12;;;10493:19;10475:16;;;;10468:45;10600:12;;;;10565:15;;;;9292:1;9285:9;9256:1366;;;-1:-1:-1;10639:6:46;;8678:1973;-1:-1:-1;;;;;;;;8678:1973:46:o;11117:398::-;-1:-1:-1;;;;;11316:32:46;;11298:51;;11385:2;11380;11365:18;;11358:30;;;-1:-1:-1;;11405:45:46;;11431:18;;11423:6;11405:45;:::i;:::-;11397:53;;11500:6;11493:14;11486:22;11481:2;11470:9;11466:18;11459:50;11117:398;;;;;;:::o;11520:679::-;11622:6;11630;11638;11646;11699:3;11687:9;11678:7;11674:23;11670:33;11667:53;;;11716:1;11713;11706:12;11667:53;11752:9;11739:23;11729:33;;11781:35;11812:2;11801:9;11797:18;11781:35;:::i;:::-;11771:45;;11867:2;11856:9;11852:18;11839:32;11890:18;11931:2;11923:6;11920:14;11917:34;;;11947:1;11944;11937:12;11917:34;11970:50;12012:7;12003:6;11992:9;11988:22;11970:50;:::i;:::-;11960:60;;12073:2;12062:9;12058:18;12045:32;12029:48;;12102:2;12092:8;12089:16;12086:36;;;12118:1;12115;12108:12;12086:36;;12141:52;12185:7;12174:8;12163:9;12159:24;12141:52;:::i;:::-;12131:62;;;11520:679;;;;;;;:::o;12396:254::-;12464:6;12472;12525:2;12513:9;12504:7;12500:23;12496:32;12493:52;;;12541:1;12538;12531:12;12493:52;12577:9;12564:23;12554:33;;12606:38;12640:2;12629:9;12625:18;12606:38;:::i;:::-;12596:48;;12396:254;;;;;:::o;12655:382::-;12862:6;12855:14;12848:22;12837:9;12830:41;12921:6;12914:14;12907:22;12902:2;12891:9;12887:18;12880:50;12966:2;12961;12950:9;12946:18;12939:30;12811:4;12986:45;13027:2;13016:9;13012:18;13004:6;12986:45;:::i;:::-;12978:53;12655:382;-1:-1:-1;;;;;12655:382:46:o;13042:912::-;-1:-1:-1;;;;;13432:32:46;;13414:51;;13373:4;13402:3;13474:56;13526:2;13511:18;;13503:6;13474:56;:::i;:::-;13566:2;13561;13550:9;13546:18;13539:30;13586:45;13627:2;13616:9;13612:18;13604:6;13586:45;:::i;:::-;13662:2;13647:18;;13640:34;;;;-1:-1:-1;;13723:4:46;13711:17;;;13705:3;13690:19;;13683:46;13766:17;;;;13760:3;13745:19;;13738:46;13828:14;;13821:22;13815:3;13800:19;;13793:51;13888:14;13881:22;13875:3;13860:19;;13853:51;13935:3;13920:19;13913:35;13578:53;13042:912;-1:-1:-1;;;13042:912:46:o;13959:608::-;14064:6;14072;14080;14088;14096;14149:3;14137:9;14128:7;14124:23;14120:33;14117:53;;;14166:1;14163;14156:12;14117:53;14189:29;14208:9;14189:29;:::i;:::-;14179:39;;14265:2;14254:9;14250:18;14237:32;14227:42;;14288:38;14322:2;14311:9;14307:18;14288:38;:::i;:::-;14278:48;;14377:2;14366:9;14362:18;14349:32;14404:18;14396:6;14393:30;14390:50;;;14436:1;14433;14426:12;14572:685;14677:6;14685;14693;14701;14754:3;14742:9;14733:7;14729:23;14725:33;14722:53;;;14771:1;14768;14761:12;14722:53;14794:29;14813:9;14794:29;:::i;:::-;14784:39;;14874:2;14863:9;14859:18;14846:32;14897:18;14938:2;14930:6;14927:14;14924:34;;;14954:1;14951;14944:12;14924:34;14977:50;15019:7;15010:6;14999:9;14995:22;14977:50;:::i;:::-;14967:60;;15074:2;15063:9;15059:18;15046:32;15036:42;;15131:2;15120:9;15116:18;15103:32;15087:48;;15160:2;15150:8;15147:16;15144:36;;;15176:1;15173;15166:12;15262:461;15524:1;15520;15515:3;15511:11;15507:19;15499:6;15495:32;15484:9;15477:51;15564:6;15559:2;15548:9;15544:18;15537:34;15607:3;15602:2;15591:9;15587:18;15580:31;15458:4;15628:46;15669:3;15658:9;15654:19;15646:6;15628:46;:::i;:::-;15620:54;;15710:6;15705:2;15694:9;15690:18;15683:34;15262:461;;;;;;;:::o;15728:274::-;15857:3;15895:6;15889:13;15911:53;15957:6;15952:3;15945:4;15937:6;15933:17;15911:53;:::i;:::-;15980:16;;;;;15728:274;-1:-1:-1;;15728:274:46:o;16007:563::-;-1:-1:-1;;;;;16306:15:46;;;16288:34;;16358:15;;16353:2;16338:18;;16331:43;16405:2;16390:18;;16383:34;;;16268:3;16448:2;16433:18;;16426:31;;;16231:4;;16474:46;;16500:19;;16492:6;16474:46;:::i;:::-;16466:54;;16557:6;16551:3;16540:9;16536:19;16529:35;16007:563;;;;;;;;:::o;16575:797::-;-1:-1:-1;;;;;16896:32:46;;16878:51;;16965:3;16960:2;16945:18;;16938:31;;;-1:-1:-1;;16992:46:46;;17018:19;;17010:6;16992:46;:::i;:::-;17086:9;17078:6;17074:22;17069:2;17058:9;17054:18;17047:50;17120:33;17146:6;17138;17120:33;:::i;:::-;17106:47;;17203:6;17196:14;17189:22;17184:2;17173:9;17169:18;17162:50;17249:6;17243:3;17232:9;17228:19;17221:35;17305:9;17297:6;17293:22;17287:3;17276:9;17272:19;17265:51;17333:33;17359:6;17351;17333:33;:::i;:::-;17325:41;16575:797;-1:-1:-1;;;;;;;;;16575:797:46:o;17377:380::-;17456:1;17452:12;;;;17499;;;17520:61;;17574:4;17566:6;17562:17;17552:27;;17520:61;17627:2;17619:6;17616:14;17596:18;17593:38;17590:161;;;17673:10;17668:3;17664:20;17661:1;17654:31;17708:4;17705:1;17698:15;17736:4;17733:1;17726:15;17590:161;;17377:380;;;:::o;17762:369::-;17975:4;17967:6;17963:17;17952:9;17945:36;18017:2;18012;18001:9;17997:18;17990:30;17926:4;18037:45;18078:2;18067:9;18063:18;18055:6;18037:45;:::i;:::-;18029:53;;18118:6;18113:2;18102:9;18098:18;18091:34;17762:369;;;;;;:::o;18440:544::-;18683:2;18672:9;18665:21;18646:4;18709:45;18750:2;18739:9;18735:18;18727:6;18709:45;:::i;:::-;18802:9;18794:6;18790:22;18785:2;18774:9;18770:18;18763:50;18836:33;18862:6;18854;18836:33;:::i;:::-;18822:47;;18917:9;18909:6;18905:22;18900:2;18889:9;18885:18;18878:50;18945:33;18971:6;18963;18945:33;:::i;:::-;18937:41;18440:544;-1:-1:-1;;;;;;18440:544:46:o;18989:535::-;19234:6;19223:9;19216:25;19291:6;19284:14;19277:22;19272:2;19261:9;19257:18;19250:50;19336:3;19331:2;19320:9;19316:18;19309:31;19197:4;19363:46;19404:3;19393:9;19389:19;19381:6;19363:46;:::i;:::-;19457:9;19449:6;19445:22;19440:2;19429:9;19425:18;19418:50;19485:33;19511:6;19503;19485:33;:::i;:::-;19477:41;18989:535;-1:-1:-1;;;;;;;18989:535:46:o;19529:563::-;-1:-1:-1;;;;;19828:15:46;;;19810:34;;19875:2;19860:18;;19853:34;;;19923:15;;19918:2;19903:18;;19896:43;19790:3;19970:2;19955:18;;19948:31;;;19753:4;;19996:46;;20022:19;;20014:6;19996:46;:::i;20097:551::-;-1:-1:-1;;;;;20348:32:46;;20330:51;;20417:3;20412:2;20397:18;;20390:31;;;-1:-1:-1;;20444:46:46;;20470:19;;20462:6;20444:46;:::i;:::-;20526:6;20521:2;20510:9;20506:18;20499:34;20581:9;20573:6;20569:22;20564:2;20553:9;20549:18;20542:50;20609:33;20635:6;20627;20609:33;:::i",
  "language": "Solidity",
  "natspec": {
    "author": "Leonardo Urrego",
    "events": {
      "evtProposal(uint8,uint256,uint8,string)": {
        "notice": "### Contract events ###"
      }
    },
    "kind": "dev",
    "methods": {
      "AcceptRejectInvitation(bool,bytes)": {
        "notice": "For an user that have an invitation pending",
        "params": {
          "_acceptance": "True for accept the invitation"
        }
      },
      "ExecProp(uint256)": {
        "details": "Normally is called internally after each vote",
        "notice": "Execute (or reject) a proposal computing the votes and the governance model",
        "params": {
          "_propId": "ID of the proposal, based on `arrProposals`"
        },
        "returns": {
          "message": "result of the transaction",
          "status": "True if the proposal can be execute, false in other cases"
        }
      },
      "GetProposalList()": {
        "notice": "The list of all Proposals",
        "returns": {
          "_0": "arrProposals the array with all proposals"
        }
      },
      "HOUSE_NAME()": {
        "notice": "### CLH Public Variables ###"
      },
      "PropGovRules(uint8,string,uint256)": {
        "details": "When execute this proposal the new values will be set",
        "notice": "Generate a new proposal for change some governance parameters",
        "params": {
          "_description": "About the new proposal ",
          "_newApprovPercentage": "The new percentaje for accept or reject a proposal"
        },
        "returns": {
          "propId": "ID of the new proposal, based on `arrProposals`"
        }
      },
      "PropInviteMember(address,string,string,bool,uint256,bytes)": {
        "details": "the execution of this proposal only create an invitation ",
        "notice": "Generate a new proposal to invite a new member",
        "params": {
          "_description": "A text for the proposal",
          "_isManager": "True if is for a manager member",
          "_name": "Can be the nickname or other reference to the User",
          "_walletAddr": "Address of the new user"
        },
        "returns": {
          "propId": "ID of the new proposal, based on `arrProposals`"
        }
      },
      "PropRemoveMember(address,string,uint256,bytes)": {
        "details": "The member can be a managaer",
        "notice": "Generate a new proposal for remove a member",
        "params": {
          "_description": "About the proposal",
          "_walletAddr": "member Address to be removed"
        },
        "returns": {
          "propId": "ID of the new proposal, based on `arrProposals`"
        }
      },
      "PropRequestToJoin(string,string,bytes)": {
        "details": "Only avaiable in public CLH",
        "notice": "Generate a proposal from a user that want to join to the CLH",
        "params": {
          "_description": "About the request",
          "_name": "Nickname or other user identification"
        },
        "returns": {
          "_0": "propId ID of the new proposal, based on `arrProposals`"
        }
      },
      "PropTxERC20(address,uint256,address,string,uint256)": {
        "details": "When execute this proposal, the transfer is made",
        "notice": "generate a new proposal to transfer ETH in weis",
        "params": {
          "_amountOutCLV": "Amount to transfer (in wei)",
          "_description": "About this proposal",
          "_to": "Recipient address"
        },
        "returns": {
          "propId": "ID of the new proposal, based on `arrProposals`"
        }
      },
      "PropTxWei(address,uint256,string,uint256)": {
        "details": "When execute this proposal, the transfer is made",
        "notice": "generate a new proposal to transfer ETH in weis",
        "params": {
          "_amountOutCLV": "Amount to transfer (in wei)",
          "_description": "About this proposal",
          "_to": "Recipient address"
        },
        "returns": {
          "propId": "ID of the new proposal, based on `arrProposals`"
        }
      },
      "VoteProposal(uint256,bool,string,bytes)": {
        "details": "After vote the proposal automatically try to be executed",
        "notice": "Used to vote a proposal",
        "params": {
          "_justification": "About your vote",
          "_propId": "ID of the proposal, based on `arrProposals`",
          "_support": "True for accept, false to reject"
        },
        "returns": {
          "_0": "true is the vote can be stored"
        }
      },
      "constructor": {
        "params": {
          "_whiteListWallets": "Whitelist of address for invitate as managers"
        }
      }
    },
    "notice": "This contract for test only the most basic interactions",
    "title": "Contract to implement and test the basic fuctions of CLHouses",
    "version": 1
  },
  "offset": [
    254,
    15506
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x211 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x824C88DA GT PUSH2 0x125 JUMPI DUP1 PUSH4 0xBAA4D5E9 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xCB85669C GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xCB85669C EQ PUSH2 0x50F JUMPI DUP1 PUSH4 0xDA9BCA21 EQ PUSH2 0x537 JUMPI DUP1 PUSH4 0xDE5AB14E EQ PUSH2 0x544 JUMPI DUP1 PUSH4 0xF00D6274 EQ PUSH2 0x557 JUMPI DUP1 PUSH4 0xF65BBCDE EQ PUSH2 0x56D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBAA4D5E9 EQ PUSH2 0x462 JUMPI DUP1 PUSH4 0xBB3A9065 EQ PUSH2 0x4A8 JUMPI DUP1 PUSH4 0xC2B3AA08 EQ PUSH2 0x4CA JUMPI DUP1 PUSH4 0xC347D2FD EQ PUSH2 0x4ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x99DB7FB3 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x99DB7FB3 EQ PUSH2 0x3F3 JUMPI DUP1 PUSH4 0x9C630A88 EQ PUSH2 0x413 JUMPI DUP1 PUSH4 0xA19A5F50 EQ PUSH2 0x426 JUMPI DUP1 PUSH4 0xAB44997B EQ PUSH2 0x439 JUMPI DUP1 PUSH4 0xB4C62192 EQ PUSH2 0x44D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x824C88DA EQ PUSH2 0x3A2 JUMPI DUP1 PUSH4 0x8532CBF7 EQ PUSH2 0x3AA JUMPI DUP1 PUSH4 0x8668EAFC EQ PUSH2 0x3CE JUMPI DUP1 PUSH4 0x9360BFAD EQ PUSH2 0x3E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x34B8BB6C GT PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x5F3D99B3 GT PUSH2 0x177 JUMPI DUP1 PUSH4 0x5F3D99B3 EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0x6C2F34E7 EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0x70ACB761 EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0x7C638548 EQ PUSH2 0x37A JUMPI DUP1 PUSH4 0x81CF22D8 EQ PUSH2 0x38D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x34B8BB6C EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x3A70693D EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0x4E9D5472 EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0x59CA2D03 EQ PUSH2 0x31E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x152DE3B9 GT PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x152DE3B9 EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0x1D5FD3CA EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x1F50DD27 EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0x2266E1BC EQ PUSH2 0x2DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4F17A9B EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x52F9B0A EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x5FE6663 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x9C57DF7 EQ PUSH2 0x28E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x229 PUSH2 0x224 CALLDATASIZE PUSH1 0x4 PUSH2 0x13FA JUMP JUMPDEST PUSH2 0x580 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x24F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x233 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x27C SWAP1 PUSH5 0x100000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x233 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x29C CALLDATASIZE PUSH1 0x4 PUSH2 0x1459 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x2BC CALLDATASIZE PUSH1 0x4 PUSH2 0x147B JUMP JUMPDEST PUSH2 0x63B JUMP JUMPDEST PUSH2 0x229 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x24F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x2EB CALLDATASIZE PUSH1 0x4 PUSH2 0x13FA JUMP JUMPDEST PUSH2 0x69D JUMP JUMPDEST PUSH2 0x229 PUSH2 0x2FE CALLDATASIZE PUSH1 0x4 PUSH2 0x14FB JUMP JUMPDEST PUSH2 0x6FD JUMP JUMPDEST PUSH2 0x27C PUSH2 0x311 CALLDATASIZE PUSH1 0x4 PUSH2 0x15AD JUMP JUMPDEST PUSH2 0x7C7 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x229 JUMP JUMPDEST PUSH2 0x326 PUSH2 0x7EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x233 SWAP2 SWAP1 PUSH2 0x161E JUMP JUMPDEST PUSH2 0x346 PUSH2 0x341 CALLDATASIZE PUSH1 0x4 PUSH2 0x15AD JUMP JUMPDEST PUSH2 0x879 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x233 SWAP3 SWAP2 SWAP1 PUSH2 0x1631 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x24F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x375 CALLDATASIZE PUSH1 0x4 PUSH2 0x1654 JUMP JUMPDEST PUSH2 0x96E JUMP JUMPDEST PUSH2 0x229 PUSH2 0x388 CALLDATASIZE PUSH1 0x4 PUSH2 0x13FA JUMP JUMPDEST PUSH2 0xA2F JUMP JUMPDEST PUSH2 0x3A0 PUSH2 0x39B CALLDATASIZE PUSH1 0x4 PUSH2 0x16B3 JUMP JUMPDEST PUSH2 0xAF3 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x10 SLOAD PUSH2 0x229 JUMP JUMPDEST PUSH2 0x3BD PUSH2 0x3B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x15AD JUMP JUMPDEST PUSH2 0xBBA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x233 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1701 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x27C SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x24F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x401 CALLDATASIZE PUSH1 0x4 PUSH2 0x1459 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x27C SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x434 CALLDATASIZE PUSH1 0x4 PUSH2 0x1744 JUMP JUMPDEST PUSH2 0xC95 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x27C SWAP1 PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x455 PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x233 SWAP2 SWAP1 PUSH2 0x1804 JUMP JUMPDEST PUSH2 0x475 PUSH2 0x470 CALLDATASIZE PUSH1 0x4 PUSH2 0x15AD JUMP JUMPDEST PUSH2 0xE81 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP2 DUP5 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x233 JUMP JUMPDEST PUSH2 0x4BB PUSH2 0x4B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x15AD JUMP JUMPDEST PUSH2 0xEC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x233 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18E7 JUMP JUMPDEST PUSH2 0x4DD PUSH2 0x4D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x191D JUMP JUMPDEST PUSH2 0xF94 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x233 JUMP JUMPDEST PUSH2 0x500 PUSH2 0x4FB CALLDATASIZE PUSH1 0x4 PUSH2 0x199B JUMP JUMPDEST PUSH2 0x1058 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x233 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19C7 JUMP JUMPDEST PUSH2 0x522 PUSH2 0x51D CALLDATASIZE PUSH1 0x4 PUSH2 0x15AD JUMP JUMPDEST PUSH2 0x1115 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x233 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19F3 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x27C SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x552 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A5B JUMP JUMPDEST PUSH2 0x1214 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x4DD SWAP1 PUSH6 0x10000000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x57B CALLDATASIZE PUSH1 0x4 PUSH2 0x1AAD JUMP JUMPDEST PUSH2 0x12DB JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x5AB SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x24 ADD PUSH2 0x1B12 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x4F17A9B PUSH1 0xE0 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x5E0 SWAP2 SWAP1 PUSH2 0x1B4A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x61B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x620 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP4 PUSH2 0x637 JUMPI DUP1 DUP3 REVERT JUMPDEST DUP1 DUP3 RETURN JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x668 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x24 ADD PUSH2 0x1B66 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x152DE3B9 PUSH1 0xE0 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x5E0 SWAP2 SWAP1 PUSH2 0x1B4A JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x6C8 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x24 ADD PUSH2 0x1B12 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x899B86F PUSH1 0xE2 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x5E0 SWAP2 SWAP1 PUSH2 0x1B4A JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x72C SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 PUSH1 0x24 ADD PUSH2 0x1BAB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xD2E2EDB PUSH1 0xE2 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x761 SWAP2 SWAP1 PUSH2 0x1B4A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x79C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x7A1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP4 PUSH2 0x7B8 JUMPI DUP1 DUP3 REVERT JUMPDEST POP MLOAD SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xF DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x7D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0xFF AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x7F8 SWAP1 PUSH2 0x1C10 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x824 SWAP1 PUSH2 0x1C10 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x871 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x846 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x871 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x854 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x60 SWAP2 DUP4 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH1 0x44 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x4EEB7B85 PUSH1 0xE0 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x8D4 SWAP2 SWAP1 PUSH2 0x1B4A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x90F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x914 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x92B JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP1 DUP3 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x537563636573732065786563757465642070726F706F73616C00000000000000 DUP2 MSTORE POP SWAP4 POP SWAP4 POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x997 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x24 ADD PUSH2 0x1C4B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x70ACB761 PUSH1 0xE0 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x9CC SWAP2 SWAP1 PUSH2 0x1B4A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xA07 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA0C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP4 PUSH2 0xA23 JUMPI DUP1 DUP3 REVERT JUMPDEST POP MLOAD SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0xA5A SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x24 ADD PUSH2 0x1B12 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xF8C70A9 PUSH1 0xE3 SHL OR SWAP1 MSTORE MLOAD PUSH2 0xA8F SWAP2 SWAP1 PUSH2 0x1B4A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xACA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xACF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP4 PUSH2 0xAE6 JUMPI DUP1 DUP3 REVERT JUMPDEST POP MLOAD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xB28 SWAP3 SWAP2 SWAP1 PUSH2 0x1631 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x1039E45B PUSH1 0xE3 SHL OR SWAP1 MSTORE MLOAD PUSH2 0xB5D SWAP2 SWAP1 PUSH2 0x1B4A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xB98 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB9D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0xBB4 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP1 DUP3 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x10 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xBCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP4 POP SWAP1 PUSH2 0xBF9 SWAP1 PUSH2 0x1C10 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC25 SWAP1 PUSH2 0x1C10 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC72 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC47 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC72 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC55 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 SWAP2 PUSH1 0xFF DUP1 DUP3 AND SWAP3 POP PUSH2 0x100 SWAP1 SWAP2 DIV AND DUP6 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0xCBE SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x24 ADD PUSH2 0x1C77 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA19A5F5 PUSH1 0xE4 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x5E0 SWAP2 SWAP1 PUSH2 0x1B4A JUMP JUMPDEST PUSH1 0x60 PUSH1 0xC DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xE78 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x5 DUP6 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP4 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x8 DUP2 GT ISZERO PUSH2 0xD6E JUMPI PUSH2 0xD6E PUSH2 0x17CC JUMP JUMPDEST PUSH1 0x8 DUP2 GT ISZERO PUSH2 0xD7F JUMPI PUSH2 0xD7F PUSH2 0x17CC JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0xD93 SWAP1 PUSH2 0x1C10 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xDBF SWAP1 PUSH2 0x1C10 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE0C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDE1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE0C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDEF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x100 DUP3 DIV DUP2 AND PUSH1 0x60 DUP6 ADD MSTORE PUSH3 0x10000 DUP3 DIV DUP2 AND ISZERO ISZERO PUSH1 0x80 DUP6 ADD MSTORE PUSH4 0x1000000 SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0xC0 SWAP1 SWAP2 ADD MSTORE SWAP1 DUP3 MSTORE PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0xD17 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xE DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xE91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP5 POP SWAP1 SWAP3 DUP3 AND SWAP2 AND DUP5 JUMP JUMPDEST PUSH1 0xD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xED9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP4 POP SWAP1 PUSH2 0xF08 SWAP1 PUSH2 0x1C10 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF34 SWAP1 PUSH2 0x1C10 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF81 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF56 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF81 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF64 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x2 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 POP POP PUSH1 0xFF AND DUP4 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0xFBF SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x24 ADD PUSH2 0x1CBA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x9E803DFB PUSH1 0xE0 SHL OR SWAP1 MSTORE MLOAD PUSH2 0xFF4 SWAP2 SWAP1 PUSH2 0x1B4A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x102F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1034 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x104B JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP1 DUP3 REVERT JUMPDEST POP PUSH1 0x1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0xFF DUP1 DUP5 AND SWAP5 PUSH2 0x100 SWAP1 SWAP5 DIV AND SWAP3 SWAP2 SWAP1 PUSH2 0x1092 SWAP1 PUSH2 0x1C10 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x10BE SWAP1 PUSH2 0x1C10 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x110B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x10E0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x110B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x10EE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0xC DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP5 POP PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP3 DIV PUSH1 0xFF AND SWAP3 SWAP2 PUSH2 0x115F SWAP1 PUSH2 0x1C10 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x118B SWAP1 PUSH2 0x1C10 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x11D8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x11AD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x11D8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x11BB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x2 DUP5 ADD SLOAD PUSH1 0x3 DUP6 ADD SLOAD PUSH1 0x4 SWAP1 SWAP6 ADD SLOAD SWAP4 SWAP5 SWAP1 SWAP4 PUSH1 0xFF DUP1 DUP4 AND SWAP5 POP PUSH2 0x100 DUP4 DIV DUP2 AND SWAP4 POP PUSH3 0x10000 DUP4 DIV DUP2 AND SWAP3 PUSH4 0x1000000 SWAP1 DIV AND SWAP1 DUP10 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x1241 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x24 ADD PUSH2 0x1CF8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x6F2D58A7 PUSH1 0xE1 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x1276 SWAP2 SWAP1 PUSH2 0x1B4A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x12B1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12B6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP4 PUSH2 0x12CD JUMPI DUP1 DUP3 REVERT JUMPDEST POP MLOAD SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x1306 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x24 ADD PUSH2 0x1D2B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x7B2DDE6F PUSH1 0xE1 SHL OR SWAP1 MSTORE MLOAD PUSH2 0xA8F SWAP2 SWAP1 PUSH2 0x1B4A JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x137E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1399 JUMPI PUSH2 0x1399 PUSH2 0x1357 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x13C1 JUMPI PUSH2 0x13C1 PUSH2 0x1357 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x13DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1410 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1419 DUP6 PUSH2 0x133B JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x143C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1448 DUP8 DUP3 DUP9 ADD PUSH2 0x136D JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP4 SWAP5 PUSH1 0x60 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x146B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1474 DUP3 PUSH2 0x133B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1493 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x149C DUP7 PUSH2 0x133B JUMP JUMPDEST SWAP5 POP PUSH2 0x14AA PUSH1 0x20 DUP8 ADD PUSH2 0x133B JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14D9 DUP9 DUP3 DUP10 ADD PUSH2 0x136D JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP3 SWAP6 PUSH1 0x80 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1514 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x151D DUP8 PUSH2 0x133B JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x153A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1546 DUP11 DUP4 DUP12 ADD PUSH2 0x136D JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x155C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1568 DUP11 DUP4 DUP12 ADD PUSH2 0x136D JUMP JUMPDEST SWAP6 POP PUSH2 0x1576 PUSH1 0x60 DUP11 ADD PUSH2 0x14EB JUMP JUMPDEST SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1593 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15A0 DUP10 DUP3 DUP11 ADD PUSH2 0x136D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15E1 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x15C9 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xBB4 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x160A DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x15C6 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1474 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x15F2 JUMP JUMPDEST DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x164C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x15F2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1669 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x167A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1696 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16A2 DUP7 DUP3 DUP8 ADD PUSH2 0x136D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16CF DUP4 PUSH2 0x14EB JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16F7 DUP6 DUP3 DUP7 ADD PUSH2 0x136D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1725 SWAP1 DUP4 ADD DUP8 PUSH2 0x15F2 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE POP SWAP2 ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x80 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1759 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1771 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x177D DUP8 DUP4 DUP9 ADD PUSH2 0x136D JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1793 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x179F DUP8 DUP4 DUP9 ADD PUSH2 0x136D JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x17B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17C2 DUP7 DUP3 DUP8 ADD PUSH2 0x136D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x9 DUP2 LT PUSH2 0x1800 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 SWAP3 POP DUP3 DUP7 ADD SWAP2 POP DUP3 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD DUP5 DUP9 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x18D9 JUMPI DUP9 DUP4 SUB PUSH1 0x3F NOT ADD DUP6 MSTORE DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH2 0x120 DUP9 DUP3 ADD MLOAD PUSH2 0x185E DUP11 DUP8 ADD DUP3 PUSH2 0x17E2 JUMP JUMPDEST POP DUP8 DUP3 ADD MLOAD DUP2 DUP10 DUP8 ADD MSTORE PUSH2 0x1874 DUP3 DUP8 ADD DUP3 PUSH2 0x15F2 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x60 DUP1 DUP4 ADD MLOAD DUP2 DUP8 ADD MSTORE POP PUSH1 0x80 DUP1 DUP4 ADD MLOAD PUSH2 0x1896 DUP3 DUP9 ADD DUP3 PUSH1 0xFF AND SWAP1 MSTORE JUMP JUMPDEST POP POP PUSH1 0xA0 DUP3 DUP2 ADD MLOAD PUSH1 0xFF AND SWAP1 DUP7 ADD MSTORE PUSH1 0xC0 DUP1 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 DUP7 ADD MSTORE PUSH1 0xE0 DUP1 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 DUP7 ADD MSTORE PUSH2 0x100 SWAP2 DUP3 ADD MLOAD SWAP2 SWAP1 SWAP5 ADD MSTORE SWAP4 DUP7 ADD SWAP4 SWAP1 DUP7 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x182B JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x190B SWAP1 DUP4 ADD DUP6 PUSH2 0x15F2 JUMP JUMPDEST SWAP1 POP DUP3 ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1933 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH2 0x1943 PUSH1 0x20 DUP7 ADD PUSH2 0x14EB JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1960 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x196C DUP9 DUP4 DUP10 ADD PUSH2 0x136D JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1982 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x198F DUP8 DUP3 DUP9 ADD PUSH2 0x136D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x19BE PUSH1 0x20 DUP5 ADD PUSH2 0x133B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP4 ISZERO ISZERO DUP2 MSTORE DUP3 ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x19EA PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x15F2 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP2 MSTORE PUSH1 0x0 PUSH2 0x120 PUSH2 0x1A11 PUSH1 0x20 DUP5 ADD DUP13 PUSH2 0x17E2 JUMP JUMPDEST DUP1 PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x1A23 DUP2 DUP5 ADD DUP12 PUSH2 0x15F2 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD SWAP10 SWAP1 SWAP10 MSTORE POP POP PUSH1 0xFF SWAP6 DUP7 AND PUSH1 0x80 DUP3 ADD MSTORE SWAP4 SWAP1 SWAP5 AND PUSH1 0xA0 DUP5 ADD MSTORE SWAP1 ISZERO ISZERO PUSH1 0xC0 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1A73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A7C DUP7 PUSH2 0x133B JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH2 0x1A91 PUSH1 0x40 DUP8 ADD PUSH2 0x133B JUMP JUMPDEST SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1AC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1ACC DUP6 PUSH2 0x133B JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1AE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AF5 DUP9 DUP4 DUP10 ADD PUSH2 0x136D JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1982 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1B39 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x15F2 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x60 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1B5C DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x15C6 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1B99 SWAP1 DUP4 ADD DUP6 PUSH2 0x15F2 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x80 DUP4 ADD MSTORE SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP2 MSTORE PUSH1 0xC0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1BCF SWAP1 DUP4 ADD DUP9 PUSH2 0x15F2 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x1BE1 DUP2 DUP9 PUSH2 0x15F2 JUMP JUMPDEST SWAP1 POP DUP6 ISZERO ISZERO PUSH1 0x60 DUP5 ADD MSTORE DUP5 PUSH1 0x80 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0x1C03 DUP2 DUP6 PUSH2 0x15F2 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1C24 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1C45 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xFF DUP5 AND DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1C67 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x15F2 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1C8A PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x15F2 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1C9C DUP2 DUP7 PUSH2 0x15F2 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x1CB0 DUP2 DUP6 PUSH2 0x15F2 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP5 DUP2 MSTORE DUP4 ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1CDB PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x15F2 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1CED DUP2 DUP6 PUSH2 0x15F2 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE DUP5 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1B99 SWAP1 DUP4 ADD DUP6 PUSH2 0x15F2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1D4F SWAP1 DUP4 ADD DUP7 PUSH2 0x15F2 JUMP JUMPDEST DUP5 PUSH1 0x40 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1CED DUP2 DUP6 PUSH2 0x15F2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 PUSH13 0xC53956743D56E1EA257330F726 SLT 0x29 PUSH31 0x106B339223CF5DFB478E28D8D44464736F6C634300080C0033000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        254,
        15506
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "5": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "CALLVALUE",
      "path": "35"
    },
    "6": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "DUP1",
      "path": "35"
    },
    "7": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "ISZERO",
      "path": "35"
    },
    "8": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "12": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "DUP1",
      "path": "35"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "REVERT",
      "path": "35"
    },
    "16": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "17": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "POP",
      "path": "35"
    },
    "18": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "CALLDATASIZE",
      "path": "35"
    },
    "21": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "LT",
      "path": "35"
    },
    "22": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x211"
    },
    "25": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "26": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "CALLDATALOAD",
      "path": "35"
    },
    "29": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "SHR",
      "path": "35"
    },
    "32": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "DUP1",
      "path": "35"
    },
    "33": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH4",
      "path": "35",
      "value": "0x824C88DA"
    },
    "38": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "GT",
      "path": "35"
    },
    "39": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x125"
    },
    "42": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "43": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "DUP1",
      "path": "35"
    },
    "44": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH4",
      "path": "35",
      "value": "0xBAA4D5E9"
    },
    "49": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "GT",
      "path": "35"
    },
    "50": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xAD"
    },
    "53": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "54": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "DUP1",
      "path": "35"
    },
    "55": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH4",
      "path": "35",
      "value": "0xCB85669C"
    },
    "60": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "GT",
      "path": "35"
    },
    "61": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x7C"
    },
    "64": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "65": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "DUP1",
      "path": "35"
    },
    "66": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH4",
      "path": "35",
      "value": "0xCB85669C"
    },
    "71": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "EQ",
      "path": "35"
    },
    "72": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x50F"
    },
    "75": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "76": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "DUP1",
      "path": "35"
    },
    "77": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH4",
      "path": "35",
      "value": "0xDA9BCA21"
    },
    "82": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "EQ",
      "path": "35"
    },
    "83": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x537"
    },
    "86": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "87": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "DUP1",
      "path": "35"
    },
    "88": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH4",
      "path": "35",
      "value": "0xDE5AB14E"
    },
    "93": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "EQ",
      "path": "35"
    },
    "94": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x544"
    },
    "97": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "98": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "DUP1",
      "path": "35"
    },
    "99": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH4",
      "path": "35",
      "value": "0xF00D6274"
    },
    "104": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "EQ",
      "path": "35"
    },
    "105": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x557"
    },
    "108": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "109": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "DUP1",
      "path": "35"
    },
    "110": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH4",
      "path": "35",
      "value": "0xF65BBCDE"
    },
    "115": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "EQ",
      "path": "35"
    },
    "116": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x56D"
    },
    "119": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "120": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "122": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "DUP1",
      "path": "35"
    },
    "123": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "REVERT",
      "path": "35"
    },
    "124": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "125": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "DUP1",
      "path": "35"
    },
    "126": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH4",
      "path": "35",
      "value": "0xBAA4D5E9"
    },
    "131": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "EQ",
      "path": "35"
    },
    "132": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x462"
    },
    "135": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "136": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "DUP1",
      "path": "35"
    },
    "137": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH4",
      "path": "35",
      "value": "0xBB3A9065"
    },
    "142": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "EQ",
      "path": "35"
    },
    "143": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x4A8"
    },
    "146": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "147": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "DUP1",
      "path": "35"
    },
    "148": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH4",
      "path": "35",
      "value": "0xC2B3AA08"
    },
    "153": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "EQ",
      "path": "35"
    },
    "154": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x4CA"
    },
    "157": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "158": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "DUP1",
      "path": "35"
    },
    "159": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH4",
      "path": "35",
      "value": "0xC347D2FD"
    },
    "164": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "EQ",
      "path": "35"
    },
    "165": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x4ED"
    },
    "168": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "169": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "171": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "DUP1",
      "path": "35"
    },
    "172": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "REVERT",
      "path": "35"
    },
    "173": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "174": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "DUP1",
      "path": "35"
    },
    "175": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH4",
      "path": "35",
      "value": "0x99DB7FB3"
    },
    "180": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "GT",
      "path": "35"
    },
    "181": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xF4"
    },
    "184": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "185": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "DUP1",
      "path": "35"
    },
    "186": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH4",
      "path": "35",
      "value": "0x99DB7FB3"
    },
    "191": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "EQ",
      "path": "35"
    },
    "192": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x3F3"
    },
    "195": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "196": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "DUP1",
      "path": "35"
    },
    "197": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH4",
      "path": "35",
      "value": "0x9C630A88"
    },
    "202": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "EQ",
      "path": "35"
    },
    "203": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x413"
    },
    "206": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "207": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "DUP1",
      "path": "35"
    },
    "208": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH4",
      "path": "35",
      "value": "0xA19A5F50"
    },
    "213": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "EQ",
      "path": "35"
    },
    "214": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x426"
    },
    "217": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "218": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "DUP1",
      "path": "35"
    },
    "219": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH4",
      "path": "35",
      "value": "0xAB44997B"
    },
    "224": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "EQ",
      "path": "35"
    },
    "225": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x439"
    },
    "228": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "229": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "DUP1",
      "path": "35"
    },
    "230": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH4",
      "path": "35",
      "value": "0xB4C62192"
    },
    "235": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "EQ",
      "path": "35"
    },
    "236": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x44D"
    },
    "239": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "240": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "242": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "DUP1",
      "path": "35"
    },
    "243": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "REVERT",
      "path": "35"
    },
    "244": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "245": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "DUP1",
      "path": "35"
    },
    "246": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH4",
      "path": "35",
      "value": "0x824C88DA"
    },
    "251": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "EQ",
      "path": "35"
    },
    "252": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x3A2"
    },
    "255": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "256": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "DUP1",
      "path": "35"
    },
    "257": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH4",
      "path": "35",
      "value": "0x8532CBF7"
    },
    "262": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "EQ",
      "path": "35"
    },
    "263": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x3AA"
    },
    "266": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "267": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "DUP1",
      "path": "35"
    },
    "268": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH4",
      "path": "35",
      "value": "0x8668EAFC"
    },
    "273": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "EQ",
      "path": "35"
    },
    "274": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x3CE"
    },
    "277": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "278": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "DUP1",
      "path": "35"
    },
    "279": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH4",
      "path": "35",
      "value": "0x9360BFAD"
    },
    "284": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "EQ",
      "path": "35"
    },
    "285": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x3E0"
    },
    "288": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "289": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "291": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "DUP1",
      "path": "35"
    },
    "292": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "REVERT",
      "path": "35"
    },
    "293": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "294": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "DUP1",
      "path": "35"
    },
    "295": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH4",
      "path": "35",
      "value": "0x34B8BB6C"
    },
    "300": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "GT",
      "path": "35"
    },
    "301": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1A8"
    },
    "304": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "305": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "DUP1",
      "path": "35"
    },
    "306": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH4",
      "path": "35",
      "value": "0x5F3D99B3"
    },
    "311": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "GT",
      "path": "35"
    },
    "312": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x177"
    },
    "315": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "316": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "DUP1",
      "path": "35"
    },
    "317": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH4",
      "path": "35",
      "value": "0x5F3D99B3"
    },
    "322": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "EQ",
      "path": "35"
    },
    "323": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x333"
    },
    "326": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "327": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "DUP1",
      "path": "35"
    },
    "328": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH4",
      "path": "35",
      "value": "0x6C2F34E7"
    },
    "333": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "EQ",
      "path": "35"
    },
    "334": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x354"
    },
    "337": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "338": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "DUP1",
      "path": "35"
    },
    "339": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH4",
      "path": "35",
      "value": "0x70ACB761"
    },
    "344": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "EQ",
      "path": "35"
    },
    "345": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x367"
    },
    "348": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "349": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "DUP1",
      "path": "35"
    },
    "350": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH4",
      "path": "35",
      "value": "0x7C638548"
    },
    "355": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "EQ",
      "path": "35"
    },
    "356": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x37A"
    },
    "359": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "360": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "DUP1",
      "path": "35"
    },
    "361": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH4",
      "path": "35",
      "value": "0x81CF22D8"
    },
    "366": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "EQ",
      "path": "35"
    },
    "367": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x38D"
    },
    "370": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "371": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "373": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "DUP1",
      "path": "35"
    },
    "374": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "REVERT",
      "path": "35"
    },
    "375": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "376": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "DUP1",
      "path": "35"
    },
    "377": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH4",
      "path": "35",
      "value": "0x34B8BB6C"
    },
    "382": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "EQ",
      "path": "35"
    },
    "383": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x2F0"
    },
    "386": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "387": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "DUP1",
      "path": "35"
    },
    "388": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH4",
      "path": "35",
      "value": "0x3A70693D"
    },
    "393": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "EQ",
      "path": "35"
    },
    "394": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x303"
    },
    "397": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "398": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "DUP1",
      "path": "35"
    },
    "399": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH4",
      "path": "35",
      "value": "0x4E9D5472"
    },
    "404": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "EQ",
      "path": "35"
    },
    "405": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x316"
    },
    "408": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "409": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "DUP1",
      "path": "35"
    },
    "410": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH4",
      "path": "35",
      "value": "0x59CA2D03"
    },
    "415": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "EQ",
      "path": "35"
    },
    "416": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x31E"
    },
    "419": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "420": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "422": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "DUP1",
      "path": "35"
    },
    "423": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "REVERT",
      "path": "35"
    },
    "424": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "425": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "DUP1",
      "path": "35"
    },
    "426": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH4",
      "path": "35",
      "value": "0x152DE3B9"
    },
    "431": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "GT",
      "path": "35"
    },
    "432": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1E4"
    },
    "435": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "436": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "DUP1",
      "path": "35"
    },
    "437": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH4",
      "path": "35",
      "value": "0x152DE3B9"
    },
    "442": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "EQ",
      "path": "35"
    },
    "443": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x2AE"
    },
    "446": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "447": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "DUP1",
      "path": "35"
    },
    "448": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH4",
      "path": "35",
      "value": "0x1D5FD3CA"
    },
    "453": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "EQ",
      "path": "35"
    },
    "454": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x2C1"
    },
    "457": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "458": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "DUP1",
      "path": "35"
    },
    "459": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH4",
      "path": "35",
      "value": "0x1F50DD27"
    },
    "464": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "EQ",
      "path": "35"
    },
    "465": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x2CA"
    },
    "468": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "469": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "DUP1",
      "path": "35"
    },
    "470": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH4",
      "path": "35",
      "value": "0x2266E1BC"
    },
    "475": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "EQ",
      "path": "35"
    },
    "476": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x2DD"
    },
    "479": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "480": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "482": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "DUP1",
      "path": "35"
    },
    "483": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "REVERT",
      "path": "35"
    },
    "484": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "485": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "DUP1",
      "path": "35"
    },
    "486": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH4",
      "path": "35",
      "value": "0x4F17A9B"
    },
    "491": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "EQ",
      "path": "35"
    },
    "492": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x216"
    },
    "495": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "496": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "DUP1",
      "path": "35"
    },
    "497": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH4",
      "path": "35",
      "value": "0x52F9B0A"
    },
    "502": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "EQ",
      "path": "35"
    },
    "503": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x23C"
    },
    "506": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "507": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "DUP1",
      "path": "35"
    },
    "508": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH4",
      "path": "35",
      "value": "0x5FE6663"
    },
    "513": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "EQ",
      "path": "35"
    },
    "514": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x267"
    },
    "517": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "518": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "DUP1",
      "path": "35"
    },
    "519": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH4",
      "path": "35",
      "value": "0x9C57DF7"
    },
    "524": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "EQ",
      "path": "35"
    },
    "525": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x28E"
    },
    "528": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "529": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "530": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "532": {
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "DUP1",
      "path": "35"
    },
    "533": {
      "first_revert": true,
      "fn": null,
      "offset": [
        254,
        15506
      ],
      "op": "REVERT",
      "path": "35"
    },
    "534": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13379,
        14197
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "535": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13379,
        14197
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x229"
    },
    "538": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13379,
        14197
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x224"
    },
    "541": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13379,
        14197
      ],
      "op": "CALLDATASIZE",
      "path": "35"
    },
    "542": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13379,
        14197
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x4"
    },
    "544": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13379,
        14197
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x13FA"
    },
    "547": {
      "fn": "CLHouse.PropSellERC20",
      "jump": "i",
      "offset": [
        13379,
        14197
      ],
      "op": "JUMP",
      "path": "35"
    },
    "548": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13379,
        14197
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "549": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13379,
        14197
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x580"
    },
    "552": {
      "fn": "CLHouse.PropSellERC20",
      "jump": "i",
      "offset": [
        13379,
        14197
      ],
      "op": "JUMP",
      "path": "35"
    },
    "553": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13379,
        14197
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "554": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13379,
        14197
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "556": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13379,
        14197
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "557": {
      "op": "SWAP1"
    },
    "558": {
      "op": "DUP2"
    },
    "559": {
      "op": "MSTORE"
    },
    "560": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "562": {
      "op": "ADD"
    },
    "563": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13379,
        14197
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "564": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13379,
        14197
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "566": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13379,
        14197
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "567": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13379,
        14197
      ],
      "op": "DUP1",
      "path": "35"
    },
    "568": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13379,
        14197
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "569": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13379,
        14197
      ],
      "op": "SUB",
      "path": "35"
    },
    "570": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13379,
        14197
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "571": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13379,
        14197
      ],
      "op": "RETURN",
      "path": "35"
    },
    "572": {
      "offset": [
        895,
        918
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "573": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        895,
        918
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x7"
    },
    "575": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        895,
        918
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "576": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        895,
        918
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x24F"
    },
    "579": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        895,
        918
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "580": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "584": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "586": {
      "op": "SHL"
    },
    "587": {
      "op": "SUB"
    },
    "588": {
      "offset": [
        895,
        918
      ],
      "op": "AND",
      "path": "37"
    },
    "589": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        895,
        918
      ],
      "op": "DUP2",
      "path": "37"
    },
    "590": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        895,
        918
      ],
      "op": "JUMP",
      "path": "37"
    },
    "591": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        895,
        918
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "592": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        895,
        918
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "594": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        895,
        918
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "597": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "599": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "601": {
      "op": "SHL"
    },
    "602": {
      "op": "SUB"
    },
    "603": {
      "op": "SWAP1"
    },
    "604": {
      "op": "SWAP2"
    },
    "605": {
      "op": "AND"
    },
    "606": {
      "op": "DUP2"
    },
    "607": {
      "op": "MSTORE"
    },
    "608": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "610": {
      "op": "ADD"
    },
    "611": {
      "offset": [
        895,
        918
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x233"
    },
    "614": {
      "op": "JUMP"
    },
    "615": {
      "offset": [
        615,
        653
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "616": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        615,
        653
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "618": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        615,
        653
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "619": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        615,
        653
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x27C"
    },
    "622": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        615,
        653
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "623": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        615,
        653
      ],
      "op": "PUSH5",
      "path": "37",
      "value": "0x100000000"
    },
    "629": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        615,
        653
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "630": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        615,
        653
      ],
      "op": "DIV",
      "path": "37"
    },
    "631": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        615,
        653
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xFF"
    },
    "633": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        615,
        653
      ],
      "op": "AND",
      "path": "37"
    },
    "634": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        615,
        653
      ],
      "op": "DUP2",
      "path": "37"
    },
    "635": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        615,
        653
      ],
      "op": "JUMP",
      "path": "37"
    },
    "636": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        615,
        653
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "637": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        615,
        653
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "639": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        615,
        653
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "640": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "642": {
      "op": "SWAP1"
    },
    "643": {
      "op": "SWAP2"
    },
    "644": {
      "op": "AND"
    },
    "645": {
      "op": "DUP2"
    },
    "646": {
      "op": "MSTORE"
    },
    "647": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "649": {
      "op": "ADD"
    },
    "650": {
      "offset": [
        615,
        653
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x233"
    },
    "653": {
      "op": "JUMP"
    },
    "654": {
      "offset": [
        1039,
        1087
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "655": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1039,
        1087
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x229"
    },
    "658": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1039,
        1087
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x29C"
    },
    "661": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1039,
        1087
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "662": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1039,
        1087
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "664": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1039,
        1087
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1459"
    },
    "667": {
      "fn": "CLHouse.PropSellERC20",
      "jump": "i",
      "offset": [
        1039,
        1087
      ],
      "op": "JUMP",
      "path": "37"
    },
    "668": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1039,
        1087
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "669": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1039,
        1087
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xA"
    },
    "671": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1039,
        1087
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "673": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1039,
        1087
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "674": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1039,
        1087
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "676": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1039,
        1087
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "677": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1039,
        1087
      ],
      "op": "DUP2",
      "path": "37"
    },
    "678": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1039,
        1087
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "679": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1039,
        1087
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "681": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1039,
        1087
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "682": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1039,
        1087
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "683": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1039,
        1087
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "684": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1039,
        1087
      ],
      "op": "DUP2",
      "path": "37"
    },
    "685": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1039,
        1087
      ],
      "op": "JUMP",
      "path": "37"
    },
    "686": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12488,
        13373
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "687": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12488,
        13373
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x229"
    },
    "690": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12488,
        13373
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x2BC"
    },
    "693": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12488,
        13373
      ],
      "op": "CALLDATASIZE",
      "path": "35"
    },
    "694": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12488,
        13373
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x4"
    },
    "696": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12488,
        13373
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x147B"
    },
    "699": {
      "fn": "CLHouse.PropSwapERC20",
      "jump": "i",
      "offset": [
        12488,
        13373
      ],
      "op": "JUMP",
      "path": "35"
    },
    "700": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12488,
        13373
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "701": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12488,
        13373
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x63B"
    },
    "704": {
      "fn": "CLHouse.PropSwapERC20",
      "jump": "i",
      "offset": [
        12488,
        13373
      ],
      "op": "JUMP",
      "path": "35"
    },
    "705": {
      "offset": [
        782,
        819
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "706": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        782,
        819
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x229"
    },
    "709": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        782,
        819
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "711": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        782,
        819
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "712": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        782,
        819
      ],
      "op": "DUP2",
      "path": "37"
    },
    "713": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        782,
        819
      ],
      "op": "JUMP",
      "path": "37"
    },
    "714": {
      "offset": [
        924,
        951
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "715": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        924,
        951
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x8"
    },
    "717": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        924,
        951
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "718": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        924,
        951
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x24F"
    },
    "721": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        924,
        951
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "722": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "726": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "728": {
      "op": "SHL"
    },
    "729": {
      "op": "SUB"
    },
    "730": {
      "offset": [
        924,
        951
      ],
      "op": "AND",
      "path": "37"
    },
    "731": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        924,
        951
      ],
      "op": "DUP2",
      "path": "37"
    },
    "732": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        924,
        951
      ],
      "op": "JUMP",
      "path": "37"
    },
    "733": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14203,
        15017
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "734": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14203,
        15017
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x229"
    },
    "737": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14203,
        15017
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x2EB"
    },
    "740": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14203,
        15017
      ],
      "op": "CALLDATASIZE",
      "path": "35"
    },
    "741": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14203,
        15017
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x4"
    },
    "743": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14203,
        15017
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x13FA"
    },
    "746": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "i",
      "offset": [
        14203,
        15017
      ],
      "op": "JUMP",
      "path": "35"
    },
    "747": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14203,
        15017
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "748": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14203,
        15017
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x69D"
    },
    "751": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "i",
      "offset": [
        14203,
        15017
      ],
      "op": "JUMP",
      "path": "35"
    },
    "752": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5178,
        6113
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "753": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5178,
        6113
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x229"
    },
    "756": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5178,
        6113
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x2FE"
    },
    "759": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5178,
        6113
      ],
      "op": "CALLDATASIZE",
      "path": "35"
    },
    "760": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5178,
        6113
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x4"
    },
    "762": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5178,
        6113
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x14FB"
    },
    "765": {
      "fn": "CLHouse.PropInviteMember",
      "jump": "i",
      "offset": [
        5178,
        6113
      ],
      "op": "JUMP",
      "path": "35"
    },
    "766": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5178,
        6113
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "767": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5178,
        6113
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x6FD"
    },
    "770": {
      "fn": "CLHouse.PropInviteMember",
      "jump": "i",
      "offset": [
        5178,
        6113
      ],
      "op": "JUMP",
      "path": "35"
    },
    "771": {
      "offset": [
        1343,
        1387
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "772": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        1343,
        1387
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x27C"
    },
    "775": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        1343,
        1387
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x311"
    },
    "778": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        1343,
        1387
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "779": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        1343,
        1387
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "781": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        1343,
        1387
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x15AD"
    },
    "784": {
      "fn": "CLHouse.PropInviteMember",
      "jump": "i",
      "offset": [
        1343,
        1387
      ],
      "op": "JUMP",
      "path": "37"
    },
    "785": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        1343,
        1387
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "786": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        1343,
        1387
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x7C7"
    },
    "789": {
      "fn": "CLHouse.PropInviteMember",
      "jump": "i",
      "offset": [
        1343,
        1387
      ],
      "op": "JUMP",
      "path": "37"
    },
    "790": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        15133,
        15241
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "791": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        15215,
        15227
      ],
      "op": "PUSH1",
      "path": "35",
      "statement": 0,
      "value": "0xC"
    },
    "793": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        15215,
        15234
      ],
      "op": "SLOAD",
      "path": "35"
    },
    "794": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        15133,
        15241
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x229"
    },
    "797": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        15133,
        15241
      ],
      "op": "JUMP",
      "path": "35"
    },
    "798": {
      "offset": [
        320,
        344
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "799": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        320,
        344
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x326"
    },
    "802": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        320,
        344
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x7EB"
    },
    "805": {
      "fn": "CLHouse.GetArrProposalsLength",
      "jump": "i",
      "offset": [
        320,
        344
      ],
      "op": "JUMP",
      "path": "37"
    },
    "806": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        320,
        344
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "807": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "809": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        320,
        344
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "810": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        320,
        344
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x233"
    },
    "813": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        320,
        344
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "814": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        320,
        344
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "815": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        320,
        344
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x161E"
    },
    "818": {
      "fn": "CLHouse.GetArrProposalsLength",
      "jump": "i",
      "offset": [
        320,
        344
      ],
      "op": "JUMP",
      "path": "37"
    },
    "819": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2951,
        3619
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "820": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2951,
        3619
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x346"
    },
    "823": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2951,
        3619
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x341"
    },
    "826": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2951,
        3619
      ],
      "op": "CALLDATASIZE",
      "path": "35"
    },
    "827": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2951,
        3619
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x4"
    },
    "829": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2951,
        3619
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x15AD"
    },
    "832": {
      "fn": "CLHouse.ExecProp",
      "jump": "i",
      "offset": [
        2951,
        3619
      ],
      "op": "JUMP",
      "path": "35"
    },
    "833": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2951,
        3619
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "834": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2951,
        3619
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x879"
    },
    "837": {
      "fn": "CLHouse.ExecProp",
      "jump": "i",
      "offset": [
        2951,
        3619
      ],
      "op": "JUMP",
      "path": "35"
    },
    "838": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2951,
        3619
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "839": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2951,
        3619
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "841": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2951,
        3619
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "842": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2951,
        3619
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x233"
    },
    "845": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2951,
        3619
      ],
      "op": "SWAP3",
      "path": "35"
    },
    "846": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2951,
        3619
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "847": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2951,
        3619
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "848": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2951,
        3619
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1631"
    },
    "851": {
      "fn": "CLHouse.ExecProp",
      "jump": "i",
      "offset": [
        2951,
        3619
      ],
      "op": "JUMP",
      "path": "35"
    },
    "852": {
      "offset": [
        838,
        861
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "853": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        838,
        861
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x5"
    },
    "855": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        838,
        861
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "856": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        838,
        861
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x24F"
    },
    "859": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        838,
        861
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "862": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "864": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "866": {
      "op": "SHL"
    },
    "867": {
      "op": "SUB"
    },
    "868": {
      "offset": [
        838,
        861
      ],
      "op": "AND",
      "path": "37"
    },
    "869": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        838,
        861
      ],
      "op": "DUP2",
      "path": "37"
    },
    "870": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        838,
        861
      ],
      "op": "JUMP",
      "path": "37"
    },
    "871": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9918,
        10675
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "872": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9918,
        10675
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x229"
    },
    "875": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9918,
        10675
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x375"
    },
    "878": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9918,
        10675
      ],
      "op": "CALLDATASIZE",
      "path": "35"
    },
    "879": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9918,
        10675
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x4"
    },
    "881": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9918,
        10675
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1654"
    },
    "884": {
      "fn": "CLHouse.PropGovRules",
      "jump": "i",
      "offset": [
        9918,
        10675
      ],
      "op": "JUMP",
      "path": "35"
    },
    "885": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9918,
        10675
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "886": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9918,
        10675
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x96E"
    },
    "889": {
      "fn": "CLHouse.PropGovRules",
      "jump": "i",
      "offset": [
        9918,
        10675
      ],
      "op": "JUMP",
      "path": "35"
    },
    "890": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7558,
        8349
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "891": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7558,
        8349
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x229"
    },
    "894": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7558,
        8349
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x388"
    },
    "897": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7558,
        8349
      ],
      "op": "CALLDATASIZE",
      "path": "35"
    },
    "898": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7558,
        8349
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x4"
    },
    "900": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7558,
        8349
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x13FA"
    },
    "903": {
      "fn": "CLHouse.PropTxWei",
      "jump": "i",
      "offset": [
        7558,
        8349
      ],
      "op": "JUMP",
      "path": "35"
    },
    "904": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7558,
        8349
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "905": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7558,
        8349
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xA2F"
    },
    "908": {
      "fn": "CLHouse.PropTxWei",
      "jump": "i",
      "offset": [
        7558,
        8349
      ],
      "op": "JUMP",
      "path": "35"
    },
    "909": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11852,
        12482
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "910": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11852,
        12482
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x3A0"
    },
    "913": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11852,
        12482
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x39B"
    },
    "916": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11852,
        12482
      ],
      "op": "CALLDATASIZE",
      "path": "35"
    },
    "917": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11852,
        12482
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x4"
    },
    "919": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11852,
        12482
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x16B3"
    },
    "922": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "jump": "i",
      "offset": [
        11852,
        12482
      ],
      "op": "JUMP",
      "path": "35"
    },
    "923": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11852,
        12482
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "924": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11852,
        12482
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xAF3"
    },
    "927": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "jump": "i",
      "offset": [
        11852,
        12482
      ],
      "op": "JUMP",
      "path": "35"
    },
    "928": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11852,
        12482
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "929": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11852,
        12482
      ],
      "op": "STOP",
      "path": "35"
    },
    "930": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        15023,
        15127
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "931": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        15103,
        15113
      ],
      "op": "PUSH1",
      "path": "35",
      "statement": 1,
      "value": "0x10"
    },
    "933": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        15103,
        15120
      ],
      "op": "SLOAD",
      "path": "35"
    },
    "934": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        15023,
        15127
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x229"
    },
    "937": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        15023,
        15127
      ],
      "op": "JUMP",
      "path": "35"
    },
    "938": {
      "offset": [
        1393,
        1422
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "939": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        1393,
        1422
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3BD"
    },
    "942": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        1393,
        1422
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3B8"
    },
    "945": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        1393,
        1422
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "946": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        1393,
        1422
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "948": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        1393,
        1422
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x15AD"
    },
    "951": {
      "fn": "CLHouse.GetArrMembersLength",
      "jump": "i",
      "offset": [
        1393,
        1422
      ],
      "op": "JUMP",
      "path": "37"
    },
    "952": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        1393,
        1422
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "953": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        1393,
        1422
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xBBA"
    },
    "956": {
      "fn": "CLHouse.GetArrMembersLength",
      "jump": "i",
      "offset": [
        1393,
        1422
      ],
      "op": "JUMP",
      "path": "37"
    },
    "957": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        1393,
        1422
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "958": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        1393,
        1422
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "960": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        1393,
        1422
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "961": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        1393,
        1422
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x233"
    },
    "964": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        1393,
        1422
      ],
      "op": "SWAP6",
      "path": "37"
    },
    "965": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        1393,
        1422
      ],
      "op": "SWAP5",
      "path": "37"
    },
    "966": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        1393,
        1422
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "967": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        1393,
        1422
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "968": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        1393,
        1422
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "969": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        1393,
        1422
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "970": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        1393,
        1422
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1701"
    },
    "973": {
      "fn": "CLHouse.GetArrMembersLength",
      "jump": "i",
      "offset": [
        1393,
        1422
      ],
      "op": "JUMP",
      "path": "37"
    },
    "974": {
      "offset": [
        495,
        525
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "975": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        495,
        525
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "977": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        495,
        525
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "978": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        495,
        525
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x27C"
    },
    "981": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        495,
        525
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "982": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        495,
        525
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x100"
    },
    "985": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        495,
        525
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "986": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        495,
        525
      ],
      "op": "DIV",
      "path": "37"
    },
    "987": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        495,
        525
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xFF"
    },
    "989": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        495,
        525
      ],
      "op": "AND",
      "path": "37"
    },
    "990": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        495,
        525
      ],
      "op": "DUP2",
      "path": "37"
    },
    "991": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        495,
        525
      ],
      "op": "JUMP",
      "path": "37"
    },
    "992": {
      "offset": [
        867,
        889
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "993": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        867,
        889
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x6"
    },
    "995": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        867,
        889
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "996": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        867,
        889
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x24F"
    },
    "999": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        867,
        889
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1000": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1002": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1004": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1006": {
      "op": "SHL"
    },
    "1007": {
      "op": "SUB"
    },
    "1008": {
      "offset": [
        867,
        889
      ],
      "op": "AND",
      "path": "37"
    },
    "1009": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        867,
        889
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1010": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        867,
        889
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1011": {
      "offset": [
        957,
        1013
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1012": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        957,
        1013
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x229"
    },
    "1015": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        957,
        1013
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x401"
    },
    "1018": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        957,
        1013
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "1019": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        957,
        1013
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "1021": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        957,
        1013
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1459"
    },
    "1024": {
      "fn": "CLHouse.GetArrMembersLength",
      "jump": "i",
      "offset": [
        957,
        1013
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1025": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        957,
        1013
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1026": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        957,
        1013
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x9"
    },
    "1028": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        957,
        1013
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "1030": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        957,
        1013
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "1031": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        957,
        1013
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "1033": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        957,
        1013
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1034": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        957,
        1013
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1035": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        957,
        1013
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "1036": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        957,
        1013
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "1038": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        957,
        1013
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1039": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        957,
        1013
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "1040": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        957,
        1013
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "1041": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        957,
        1013
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1042": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        957,
        1013
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1043": {
      "offset": [
        531,
        567
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1044": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        531,
        567
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "1046": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        531,
        567
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "1047": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        531,
        567
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x27C"
    },
    "1050": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        531,
        567
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1051": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        531,
        567
      ],
      "op": "PUSH3",
      "path": "37",
      "value": "0x10000"
    },
    "1055": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        531,
        567
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1056": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        531,
        567
      ],
      "op": "DIV",
      "path": "37"
    },
    "1057": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        531,
        567
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xFF"
    },
    "1059": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        531,
        567
      ],
      "op": "AND",
      "path": "37"
    },
    "1060": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        531,
        567
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1061": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        531,
        567
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1062": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10975,
        11714
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "1063": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10975,
        11714
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x229"
    },
    "1066": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10975,
        11714
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x434"
    },
    "1069": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10975,
        11714
      ],
      "op": "CALLDATASIZE",
      "path": "35"
    },
    "1070": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10975,
        11714
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x4"
    },
    "1072": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10975,
        11714
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1744"
    },
    "1075": {
      "fn": "CLHouse.PropRequestToJoin",
      "jump": "i",
      "offset": [
        10975,
        11714
      ],
      "op": "JUMP",
      "path": "35"
    },
    "1076": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10975,
        11714
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "1077": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10975,
        11714
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xC95"
    },
    "1080": {
      "fn": "CLHouse.PropRequestToJoin",
      "jump": "i",
      "offset": [
        10975,
        11714
      ],
      "op": "JUMP",
      "path": "35"
    },
    "1081": {
      "offset": [
        573,
        609
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1082": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        573,
        609
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "1084": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        573,
        609
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "1085": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        573,
        609
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x27C"
    },
    "1088": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        573,
        609
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1089": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        573,
        609
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x1000000"
    },
    "1094": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        573,
        609
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1095": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        573,
        609
      ],
      "op": "DIV",
      "path": "37"
    },
    "1096": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        573,
        609
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xFF"
    },
    "1098": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        573,
        609
      ],
      "op": "AND",
      "path": "37"
    },
    "1099": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        573,
        609
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1100": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        573,
        609
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1101": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15347,
        15504
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "1102": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15347,
        15504
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x455"
    },
    "1105": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15347,
        15504
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xCF3"
    },
    "1108": {
      "fn": "CLHouse.GetProposalList",
      "jump": "i",
      "offset": [
        15347,
        15504
      ],
      "op": "JUMP",
      "path": "35"
    },
    "1109": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15347,
        15504
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "1110": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15347,
        15504
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "1112": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15347,
        15504
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "1113": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15347,
        15504
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x233"
    },
    "1116": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15347,
        15504
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "1117": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15347,
        15504
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "1118": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15347,
        15504
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1804"
    },
    "1121": {
      "fn": "CLHouse.GetProposalList",
      "jump": "i",
      "offset": [
        15347,
        15504
      ],
      "op": "JUMP",
      "path": "35"
    },
    "1122": {
      "offset": [
        1293,
        1337
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1123": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1293,
        1337
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x475"
    },
    "1126": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1293,
        1337
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x470"
    },
    "1129": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1293,
        1337
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "1130": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1293,
        1337
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "1132": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1293,
        1337
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x15AD"
    },
    "1135": {
      "fn": "CLHouse.GetProposalList",
      "jump": "i",
      "offset": [
        1293,
        1337
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1136": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1293,
        1337
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1137": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1293,
        1337
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xE81"
    },
    "1140": {
      "fn": "CLHouse.GetProposalList",
      "jump": "i",
      "offset": [
        1293,
        1337
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1141": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1293,
        1337
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1142": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1293,
        1337
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "1144": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1293,
        1337
      ],
      "op": "DUP1",
      "path": "37"
    },
    "1145": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1293,
        1337
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "1146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1150": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1152": {
      "op": "SHL"
    },
    "1153": {
      "op": "SUB"
    },
    "1154": {
      "op": "SWAP6"
    },
    "1155": {
      "op": "DUP7"
    },
    "1156": {
      "op": "AND"
    },
    "1157": {
      "op": "DUP2"
    },
    "1158": {
      "op": "MSTORE"
    },
    "1159": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1161": {
      "op": "DUP2"
    },
    "1162": {
      "op": "ADD"
    },
    "1163": {
      "op": "SWAP5"
    },
    "1164": {
      "op": "SWAP1"
    },
    "1165": {
      "op": "SWAP5"
    },
    "1166": {
      "op": "MSTORE"
    },
    "1167": {
      "op": "SWAP2"
    },
    "1168": {
      "op": "DUP5"
    },
    "1169": {
      "op": "AND"
    },
    "1170": {
      "op": "SWAP2"
    },
    "1171": {
      "op": "DUP4"
    },
    "1172": {
      "op": "ADD"
    },
    "1173": {
      "op": "SWAP2"
    },
    "1174": {
      "op": "SWAP1"
    },
    "1175": {
      "op": "SWAP2"
    },
    "1176": {
      "op": "MSTORE"
    },
    "1177": {
      "op": "SWAP1"
    },
    "1178": {
      "op": "SWAP2"
    },
    "1179": {
      "op": "AND"
    },
    "1180": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1182": {
      "op": "DUP3"
    },
    "1183": {
      "op": "ADD"
    },
    "1184": {
      "op": "MSTORE"
    },
    "1185": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1187": {
      "op": "ADD"
    },
    "1188": {
      "offset": [
        1293,
        1337
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x233"
    },
    "1191": {
      "op": "JUMP"
    },
    "1192": {
      "offset": [
        1241,
        1287
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1193": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4BB"
    },
    "1196": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4B6"
    },
    "1199": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "1200": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "1202": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x15AD"
    },
    "1205": {
      "fn": "CLHouse.GetProposalList",
      "jump": "i",
      "offset": [
        1241,
        1287
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1206": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1207": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xEC9"
    },
    "1210": {
      "fn": "CLHouse.GetProposalList",
      "jump": "i",
      "offset": [
        1241,
        1287
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1211": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1212": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "1214": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "1215": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x233"
    },
    "1218": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "1219": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "1220": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "1221": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1222": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x18E7"
    },
    "1225": {
      "fn": "CLHouse.GetProposalList",
      "jump": "i",
      "offset": [
        1241,
        1287
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1226": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3952,
        4732
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "1227": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3952,
        4732
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x4DD"
    },
    "1230": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3952,
        4732
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x4D8"
    },
    "1233": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3952,
        4732
      ],
      "op": "CALLDATASIZE",
      "path": "35"
    },
    "1234": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3952,
        4732
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x4"
    },
    "1236": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3952,
        4732
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x191D"
    },
    "1239": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        3952,
        4732
      ],
      "op": "JUMP",
      "path": "35"
    },
    "1240": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3952,
        4732
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "1241": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3952,
        4732
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xF94"
    },
    "1244": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        3952,
        4732
      ],
      "op": "JUMP",
      "path": "35"
    },
    "1245": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3952,
        4732
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "1246": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3952,
        4732
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "1248": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3952,
        4732
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "1249": {
      "op": "SWAP1"
    },
    "1250": {
      "op": "ISZERO"
    },
    "1251": {
      "op": "ISZERO"
    },
    "1252": {
      "op": "DUP2"
    },
    "1253": {
      "op": "MSTORE"
    },
    "1254": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1256": {
      "op": "ADD"
    },
    "1257": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3952,
        4732
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x233"
    },
    "1260": {
      "op": "JUMP"
    },
    "1261": {
      "offset": [
        1093,
        1160
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1262": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x500"
    },
    "1265": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4FB"
    },
    "1268": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "1269": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "1271": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x199B"
    },
    "1274": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        1093,
        1160
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1275": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1276": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1058"
    },
    "1279": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        1093,
        1160
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1280": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1281": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "1283": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "1284": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x233"
    },
    "1287": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "1288": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "1289": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "1290": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1291": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x19C7"
    },
    "1294": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        1093,
        1160
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1295": {
      "offset": [
        1202,
        1235
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1296": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x522"
    },
    "1299": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x51D"
    },
    "1302": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "1303": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "1305": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x15AD"
    },
    "1308": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        1202,
        1235
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1309": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1310": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1115"
    },
    "1313": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        1202,
        1235
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1314": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1315": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "1317": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "1318": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x233"
    },
    "1321": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "SWAP10",
      "path": "37"
    },
    "1322": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "SWAP9",
      "path": "37"
    },
    "1323": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "SWAP8",
      "path": "37"
    },
    "1324": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "SWAP7",
      "path": "37"
    },
    "1325": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "SWAP6",
      "path": "37"
    },
    "1326": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "SWAP5",
      "path": "37"
    },
    "1327": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "1328": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "1329": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "1330": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1331": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x19F3"
    },
    "1334": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        1202,
        1235
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1335": {
      "offset": [
        460,
        489
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1336": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        460,
        489
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "1338": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        460,
        489
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "1339": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        460,
        489
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x27C"
    },
    "1342": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        460,
        489
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1343": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        460,
        489
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xFF"
    },
    "1345": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        460,
        489
      ],
      "op": "AND",
      "path": "37"
    },
    "1346": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        460,
        489
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1347": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        460,
        489
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1348": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8694,
        9557
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "1349": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8694,
        9557
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x229"
    },
    "1352": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8694,
        9557
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x552"
    },
    "1355": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8694,
        9557
      ],
      "op": "CALLDATASIZE",
      "path": "35"
    },
    "1356": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8694,
        9557
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x4"
    },
    "1358": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8694,
        9557
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1A5B"
    },
    "1361": {
      "fn": "CLHouse.PropTxERC20",
      "jump": "i",
      "offset": [
        8694,
        9557
      ],
      "op": "JUMP",
      "path": "35"
    },
    "1362": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8694,
        9557
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "1363": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8694,
        9557
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1214"
    },
    "1366": {
      "fn": "CLHouse.PropTxERC20",
      "jump": "i",
      "offset": [
        8694,
        9557
      ],
      "op": "JUMP",
      "path": "35"
    },
    "1367": {
      "offset": [
        672,
        696
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1368": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        672,
        696
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "1370": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        672,
        696
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "1371": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        672,
        696
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4DD"
    },
    "1374": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        672,
        696
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1375": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        672,
        696
      ],
      "op": "PUSH6",
      "path": "37",
      "value": "0x10000000000"
    },
    "1382": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        672,
        696
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "1383": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        672,
        696
      ],
      "op": "DIV",
      "path": "37"
    },
    "1384": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        672,
        696
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xFF"
    },
    "1386": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        672,
        696
      ],
      "op": "AND",
      "path": "37"
    },
    "1387": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        672,
        696
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1388": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        672,
        696
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1389": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6395,
        7213
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "1390": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6395,
        7213
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x229"
    },
    "1393": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6395,
        7213
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x57B"
    },
    "1396": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6395,
        7213
      ],
      "op": "CALLDATASIZE",
      "path": "35"
    },
    "1397": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6395,
        7213
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x4"
    },
    "1399": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6395,
        7213
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1AAD"
    },
    "1402": {
      "fn": "CLHouse.PropRemoveMember",
      "jump": "i",
      "offset": [
        6395,
        7213
      ],
      "op": "JUMP",
      "path": "35"
    },
    "1403": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6395,
        7213
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "1404": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6395,
        7213
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x12DB"
    },
    "1407": {
      "fn": "CLHouse.PropRemoveMember",
      "jump": "i",
      "offset": [
        6395,
        7213
      ],
      "op": "JUMP",
      "path": "35"
    },
    "1408": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13379,
        14197
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "1409": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13647,
        13660
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x2"
    },
    "1411": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13647,
        13660
      ],
      "op": "SLOAD",
      "path": "35"
    },
    "1412": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13687,
        13914
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "1414": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13687,
        13914
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "1415": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13567,
        13581
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "1417": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13567,
        13581
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "1418": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13567,
        13581
      ],
      "op": "DUP3",
      "path": "35"
    },
    "1419": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13567,
        13581
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "1420": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13567,
        13581
      ],
      "op": "DUP3",
      "path": "35"
    },
    "1421": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13567,
        13581
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "1422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1426": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1428": {
      "op": "SHL"
    },
    "1429": {
      "op": "SUB"
    },
    "1430": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13647,
        13660
      ],
      "op": "AND",
      "path": "35"
    },
    "1431": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13647,
        13660
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "1432": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13687,
        13914
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x5AB"
    },
    "1435": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13687,
        13914
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "1436": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13796,
        13808
      ],
      "op": "DUP10",
      "path": "35"
    },
    "1437": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13796,
        13808
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "1438": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13827,
        13840
      ],
      "op": "DUP10",
      "path": "35"
    },
    "1439": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13827,
        13840
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "1440": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13859,
        13871
      ],
      "op": "DUP10",
      "path": "35"
    },
    "1441": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13859,
        13871
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "1442": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13890,
        13900
      ],
      "op": "DUP10",
      "path": "35"
    },
    "1443": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13890,
        13900
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "1444": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13687,
        13914
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x24"
    },
    "1446": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13687,
        13914
      ],
      "op": "ADD",
      "path": "35"
    },
    "1447": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13687,
        13914
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1B12"
    },
    "1450": {
      "fn": "CLHouse.PropSellERC20",
      "jump": "i",
      "offset": [
        13687,
        13914
      ],
      "op": "JUMP",
      "path": "35"
    },
    "1451": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13687,
        13914
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "1452": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13687,
        13914
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "1454": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13687,
        13914
      ],
      "op": "DUP1",
      "path": "35"
    },
    "1455": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13687,
        13914
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "1456": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1458": {
      "op": "NOT"
    },
    "1459": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13687,
        13914
      ],
      "op": "DUP2",
      "path": "35"
    },
    "1460": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13687,
        13914
      ],
      "op": "DUP5",
      "path": "35"
    },
    "1461": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13687,
        13914
      ],
      "op": "SUB",
      "path": "35"
    },
    "1462": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13687,
        13914
      ],
      "op": "ADD",
      "path": "35"
    },
    "1463": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13687,
        13914
      ],
      "op": "DUP2",
      "path": "35"
    },
    "1464": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13687,
        13914
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "1465": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13687,
        13914
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "1466": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13687,
        13914
      ],
      "op": "DUP2",
      "path": "35"
    },
    "1467": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13687,
        13914
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "1468": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13687,
        13914
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "1470": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13687,
        13914
      ],
      "op": "DUP3",
      "path": "35"
    },
    "1471": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13687,
        13914
      ],
      "op": "ADD",
      "path": "35"
    },
    "1472": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13687,
        13914
      ],
      "op": "DUP1",
      "path": "35"
    },
    "1473": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13687,
        13914
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "1474": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1476": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1478": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1480": {
      "op": "SHL"
    },
    "1481": {
      "op": "SUB"
    },
    "1482": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13687,
        13914
      ],
      "op": "AND",
      "path": "35"
    },
    "1483": {
      "op": "PUSH4",
      "value": "0x4F17A9B"
    },
    "1488": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1490": {
      "op": "SHL"
    },
    "1491": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13687,
        13914
      ],
      "op": "OR",
      "path": "35"
    },
    "1492": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13687,
        13914
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "1493": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13687,
        13914
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "1494": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13647,
        13924
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "1495": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13647,
        13924
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x5E0"
    },
    "1498": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13647,
        13924
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "1499": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13687,
        13914
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "1500": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13647,
        13924
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1B4A"
    },
    "1503": {
      "fn": "CLHouse.PropSellERC20",
      "jump": "i",
      "offset": [
        13647,
        13924
      ],
      "op": "JUMP",
      "path": "35"
    },
    "1504": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13647,
        13924
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "1505": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13647,
        13924
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "1507": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13647,
        13924
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "1509": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13647,
        13924
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "1510": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13647,
        13924
      ],
      "op": "DUP1",
      "path": "35"
    },
    "1511": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13647,
        13924
      ],
      "op": "DUP4",
      "path": "35"
    },
    "1512": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13647,
        13924
      ],
      "op": "SUB",
      "path": "35"
    },
    "1513": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13647,
        13924
      ],
      "op": "DUP2",
      "path": "35"
    },
    "1514": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13647,
        13924
      ],
      "op": "DUP6",
      "path": "35"
    },
    "1515": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13647,
        13924
      ],
      "op": "GAS",
      "path": "35"
    },
    "1516": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13647,
        13924
      ],
      "op": "DELEGATECALL",
      "path": "35"
    },
    "1517": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13647,
        13924
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "1518": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13647,
        13924
      ],
      "op": "POP",
      "path": "35"
    },
    "1519": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13647,
        13924
      ],
      "op": "POP",
      "path": "35"
    },
    "1520": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13647,
        13924
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "1521": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13647,
        13924
      ],
      "op": "DUP1",
      "path": "35"
    },
    "1522": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13647,
        13924
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "1524": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13647,
        13924
      ],
      "op": "DUP2",
      "path": "35"
    },
    "1525": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13647,
        13924
      ],
      "op": "EQ",
      "path": "35"
    },
    "1526": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13647,
        13924
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x61B"
    },
    "1529": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13647,
        13924
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "1530": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13647,
        13924
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "1532": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13647,
        13924
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "1533": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13647,
        13924
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "1534": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13647,
        13924
      ],
      "op": "POP",
      "path": "35"
    },
    "1535": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13647,
        13924
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x1F"
    },
    "1537": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13647,
        13924
      ],
      "op": "NOT",
      "path": "35"
    },
    "1538": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13647,
        13924
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x3F"
    },
    "1540": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13647,
        13924
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "1541": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13647,
        13924
      ],
      "op": "ADD",
      "path": "35"
    },
    "1542": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13647,
        13924
      ],
      "op": "AND",
      "path": "35"
    },
    "1543": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13647,
        13924
      ],
      "op": "DUP3",
      "path": "35"
    },
    "1544": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13647,
        13924
      ],
      "op": "ADD",
      "path": "35"
    },
    "1545": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13647,
        13924
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "1547": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13647,
        13924
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "1548": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13647,
        13924
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "1549": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13647,
        13924
      ],
      "op": "DUP3",
      "path": "35"
    },
    "1550": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13647,
        13924
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "1551": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13647,
        13924
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "1552": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13647,
        13924
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "1554": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13647,
        13924
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "1556": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13647,
        13924
      ],
      "op": "DUP5",
      "path": "35"
    },
    "1557": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13647,
        13924
      ],
      "op": "ADD",
      "path": "35"
    },
    "1558": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13647,
        13924
      ],
      "op": "RETURNDATACOPY",
      "path": "35"
    },
    "1559": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13647,
        13924
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x620"
    },
    "1562": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13647,
        13924
      ],
      "op": "JUMP",
      "path": "35"
    },
    "1563": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13647,
        13924
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "1564": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13647,
        13924
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x60"
    },
    "1566": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13647,
        13924
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "1567": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13647,
        13924
      ],
      "op": "POP",
      "path": "35"
    },
    "1568": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13647,
        13924
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "1569": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13647,
        13924
      ],
      "op": "POP",
      "path": "35"
    },
    "1570": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13598,
        13924
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "1571": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13598,
        13924
      ],
      "op": "POP",
      "path": "35"
    },
    "1572": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13598,
        13924
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "1573": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13598,
        13924
      ],
      "op": "POP",
      "path": "35"
    },
    "1574": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13975,
        13979
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "1576": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13969,
        13980
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "1577": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14005,
        14021
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "1578": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14057,
        14061
      ],
      "op": "DUP1",
      "path": "35"
    },
    "1579": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14054,
        14055
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "1581": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14049,
        14052
      ],
      "op": "DUP4",
      "path": "35"
    },
    "1582": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14034,
        14062
      ],
      "op": "RETURNDATACOPY",
      "path": "35"
    },
    "1583": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14086,
        14099
      ],
      "op": "DUP4",
      "path": "35"
    },
    "1584": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14075,
        14151
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x637"
    },
    "1587": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14075,
        14151
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "1588": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14132,
        14136
      ],
      "op": "DUP1",
      "path": "35"
    },
    "1589": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14127,
        14130
      ],
      "op": "DUP3",
      "path": "35"
    },
    "1590": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14120,
        14137
      ],
      "op": "REVERT",
      "path": "35"
    },
    "1591": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14075,
        14151
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "1592": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14176,
        14180
      ],
      "op": "DUP1",
      "path": "35"
    },
    "1593": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14171,
        14174
      ],
      "op": "DUP3",
      "path": "35"
    },
    "1594": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14164,
        14181
      ],
      "op": "RETURN",
      "path": "35"
    },
    "1595": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12488,
        13373
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "1596": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12785,
        12798
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x2"
    },
    "1598": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12785,
        12798
      ],
      "op": "SLOAD",
      "path": "35"
    },
    "1599": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12825,
        13090
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "1601": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12825,
        13090
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "1602": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12705,
        12719
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "1604": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12705,
        12719
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "1605": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12705,
        12719
      ],
      "op": "DUP3",
      "path": "35"
    },
    "1606": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12705,
        12719
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "1607": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12705,
        12719
      ],
      "op": "DUP3",
      "path": "35"
    },
    "1608": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12705,
        12719
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "1609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1613": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1615": {
      "op": "SHL"
    },
    "1616": {
      "op": "SUB"
    },
    "1617": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12785,
        12798
      ],
      "op": "AND",
      "path": "35"
    },
    "1618": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12785,
        12798
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "1619": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12825,
        13090
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x668"
    },
    "1622": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12825,
        13090
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "1623": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12942,
        12954
      ],
      "op": "DUP11",
      "path": "35"
    },
    "1624": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12942,
        12954
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "1625": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12973,
        12984
      ],
      "op": "DUP11",
      "path": "35"
    },
    "1626": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12973,
        12984
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "1627": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13003,
        13016
      ],
      "op": "DUP11",
      "path": "35"
    },
    "1628": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13003,
        13016
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "1629": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13035,
        13047
      ],
      "op": "DUP11",
      "path": "35"
    },
    "1630": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13035,
        13047
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "1631": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13066,
        13076
      ],
      "op": "DUP11",
      "path": "35"
    },
    "1632": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13066,
        13076
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "1633": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12825,
        13090
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x24"
    },
    "1635": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12825,
        13090
      ],
      "op": "ADD",
      "path": "35"
    },
    "1636": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12825,
        13090
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1B66"
    },
    "1639": {
      "fn": "CLHouse.PropSwapERC20",
      "jump": "i",
      "offset": [
        12825,
        13090
      ],
      "op": "JUMP",
      "path": "35"
    },
    "1640": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12825,
        13090
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "1641": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12825,
        13090
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "1643": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12825,
        13090
      ],
      "op": "DUP1",
      "path": "35"
    },
    "1644": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12825,
        13090
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "1645": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1647": {
      "op": "NOT"
    },
    "1648": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12825,
        13090
      ],
      "op": "DUP2",
      "path": "35"
    },
    "1649": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12825,
        13090
      ],
      "op": "DUP5",
      "path": "35"
    },
    "1650": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12825,
        13090
      ],
      "op": "SUB",
      "path": "35"
    },
    "1651": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12825,
        13090
      ],
      "op": "ADD",
      "path": "35"
    },
    "1652": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12825,
        13090
      ],
      "op": "DUP2",
      "path": "35"
    },
    "1653": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12825,
        13090
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "1654": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12825,
        13090
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "1655": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12825,
        13090
      ],
      "op": "DUP2",
      "path": "35"
    },
    "1656": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12825,
        13090
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "1657": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12825,
        13090
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "1659": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12825,
        13090
      ],
      "op": "DUP3",
      "path": "35"
    },
    "1660": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12825,
        13090
      ],
      "op": "ADD",
      "path": "35"
    },
    "1661": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12825,
        13090
      ],
      "op": "DUP1",
      "path": "35"
    },
    "1662": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12825,
        13090
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "1663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1667": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1669": {
      "op": "SHL"
    },
    "1670": {
      "op": "SUB"
    },
    "1671": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12825,
        13090
      ],
      "op": "AND",
      "path": "35"
    },
    "1672": {
      "op": "PUSH4",
      "value": "0x152DE3B9"
    },
    "1677": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1679": {
      "op": "SHL"
    },
    "1680": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12825,
        13090
      ],
      "op": "OR",
      "path": "35"
    },
    "1681": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12825,
        13090
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "1682": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12825,
        13090
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "1683": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12785,
        13100
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "1684": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12785,
        13100
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x5E0"
    },
    "1687": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12785,
        13100
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "1688": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12825,
        13090
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "1689": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12785,
        13100
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1B4A"
    },
    "1692": {
      "fn": "CLHouse.PropSwapERC20",
      "jump": "i",
      "offset": [
        12785,
        13100
      ],
      "op": "JUMP",
      "path": "35"
    },
    "1693": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14203,
        15017
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "1694": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14469,
        14482
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x2"
    },
    "1696": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14469,
        14482
      ],
      "op": "SLOAD",
      "path": "35"
    },
    "1697": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14509,
        14734
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "1699": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14509,
        14734
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "1700": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14389,
        14403
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "1702": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14389,
        14403
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "1703": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14389,
        14403
      ],
      "op": "DUP3",
      "path": "35"
    },
    "1704": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14389,
        14403
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "1705": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14389,
        14403
      ],
      "op": "DUP3",
      "path": "35"
    },
    "1706": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14389,
        14403
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "1707": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1709": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1711": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1713": {
      "op": "SHL"
    },
    "1714": {
      "op": "SUB"
    },
    "1715": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14469,
        14482
      ],
      "op": "AND",
      "path": "35"
    },
    "1716": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14469,
        14482
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "1717": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14509,
        14734
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x6C8"
    },
    "1720": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14509,
        14734
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "1721": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14617,
        14628
      ],
      "op": "DUP10",
      "path": "35"
    },
    "1722": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14617,
        14628
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "1723": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14647,
        14660
      ],
      "op": "DUP10",
      "path": "35"
    },
    "1724": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14647,
        14660
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "1725": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14679,
        14691
      ],
      "op": "DUP10",
      "path": "35"
    },
    "1726": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14679,
        14691
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "1727": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14710,
        14720
      ],
      "op": "DUP10",
      "path": "35"
    },
    "1728": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14710,
        14720
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "1729": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14509,
        14734
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x24"
    },
    "1731": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14509,
        14734
      ],
      "op": "ADD",
      "path": "35"
    },
    "1732": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14509,
        14734
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1B12"
    },
    "1735": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "i",
      "offset": [
        14509,
        14734
      ],
      "op": "JUMP",
      "path": "35"
    },
    "1736": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14509,
        14734
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "1737": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14509,
        14734
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "1739": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14509,
        14734
      ],
      "op": "DUP1",
      "path": "35"
    },
    "1740": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14509,
        14734
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "1741": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1743": {
      "op": "NOT"
    },
    "1744": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14509,
        14734
      ],
      "op": "DUP2",
      "path": "35"
    },
    "1745": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14509,
        14734
      ],
      "op": "DUP5",
      "path": "35"
    },
    "1746": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14509,
        14734
      ],
      "op": "SUB",
      "path": "35"
    },
    "1747": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14509,
        14734
      ],
      "op": "ADD",
      "path": "35"
    },
    "1748": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14509,
        14734
      ],
      "op": "DUP2",
      "path": "35"
    },
    "1749": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14509,
        14734
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "1750": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14509,
        14734
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "1751": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14509,
        14734
      ],
      "op": "DUP2",
      "path": "35"
    },
    "1752": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14509,
        14734
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "1753": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14509,
        14734
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "1755": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14509,
        14734
      ],
      "op": "DUP3",
      "path": "35"
    },
    "1756": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14509,
        14734
      ],
      "op": "ADD",
      "path": "35"
    },
    "1757": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14509,
        14734
      ],
      "op": "DUP1",
      "path": "35"
    },
    "1758": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14509,
        14734
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "1759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1763": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1765": {
      "op": "SHL"
    },
    "1766": {
      "op": "SUB"
    },
    "1767": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14509,
        14734
      ],
      "op": "AND",
      "path": "35"
    },
    "1768": {
      "op": "PUSH4",
      "value": "0x899B86F"
    },
    "1773": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "1775": {
      "op": "SHL"
    },
    "1776": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14509,
        14734
      ],
      "op": "OR",
      "path": "35"
    },
    "1777": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14509,
        14734
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "1778": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14509,
        14734
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "1779": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14469,
        14744
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "1780": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14469,
        14744
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x5E0"
    },
    "1783": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14469,
        14744
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "1784": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14509,
        14734
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "1785": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14469,
        14744
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1B4A"
    },
    "1788": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "i",
      "offset": [
        14469,
        14744
      ],
      "op": "JUMP",
      "path": "35"
    },
    "1789": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5178,
        6113
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "1790": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5504,
        5517
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x2"
    },
    "1792": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5504,
        5517
      ],
      "op": "SLOAD",
      "path": "35"
    },
    "1793": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5544,
        5827
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "1795": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5544,
        5827
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "1796": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5424,
        5438
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "1798": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5424,
        5438
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "1799": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5424,
        5438
      ],
      "op": "DUP3",
      "path": "35"
    },
    "1800": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5424,
        5438
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "1801": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5424,
        5438
      ],
      "op": "DUP3",
      "path": "35"
    },
    "1802": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5424,
        5438
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "1803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1805": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1807": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1809": {
      "op": "SHL"
    },
    "1810": {
      "op": "SUB"
    },
    "1811": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5504,
        5517
      ],
      "op": "AND",
      "path": "35"
    },
    "1812": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5504,
        5517
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "1813": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5544,
        5827
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x72C"
    },
    "1816": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5544,
        5827
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "1817": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5665,
        5676
      ],
      "op": "DUP12",
      "path": "35"
    },
    "1818": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5665,
        5676
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "1819": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5694,
        5699
      ],
      "op": "DUP12",
      "path": "35"
    },
    "1820": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5694,
        5699
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "1821": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5717,
        5729
      ],
      "op": "DUP12",
      "path": "35"
    },
    "1822": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5717,
        5729
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "1823": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5747,
        5757
      ],
      "op": "DUP12",
      "path": "35"
    },
    "1824": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5747,
        5757
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "1825": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5775,
        5785
      ],
      "op": "DUP12",
      "path": "35"
    },
    "1826": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5775,
        5785
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "1827": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5803,
        5813
      ],
      "op": "DUP12",
      "path": "35"
    },
    "1828": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5803,
        5813
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "1829": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5544,
        5827
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x24"
    },
    "1831": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5544,
        5827
      ],
      "op": "ADD",
      "path": "35"
    },
    "1832": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5544,
        5827
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1BAB"
    },
    "1835": {
      "fn": "CLHouse.PropInviteMember",
      "jump": "i",
      "offset": [
        5544,
        5827
      ],
      "op": "JUMP",
      "path": "35"
    },
    "1836": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5544,
        5827
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "1837": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5544,
        5827
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "1839": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5544,
        5827
      ],
      "op": "DUP1",
      "path": "35"
    },
    "1840": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5544,
        5827
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "1841": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1843": {
      "op": "NOT"
    },
    "1844": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5544,
        5827
      ],
      "op": "DUP2",
      "path": "35"
    },
    "1845": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5544,
        5827
      ],
      "op": "DUP5",
      "path": "35"
    },
    "1846": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5544,
        5827
      ],
      "op": "SUB",
      "path": "35"
    },
    "1847": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5544,
        5827
      ],
      "op": "ADD",
      "path": "35"
    },
    "1848": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5544,
        5827
      ],
      "op": "DUP2",
      "path": "35"
    },
    "1849": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5544,
        5827
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "1850": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5544,
        5827
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "1851": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5544,
        5827
      ],
      "op": "DUP2",
      "path": "35"
    },
    "1852": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5544,
        5827
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "1853": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5544,
        5827
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "1855": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5544,
        5827
      ],
      "op": "DUP3",
      "path": "35"
    },
    "1856": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5544,
        5827
      ],
      "op": "ADD",
      "path": "35"
    },
    "1857": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5544,
        5827
      ],
      "op": "DUP1",
      "path": "35"
    },
    "1858": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5544,
        5827
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "1859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1863": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1865": {
      "op": "SHL"
    },
    "1866": {
      "op": "SUB"
    },
    "1867": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5544,
        5827
      ],
      "op": "AND",
      "path": "35"
    },
    "1868": {
      "op": "PUSH4",
      "value": "0xD2E2EDB"
    },
    "1873": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "1875": {
      "op": "SHL"
    },
    "1876": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5544,
        5827
      ],
      "op": "OR",
      "path": "35"
    },
    "1877": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5544,
        5827
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "1878": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5544,
        5827
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "1879": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5504,
        5837
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "1880": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5504,
        5837
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x761"
    },
    "1883": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5504,
        5837
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "1884": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5544,
        5827
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "1885": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5504,
        5837
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1B4A"
    },
    "1888": {
      "fn": "CLHouse.PropInviteMember",
      "jump": "i",
      "offset": [
        5504,
        5837
      ],
      "op": "JUMP",
      "path": "35"
    },
    "1889": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5504,
        5837
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "1890": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5504,
        5837
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "1892": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5504,
        5837
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "1894": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5504,
        5837
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "1895": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5504,
        5837
      ],
      "op": "DUP1",
      "path": "35"
    },
    "1896": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5504,
        5837
      ],
      "op": "DUP4",
      "path": "35"
    },
    "1897": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5504,
        5837
      ],
      "op": "SUB",
      "path": "35"
    },
    "1898": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5504,
        5837
      ],
      "op": "DUP2",
      "path": "35"
    },
    "1899": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5504,
        5837
      ],
      "op": "DUP6",
      "path": "35"
    },
    "1900": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5504,
        5837
      ],
      "op": "GAS",
      "path": "35"
    },
    "1901": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5504,
        5837
      ],
      "op": "DELEGATECALL",
      "path": "35"
    },
    "1902": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5504,
        5837
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "1903": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5504,
        5837
      ],
      "op": "POP",
      "path": "35"
    },
    "1904": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5504,
        5837
      ],
      "op": "POP",
      "path": "35"
    },
    "1905": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5504,
        5837
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "1906": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5504,
        5837
      ],
      "op": "DUP1",
      "path": "35"
    },
    "1907": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5504,
        5837
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "1909": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5504,
        5837
      ],
      "op": "DUP2",
      "path": "35"
    },
    "1910": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5504,
        5837
      ],
      "op": "EQ",
      "path": "35"
    },
    "1911": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5504,
        5837
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x79C"
    },
    "1914": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5504,
        5837
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "1915": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5504,
        5837
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "1917": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5504,
        5837
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "1918": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5504,
        5837
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "1919": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5504,
        5837
      ],
      "op": "POP",
      "path": "35"
    },
    "1920": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5504,
        5837
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x1F"
    },
    "1922": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5504,
        5837
      ],
      "op": "NOT",
      "path": "35"
    },
    "1923": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5504,
        5837
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x3F"
    },
    "1925": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5504,
        5837
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "1926": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5504,
        5837
      ],
      "op": "ADD",
      "path": "35"
    },
    "1927": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5504,
        5837
      ],
      "op": "AND",
      "path": "35"
    },
    "1928": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5504,
        5837
      ],
      "op": "DUP3",
      "path": "35"
    },
    "1929": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5504,
        5837
      ],
      "op": "ADD",
      "path": "35"
    },
    "1930": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5504,
        5837
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "1932": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5504,
        5837
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "1933": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5504,
        5837
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "1934": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5504,
        5837
      ],
      "op": "DUP3",
      "path": "35"
    },
    "1935": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5504,
        5837
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "1936": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5504,
        5837
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "1937": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5504,
        5837
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "1939": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5504,
        5837
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "1941": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5504,
        5837
      ],
      "op": "DUP5",
      "path": "35"
    },
    "1942": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5504,
        5837
      ],
      "op": "ADD",
      "path": "35"
    },
    "1943": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5504,
        5837
      ],
      "op": "RETURNDATACOPY",
      "path": "35"
    },
    "1944": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5504,
        5837
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x7A1"
    },
    "1947": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5504,
        5837
      ],
      "op": "JUMP",
      "path": "35"
    },
    "1948": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5504,
        5837
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "1949": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5504,
        5837
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x60"
    },
    "1951": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5504,
        5837
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "1952": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5504,
        5837
      ],
      "op": "POP",
      "path": "35"
    },
    "1953": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5504,
        5837
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "1954": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5504,
        5837
      ],
      "op": "POP",
      "path": "35"
    },
    "1955": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5455,
        5837
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "1956": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5455,
        5837
      ],
      "op": "POP",
      "path": "35"
    },
    "1957": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5455,
        5837
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "1958": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5455,
        5837
      ],
      "op": "POP",
      "path": "35"
    },
    "1959": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5888,
        5892
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "1961": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5882,
        5893
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "1962": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5918,
        5934
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "1963": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5970,
        5974
      ],
      "op": "DUP1",
      "path": "35"
    },
    "1964": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5967,
        5968
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "1966": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5962,
        5965
      ],
      "op": "DUP4",
      "path": "35"
    },
    "1967": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5947,
        5975
      ],
      "op": "RETURNDATACOPY",
      "path": "35"
    },
    "1968": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5999,
        6012
      ],
      "op": "DUP4",
      "path": "35"
    },
    "1969": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5988,
        6064
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x7B8"
    },
    "1972": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5988,
        6064
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "1973": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        6045,
        6049
      ],
      "op": "DUP1",
      "path": "35"
    },
    "1974": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        6040,
        6043
      ],
      "op": "DUP3",
      "path": "35"
    },
    "1975": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        6033,
        6050
      ],
      "op": "REVERT",
      "path": "35"
    },
    "1976": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5988,
        6064
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "1977": {
      "op": "POP"
    },
    "1978": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        6087,
        6097
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "1979": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        6087,
        6097
      ],
      "op": "SWAP10",
      "path": "35"
    },
    "1980": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        5178,
        6113
      ],
      "op": "SWAP9",
      "path": "35"
    },
    "1981": {
      "op": "POP"
    },
    "1982": {
      "op": "POP"
    },
    "1983": {
      "op": "POP"
    },
    "1984": {
      "op": "POP"
    },
    "1985": {
      "op": "POP"
    },
    "1986": {
      "op": "POP"
    },
    "1987": {
      "op": "POP"
    },
    "1988": {
      "op": "POP"
    },
    "1989": {
      "op": "POP"
    },
    "1990": {
      "fn": "CLHouse.PropInviteMember",
      "jump": "o",
      "offset": [
        5178,
        6113
      ],
      "op": "JUMP",
      "path": "35"
    },
    "1991": {
      "offset": [
        1343,
        1387
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1992": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        1343,
        1387
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xF"
    },
    "1994": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        1343,
        1387
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1995": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        1343,
        1387
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1996": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        1343,
        1387
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "1997": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        1343,
        1387
      ],
      "op": "DUP2",
      "path": "37"
    },
    "1998": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        1343,
        1387
      ],
      "op": "LT",
      "path": "37"
    },
    "1999": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        1343,
        1387
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x7D7"
    },
    "2002": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        1343,
        1387
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "2003": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        1343,
        1387
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "2005": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        1343,
        1387
      ],
      "op": "DUP1",
      "path": "37"
    },
    "2006": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        1343,
        1387
      ],
      "op": "REVERT",
      "path": "37"
    },
    "2007": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        1343,
        1387
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2008": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        1343,
        1387
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "2010": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        1343,
        1387
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "2011": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        1343,
        1387
      ],
      "op": "DUP3",
      "path": "37"
    },
    "2012": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        1343,
        1387
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "2013": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        1343,
        1387
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "2015": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        1343,
        1387
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "2016": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        1343,
        1387
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "2017": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        1343,
        1387
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "2018": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        1343,
        1387
      ],
      "op": "ADD",
      "path": "37"
    },
    "2019": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        1343,
        1387
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "2020": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        1343,
        1387
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xFF"
    },
    "2022": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        1343,
        1387
      ],
      "op": "AND",
      "path": "37"
    },
    "2023": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        1343,
        1387
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "2024": {
      "op": "POP"
    },
    "2025": {
      "offset": [
        1343,
        1387
      ],
      "op": "DUP2",
      "path": "37"
    },
    "2026": {
      "fn": "CLHouse.PropInviteMember",
      "jump": "o",
      "offset": [
        1343,
        1387
      ],
      "op": "JUMP",
      "path": "37"
    },
    "2027": {
      "offset": [
        320,
        344
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2028": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "2030": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "DUP1",
      "path": "37"
    },
    "2031": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "2032": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x7F8"
    },
    "2035": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "2036": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1C10"
    },
    "2039": {
      "fn": "CLHouse.PropInviteMember",
      "jump": "i",
      "offset": [
        320,
        344
      ],
      "op": "JUMP",
      "path": "37"
    },
    "2040": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2041": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "DUP1",
      "path": "37"
    },
    "2042": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1F"
    },
    "2044": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "ADD",
      "path": "37"
    },
    "2045": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "2047": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "DUP1",
      "path": "37"
    },
    "2048": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "2049": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "DIV",
      "path": "37"
    },
    "2050": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "MUL",
      "path": "37"
    },
    "2051": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "2053": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "ADD",
      "path": "37"
    },
    "2054": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "2056": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "2057": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "2058": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "DUP2",
      "path": "37"
    },
    "2059": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "ADD",
      "path": "37"
    },
    "2060": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "2062": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "2063": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "DUP1",
      "path": "37"
    },
    "2064": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "2065": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "2066": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "2067": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "DUP2",
      "path": "37"
    },
    "2068": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "DUP2",
      "path": "37"
    },
    "2069": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "2070": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "2072": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "ADD",
      "path": "37"
    },
    "2073": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "DUP3",
      "path": "37"
    },
    "2074": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "DUP1",
      "path": "37"
    },
    "2075": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "2076": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x824"
    },
    "2079": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "2080": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1C10"
    },
    "2083": {
      "fn": "CLHouse.PropInviteMember",
      "jump": "i",
      "offset": [
        320,
        344
      ],
      "op": "JUMP",
      "path": "37"
    },
    "2084": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2085": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "DUP1",
      "path": "37"
    },
    "2086": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "2087": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x871"
    },
    "2090": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "2091": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "DUP1",
      "path": "37"
    },
    "2092": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1F"
    },
    "2094": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "LT",
      "path": "37"
    },
    "2095": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x846"
    },
    "2098": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "2099": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x100"
    },
    "2102": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "DUP1",
      "path": "37"
    },
    "2103": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "DUP4",
      "path": "37"
    },
    "2104": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "2105": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "DIV",
      "path": "37"
    },
    "2106": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "MUL",
      "path": "37"
    },
    "2107": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "DUP4",
      "path": "37"
    },
    "2108": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "2109": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "2110": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "2112": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "ADD",
      "path": "37"
    },
    "2113": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "2114": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x871"
    },
    "2117": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "JUMP",
      "path": "37"
    },
    "2118": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2119": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "DUP3",
      "path": "37"
    },
    "2120": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "ADD",
      "path": "37"
    },
    "2121": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "2122": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "2123": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "2125": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "2126": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "2128": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "2130": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "2131": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "2132": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2133": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "DUP2",
      "path": "37"
    },
    "2134": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "2135": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "DUP2",
      "path": "37"
    },
    "2136": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "2137": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "2138": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "2140": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "ADD",
      "path": "37"
    },
    "2141": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "2142": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "2144": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "ADD",
      "path": "37"
    },
    "2145": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "DUP1",
      "path": "37"
    },
    "2146": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "DUP4",
      "path": "37"
    },
    "2147": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "GT",
      "path": "37"
    },
    "2148": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x854"
    },
    "2151": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "2152": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "DUP3",
      "path": "37"
    },
    "2153": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "2154": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "SUB",
      "path": "37"
    },
    "2155": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1F"
    },
    "2157": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "AND",
      "path": "37"
    },
    "2158": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "DUP3",
      "path": "37"
    },
    "2159": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "ADD",
      "path": "37"
    },
    "2160": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "2161": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2162": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "POP",
      "path": "37"
    },
    "2163": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "POP",
      "path": "37"
    },
    "2164": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "POP",
      "path": "37"
    },
    "2165": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "POP",
      "path": "37"
    },
    "2166": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "POP",
      "path": "37"
    },
    "2167": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        320,
        344
      ],
      "op": "DUP2",
      "path": "37"
    },
    "2168": {
      "fn": "CLHouse.PropInviteMember",
      "jump": "o",
      "offset": [
        320,
        344
      ],
      "op": "JUMP",
      "path": "37"
    },
    "2169": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2951,
        3619
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "2170": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3177
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x2"
    },
    "2172": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3177
      ],
      "op": "SLOAD",
      "path": "35"
    },
    "2173": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3204,
        3304
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "2175": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3204,
        3304
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "2176": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3204,
        3304
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x24"
    },
    "2178": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3204,
        3304
      ],
      "op": "DUP2",
      "path": "35"
    },
    "2179": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3204,
        3304
      ],
      "op": "ADD",
      "path": "35"
    },
    "2180": {
      "op": "DUP4"
    },
    "2181": {
      "op": "SWAP1"
    },
    "2182": {
      "op": "MSTORE"
    },
    "2183": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3044,
        3055
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "2185": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3044,
        3055
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "2186": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3069,
        3090
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x60"
    },
    "2188": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3069,
        3090
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "2189": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3044,
        3055
      ],
      "op": "DUP4",
      "path": "35"
    },
    "2190": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3044,
        3055
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "2191": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3044,
        3055
      ],
      "op": "DUP3",
      "path": "35"
    },
    "2192": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3044,
        3055
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "2193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2197": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2199": {
      "op": "SHL"
    },
    "2200": {
      "op": "SUB"
    },
    "2201": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3177
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "2202": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3177
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "2203": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3177
      ],
      "op": "AND",
      "path": "35"
    },
    "2204": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3177
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "2205": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2207": {
      "op": "ADD"
    },
    "2208": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3204,
        3304
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "2210": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3204,
        3304
      ],
      "op": "DUP1",
      "path": "35"
    },
    "2211": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3204,
        3304
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "2212": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2214": {
      "op": "NOT"
    },
    "2215": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3204,
        3304
      ],
      "op": "DUP2",
      "path": "35"
    },
    "2216": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3204,
        3304
      ],
      "op": "DUP5",
      "path": "35"
    },
    "2217": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3204,
        3304
      ],
      "op": "SUB",
      "path": "35"
    },
    "2218": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3204,
        3304
      ],
      "op": "ADD",
      "path": "35"
    },
    "2219": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3204,
        3304
      ],
      "op": "DUP2",
      "path": "35"
    },
    "2220": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3204,
        3304
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "2221": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3204,
        3304
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "2222": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3204,
        3304
      ],
      "op": "DUP2",
      "path": "35"
    },
    "2223": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3204,
        3304
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "2224": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3204,
        3304
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "2226": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3204,
        3304
      ],
      "op": "DUP3",
      "path": "35"
    },
    "2227": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3204,
        3304
      ],
      "op": "ADD",
      "path": "35"
    },
    "2228": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3204,
        3304
      ],
      "op": "DUP1",
      "path": "35"
    },
    "2229": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3204,
        3304
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "2230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2234": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2236": {
      "op": "SHL"
    },
    "2237": {
      "op": "SUB"
    },
    "2238": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3204,
        3304
      ],
      "op": "AND",
      "path": "35"
    },
    "2239": {
      "op": "PUSH4",
      "value": "0x4EEB7B85"
    },
    "2244": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2246": {
      "op": "SHL"
    },
    "2247": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3204,
        3304
      ],
      "op": "OR",
      "path": "35"
    },
    "2248": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3204,
        3304
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "2249": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3204,
        3304
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "2250": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3314
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "2251": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3314
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x8D4"
    },
    "2254": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3314
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "2255": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3204,
        3304
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "2256": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3314
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1B4A"
    },
    "2259": {
      "fn": "CLHouse.ExecProp",
      "jump": "i",
      "offset": [
        3164,
        3314
      ],
      "op": "JUMP",
      "path": "35"
    },
    "2260": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3314
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "2261": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3314
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "2263": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3314
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "2265": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3314
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "2266": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3314
      ],
      "op": "DUP1",
      "path": "35"
    },
    "2267": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3314
      ],
      "op": "DUP4",
      "path": "35"
    },
    "2268": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3314
      ],
      "op": "SUB",
      "path": "35"
    },
    "2269": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3314
      ],
      "op": "DUP2",
      "path": "35"
    },
    "2270": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3314
      ],
      "op": "DUP6",
      "path": "35"
    },
    "2271": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3314
      ],
      "op": "GAS",
      "path": "35"
    },
    "2272": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3314
      ],
      "op": "DELEGATECALL",
      "path": "35"
    },
    "2273": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3314
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "2274": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3314
      ],
      "op": "POP",
      "path": "35"
    },
    "2275": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3314
      ],
      "op": "POP",
      "path": "35"
    },
    "2276": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3314
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "2277": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3314
      ],
      "op": "DUP1",
      "path": "35"
    },
    "2278": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3314
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "2280": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3314
      ],
      "op": "DUP2",
      "path": "35"
    },
    "2281": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3314
      ],
      "op": "EQ",
      "path": "35"
    },
    "2282": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3314
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x90F"
    },
    "2285": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3314
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "2286": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3314
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "2288": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3314
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "2289": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3314
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "2290": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3314
      ],
      "op": "POP",
      "path": "35"
    },
    "2291": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3314
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x1F"
    },
    "2293": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3314
      ],
      "op": "NOT",
      "path": "35"
    },
    "2294": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3314
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x3F"
    },
    "2296": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3314
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "2297": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3314
      ],
      "op": "ADD",
      "path": "35"
    },
    "2298": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3314
      ],
      "op": "AND",
      "path": "35"
    },
    "2299": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3314
      ],
      "op": "DUP3",
      "path": "35"
    },
    "2300": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3314
      ],
      "op": "ADD",
      "path": "35"
    },
    "2301": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3314
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "2303": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3314
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "2304": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3314
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "2305": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3314
      ],
      "op": "DUP3",
      "path": "35"
    },
    "2306": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3314
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "2307": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3314
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "2308": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3314
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "2310": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3314
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "2312": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3314
      ],
      "op": "DUP5",
      "path": "35"
    },
    "2313": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3314
      ],
      "op": "ADD",
      "path": "35"
    },
    "2314": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3314
      ],
      "op": "RETURNDATACOPY",
      "path": "35"
    },
    "2315": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3314
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x914"
    },
    "2318": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3314
      ],
      "op": "JUMP",
      "path": "35"
    },
    "2319": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3314
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "2320": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3314
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x60"
    },
    "2322": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3314
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "2323": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3314
      ],
      "op": "POP",
      "path": "35"
    },
    "2324": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3314
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "2325": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3164,
        3314
      ],
      "op": "POP",
      "path": "35"
    },
    "2326": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3115,
        3314
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "2327": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3115,
        3314
      ],
      "op": "POP",
      "path": "35"
    },
    "2328": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3115,
        3314
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "2329": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3115,
        3314
      ],
      "op": "POP",
      "path": "35"
    },
    "2330": {
      "branch": 8,
      "fn": "CLHouse.ExecProp",
      "offset": [
        3330,
        3343
      ],
      "op": "DUP2",
      "path": "35",
      "statement": 2
    },
    "2331": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3325,
        3557
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x92B"
    },
    "2334": {
      "branch": 8,
      "fn": "CLHouse.ExecProp",
      "offset": [
        3325,
        3557
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "2335": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3404,
        3408
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "2337": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3398,
        3409
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "2338": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3438,
        3454
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "2339": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3494,
        3498
      ],
      "op": "DUP1",
      "path": "35"
    },
    "2340": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3491,
        3492
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "2342": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3486,
        3489
      ],
      "op": "DUP4",
      "path": "35"
    },
    "2343": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3471,
        3499
      ],
      "op": "RETURNDATACOPY",
      "path": "35"
    },
    "2344": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3528,
        3532
      ],
      "op": "DUP1",
      "path": "35"
    },
    "2345": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3523,
        3526
      ],
      "op": "DUP3",
      "path": "35"
    },
    "2346": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3516,
        3533
      ],
      "op": "REVERT",
      "path": "35"
    },
    "2347": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3325,
        3557
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "2348": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3576,
        3580
      ],
      "op": "PUSH1",
      "path": "35",
      "statement": 3,
      "value": "0x1"
    },
    "2350": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3567,
        3612
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "2352": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3567,
        3612
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "2353": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3567,
        3612
      ],
      "op": "DUP1",
      "path": "35"
    },
    "2354": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3567,
        3612
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "2356": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3567,
        3612
      ],
      "op": "ADD",
      "path": "35"
    },
    "2357": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3567,
        3612
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "2359": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3567,
        3612
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "2360": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3567,
        3612
      ],
      "op": "DUP1",
      "path": "35"
    },
    "2361": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3567,
        3612
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x19"
    },
    "2363": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3567,
        3612
      ],
      "op": "DUP2",
      "path": "35"
    },
    "2364": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3567,
        3612
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "2365": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3567,
        3612
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "2367": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3567,
        3612
      ],
      "op": "ADD",
      "path": "35"
    },
    "2368": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3567,
        3612
      ],
      "op": "PUSH32",
      "path": "35",
      "value": "0x537563636573732065786563757465642070726F706F73616C00000000000000"
    },
    "2401": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3567,
        3612
      ],
      "op": "DUP2",
      "path": "35"
    },
    "2402": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3567,
        3612
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "2403": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3567,
        3612
      ],
      "op": "POP",
      "path": "35"
    },
    "2404": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3567,
        3612
      ],
      "op": "SWAP4",
      "path": "35"
    },
    "2405": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3567,
        3612
      ],
      "op": "POP",
      "path": "35"
    },
    "2406": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3567,
        3612
      ],
      "op": "SWAP4",
      "path": "35"
    },
    "2407": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3567,
        3612
      ],
      "op": "POP",
      "path": "35"
    },
    "2408": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3567,
        3612
      ],
      "op": "POP",
      "path": "35"
    },
    "2409": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3567,
        3612
      ],
      "op": "POP",
      "path": "35"
    },
    "2410": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2951,
        3619
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "2411": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2951,
        3619
      ],
      "op": "POP",
      "path": "35"
    },
    "2412": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2951,
        3619
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "2413": {
      "fn": "CLHouse.ExecProp",
      "jump": "o",
      "offset": [
        2951,
        3619
      ],
      "op": "JUMP",
      "path": "35"
    },
    "2414": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9918,
        10675
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "2415": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10160,
        10173
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x2"
    },
    "2417": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10160,
        10173
      ],
      "op": "SLOAD",
      "path": "35"
    },
    "2418": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10200,
        10389
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "2420": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10200,
        10389
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "2421": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10080,
        10094
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "2423": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10080,
        10094
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "2424": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10080,
        10094
      ],
      "op": "DUP3",
      "path": "35"
    },
    "2425": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10080,
        10094
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "2426": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10080,
        10094
      ],
      "op": "DUP3",
      "path": "35"
    },
    "2427": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10080,
        10094
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "2428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2432": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2434": {
      "op": "SHL"
    },
    "2435": {
      "op": "SUB"
    },
    "2436": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10160,
        10173
      ],
      "op": "AND",
      "path": "35"
    },
    "2437": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10160,
        10173
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "2438": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10200,
        10389
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x997"
    },
    "2441": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10200,
        10389
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "2442": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10297,
        10317
      ],
      "op": "DUP9",
      "path": "35"
    },
    "2443": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10297,
        10317
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "2444": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10335,
        10347
      ],
      "op": "DUP9",
      "path": "35"
    },
    "2445": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10335,
        10347
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "2446": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10365,
        10375
      ],
      "op": "DUP9",
      "path": "35"
    },
    "2447": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10365,
        10375
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "2448": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10200,
        10389
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x24"
    },
    "2450": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10200,
        10389
      ],
      "op": "ADD",
      "path": "35"
    },
    "2451": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10200,
        10389
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1C4B"
    },
    "2454": {
      "fn": "CLHouse.PropGovRules",
      "jump": "i",
      "offset": [
        10200,
        10389
      ],
      "op": "JUMP",
      "path": "35"
    },
    "2455": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10200,
        10389
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "2456": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10200,
        10389
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "2458": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10200,
        10389
      ],
      "op": "DUP1",
      "path": "35"
    },
    "2459": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10200,
        10389
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "2460": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2462": {
      "op": "NOT"
    },
    "2463": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10200,
        10389
      ],
      "op": "DUP2",
      "path": "35"
    },
    "2464": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10200,
        10389
      ],
      "op": "DUP5",
      "path": "35"
    },
    "2465": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10200,
        10389
      ],
      "op": "SUB",
      "path": "35"
    },
    "2466": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10200,
        10389
      ],
      "op": "ADD",
      "path": "35"
    },
    "2467": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10200,
        10389
      ],
      "op": "DUP2",
      "path": "35"
    },
    "2468": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10200,
        10389
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "2469": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10200,
        10389
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "2470": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10200,
        10389
      ],
      "op": "DUP2",
      "path": "35"
    },
    "2471": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10200,
        10389
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "2472": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10200,
        10389
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "2474": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10200,
        10389
      ],
      "op": "DUP3",
      "path": "35"
    },
    "2475": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10200,
        10389
      ],
      "op": "ADD",
      "path": "35"
    },
    "2476": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10200,
        10389
      ],
      "op": "DUP1",
      "path": "35"
    },
    "2477": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10200,
        10389
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "2478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2482": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2484": {
      "op": "SHL"
    },
    "2485": {
      "op": "SUB"
    },
    "2486": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10200,
        10389
      ],
      "op": "AND",
      "path": "35"
    },
    "2487": {
      "op": "PUSH4",
      "value": "0x70ACB761"
    },
    "2492": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2494": {
      "op": "SHL"
    },
    "2495": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10200,
        10389
      ],
      "op": "OR",
      "path": "35"
    },
    "2496": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10200,
        10389
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "2497": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10200,
        10389
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "2498": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10160,
        10399
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "2499": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10160,
        10399
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x9CC"
    },
    "2502": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10160,
        10399
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "2503": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10200,
        10389
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "2504": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10160,
        10399
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1B4A"
    },
    "2507": {
      "fn": "CLHouse.PropGovRules",
      "jump": "i",
      "offset": [
        10160,
        10399
      ],
      "op": "JUMP",
      "path": "35"
    },
    "2508": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10160,
        10399
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "2509": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10160,
        10399
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "2511": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10160,
        10399
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "2513": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10160,
        10399
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "2514": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10160,
        10399
      ],
      "op": "DUP1",
      "path": "35"
    },
    "2515": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10160,
        10399
      ],
      "op": "DUP4",
      "path": "35"
    },
    "2516": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10160,
        10399
      ],
      "op": "SUB",
      "path": "35"
    },
    "2517": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10160,
        10399
      ],
      "op": "DUP2",
      "path": "35"
    },
    "2518": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10160,
        10399
      ],
      "op": "DUP6",
      "path": "35"
    },
    "2519": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10160,
        10399
      ],
      "op": "GAS",
      "path": "35"
    },
    "2520": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10160,
        10399
      ],
      "op": "DELEGATECALL",
      "path": "35"
    },
    "2521": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10160,
        10399
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "2522": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10160,
        10399
      ],
      "op": "POP",
      "path": "35"
    },
    "2523": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10160,
        10399
      ],
      "op": "POP",
      "path": "35"
    },
    "2524": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10160,
        10399
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "2525": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10160,
        10399
      ],
      "op": "DUP1",
      "path": "35"
    },
    "2526": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10160,
        10399
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "2528": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10160,
        10399
      ],
      "op": "DUP2",
      "path": "35"
    },
    "2529": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10160,
        10399
      ],
      "op": "EQ",
      "path": "35"
    },
    "2530": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10160,
        10399
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xA07"
    },
    "2533": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10160,
        10399
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "2534": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10160,
        10399
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "2536": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10160,
        10399
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "2537": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10160,
        10399
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "2538": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10160,
        10399
      ],
      "op": "POP",
      "path": "35"
    },
    "2539": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10160,
        10399
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x1F"
    },
    "2541": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10160,
        10399
      ],
      "op": "NOT",
      "path": "35"
    },
    "2542": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10160,
        10399
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x3F"
    },
    "2544": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10160,
        10399
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "2545": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10160,
        10399
      ],
      "op": "ADD",
      "path": "35"
    },
    "2546": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10160,
        10399
      ],
      "op": "AND",
      "path": "35"
    },
    "2547": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10160,
        10399
      ],
      "op": "DUP3",
      "path": "35"
    },
    "2548": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10160,
        10399
      ],
      "op": "ADD",
      "path": "35"
    },
    "2549": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10160,
        10399
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "2551": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10160,
        10399
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "2552": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10160,
        10399
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "2553": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10160,
        10399
      ],
      "op": "DUP3",
      "path": "35"
    },
    "2554": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10160,
        10399
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "2555": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10160,
        10399
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "2556": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10160,
        10399
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "2558": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10160,
        10399
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "2560": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10160,
        10399
      ],
      "op": "DUP5",
      "path": "35"
    },
    "2561": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10160,
        10399
      ],
      "op": "ADD",
      "path": "35"
    },
    "2562": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10160,
        10399
      ],
      "op": "RETURNDATACOPY",
      "path": "35"
    },
    "2563": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10160,
        10399
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xA0C"
    },
    "2566": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10160,
        10399
      ],
      "op": "JUMP",
      "path": "35"
    },
    "2567": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10160,
        10399
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "2568": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10160,
        10399
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x60"
    },
    "2570": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10160,
        10399
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "2571": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10160,
        10399
      ],
      "op": "POP",
      "path": "35"
    },
    "2572": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10160,
        10399
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "2573": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10160,
        10399
      ],
      "op": "POP",
      "path": "35"
    },
    "2574": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10111,
        10399
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "2575": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10111,
        10399
      ],
      "op": "POP",
      "path": "35"
    },
    "2576": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10111,
        10399
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "2577": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10111,
        10399
      ],
      "op": "POP",
      "path": "35"
    },
    "2578": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10450,
        10454
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "2580": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10444,
        10455
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "2581": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10480,
        10496
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "2582": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10532,
        10536
      ],
      "op": "DUP1",
      "path": "35"
    },
    "2583": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10529,
        10530
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "2585": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10524,
        10527
      ],
      "op": "DUP4",
      "path": "35"
    },
    "2586": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10509,
        10537
      ],
      "op": "RETURNDATACOPY",
      "path": "35"
    },
    "2587": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10561,
        10574
      ],
      "op": "DUP4",
      "path": "35"
    },
    "2588": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10550,
        10626
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xA23"
    },
    "2591": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10550,
        10626
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "2592": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10607,
        10611
      ],
      "op": "DUP1",
      "path": "35"
    },
    "2593": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10602,
        10605
      ],
      "op": "DUP3",
      "path": "35"
    },
    "2594": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10595,
        10612
      ],
      "op": "REVERT",
      "path": "35"
    },
    "2595": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10550,
        10626
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "2596": {
      "op": "POP"
    },
    "2597": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10649,
        10659
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "2598": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10649,
        10659
      ],
      "op": "SWAP7",
      "path": "35"
    },
    "2599": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9918,
        10675
      ],
      "op": "SWAP6",
      "path": "35"
    },
    "2600": {
      "op": "POP"
    },
    "2601": {
      "op": "POP"
    },
    "2602": {
      "op": "POP"
    },
    "2603": {
      "op": "POP"
    },
    "2604": {
      "op": "POP"
    },
    "2605": {
      "op": "POP"
    },
    "2606": {
      "fn": "CLHouse.PropGovRules",
      "jump": "o",
      "offset": [
        9918,
        10675
      ],
      "op": "JUMP",
      "path": "35"
    },
    "2607": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7558,
        8349
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "2608": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7813,
        7826
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x2"
    },
    "2610": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7813,
        7826
      ],
      "op": "SLOAD",
      "path": "35"
    },
    "2611": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7853,
        8063
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "2613": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7853,
        8063
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "2614": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7733,
        7747
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "2616": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7733,
        7747
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "2617": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7733,
        7747
      ],
      "op": "DUP3",
      "path": "35"
    },
    "2618": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7733,
        7747
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "2619": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7733,
        7747
      ],
      "op": "DUP3",
      "path": "35"
    },
    "2620": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7733,
        7747
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "2621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2623": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2625": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2627": {
      "op": "SHL"
    },
    "2628": {
      "op": "SUB"
    },
    "2629": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7813,
        7826
      ],
      "op": "AND",
      "path": "35"
    },
    "2630": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7813,
        7826
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "2631": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7853,
        8063
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xA5A"
    },
    "2634": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7853,
        8063
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "2635": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7957,
        7960
      ],
      "op": "DUP10",
      "path": "35"
    },
    "2636": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7957,
        7960
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "2637": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7978,
        7991
      ],
      "op": "DUP10",
      "path": "35"
    },
    "2638": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7978,
        7991
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "2639": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        8009,
        8021
      ],
      "op": "DUP10",
      "path": "35"
    },
    "2640": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        8009,
        8021
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "2641": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        8039,
        8049
      ],
      "op": "DUP10",
      "path": "35"
    },
    "2642": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        8039,
        8049
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "2643": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7853,
        8063
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x24"
    },
    "2645": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7853,
        8063
      ],
      "op": "ADD",
      "path": "35"
    },
    "2646": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7853,
        8063
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1B12"
    },
    "2649": {
      "fn": "CLHouse.PropTxWei",
      "jump": "i",
      "offset": [
        7853,
        8063
      ],
      "op": "JUMP",
      "path": "35"
    },
    "2650": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7853,
        8063
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "2651": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7853,
        8063
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "2653": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7853,
        8063
      ],
      "op": "DUP1",
      "path": "35"
    },
    "2654": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7853,
        8063
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "2655": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2657": {
      "op": "NOT"
    },
    "2658": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7853,
        8063
      ],
      "op": "DUP2",
      "path": "35"
    },
    "2659": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7853,
        8063
      ],
      "op": "DUP5",
      "path": "35"
    },
    "2660": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7853,
        8063
      ],
      "op": "SUB",
      "path": "35"
    },
    "2661": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7853,
        8063
      ],
      "op": "ADD",
      "path": "35"
    },
    "2662": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7853,
        8063
      ],
      "op": "DUP2",
      "path": "35"
    },
    "2663": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7853,
        8063
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "2664": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7853,
        8063
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "2665": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7853,
        8063
      ],
      "op": "DUP2",
      "path": "35"
    },
    "2666": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7853,
        8063
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "2667": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7853,
        8063
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "2669": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7853,
        8063
      ],
      "op": "DUP3",
      "path": "35"
    },
    "2670": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7853,
        8063
      ],
      "op": "ADD",
      "path": "35"
    },
    "2671": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7853,
        8063
      ],
      "op": "DUP1",
      "path": "35"
    },
    "2672": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7853,
        8063
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "2673": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2677": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2679": {
      "op": "SHL"
    },
    "2680": {
      "op": "SUB"
    },
    "2681": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7853,
        8063
      ],
      "op": "AND",
      "path": "35"
    },
    "2682": {
      "op": "PUSH4",
      "value": "0xF8C70A9"
    },
    "2687": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "2689": {
      "op": "SHL"
    },
    "2690": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7853,
        8063
      ],
      "op": "OR",
      "path": "35"
    },
    "2691": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7853,
        8063
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "2692": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7853,
        8063
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "2693": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7813,
        8073
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "2694": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7813,
        8073
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xA8F"
    },
    "2697": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7813,
        8073
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "2698": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7853,
        8063
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "2699": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7813,
        8073
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1B4A"
    },
    "2702": {
      "fn": "CLHouse.PropTxWei",
      "jump": "i",
      "offset": [
        7813,
        8073
      ],
      "op": "JUMP",
      "path": "35"
    },
    "2703": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7813,
        8073
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "2704": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7813,
        8073
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "2706": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7813,
        8073
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "2708": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7813,
        8073
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "2709": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7813,
        8073
      ],
      "op": "DUP1",
      "path": "35"
    },
    "2710": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7813,
        8073
      ],
      "op": "DUP4",
      "path": "35"
    },
    "2711": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7813,
        8073
      ],
      "op": "SUB",
      "path": "35"
    },
    "2712": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7813,
        8073
      ],
      "op": "DUP2",
      "path": "35"
    },
    "2713": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7813,
        8073
      ],
      "op": "DUP6",
      "path": "35"
    },
    "2714": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7813,
        8073
      ],
      "op": "GAS",
      "path": "35"
    },
    "2715": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7813,
        8073
      ],
      "op": "DELEGATECALL",
      "path": "35"
    },
    "2716": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7813,
        8073
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "2717": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7813,
        8073
      ],
      "op": "POP",
      "path": "35"
    },
    "2718": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7813,
        8073
      ],
      "op": "POP",
      "path": "35"
    },
    "2719": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7813,
        8073
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "2720": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7813,
        8073
      ],
      "op": "DUP1",
      "path": "35"
    },
    "2721": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7813,
        8073
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "2723": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7813,
        8073
      ],
      "op": "DUP2",
      "path": "35"
    },
    "2724": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7813,
        8073
      ],
      "op": "EQ",
      "path": "35"
    },
    "2725": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7813,
        8073
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xACA"
    },
    "2728": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7813,
        8073
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "2729": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7813,
        8073
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "2731": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7813,
        8073
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "2732": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7813,
        8073
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "2733": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7813,
        8073
      ],
      "op": "POP",
      "path": "35"
    },
    "2734": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7813,
        8073
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x1F"
    },
    "2736": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7813,
        8073
      ],
      "op": "NOT",
      "path": "35"
    },
    "2737": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7813,
        8073
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x3F"
    },
    "2739": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7813,
        8073
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "2740": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7813,
        8073
      ],
      "op": "ADD",
      "path": "35"
    },
    "2741": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7813,
        8073
      ],
      "op": "AND",
      "path": "35"
    },
    "2742": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7813,
        8073
      ],
      "op": "DUP3",
      "path": "35"
    },
    "2743": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7813,
        8073
      ],
      "op": "ADD",
      "path": "35"
    },
    "2744": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7813,
        8073
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "2746": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7813,
        8073
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "2747": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7813,
        8073
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "2748": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7813,
        8073
      ],
      "op": "DUP3",
      "path": "35"
    },
    "2749": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7813,
        8073
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "2750": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7813,
        8073
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "2751": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7813,
        8073
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "2753": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7813,
        8073
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "2755": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7813,
        8073
      ],
      "op": "DUP5",
      "path": "35"
    },
    "2756": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7813,
        8073
      ],
      "op": "ADD",
      "path": "35"
    },
    "2757": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7813,
        8073
      ],
      "op": "RETURNDATACOPY",
      "path": "35"
    },
    "2758": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7813,
        8073
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xACF"
    },
    "2761": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7813,
        8073
      ],
      "op": "JUMP",
      "path": "35"
    },
    "2762": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7813,
        8073
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "2763": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7813,
        8073
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x60"
    },
    "2765": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7813,
        8073
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "2766": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7813,
        8073
      ],
      "op": "POP",
      "path": "35"
    },
    "2767": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7813,
        8073
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "2768": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7813,
        8073
      ],
      "op": "POP",
      "path": "35"
    },
    "2769": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7764,
        8073
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "2770": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7764,
        8073
      ],
      "op": "POP",
      "path": "35"
    },
    "2771": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7764,
        8073
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "2772": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7764,
        8073
      ],
      "op": "POP",
      "path": "35"
    },
    "2773": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        8124,
        8128
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "2775": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        8118,
        8129
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "2776": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        8154,
        8170
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "2777": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        8206,
        8210
      ],
      "op": "DUP1",
      "path": "35"
    },
    "2778": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        8203,
        8204
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "2780": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        8198,
        8201
      ],
      "op": "DUP4",
      "path": "35"
    },
    "2781": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        8183,
        8211
      ],
      "op": "RETURNDATACOPY",
      "path": "35"
    },
    "2782": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        8235,
        8248
      ],
      "op": "DUP4",
      "path": "35"
    },
    "2783": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        8224,
        8300
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xAE6"
    },
    "2786": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        8224,
        8300
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "2787": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        8281,
        8285
      ],
      "op": "DUP1",
      "path": "35"
    },
    "2788": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        8276,
        8279
      ],
      "op": "DUP3",
      "path": "35"
    },
    "2789": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        8269,
        8286
      ],
      "op": "REVERT",
      "path": "35"
    },
    "2790": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        8224,
        8300
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "2791": {
      "op": "POP"
    },
    "2792": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        8323,
        8333
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "2793": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        8323,
        8333
      ],
      "op": "SWAP8",
      "path": "35"
    },
    "2794": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7558,
        8349
      ],
      "op": "SWAP7",
      "path": "35"
    },
    "2795": {
      "op": "POP"
    },
    "2796": {
      "op": "POP"
    },
    "2797": {
      "op": "POP"
    },
    "2798": {
      "op": "POP"
    },
    "2799": {
      "op": "POP"
    },
    "2800": {
      "op": "POP"
    },
    "2801": {
      "op": "POP"
    },
    "2802": {
      "fn": "CLHouse.PropTxWei",
      "jump": "o",
      "offset": [
        7558,
        8349
      ],
      "op": "JUMP",
      "path": "35"
    },
    "2803": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11852,
        12482
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "2804": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11981,
        11999
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "2806": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12001,
        12025
      ],
      "op": "DUP1",
      "path": "35"
    },
    "2807": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12048
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x1"
    },
    "2809": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12048
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x6"
    },
    "2811": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12048
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "2812": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12048
      ],
      "op": "SLOAD",
      "path": "35"
    },
    "2813": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12048
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "2814": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12048
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x100"
    },
    "2817": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12048
      ],
      "op": "EXP",
      "path": "35"
    },
    "2818": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12048
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "2819": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12048
      ],
      "op": "DIV",
      "path": "35"
    },
    "2820": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2824": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2826": {
      "op": "SHL"
    },
    "2827": {
      "op": "SUB"
    },
    "2828": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12048
      ],
      "op": "AND",
      "path": "35"
    },
    "2829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2831": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2833": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2835": {
      "op": "SHL"
    },
    "2836": {
      "op": "SUB"
    },
    "2837": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12061
      ],
      "op": "AND",
      "path": "35"
    },
    "2838": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12170,
        12181
      ],
      "op": "DUP5",
      "path": "35"
    },
    "2839": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12199,
        12209
      ],
      "op": "DUP5",
      "path": "35"
    },
    "2840": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12075,
        12223
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "2842": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12075,
        12223
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "2843": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12075,
        12223
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x24"
    },
    "2845": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12075,
        12223
      ],
      "op": "ADD",
      "path": "35"
    },
    "2846": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12075,
        12223
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xB28"
    },
    "2849": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12075,
        12223
      ],
      "op": "SWAP3",
      "path": "35"
    },
    "2850": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12075,
        12223
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "2851": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12075,
        12223
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "2852": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12075,
        12223
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1631"
    },
    "2855": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "jump": "i",
      "offset": [
        12075,
        12223
      ],
      "op": "JUMP",
      "path": "35"
    },
    "2856": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12075,
        12223
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "2857": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12075,
        12223
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "2859": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12075,
        12223
      ],
      "op": "DUP1",
      "path": "35"
    },
    "2860": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12075,
        12223
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "2861": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2863": {
      "op": "NOT"
    },
    "2864": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12075,
        12223
      ],
      "op": "DUP2",
      "path": "35"
    },
    "2865": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12075,
        12223
      ],
      "op": "DUP5",
      "path": "35"
    },
    "2866": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12075,
        12223
      ],
      "op": "SUB",
      "path": "35"
    },
    "2867": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12075,
        12223
      ],
      "op": "ADD",
      "path": "35"
    },
    "2868": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12075,
        12223
      ],
      "op": "DUP2",
      "path": "35"
    },
    "2869": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12075,
        12223
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "2870": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12075,
        12223
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "2871": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12075,
        12223
      ],
      "op": "DUP2",
      "path": "35"
    },
    "2872": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12075,
        12223
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "2873": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12075,
        12223
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "2875": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12075,
        12223
      ],
      "op": "DUP3",
      "path": "35"
    },
    "2876": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12075,
        12223
      ],
      "op": "ADD",
      "path": "35"
    },
    "2877": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12075,
        12223
      ],
      "op": "DUP1",
      "path": "35"
    },
    "2878": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12075,
        12223
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "2879": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2883": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2885": {
      "op": "SHL"
    },
    "2886": {
      "op": "SUB"
    },
    "2887": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12075,
        12223
      ],
      "op": "AND",
      "path": "35"
    },
    "2888": {
      "op": "PUSH4",
      "value": "0x1039E45B"
    },
    "2893": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "2895": {
      "op": "SHL"
    },
    "2896": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12075,
        12223
      ],
      "op": "OR",
      "path": "35"
    },
    "2897": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12075,
        12223
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "2898": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12075,
        12223
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "2899": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12233
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "2900": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12233
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xB5D"
    },
    "2903": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12233
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "2904": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12075,
        12223
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "2905": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12233
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1B4A"
    },
    "2908": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "jump": "i",
      "offset": [
        12029,
        12233
      ],
      "op": "JUMP",
      "path": "35"
    },
    "2909": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12233
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "2910": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12233
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "2912": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12233
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "2914": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12233
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "2915": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12233
      ],
      "op": "DUP1",
      "path": "35"
    },
    "2916": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12233
      ],
      "op": "DUP4",
      "path": "35"
    },
    "2917": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12233
      ],
      "op": "SUB",
      "path": "35"
    },
    "2918": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12233
      ],
      "op": "DUP2",
      "path": "35"
    },
    "2919": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12233
      ],
      "op": "DUP6",
      "path": "35"
    },
    "2920": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12233
      ],
      "op": "GAS",
      "path": "35"
    },
    "2921": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12233
      ],
      "op": "DELEGATECALL",
      "path": "35"
    },
    "2922": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12233
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "2923": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12233
      ],
      "op": "POP",
      "path": "35"
    },
    "2924": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12233
      ],
      "op": "POP",
      "path": "35"
    },
    "2925": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12233
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "2926": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12233
      ],
      "op": "DUP1",
      "path": "35"
    },
    "2927": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12233
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "2929": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12233
      ],
      "op": "DUP2",
      "path": "35"
    },
    "2930": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12233
      ],
      "op": "EQ",
      "path": "35"
    },
    "2931": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12233
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xB98"
    },
    "2934": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12233
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "2935": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12233
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "2937": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12233
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "2938": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12233
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "2939": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12233
      ],
      "op": "POP",
      "path": "35"
    },
    "2940": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12233
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x1F"
    },
    "2942": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12233
      ],
      "op": "NOT",
      "path": "35"
    },
    "2943": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12233
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x3F"
    },
    "2945": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12233
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "2946": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12233
      ],
      "op": "ADD",
      "path": "35"
    },
    "2947": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12233
      ],
      "op": "AND",
      "path": "35"
    },
    "2948": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12233
      ],
      "op": "DUP3",
      "path": "35"
    },
    "2949": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12233
      ],
      "op": "ADD",
      "path": "35"
    },
    "2950": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12233
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "2952": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12233
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "2953": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12233
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "2954": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12233
      ],
      "op": "DUP3",
      "path": "35"
    },
    "2955": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12233
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "2956": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12233
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "2957": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12233
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "2959": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12233
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "2961": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12233
      ],
      "op": "DUP5",
      "path": "35"
    },
    "2962": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12233
      ],
      "op": "ADD",
      "path": "35"
    },
    "2963": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12233
      ],
      "op": "RETURNDATACOPY",
      "path": "35"
    },
    "2964": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12233
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xB9D"
    },
    "2967": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12233
      ],
      "op": "JUMP",
      "path": "35"
    },
    "2968": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12233
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "2969": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12233
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x60"
    },
    "2971": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12233
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "2972": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12233
      ],
      "op": "POP",
      "path": "35"
    },
    "2973": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12233
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "2974": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12029,
        12233
      ],
      "op": "POP",
      "path": "35"
    },
    "2975": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11980,
        12233
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "2976": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11980,
        12233
      ],
      "op": "POP",
      "path": "35"
    },
    "2977": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11980,
        12233
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "2978": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11980,
        12233
      ],
      "op": "POP",
      "path": "35"
    },
    "2979": {
      "branch": 9,
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12249,
        12262
      ],
      "op": "DUP2",
      "path": "35",
      "statement": 4
    },
    "2980": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12244,
        12476
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xBB4"
    },
    "2983": {
      "branch": 9,
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12244,
        12476
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "2984": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12323,
        12327
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "2986": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12317,
        12328
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "2987": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12357,
        12373
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "2988": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12413,
        12417
      ],
      "op": "DUP1",
      "path": "35"
    },
    "2989": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12410,
        12411
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "2991": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12405,
        12408
      ],
      "op": "DUP4",
      "path": "35"
    },
    "2992": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12390,
        12418
      ],
      "op": "RETURNDATACOPY",
      "path": "35"
    },
    "2993": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12447,
        12451
      ],
      "op": "DUP1",
      "path": "35"
    },
    "2994": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12442,
        12445
      ],
      "op": "DUP3",
      "path": "35"
    },
    "2995": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12435,
        12452
      ],
      "op": "REVERT",
      "path": "35"
    },
    "2996": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12244,
        12476
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "2997": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11970,
        12482
      ],
      "op": "POP",
      "path": "35"
    },
    "2998": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11970,
        12482
      ],
      "op": "POP",
      "path": "35"
    },
    "2999": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11852,
        12482
      ],
      "op": "POP",
      "path": "35"
    },
    "3000": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11852,
        12482
      ],
      "op": "POP",
      "path": "35"
    },
    "3001": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "jump": "o",
      "offset": [
        11852,
        12482
      ],
      "op": "JUMP",
      "path": "35"
    },
    "3002": {
      "offset": [
        1393,
        1422
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3003": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x10"
    },
    "3005": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3006": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3007": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "3008": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3009": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "LT",
      "path": "37"
    },
    "3010": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xBCA"
    },
    "3013": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "3014": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "3016": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3017": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "REVERT",
      "path": "37"
    },
    "3018": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3019": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "3021": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3022": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "DUP3",
      "path": "37"
    },
    "3023": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3024": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "3026": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3027": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3028": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "3029": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "3031": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3032": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3033": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "MUL",
      "path": "37"
    },
    "3034": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "ADD",
      "path": "37"
    },
    "3035": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3036": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "3037": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "3039": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "DUP3",
      "path": "37"
    },
    "3040": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "ADD",
      "path": "37"
    },
    "3041": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3042": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "3043": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3047": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3049": {
      "op": "SHL"
    },
    "3050": {
      "op": "SUB"
    },
    "3051": {
      "offset": [
        1393,
        1422
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3052": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "3053": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "AND",
      "path": "37"
    },
    "3054": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "3055": {
      "op": "POP"
    },
    "3056": {
      "offset": [
        1393,
        1422
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3057": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xBF9"
    },
    "3060": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3061": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1C10"
    },
    "3064": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "jump": "i",
      "offset": [
        1393,
        1422
      ],
      "op": "JUMP",
      "path": "37"
    },
    "3065": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3066": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3067": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1F"
    },
    "3069": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "ADD",
      "path": "37"
    },
    "3070": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "3072": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3073": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3074": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "DIV",
      "path": "37"
    },
    "3075": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "MUL",
      "path": "37"
    },
    "3076": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "3078": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "ADD",
      "path": "37"
    },
    "3079": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "3081": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "3082": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3083": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3084": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "ADD",
      "path": "37"
    },
    "3085": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "3087": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3088": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3089": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "3090": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3091": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3092": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3093": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3094": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3095": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "3097": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "ADD",
      "path": "37"
    },
    "3098": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "DUP3",
      "path": "37"
    },
    "3099": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3100": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "3101": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xC25"
    },
    "3104": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3105": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1C10"
    },
    "3108": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "jump": "i",
      "offset": [
        1393,
        1422
      ],
      "op": "JUMP",
      "path": "37"
    },
    "3109": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3110": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3111": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "3112": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xC72"
    },
    "3115": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "3116": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3117": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1F"
    },
    "3119": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "LT",
      "path": "37"
    },
    "3120": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xC47"
    },
    "3123": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "3124": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x100"
    },
    "3127": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3128": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "DUP4",
      "path": "37"
    },
    "3129": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "3130": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "DIV",
      "path": "37"
    },
    "3131": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "MUL",
      "path": "37"
    },
    "3132": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "DUP4",
      "path": "37"
    },
    "3133": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3134": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3135": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "3137": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "ADD",
      "path": "37"
    },
    "3138": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3139": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xC72"
    },
    "3142": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "JUMP",
      "path": "37"
    },
    "3143": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3144": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "DUP3",
      "path": "37"
    },
    "3145": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "ADD",
      "path": "37"
    },
    "3146": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3147": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3148": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "3150": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3151": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "3153": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "3155": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "3156": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3157": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3158": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3159": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "3160": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3161": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3162": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3163": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "3165": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "ADD",
      "path": "37"
    },
    "3166": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3167": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "3169": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "ADD",
      "path": "37"
    },
    "3170": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3171": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "DUP4",
      "path": "37"
    },
    "3172": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "GT",
      "path": "37"
    },
    "3173": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xC55"
    },
    "3176": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "3177": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "DUP3",
      "path": "37"
    },
    "3178": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3179": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "SUB",
      "path": "37"
    },
    "3180": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1F"
    },
    "3182": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "AND",
      "path": "37"
    },
    "3183": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "DUP3",
      "path": "37"
    },
    "3184": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "ADD",
      "path": "37"
    },
    "3185": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3186": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3187": {
      "op": "POP"
    },
    "3188": {
      "op": "POP"
    },
    "3189": {
      "op": "POP"
    },
    "3190": {
      "op": "POP"
    },
    "3191": {
      "offset": [
        1393,
        1422
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x2"
    },
    "3193": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "DUP4",
      "path": "37"
    },
    "3194": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "ADD",
      "path": "37"
    },
    "3195": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "3196": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "3198": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3199": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "3200": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "ADD",
      "path": "37"
    },
    "3201": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "3202": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3203": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "3204": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3205": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xFF"
    },
    "3207": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3208": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "DUP3",
      "path": "37"
    },
    "3209": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "AND",
      "path": "37"
    },
    "3210": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "3211": {
      "op": "POP"
    },
    "3212": {
      "offset": [
        1393,
        1422
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x100"
    },
    "3215": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3216": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3217": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "DIV",
      "path": "37"
    },
    "3218": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "AND",
      "path": "37"
    },
    "3219": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1393,
        1422
      ],
      "op": "DUP6",
      "path": "37"
    },
    "3220": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "jump": "o",
      "offset": [
        1393,
        1422
      ],
      "op": "JUMP",
      "path": "37"
    },
    "3221": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10975,
        11714
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "3222": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11213,
        11226
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x2"
    },
    "3224": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11213,
        11226
      ],
      "op": "SLOAD",
      "path": "35"
    },
    "3225": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11253,
        11431
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "3227": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11253,
        11431
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "3228": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11140,
        11147
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "3230": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11140,
        11147
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "3231": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11140,
        11147
      ],
      "op": "DUP3",
      "path": "35"
    },
    "3232": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11140,
        11147
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "3233": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11140,
        11147
      ],
      "op": "DUP3",
      "path": "35"
    },
    "3234": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11140,
        11147
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "3235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3239": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3241": {
      "op": "SHL"
    },
    "3242": {
      "op": "SUB"
    },
    "3243": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11213,
        11226
      ],
      "op": "AND",
      "path": "35"
    },
    "3244": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11213,
        11226
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "3245": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11253,
        11431
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xCBE"
    },
    "3248": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11253,
        11431
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "3249": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11354,
        11359
      ],
      "op": "DUP9",
      "path": "35"
    },
    "3250": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11354,
        11359
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "3251": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11377,
        11389
      ],
      "op": "DUP9",
      "path": "35"
    },
    "3252": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11377,
        11389
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "3253": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11407,
        11417
      ],
      "op": "DUP9",
      "path": "35"
    },
    "3254": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11407,
        11417
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "3255": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11253,
        11431
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x24"
    },
    "3257": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11253,
        11431
      ],
      "op": "ADD",
      "path": "35"
    },
    "3258": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11253,
        11431
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1C77"
    },
    "3261": {
      "fn": "CLHouse.PropRequestToJoin",
      "jump": "i",
      "offset": [
        11253,
        11431
      ],
      "op": "JUMP",
      "path": "35"
    },
    "3262": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11253,
        11431
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "3263": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11253,
        11431
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "3265": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11253,
        11431
      ],
      "op": "DUP1",
      "path": "35"
    },
    "3266": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11253,
        11431
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "3267": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3269": {
      "op": "NOT"
    },
    "3270": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11253,
        11431
      ],
      "op": "DUP2",
      "path": "35"
    },
    "3271": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11253,
        11431
      ],
      "op": "DUP5",
      "path": "35"
    },
    "3272": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11253,
        11431
      ],
      "op": "SUB",
      "path": "35"
    },
    "3273": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11253,
        11431
      ],
      "op": "ADD",
      "path": "35"
    },
    "3274": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11253,
        11431
      ],
      "op": "DUP2",
      "path": "35"
    },
    "3275": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11253,
        11431
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "3276": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11253,
        11431
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "3277": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11253,
        11431
      ],
      "op": "DUP2",
      "path": "35"
    },
    "3278": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11253,
        11431
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "3279": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11253,
        11431
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "3281": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11253,
        11431
      ],
      "op": "DUP3",
      "path": "35"
    },
    "3282": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11253,
        11431
      ],
      "op": "ADD",
      "path": "35"
    },
    "3283": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11253,
        11431
      ],
      "op": "DUP1",
      "path": "35"
    },
    "3284": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11253,
        11431
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "3285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3287": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3289": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3291": {
      "op": "SHL"
    },
    "3292": {
      "op": "SUB"
    },
    "3293": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11253,
        11431
      ],
      "op": "AND",
      "path": "35"
    },
    "3294": {
      "op": "PUSH4",
      "value": "0xA19A5F5"
    },
    "3299": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "3301": {
      "op": "SHL"
    },
    "3302": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11253,
        11431
      ],
      "op": "OR",
      "path": "35"
    },
    "3303": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11253,
        11431
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "3304": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11253,
        11431
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "3305": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11213,
        11441
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "3306": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11213,
        11441
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x5E0"
    },
    "3309": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11213,
        11441
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "3310": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11253,
        11431
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "3311": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11213,
        11441
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1B4A"
    },
    "3314": {
      "fn": "CLHouse.PropRequestToJoin",
      "jump": "i",
      "offset": [
        11213,
        11441
      ],
      "op": "JUMP",
      "path": "35"
    },
    "3315": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15347,
        15504
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "3316": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15433,
        15453
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x60"
    },
    "3318": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15485,
        15497
      ],
      "op": "PUSH1",
      "path": "35",
      "statement": 5,
      "value": "0xC"
    },
    "3320": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DUP1",
      "path": "35"
    },
    "3321": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "SLOAD",
      "path": "35"
    },
    "3322": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DUP1",
      "path": "35"
    },
    "3323": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "3325": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "MUL",
      "path": "35"
    },
    "3326": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "3328": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "ADD",
      "path": "35"
    },
    "3329": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "3331": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "3332": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "3333": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DUP2",
      "path": "35"
    },
    "3334": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "ADD",
      "path": "35"
    },
    "3335": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "3337": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "3338": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DUP1",
      "path": "35"
    },
    "3339": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "SWAP3",
      "path": "35"
    },
    "3340": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "3341": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "3342": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DUP2",
      "path": "35"
    },
    "3343": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DUP2",
      "path": "35"
    },
    "3344": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "3345": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "3347": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "ADD",
      "path": "35"
    },
    "3348": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "3350": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "3351": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "3352": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DUP3",
      "path": "35"
    },
    "3353": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DUP3",
      "path": "35"
    },
    "3354": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "LT",
      "path": "35"
    },
    "3355": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "ISZERO",
      "path": "35"
    },
    "3356": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xE78"
    },
    "3359": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "3360": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "3362": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DUP5",
      "path": "35"
    },
    "3363": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DUP2",
      "path": "35"
    },
    "3364": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "3365": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "3367": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "3368": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DUP2",
      "path": "35"
    },
    "3369": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "3370": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "KECCAK256",
      "path": "35"
    },
    "3371": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "3373": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DUP1",
      "path": "35"
    },
    "3374": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "3375": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x120"
    },
    "3378": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DUP2",
      "path": "35"
    },
    "3379": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "ADD",
      "path": "35"
    },
    "3380": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "3381": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "3382": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "3383": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x5"
    },
    "3385": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DUP6",
      "path": "35"
    },
    "3386": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "MUL",
      "path": "35"
    },
    "3387": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "3388": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "3389": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "ADD",
      "path": "35"
    },
    "3390": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DUP1",
      "path": "35"
    },
    "3391": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "SLOAD",
      "path": "35"
    },
    "3392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3396": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3398": {
      "op": "SHL"
    },
    "3399": {
      "op": "SUB"
    },
    "3400": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DUP2",
      "path": "35"
    },
    "3401": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "AND",
      "path": "35"
    },
    "3402": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DUP4",
      "path": "35"
    },
    "3403": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "3404": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "3405": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "SWAP3",
      "path": "35"
    },
    "3406": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "3407": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "3408": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "3409": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DUP4",
      "path": "35"
    },
    "3410": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "ADD",
      "path": "35"
    },
    "3411": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "3412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3414": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3416": {
      "op": "SHL"
    },
    "3417": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "3418": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DIV",
      "path": "35"
    },
    "3419": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0xFF"
    },
    "3421": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "AND",
      "path": "35"
    },
    "3422": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x8"
    },
    "3424": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DUP2",
      "path": "35"
    },
    "3425": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "GT",
      "path": "35"
    },
    "3426": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "ISZERO",
      "path": "35"
    },
    "3427": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xD6E"
    },
    "3430": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "3431": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xD6E"
    },
    "3434": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x17CC"
    },
    "3437": {
      "fn": "CLHouse.GetProposalList",
      "jump": "i",
      "offset": [
        15478,
        15497
      ],
      "op": "JUMP",
      "path": "35"
    },
    "3438": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "3439": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x8"
    },
    "3441": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DUP2",
      "path": "35"
    },
    "3442": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "GT",
      "path": "35"
    },
    "3443": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "ISZERO",
      "path": "35"
    },
    "3444": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xD7F"
    },
    "3447": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "3448": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xD7F"
    },
    "3451": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x17CC"
    },
    "3454": {
      "fn": "CLHouse.GetProposalList",
      "jump": "i",
      "offset": [
        15478,
        15497
      ],
      "op": "JUMP",
      "path": "35"
    },
    "3455": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "3456": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DUP2",
      "path": "35"
    },
    "3457": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "3458": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "3460": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "ADD",
      "path": "35"
    },
    "3461": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x1"
    },
    "3463": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DUP3",
      "path": "35"
    },
    "3464": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "ADD",
      "path": "35"
    },
    "3465": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DUP1",
      "path": "35"
    },
    "3466": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "SLOAD",
      "path": "35"
    },
    "3467": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xD93"
    },
    "3470": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "3471": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1C10"
    },
    "3474": {
      "fn": "CLHouse.GetProposalList",
      "jump": "i",
      "offset": [
        15478,
        15497
      ],
      "op": "JUMP",
      "path": "35"
    },
    "3475": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "3476": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DUP1",
      "path": "35"
    },
    "3477": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x1F"
    },
    "3479": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "ADD",
      "path": "35"
    },
    "3480": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "3482": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DUP1",
      "path": "35"
    },
    "3483": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "3484": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DIV",
      "path": "35"
    },
    "3485": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "MUL",
      "path": "35"
    },
    "3486": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "3488": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "ADD",
      "path": "35"
    },
    "3489": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "3491": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "3492": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "3493": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DUP2",
      "path": "35"
    },
    "3494": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "ADD",
      "path": "35"
    },
    "3495": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "3497": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "3498": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DUP1",
      "path": "35"
    },
    "3499": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "SWAP3",
      "path": "35"
    },
    "3500": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "3501": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "3502": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DUP2",
      "path": "35"
    },
    "3503": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DUP2",
      "path": "35"
    },
    "3504": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "3505": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "3507": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "ADD",
      "path": "35"
    },
    "3508": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DUP3",
      "path": "35"
    },
    "3509": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DUP1",
      "path": "35"
    },
    "3510": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "SLOAD",
      "path": "35"
    },
    "3511": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xDBF"
    },
    "3514": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "3515": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1C10"
    },
    "3518": {
      "fn": "CLHouse.GetProposalList",
      "jump": "i",
      "offset": [
        15478,
        15497
      ],
      "op": "JUMP",
      "path": "35"
    },
    "3519": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "3520": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DUP1",
      "path": "35"
    },
    "3521": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "ISZERO",
      "path": "35"
    },
    "3522": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xE0C"
    },
    "3525": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "3526": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DUP1",
      "path": "35"
    },
    "3527": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x1F"
    },
    "3529": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "LT",
      "path": "35"
    },
    "3530": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xDE1"
    },
    "3533": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "3534": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x100"
    },
    "3537": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DUP1",
      "path": "35"
    },
    "3538": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DUP4",
      "path": "35"
    },
    "3539": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "SLOAD",
      "path": "35"
    },
    "3540": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DIV",
      "path": "35"
    },
    "3541": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "MUL",
      "path": "35"
    },
    "3542": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DUP4",
      "path": "35"
    },
    "3543": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "3544": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "3545": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "3547": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "ADD",
      "path": "35"
    },
    "3548": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "3549": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xE0C"
    },
    "3552": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "JUMP",
      "path": "35"
    },
    "3553": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "3554": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DUP3",
      "path": "35"
    },
    "3555": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "ADD",
      "path": "35"
    },
    "3556": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "3557": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "3558": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "3560": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "3561": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "3563": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "3565": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "KECCAK256",
      "path": "35"
    },
    "3566": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "3567": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "3568": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DUP2",
      "path": "35"
    },
    "3569": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "SLOAD",
      "path": "35"
    },
    "3570": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DUP2",
      "path": "35"
    },
    "3571": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "3572": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "3573": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x1"
    },
    "3575": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "ADD",
      "path": "35"
    },
    "3576": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "3577": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "3579": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "ADD",
      "path": "35"
    },
    "3580": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DUP1",
      "path": "35"
    },
    "3581": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DUP4",
      "path": "35"
    },
    "3582": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "GT",
      "path": "35"
    },
    "3583": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xDEF"
    },
    "3586": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "3587": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DUP3",
      "path": "35"
    },
    "3588": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "3589": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "SUB",
      "path": "35"
    },
    "3590": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x1F"
    },
    "3592": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "AND",
      "path": "35"
    },
    "3593": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DUP3",
      "path": "35"
    },
    "3594": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "ADD",
      "path": "35"
    },
    "3595": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "3596": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "3597": {
      "op": "POP"
    },
    "3598": {
      "op": "POP"
    },
    "3599": {
      "op": "POP"
    },
    "3600": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "3601": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DUP4",
      "path": "35"
    },
    "3602": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "3603": {
      "op": "POP"
    },
    "3604": {
      "op": "POP"
    },
    "3605": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x2"
    },
    "3607": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DUP3",
      "path": "35"
    },
    "3608": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "ADD",
      "path": "35"
    },
    "3609": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "SLOAD",
      "path": "35"
    },
    "3610": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "3612": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DUP1",
      "path": "35"
    },
    "3613": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DUP4",
      "path": "35"
    },
    "3614": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "ADD",
      "path": "35"
    },
    "3615": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "3616": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "3617": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "3618": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "3619": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x3"
    },
    "3621": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DUP4",
      "path": "35"
    },
    "3622": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "ADD",
      "path": "35"
    },
    "3623": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "SLOAD",
      "path": "35"
    },
    "3624": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0xFF"
    },
    "3626": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DUP1",
      "path": "35"
    },
    "3627": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DUP3",
      "path": "35"
    },
    "3628": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "AND",
      "path": "35"
    },
    "3629": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "3631": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DUP6",
      "path": "35"
    },
    "3632": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "ADD",
      "path": "35"
    },
    "3633": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "3634": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x100"
    },
    "3637": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DUP3",
      "path": "35"
    },
    "3638": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DIV",
      "path": "35"
    },
    "3639": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DUP2",
      "path": "35"
    },
    "3640": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "AND",
      "path": "35"
    },
    "3641": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x60"
    },
    "3643": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DUP6",
      "path": "35"
    },
    "3644": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "ADD",
      "path": "35"
    },
    "3645": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "3646": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH3",
      "path": "35",
      "value": "0x10000"
    },
    "3650": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DUP3",
      "path": "35"
    },
    "3651": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DIV",
      "path": "35"
    },
    "3652": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DUP2",
      "path": "35"
    },
    "3653": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "AND",
      "path": "35"
    },
    "3654": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "ISZERO",
      "path": "35"
    },
    "3655": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "ISZERO",
      "path": "35"
    },
    "3656": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x80"
    },
    "3658": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DUP6",
      "path": "35"
    },
    "3659": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "ADD",
      "path": "35"
    },
    "3660": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "3661": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH4",
      "path": "35",
      "value": "0x1000000"
    },
    "3666": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "3667": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "3668": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DIV",
      "path": "35"
    },
    "3669": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "AND",
      "path": "35"
    },
    "3670": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "ISZERO",
      "path": "35"
    },
    "3671": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "ISZERO",
      "path": "35"
    },
    "3672": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0xA0"
    },
    "3674": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DUP4",
      "path": "35"
    },
    "3675": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "ADD",
      "path": "35"
    },
    "3676": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "3677": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x4"
    },
    "3679": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "3680": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "SWAP3",
      "path": "35"
    },
    "3681": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "ADD",
      "path": "35"
    },
    "3682": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "SLOAD",
      "path": "35"
    },
    "3683": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0xC0"
    },
    "3685": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "3686": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "3687": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "ADD",
      "path": "35"
    },
    "3688": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "3689": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "3690": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "DUP3",
      "path": "35"
    },
    "3691": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "3692": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x1"
    },
    "3694": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "SWAP3",
      "path": "35"
    },
    "3695": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "3696": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "SWAP3",
      "path": "35"
    },
    "3697": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "ADD",
      "path": "35"
    },
    "3698": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "3699": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "ADD",
      "path": "35"
    },
    "3700": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xD17"
    },
    "3703": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "JUMP",
      "path": "35"
    },
    "3704": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "3705": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "POP",
      "path": "35"
    },
    "3706": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "POP",
      "path": "35"
    },
    "3707": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "POP",
      "path": "35"
    },
    "3708": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "POP",
      "path": "35"
    },
    "3709": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "3710": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15478,
        15497
      ],
      "op": "POP",
      "path": "35"
    },
    "3711": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15347,
        15504
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "3712": {
      "fn": "CLHouse.GetProposalList",
      "jump": "o",
      "offset": [
        15347,
        15504
      ],
      "op": "JUMP",
      "path": "35"
    },
    "3713": {
      "offset": [
        1293,
        1337
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3714": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1293,
        1337
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xE"
    },
    "3716": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1293,
        1337
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3717": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1293,
        1337
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3718": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1293,
        1337
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "3719": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1293,
        1337
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3720": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1293,
        1337
      ],
      "op": "LT",
      "path": "37"
    },
    "3721": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1293,
        1337
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xE91"
    },
    "3724": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1293,
        1337
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "3725": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1293,
        1337
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "3727": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1293,
        1337
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3728": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1293,
        1337
      ],
      "op": "REVERT",
      "path": "37"
    },
    "3729": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1293,
        1337
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3730": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1293,
        1337
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "3732": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1293,
        1337
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3733": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1293,
        1337
      ],
      "op": "DUP3",
      "path": "37"
    },
    "3734": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1293,
        1337
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3735": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1293,
        1337
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "3737": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1293,
        1337
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3738": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1293,
        1337
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3739": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1293,
        1337
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "3740": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1293,
        1337
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "3742": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1293,
        1337
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3743": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1293,
        1337
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3744": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1293,
        1337
      ],
      "op": "MUL",
      "path": "37"
    },
    "3745": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1293,
        1337
      ],
      "op": "ADD",
      "path": "37"
    },
    "3746": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1293,
        1337
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3747": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1293,
        1337
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "3748": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1293,
        1337
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "3750": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1293,
        1337
      ],
      "op": "DUP3",
      "path": "37"
    },
    "3751": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1293,
        1337
      ],
      "op": "ADD",
      "path": "37"
    },
    "3752": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1293,
        1337
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "3753": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1293,
        1337
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x2"
    },
    "3755": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1293,
        1337
      ],
      "op": "DUP4",
      "path": "37"
    },
    "3756": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1293,
        1337
      ],
      "op": "ADD",
      "path": "37"
    },
    "3757": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1293,
        1337
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "3758": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1293,
        1337
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "3760": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1293,
        1337
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3761": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1293,
        1337
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "3762": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1293,
        1337
      ],
      "op": "ADD",
      "path": "37"
    },
    "3763": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1293,
        1337
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "3764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3768": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3770": {
      "op": "SHL"
    },
    "3771": {
      "op": "SUB"
    },
    "3772": {
      "offset": [
        1293,
        1337
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "3773": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1293,
        1337
      ],
      "op": "DUP4",
      "path": "37"
    },
    "3774": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1293,
        1337
      ],
      "op": "AND",
      "path": "37"
    },
    "3775": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1293,
        1337
      ],
      "op": "SWAP5",
      "path": "37"
    },
    "3776": {
      "op": "POP"
    },
    "3777": {
      "offset": [
        1293,
        1337
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3778": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1293,
        1337
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "3779": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1293,
        1337
      ],
      "op": "DUP3",
      "path": "37"
    },
    "3780": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1293,
        1337
      ],
      "op": "AND",
      "path": "37"
    },
    "3781": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1293,
        1337
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3782": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1293,
        1337
      ],
      "op": "AND",
      "path": "37"
    },
    "3783": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1293,
        1337
      ],
      "op": "DUP5",
      "path": "37"
    },
    "3784": {
      "fn": "CLHouse.GetProposalList",
      "jump": "o",
      "offset": [
        1293,
        1337
      ],
      "op": "JUMP",
      "path": "37"
    },
    "3785": {
      "offset": [
        1241,
        1287
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3786": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xD"
    },
    "3788": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3789": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3790": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "3791": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3792": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "LT",
      "path": "37"
    },
    "3793": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xED9"
    },
    "3796": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "3797": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "3799": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3800": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "REVERT",
      "path": "37"
    },
    "3801": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3802": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "3804": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3805": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "DUP3",
      "path": "37"
    },
    "3806": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3807": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "3809": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3810": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3811": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "3812": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "3814": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3815": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3816": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "MUL",
      "path": "37"
    },
    "3817": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "ADD",
      "path": "37"
    },
    "3818": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3819": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "3820": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "3822": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "DUP3",
      "path": "37"
    },
    "3823": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "ADD",
      "path": "37"
    },
    "3824": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3825": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "3826": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3830": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3832": {
      "op": "SHL"
    },
    "3833": {
      "op": "SUB"
    },
    "3834": {
      "offset": [
        1241,
        1287
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3835": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "3836": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "AND",
      "path": "37"
    },
    "3837": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "3838": {
      "op": "POP"
    },
    "3839": {
      "offset": [
        1241,
        1287
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3840": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xF08"
    },
    "3843": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3844": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1C10"
    },
    "3847": {
      "fn": "CLHouse.GetProposalList",
      "jump": "i",
      "offset": [
        1241,
        1287
      ],
      "op": "JUMP",
      "path": "37"
    },
    "3848": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3849": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3850": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1F"
    },
    "3852": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "ADD",
      "path": "37"
    },
    "3853": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "3855": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3856": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3857": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "DIV",
      "path": "37"
    },
    "3858": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "MUL",
      "path": "37"
    },
    "3859": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "3861": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "ADD",
      "path": "37"
    },
    "3862": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "3864": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "3865": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3866": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3867": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "ADD",
      "path": "37"
    },
    "3868": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "3870": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3871": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3872": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "3873": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3874": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3875": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3876": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3877": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3878": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "3880": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "ADD",
      "path": "37"
    },
    "3881": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "DUP3",
      "path": "37"
    },
    "3882": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3883": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "3884": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xF34"
    },
    "3887": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3888": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1C10"
    },
    "3891": {
      "fn": "CLHouse.GetProposalList",
      "jump": "i",
      "offset": [
        1241,
        1287
      ],
      "op": "JUMP",
      "path": "37"
    },
    "3892": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3893": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3894": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "3895": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xF81"
    },
    "3898": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "3899": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3900": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1F"
    },
    "3902": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "LT",
      "path": "37"
    },
    "3903": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xF56"
    },
    "3906": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "3907": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x100"
    },
    "3910": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3911": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "DUP4",
      "path": "37"
    },
    "3912": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "3913": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "DIV",
      "path": "37"
    },
    "3914": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "MUL",
      "path": "37"
    },
    "3915": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "DUP4",
      "path": "37"
    },
    "3916": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3917": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3918": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "3920": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "ADD",
      "path": "37"
    },
    "3921": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3922": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xF81"
    },
    "3925": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "JUMP",
      "path": "37"
    },
    "3926": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3927": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "DUP3",
      "path": "37"
    },
    "3928": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "ADD",
      "path": "37"
    },
    "3929": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3930": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3931": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "3933": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3934": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "3936": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "3938": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "3939": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3940": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3941": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3942": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "3943": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3944": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3945": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3946": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "3948": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "ADD",
      "path": "37"
    },
    "3949": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3950": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "3952": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "ADD",
      "path": "37"
    },
    "3953": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "DUP1",
      "path": "37"
    },
    "3954": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "DUP4",
      "path": "37"
    },
    "3955": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "GT",
      "path": "37"
    },
    "3956": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xF64"
    },
    "3959": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "3960": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "DUP3",
      "path": "37"
    },
    "3961": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3962": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "SUB",
      "path": "37"
    },
    "3963": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1F"
    },
    "3965": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "AND",
      "path": "37"
    },
    "3966": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "DUP3",
      "path": "37"
    },
    "3967": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "ADD",
      "path": "37"
    },
    "3968": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3969": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3970": {
      "op": "POP"
    },
    "3971": {
      "op": "POP"
    },
    "3972": {
      "op": "POP"
    },
    "3973": {
      "offset": [
        1241,
        1287
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x2"
    },
    "3975": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "3976": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "3977": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "ADD",
      "path": "37"
    },
    "3978": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "3979": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3980": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "3981": {
      "op": "POP"
    },
    "3982": {
      "op": "POP"
    },
    "3983": {
      "offset": [
        1241,
        1287
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xFF"
    },
    "3985": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "AND",
      "path": "37"
    },
    "3986": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1241,
        1287
      ],
      "op": "DUP4",
      "path": "37"
    },
    "3987": {
      "fn": "CLHouse.GetProposalList",
      "jump": "o",
      "offset": [
        1241,
        1287
      ],
      "op": "JUMP",
      "path": "37"
    },
    "3988": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3952,
        4732
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "3989": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4201,
        4214
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x2"
    },
    "3991": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4201,
        4214
      ],
      "op": "SLOAD",
      "path": "35"
    },
    "3992": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4241,
        4451
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "3994": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4241,
        4451
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "3995": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4131,
        4135
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "3997": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4131,
        4135
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "3998": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4131,
        4135
      ],
      "op": "DUP3",
      "path": "35"
    },
    "3999": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4131,
        4135
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "4000": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4131,
        4135
      ],
      "op": "DUP3",
      "path": "35"
    },
    "4001": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4131,
        4135
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "4002": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4004": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4006": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4008": {
      "op": "SHL"
    },
    "4009": {
      "op": "SUB"
    },
    "4010": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4201,
        4214
      ],
      "op": "AND",
      "path": "35"
    },
    "4011": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4201,
        4214
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "4012": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4241,
        4451
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xFBF"
    },
    "4015": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4241,
        4451
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "4016": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4344,
        4351
      ],
      "op": "DUP10",
      "path": "35"
    },
    "4017": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4344,
        4351
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "4018": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4369,
        4377
      ],
      "op": "DUP10",
      "path": "35"
    },
    "4019": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4369,
        4377
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "4020": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4395,
        4409
      ],
      "op": "DUP10",
      "path": "35"
    },
    "4021": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4395,
        4409
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "4022": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4427,
        4437
      ],
      "op": "DUP10",
      "path": "35"
    },
    "4023": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4427,
        4437
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "4024": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4241,
        4451
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x24"
    },
    "4026": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4241,
        4451
      ],
      "op": "ADD",
      "path": "35"
    },
    "4027": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4241,
        4451
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1CBA"
    },
    "4030": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        4241,
        4451
      ],
      "op": "JUMP",
      "path": "35"
    },
    "4031": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4241,
        4451
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "4032": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4241,
        4451
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "4034": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4241,
        4451
      ],
      "op": "DUP1",
      "path": "35"
    },
    "4035": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4241,
        4451
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "4036": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4038": {
      "op": "NOT"
    },
    "4039": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4241,
        4451
      ],
      "op": "DUP2",
      "path": "35"
    },
    "4040": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4241,
        4451
      ],
      "op": "DUP5",
      "path": "35"
    },
    "4041": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4241,
        4451
      ],
      "op": "SUB",
      "path": "35"
    },
    "4042": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4241,
        4451
      ],
      "op": "ADD",
      "path": "35"
    },
    "4043": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4241,
        4451
      ],
      "op": "DUP2",
      "path": "35"
    },
    "4044": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4241,
        4451
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "4045": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4241,
        4451
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "4046": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4241,
        4451
      ],
      "op": "DUP2",
      "path": "35"
    },
    "4047": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4241,
        4451
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "4048": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4241,
        4451
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "4050": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4241,
        4451
      ],
      "op": "DUP3",
      "path": "35"
    },
    "4051": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4241,
        4451
      ],
      "op": "ADD",
      "path": "35"
    },
    "4052": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4241,
        4451
      ],
      "op": "DUP1",
      "path": "35"
    },
    "4053": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4241,
        4451
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "4054": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4056": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4058": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4060": {
      "op": "SHL"
    },
    "4061": {
      "op": "SUB"
    },
    "4062": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4241,
        4451
      ],
      "op": "AND",
      "path": "35"
    },
    "4063": {
      "op": "PUSH4",
      "value": "0x9E803DFB"
    },
    "4068": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4070": {
      "op": "SHL"
    },
    "4071": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4241,
        4451
      ],
      "op": "OR",
      "path": "35"
    },
    "4072": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4241,
        4451
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "4073": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4241,
        4451
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "4074": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4201,
        4461
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "4075": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4201,
        4461
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xFF4"
    },
    "4078": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4201,
        4461
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "4079": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4241,
        4451
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "4080": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4201,
        4461
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1B4A"
    },
    "4083": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        4201,
        4461
      ],
      "op": "JUMP",
      "path": "35"
    },
    "4084": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4201,
        4461
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "4085": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4201,
        4461
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "4087": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4201,
        4461
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "4089": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4201,
        4461
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "4090": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4201,
        4461
      ],
      "op": "DUP1",
      "path": "35"
    },
    "4091": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4201,
        4461
      ],
      "op": "DUP4",
      "path": "35"
    },
    "4092": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4201,
        4461
      ],
      "op": "SUB",
      "path": "35"
    },
    "4093": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4201,
        4461
      ],
      "op": "DUP2",
      "path": "35"
    },
    "4094": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4201,
        4461
      ],
      "op": "DUP6",
      "path": "35"
    },
    "4095": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4201,
        4461
      ],
      "op": "GAS",
      "path": "35"
    },
    "4096": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4201,
        4461
      ],
      "op": "DELEGATECALL",
      "path": "35"
    },
    "4097": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4201,
        4461
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "4098": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4201,
        4461
      ],
      "op": "POP",
      "path": "35"
    },
    "4099": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4201,
        4461
      ],
      "op": "POP",
      "path": "35"
    },
    "4100": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4201,
        4461
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "4101": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4201,
        4461
      ],
      "op": "DUP1",
      "path": "35"
    },
    "4102": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4201,
        4461
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "4104": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4201,
        4461
      ],
      "op": "DUP2",
      "path": "35"
    },
    "4105": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4201,
        4461
      ],
      "op": "EQ",
      "path": "35"
    },
    "4106": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4201,
        4461
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x102F"
    },
    "4109": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4201,
        4461
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "4110": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4201,
        4461
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "4112": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4201,
        4461
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "4113": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4201,
        4461
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "4114": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4201,
        4461
      ],
      "op": "POP",
      "path": "35"
    },
    "4115": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4201,
        4461
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x1F"
    },
    "4117": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4201,
        4461
      ],
      "op": "NOT",
      "path": "35"
    },
    "4118": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4201,
        4461
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x3F"
    },
    "4120": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4201,
        4461
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "4121": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4201,
        4461
      ],
      "op": "ADD",
      "path": "35"
    },
    "4122": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4201,
        4461
      ],
      "op": "AND",
      "path": "35"
    },
    "4123": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4201,
        4461
      ],
      "op": "DUP3",
      "path": "35"
    },
    "4124": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4201,
        4461
      ],
      "op": "ADD",
      "path": "35"
    },
    "4125": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4201,
        4461
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "4127": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4201,
        4461
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "4128": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4201,
        4461
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "4129": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4201,
        4461
      ],
      "op": "DUP3",
      "path": "35"
    },
    "4130": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4201,
        4461
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "4131": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4201,
        4461
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "4132": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4201,
        4461
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "4134": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4201,
        4461
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "4136": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4201,
        4461
      ],
      "op": "DUP5",
      "path": "35"
    },
    "4137": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4201,
        4461
      ],
      "op": "ADD",
      "path": "35"
    },
    "4138": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4201,
        4461
      ],
      "op": "RETURNDATACOPY",
      "path": "35"
    },
    "4139": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4201,
        4461
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1034"
    },
    "4142": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4201,
        4461
      ],
      "op": "JUMP",
      "path": "35"
    },
    "4143": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4201,
        4461
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "4144": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4201,
        4461
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x60"
    },
    "4146": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4201,
        4461
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "4147": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4201,
        4461
      ],
      "op": "POP",
      "path": "35"
    },
    "4148": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4201,
        4461
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "4149": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4201,
        4461
      ],
      "op": "POP",
      "path": "35"
    },
    "4150": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4152,
        4461
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "4151": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4152,
        4461
      ],
      "op": "POP",
      "path": "35"
    },
    "4152": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4152,
        4461
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "4153": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4152,
        4461
      ],
      "op": "POP",
      "path": "35"
    },
    "4154": {
      "branch": 10,
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4477,
        4490
      ],
      "op": "DUP2",
      "path": "35",
      "statement": 6
    },
    "4155": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4472,
        4704
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x104B"
    },
    "4158": {
      "branch": 10,
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4472,
        4704
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "4159": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4551,
        4555
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "4161": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4545,
        4556
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "4162": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4585,
        4601
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "4163": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4641,
        4645
      ],
      "op": "DUP1",
      "path": "35"
    },
    "4164": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4638,
        4639
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "4166": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4633,
        4636
      ],
      "op": "DUP4",
      "path": "35"
    },
    "4167": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4618,
        4646
      ],
      "op": "RETURNDATACOPY",
      "path": "35"
    },
    "4168": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4675,
        4679
      ],
      "op": "DUP1",
      "path": "35"
    },
    "4169": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4670,
        4673
      ],
      "op": "DUP3",
      "path": "35"
    },
    "4170": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4663,
        4680
      ],
      "op": "REVERT",
      "path": "35"
    },
    "4171": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4472,
        4704
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "4172": {
      "op": "POP"
    },
    "4173": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4721,
        4725
      ],
      "op": "PUSH1",
      "path": "35",
      "statement": 7,
      "value": "0x1"
    },
    "4175": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4721,
        4725
      ],
      "op": "SWAP7",
      "path": "35"
    },
    "4176": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3952,
        4732
      ],
      "op": "SWAP6",
      "path": "35"
    },
    "4177": {
      "op": "POP"
    },
    "4178": {
      "op": "POP"
    },
    "4179": {
      "op": "POP"
    },
    "4180": {
      "op": "POP"
    },
    "4181": {
      "op": "POP"
    },
    "4182": {
      "op": "POP"
    },
    "4183": {
      "fn": "CLHouse.VoteProposal",
      "jump": "o",
      "offset": [
        3952,
        4732
      ],
      "op": "JUMP",
      "path": "35"
    },
    "4184": {
      "offset": [
        1093,
        1160
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "4185": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xB"
    },
    "4187": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "4189": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4190": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "DUP2",
      "path": "37"
    },
    "4191": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4192": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "4194": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "4195": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "DUP4",
      "path": "37"
    },
    "4196": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4197": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "4199": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4200": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "DUP5",
      "path": "37"
    },
    "4201": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "4202": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4203": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "4204": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4205": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4206": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "DUP3",
      "path": "37"
    },
    "4207": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4208": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4209": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "4210": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4211": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "4212": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "4214": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "DUP3",
      "path": "37"
    },
    "4215": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "ADD",
      "path": "37"
    },
    "4216": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4217": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "4218": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xFF"
    },
    "4220": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4221": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "DUP5",
      "path": "37"
    },
    "4222": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "AND",
      "path": "37"
    },
    "4223": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "SWAP5",
      "path": "37"
    },
    "4224": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x100"
    },
    "4227": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4228": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "SWAP5",
      "path": "37"
    },
    "4229": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "DIV",
      "path": "37"
    },
    "4230": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "AND",
      "path": "37"
    },
    "4231": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "4232": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "4233": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4234": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1092"
    },
    "4237": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4238": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1C10"
    },
    "4241": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        1093,
        1160
      ],
      "op": "JUMP",
      "path": "37"
    },
    "4242": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "4243": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4244": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1F"
    },
    "4246": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "ADD",
      "path": "37"
    },
    "4247": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "4249": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4250": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "4251": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "DIV",
      "path": "37"
    },
    "4252": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "MUL",
      "path": "37"
    },
    "4253": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "4255": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "ADD",
      "path": "37"
    },
    "4256": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "4258": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "4259": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4260": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "DUP2",
      "path": "37"
    },
    "4261": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "ADD",
      "path": "37"
    },
    "4262": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "4264": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4265": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4266": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "4267": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "4268": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4269": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "DUP2",
      "path": "37"
    },
    "4270": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "DUP2",
      "path": "37"
    },
    "4271": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4272": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "4274": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "ADD",
      "path": "37"
    },
    "4275": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "DUP3",
      "path": "37"
    },
    "4276": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4277": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "4278": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x10BE"
    },
    "4281": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4282": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1C10"
    },
    "4285": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        1093,
        1160
      ],
      "op": "JUMP",
      "path": "37"
    },
    "4286": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "4287": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4288": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "4289": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x110B"
    },
    "4292": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "4293": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4294": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1F"
    },
    "4296": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "LT",
      "path": "37"
    },
    "4297": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x10E0"
    },
    "4300": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "4301": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x100"
    },
    "4304": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4305": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "DUP4",
      "path": "37"
    },
    "4306": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "4307": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "DIV",
      "path": "37"
    },
    "4308": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "MUL",
      "path": "37"
    },
    "4309": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "DUP4",
      "path": "37"
    },
    "4310": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4311": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "4312": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "4314": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "ADD",
      "path": "37"
    },
    "4315": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "4316": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x110B"
    },
    "4319": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "JUMP",
      "path": "37"
    },
    "4320": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "4321": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "DUP3",
      "path": "37"
    },
    "4322": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "ADD",
      "path": "37"
    },
    "4323": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "4324": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4325": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "4327": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4328": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "4330": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "4332": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "4333": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4334": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "4335": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "DUP2",
      "path": "37"
    },
    "4336": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "4337": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "DUP2",
      "path": "37"
    },
    "4338": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4339": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4340": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "4342": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "ADD",
      "path": "37"
    },
    "4343": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4344": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "4346": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "ADD",
      "path": "37"
    },
    "4347": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4348": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "DUP4",
      "path": "37"
    },
    "4349": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "GT",
      "path": "37"
    },
    "4350": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x10EE"
    },
    "4353": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "4354": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "DUP3",
      "path": "37"
    },
    "4355": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4356": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "SUB",
      "path": "37"
    },
    "4357": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1F"
    },
    "4359": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "AND",
      "path": "37"
    },
    "4360": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "DUP3",
      "path": "37"
    },
    "4361": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "ADD",
      "path": "37"
    },
    "4362": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "4363": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "4364": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "POP",
      "path": "37"
    },
    "4365": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "POP",
      "path": "37"
    },
    "4366": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "POP",
      "path": "37"
    },
    "4367": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "POP",
      "path": "37"
    },
    "4368": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "POP",
      "path": "37"
    },
    "4369": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4370": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "POP",
      "path": "37"
    },
    "4371": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1093,
        1160
      ],
      "op": "DUP4",
      "path": "37"
    },
    "4372": {
      "fn": "CLHouse.VoteProposal",
      "jump": "o",
      "offset": [
        1093,
        1160
      ],
      "op": "JUMP",
      "path": "37"
    },
    "4373": {
      "offset": [
        1202,
        1235
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "4374": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xC"
    },
    "4376": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "DUP2",
      "path": "37"
    },
    "4377": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "DUP2",
      "path": "37"
    },
    "4378": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "4379": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "DUP2",
      "path": "37"
    },
    "4380": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "LT",
      "path": "37"
    },
    "4381": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1125"
    },
    "4384": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "4385": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "4387": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4388": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "REVERT",
      "path": "37"
    },
    "4389": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "4390": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "4392": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "4393": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "DUP3",
      "path": "37"
    },
    "4394": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4395": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "4397": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4398": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "4399": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "4400": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x5"
    },
    "4402": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4403": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "4404": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "MUL",
      "path": "37"
    },
    "4405": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "ADD",
      "path": "37"
    },
    "4406": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4407": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "4408": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "4410": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "DUP3",
      "path": "37"
    },
    "4411": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "ADD",
      "path": "37"
    },
    "4412": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4413": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "4414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4418": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4420": {
      "op": "SHL"
    },
    "4421": {
      "op": "SUB"
    },
    "4422": {
      "offset": [
        1202,
        1235
      ],
      "op": "DUP4",
      "path": "37"
    },
    "4423": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "AND",
      "path": "37"
    },
    "4424": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "SWAP5",
      "path": "37"
    },
    "4425": {
      "op": "POP"
    },
    "4426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4428": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4430": {
      "op": "SHL"
    },
    "4431": {
      "offset": [
        1202,
        1235
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4432": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "4433": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "DIV",
      "path": "37"
    },
    "4434": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xFF"
    },
    "4436": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "AND",
      "path": "37"
    },
    "4437": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "4438": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "4439": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x115F"
    },
    "4442": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4443": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1C10"
    },
    "4446": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        1202,
        1235
      ],
      "op": "JUMP",
      "path": "37"
    },
    "4447": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "4448": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4449": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1F"
    },
    "4451": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "ADD",
      "path": "37"
    },
    "4452": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "4454": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4455": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "4456": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "DIV",
      "path": "37"
    },
    "4457": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "MUL",
      "path": "37"
    },
    "4458": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "4460": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "ADD",
      "path": "37"
    },
    "4461": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "4463": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "4464": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4465": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "DUP2",
      "path": "37"
    },
    "4466": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "ADD",
      "path": "37"
    },
    "4467": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "4469": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4470": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4471": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "4472": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "4473": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4474": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "DUP2",
      "path": "37"
    },
    "4475": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "DUP2",
      "path": "37"
    },
    "4476": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4477": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "4479": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "ADD",
      "path": "37"
    },
    "4480": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "DUP3",
      "path": "37"
    },
    "4481": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4482": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "4483": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x118B"
    },
    "4486": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4487": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1C10"
    },
    "4490": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        1202,
        1235
      ],
      "op": "JUMP",
      "path": "37"
    },
    "4491": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "4492": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4493": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "4494": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x11D8"
    },
    "4497": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "4498": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4499": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1F"
    },
    "4501": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "LT",
      "path": "37"
    },
    "4502": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x11AD"
    },
    "4505": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "4506": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x100"
    },
    "4509": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4510": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "DUP4",
      "path": "37"
    },
    "4511": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "4512": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "DIV",
      "path": "37"
    },
    "4513": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "MUL",
      "path": "37"
    },
    "4514": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "DUP4",
      "path": "37"
    },
    "4515": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4516": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "4517": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "4519": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "ADD",
      "path": "37"
    },
    "4520": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "4521": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x11D8"
    },
    "4524": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "JUMP",
      "path": "37"
    },
    "4525": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "4526": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "DUP3",
      "path": "37"
    },
    "4527": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "ADD",
      "path": "37"
    },
    "4528": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "4529": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4530": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "4532": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4533": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "4535": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "4537": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "4538": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4539": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "4540": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "DUP2",
      "path": "37"
    },
    "4541": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "4542": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "DUP2",
      "path": "37"
    },
    "4543": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4544": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4545": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "4547": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "ADD",
      "path": "37"
    },
    "4548": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4549": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "4551": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "ADD",
      "path": "37"
    },
    "4552": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4553": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "DUP4",
      "path": "37"
    },
    "4554": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "GT",
      "path": "37"
    },
    "4555": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x11BB"
    },
    "4558": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "4559": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "DUP3",
      "path": "37"
    },
    "4560": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4561": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "SUB",
      "path": "37"
    },
    "4562": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1F"
    },
    "4564": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "AND",
      "path": "37"
    },
    "4565": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "DUP3",
      "path": "37"
    },
    "4566": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "ADD",
      "path": "37"
    },
    "4567": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "4568": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "4569": {
      "op": "POP"
    },
    "4570": {
      "op": "POP"
    },
    "4571": {
      "op": "POP"
    },
    "4572": {
      "offset": [
        1202,
        1235
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x2"
    },
    "4574": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "DUP5",
      "path": "37"
    },
    "4575": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "ADD",
      "path": "37"
    },
    "4576": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "4577": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x3"
    },
    "4579": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "DUP6",
      "path": "37"
    },
    "4580": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "ADD",
      "path": "37"
    },
    "4581": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "4582": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "4584": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4585": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "SWAP6",
      "path": "37"
    },
    "4586": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "ADD",
      "path": "37"
    },
    "4587": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "4588": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "4589": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "SWAP5",
      "path": "37"
    },
    "4590": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4591": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "4592": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xFF"
    },
    "4594": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4595": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "DUP4",
      "path": "37"
    },
    "4596": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "AND",
      "path": "37"
    },
    "4597": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "SWAP5",
      "path": "37"
    },
    "4598": {
      "op": "POP"
    },
    "4599": {
      "offset": [
        1202,
        1235
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x100"
    },
    "4602": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "DUP4",
      "path": "37"
    },
    "4603": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "DIV",
      "path": "37"
    },
    "4604": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "DUP2",
      "path": "37"
    },
    "4605": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "AND",
      "path": "37"
    },
    "4606": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "4607": {
      "op": "POP"
    },
    "4608": {
      "offset": [
        1202,
        1235
      ],
      "op": "PUSH3",
      "path": "37",
      "value": "0x10000"
    },
    "4612": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "DUP4",
      "path": "37"
    },
    "4613": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "DIV",
      "path": "37"
    },
    "4614": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "DUP2",
      "path": "37"
    },
    "4615": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "AND",
      "path": "37"
    },
    "4616": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "4617": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x1000000"
    },
    "4622": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4623": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "DIV",
      "path": "37"
    },
    "4624": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "AND",
      "path": "37"
    },
    "4625": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4626": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1202,
        1235
      ],
      "op": "DUP10",
      "path": "37"
    },
    "4627": {
      "fn": "CLHouse.VoteProposal",
      "jump": "o",
      "offset": [
        1202,
        1235
      ],
      "op": "JUMP",
      "path": "37"
    },
    "4628": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8694,
        9557
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "4629": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8981,
        8994
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x2"
    },
    "4631": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8981,
        8994
      ],
      "op": "SLOAD",
      "path": "35"
    },
    "4632": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9021,
        9271
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "4634": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9021,
        9271
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "4635": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8901,
        8915
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "4637": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8901,
        8915
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "4638": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8901,
        8915
      ],
      "op": "DUP3",
      "path": "35"
    },
    "4639": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8901,
        8915
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "4640": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8901,
        8915
      ],
      "op": "DUP3",
      "path": "35"
    },
    "4641": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8901,
        8915
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "4642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4644": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4646": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4648": {
      "op": "SHL"
    },
    "4649": {
      "op": "SUB"
    },
    "4650": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8981,
        8994
      ],
      "op": "AND",
      "path": "35"
    },
    "4651": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8981,
        8994
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "4652": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9021,
        9271
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1241"
    },
    "4655": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9021,
        9271
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "4656": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9135,
        9138
      ],
      "op": "DUP11",
      "path": "35"
    },
    "4657": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9135,
        9138
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "4658": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9156,
        9169
      ],
      "op": "DUP11",
      "path": "35"
    },
    "4659": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9156,
        9169
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "4660": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9187,
        9199
      ],
      "op": "DUP11",
      "path": "35"
    },
    "4661": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9187,
        9199
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "4662": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9217,
        9229
      ],
      "op": "DUP11",
      "path": "35"
    },
    "4663": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9217,
        9229
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "4664": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9247,
        9257
      ],
      "op": "DUP11",
      "path": "35"
    },
    "4665": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9247,
        9257
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "4666": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9021,
        9271
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x24"
    },
    "4668": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9021,
        9271
      ],
      "op": "ADD",
      "path": "35"
    },
    "4669": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9021,
        9271
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1CF8"
    },
    "4672": {
      "fn": "CLHouse.PropTxERC20",
      "jump": "i",
      "offset": [
        9021,
        9271
      ],
      "op": "JUMP",
      "path": "35"
    },
    "4673": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9021,
        9271
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "4674": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9021,
        9271
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "4676": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9021,
        9271
      ],
      "op": "DUP1",
      "path": "35"
    },
    "4677": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9021,
        9271
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "4678": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4680": {
      "op": "NOT"
    },
    "4681": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9021,
        9271
      ],
      "op": "DUP2",
      "path": "35"
    },
    "4682": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9021,
        9271
      ],
      "op": "DUP5",
      "path": "35"
    },
    "4683": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9021,
        9271
      ],
      "op": "SUB",
      "path": "35"
    },
    "4684": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9021,
        9271
      ],
      "op": "ADD",
      "path": "35"
    },
    "4685": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9021,
        9271
      ],
      "op": "DUP2",
      "path": "35"
    },
    "4686": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9021,
        9271
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "4687": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9021,
        9271
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "4688": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9021,
        9271
      ],
      "op": "DUP2",
      "path": "35"
    },
    "4689": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9021,
        9271
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "4690": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9021,
        9271
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "4692": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9021,
        9271
      ],
      "op": "DUP3",
      "path": "35"
    },
    "4693": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9021,
        9271
      ],
      "op": "ADD",
      "path": "35"
    },
    "4694": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9021,
        9271
      ],
      "op": "DUP1",
      "path": "35"
    },
    "4695": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9021,
        9271
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "4696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4700": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4702": {
      "op": "SHL"
    },
    "4703": {
      "op": "SUB"
    },
    "4704": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9021,
        9271
      ],
      "op": "AND",
      "path": "35"
    },
    "4705": {
      "op": "PUSH4",
      "value": "0x6F2D58A7"
    },
    "4710": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4712": {
      "op": "SHL"
    },
    "4713": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9021,
        9271
      ],
      "op": "OR",
      "path": "35"
    },
    "4714": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9021,
        9271
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "4715": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9021,
        9271
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "4716": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8981,
        9281
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "4717": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8981,
        9281
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1276"
    },
    "4720": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8981,
        9281
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "4721": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9021,
        9271
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "4722": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8981,
        9281
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1B4A"
    },
    "4725": {
      "fn": "CLHouse.PropTxERC20",
      "jump": "i",
      "offset": [
        8981,
        9281
      ],
      "op": "JUMP",
      "path": "35"
    },
    "4726": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8981,
        9281
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "4727": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8981,
        9281
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "4729": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8981,
        9281
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "4731": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8981,
        9281
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "4732": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8981,
        9281
      ],
      "op": "DUP1",
      "path": "35"
    },
    "4733": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8981,
        9281
      ],
      "op": "DUP4",
      "path": "35"
    },
    "4734": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8981,
        9281
      ],
      "op": "SUB",
      "path": "35"
    },
    "4735": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8981,
        9281
      ],
      "op": "DUP2",
      "path": "35"
    },
    "4736": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8981,
        9281
      ],
      "op": "DUP6",
      "path": "35"
    },
    "4737": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8981,
        9281
      ],
      "op": "GAS",
      "path": "35"
    },
    "4738": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8981,
        9281
      ],
      "op": "DELEGATECALL",
      "path": "35"
    },
    "4739": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8981,
        9281
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "4740": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8981,
        9281
      ],
      "op": "POP",
      "path": "35"
    },
    "4741": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8981,
        9281
      ],
      "op": "POP",
      "path": "35"
    },
    "4742": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8981,
        9281
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "4743": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8981,
        9281
      ],
      "op": "DUP1",
      "path": "35"
    },
    "4744": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8981,
        9281
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "4746": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8981,
        9281
      ],
      "op": "DUP2",
      "path": "35"
    },
    "4747": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8981,
        9281
      ],
      "op": "EQ",
      "path": "35"
    },
    "4748": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8981,
        9281
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x12B1"
    },
    "4751": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8981,
        9281
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "4752": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8981,
        9281
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "4754": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8981,
        9281
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "4755": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8981,
        9281
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "4756": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8981,
        9281
      ],
      "op": "POP",
      "path": "35"
    },
    "4757": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8981,
        9281
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x1F"
    },
    "4759": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8981,
        9281
      ],
      "op": "NOT",
      "path": "35"
    },
    "4760": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8981,
        9281
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x3F"
    },
    "4762": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8981,
        9281
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "4763": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8981,
        9281
      ],
      "op": "ADD",
      "path": "35"
    },
    "4764": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8981,
        9281
      ],
      "op": "AND",
      "path": "35"
    },
    "4765": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8981,
        9281
      ],
      "op": "DUP3",
      "path": "35"
    },
    "4766": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8981,
        9281
      ],
      "op": "ADD",
      "path": "35"
    },
    "4767": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8981,
        9281
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "4769": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8981,
        9281
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "4770": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8981,
        9281
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "4771": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8981,
        9281
      ],
      "op": "DUP3",
      "path": "35"
    },
    "4772": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8981,
        9281
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "4773": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8981,
        9281
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "4774": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8981,
        9281
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "4776": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8981,
        9281
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "4778": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8981,
        9281
      ],
      "op": "DUP5",
      "path": "35"
    },
    "4779": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8981,
        9281
      ],
      "op": "ADD",
      "path": "35"
    },
    "4780": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8981,
        9281
      ],
      "op": "RETURNDATACOPY",
      "path": "35"
    },
    "4781": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8981,
        9281
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x12B6"
    },
    "4784": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8981,
        9281
      ],
      "op": "JUMP",
      "path": "35"
    },
    "4785": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8981,
        9281
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "4786": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8981,
        9281
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x60"
    },
    "4788": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8981,
        9281
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "4789": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8981,
        9281
      ],
      "op": "POP",
      "path": "35"
    },
    "4790": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8981,
        9281
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "4791": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8981,
        9281
      ],
      "op": "POP",
      "path": "35"
    },
    "4792": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8932,
        9281
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "4793": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8932,
        9281
      ],
      "op": "POP",
      "path": "35"
    },
    "4794": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8932,
        9281
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "4795": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8932,
        9281
      ],
      "op": "POP",
      "path": "35"
    },
    "4796": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9332,
        9336
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "4798": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9326,
        9337
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "4799": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9362,
        9378
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "4800": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9414,
        9418
      ],
      "op": "DUP1",
      "path": "35"
    },
    "4801": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9411,
        9412
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "4803": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9406,
        9409
      ],
      "op": "DUP4",
      "path": "35"
    },
    "4804": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9391,
        9419
      ],
      "op": "RETURNDATACOPY",
      "path": "35"
    },
    "4805": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9443,
        9456
      ],
      "op": "DUP4",
      "path": "35"
    },
    "4806": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9432,
        9508
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x12CD"
    },
    "4809": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9432,
        9508
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "4810": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9489,
        9493
      ],
      "op": "DUP1",
      "path": "35"
    },
    "4811": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9484,
        9487
      ],
      "op": "DUP3",
      "path": "35"
    },
    "4812": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9477,
        9494
      ],
      "op": "REVERT",
      "path": "35"
    },
    "4813": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9432,
        9508
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "4814": {
      "op": "POP"
    },
    "4815": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9531,
        9541
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "4816": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9531,
        9541
      ],
      "op": "SWAP9",
      "path": "35"
    },
    "4817": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8694,
        9557
      ],
      "op": "SWAP8",
      "path": "35"
    },
    "4818": {
      "op": "POP"
    },
    "4819": {
      "op": "POP"
    },
    "4820": {
      "op": "POP"
    },
    "4821": {
      "op": "POP"
    },
    "4822": {
      "op": "POP"
    },
    "4823": {
      "op": "POP"
    },
    "4824": {
      "op": "POP"
    },
    "4825": {
      "op": "POP"
    },
    "4826": {
      "fn": "CLHouse.PropTxERC20",
      "jump": "o",
      "offset": [
        8694,
        9557
      ],
      "op": "JUMP",
      "path": "35"
    },
    "4827": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6395,
        7213
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "4828": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6667,
        6680
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x2"
    },
    "4830": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6667,
        6680
      ],
      "op": "SLOAD",
      "path": "35"
    },
    "4831": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6707,
        6927
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "4833": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6707,
        6927
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "4834": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6587,
        6601
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "4836": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6587,
        6601
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "4837": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6587,
        6601
      ],
      "op": "DUP3",
      "path": "35"
    },
    "4838": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6587,
        6601
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "4839": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6587,
        6601
      ],
      "op": "DUP3",
      "path": "35"
    },
    "4840": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6587,
        6601
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "4841": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4845": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4847": {
      "op": "SHL"
    },
    "4848": {
      "op": "SUB"
    },
    "4849": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6667,
        6680
      ],
      "op": "AND",
      "path": "35"
    },
    "4850": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6667,
        6680
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "4851": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6707,
        6927
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1306"
    },
    "4854": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6707,
        6927
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "4855": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6816,
        6827
      ],
      "op": "DUP10",
      "path": "35"
    },
    "4856": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6816,
        6827
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "4857": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6845,
        6857
      ],
      "op": "DUP10",
      "path": "35"
    },
    "4858": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6845,
        6857
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "4859": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6875,
        6885
      ],
      "op": "DUP10",
      "path": "35"
    },
    "4860": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6875,
        6885
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "4861": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6903,
        6913
      ],
      "op": "DUP10",
      "path": "35"
    },
    "4862": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6903,
        6913
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "4863": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6707,
        6927
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x24"
    },
    "4865": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6707,
        6927
      ],
      "op": "ADD",
      "path": "35"
    },
    "4866": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6707,
        6927
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1D2B"
    },
    "4869": {
      "fn": "CLHouse.PropRemoveMember",
      "jump": "i",
      "offset": [
        6707,
        6927
      ],
      "op": "JUMP",
      "path": "35"
    },
    "4870": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6707,
        6927
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "4871": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6707,
        6927
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "4873": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6707,
        6927
      ],
      "op": "DUP1",
      "path": "35"
    },
    "4874": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6707,
        6927
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "4875": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4877": {
      "op": "NOT"
    },
    "4878": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6707,
        6927
      ],
      "op": "DUP2",
      "path": "35"
    },
    "4879": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6707,
        6927
      ],
      "op": "DUP5",
      "path": "35"
    },
    "4880": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6707,
        6927
      ],
      "op": "SUB",
      "path": "35"
    },
    "4881": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6707,
        6927
      ],
      "op": "ADD",
      "path": "35"
    },
    "4882": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6707,
        6927
      ],
      "op": "DUP2",
      "path": "35"
    },
    "4883": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6707,
        6927
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "4884": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6707,
        6927
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "4885": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6707,
        6927
      ],
      "op": "DUP2",
      "path": "35"
    },
    "4886": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6707,
        6927
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "4887": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6707,
        6927
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "4889": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6707,
        6927
      ],
      "op": "DUP3",
      "path": "35"
    },
    "4890": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6707,
        6927
      ],
      "op": "ADD",
      "path": "35"
    },
    "4891": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6707,
        6927
      ],
      "op": "DUP1",
      "path": "35"
    },
    "4892": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6707,
        6927
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "4893": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4895": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4897": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4899": {
      "op": "SHL"
    },
    "4900": {
      "op": "SUB"
    },
    "4901": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6707,
        6927
      ],
      "op": "AND",
      "path": "35"
    },
    "4902": {
      "op": "PUSH4",
      "value": "0x7B2DDE6F"
    },
    "4907": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4909": {
      "op": "SHL"
    },
    "4910": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6707,
        6927
      ],
      "op": "OR",
      "path": "35"
    },
    "4911": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6707,
        6927
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "4912": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6707,
        6927
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "4913": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6667,
        6937
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "4914": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6667,
        6937
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xA8F"
    },
    "4917": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6667,
        6937
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "4918": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6707,
        6927
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "4919": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        6667,
        6937
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1B4A"
    },
    "4922": {
      "fn": "CLHouse.PropRemoveMember",
      "jump": "i",
      "offset": [
        6667,
        6937
      ],
      "op": "JUMP",
      "path": "35"
    },
    "4923": {
      "op": "JUMPDEST"
    },
    "4924": {
      "op": "DUP1"
    },
    "4925": {
      "op": "CALLDATALOAD"
    },
    "4926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4930": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4932": {
      "op": "SHL"
    },
    "4933": {
      "op": "SUB"
    },
    "4934": {
      "op": "DUP2"
    },
    "4935": {
      "op": "AND"
    },
    "4936": {
      "op": "DUP2"
    },
    "4937": {
      "op": "EQ"
    },
    "4938": {
      "op": "PUSH2",
      "value": "0x1352"
    },
    "4941": {
      "op": "JUMPI"
    },
    "4942": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4944": {
      "op": "DUP1"
    },
    "4945": {
      "op": "REVERT"
    },
    "4946": {
      "op": "JUMPDEST"
    },
    "4947": {
      "op": "SWAP2"
    },
    "4948": {
      "op": "SWAP1"
    },
    "4949": {
      "op": "POP"
    },
    "4950": {
      "jump": "o",
      "op": "JUMP"
    },
    "4951": {
      "op": "JUMPDEST"
    },
    "4952": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4957": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4959": {
      "op": "SHL"
    },
    "4960": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4962": {
      "op": "MSTORE"
    },
    "4963": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "4965": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4967": {
      "op": "MSTORE"
    },
    "4968": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4970": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4972": {
      "op": "REVERT"
    },
    "4973": {
      "op": "JUMPDEST"
    },
    "4974": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4976": {
      "op": "DUP3"
    },
    "4977": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4979": {
      "op": "DUP4"
    },
    "4980": {
      "op": "ADD"
    },
    "4981": {
      "op": "SLT"
    },
    "4982": {
      "op": "PUSH2",
      "value": "0x137E"
    },
    "4985": {
      "op": "JUMPI"
    },
    "4986": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4988": {
      "op": "DUP1"
    },
    "4989": {
      "op": "REVERT"
    },
    "4990": {
      "op": "JUMPDEST"
    },
    "4991": {
      "op": "DUP2"
    },
    "4992": {
      "op": "CALLDATALOAD"
    },
    "4993": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5002": {
      "op": "DUP1"
    },
    "5003": {
      "op": "DUP3"
    },
    "5004": {
      "op": "GT"
    },
    "5005": {
      "op": "ISZERO"
    },
    "5006": {
      "op": "PUSH2",
      "value": "0x1399"
    },
    "5009": {
      "op": "JUMPI"
    },
    "5010": {
      "op": "PUSH2",
      "value": "0x1399"
    },
    "5013": {
      "op": "PUSH2",
      "value": "0x1357"
    },
    "5016": {
      "jump": "i",
      "op": "JUMP"
    },
    "5017": {
      "op": "JUMPDEST"
    },
    "5018": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5020": {
      "op": "MLOAD"
    },
    "5021": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5023": {
      "op": "DUP4"
    },
    "5024": {
      "op": "ADD"
    },
    "5025": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5027": {
      "op": "NOT"
    },
    "5028": {
      "op": "SWAP1"
    },
    "5029": {
      "op": "DUP2"
    },
    "5030": {
      "op": "AND"
    },
    "5031": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "5033": {
      "op": "ADD"
    },
    "5034": {
      "op": "AND"
    },
    "5035": {
      "op": "DUP2"
    },
    "5036": {
      "op": "ADD"
    },
    "5037": {
      "op": "SWAP1"
    },
    "5038": {
      "op": "DUP3"
    },
    "5039": {
      "op": "DUP3"
    },
    "5040": {
      "op": "GT"
    },
    "5041": {
      "op": "DUP2"
    },
    "5042": {
      "op": "DUP4"
    },
    "5043": {
      "op": "LT"
    },
    "5044": {
      "op": "OR"
    },
    "5045": {
      "op": "ISZERO"
    },
    "5046": {
      "op": "PUSH2",
      "value": "0x13C1"
    },
    "5049": {
      "op": "JUMPI"
    },
    "5050": {
      "op": "PUSH2",
      "value": "0x13C1"
    },
    "5053": {
      "op": "PUSH2",
      "value": "0x1357"
    },
    "5056": {
      "jump": "i",
      "op": "JUMP"
    },
    "5057": {
      "op": "JUMPDEST"
    },
    "5058": {
      "op": "DUP2"
    },
    "5059": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5061": {
      "op": "MSTORE"
    },
    "5062": {
      "op": "DUP4"
    },
    "5063": {
      "op": "DUP2"
    },
    "5064": {
      "op": "MSTORE"
    },
    "5065": {
      "op": "DUP7"
    },
    "5066": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5068": {
      "op": "DUP6"
    },
    "5069": {
      "op": "DUP9"
    },
    "5070": {
      "op": "ADD"
    },
    "5071": {
      "op": "ADD"
    },
    "5072": {
      "op": "GT"
    },
    "5073": {
      "op": "ISZERO"
    },
    "5074": {
      "op": "PUSH2",
      "value": "0x13DA"
    },
    "5077": {
      "op": "JUMPI"
    },
    "5078": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5080": {
      "op": "DUP1"
    },
    "5081": {
      "op": "REVERT"
    },
    "5082": {
      "op": "JUMPDEST"
    },
    "5083": {
      "op": "DUP4"
    },
    "5084": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5086": {
      "op": "DUP8"
    },
    "5087": {
      "op": "ADD"
    },
    "5088": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5090": {
      "op": "DUP4"
    },
    "5091": {
      "op": "ADD"
    },
    "5092": {
      "op": "CALLDATACOPY"
    },
    "5093": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5095": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5097": {
      "op": "DUP6"
    },
    "5098": {
      "op": "DUP4"
    },
    "5099": {
      "op": "ADD"
    },
    "5100": {
      "op": "ADD"
    },
    "5101": {
      "op": "MSTORE"
    },
    "5102": {
      "op": "DUP1"
    },
    "5103": {
      "op": "SWAP5"
    },
    "5104": {
      "op": "POP"
    },
    "5105": {
      "op": "POP"
    },
    "5106": {
      "op": "POP"
    },
    "5107": {
      "op": "POP"
    },
    "5108": {
      "op": "POP"
    },
    "5109": {
      "op": "SWAP3"
    },
    "5110": {
      "op": "SWAP2"
    },
    "5111": {
      "op": "POP"
    },
    "5112": {
      "op": "POP"
    },
    "5113": {
      "jump": "o",
      "op": "JUMP"
    },
    "5114": {
      "op": "JUMPDEST"
    },
    "5115": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5117": {
      "op": "DUP1"
    },
    "5118": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5120": {
      "op": "DUP1"
    },
    "5121": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5123": {
      "op": "DUP6"
    },
    "5124": {
      "op": "DUP8"
    },
    "5125": {
      "op": "SUB"
    },
    "5126": {
      "op": "SLT"
    },
    "5127": {
      "op": "ISZERO"
    },
    "5128": {
      "op": "PUSH2",
      "value": "0x1410"
    },
    "5131": {
      "op": "JUMPI"
    },
    "5132": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5134": {
      "op": "DUP1"
    },
    "5135": {
      "op": "REVERT"
    },
    "5136": {
      "op": "JUMPDEST"
    },
    "5137": {
      "op": "PUSH2",
      "value": "0x1419"
    },
    "5140": {
      "op": "DUP6"
    },
    "5141": {
      "op": "PUSH2",
      "value": "0x133B"
    },
    "5144": {
      "jump": "i",
      "op": "JUMP"
    },
    "5145": {
      "op": "JUMPDEST"
    },
    "5146": {
      "op": "SWAP4"
    },
    "5147": {
      "op": "POP"
    },
    "5148": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5150": {
      "op": "DUP6"
    },
    "5151": {
      "op": "ADD"
    },
    "5152": {
      "op": "CALLDATALOAD"
    },
    "5153": {
      "op": "SWAP3"
    },
    "5154": {
      "op": "POP"
    },
    "5155": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5157": {
      "op": "DUP6"
    },
    "5158": {
      "op": "ADD"
    },
    "5159": {
      "op": "CALLDATALOAD"
    },
    "5160": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5169": {
      "op": "DUP2"
    },
    "5170": {
      "op": "GT"
    },
    "5171": {
      "op": "ISZERO"
    },
    "5172": {
      "op": "PUSH2",
      "value": "0x143C"
    },
    "5175": {
      "op": "JUMPI"
    },
    "5176": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5178": {
      "op": "DUP1"
    },
    "5179": {
      "op": "REVERT"
    },
    "5180": {
      "op": "JUMPDEST"
    },
    "5181": {
      "op": "PUSH2",
      "value": "0x1448"
    },
    "5184": {
      "op": "DUP8"
    },
    "5185": {
      "op": "DUP3"
    },
    "5186": {
      "op": "DUP9"
    },
    "5187": {
      "op": "ADD"
    },
    "5188": {
      "op": "PUSH2",
      "value": "0x136D"
    },
    "5191": {
      "jump": "i",
      "op": "JUMP"
    },
    "5192": {
      "op": "JUMPDEST"
    },
    "5193": {
      "op": "SWAP5"
    },
    "5194": {
      "op": "SWAP8"
    },
    "5195": {
      "op": "SWAP4"
    },
    "5196": {
      "op": "SWAP7"
    },
    "5197": {
      "op": "POP"
    },
    "5198": {
      "op": "SWAP4"
    },
    "5199": {
      "op": "SWAP5"
    },
    "5200": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5202": {
      "op": "ADD"
    },
    "5203": {
      "op": "CALLDATALOAD"
    },
    "5204": {
      "op": "SWAP4"
    },
    "5205": {
      "op": "POP"
    },
    "5206": {
      "op": "POP"
    },
    "5207": {
      "op": "POP"
    },
    "5208": {
      "jump": "o",
      "op": "JUMP"
    },
    "5209": {
      "op": "JUMPDEST"
    },
    "5210": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5212": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5214": {
      "op": "DUP3"
    },
    "5215": {
      "op": "DUP5"
    },
    "5216": {
      "op": "SUB"
    },
    "5217": {
      "op": "SLT"
    },
    "5218": {
      "op": "ISZERO"
    },
    "5219": {
      "op": "PUSH2",
      "value": "0x146B"
    },
    "5222": {
      "op": "JUMPI"
    },
    "5223": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5225": {
      "op": "DUP1"
    },
    "5226": {
      "op": "REVERT"
    },
    "5227": {
      "op": "JUMPDEST"
    },
    "5228": {
      "op": "PUSH2",
      "value": "0x1474"
    },
    "5231": {
      "op": "DUP3"
    },
    "5232": {
      "op": "PUSH2",
      "value": "0x133B"
    },
    "5235": {
      "jump": "i",
      "op": "JUMP"
    },
    "5236": {
      "op": "JUMPDEST"
    },
    "5237": {
      "op": "SWAP4"
    },
    "5238": {
      "op": "SWAP3"
    },
    "5239": {
      "op": "POP"
    },
    "5240": {
      "op": "POP"
    },
    "5241": {
      "op": "POP"
    },
    "5242": {
      "jump": "o",
      "op": "JUMP"
    },
    "5243": {
      "op": "JUMPDEST"
    },
    "5244": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5246": {
      "op": "DUP1"
    },
    "5247": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5249": {
      "op": "DUP1"
    },
    "5250": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5252": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5254": {
      "op": "DUP7"
    },
    "5255": {
      "op": "DUP9"
    },
    "5256": {
      "op": "SUB"
    },
    "5257": {
      "op": "SLT"
    },
    "5258": {
      "op": "ISZERO"
    },
    "5259": {
      "op": "PUSH2",
      "value": "0x1493"
    },
    "5262": {
      "op": "JUMPI"
    },
    "5263": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5265": {
      "op": "DUP1"
    },
    "5266": {
      "op": "REVERT"
    },
    "5267": {
      "op": "JUMPDEST"
    },
    "5268": {
      "op": "PUSH2",
      "value": "0x149C"
    },
    "5271": {
      "op": "DUP7"
    },
    "5272": {
      "op": "PUSH2",
      "value": "0x133B"
    },
    "5275": {
      "jump": "i",
      "op": "JUMP"
    },
    "5276": {
      "op": "JUMPDEST"
    },
    "5277": {
      "op": "SWAP5"
    },
    "5278": {
      "op": "POP"
    },
    "5279": {
      "op": "PUSH2",
      "value": "0x14AA"
    },
    "5282": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5284": {
      "op": "DUP8"
    },
    "5285": {
      "op": "ADD"
    },
    "5286": {
      "op": "PUSH2",
      "value": "0x133B"
    },
    "5289": {
      "jump": "i",
      "op": "JUMP"
    },
    "5290": {
      "op": "JUMPDEST"
    },
    "5291": {
      "op": "SWAP4"
    },
    "5292": {
      "op": "POP"
    },
    "5293": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5295": {
      "op": "DUP7"
    },
    "5296": {
      "op": "ADD"
    },
    "5297": {
      "op": "CALLDATALOAD"
    },
    "5298": {
      "op": "SWAP3"
    },
    "5299": {
      "op": "POP"
    },
    "5300": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5302": {
      "op": "DUP7"
    },
    "5303": {
      "op": "ADD"
    },
    "5304": {
      "op": "CALLDATALOAD"
    },
    "5305": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5314": {
      "op": "DUP2"
    },
    "5315": {
      "op": "GT"
    },
    "5316": {
      "op": "ISZERO"
    },
    "5317": {
      "op": "PUSH2",
      "value": "0x14CD"
    },
    "5320": {
      "op": "JUMPI"
    },
    "5321": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5323": {
      "op": "DUP1"
    },
    "5324": {
      "op": "REVERT"
    },
    "5325": {
      "op": "JUMPDEST"
    },
    "5326": {
      "op": "PUSH2",
      "value": "0x14D9"
    },
    "5329": {
      "op": "DUP9"
    },
    "5330": {
      "op": "DUP3"
    },
    "5331": {
      "op": "DUP10"
    },
    "5332": {
      "op": "ADD"
    },
    "5333": {
      "op": "PUSH2",
      "value": "0x136D"
    },
    "5336": {
      "jump": "i",
      "op": "JUMP"
    },
    "5337": {
      "op": "JUMPDEST"
    },
    "5338": {
      "op": "SWAP6"
    },
    "5339": {
      "op": "SWAP9"
    },
    "5340": {
      "op": "SWAP5"
    },
    "5341": {
      "op": "SWAP8"
    },
    "5342": {
      "op": "POP"
    },
    "5343": {
      "op": "SWAP3"
    },
    "5344": {
      "op": "SWAP6"
    },
    "5345": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5347": {
      "op": "ADD"
    },
    "5348": {
      "op": "CALLDATALOAD"
    },
    "5349": {
      "op": "SWAP4"
    },
    "5350": {
      "op": "SWAP3"
    },
    "5351": {
      "op": "POP"
    },
    "5352": {
      "op": "POP"
    },
    "5353": {
      "op": "POP"
    },
    "5354": {
      "jump": "o",
      "op": "JUMP"
    },
    "5355": {
      "op": "JUMPDEST"
    },
    "5356": {
      "op": "DUP1"
    },
    "5357": {
      "op": "CALLDATALOAD"
    },
    "5358": {
      "op": "DUP1"
    },
    "5359": {
      "op": "ISZERO"
    },
    "5360": {
      "op": "ISZERO"
    },
    "5361": {
      "op": "DUP2"
    },
    "5362": {
      "op": "EQ"
    },
    "5363": {
      "op": "PUSH2",
      "value": "0x1352"
    },
    "5366": {
      "op": "JUMPI"
    },
    "5367": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5369": {
      "op": "DUP1"
    },
    "5370": {
      "op": "REVERT"
    },
    "5371": {
      "op": "JUMPDEST"
    },
    "5372": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5374": {
      "op": "DUP1"
    },
    "5375": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5377": {
      "op": "DUP1"
    },
    "5378": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5380": {
      "op": "DUP1"
    },
    "5381": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5383": {
      "op": "DUP8"
    },
    "5384": {
      "op": "DUP10"
    },
    "5385": {
      "op": "SUB"
    },
    "5386": {
      "op": "SLT"
    },
    "5387": {
      "op": "ISZERO"
    },
    "5388": {
      "op": "PUSH2",
      "value": "0x1514"
    },
    "5391": {
      "op": "JUMPI"
    },
    "5392": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5394": {
      "op": "DUP1"
    },
    "5395": {
      "op": "REVERT"
    },
    "5396": {
      "op": "JUMPDEST"
    },
    "5397": {
      "op": "PUSH2",
      "value": "0x151D"
    },
    "5400": {
      "op": "DUP8"
    },
    "5401": {
      "op": "PUSH2",
      "value": "0x133B"
    },
    "5404": {
      "jump": "i",
      "op": "JUMP"
    },
    "5405": {
      "op": "JUMPDEST"
    },
    "5406": {
      "op": "SWAP6"
    },
    "5407": {
      "op": "POP"
    },
    "5408": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5410": {
      "op": "DUP8"
    },
    "5411": {
      "op": "ADD"
    },
    "5412": {
      "op": "CALLDATALOAD"
    },
    "5413": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5422": {
      "op": "DUP1"
    },
    "5423": {
      "op": "DUP3"
    },
    "5424": {
      "op": "GT"
    },
    "5425": {
      "op": "ISZERO"
    },
    "5426": {
      "op": "PUSH2",
      "value": "0x153A"
    },
    "5429": {
      "op": "JUMPI"
    },
    "5430": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5432": {
      "op": "DUP1"
    },
    "5433": {
      "op": "REVERT"
    },
    "5434": {
      "op": "JUMPDEST"
    },
    "5435": {
      "op": "PUSH2",
      "value": "0x1546"
    },
    "5438": {
      "op": "DUP11"
    },
    "5439": {
      "op": "DUP4"
    },
    "5440": {
      "op": "DUP12"
    },
    "5441": {
      "op": "ADD"
    },
    "5442": {
      "op": "PUSH2",
      "value": "0x136D"
    },
    "5445": {
      "jump": "i",
      "op": "JUMP"
    },
    "5446": {
      "op": "JUMPDEST"
    },
    "5447": {
      "op": "SWAP7"
    },
    "5448": {
      "op": "POP"
    },
    "5449": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5451": {
      "op": "DUP10"
    },
    "5452": {
      "op": "ADD"
    },
    "5453": {
      "op": "CALLDATALOAD"
    },
    "5454": {
      "op": "SWAP2"
    },
    "5455": {
      "op": "POP"
    },
    "5456": {
      "op": "DUP1"
    },
    "5457": {
      "op": "DUP3"
    },
    "5458": {
      "op": "GT"
    },
    "5459": {
      "op": "ISZERO"
    },
    "5460": {
      "op": "PUSH2",
      "value": "0x155C"
    },
    "5463": {
      "op": "JUMPI"
    },
    "5464": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5466": {
      "op": "DUP1"
    },
    "5467": {
      "op": "REVERT"
    },
    "5468": {
      "op": "JUMPDEST"
    },
    "5469": {
      "op": "PUSH2",
      "value": "0x1568"
    },
    "5472": {
      "op": "DUP11"
    },
    "5473": {
      "op": "DUP4"
    },
    "5474": {
      "op": "DUP12"
    },
    "5475": {
      "op": "ADD"
    },
    "5476": {
      "op": "PUSH2",
      "value": "0x136D"
    },
    "5479": {
      "jump": "i",
      "op": "JUMP"
    },
    "5480": {
      "op": "JUMPDEST"
    },
    "5481": {
      "op": "SWAP6"
    },
    "5482": {
      "op": "POP"
    },
    "5483": {
      "op": "PUSH2",
      "value": "0x1576"
    },
    "5486": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5488": {
      "op": "DUP11"
    },
    "5489": {
      "op": "ADD"
    },
    "5490": {
      "op": "PUSH2",
      "value": "0x14EB"
    },
    "5493": {
      "jump": "i",
      "op": "JUMP"
    },
    "5494": {
      "op": "JUMPDEST"
    },
    "5495": {
      "op": "SWAP5"
    },
    "5496": {
      "op": "POP"
    },
    "5497": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5499": {
      "op": "DUP10"
    },
    "5500": {
      "op": "ADD"
    },
    "5501": {
      "op": "CALLDATALOAD"
    },
    "5502": {
      "op": "SWAP4"
    },
    "5503": {
      "op": "POP"
    },
    "5504": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5506": {
      "op": "DUP10"
    },
    "5507": {
      "op": "ADD"
    },
    "5508": {
      "op": "CALLDATALOAD"
    },
    "5509": {
      "op": "SWAP2"
    },
    "5510": {
      "op": "POP"
    },
    "5511": {
      "op": "DUP1"
    },
    "5512": {
      "op": "DUP3"
    },
    "5513": {
      "op": "GT"
    },
    "5514": {
      "op": "ISZERO"
    },
    "5515": {
      "op": "PUSH2",
      "value": "0x1593"
    },
    "5518": {
      "op": "JUMPI"
    },
    "5519": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5521": {
      "op": "DUP1"
    },
    "5522": {
      "op": "REVERT"
    },
    "5523": {
      "op": "JUMPDEST"
    },
    "5524": {
      "op": "POP"
    },
    "5525": {
      "op": "PUSH2",
      "value": "0x15A0"
    },
    "5528": {
      "op": "DUP10"
    },
    "5529": {
      "op": "DUP3"
    },
    "5530": {
      "op": "DUP11"
    },
    "5531": {
      "op": "ADD"
    },
    "5532": {
      "op": "PUSH2",
      "value": "0x136D"
    },
    "5535": {
      "jump": "i",
      "op": "JUMP"
    },
    "5536": {
      "op": "JUMPDEST"
    },
    "5537": {
      "op": "SWAP2"
    },
    "5538": {
      "op": "POP"
    },
    "5539": {
      "op": "POP"
    },
    "5540": {
      "op": "SWAP3"
    },
    "5541": {
      "op": "SWAP6"
    },
    "5542": {
      "op": "POP"
    },
    "5543": {
      "op": "SWAP3"
    },
    "5544": {
      "op": "SWAP6"
    },
    "5545": {
      "op": "POP"
    },
    "5546": {
      "op": "SWAP3"
    },
    "5547": {
      "op": "SWAP6"
    },
    "5548": {
      "jump": "o",
      "op": "JUMP"
    },
    "5549": {
      "op": "JUMPDEST"
    },
    "5550": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5552": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5554": {
      "op": "DUP3"
    },
    "5555": {
      "op": "DUP5"
    },
    "5556": {
      "op": "SUB"
    },
    "5557": {
      "op": "SLT"
    },
    "5558": {
      "op": "ISZERO"
    },
    "5559": {
      "op": "PUSH2",
      "value": "0x15BF"
    },
    "5562": {
      "op": "JUMPI"
    },
    "5563": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5565": {
      "op": "DUP1"
    },
    "5566": {
      "op": "REVERT"
    },
    "5567": {
      "op": "JUMPDEST"
    },
    "5568": {
      "op": "POP"
    },
    "5569": {
      "op": "CALLDATALOAD"
    },
    "5570": {
      "op": "SWAP2"
    },
    "5571": {
      "op": "SWAP1"
    },
    "5572": {
      "op": "POP"
    },
    "5573": {
      "jump": "o",
      "op": "JUMP"
    },
    "5574": {
      "op": "JUMPDEST"
    },
    "5575": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5577": {
      "op": "JUMPDEST"
    },
    "5578": {
      "op": "DUP4"
    },
    "5579": {
      "op": "DUP2"
    },
    "5580": {
      "op": "LT"
    },
    "5581": {
      "op": "ISZERO"
    },
    "5582": {
      "op": "PUSH2",
      "value": "0x15E1"
    },
    "5585": {
      "op": "JUMPI"
    },
    "5586": {
      "op": "DUP2"
    },
    "5587": {
      "op": "DUP2"
    },
    "5588": {
      "op": "ADD"
    },
    "5589": {
      "op": "MLOAD"
    },
    "5590": {
      "op": "DUP4"
    },
    "5591": {
      "op": "DUP3"
    },
    "5592": {
      "op": "ADD"
    },
    "5593": {
      "op": "MSTORE"
    },
    "5594": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5596": {
      "op": "ADD"
    },
    "5597": {
      "op": "PUSH2",
      "value": "0x15C9"
    },
    "5600": {
      "op": "JUMP"
    },
    "5601": {
      "op": "JUMPDEST"
    },
    "5602": {
      "op": "DUP4"
    },
    "5603": {
      "op": "DUP2"
    },
    "5604": {
      "op": "GT"
    },
    "5605": {
      "op": "ISZERO"
    },
    "5606": {
      "op": "PUSH2",
      "value": "0xBB4"
    },
    "5609": {
      "op": "JUMPI"
    },
    "5610": {
      "op": "POP"
    },
    "5611": {
      "op": "POP"
    },
    "5612": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5614": {
      "op": "SWAP2"
    },
    "5615": {
      "op": "ADD"
    },
    "5616": {
      "op": "MSTORE"
    },
    "5617": {
      "jump": "o",
      "op": "JUMP"
    },
    "5618": {
      "op": "JUMPDEST"
    },
    "5619": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5621": {
      "op": "DUP2"
    },
    "5622": {
      "op": "MLOAD"
    },
    "5623": {
      "op": "DUP1"
    },
    "5624": {
      "op": "DUP5"
    },
    "5625": {
      "op": "MSTORE"
    },
    "5626": {
      "op": "PUSH2",
      "value": "0x160A"
    },
    "5629": {
      "op": "DUP2"
    },
    "5630": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5632": {
      "op": "DUP7"
    },
    "5633": {
      "op": "ADD"
    },
    "5634": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5636": {
      "op": "DUP7"
    },
    "5637": {
      "op": "ADD"
    },
    "5638": {
      "op": "PUSH2",
      "value": "0x15C6"
    },
    "5641": {
      "jump": "i",
      "op": "JUMP"
    },
    "5642": {
      "op": "JUMPDEST"
    },
    "5643": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5645": {
      "op": "ADD"
    },
    "5646": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5648": {
      "op": "NOT"
    },
    "5649": {
      "op": "AND"
    },
    "5650": {
      "op": "SWAP3"
    },
    "5651": {
      "op": "SWAP1"
    },
    "5652": {
      "op": "SWAP3"
    },
    "5653": {
      "op": "ADD"
    },
    "5654": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5656": {
      "op": "ADD"
    },
    "5657": {
      "op": "SWAP3"
    },
    "5658": {
      "op": "SWAP2"
    },
    "5659": {
      "op": "POP"
    },
    "5660": {
      "op": "POP"
    },
    "5661": {
      "jump": "o",
      "op": "JUMP"
    },
    "5662": {
      "op": "JUMPDEST"
    },
    "5663": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5665": {
      "op": "DUP2"
    },
    "5666": {
      "op": "MSTORE"
    },
    "5667": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5669": {
      "op": "PUSH2",
      "value": "0x1474"
    },
    "5672": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5674": {
      "op": "DUP4"
    },
    "5675": {
      "op": "ADD"
    },
    "5676": {
      "op": "DUP5"
    },
    "5677": {
      "op": "PUSH2",
      "value": "0x15F2"
    },
    "5680": {
      "jump": "i",
      "op": "JUMP"
    },
    "5681": {
      "op": "JUMPDEST"
    },
    "5682": {
      "op": "DUP3"
    },
    "5683": {
      "op": "ISZERO"
    },
    "5684": {
      "op": "ISZERO"
    },
    "5685": {
      "op": "DUP2"
    },
    "5686": {
      "op": "MSTORE"
    },
    "5687": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5689": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5691": {
      "op": "DUP3"
    },
    "5692": {
      "op": "ADD"
    },
    "5693": {
      "op": "MSTORE"
    },
    "5694": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5696": {
      "op": "PUSH2",
      "value": "0x164C"
    },
    "5699": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5701": {
      "op": "DUP4"
    },
    "5702": {
      "op": "ADD"
    },
    "5703": {
      "op": "DUP5"
    },
    "5704": {
      "op": "PUSH2",
      "value": "0x15F2"
    },
    "5707": {
      "jump": "i",
      "op": "JUMP"
    },
    "5708": {
      "op": "JUMPDEST"
    },
    "5709": {
      "op": "SWAP5"
    },
    "5710": {
      "op": "SWAP4"
    },
    "5711": {
      "op": "POP"
    },
    "5712": {
      "op": "POP"
    },
    "5713": {
      "op": "POP"
    },
    "5714": {
      "op": "POP"
    },
    "5715": {
      "jump": "o",
      "op": "JUMP"
    },
    "5716": {
      "op": "JUMPDEST"
    },
    "5717": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5719": {
      "op": "DUP1"
    },
    "5720": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5722": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5724": {
      "op": "DUP5"
    },
    "5725": {
      "op": "DUP7"
    },
    "5726": {
      "op": "SUB"
    },
    "5727": {
      "op": "SLT"
    },
    "5728": {
      "op": "ISZERO"
    },
    "5729": {
      "op": "PUSH2",
      "value": "0x1669"
    },
    "5732": {
      "op": "JUMPI"
    },
    "5733": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5735": {
      "op": "DUP1"
    },
    "5736": {
      "op": "REVERT"
    },
    "5737": {
      "op": "JUMPDEST"
    },
    "5738": {
      "op": "DUP4"
    },
    "5739": {
      "op": "CALLDATALOAD"
    },
    "5740": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5742": {
      "op": "DUP2"
    },
    "5743": {
      "op": "AND"
    },
    "5744": {
      "op": "DUP2"
    },
    "5745": {
      "op": "EQ"
    },
    "5746": {
      "op": "PUSH2",
      "value": "0x167A"
    },
    "5749": {
      "op": "JUMPI"
    },
    "5750": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5752": {
      "op": "DUP1"
    },
    "5753": {
      "op": "REVERT"
    },
    "5754": {
      "op": "JUMPDEST"
    },
    "5755": {
      "op": "SWAP3"
    },
    "5756": {
      "op": "POP"
    },
    "5757": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5759": {
      "op": "DUP5"
    },
    "5760": {
      "op": "ADD"
    },
    "5761": {
      "op": "CALLDATALOAD"
    },
    "5762": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5771": {
      "op": "DUP2"
    },
    "5772": {
      "op": "GT"
    },
    "5773": {
      "op": "ISZERO"
    },
    "5774": {
      "op": "PUSH2",
      "value": "0x1696"
    },
    "5777": {
      "op": "JUMPI"
    },
    "5778": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5780": {
      "op": "DUP1"
    },
    "5781": {
      "op": "REVERT"
    },
    "5782": {
      "op": "JUMPDEST"
    },
    "5783": {
      "op": "PUSH2",
      "value": "0x16A2"
    },
    "5786": {
      "op": "DUP7"
    },
    "5787": {
      "op": "DUP3"
    },
    "5788": {
      "op": "DUP8"
    },
    "5789": {
      "op": "ADD"
    },
    "5790": {
      "op": "PUSH2",
      "value": "0x136D"
    },
    "5793": {
      "jump": "i",
      "op": "JUMP"
    },
    "5794": {
      "op": "JUMPDEST"
    },
    "5795": {
      "op": "SWAP3"
    },
    "5796": {
      "op": "POP"
    },
    "5797": {
      "op": "POP"
    },
    "5798": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5800": {
      "op": "DUP5"
    },
    "5801": {
      "op": "ADD"
    },
    "5802": {
      "op": "CALLDATALOAD"
    },
    "5803": {
      "op": "SWAP1"
    },
    "5804": {
      "op": "POP"
    },
    "5805": {
      "op": "SWAP3"
    },
    "5806": {
      "op": "POP"
    },
    "5807": {
      "op": "SWAP3"
    },
    "5808": {
      "op": "POP"
    },
    "5809": {
      "op": "SWAP3"
    },
    "5810": {
      "jump": "o",
      "op": "JUMP"
    },
    "5811": {
      "op": "JUMPDEST"
    },
    "5812": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5814": {
      "op": "DUP1"
    },
    "5815": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5817": {
      "op": "DUP4"
    },
    "5818": {
      "op": "DUP6"
    },
    "5819": {
      "op": "SUB"
    },
    "5820": {
      "op": "SLT"
    },
    "5821": {
      "op": "ISZERO"
    },
    "5822": {
      "op": "PUSH2",
      "value": "0x16C6"
    },
    "5825": {
      "op": "JUMPI"
    },
    "5826": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5828": {
      "op": "DUP1"
    },
    "5829": {
      "op": "REVERT"
    },
    "5830": {
      "op": "JUMPDEST"
    },
    "5831": {
      "op": "PUSH2",
      "value": "0x16CF"
    },
    "5834": {
      "op": "DUP4"
    },
    "5835": {
      "op": "PUSH2",
      "value": "0x14EB"
    },
    "5838": {
      "jump": "i",
      "op": "JUMP"
    },
    "5839": {
      "op": "JUMPDEST"
    },
    "5840": {
      "op": "SWAP2"
    },
    "5841": {
      "op": "POP"
    },
    "5842": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5844": {
      "op": "DUP4"
    },
    "5845": {
      "op": "ADD"
    },
    "5846": {
      "op": "CALLDATALOAD"
    },
    "5847": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5856": {
      "op": "DUP2"
    },
    "5857": {
      "op": "GT"
    },
    "5858": {
      "op": "ISZERO"
    },
    "5859": {
      "op": "PUSH2",
      "value": "0x16EB"
    },
    "5862": {
      "op": "JUMPI"
    },
    "5863": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5865": {
      "op": "DUP1"
    },
    "5866": {
      "op": "REVERT"
    },
    "5867": {
      "op": "JUMPDEST"
    },
    "5868": {
      "op": "PUSH2",
      "value": "0x16F7"
    },
    "5871": {
      "op": "DUP6"
    },
    "5872": {
      "op": "DUP3"
    },
    "5873": {
      "op": "DUP7"
    },
    "5874": {
      "op": "ADD"
    },
    "5875": {
      "op": "PUSH2",
      "value": "0x136D"
    },
    "5878": {
      "jump": "i",
      "op": "JUMP"
    },
    "5879": {
      "op": "JUMPDEST"
    },
    "5880": {
      "op": "SWAP2"
    },
    "5881": {
      "op": "POP"
    },
    "5882": {
      "op": "POP"
    },
    "5883": {
      "op": "SWAP3"
    },
    "5884": {
      "op": "POP"
    },
    "5885": {
      "op": "SWAP3"
    },
    "5886": {
      "op": "SWAP1"
    },
    "5887": {
      "op": "POP"
    },
    "5888": {
      "jump": "o",
      "op": "JUMP"
    },
    "5889": {
      "op": "JUMPDEST"
    },
    "5890": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5894": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5896": {
      "op": "SHL"
    },
    "5897": {
      "op": "SUB"
    },
    "5898": {
      "op": "DUP7"
    },
    "5899": {
      "op": "AND"
    },
    "5900": {
      "op": "DUP2"
    },
    "5901": {
      "op": "MSTORE"
    },
    "5902": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5904": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5906": {
      "op": "DUP3"
    },
    "5907": {
      "op": "ADD"
    },
    "5908": {
      "op": "DUP2"
    },
    "5909": {
      "op": "SWAP1"
    },
    "5910": {
      "op": "MSTORE"
    },
    "5911": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5913": {
      "op": "SWAP1"
    },
    "5914": {
      "op": "PUSH2",
      "value": "0x1725"
    },
    "5917": {
      "op": "SWAP1"
    },
    "5918": {
      "op": "DUP4"
    },
    "5919": {
      "op": "ADD"
    },
    "5920": {
      "op": "DUP8"
    },
    "5921": {
      "op": "PUSH2",
      "value": "0x15F2"
    },
    "5924": {
      "jump": "i",
      "op": "JUMP"
    },
    "5925": {
      "op": "JUMPDEST"
    },
    "5926": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5928": {
      "op": "DUP4"
    },
    "5929": {
      "op": "ADD"
    },
    "5930": {
      "op": "SWAP6"
    },
    "5931": {
      "op": "SWAP1"
    },
    "5932": {
      "op": "SWAP6"
    },
    "5933": {
      "op": "MSTORE"
    },
    "5934": {
      "op": "POP"
    },
    "5935": {
      "op": "SWAP2"
    },
    "5936": {
      "op": "ISZERO"
    },
    "5937": {
      "op": "ISZERO"
    },
    "5938": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5940": {
      "op": "DUP4"
    },
    "5941": {
      "op": "ADD"
    },
    "5942": {
      "op": "MSTORE"
    },
    "5943": {
      "op": "ISZERO"
    },
    "5944": {
      "op": "ISZERO"
    },
    "5945": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5947": {
      "op": "SWAP1"
    },
    "5948": {
      "op": "SWAP2"
    },
    "5949": {
      "op": "ADD"
    },
    "5950": {
      "op": "MSTORE"
    },
    "5951": {
      "op": "SWAP3"
    },
    "5952": {
      "op": "SWAP2"
    },
    "5953": {
      "op": "POP"
    },
    "5954": {
      "op": "POP"
    },
    "5955": {
      "jump": "o",
      "op": "JUMP"
    },
    "5956": {
      "op": "JUMPDEST"
    },
    "5957": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5959": {
      "op": "DUP1"
    },
    "5960": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5962": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5964": {
      "op": "DUP5"
    },
    "5965": {
      "op": "DUP7"
    },
    "5966": {
      "op": "SUB"
    },
    "5967": {
      "op": "SLT"
    },
    "5968": {
      "op": "ISZERO"
    },
    "5969": {
      "op": "PUSH2",
      "value": "0x1759"
    },
    "5972": {
      "op": "JUMPI"
    },
    "5973": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5975": {
      "op": "DUP1"
    },
    "5976": {
      "op": "REVERT"
    },
    "5977": {
      "op": "JUMPDEST"
    },
    "5978": {
      "op": "DUP4"
    },
    "5979": {
      "op": "CALLDATALOAD"
    },
    "5980": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5989": {
      "op": "DUP1"
    },
    "5990": {
      "op": "DUP3"
    },
    "5991": {
      "op": "GT"
    },
    "5992": {
      "op": "ISZERO"
    },
    "5993": {
      "op": "PUSH2",
      "value": "0x1771"
    },
    "5996": {
      "op": "JUMPI"
    },
    "5997": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5999": {
      "op": "DUP1"
    },
    "6000": {
      "op": "REVERT"
    },
    "6001": {
      "op": "JUMPDEST"
    },
    "6002": {
      "op": "PUSH2",
      "value": "0x177D"
    },
    "6005": {
      "op": "DUP8"
    },
    "6006": {
      "op": "DUP4"
    },
    "6007": {
      "op": "DUP9"
    },
    "6008": {
      "op": "ADD"
    },
    "6009": {
      "op": "PUSH2",
      "value": "0x136D"
    },
    "6012": {
      "jump": "i",
      "op": "JUMP"
    },
    "6013": {
      "op": "JUMPDEST"
    },
    "6014": {
      "op": "SWAP5"
    },
    "6015": {
      "op": "POP"
    },
    "6016": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6018": {
      "op": "DUP7"
    },
    "6019": {
      "op": "ADD"
    },
    "6020": {
      "op": "CALLDATALOAD"
    },
    "6021": {
      "op": "SWAP2"
    },
    "6022": {
      "op": "POP"
    },
    "6023": {
      "op": "DUP1"
    },
    "6024": {
      "op": "DUP3"
    },
    "6025": {
      "op": "GT"
    },
    "6026": {
      "op": "ISZERO"
    },
    "6027": {
      "op": "PUSH2",
      "value": "0x1793"
    },
    "6030": {
      "op": "JUMPI"
    },
    "6031": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6033": {
      "op": "DUP1"
    },
    "6034": {
      "op": "REVERT"
    },
    "6035": {
      "op": "JUMPDEST"
    },
    "6036": {
      "op": "PUSH2",
      "value": "0x179F"
    },
    "6039": {
      "op": "DUP8"
    },
    "6040": {
      "op": "DUP4"
    },
    "6041": {
      "op": "DUP9"
    },
    "6042": {
      "op": "ADD"
    },
    "6043": {
      "op": "PUSH2",
      "value": "0x136D"
    },
    "6046": {
      "jump": "i",
      "op": "JUMP"
    },
    "6047": {
      "op": "JUMPDEST"
    },
    "6048": {
      "op": "SWAP4"
    },
    "6049": {
      "op": "POP"
    },
    "6050": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6052": {
      "op": "DUP7"
    },
    "6053": {
      "op": "ADD"
    },
    "6054": {
      "op": "CALLDATALOAD"
    },
    "6055": {
      "op": "SWAP2"
    },
    "6056": {
      "op": "POP"
    },
    "6057": {
      "op": "DUP1"
    },
    "6058": {
      "op": "DUP3"
    },
    "6059": {
      "op": "GT"
    },
    "6060": {
      "op": "ISZERO"
    },
    "6061": {
      "op": "PUSH2",
      "value": "0x17B5"
    },
    "6064": {
      "op": "JUMPI"
    },
    "6065": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6067": {
      "op": "DUP1"
    },
    "6068": {
      "op": "REVERT"
    },
    "6069": {
      "op": "JUMPDEST"
    },
    "6070": {
      "op": "POP"
    },
    "6071": {
      "op": "PUSH2",
      "value": "0x17C2"
    },
    "6074": {
      "op": "DUP7"
    },
    "6075": {
      "op": "DUP3"
    },
    "6076": {
      "op": "DUP8"
    },
    "6077": {
      "op": "ADD"
    },
    "6078": {
      "op": "PUSH2",
      "value": "0x136D"
    },
    "6081": {
      "jump": "i",
      "op": "JUMP"
    },
    "6082": {
      "op": "JUMPDEST"
    },
    "6083": {
      "op": "SWAP2"
    },
    "6084": {
      "op": "POP"
    },
    "6085": {
      "op": "POP"
    },
    "6086": {
      "op": "SWAP3"
    },
    "6087": {
      "op": "POP"
    },
    "6088": {
      "op": "SWAP3"
    },
    "6089": {
      "op": "POP"
    },
    "6090": {
      "op": "SWAP3"
    },
    "6091": {
      "jump": "o",
      "op": "JUMP"
    },
    "6092": {
      "op": "JUMPDEST"
    },
    "6093": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6098": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6100": {
      "op": "SHL"
    },
    "6101": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6103": {
      "op": "MSTORE"
    },
    "6104": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "6106": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6108": {
      "op": "MSTORE"
    },
    "6109": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6111": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6113": {
      "op": "REVERT"
    },
    "6114": {
      "op": "JUMPDEST"
    },
    "6115": {
      "op": "PUSH1",
      "value": "0x9"
    },
    "6117": {
      "op": "DUP2"
    },
    "6118": {
      "op": "LT"
    },
    "6119": {
      "op": "PUSH2",
      "value": "0x1800"
    },
    "6122": {
      "op": "JUMPI"
    },
    "6123": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6128": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6130": {
      "op": "SHL"
    },
    "6131": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6133": {
      "op": "MSTORE"
    },
    "6134": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "6136": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6138": {
      "op": "MSTORE"
    },
    "6139": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6141": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6143": {
      "op": "REVERT"
    },
    "6144": {
      "op": "JUMPDEST"
    },
    "6145": {
      "op": "SWAP1"
    },
    "6146": {
      "op": "MSTORE"
    },
    "6147": {
      "jump": "o",
      "op": "JUMP"
    },
    "6148": {
      "op": "JUMPDEST"
    },
    "6149": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6151": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6153": {
      "op": "DUP1"
    },
    "6154": {
      "op": "DUP4"
    },
    "6155": {
      "op": "ADD"
    },
    "6156": {
      "op": "DUP2"
    },
    "6157": {
      "op": "DUP5"
    },
    "6158": {
      "op": "MSTORE"
    },
    "6159": {
      "op": "DUP1"
    },
    "6160": {
      "op": "DUP6"
    },
    "6161": {
      "op": "MLOAD"
    },
    "6162": {
      "op": "DUP1"
    },
    "6163": {
      "op": "DUP4"
    },
    "6164": {
      "op": "MSTORE"
    },
    "6165": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6167": {
      "op": "SWAP3"
    },
    "6168": {
      "op": "POP"
    },
    "6169": {
      "op": "DUP3"
    },
    "6170": {
      "op": "DUP7"
    },
    "6171": {
      "op": "ADD"
    },
    "6172": {
      "op": "SWAP2"
    },
    "6173": {
      "op": "POP"
    },
    "6174": {
      "op": "DUP3"
    },
    "6175": {
      "op": "DUP2"
    },
    "6176": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "6178": {
      "op": "SHL"
    },
    "6179": {
      "op": "DUP8"
    },
    "6180": {
      "op": "ADD"
    },
    "6181": {
      "op": "ADD"
    },
    "6182": {
      "op": "DUP5"
    },
    "6183": {
      "op": "DUP9"
    },
    "6184": {
      "op": "ADD"
    },
    "6185": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6187": {
      "op": "JUMPDEST"
    },
    "6188": {
      "op": "DUP4"
    },
    "6189": {
      "op": "DUP2"
    },
    "6190": {
      "op": "LT"
    },
    "6191": {
      "op": "ISZERO"
    },
    "6192": {
      "op": "PUSH2",
      "value": "0x18D9"
    },
    "6195": {
      "op": "JUMPI"
    },
    "6196": {
      "op": "DUP9"
    },
    "6197": {
      "op": "DUP4"
    },
    "6198": {
      "op": "SUB"
    },
    "6199": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "6201": {
      "op": "NOT"
    },
    "6202": {
      "op": "ADD"
    },
    "6203": {
      "op": "DUP6"
    },
    "6204": {
      "op": "MSTORE"
    },
    "6205": {
      "op": "DUP2"
    },
    "6206": {
      "op": "MLOAD"
    },
    "6207": {
      "op": "DUP1"
    },
    "6208": {
      "op": "MLOAD"
    },
    "6209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6211": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6213": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6215": {
      "op": "SHL"
    },
    "6216": {
      "op": "SUB"
    },
    "6217": {
      "op": "AND"
    },
    "6218": {
      "op": "DUP5"
    },
    "6219": {
      "op": "MSTORE"
    },
    "6220": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "6223": {
      "op": "DUP9"
    },
    "6224": {
      "op": "DUP3"
    },
    "6225": {
      "op": "ADD"
    },
    "6226": {
      "op": "MLOAD"
    },
    "6227": {
      "op": "PUSH2",
      "value": "0x185E"
    },
    "6230": {
      "op": "DUP11"
    },
    "6231": {
      "op": "DUP8"
    },
    "6232": {
      "op": "ADD"
    },
    "6233": {
      "op": "DUP3"
    },
    "6234": {
      "op": "PUSH2",
      "value": "0x17E2"
    },
    "6237": {
      "jump": "i",
      "op": "JUMP"
    },
    "6238": {
      "op": "JUMPDEST"
    },
    "6239": {
      "op": "POP"
    },
    "6240": {
      "op": "DUP8"
    },
    "6241": {
      "op": "DUP3"
    },
    "6242": {
      "op": "ADD"
    },
    "6243": {
      "op": "MLOAD"
    },
    "6244": {
      "op": "DUP2"
    },
    "6245": {
      "op": "DUP10"
    },
    "6246": {
      "op": "DUP8"
    },
    "6247": {
      "op": "ADD"
    },
    "6248": {
      "op": "MSTORE"
    },
    "6249": {
      "op": "PUSH2",
      "value": "0x1874"
    },
    "6252": {
      "op": "DUP3"
    },
    "6253": {
      "op": "DUP8"
    },
    "6254": {
      "op": "ADD"
    },
    "6255": {
      "op": "DUP3"
    },
    "6256": {
      "op": "PUSH2",
      "value": "0x15F2"
    },
    "6259": {
      "jump": "i",
      "op": "JUMP"
    },
    "6260": {
      "op": "JUMPDEST"
    },
    "6261": {
      "op": "SWAP2"
    },
    "6262": {
      "op": "POP"
    },
    "6263": {
      "op": "POP"
    },
    "6264": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6266": {
      "op": "DUP1"
    },
    "6267": {
      "op": "DUP4"
    },
    "6268": {
      "op": "ADD"
    },
    "6269": {
      "op": "MLOAD"
    },
    "6270": {
      "op": "DUP2"
    },
    "6271": {
      "op": "DUP8"
    },
    "6272": {
      "op": "ADD"
    },
    "6273": {
      "op": "MSTORE"
    },
    "6274": {
      "op": "POP"
    },
    "6275": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6277": {
      "op": "DUP1"
    },
    "6278": {
      "op": "DUP4"
    },
    "6279": {
      "op": "ADD"
    },
    "6280": {
      "op": "MLOAD"
    },
    "6281": {
      "op": "PUSH2",
      "value": "0x1896"
    },
    "6284": {
      "op": "DUP3"
    },
    "6285": {
      "op": "DUP9"
    },
    "6286": {
      "op": "ADD"
    },
    "6287": {
      "op": "DUP3"
    },
    "6288": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6290": {
      "op": "AND"
    },
    "6291": {
      "op": "SWAP1"
    },
    "6292": {
      "op": "MSTORE"
    },
    "6293": {
      "op": "JUMP"
    },
    "6294": {
      "op": "JUMPDEST"
    },
    "6295": {
      "op": "POP"
    },
    "6296": {
      "op": "POP"
    },
    "6297": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6299": {
      "op": "DUP3"
    },
    "6300": {
      "op": "DUP2"
    },
    "6301": {
      "op": "ADD"
    },
    "6302": {
      "op": "MLOAD"
    },
    "6303": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6305": {
      "op": "AND"
    },
    "6306": {
      "op": "SWAP1"
    },
    "6307": {
      "op": "DUP7"
    },
    "6308": {
      "op": "ADD"
    },
    "6309": {
      "op": "MSTORE"
    },
    "6310": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "6312": {
      "op": "DUP1"
    },
    "6313": {
      "op": "DUP4"
    },
    "6314": {
      "op": "ADD"
    },
    "6315": {
      "op": "MLOAD"
    },
    "6316": {
      "op": "ISZERO"
    },
    "6317": {
      "op": "ISZERO"
    },
    "6318": {
      "op": "SWAP1"
    },
    "6319": {
      "op": "DUP7"
    },
    "6320": {
      "op": "ADD"
    },
    "6321": {
      "op": "MSTORE"
    },
    "6322": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6324": {
      "op": "DUP1"
    },
    "6325": {
      "op": "DUP4"
    },
    "6326": {
      "op": "ADD"
    },
    "6327": {
      "op": "MLOAD"
    },
    "6328": {
      "op": "ISZERO"
    },
    "6329": {
      "op": "ISZERO"
    },
    "6330": {
      "op": "SWAP1"
    },
    "6331": {
      "op": "DUP7"
    },
    "6332": {
      "op": "ADD"
    },
    "6333": {
      "op": "MSTORE"
    },
    "6334": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "6337": {
      "op": "SWAP2"
    },
    "6338": {
      "op": "DUP3"
    },
    "6339": {
      "op": "ADD"
    },
    "6340": {
      "op": "MLOAD"
    },
    "6341": {
      "op": "SWAP2"
    },
    "6342": {
      "op": "SWAP1"
    },
    "6343": {
      "op": "SWAP5"
    },
    "6344": {
      "op": "ADD"
    },
    "6345": {
      "op": "MSTORE"
    },
    "6346": {
      "op": "SWAP4"
    },
    "6347": {
      "op": "DUP7"
    },
    "6348": {
      "op": "ADD"
    },
    "6349": {
      "op": "SWAP4"
    },
    "6350": {
      "op": "SWAP1"
    },
    "6351": {
      "op": "DUP7"
    },
    "6352": {
      "op": "ADD"
    },
    "6353": {
      "op": "SWAP1"
    },
    "6354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6356": {
      "op": "ADD"
    },
    "6357": {
      "op": "PUSH2",
      "value": "0x182B"
    },
    "6360": {
      "op": "JUMP"
    },
    "6361": {
      "op": "JUMPDEST"
    },
    "6362": {
      "op": "POP"
    },
    "6363": {
      "op": "SWAP1"
    },
    "6364": {
      "op": "SWAP9"
    },
    "6365": {
      "op": "SWAP8"
    },
    "6366": {
      "op": "POP"
    },
    "6367": {
      "op": "POP"
    },
    "6368": {
      "op": "POP"
    },
    "6369": {
      "op": "POP"
    },
    "6370": {
      "op": "POP"
    },
    "6371": {
      "op": "POP"
    },
    "6372": {
      "op": "POP"
    },
    "6373": {
      "op": "POP"
    },
    "6374": {
      "jump": "o",
      "op": "JUMP"
    },
    "6375": {
      "op": "JUMPDEST"
    },
    "6376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6380": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6382": {
      "op": "SHL"
    },
    "6383": {
      "op": "SUB"
    },
    "6384": {
      "op": "DUP5"
    },
    "6385": {
      "op": "AND"
    },
    "6386": {
      "op": "DUP2"
    },
    "6387": {
      "op": "MSTORE"
    },
    "6388": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6390": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6392": {
      "op": "DUP3"
    },
    "6393": {
      "op": "ADD"
    },
    "6394": {
      "op": "DUP2"
    },
    "6395": {
      "op": "SWAP1"
    },
    "6396": {
      "op": "MSTORE"
    },
    "6397": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6399": {
      "op": "SWAP1"
    },
    "6400": {
      "op": "PUSH2",
      "value": "0x190B"
    },
    "6403": {
      "op": "SWAP1"
    },
    "6404": {
      "op": "DUP4"
    },
    "6405": {
      "op": "ADD"
    },
    "6406": {
      "op": "DUP6"
    },
    "6407": {
      "op": "PUSH2",
      "value": "0x15F2"
    },
    "6410": {
      "jump": "i",
      "op": "JUMP"
    },
    "6411": {
      "op": "JUMPDEST"
    },
    "6412": {
      "op": "SWAP1"
    },
    "6413": {
      "op": "POP"
    },
    "6414": {
      "op": "DUP3"
    },
    "6415": {
      "op": "ISZERO"
    },
    "6416": {
      "op": "ISZERO"
    },
    "6417": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6419": {
      "op": "DUP4"
    },
    "6420": {
      "op": "ADD"
    },
    "6421": {
      "op": "MSTORE"
    },
    "6422": {
      "op": "SWAP5"
    },
    "6423": {
      "op": "SWAP4"
    },
    "6424": {
      "op": "POP"
    },
    "6425": {
      "op": "POP"
    },
    "6426": {
      "op": "POP"
    },
    "6427": {
      "op": "POP"
    },
    "6428": {
      "jump": "o",
      "op": "JUMP"
    },
    "6429": {
      "op": "JUMPDEST"
    },
    "6430": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6432": {
      "op": "DUP1"
    },
    "6433": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6435": {
      "op": "DUP1"
    },
    "6436": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6438": {
      "op": "DUP6"
    },
    "6439": {
      "op": "DUP8"
    },
    "6440": {
      "op": "SUB"
    },
    "6441": {
      "op": "SLT"
    },
    "6442": {
      "op": "ISZERO"
    },
    "6443": {
      "op": "PUSH2",
      "value": "0x1933"
    },
    "6446": {
      "op": "JUMPI"
    },
    "6447": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6449": {
      "op": "DUP1"
    },
    "6450": {
      "op": "REVERT"
    },
    "6451": {
      "op": "JUMPDEST"
    },
    "6452": {
      "op": "DUP5"
    },
    "6453": {
      "op": "CALLDATALOAD"
    },
    "6454": {
      "op": "SWAP4"
    },
    "6455": {
      "op": "POP"
    },
    "6456": {
      "op": "PUSH2",
      "value": "0x1943"
    },
    "6459": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6461": {
      "op": "DUP7"
    },
    "6462": {
      "op": "ADD"
    },
    "6463": {
      "op": "PUSH2",
      "value": "0x14EB"
    },
    "6466": {
      "jump": "i",
      "op": "JUMP"
    },
    "6467": {
      "op": "JUMPDEST"
    },
    "6468": {
      "op": "SWAP3"
    },
    "6469": {
      "op": "POP"
    },
    "6470": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6472": {
      "op": "DUP6"
    },
    "6473": {
      "op": "ADD"
    },
    "6474": {
      "op": "CALLDATALOAD"
    },
    "6475": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6484": {
      "op": "DUP1"
    },
    "6485": {
      "op": "DUP3"
    },
    "6486": {
      "op": "GT"
    },
    "6487": {
      "op": "ISZERO"
    },
    "6488": {
      "op": "PUSH2",
      "value": "0x1960"
    },
    "6491": {
      "op": "JUMPI"
    },
    "6492": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6494": {
      "op": "DUP1"
    },
    "6495": {
      "op": "REVERT"
    },
    "6496": {
      "op": "JUMPDEST"
    },
    "6497": {
      "op": "PUSH2",
      "value": "0x196C"
    },
    "6500": {
      "op": "DUP9"
    },
    "6501": {
      "op": "DUP4"
    },
    "6502": {
      "op": "DUP10"
    },
    "6503": {
      "op": "ADD"
    },
    "6504": {
      "op": "PUSH2",
      "value": "0x136D"
    },
    "6507": {
      "jump": "i",
      "op": "JUMP"
    },
    "6508": {
      "op": "JUMPDEST"
    },
    "6509": {
      "op": "SWAP4"
    },
    "6510": {
      "op": "POP"
    },
    "6511": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6513": {
      "op": "DUP8"
    },
    "6514": {
      "op": "ADD"
    },
    "6515": {
      "op": "CALLDATALOAD"
    },
    "6516": {
      "op": "SWAP2"
    },
    "6517": {
      "op": "POP"
    },
    "6518": {
      "op": "DUP1"
    },
    "6519": {
      "op": "DUP3"
    },
    "6520": {
      "op": "GT"
    },
    "6521": {
      "op": "ISZERO"
    },
    "6522": {
      "op": "PUSH2",
      "value": "0x1982"
    },
    "6525": {
      "op": "JUMPI"
    },
    "6526": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6528": {
      "op": "DUP1"
    },
    "6529": {
      "op": "REVERT"
    },
    "6530": {
      "op": "JUMPDEST"
    },
    "6531": {
      "op": "POP"
    },
    "6532": {
      "op": "PUSH2",
      "value": "0x198F"
    },
    "6535": {
      "op": "DUP8"
    },
    "6536": {
      "op": "DUP3"
    },
    "6537": {
      "op": "DUP9"
    },
    "6538": {
      "op": "ADD"
    },
    "6539": {
      "op": "PUSH2",
      "value": "0x136D"
    },
    "6542": {
      "jump": "i",
      "op": "JUMP"
    },
    "6543": {
      "op": "JUMPDEST"
    },
    "6544": {
      "op": "SWAP2"
    },
    "6545": {
      "op": "POP"
    },
    "6546": {
      "op": "POP"
    },
    "6547": {
      "op": "SWAP3"
    },
    "6548": {
      "op": "SWAP6"
    },
    "6549": {
      "op": "SWAP2"
    },
    "6550": {
      "op": "SWAP5"
    },
    "6551": {
      "op": "POP"
    },
    "6552": {
      "op": "SWAP3"
    },
    "6553": {
      "op": "POP"
    },
    "6554": {
      "jump": "o",
      "op": "JUMP"
    },
    "6555": {
      "op": "JUMPDEST"
    },
    "6556": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6558": {
      "op": "DUP1"
    },
    "6559": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6561": {
      "op": "DUP4"
    },
    "6562": {
      "op": "DUP6"
    },
    "6563": {
      "op": "SUB"
    },
    "6564": {
      "op": "SLT"
    },
    "6565": {
      "op": "ISZERO"
    },
    "6566": {
      "op": "PUSH2",
      "value": "0x19AE"
    },
    "6569": {
      "op": "JUMPI"
    },
    "6570": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6572": {
      "op": "DUP1"
    },
    "6573": {
      "op": "REVERT"
    },
    "6574": {
      "op": "JUMPDEST"
    },
    "6575": {
      "op": "DUP3"
    },
    "6576": {
      "op": "CALLDATALOAD"
    },
    "6577": {
      "op": "SWAP2"
    },
    "6578": {
      "op": "POP"
    },
    "6579": {
      "op": "PUSH2",
      "value": "0x19BE"
    },
    "6582": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6584": {
      "op": "DUP5"
    },
    "6585": {
      "op": "ADD"
    },
    "6586": {
      "op": "PUSH2",
      "value": "0x133B"
    },
    "6589": {
      "jump": "i",
      "op": "JUMP"
    },
    "6590": {
      "op": "JUMPDEST"
    },
    "6591": {
      "op": "SWAP1"
    },
    "6592": {
      "op": "POP"
    },
    "6593": {
      "op": "SWAP3"
    },
    "6594": {
      "op": "POP"
    },
    "6595": {
      "op": "SWAP3"
    },
    "6596": {
      "op": "SWAP1"
    },
    "6597": {
      "op": "POP"
    },
    "6598": {
      "jump": "o",
      "op": "JUMP"
    },
    "6599": {
      "op": "JUMPDEST"
    },
    "6600": {
      "op": "DUP4"
    },
    "6601": {
      "op": "ISZERO"
    },
    "6602": {
      "op": "ISZERO"
    },
    "6603": {
      "op": "DUP2"
    },
    "6604": {
      "op": "MSTORE"
    },
    "6605": {
      "op": "DUP3"
    },
    "6606": {
      "op": "ISZERO"
    },
    "6607": {
      "op": "ISZERO"
    },
    "6608": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6610": {
      "op": "DUP3"
    },
    "6611": {
      "op": "ADD"
    },
    "6612": {
      "op": "MSTORE"
    },
    "6613": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6615": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6617": {
      "op": "DUP3"
    },
    "6618": {
      "op": "ADD"
    },
    "6619": {
      "op": "MSTORE"
    },
    "6620": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6622": {
      "op": "PUSH2",
      "value": "0x19EA"
    },
    "6625": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6627": {
      "op": "DUP4"
    },
    "6628": {
      "op": "ADD"
    },
    "6629": {
      "op": "DUP5"
    },
    "6630": {
      "op": "PUSH2",
      "value": "0x15F2"
    },
    "6633": {
      "jump": "i",
      "op": "JUMP"
    },
    "6634": {
      "op": "JUMPDEST"
    },
    "6635": {
      "op": "SWAP6"
    },
    "6636": {
      "op": "SWAP5"
    },
    "6637": {
      "op": "POP"
    },
    "6638": {
      "op": "POP"
    },
    "6639": {
      "op": "POP"
    },
    "6640": {
      "op": "POP"
    },
    "6641": {
      "op": "POP"
    },
    "6642": {
      "jump": "o",
      "op": "JUMP"
    },
    "6643": {
      "op": "JUMPDEST"
    },
    "6644": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6648": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6650": {
      "op": "SHL"
    },
    "6651": {
      "op": "SUB"
    },
    "6652": {
      "op": "DUP11"
    },
    "6653": {
      "op": "AND"
    },
    "6654": {
      "op": "DUP2"
    },
    "6655": {
      "op": "MSTORE"
    },
    "6656": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6658": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "6661": {
      "op": "PUSH2",
      "value": "0x1A11"
    },
    "6664": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6666": {
      "op": "DUP5"
    },
    "6667": {
      "op": "ADD"
    },
    "6668": {
      "op": "DUP13"
    },
    "6669": {
      "op": "PUSH2",
      "value": "0x17E2"
    },
    "6672": {
      "jump": "i",
      "op": "JUMP"
    },
    "6673": {
      "op": "JUMPDEST"
    },
    "6674": {
      "op": "DUP1"
    },
    "6675": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6677": {
      "op": "DUP5"
    },
    "6678": {
      "op": "ADD"
    },
    "6679": {
      "op": "MSTORE"
    },
    "6680": {
      "op": "PUSH2",
      "value": "0x1A23"
    },
    "6683": {
      "op": "DUP2"
    },
    "6684": {
      "op": "DUP5"
    },
    "6685": {
      "op": "ADD"
    },
    "6686": {
      "op": "DUP12"
    },
    "6687": {
      "op": "PUSH2",
      "value": "0x15F2"
    },
    "6690": {
      "jump": "i",
      "op": "JUMP"
    },
    "6691": {
      "op": "JUMPDEST"
    },
    "6692": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6694": {
      "op": "DUP5"
    },
    "6695": {
      "op": "ADD"
    },
    "6696": {
      "op": "SWAP10"
    },
    "6697": {
      "op": "SWAP1"
    },
    "6698": {
      "op": "SWAP10"
    },
    "6699": {
      "op": "MSTORE"
    },
    "6700": {
      "op": "POP"
    },
    "6701": {
      "op": "POP"
    },
    "6702": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6704": {
      "op": "SWAP6"
    },
    "6705": {
      "op": "DUP7"
    },
    "6706": {
      "op": "AND"
    },
    "6707": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6709": {
      "op": "DUP3"
    },
    "6710": {
      "op": "ADD"
    },
    "6711": {
      "op": "MSTORE"
    },
    "6712": {
      "op": "SWAP4"
    },
    "6713": {
      "op": "SWAP1"
    },
    "6714": {
      "op": "SWAP5"
    },
    "6715": {
      "op": "AND"
    },
    "6716": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6718": {
      "op": "DUP5"
    },
    "6719": {
      "op": "ADD"
    },
    "6720": {
      "op": "MSTORE"
    },
    "6721": {
      "op": "SWAP1"
    },
    "6722": {
      "op": "ISZERO"
    },
    "6723": {
      "op": "ISZERO"
    },
    "6724": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "6726": {
      "op": "DUP4"
    },
    "6727": {
      "op": "ADD"
    },
    "6728": {
      "op": "MSTORE"
    },
    "6729": {
      "op": "ISZERO"
    },
    "6730": {
      "op": "ISZERO"
    },
    "6731": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6733": {
      "op": "DUP3"
    },
    "6734": {
      "op": "ADD"
    },
    "6735": {
      "op": "MSTORE"
    },
    "6736": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "6739": {
      "op": "ADD"
    },
    "6740": {
      "op": "MSTORE"
    },
    "6741": {
      "op": "SWAP4"
    },
    "6742": {
      "op": "SWAP3"
    },
    "6743": {
      "op": "POP"
    },
    "6744": {
      "op": "POP"
    },
    "6745": {
      "op": "POP"
    },
    "6746": {
      "jump": "o",
      "op": "JUMP"
    },
    "6747": {
      "op": "JUMPDEST"
    },
    "6748": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6750": {
      "op": "DUP1"
    },
    "6751": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6753": {
      "op": "DUP1"
    },
    "6754": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6756": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6758": {
      "op": "DUP7"
    },
    "6759": {
      "op": "DUP9"
    },
    "6760": {
      "op": "SUB"
    },
    "6761": {
      "op": "SLT"
    },
    "6762": {
      "op": "ISZERO"
    },
    "6763": {
      "op": "PUSH2",
      "value": "0x1A73"
    },
    "6766": {
      "op": "JUMPI"
    },
    "6767": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6769": {
      "op": "DUP1"
    },
    "6770": {
      "op": "REVERT"
    },
    "6771": {
      "op": "JUMPDEST"
    },
    "6772": {
      "op": "PUSH2",
      "value": "0x1A7C"
    },
    "6775": {
      "op": "DUP7"
    },
    "6776": {
      "op": "PUSH2",
      "value": "0x133B"
    },
    "6779": {
      "jump": "i",
      "op": "JUMP"
    },
    "6780": {
      "op": "JUMPDEST"
    },
    "6781": {
      "op": "SWAP5"
    },
    "6782": {
      "op": "POP"
    },
    "6783": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6785": {
      "op": "DUP7"
    },
    "6786": {
      "op": "ADD"
    },
    "6787": {
      "op": "CALLDATALOAD"
    },
    "6788": {
      "op": "SWAP4"
    },
    "6789": {
      "op": "POP"
    },
    "6790": {
      "op": "PUSH2",
      "value": "0x1A91"
    },
    "6793": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6795": {
      "op": "DUP8"
    },
    "6796": {
      "op": "ADD"
    },
    "6797": {
      "op": "PUSH2",
      "value": "0x133B"
    },
    "6800": {
      "jump": "i",
      "op": "JUMP"
    },
    "6801": {
      "op": "JUMPDEST"
    },
    "6802": {
      "op": "SWAP3"
    },
    "6803": {
      "op": "POP"
    },
    "6804": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6806": {
      "op": "DUP7"
    },
    "6807": {
      "op": "ADD"
    },
    "6808": {
      "op": "CALLDATALOAD"
    },
    "6809": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6818": {
      "op": "DUP2"
    },
    "6819": {
      "op": "GT"
    },
    "6820": {
      "op": "ISZERO"
    },
    "6821": {
      "op": "PUSH2",
      "value": "0x14CD"
    },
    "6824": {
      "op": "JUMPI"
    },
    "6825": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6827": {
      "op": "DUP1"
    },
    "6828": {
      "op": "REVERT"
    },
    "6829": {
      "op": "JUMPDEST"
    },
    "6830": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6832": {
      "op": "DUP1"
    },
    "6833": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6835": {
      "op": "DUP1"
    },
    "6836": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6838": {
      "op": "DUP6"
    },
    "6839": {
      "op": "DUP8"
    },
    "6840": {
      "op": "SUB"
    },
    "6841": {
      "op": "SLT"
    },
    "6842": {
      "op": "ISZERO"
    },
    "6843": {
      "op": "PUSH2",
      "value": "0x1AC3"
    },
    "6846": {
      "op": "JUMPI"
    },
    "6847": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6849": {
      "op": "DUP1"
    },
    "6850": {
      "op": "REVERT"
    },
    "6851": {
      "op": "JUMPDEST"
    },
    "6852": {
      "op": "PUSH2",
      "value": "0x1ACC"
    },
    "6855": {
      "op": "DUP6"
    },
    "6856": {
      "op": "PUSH2",
      "value": "0x133B"
    },
    "6859": {
      "jump": "i",
      "op": "JUMP"
    },
    "6860": {
      "op": "JUMPDEST"
    },
    "6861": {
      "op": "SWAP4"
    },
    "6862": {
      "op": "POP"
    },
    "6863": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6865": {
      "op": "DUP6"
    },
    "6866": {
      "op": "ADD"
    },
    "6867": {
      "op": "CALLDATALOAD"
    },
    "6868": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6877": {
      "op": "DUP1"
    },
    "6878": {
      "op": "DUP3"
    },
    "6879": {
      "op": "GT"
    },
    "6880": {
      "op": "ISZERO"
    },
    "6881": {
      "op": "PUSH2",
      "value": "0x1AE9"
    },
    "6884": {
      "op": "JUMPI"
    },
    "6885": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6887": {
      "op": "DUP1"
    },
    "6888": {
      "op": "REVERT"
    },
    "6889": {
      "op": "JUMPDEST"
    },
    "6890": {
      "op": "PUSH2",
      "value": "0x1AF5"
    },
    "6893": {
      "op": "DUP9"
    },
    "6894": {
      "op": "DUP4"
    },
    "6895": {
      "op": "DUP10"
    },
    "6896": {
      "op": "ADD"
    },
    "6897": {
      "op": "PUSH2",
      "value": "0x136D"
    },
    "6900": {
      "jump": "i",
      "op": "JUMP"
    },
    "6901": {
      "op": "JUMPDEST"
    },
    "6902": {
      "op": "SWAP5"
    },
    "6903": {
      "op": "POP"
    },
    "6904": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6906": {
      "op": "DUP8"
    },
    "6907": {
      "op": "ADD"
    },
    "6908": {
      "op": "CALLDATALOAD"
    },
    "6909": {
      "op": "SWAP4"
    },
    "6910": {
      "op": "POP"
    },
    "6911": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6913": {
      "op": "DUP8"
    },
    "6914": {
      "op": "ADD"
    },
    "6915": {
      "op": "CALLDATALOAD"
    },
    "6916": {
      "op": "SWAP2"
    },
    "6917": {
      "op": "POP"
    },
    "6918": {
      "op": "DUP1"
    },
    "6919": {
      "op": "DUP3"
    },
    "6920": {
      "op": "GT"
    },
    "6921": {
      "op": "ISZERO"
    },
    "6922": {
      "op": "PUSH2",
      "value": "0x1982"
    },
    "6925": {
      "op": "JUMPI"
    },
    "6926": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6928": {
      "op": "DUP1"
    },
    "6929": {
      "op": "REVERT"
    },
    "6930": {
      "op": "JUMPDEST"
    },
    "6931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6933": {
      "op": "DUP1"
    },
    "6934": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6936": {
      "op": "SHL"
    },
    "6937": {
      "op": "SUB"
    },
    "6938": {
      "op": "DUP6"
    },
    "6939": {
      "op": "AND"
    },
    "6940": {
      "op": "DUP2"
    },
    "6941": {
      "op": "MSTORE"
    },
    "6942": {
      "op": "DUP4"
    },
    "6943": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6945": {
      "op": "DUP3"
    },
    "6946": {
      "op": "ADD"
    },
    "6947": {
      "op": "MSTORE"
    },
    "6948": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6950": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6952": {
      "op": "DUP3"
    },
    "6953": {
      "op": "ADD"
    },
    "6954": {
      "op": "MSTORE"
    },
    "6955": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6957": {
      "op": "PUSH2",
      "value": "0x1B39"
    },
    "6960": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6962": {
      "op": "DUP4"
    },
    "6963": {
      "op": "ADD"
    },
    "6964": {
      "op": "DUP6"
    },
    "6965": {
      "op": "PUSH2",
      "value": "0x15F2"
    },
    "6968": {
      "jump": "i",
      "op": "JUMP"
    },
    "6969": {
      "op": "JUMPDEST"
    },
    "6970": {
      "op": "SWAP1"
    },
    "6971": {
      "op": "POP"
    },
    "6972": {
      "op": "DUP3"
    },
    "6973": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6975": {
      "op": "DUP4"
    },
    "6976": {
      "op": "ADD"
    },
    "6977": {
      "op": "MSTORE"
    },
    "6978": {
      "op": "SWAP6"
    },
    "6979": {
      "op": "SWAP5"
    },
    "6980": {
      "op": "POP"
    },
    "6981": {
      "op": "POP"
    },
    "6982": {
      "op": "POP"
    },
    "6983": {
      "op": "POP"
    },
    "6984": {
      "op": "POP"
    },
    "6985": {
      "jump": "o",
      "op": "JUMP"
    },
    "6986": {
      "op": "JUMPDEST"
    },
    "6987": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6989": {
      "op": "DUP3"
    },
    "6990": {
      "op": "MLOAD"
    },
    "6991": {
      "op": "PUSH2",
      "value": "0x1B5C"
    },
    "6994": {
      "op": "DUP2"
    },
    "6995": {
      "op": "DUP5"
    },
    "6996": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6998": {
      "op": "DUP8"
    },
    "6999": {
      "op": "ADD"
    },
    "7000": {
      "op": "PUSH2",
      "value": "0x15C6"
    },
    "7003": {
      "jump": "i",
      "op": "JUMP"
    },
    "7004": {
      "op": "JUMPDEST"
    },
    "7005": {
      "op": "SWAP2"
    },
    "7006": {
      "op": "SWAP1"
    },
    "7007": {
      "op": "SWAP2"
    },
    "7008": {
      "op": "ADD"
    },
    "7009": {
      "op": "SWAP3"
    },
    "7010": {
      "op": "SWAP2"
    },
    "7011": {
      "op": "POP"
    },
    "7012": {
      "op": "POP"
    },
    "7013": {
      "jump": "o",
      "op": "JUMP"
    },
    "7014": {
      "op": "JUMPDEST"
    },
    "7015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7017": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7019": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7021": {
      "op": "SHL"
    },
    "7022": {
      "op": "SUB"
    },
    "7023": {
      "op": "DUP7"
    },
    "7024": {
      "op": "DUP2"
    },
    "7025": {
      "op": "AND"
    },
    "7026": {
      "op": "DUP3"
    },
    "7027": {
      "op": "MSTORE"
    },
    "7028": {
      "op": "DUP6"
    },
    "7029": {
      "op": "AND"
    },
    "7030": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7032": {
      "op": "DUP3"
    },
    "7033": {
      "op": "ADD"
    },
    "7034": {
      "op": "MSTORE"
    },
    "7035": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7037": {
      "op": "DUP2"
    },
    "7038": {
      "op": "ADD"
    },
    "7039": {
      "op": "DUP5"
    },
    "7040": {
      "op": "SWAP1"
    },
    "7041": {
      "op": "MSTORE"
    },
    "7042": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7044": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7046": {
      "op": "DUP3"
    },
    "7047": {
      "op": "ADD"
    },
    "7048": {
      "op": "DUP2"
    },
    "7049": {
      "op": "SWAP1"
    },
    "7050": {
      "op": "MSTORE"
    },
    "7051": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7053": {
      "op": "SWAP1"
    },
    "7054": {
      "op": "PUSH2",
      "value": "0x1B99"
    },
    "7057": {
      "op": "SWAP1"
    },
    "7058": {
      "op": "DUP4"
    },
    "7059": {
      "op": "ADD"
    },
    "7060": {
      "op": "DUP6"
    },
    "7061": {
      "op": "PUSH2",
      "value": "0x15F2"
    },
    "7064": {
      "jump": "i",
      "op": "JUMP"
    },
    "7065": {
      "op": "JUMPDEST"
    },
    "7066": {
      "op": "SWAP1"
    },
    "7067": {
      "op": "POP"
    },
    "7068": {
      "op": "DUP3"
    },
    "7069": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7071": {
      "op": "DUP4"
    },
    "7072": {
      "op": "ADD"
    },
    "7073": {
      "op": "MSTORE"
    },
    "7074": {
      "op": "SWAP7"
    },
    "7075": {
      "op": "SWAP6"
    },
    "7076": {
      "op": "POP"
    },
    "7077": {
      "op": "POP"
    },
    "7078": {
      "op": "POP"
    },
    "7079": {
      "op": "POP"
    },
    "7080": {
      "op": "POP"
    },
    "7081": {
      "op": "POP"
    },
    "7082": {
      "jump": "o",
      "op": "JUMP"
    },
    "7083": {
      "op": "JUMPDEST"
    },
    "7084": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7086": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7088": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7090": {
      "op": "SHL"
    },
    "7091": {
      "op": "SUB"
    },
    "7092": {
      "op": "DUP8"
    },
    "7093": {
      "op": "AND"
    },
    "7094": {
      "op": "DUP2"
    },
    "7095": {
      "op": "MSTORE"
    },
    "7096": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "7098": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7100": {
      "op": "DUP3"
    },
    "7101": {
      "op": "ADD"
    },
    "7102": {
      "op": "DUP2"
    },
    "7103": {
      "op": "SWAP1"
    },
    "7104": {
      "op": "MSTORE"
    },
    "7105": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7107": {
      "op": "SWAP1"
    },
    "7108": {
      "op": "PUSH2",
      "value": "0x1BCF"
    },
    "7111": {
      "op": "SWAP1"
    },
    "7112": {
      "op": "DUP4"
    },
    "7113": {
      "op": "ADD"
    },
    "7114": {
      "op": "DUP9"
    },
    "7115": {
      "op": "PUSH2",
      "value": "0x15F2"
    },
    "7118": {
      "jump": "i",
      "op": "JUMP"
    },
    "7119": {
      "op": "JUMPDEST"
    },
    "7120": {
      "op": "DUP3"
    },
    "7121": {
      "op": "DUP2"
    },
    "7122": {
      "op": "SUB"
    },
    "7123": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7125": {
      "op": "DUP5"
    },
    "7126": {
      "op": "ADD"
    },
    "7127": {
      "op": "MSTORE"
    },
    "7128": {
      "op": "PUSH2",
      "value": "0x1BE1"
    },
    "7131": {
      "op": "DUP2"
    },
    "7132": {
      "op": "DUP9"
    },
    "7133": {
      "op": "PUSH2",
      "value": "0x15F2"
    },
    "7136": {
      "jump": "i",
      "op": "JUMP"
    },
    "7137": {
      "op": "JUMPDEST"
    },
    "7138": {
      "op": "SWAP1"
    },
    "7139": {
      "op": "POP"
    },
    "7140": {
      "op": "DUP6"
    },
    "7141": {
      "op": "ISZERO"
    },
    "7142": {
      "op": "ISZERO"
    },
    "7143": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7145": {
      "op": "DUP5"
    },
    "7146": {
      "op": "ADD"
    },
    "7147": {
      "op": "MSTORE"
    },
    "7148": {
      "op": "DUP5"
    },
    "7149": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7151": {
      "op": "DUP5"
    },
    "7152": {
      "op": "ADD"
    },
    "7153": {
      "op": "MSTORE"
    },
    "7154": {
      "op": "DUP3"
    },
    "7155": {
      "op": "DUP2"
    },
    "7156": {
      "op": "SUB"
    },
    "7157": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7159": {
      "op": "DUP5"
    },
    "7160": {
      "op": "ADD"
    },
    "7161": {
      "op": "MSTORE"
    },
    "7162": {
      "op": "PUSH2",
      "value": "0x1C03"
    },
    "7165": {
      "op": "DUP2"
    },
    "7166": {
      "op": "DUP6"
    },
    "7167": {
      "op": "PUSH2",
      "value": "0x15F2"
    },
    "7170": {
      "jump": "i",
      "op": "JUMP"
    },
    "7171": {
      "op": "JUMPDEST"
    },
    "7172": {
      "op": "SWAP10"
    },
    "7173": {
      "op": "SWAP9"
    },
    "7174": {
      "op": "POP"
    },
    "7175": {
      "op": "POP"
    },
    "7176": {
      "op": "POP"
    },
    "7177": {
      "op": "POP"
    },
    "7178": {
      "op": "POP"
    },
    "7179": {
      "op": "POP"
    },
    "7180": {
      "op": "POP"
    },
    "7181": {
      "op": "POP"
    },
    "7182": {
      "op": "POP"
    },
    "7183": {
      "jump": "o",
      "op": "JUMP"
    },
    "7184": {
      "op": "JUMPDEST"
    },
    "7185": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7187": {
      "op": "DUP2"
    },
    "7188": {
      "op": "DUP2"
    },
    "7189": {
      "op": "SHR"
    },
    "7190": {
      "op": "SWAP1"
    },
    "7191": {
      "op": "DUP3"
    },
    "7192": {
      "op": "AND"
    },
    "7193": {
      "op": "DUP1"
    },
    "7194": {
      "op": "PUSH2",
      "value": "0x1C24"
    },
    "7197": {
      "op": "JUMPI"
    },
    "7198": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "7200": {
      "op": "DUP3"
    },
    "7201": {
      "op": "AND"
    },
    "7202": {
      "op": "SWAP2"
    },
    "7203": {
      "op": "POP"
    },
    "7204": {
      "op": "JUMPDEST"
    },
    "7205": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7207": {
      "op": "DUP3"
    },
    "7208": {
      "op": "LT"
    },
    "7209": {
      "op": "DUP2"
    },
    "7210": {
      "op": "EQ"
    },
    "7211": {
      "op": "ISZERO"
    },
    "7212": {
      "op": "PUSH2",
      "value": "0x1C45"
    },
    "7215": {
      "op": "JUMPI"
    },
    "7216": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7221": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7223": {
      "op": "SHL"
    },
    "7224": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7226": {
      "op": "MSTORE"
    },
    "7227": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "7229": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7231": {
      "op": "MSTORE"
    },
    "7232": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7234": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7236": {
      "op": "REVERT"
    },
    "7237": {
      "op": "JUMPDEST"
    },
    "7238": {
      "op": "POP"
    },
    "7239": {
      "op": "SWAP2"
    },
    "7240": {
      "op": "SWAP1"
    },
    "7241": {
      "op": "POP"
    },
    "7242": {
      "jump": "o",
      "op": "JUMP"
    },
    "7243": {
      "op": "JUMPDEST"
    },
    "7244": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7246": {
      "op": "DUP5"
    },
    "7247": {
      "op": "AND"
    },
    "7248": {
      "op": "DUP2"
    },
    "7249": {
      "op": "MSTORE"
    },
    "7250": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7252": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7254": {
      "op": "DUP3"
    },
    "7255": {
      "op": "ADD"
    },
    "7256": {
      "op": "MSTORE"
    },
    "7257": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7259": {
      "op": "PUSH2",
      "value": "0x1C67"
    },
    "7262": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7264": {
      "op": "DUP4"
    },
    "7265": {
      "op": "ADD"
    },
    "7266": {
      "op": "DUP6"
    },
    "7267": {
      "op": "PUSH2",
      "value": "0x15F2"
    },
    "7270": {
      "jump": "i",
      "op": "JUMP"
    },
    "7271": {
      "op": "JUMPDEST"
    },
    "7272": {
      "op": "SWAP1"
    },
    "7273": {
      "op": "POP"
    },
    "7274": {
      "op": "DUP3"
    },
    "7275": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7277": {
      "op": "DUP4"
    },
    "7278": {
      "op": "ADD"
    },
    "7279": {
      "op": "MSTORE"
    },
    "7280": {
      "op": "SWAP5"
    },
    "7281": {
      "op": "SWAP4"
    },
    "7282": {
      "op": "POP"
    },
    "7283": {
      "op": "POP"
    },
    "7284": {
      "op": "POP"
    },
    "7285": {
      "op": "POP"
    },
    "7286": {
      "jump": "o",
      "op": "JUMP"
    },
    "7287": {
      "op": "JUMPDEST"
    },
    "7288": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7290": {
      "op": "DUP2"
    },
    "7291": {
      "op": "MSTORE"
    },
    "7292": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7294": {
      "op": "PUSH2",
      "value": "0x1C8A"
    },
    "7297": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7299": {
      "op": "DUP4"
    },
    "7300": {
      "op": "ADD"
    },
    "7301": {
      "op": "DUP7"
    },
    "7302": {
      "op": "PUSH2",
      "value": "0x15F2"
    },
    "7305": {
      "jump": "i",
      "op": "JUMP"
    },
    "7306": {
      "op": "JUMPDEST"
    },
    "7307": {
      "op": "DUP3"
    },
    "7308": {
      "op": "DUP2"
    },
    "7309": {
      "op": "SUB"
    },
    "7310": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7312": {
      "op": "DUP5"
    },
    "7313": {
      "op": "ADD"
    },
    "7314": {
      "op": "MSTORE"
    },
    "7315": {
      "op": "PUSH2",
      "value": "0x1C9C"
    },
    "7318": {
      "op": "DUP2"
    },
    "7319": {
      "op": "DUP7"
    },
    "7320": {
      "op": "PUSH2",
      "value": "0x15F2"
    },
    "7323": {
      "jump": "i",
      "op": "JUMP"
    },
    "7324": {
      "op": "JUMPDEST"
    },
    "7325": {
      "op": "SWAP1"
    },
    "7326": {
      "op": "POP"
    },
    "7327": {
      "op": "DUP3"
    },
    "7328": {
      "op": "DUP2"
    },
    "7329": {
      "op": "SUB"
    },
    "7330": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7332": {
      "op": "DUP5"
    },
    "7333": {
      "op": "ADD"
    },
    "7334": {
      "op": "MSTORE"
    },
    "7335": {
      "op": "PUSH2",
      "value": "0x1CB0"
    },
    "7338": {
      "op": "DUP2"
    },
    "7339": {
      "op": "DUP6"
    },
    "7340": {
      "op": "PUSH2",
      "value": "0x15F2"
    },
    "7343": {
      "jump": "i",
      "op": "JUMP"
    },
    "7344": {
      "op": "JUMPDEST"
    },
    "7345": {
      "op": "SWAP7"
    },
    "7346": {
      "op": "SWAP6"
    },
    "7347": {
      "op": "POP"
    },
    "7348": {
      "op": "POP"
    },
    "7349": {
      "op": "POP"
    },
    "7350": {
      "op": "POP"
    },
    "7351": {
      "op": "POP"
    },
    "7352": {
      "op": "POP"
    },
    "7353": {
      "jump": "o",
      "op": "JUMP"
    },
    "7354": {
      "op": "JUMPDEST"
    },
    "7355": {
      "op": "DUP5"
    },
    "7356": {
      "op": "DUP2"
    },
    "7357": {
      "op": "MSTORE"
    },
    "7358": {
      "op": "DUP4"
    },
    "7359": {
      "op": "ISZERO"
    },
    "7360": {
      "op": "ISZERO"
    },
    "7361": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7363": {
      "op": "DUP3"
    },
    "7364": {
      "op": "ADD"
    },
    "7365": {
      "op": "MSTORE"
    },
    "7366": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7368": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7370": {
      "op": "DUP3"
    },
    "7371": {
      "op": "ADD"
    },
    "7372": {
      "op": "MSTORE"
    },
    "7373": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7375": {
      "op": "PUSH2",
      "value": "0x1CDB"
    },
    "7378": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7380": {
      "op": "DUP4"
    },
    "7381": {
      "op": "ADD"
    },
    "7382": {
      "op": "DUP6"
    },
    "7383": {
      "op": "PUSH2",
      "value": "0x15F2"
    },
    "7386": {
      "jump": "i",
      "op": "JUMP"
    },
    "7387": {
      "op": "JUMPDEST"
    },
    "7388": {
      "op": "DUP3"
    },
    "7389": {
      "op": "DUP2"
    },
    "7390": {
      "op": "SUB"
    },
    "7391": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7393": {
      "op": "DUP5"
    },
    "7394": {
      "op": "ADD"
    },
    "7395": {
      "op": "MSTORE"
    },
    "7396": {
      "op": "PUSH2",
      "value": "0x1CED"
    },
    "7399": {
      "op": "DUP2"
    },
    "7400": {
      "op": "DUP6"
    },
    "7401": {
      "op": "PUSH2",
      "value": "0x15F2"
    },
    "7404": {
      "jump": "i",
      "op": "JUMP"
    },
    "7405": {
      "op": "JUMPDEST"
    },
    "7406": {
      "op": "SWAP8"
    },
    "7407": {
      "op": "SWAP7"
    },
    "7408": {
      "op": "POP"
    },
    "7409": {
      "op": "POP"
    },
    "7410": {
      "op": "POP"
    },
    "7411": {
      "op": "POP"
    },
    "7412": {
      "op": "POP"
    },
    "7413": {
      "op": "POP"
    },
    "7414": {
      "op": "POP"
    },
    "7415": {
      "jump": "o",
      "op": "JUMP"
    },
    "7416": {
      "op": "JUMPDEST"
    },
    "7417": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7421": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7423": {
      "op": "SHL"
    },
    "7424": {
      "op": "SUB"
    },
    "7425": {
      "op": "DUP7"
    },
    "7426": {
      "op": "DUP2"
    },
    "7427": {
      "op": "AND"
    },
    "7428": {
      "op": "DUP3"
    },
    "7429": {
      "op": "MSTORE"
    },
    "7430": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7432": {
      "op": "DUP3"
    },
    "7433": {
      "op": "ADD"
    },
    "7434": {
      "op": "DUP7"
    },
    "7435": {
      "op": "SWAP1"
    },
    "7436": {
      "op": "MSTORE"
    },
    "7437": {
      "op": "DUP5"
    },
    "7438": {
      "op": "AND"
    },
    "7439": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7441": {
      "op": "DUP3"
    },
    "7442": {
      "op": "ADD"
    },
    "7443": {
      "op": "MSTORE"
    },
    "7444": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7446": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7448": {
      "op": "DUP3"
    },
    "7449": {
      "op": "ADD"
    },
    "7450": {
      "op": "DUP2"
    },
    "7451": {
      "op": "SWAP1"
    },
    "7452": {
      "op": "MSTORE"
    },
    "7453": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7455": {
      "op": "SWAP1"
    },
    "7456": {
      "op": "PUSH2",
      "value": "0x1B99"
    },
    "7459": {
      "op": "SWAP1"
    },
    "7460": {
      "op": "DUP4"
    },
    "7461": {
      "op": "ADD"
    },
    "7462": {
      "op": "DUP6"
    },
    "7463": {
      "op": "PUSH2",
      "value": "0x15F2"
    },
    "7466": {
      "jump": "i",
      "op": "JUMP"
    },
    "7467": {
      "op": "JUMPDEST"
    },
    "7468": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7470": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7472": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7474": {
      "op": "SHL"
    },
    "7475": {
      "op": "SUB"
    },
    "7476": {
      "op": "DUP6"
    },
    "7477": {
      "op": "AND"
    },
    "7478": {
      "op": "DUP2"
    },
    "7479": {
      "op": "MSTORE"
    },
    "7480": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7482": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7484": {
      "op": "DUP3"
    },
    "7485": {
      "op": "ADD"
    },
    "7486": {
      "op": "DUP2"
    },
    "7487": {
      "op": "SWAP1"
    },
    "7488": {
      "op": "MSTORE"
    },
    "7489": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7491": {
      "op": "SWAP1"
    },
    "7492": {
      "op": "PUSH2",
      "value": "0x1D4F"
    },
    "7495": {
      "op": "SWAP1"
    },
    "7496": {
      "op": "DUP4"
    },
    "7497": {
      "op": "ADD"
    },
    "7498": {
      "op": "DUP7"
    },
    "7499": {
      "op": "PUSH2",
      "value": "0x15F2"
    },
    "7502": {
      "jump": "i",
      "op": "JUMP"
    },
    "7503": {
      "op": "JUMPDEST"
    },
    "7504": {
      "op": "DUP5"
    },
    "7505": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7507": {
      "op": "DUP5"
    },
    "7508": {
      "op": "ADD"
    },
    "7509": {
      "op": "MSTORE"
    },
    "7510": {
      "op": "DUP3"
    },
    "7511": {
      "op": "DUP2"
    },
    "7512": {
      "op": "SUB"
    },
    "7513": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7515": {
      "op": "DUP5"
    },
    "7516": {
      "op": "ADD"
    },
    "7517": {
      "op": "MSTORE"
    },
    "7518": {
      "op": "PUSH2",
      "value": "0x1CED"
    },
    "7521": {
      "op": "DUP2"
    },
    "7522": {
      "op": "DUP6"
    },
    "7523": {
      "op": "PUSH2",
      "value": "0x15F2"
    },
    "7526": {
      "jump": "i",
      "op": "JUMP"
    }
  },
  "sha1": "3f55ac41e9fa6de4b109c180e69a7be1ca46fffd",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.11;\n\nimport \"./CLStorage.sol\";\n\n/// @title Contract to implement and test the basic fuctions of CLHouses\n/// @author Leonardo Urrego\n/// @notice This contract for test only the most basic interactions\ncontract CLHouse is CLStorage {\n\n    /// @notice Create a new CLH\n    /// @dev Some parameters can be ignored depending on the governance model\n    /// @param _owner The address of the deployed wallet\n    /// @param _houseName Name given by the owner\n    /// @param _housePrivate If is set to 1, the CLH is set to private\n    /// @param _govModel keccak256 hash of the governance model, see the __GOV_* constans\n    // / @param _govRuleMaxManagerMembers Max of manager member that CLH can accept (only for COMMITTEE )\n    // / @param _govRuleMaxActiveMembers Max of all members (including managers)\n    // / @param _govRuleApprovPercentage Percentage for approval o reject proposal based on `numManagerMembers`\n    /// @param _whiteListWallets Whitelist of address for invitate as managers\n    constructor(\n        address _owner,\n        string memory _houseName,\n        bool _housePrivate,\n        bytes32 _govModel,\n        uint8[3] memory _govRules,\n        // uint8 _govRuleMaxManagerMembers,\n        // uint8 _govRuleMaxActiveMembers,\n        // uint8 _govRuleApprovPercentage,\n        address[4] memory _CCL,\n        // address _CLCMemberManagement,\n        // address _CLCGovernance,\n        // address _CLLConstructor,\n        // address _APICLH,\n        address[] memory _whiteListWallets\n    )\n    {\n        (bool successDGTCLL, bytes memory dataDLGTCLL) = _CCL[2].delegatecall(\n            abi.encodeWithSignature(\n                \"CLLCLHConstructor(address,string,bool,bytes32,uint8[3],address[3],address[])\",\n                _owner, \n                _houseName,\n                _housePrivate,\n                _govModel,\n                _govRules,\n                // _govRules[0], // _govRuleMaxManagerMembers,\n                // _govRules[1], // _govRuleMaxActiveMembers,\n                // _govRules[2], // _govRuleApprovPercentage,\n                [ _CCL[0], _CCL[1], _CCL[3] ],\n                // _CCL[0], // _CLCMemberManagement,\n                // _CCL[1], // _CLCGovernance,\n                // _CCL[3], // _APICLH,\n                _whiteListWallets\n            )\n        );\n\n        if( !successDGTCLL ) {\n            assembly {\n                let ptr := mload(0x40)\n                let size := returndatasize()\n                returndatacopy(ptr, 0, size)\n                revert(ptr, size)\n            }\n        }\n    }\n\n    /// @notice Execute (or reject) a proposal computing the votes and the governance model\n    /// @dev Normally is called internally after each vote\n    /// @param _propId ID of the proposal, based on `arrProposals`\n    /// @return status True if the proposal can be execute, false in other cases\n    /// @return message result of the transaction\n    function ExecProp(\n        uint256 _propId\n    )\n        public\n        returns(\n            bool status,\n            string memory message\n        )\n    {\n        (bool successDGTCLL, bytes memory dataDLGTCLL) = CLCGovernance.delegatecall(\n            abi.encodeWithSignature(\n                \"_ExecProp(uint256)\",\n                _propId\n            )\n        );\n\n        if( !successDGTCLL ) {\n            assembly {\n                let ptr := mload(0x40)\n                let size := returndatasize()\n                returndatacopy(ptr, 0, size)\n                revert(ptr, size)\n            }\n        }\n\n        return ( true , \"Success executed proposal\" );\n    }\n\n    /// @notice Used to vote a proposal\n    /// @dev After vote the proposal automatically try to be executed\n    /// @param _propId ID of the proposal, based on `arrProposals`\n    /// @param _support True for accept, false to reject\n    /// @param _justification About your vote\n    /// @return true is the vote can be stored\n    function VoteProposal(\n        uint256 _propId,\n        bool _support,\n        string memory _justification,\n        bytes memory _signature\n    )\n        public\n        returns( bool )\n    {\n        (bool successDGTCLL, bytes memory dataDLGTCLL) = CLCGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"_VoteProposal(uint256,bool,string,bytes)\", \n                _propId,\n                _support,\n                _justification,\n                _signature\n            )\n        );\n\n        if( !successDGTCLL ) {\n            assembly {\n                let ptr := mload(0x40)\n                let size := returndatasize()\n                returndatacopy(ptr, 0, size)\n                revert(ptr, size)\n            }\n        }\n\n        return true;\n    }\n\n\n    /// @notice Generate a new proposal to invite a new member\n    /// @dev the execution of this proposal only create an invitation \n    /// @param _walletAddr  Address of the new user\n    /// @param _name Can be the nickname or other reference to the User\n    /// @param _description A text for the proposal\n    /// @param _isManager True if is for a manager member\n    /// @return propId ID of the new proposal, based on `arrProposals`\n    function PropInviteMember(\n        address _walletAddr,\n        string memory _name,\n        string memory _description,\n        bool _isManager,\n        uint256 _delayTime,\n        bytes memory _signature\n    )\n        external\n        returns( uint256 propId )\n    {\n        (bool successDGTCLL, bytes memory dataDLGTCLL) = CLCGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropInviteMember(address,string,string,bool,uint256,bytes)\", \n                _walletAddr,\n                _name,\n                _description,\n                _isManager,\n                _delayTime,\n                _signature\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            propId := mload(ptr)\n        }\n    }\n\n    /// @notice Generate a new proposal for remove a member\n    /// @dev The member can be a managaer\n    /// @param _walletAddr member Address to be removed\n    /// @param _description About the proposal\n    /// @return propId ID of the new proposal, based on `arrProposals`\n    function PropRemoveMember(\n        address _walletAddr,\n        string memory _description,\n        uint256 _delayTime,\n        bytes memory _signature\n    )\n        external\n        returns( uint256 propId )\n    {\n        (bool successDGTCLL, bytes memory dataDLGTCLL) = CLCGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropRemoveMember(address,string,uint256,bytes)\", \n                _walletAddr,\n                _description,\n                _delayTime,\n                _signature\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            propId := mload(ptr)\n        }\n    }\n\n    /// @notice generate a new proposal to transfer ETH in weis\n    /// @dev When execute this proposal, the transfer is made\n    /// @param _to Recipient address\n    /// @param _amountOutCLV Amount to transfer (in wei)\n    /// @param _description About this proposal\n    /// @return propId ID of the new proposal, based on `arrProposals`\n    function PropTxWei(\n        address _to,\n        uint256 _amountOutCLV,\n        string memory _description,\n        uint256 _delayTime\n    )\n        external\n        returns( uint256 propId )\n    {\n        (bool successDGTCLL, bytes memory dataDLGTCLL) = CLCGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropTxWei(address,uint256,string,uint256)\", \n                _to,\n                _amountOutCLV,\n                _description,\n                _delayTime\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            propId := mload(ptr)\n        }\n    }\n\n    /// @notice generate a new proposal to transfer ETH in weis\n    /// @dev When execute this proposal, the transfer is made\n    /// @param _to Recipient address\n    /// @param _amountOutCLV Amount to transfer (in wei)\n    /// @param _description About this proposal\n    /// @return propId ID of the new proposal, based on `arrProposals`\n    function PropTxERC20(\n        address _to,\n        uint256 _amountOutCLV,\n        address _tokenOutCLV,\n        string memory _description,\n        uint256 _delayTime\n    )\n        external\n        returns( uint256 propId )\n    {\n        (bool successDGTCLL, bytes memory dataDLGTCLL) = CLCGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropTxERC20(address,uint256,address,string,uint256)\", \n                _to,\n                _amountOutCLV,\n                _tokenOutCLV,\n                _description,\n                _delayTime\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            propId := mload(ptr)\n        }\n    }\n\n    /// @notice Generate a new proposal for change some governance parameters\n    /// @dev When execute this proposal the new values will be set\n    /// @param _newApprovPercentage The new percentaje for accept or reject a proposal\n    /// @param _description About the new proposal \n    /// @return propId ID of the new proposal, based on `arrProposals`\n    function PropGovRules(\n        uint8 _newApprovPercentage,\n        string memory _description,\n        uint256 _delayTime\n    )\n        external\n        returns( uint256 propId )\n    {\n        (bool successDGTCLL, bytes memory dataDLGTCLL) = CLCGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropGovRules(uint8,string,uint256)\", \n                _newApprovPercentage,\n                _description,\n                _delayTime\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            propId := mload(ptr)\n        }\n    }\n\n    /// @notice Generate a proposal from a user that want to join to the CLH\n    /// @dev Only avaiable in public CLH\n    /// @param _name Nickname or other user identification\n    /// @param _description About the request\n    /// @return propId ID of the new proposal, based on `arrProposals`\n    function PropRequestToJoin(\n        string memory _name,\n        string memory _description,\n        bytes memory _signature\n    )\n        external\n        returns( uint256 )\n    {\n        (bool successDGTCLL, bytes memory dataDLGTCLL) = CLCGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropRequestToJoin(string,string,bytes)\", \n                _name,\n                _description,\n                _signature\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            return(ptr, size)\n        }\n    }\n\n    /// @notice For an user that have an invitation pending\n    /// @dev \n    /// @param _acceptance True for accept the invitation\n    function AcceptRejectInvitation(\n        bool _acceptance,\n        bytes memory _signature\n    )\n        external\n    {\n        (bool successDGTCLL, bytes memory dataDLGTCLL) = CLCMemberManagement.delegatecall(\n            abi.encodeWithSignature(\n                \"AcceptRejectInvitation(bool,bytes)\",\n                _acceptance,\n                _signature\n            )\n        );\n\n        if( !successDGTCLL ) {\n            assembly {\n                let ptr := mload(0x40)\n                let size := returndatasize()\n                returndatacopy(ptr, 0, size)\n                revert(ptr, size)\n            }\n        }\n    }\n\n    function PropSwapERC20(\n        address _tokenOutCLV,\n        address _tokenInCLV,\n        uint256 _amountOutCLV,\n        string memory _description,\n        uint256 _delayTime\n    )\n        external\n        returns( uint256 propId )\n    {\n        (bool successDGTCLL, bytes memory dataDLGTCLL) = CLCGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropSwapERC20(address,address,uint256,string,uint256)\", \n                 _tokenOutCLV,\n                 _tokenInCLV,\n                 _amountOutCLV,\n                 _description,\n                 _delayTime\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            return(ptr, size)\n        }\n    }\n\n    function PropSellERC20(\n        address _tokenOutCLV,\n        uint256 _amountOutCLV,\n        string memory _description,\n        uint256 _delayTime\n    )\n        external\n        returns( uint256 propId )\n    {\n        (bool successDGTCLL, bytes memory dataDLGTCLL) = CLCGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropSellERC20(address,uint256,string,uint256)\", \n                 _tokenOutCLV,\n                 _amountOutCLV,\n                 _description,\n                 _delayTime\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            return(ptr, size)\n        }\n    }\n\n    function PropBuyERC20(\n        address _tokenInCLV,\n        uint256 _amountOutCLV,\n        string memory _description,\n        uint256 _delayTime\n    )\n        external\n        returns( uint256 propId )\n    {\n        (bool successDGTCLL, bytes memory dataDLGTCLL) = CLCGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropBuyERC20(address,uint256,string,uint256)\", \n                 _tokenInCLV,\n                 _amountOutCLV,\n                 _description,\n                 _delayTime\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            return(ptr, size)\n        }\n    }\n\n    function GetArrMembersLength() external view returns( uint256 ){\n        return arrMembers.length;\n    }\n\n    function GetArrProposalsLength() external view returns( uint256 ){\n        return arrProposals.length;\n    }\n\n    /// @notice The list of all Proposals\n    /// @return arrProposals the array with all proposals\n    function GetProposalList()\n        external\n        view\n        returns(\n            strProposal[] memory\n        )\n    {\n        return arrProposals;\n    }\n}",
  "sourceMap": "254:15252:35:-:0;;;1048:1548;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1575:18;;1623:4;1628:1;1623:7;;;;-1:-1:-1;;;;;1623:20:35;1794:6;1819:10;1847:13;1878:9;1905;1657:680;;;;;;;;2121:4;2126:1;2121:7;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;1657:680:35;;;;;2130:7;;;;1657:680;;;;;;;;;2139:7;;;;1657:680;;;;;;;;;;;;;;;2306:17;;1657:680;;;:::i;:::-;;;;-1:-1:-1;;1657:680:35;;;;;;;;;;;;;;-1:-1:-1;;;;;1657:680:35;-1:-1:-1;;;1657:680:35;;;1623:724;;;1657:680;1623:724;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1574:773;;;;2363:13;2358:232;;2437:4;2431:11;2471:16;2527:4;2524:1;2519:3;2504:28;2561:4;2556:3;2549:17;2358:232;1564:1032;;1048:1548;;;;;;;254:15252;;14:177:46;93:13;;-1:-1:-1;;;;;135:31:46;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:275;399:2;393:9;464:2;445:13;;-1:-1:-1;;441:27:46;429:40;;-1:-1:-1;;;;;484:34:46;;520:22;;;481:62;478:88;;;546:18;;:::i;:::-;582:2;575:22;328:275;;-1:-1:-1;328:275:46:o;608:258::-;680:1;690:113;704:6;701:1;698:13;690:113;;;780:11;;;774:18;761:11;;;754:39;726:2;719:10;690:113;;;821:6;818:1;815:13;812:48;;;856:1;847:6;842:3;838:16;831:27;812:48;;608:258;;;:::o;871:164::-;947:13;;996;;989:21;979:32;;969:60;;1025:1;1022;1015:12;1040:817;1099:5;1152:3;1145:4;1137:6;1133:17;1129:27;1119:55;;1170:1;1167;1160:12;1119:55;1203:2;1197:9;1245:2;1233:15;;-1:-1:-1;;;;;1263:34:46;;1299:22;;;1260:62;1257:88;;;1325:18;;:::i;:::-;1361:2;1354:22;1396:6;1437:2;1425:15;;1452;;;1449:35;;;1480:1;1477;1470:12;1449:35;1504:6;1519:308;1535:6;1530:3;1527:15;1519:308;;;1610:3;1604:10;1658:4;1651:5;1647:16;1640:5;1637:27;1627:125;;1706:1;1735:2;1731;1724:14;1627:125;1765:18;;1812:4;1803:14;;;;1552;1519:308;;;-1:-1:-1;1845:6:46;;1040:817;-1:-1:-1;;;;;1040:817:46:o;1862:676::-;1923:5;1976:3;1969:4;1961:6;1957:17;1953:27;1943:55;;1994:1;1991;1984:12;1943:55;2027:2;2021:9;2069:3;2057:16;;-1:-1:-1;;;;;2088:34:46;;2124:22;;;2085:62;2082:88;;;2150:18;;:::i;:::-;2186:2;2179:22;2221:6;2262:3;2250:16;;2278:15;;;2275:35;;;2306:1;2303;2296:12;2275:35;2330:6;2345:163;2361:6;2356:3;2353:15;2345:163;;;2429:34;2459:3;2429:34;:::i;:::-;2417:47;;2493:4;2484:14;;;;2378;2345:163;;2543:733;2608:5;2661:3;2654:4;2646:6;2642:17;2638:27;2628:55;;2679:1;2676;2669:12;2628:55;2702:13;;2734:4;-1:-1:-1;;;;;2750:26:46;;2747:52;;;2779:18;;:::i;:::-;2825:2;2822:1;2818:10;2848:28;2872:2;2868;2864:11;2848:28;:::i;:::-;2910:15;;;2980;;;2976:24;;;2941:12;;;;3012:15;;;3009:35;;;3040:1;3037;3030:12;3009:35;3076:2;3068:6;3064:15;3053:26;;3088:159;3104:6;3099:3;3096:15;3088:159;;;3170:34;3200:3;3170:34;:::i;:::-;3158:47;;3121:12;;;;3225;;;;3088:159;;;3265:5;2543:733;-1:-1:-1;;;;;;;2543:733:46:o;3281:1407::-;3481:6;3489;3497;3505;3513;3521;3529;3582:3;3570:9;3561:7;3557:23;3553:33;3550:53;;;3599:1;3596;3589:12;3550:53;3622:40;3652:9;3622:40;:::i;:::-;3706:2;3691:18;;3685:25;3612:50;;-1:-1:-1;;;;;;3759:14:46;;;3756:34;;;3786:1;3783;3776:12;3756:34;3824:6;3813:9;3809:22;3799:32;;3869:7;3862:4;3858:2;3854:13;3850:27;3840:55;;3891:1;3888;3881:12;3840:55;3920:2;3914:9;3942:2;3938;3935:10;3932:36;;;3948:18;;:::i;:::-;3990:53;4033:2;4014:13;;-1:-1:-1;;4010:27:46;4039:2;4006:36;3990:53;:::i;:::-;4066:2;4059:5;4052:17;4106:7;4101:2;4096;4092;4088:11;4084:20;4081:33;4078:53;;;4127:1;4124;4117:12;4078:53;4140:54;4191:2;4186;4179:5;4175:14;4170:2;4166;4162:11;4140:54;:::i;:::-;4213:5;-1:-1:-1;4237:46:46;;-1:-1:-1;4279:2:46;4264:18;;4237:46;:::i;:::-;4227:56;;4323:2;4312:9;4308:18;4302:25;4292:35;;4346:63;4401:7;4395:3;4384:9;4380:19;4346:63;:::i;:::-;4336:73;;4428:65;4485:7;4479:3;4468:9;4464:19;4428:65;:::i;:::-;4418:75;;4539:3;4528:9;4524:19;4518:26;4502:42;;4569:2;4559:8;4556:16;4553:36;;;4585:1;4582;4575:12;4553:36;;4608:74;4674:7;4663:8;4652:9;4648:24;4608:74;:::i;:::-;4598:84;;;3281:1407;;;;;;;;;;:::o;4693:127::-;4754:10;4749:3;4745:20;4742:1;4735:31;4785:4;4782:1;4775:15;4809:4;4806:1;4799:15;4825:352;4918:5;4941:1;4951:220;4965:4;4962:1;4959:11;4951:220;;;5028:13;;-1:-1:-1;;;;;5024:39:46;5012:52;;5087:4;5111:12;;;;5146:15;;;;5060:1;4978:9;4951:220;;5182:461;5235:3;5273:5;5267:12;5300:6;5295:3;5288:19;5326:4;5355:2;5350:3;5346:12;5339:19;;5392:2;5385:5;5381:14;5413:1;5423:195;5437:6;5434:1;5431:13;5423:195;;;5502:13;;-1:-1:-1;;;;;5498:39:46;5486:52;;5558:12;;;;5593:15;;;;5534:1;5452:9;5423:195;;;-1:-1:-1;5634:3:46;;5182:461;-1:-1:-1;;;;;5182:461:46:o;5648:1398::-;-1:-1:-1;;;;;6119:32:46;;6101:51;;6089:3;6171:2;6189:18;;;6182:30;;;6235:13;;6264:18;;;6257:34;;;6060:4;;6310:3;;6171:2;6322:66;6235:13;6361:18;;;6344:15;;;6322:66;:::i;:::-;6495:14;;6488:22;6483:2;6468:18;;6461:50;6542:2;6527:18;;6520:34;;;6447:2;6426:15;-1:-1:-1;;6422:29:46;6407:45;;6589:3;6574:19;;6635:6;-1:-1:-1;6669:178:46;6683:4;6680:1;6677:11;6669:178;;;6746:13;;6761:4;6742:24;6730:37;;6787:12;;;;6822:15;;;;6703:1;6696:9;6669:178;;;6673:3;;;6856:53;6904:3;6893:9;6889:19;6881:6;6856:53;:::i;:::-;6970:2;6958:9;6954:2;6950:18;6946:27;6940:3;6929:9;6925:19;6918:56;6991:49;7036:2;7032;7028:11;7020:6;6991:49;:::i;:::-;6983:57;5648:1398;-1:-1:-1;;;;;;;;;;;;5648:1398:46:o;7051:274::-;7180:3;7218:6;7212:13;7234:53;7280:6;7275:3;7268:4;7260:6;7256:17;7234:53;:::i;:::-;7303:16;;;;;7051:274;-1:-1:-1;;7051:274:46:o;:::-;254:15252:35;;;;;;",
  "sourcePath": "contracts/CLHouse/CLHouse.sol",
  "type": "contract"
}