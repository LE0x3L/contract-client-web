{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newApprovPercentage",
          "type": "uint256"
        }
      ],
      "name": "evtChangeGovRules",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum proposalEvent",
          "name": "eventProposal",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "propId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum proposalType",
          "name": "typeProposal",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "evtProposal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenOutCLV",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountOutCLV",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenInCLV",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountReceived",
          "type": "uint256"
        }
      ],
      "name": "evtSwapERC20",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "walletAddr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAdd",
          "type": "address"
        }
      ],
      "name": "evtTxERC20",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum assetsEvent",
          "name": "typeEvent",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "walletAddr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "evtTxEth",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum userEvent",
          "name": "eventUser",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "walletAddr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "evtUser",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "propId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "position",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "justification",
          "type": "string"
        }
      ],
      "name": "evtVoted",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_acceptance",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "AcceptRejectInvitation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CCLFACTORY",
      "outputs": [
        {
          "internalType": "contract ICLFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CLHAPI",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CLHSAFE",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_propId",
          "type": "uint256"
        }
      ],
      "name": "ExecProp",
      "outputs": [
        {
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "message",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "GetArrDataPropUser",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "walletAddr",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "isManager",
              "type": "bool"
            }
          ],
          "internalType": "struct strDataUser[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "GetArrProposalsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "GetArrUsersLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "GetProposalList",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "proponent",
              "type": "address"
            },
            {
              "internalType": "enum proposalType",
              "name": "typeProposal",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "propDataId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "numVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "againstVotes",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "executed",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "rejected",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "internalType": "struct strProposal[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "HOUSE_GOVERNANCE_MODEL",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "HOUSE_NAME",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_houseName",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "_housePrivate",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_houseOpen",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "_govModel",
          "type": "bytes32"
        },
        {
          "internalType": "uint256[3]",
          "name": "_govRules",
          "type": "uint256[3]"
        },
        {
          "internalType": "address[4]",
          "name": "_CLC",
          "type": "address[4]"
        },
        {
          "internalType": "address[]",
          "name": "_ManagerWallets",
          "type": "address[]"
        }
      ],
      "name": "Init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenInCLV",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountOutCLV",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        }
      ],
      "name": "PropBuyERC20",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newApprovPercentage",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        }
      ],
      "name": "PropGovRules",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "propId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_walletAddr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "_isManager",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "PropInviteUser",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "propId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_walletAddr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "PropRemoveUser",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "propId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "PropRequestToJoin",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenOutCLV",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountOutCLV",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        }
      ],
      "name": "PropSellERC20",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenOutCLV",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenInCLV",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountOutCLV",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        }
      ],
      "name": "PropSwapERC20",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountOutCLV",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_tokenOutCLV",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        }
      ],
      "name": "PropTxERC20",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "propId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountOutCLV",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        }
      ],
      "name": "PropTxWei",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "propId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_propId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_support",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "_justification",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "VoteProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "arrDataPropGovRules",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "newApprovPercentage",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "arrDataPropTxAssets",
      "outputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountOutCLV",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tokenOutCLV",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenInCLV",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "arrDataPropUser",
      "outputs": [
        {
          "internalType": "address",
          "name": "walletAddr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "isManager",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "arrProposals",
      "outputs": [
        {
          "internalType": "address",
          "name": "proponent",
          "type": "address"
        },
        {
          "internalType": "enum proposalType",
          "name": "typeProposal",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "propDataId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "numVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "againstVotes",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "rejected",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "arrUsers",
      "outputs": [
        {
          "internalType": "address",
          "name": "walletAddr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isUser",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isManager",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_propId",
          "type": "uint256[]"
        },
        {
          "internalType": "bool",
          "name": "_support",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "_justification",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "bulkVote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "govRuleApprovPercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "govRuleMaxManagers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "govRuleMaxUsers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "houseOpen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "housePrivate",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "mapIdUser",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "mapInvitationUser",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "mapReq2Join",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "mapVotes",
      "outputs": [
        {
          "internalType": "bool",
          "name": "voted",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "inSupport",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "justification",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nftAdmin",
      "outputs": [
        {
          "internalType": "contract CLHNFT",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nftInvitation",
      "outputs": [
        {
          "internalType": "contract CLHNFT",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nftMember",
      "outputs": [
        {
          "internalType": "contract CLHNFT",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numManagers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numUsers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultCLH",
      "outputs": [
        {
          "internalType": "contract CLVault",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "18": "/home/trecetp/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/proxy/utils/Initializable.sol",
    "47": "contracts/CLCore/CLStorage.sol",
    "48": "contracts/CLCore/CLTypes.sol",
    "50": "contracts/CLHouse/CLHouse.sol"
  },
  "ast": {
    "absolutePath": "contracts/CLHouse/CLHouse.sol",
    "exportedSymbols": {
      "Address": [
        10082
      ],
      "CLBeacon": [
        4858
      ],
      "CLHNFT": [
        5472
      ],
      "CLHouse": [
        2391
      ],
      "CLHouseApi": [
        967
      ],
      "CLStorage": [
        1393
      ],
      "CLVault": [
        5360
      ],
      "Context": [
        10724
      ],
      "Counters": [
        7964
      ],
      "DebugDLGTCLL": [
        9405
      ],
      "ERC165": [
        11135
      ],
      "ERC721": [
        7735
      ],
      "ERC721Burnable": [
        7765
      ],
      "ERC721URIStorage": [
        7890
      ],
      "IBeacon": [
        10092
      ],
      "ICLFactory": [
        5688
      ],
      "ICLHouse": [
        5924
      ],
      "IERC165": [
        12231
      ],
      "IERC20": [
        10702
      ],
      "IERC721": [
        10840
      ],
      "IERC721Metadata": [
        10885
      ],
      "IERC721Receiver": [
        10858
      ],
      "ISwapRouter": [
        6584
      ],
      "IUniswapV3SwapCallback": [
        10624
      ],
      "Initializable": [
        6207
      ],
      "InvalidGovernanceType": [
        9399
      ],
      "Ownable": [
        6868
      ],
      "Strings": [
        11111
      ],
      "TransferHelper": [
        6755
      ],
      "UpgradeableBeacon": [
        6282
      ],
      "__CONTRACT_NAME_HASH__": [
        9431
      ],
      "__CONTRACT_VERSION_HASH__": [
        9436
      ],
      "__GOV_COMMITTEE__": [
        9421
      ],
      "__GOV_DICTATORSHIP__": [
        9416
      ],
      "__GOV_SIMPLE_MAJORITY__": [
        9426
      ],
      "__STR_EIP712DOMAIN_HASH__": [
        9444
      ],
      "__STR_OCBULKVOTE_HASH__": [
        9468
      ],
      "__STR_OCDELUSER_HASH__": [
        9484
      ],
      "__STR_OCINVIT_HASH__": [
        9452
      ],
      "__STR_OCNEWCLH_HASH__": [
        9500
      ],
      "__STR_OCNEWUSER_HASH__": [
        9476
      ],
      "__STR_OCREQUEST_HASH__": [
        9492
      ],
      "__STR_OCVOTE_HASH__": [
        9460
      ],
      "__UPGRADEABLE_CLF_VERSION__": [
        9411
      ],
      "__UPGRADEABLE_CLH_VERSION__": [
        9408
      ],
      "assetsEvent": [
        9514
      ],
      "eCLC": [
        9537
      ],
      "gRule": [
        9532
      ],
      "proposalEvent": [
        9518
      ],
      "proposalType": [
        9528
      ],
      "strDataGovRules": [
        9594
      ],
      "strDataTxAssets": [
        9591
      ],
      "strDataUser": [
        9582
      ],
      "strProposal": [
        9568
      ],
      "strUser": [
        9548
      ],
      "strVote": [
        9575
      ],
      "userEvent": [
        9507
      ]
    },
    "id": 2392,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1806,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:50"
      },
      {
        "absolutePath": "/home/trecetp/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/proxy/utils/Initializable.sol",
        "file": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
        "id": 1807,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2392,
        "sourceUnit": 6208,
        "src": "58:63:50",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/CLCore/CLStorage.sol",
        "file": "../CLCore/CLStorage.sol",
        "id": 1808,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2392,
        "sourceUnit": 1394,
        "src": "122:33:50",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1810,
              "name": "CLStorage",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1393,
              "src": "347:9:50"
            },
            "id": 1811,
            "nodeType": "InheritanceSpecifier",
            "src": "347:9:50"
          },
          {
            "baseName": {
              "id": 1812,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6207,
              "src": "358:13:50"
            },
            "id": 1813,
            "nodeType": "InheritanceSpecifier",
            "src": "358:13:50"
          }
        ],
        "canonicalName": "CLHouse",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1809,
          "nodeType": "StructuredDocumentation",
          "src": "158:169:50",
          "text": "@title Contract to implement and test the basic fuctions of CLHouses\n @author Leonardo Urrego\n @notice This contract for test only the most basic interactions"
        },
        "fullyImplemented": true,
        "id": 2391,
        "linearizedBaseContracts": [
          2391,
          6207,
          1393
        ],
        "name": "CLHouse",
        "nameLocation": "336:7:50",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1820,
              "nodeType": "Block",
              "src": "445:39:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1817,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6206,
                      "src": "455:20:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "455:22:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1819,
                  "nodeType": "ExpressionStatement",
                  "src": "455:22:50"
                }
              ]
            },
            "documentation": {
              "id": 1814,
              "nodeType": "StructuredDocumentation",
              "src": "378:48:50",
              "text": "@custom:oz-upgrades-unsafe-allow constructor"
            },
            "id": 1821,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1815,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "442:2:50"
            },
            "returnParameters": {
              "id": 1816,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "445:0:50"
            },
            "scope": 2391,
            "src": "431:53:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1878,
              "nodeType": "Block",
              "src": "1482:780:50",
              "statements": [
                {
                  "assignments": [
                    1850,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1850,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "1556:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 1878,
                      "src": "1551:18:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1849,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1551:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "documentation": "@custom:oz-upgrades-unsafe-allow delegatecall",
                  "id": 1872,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "5f5f434c48436f6e7374727563746f7228616464726573732c737472696e672c626f6f6c2c626f6f6c2c627974657333322c75696e743235365b335d2c616464726573735b345d2c616464726573735b5d29",
                            "id": 1861,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1684:84:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_1dd1ffc226de7b5ec32971e23b294cb55fd663c71d2854fc26550e87a18b4852",
                              "typeString": "literal_string \"__CLHConstructor(address,string,bool,bool,bytes32,uint256[3],address[4],address[])\""
                            },
                            "value": "__CLHConstructor(address,string,bool,bool,bytes32,uint256[3],address[4],address[])"
                          },
                          {
                            "id": 1862,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1824,
                            "src": "1786:6:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1863,
                            "name": "_houseName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1826,
                            "src": "1811:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 1864,
                            "name": "_housePrivate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1828,
                            "src": "1839:13:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 1865,
                            "name": "_houseOpen",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1830,
                            "src": "1870:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 1866,
                            "name": "_govModel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1832,
                            "src": "1898:9:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 1867,
                            "name": "_govRules",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1836,
                            "src": "1925:9:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                              "typeString": "uint256[3] memory"
                            }
                          },
                          {
                            "id": 1868,
                            "name": "_CLC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1840,
                            "src": "1952:4:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$4_memory_ptr",
                              "typeString": "address[4] memory"
                            }
                          },
                          {
                            "id": 1869,
                            "name": "_ManagerWallets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1843,
                            "src": "1974:15:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_1dd1ffc226de7b5ec32971e23b294cb55fd663c71d2854fc26550e87a18b4852",
                              "typeString": "literal_string \"__CLHConstructor(address,string,bool,bool,bytes32,uint256[3],address[4],address[])\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                              "typeString": "uint256[3] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_address_$4_memory_ptr",
                              "typeString": "address[4] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          ],
                          "expression": {
                            "id": 1859,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1643:3:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1860,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "1643:23:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 1870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1643:360:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 1851,
                          "name": "_CLC",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1840,
                          "src": "1575:4:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$4_memory_ptr",
                            "typeString": "address[4] memory"
                          }
                        },
                        "id": 1857,
                        "indexExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1854,
                                "name": "eCLC",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9537,
                                "src": "1590:4:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_eCLC_$9537_$",
                                  "typeString": "type(enum eCLC)"
                                }
                              },
                              "id": 1855,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "CLLConstructorCLH",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 9536,
                              "src": "1590:22:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_eCLC_$9537",
                                "typeString": "enum eCLC"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_eCLC_$9537",
                                "typeString": "enum eCLC"
                              }
                            ],
                            "id": 1853,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1581:7:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 1852,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1581:7:50",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1581:33:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1575:41:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1858,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "1575:54:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 1871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1575:438:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1550:463:50"
                },
                {
                  "condition": {
                    "id": 1874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2028:14:50",
                    "subExpression": {
                      "id": 1873,
                      "name": "successDGTCLL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1850,
                      "src": "2029:13:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1877,
                  "nodeType": "IfStatement",
                  "src": "2024:232:50",
                  "trueBody": {
                    "id": 1876,
                    "nodeType": "Block",
                    "src": "2045:211:50",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "2068:178:50",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2086:22:50",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2103:4:50",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2097:5:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2097:11:50"
                              },
                              "variables": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulTypedName",
                                  "src": "2090:3:50",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2125:28:50",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "returndatasize",
                                  "nodeType": "YulIdentifier",
                                  "src": "2137:14:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2137:16:50"
                              },
                              "variables": [
                                {
                                  "name": "size",
                                  "nodeType": "YulTypedName",
                                  "src": "2129:4:50",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "2185:3:50"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2190:1:50",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "2193:4:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "returndatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "2170:14:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2170:28:50"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2170:28:50"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "2222:3:50"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "2227:4:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "2215:6:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2215:17:50"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2215:17:50"
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [],
                        "id": 1875,
                        "nodeType": "InlineAssembly",
                        "src": "2059:187:50"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1822,
              "nodeType": "StructuredDocumentation",
              "src": "490:643:50",
              "text": "@notice Create a new CLH\n @dev Some parameters can be ignored depending on the governance model\n @param _owner The address of the deployed wallet\n @param _houseName Name given by the owner\n @param _housePrivate If is set to 1, the CLH is set to private\n @param _houseOpen If is set to 1, the CLH is set to Open\n @param _govModel keccak256 hash of the governance model, see the __GOV_* constans\n @param _govRules Array for goverment rules see `enum gRule`\n @param _CLC Array for CL Contracts see `enum eCLC`\n @param _ManagerWallets Whitelist of address for invitate as managers"
            },
            "functionSelector": "7e66495d",
            "id": 1879,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1846,
                    "name": "__UPGRADEABLE_CLH_VERSION__",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9408,
                    "src": "1448:27:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 1847,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1845,
                  "name": "reinitializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6160,
                  "src": "1433:13:50"
                },
                "nodeType": "ModifierInvocation",
                "src": "1433:44:50"
              }
            ],
            "name": "Init",
            "nameLocation": "1147:4:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1844,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1824,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "1169:6:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 1879,
                  "src": "1161:14:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1823,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1161:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1826,
                  "mutability": "mutable",
                  "name": "_houseName",
                  "nameLocation": "1200:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 1879,
                  "src": "1186:24:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1825,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1186:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1828,
                  "mutability": "mutable",
                  "name": "_housePrivate",
                  "nameLocation": "1225:13:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 1879,
                  "src": "1220:18:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1827,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1220:4:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1830,
                  "mutability": "mutable",
                  "name": "_houseOpen",
                  "nameLocation": "1253:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 1879,
                  "src": "1248:15:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1829,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1248:4:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1832,
                  "mutability": "mutable",
                  "name": "_govModel",
                  "nameLocation": "1281:9:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 1879,
                  "src": "1273:17:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1831,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1273:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1836,
                  "mutability": "mutable",
                  "name": "_govRules",
                  "nameLocation": "1318:9:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 1879,
                  "src": "1300:27:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                    "typeString": "uint256[3]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1833,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1300:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1835,
                    "length": {
                      "hexValue": "33",
                      "id": 1834,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1308:1:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1300:10:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$3_storage_ptr",
                      "typeString": "uint256[3]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1840,
                  "mutability": "mutable",
                  "name": "_CLC",
                  "nameLocation": "1355:4:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 1879,
                  "src": "1337:22:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$4_memory_ptr",
                    "typeString": "address[4]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1837,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1337:7:50",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1839,
                    "length": {
                      "hexValue": "34",
                      "id": 1838,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1345:1:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_4_by_1",
                        "typeString": "int_const 4"
                      },
                      "value": "4"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1337:10:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$4_storage_ptr",
                      "typeString": "address[4]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1843,
                  "mutability": "mutable",
                  "name": "_ManagerWallets",
                  "nameLocation": "1386:15:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 1879,
                  "src": "1369:32:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1841,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1369:7:50",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1842,
                    "nodeType": "ArrayTypeName",
                    "src": "1369:9:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1151:256:50"
            },
            "returnParameters": {
              "id": 1848,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1482:0:50"
            },
            "scope": 2391,
            "src": "1138:1124:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1915,
              "nodeType": "Block",
              "src": "2771:607:50",
              "statements": [
                {
                  "assignments": [
                    1890
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1890,
                      "mutability": "mutable",
                      "name": "CLLGovernance",
                      "nameLocation": "2789:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 1915,
                      "src": "2781:21:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1889,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2781:7:50",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1894,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1891,
                        "name": "CCLFACTORY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1066,
                        "src": "2805:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLFactory_$5688",
                          "typeString": "contract ICLFactory"
                        }
                      },
                      "id": 1892,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "CLLGovernance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5626,
                      "src": "2805:24:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 1893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2805:26:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2781:50:50"
                },
                {
                  "assignments": [
                    1896,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1896,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "2905:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 1915,
                      "src": "2900:18:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1895,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2900:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "documentation": "@custom:oz-upgrades-unsafe-allow delegatecall",
                  "id": 1905,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4578656350726f702875696e7432353629",
                            "id": 1901,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3005:19:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_5f3d99b36eccea2d9a38fa911daeb9ce94a9ac486dd03f1648c38f62cafa2119",
                              "typeString": "literal_string \"ExecProp(uint256)\""
                            },
                            "value": "ExecProp(uint256)"
                          },
                          {
                            "id": 1902,
                            "name": "_propId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1882,
                            "src": "3042:7:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_5f3d99b36eccea2d9a38fa911daeb9ce94a9ac486dd03f1648c38f62cafa2119",
                              "typeString": "literal_string \"ExecProp(uint256)\""
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1899,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2964:3:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "2964:23:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 1903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2964:99:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 1897,
                        "name": "CLLGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1890,
                        "src": "2924:13:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1898,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "2924:26:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 1904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2924:149:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2899:174:50"
                },
                {
                  "condition": {
                    "id": 1907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3088:14:50",
                    "subExpression": {
                      "id": 1906,
                      "name": "successDGTCLL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1896,
                      "src": "3089:13:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1910,
                  "nodeType": "IfStatement",
                  "src": "3084:232:50",
                  "trueBody": {
                    "id": 1909,
                    "nodeType": "Block",
                    "src": "3105:211:50",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "3128:178:50",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3146:22:50",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3163:4:50",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3157:5:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3157:11:50"
                              },
                              "variables": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulTypedName",
                                  "src": "3150:3:50",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3185:28:50",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "returndatasize",
                                  "nodeType": "YulIdentifier",
                                  "src": "3197:14:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3197:16:50"
                              },
                              "variables": [
                                {
                                  "name": "size",
                                  "nodeType": "YulTypedName",
                                  "src": "3189:4:50",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "3245:3:50"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3250:1:50",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "3253:4:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "returndatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "3230:14:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3230:28:50"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3230:28:50"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "3282:3:50"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "3287:4:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "3275:6:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3275:17:50"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3275:17:50"
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [],
                        "id": 1908,
                        "nodeType": "InlineAssembly",
                        "src": "3119:187:50"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "74727565",
                        "id": 1911,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3335:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "537563636573732065786563757465642070726f706f73616c",
                        "id": 1912,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3342:27:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cc5063be902007aa4094c05d7977aa17bd625bcc90d4b58bc658ed91467f2f04",
                          "typeString": "literal_string \"Success executed proposal\""
                        },
                        "value": "Success executed proposal"
                      }
                    ],
                    "id": 1913,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3333:38:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_stringliteral_cc5063be902007aa4094c05d7977aa17bd625bcc90d4b58bc658ed91467f2f04_$",
                      "typeString": "tuple(bool,literal_string \"Success executed proposal\")"
                    }
                  },
                  "functionReturnParameters": 1888,
                  "id": 1914,
                  "nodeType": "Return",
                  "src": "3326:45:50"
                }
              ]
            },
            "documentation": {
              "id": 1880,
              "nodeType": "StructuredDocumentation",
              "src": "2268:344:50",
              "text": "@notice Execute (or reject) a proposal computing the votes and the governance model\n @dev Normally is called internally after each vote\n @param _propId ID of the proposal, based on `arrProposals`\n @return status True if the proposal can be execute, false in other cases\n @return message result of the transaction"
            },
            "functionSelector": "5f3d99b3",
            "id": 1916,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ExecProp",
            "nameLocation": "2626:8:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1883,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1882,
                  "mutability": "mutable",
                  "name": "_propId",
                  "nameLocation": "2652:7:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 1916,
                  "src": "2644:15:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1881,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2644:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2634:31:50"
            },
            "returnParameters": {
              "id": 1888,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1885,
                  "mutability": "mutable",
                  "name": "status",
                  "nameLocation": "2715:6:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 1916,
                  "src": "2710:11:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1884,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2710:4:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1887,
                  "mutability": "mutable",
                  "name": "message",
                  "nameLocation": "2749:7:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 1916,
                  "src": "2735:21:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1886,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2735:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2696:70:50"
            },
            "scope": 2391,
            "src": "2617:761:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1953,
              "nodeType": "Block",
              "src": "3830:660:50",
              "statements": [
                {
                  "assignments": [
                    1929
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1929,
                      "mutability": "mutable",
                      "name": "CLLGovernance",
                      "nameLocation": "3848:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 1953,
                      "src": "3840:21:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1928,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3840:7:50",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1933,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1930,
                        "name": "CCLFACTORY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1066,
                        "src": "3864:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLFactory_$5688",
                          "typeString": "contract ICLFactory"
                        }
                      },
                      "id": 1931,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "CLLGovernance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5626,
                      "src": "3864:24:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 1932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3864:26:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3840:50:50"
                },
                {
                  "assignments": [
                    1935,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1935,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "3964:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 1953,
                      "src": "3959:18:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1934,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3959:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "documentation": "@custom:oz-upgrades-unsafe-allow delegatecall",
                  "id": 1947,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "566f746550726f706f73616c2875696e743235362c626f6f6c2c737472696e672c627974657329",
                            "id": 1940,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4065:41:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c2b3aa089091839f7325bab8b8ed1dd8ad38b8c301fe29f7fcd75b4947c433c7",
                              "typeString": "literal_string \"VoteProposal(uint256,bool,string,bytes)\""
                            },
                            "value": "VoteProposal(uint256,bool,string,bytes)"
                          },
                          {
                            "id": 1941,
                            "name": "_propId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1919,
                            "src": "4124:7:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1942,
                            "name": "_support",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1921,
                            "src": "4149:8:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 1943,
                            "name": "_justification",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1923,
                            "src": "4175:14:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 1944,
                            "name": "_signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1925,
                            "src": "4207:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c2b3aa089091839f7325bab8b8ed1dd8ad38b8c301fe29f7fcd75b4947c433c7",
                              "typeString": "literal_string \"VoteProposal(uint256,bool,string,bytes)\""
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 1938,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "4023:3:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "4023:23:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 1945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4023:208:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 1936,
                        "name": "CLLGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1929,
                        "src": "3983:13:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1937,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "3983:26:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 1946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3983:258:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3958:283:50"
                },
                {
                  "condition": {
                    "id": 1949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "4256:14:50",
                    "subExpression": {
                      "id": 1948,
                      "name": "successDGTCLL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1935,
                      "src": "4257:13:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1952,
                  "nodeType": "IfStatement",
                  "src": "4252:232:50",
                  "trueBody": {
                    "id": 1951,
                    "nodeType": "Block",
                    "src": "4273:211:50",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "4296:178:50",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4314:22:50",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4331:4:50",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "4325:5:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4325:11:50"
                              },
                              "variables": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulTypedName",
                                  "src": "4318:3:50",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4353:28:50",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "returndatasize",
                                  "nodeType": "YulIdentifier",
                                  "src": "4365:14:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4365:16:50"
                              },
                              "variables": [
                                {
                                  "name": "size",
                                  "nodeType": "YulTypedName",
                                  "src": "4357:4:50",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "4413:3:50"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4418:1:50",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "4421:4:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "returndatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "4398:14:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4398:28:50"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4398:28:50"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "4450:3:50"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "4455:4:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "4443:6:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4443:17:50"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4443:17:50"
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [],
                        "id": 1950,
                        "nodeType": "InlineAssembly",
                        "src": "4287:187:50"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1917,
              "nodeType": "StructuredDocumentation",
              "src": "3384:275:50",
              "text": "@notice Used to vote a proposal\n @dev After vote the proposal automatically try to be executed\n @param _propId ID of the proposal, based on `arrProposals`\n @param _support True for accept, false to reject\n @param _justification About your vote"
            },
            "functionSelector": "c2b3aa08",
            "id": 1954,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "VoteProposal",
            "nameLocation": "3673:12:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1926,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1919,
                  "mutability": "mutable",
                  "name": "_propId",
                  "nameLocation": "3703:7:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 1954,
                  "src": "3695:15:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1918,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3695:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1921,
                  "mutability": "mutable",
                  "name": "_support",
                  "nameLocation": "3725:8:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 1954,
                  "src": "3720:13:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1920,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3720:4:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1923,
                  "mutability": "mutable",
                  "name": "_justification",
                  "nameLocation": "3757:14:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 1954,
                  "src": "3743:28:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1922,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3743:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1925,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "3794:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 1954,
                  "src": "3781:23:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1924,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3781:5:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3685:125:50"
            },
            "returnParameters": {
              "id": 1927,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3830:0:50"
            },
            "scope": 2391,
            "src": "3664:826:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1995,
              "nodeType": "Block",
              "src": "5191:759:50",
              "statements": [
                {
                  "assignments": [
                    1973
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1973,
                      "mutability": "mutable",
                      "name": "CLLGovernance",
                      "nameLocation": "5209:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 1995,
                      "src": "5201:21:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1972,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5201:7:50",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1977,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1974,
                        "name": "CCLFACTORY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1066,
                        "src": "5225:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLFactory_$5688",
                          "typeString": "contract ICLFactory"
                        }
                      },
                      "id": 1975,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "CLLGovernance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5626,
                      "src": "5225:24:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 1976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5225:26:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5201:50:50"
                },
                {
                  "assignments": [
                    1979,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1979,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "5325:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 1995,
                      "src": "5320:18:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1978,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5320:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "documentation": "@custom:oz-upgrades-unsafe-allow delegatecall",
                  "id": 1993,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f70496e766974655573657228616464726573732c737472696e672c737472696e672c626f6f6c2c75696e743235362c627974657329",
                            "id": 1984,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5426:58:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_31a0afa7f676c8f7b485e9d34a7076717af4b3943f1bb7f40d38feb26e5c6635",
                              "typeString": "literal_string \"PropInviteUser(address,string,string,bool,uint256,bytes)\""
                            },
                            "value": "PropInviteUser(address,string,string,bool,uint256,bytes)"
                          },
                          {
                            "id": 1985,
                            "name": "_walletAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1957,
                            "src": "5502:11:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1986,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1959,
                            "src": "5531:5:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 1987,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1961,
                            "src": "5554:12:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 1988,
                            "name": "_isManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1963,
                            "src": "5584:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 1989,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1965,
                            "src": "5612:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1990,
                            "name": "_signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1967,
                            "src": "5640:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_31a0afa7f676c8f7b485e9d34a7076717af4b3943f1bb7f40d38feb26e5c6635",
                              "typeString": "literal_string \"PropInviteUser(address,string,string,bool,uint256,bytes)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 1982,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5384:3:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1983,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "5384:23:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 1991,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5384:280:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 1980,
                        "name": "CLLGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1973,
                        "src": "5344:13:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1981,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "5344:26:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 1992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5344:330:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5319:355:50"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "5694:250:50",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "5708:22:50",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5725:4:50",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "5719:5:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5719:11:50"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "5712:3:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "5743:28:50",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "5755:14:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5755:16:50"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "5747:4:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "5799:3:50"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5804:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "5807:4:50"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "5784:14:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5784:28:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5784:28:50"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5852:49:50",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "5877:3:50"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "5882:4:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "5870:6:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5870:17:50"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5870:17:50"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "5836:13:50"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "5828:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5828:23:50"
                        },
                        "nodeType": "YulIf",
                        "src": "5825:76:50"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "5914:20:50",
                        "value": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "5930:3:50"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "5924:5:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5924:10:50"
                        },
                        "variableNames": [
                          {
                            "name": "propId",
                            "nodeType": "YulIdentifier",
                            "src": "5914:6:50"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 1970,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "5914:6:50",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1979,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "5836:13:50",
                      "valueSize": 1
                    }
                  ],
                  "id": 1994,
                  "nodeType": "InlineAssembly",
                  "src": "5685:259:50"
                }
              ]
            },
            "documentation": {
              "id": 1955,
              "nodeType": "StructuredDocumentation",
              "src": "4496:425:50",
              "text": "@notice Generate a new proposal to invite a new user\n @dev the execution of this proposal only create an invitation \n @param _walletAddr  Address of the new user\n @param _name Can be the nickname or other reference to the User\n @param _description A text for the proposal\n @param _isManager True if is for a manager\n @return propId ID of the new proposal, based on `arrProposals`"
            },
            "functionSelector": "31a0afa7",
            "id": 1996,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropInviteUser",
            "nameLocation": "4935:14:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1968,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1957,
                  "mutability": "mutable",
                  "name": "_walletAddr",
                  "nameLocation": "4967:11:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 1996,
                  "src": "4959:19:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1956,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4959:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1959,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "5002:5:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 1996,
                  "src": "4988:19:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1958,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4988:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1961,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "5031:12:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 1996,
                  "src": "5017:26:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1960,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5017:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1963,
                  "mutability": "mutable",
                  "name": "_isManager",
                  "nameLocation": "5058:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 1996,
                  "src": "5053:15:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1962,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5053:4:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1965,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "5086:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 1996,
                  "src": "5078:18:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1964,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5078:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1967,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "5119:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 1996,
                  "src": "5106:23:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1966,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5106:5:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4949:186:50"
            },
            "returnParameters": {
              "id": 1971,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1970,
                  "mutability": "mutable",
                  "name": "propId",
                  "nameLocation": "5178:6:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 1996,
                  "src": "5170:14:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1969,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5170:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5168:18:50"
            },
            "scope": 2391,
            "src": "4926:1024:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2031,
              "nodeType": "Block",
              "src": "6437:696:50",
              "statements": [
                {
                  "assignments": [
                    2011
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2011,
                      "mutability": "mutable",
                      "name": "CLLGovernance",
                      "nameLocation": "6455:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2031,
                      "src": "6447:21:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2010,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6447:7:50",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2015,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2012,
                        "name": "CCLFACTORY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1066,
                        "src": "6471:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLFactory_$5688",
                          "typeString": "contract ICLFactory"
                        }
                      },
                      "id": 2013,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "CLLGovernance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5626,
                      "src": "6471:24:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 2014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6471:26:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6447:50:50"
                },
                {
                  "assignments": [
                    2017,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2017,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "6571:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2031,
                      "src": "6566:18:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2016,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "6566:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "documentation": "@custom:oz-upgrades-unsafe-allow delegatecall",
                  "id": 2029,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f7052656d6f76655573657228616464726573732c737472696e672c75696e743235362c627974657329",
                            "id": 2022,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6672:46:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_2a57ef8465999602129e676b4a60c0623eb2cc91d38b1a125e7aae8223cea980",
                              "typeString": "literal_string \"PropRemoveUser(address,string,uint256,bytes)\""
                            },
                            "value": "PropRemoveUser(address,string,uint256,bytes)"
                          },
                          {
                            "id": 2023,
                            "name": "_walletAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1999,
                            "src": "6736:11:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2024,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2001,
                            "src": "6765:12:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 2025,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2003,
                            "src": "6795:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 2026,
                            "name": "_signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2005,
                            "src": "6823:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_2a57ef8465999602129e676b4a60c0623eb2cc91d38b1a125e7aae8223cea980",
                              "typeString": "literal_string \"PropRemoveUser(address,string,uint256,bytes)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 2020,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "6630:3:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2021,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "6630:23:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 2027,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6630:217:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 2018,
                        "name": "CLLGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2011,
                        "src": "6590:13:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 2019,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "6590:26:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 2028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6590:267:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6565:292:50"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "6877:250:50",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "6891:22:50",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6908:4:50",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "6902:5:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6902:11:50"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "6895:3:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "6926:28:50",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "6938:14:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6938:16:50"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "6930:4:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "6982:3:50"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6987:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "6990:4:50"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "6967:14:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6967:28:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6967:28:50"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7035:49:50",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "7060:3:50"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "7065:4:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "7053:6:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7053:17:50"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7053:17:50"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "7019:13:50"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "7011:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7011:23:50"
                        },
                        "nodeType": "YulIf",
                        "src": "7008:76:50"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "7097:20:50",
                        "value": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "7113:3:50"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "7107:5:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7107:10:50"
                        },
                        "variableNames": [
                          {
                            "name": "propId",
                            "nodeType": "YulIdentifier",
                            "src": "7097:6:50"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 2008,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "7097:6:50",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2017,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "7019:13:50",
                      "valueSize": 1
                    }
                  ],
                  "id": 2030,
                  "nodeType": "InlineAssembly",
                  "src": "6868:259:50"
                }
              ]
            },
            "documentation": {
              "id": 1997,
              "nodeType": "StructuredDocumentation",
              "src": "5956:265:50",
              "text": "@notice Generate a new proposal for remove a user\n @dev The user can be a managaer\n @param _walletAddr user Address to be removed\n @param _description About the proposal\n @return propId ID of the new proposal, based on `arrProposals`"
            },
            "functionSelector": "2a57ef84",
            "id": 2032,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropRemoveUser",
            "nameLocation": "6235:14:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2006,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1999,
                  "mutability": "mutable",
                  "name": "_walletAddr",
                  "nameLocation": "6267:11:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2032,
                  "src": "6259:19:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1998,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6259:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2001,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "6302:12:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2032,
                  "src": "6288:26:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2000,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6288:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2003,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "6332:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2032,
                  "src": "6324:18:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2002,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6324:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2005,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "6365:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2032,
                  "src": "6352:23:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2004,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6352:5:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6249:132:50"
            },
            "returnParameters": {
              "id": 2009,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2008,
                  "mutability": "mutable",
                  "name": "propId",
                  "nameLocation": "6424:6:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2032,
                  "src": "6416:14:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2007,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6416:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6414:18:50"
            },
            "scope": 2391,
            "src": "6226:907:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2067,
              "nodeType": "Block",
              "src": "7674:688:50",
              "statements": [
                {
                  "assignments": [
                    2047
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2047,
                      "mutability": "mutable",
                      "name": "CLLGovernance",
                      "nameLocation": "7692:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2067,
                      "src": "7684:21:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2046,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7684:7:50",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2051,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2048,
                        "name": "CCLFACTORY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1066,
                        "src": "7708:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLFactory_$5688",
                          "typeString": "contract ICLFactory"
                        }
                      },
                      "id": 2049,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "CLLGovernance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5626,
                      "src": "7708:24:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 2050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7708:26:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7684:50:50"
                },
                {
                  "assignments": [
                    2053,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2053,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "7808:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2067,
                      "src": "7803:18:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2052,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7803:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "documentation": "@custom:oz-upgrades-unsafe-allow delegatecall",
                  "id": 2065,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f70547857656928616464726573732c75696e743235362c737472696e672c75696e7432353629",
                            "id": 2058,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7909:43:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_7c6385482cc50c34905baf4b5888e8798c5594a0a2bf4d252265bc9209354799",
                              "typeString": "literal_string \"PropTxWei(address,uint256,string,uint256)\""
                            },
                            "value": "PropTxWei(address,uint256,string,uint256)"
                          },
                          {
                            "id": 2059,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2035,
                            "src": "7970:3:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2060,
                            "name": "_amountOutCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2037,
                            "src": "7991:13:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 2061,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2039,
                            "src": "8022:12:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 2062,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2041,
                            "src": "8052:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_7c6385482cc50c34905baf4b5888e8798c5594a0a2bf4d252265bc9209354799",
                              "typeString": "literal_string \"PropTxWei(address,uint256,string,uint256)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2056,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7867:3:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2057,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "7867:23:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 2063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7867:209:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 2054,
                        "name": "CLLGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2047,
                        "src": "7827:13:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 2055,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "7827:26:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 2064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7827:259:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7802:284:50"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "8106:250:50",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "8120:22:50",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8137:4:50",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "8131:5:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8131:11:50"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "8124:3:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "8155:28:50",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "8167:14:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8167:16:50"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "8159:4:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "8211:3:50"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8216:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "8219:4:50"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "8196:14:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8196:28:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8196:28:50"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8264:49:50",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "8289:3:50"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "8294:4:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "8282:6:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8282:17:50"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8282:17:50"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "8248:13:50"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "8240:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8240:23:50"
                        },
                        "nodeType": "YulIf",
                        "src": "8237:76:50"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "8326:20:50",
                        "value": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "8342:3:50"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "8336:5:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8336:10:50"
                        },
                        "variableNames": [
                          {
                            "name": "propId",
                            "nodeType": "YulIdentifier",
                            "src": "8326:6:50"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 2044,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "8326:6:50",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2053,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "8248:13:50",
                      "valueSize": 1
                    }
                  ],
                  "id": 2066,
                  "nodeType": "InlineAssembly",
                  "src": "8097:259:50"
                }
              ]
            },
            "documentation": {
              "id": 2033,
              "nodeType": "StructuredDocumentation",
              "src": "7139:334:50",
              "text": "@notice generate a new proposal to transfer ETH in weis\n @dev When execute this proposal, the transfer is made\n @param _to Recipient address\n @param _amountOutCLV Amount to transfer (in wei)\n @param _description About this proposal\n @return propId ID of the new proposal, based on `arrProposals`"
            },
            "functionSelector": "7c638548",
            "id": 2068,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropTxWei",
            "nameLocation": "7487:9:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2042,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2035,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "7514:3:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2068,
                  "src": "7506:11:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2034,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7506:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2037,
                  "mutability": "mutable",
                  "name": "_amountOutCLV",
                  "nameLocation": "7535:13:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2068,
                  "src": "7527:21:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2036,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7527:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2039,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "7572:12:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2068,
                  "src": "7558:26:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2038,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7558:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2041,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "7602:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2068,
                  "src": "7594:18:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2040,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7594:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7496:122:50"
            },
            "returnParameters": {
              "id": 2045,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2044,
                  "mutability": "mutable",
                  "name": "propId",
                  "nameLocation": "7661:6:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2068,
                  "src": "7653:14:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2043,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7653:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7651:18:50"
            },
            "scope": 2391,
            "src": "7478:884:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2106,
              "nodeType": "Block",
              "src": "8935:728:50",
              "statements": [
                {
                  "assignments": [
                    2085
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2085,
                      "mutability": "mutable",
                      "name": "CLLGovernance",
                      "nameLocation": "8953:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2106,
                      "src": "8945:21:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2084,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8945:7:50",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2089,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2086,
                        "name": "CCLFACTORY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1066,
                        "src": "8969:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLFactory_$5688",
                          "typeString": "contract ICLFactory"
                        }
                      },
                      "id": 2087,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "CLLGovernance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5626,
                      "src": "8969:24:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 2088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8969:26:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8945:50:50"
                },
                {
                  "assignments": [
                    2091,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2091,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "9069:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2106,
                      "src": "9064:18:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2090,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "9064:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "documentation": "@custom:oz-upgrades-unsafe-allow delegatecall",
                  "id": 2104,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f705478455243323028616464726573732c75696e743235362c616464726573732c737472696e672c75696e7432353629",
                            "id": 2096,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9170:53:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_de5ab14ee76e872eb390c8f0942b0cbe9e6de8609dea31f21b3c6b5cdfc0a34b",
                              "typeString": "literal_string \"PropTxERC20(address,uint256,address,string,uint256)\""
                            },
                            "value": "PropTxERC20(address,uint256,address,string,uint256)"
                          },
                          {
                            "id": 2097,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2071,
                            "src": "9241:3:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2098,
                            "name": "_amountOutCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2073,
                            "src": "9262:13:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 2099,
                            "name": "_tokenOutCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2075,
                            "src": "9293:12:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2100,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2077,
                            "src": "9323:12:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 2101,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2079,
                            "src": "9353:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_de5ab14ee76e872eb390c8f0942b0cbe9e6de8609dea31f21b3c6b5cdfc0a34b",
                              "typeString": "literal_string \"PropTxERC20(address,uint256,address,string,uint256)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2094,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "9128:3:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "9128:23:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 2102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9128:249:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 2092,
                        "name": "CLLGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2085,
                        "src": "9088:13:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 2093,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "9088:26:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 2103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9088:299:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9063:324:50"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "9407:250:50",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "9421:22:50",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9438:4:50",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "9432:5:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9432:11:50"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "9425:3:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "9456:28:50",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "9468:14:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9468:16:50"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "9460:4:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "9512:3:50"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9517:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "9520:4:50"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "9497:14:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9497:28:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9497:28:50"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9565:49:50",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "9590:3:50"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "9595:4:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "9583:6:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9583:17:50"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9583:17:50"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "9549:13:50"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "9541:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9541:23:50"
                        },
                        "nodeType": "YulIf",
                        "src": "9538:76:50"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "9627:20:50",
                        "value": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "9643:3:50"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "9637:5:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9637:10:50"
                        },
                        "variableNames": [
                          {
                            "name": "propId",
                            "nodeType": "YulIdentifier",
                            "src": "9627:6:50"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 2082,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "9627:6:50",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2091,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "9549:13:50",
                      "valueSize": 1
                    }
                  ],
                  "id": 2105,
                  "nodeType": "InlineAssembly",
                  "src": "9398:259:50"
                }
              ]
            },
            "documentation": {
              "id": 2069,
              "nodeType": "StructuredDocumentation",
              "src": "8368:334:50",
              "text": "@notice generate a new proposal to transfer ETH in weis\n @dev When execute this proposal, the transfer is made\n @param _to Recipient address\n @param _amountOutCLV Amount to transfer (in wei)\n @param _description About this proposal\n @return propId ID of the new proposal, based on `arrProposals`"
            },
            "functionSelector": "de5ab14e",
            "id": 2107,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropTxERC20",
            "nameLocation": "8716:11:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2080,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2071,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "8745:3:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2107,
                  "src": "8737:11:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2070,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8737:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2073,
                  "mutability": "mutable",
                  "name": "_amountOutCLV",
                  "nameLocation": "8766:13:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2107,
                  "src": "8758:21:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2072,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8758:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2075,
                  "mutability": "mutable",
                  "name": "_tokenOutCLV",
                  "nameLocation": "8797:12:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2107,
                  "src": "8789:20:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2074,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8789:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2077,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "8833:12:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2107,
                  "src": "8819:26:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2076,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8819:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2079,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "8863:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2107,
                  "src": "8855:18:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2078,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8855:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8727:152:50"
            },
            "returnParameters": {
              "id": 2083,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2082,
                  "mutability": "mutable",
                  "name": "propId",
                  "nameLocation": "8922:6:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2107,
                  "src": "8914:14:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2081,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8914:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8912:18:50"
            },
            "scope": 2391,
            "src": "8707:956:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2139,
              "nodeType": "Block",
              "src": "10209:669:50",
              "statements": [
                {
                  "assignments": [
                    2120
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2120,
                      "mutability": "mutable",
                      "name": "CLLGovernance",
                      "nameLocation": "10227:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2139,
                      "src": "10219:21:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2119,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10219:7:50",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2124,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2121,
                        "name": "CCLFACTORY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1066,
                        "src": "10243:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLFactory_$5688",
                          "typeString": "contract ICLFactory"
                        }
                      },
                      "id": 2122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "CLLGovernance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5626,
                      "src": "10243:24:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 2123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10243:26:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10219:50:50"
                },
                {
                  "assignments": [
                    2126,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2126,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "10343:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2139,
                      "src": "10338:18:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2125,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "10338:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "documentation": "@custom:oz-upgrades-unsafe-allow delegatecall",
                  "id": 2137,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f70476f7652756c65732875696e743235362c737472696e672c75696e7432353629",
                            "id": 2131,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10444:38:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_5de58f607a95103acd560c40247e4019876e7711f6d7e22c71e036f549ba4c67",
                              "typeString": "literal_string \"PropGovRules(uint256,string,uint256)\""
                            },
                            "value": "PropGovRules(uint256,string,uint256)"
                          },
                          {
                            "id": 2132,
                            "name": "_newApprovPercentage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2110,
                            "src": "10500:20:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 2133,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2112,
                            "src": "10538:12:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 2134,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2114,
                            "src": "10568:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_5de58f607a95103acd560c40247e4019876e7711f6d7e22c71e036f549ba4c67",
                              "typeString": "literal_string \"PropGovRules(uint256,string,uint256)\""
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2129,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "10402:3:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "10402:23:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 2135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10402:190:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 2127,
                        "name": "CLLGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2120,
                        "src": "10362:13:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 2128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "10362:26:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 2136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10362:240:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10337:265:50"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "10622:250:50",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "10636:22:50",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10653:4:50",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "10647:5:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10647:11:50"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "10640:3:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "10671:28:50",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "10683:14:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10683:16:50"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "10675:4:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "10727:3:50"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10732:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "10735:4:50"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "10712:14:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10712:28:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10712:28:50"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10780:49:50",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "10805:3:50"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "10810:4:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "10798:6:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10798:17:50"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10798:17:50"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "10764:13:50"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "10756:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10756:23:50"
                        },
                        "nodeType": "YulIf",
                        "src": "10753:76:50"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "10842:20:50",
                        "value": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "10858:3:50"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "10852:5:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10852:10:50"
                        },
                        "variableNames": [
                          {
                            "name": "propId",
                            "nodeType": "YulIdentifier",
                            "src": "10842:6:50"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 2117,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "10842:6:50",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2126,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "10764:13:50",
                      "valueSize": 1
                    }
                  ],
                  "id": 2138,
                  "nodeType": "InlineAssembly",
                  "src": "10613:259:50"
                }
              ]
            },
            "documentation": {
              "id": 2108,
              "nodeType": "StructuredDocumentation",
              "src": "9669:350:50",
              "text": "@notice Generate a new proposal for change some governance parameters\n @dev When execute this proposal the new values will be set\n @param _newApprovPercentage The new percentaje for accept or reject a proposal\n @param _description About the new proposal \n @return propId ID of the new proposal, based on `arrProposals`"
            },
            "functionSelector": "5de58f60",
            "id": 2140,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropGovRules",
            "nameLocation": "10033:12:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2110,
                  "mutability": "mutable",
                  "name": "_newApprovPercentage",
                  "nameLocation": "10063:20:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2140,
                  "src": "10055:28:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2109,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10055:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2112,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "10107:12:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2140,
                  "src": "10093:26:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2111,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10093:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2114,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "10137:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2140,
                  "src": "10129:18:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2113,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10129:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10045:108:50"
            },
            "returnParameters": {
              "id": 2118,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2117,
                  "mutability": "mutable",
                  "name": "propId",
                  "nameLocation": "10196:6:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2140,
                  "src": "10188:14:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2116,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10188:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10186:18:50"
            },
            "scope": 2391,
            "src": "10024:854:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2172,
              "nodeType": "Block",
              "src": "11357:653:50",
              "statements": [
                {
                  "assignments": [
                    2153
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2153,
                      "mutability": "mutable",
                      "name": "CLLGovernance",
                      "nameLocation": "11375:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2172,
                      "src": "11367:21:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2152,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11367:7:50",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2157,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2154,
                        "name": "CCLFACTORY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1066,
                        "src": "11391:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLFactory_$5688",
                          "typeString": "contract ICLFactory"
                        }
                      },
                      "id": 2155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "CLLGovernance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5626,
                      "src": "11391:24:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 2156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11391:26:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11367:50:50"
                },
                {
                  "assignments": [
                    2159,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2159,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "11491:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2172,
                      "src": "11486:18:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2158,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "11486:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "documentation": "@custom:oz-upgrades-unsafe-allow delegatecall",
                  "id": 2170,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f7052657175657374546f4a6f696e28737472696e672c737472696e672c627974657329",
                            "id": 2164,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11592:40:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_a19a5f5094957b68797a833ce3e8ce60bcd0e148d0183b60e4fdf5efc7499e5e",
                              "typeString": "literal_string \"PropRequestToJoin(string,string,bytes)\""
                            },
                            "value": "PropRequestToJoin(string,string,bytes)"
                          },
                          {
                            "id": 2165,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2143,
                            "src": "11650:5:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 2166,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2145,
                            "src": "11673:12:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 2167,
                            "name": "_signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2147,
                            "src": "11703:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_a19a5f5094957b68797a833ce3e8ce60bcd0e148d0183b60e4fdf5efc7499e5e",
                              "typeString": "literal_string \"PropRequestToJoin(string,string,bytes)\""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 2162,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "11550:3:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "11550:23:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 2168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11550:177:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 2160,
                        "name": "CLLGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2153,
                        "src": "11510:13:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 2161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "11510:26:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 2169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11510:227:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11485:252:50"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "11757:247:50",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "11771:22:50",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11788:4:50",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "11782:5:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11782:11:50"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "11775:3:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "11806:28:50",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "11818:14:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11818:16:50"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "11810:4:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "11862:3:50"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11867:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "11870:4:50"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "11847:14:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11847:28:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11847:28:50"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11915:49:50",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "11940:3:50"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "11945:4:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "11933:6:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11933:17:50"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11933:17:50"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "11899:13:50"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "11891:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11891:23:50"
                        },
                        "nodeType": "YulIf",
                        "src": "11888:76:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "11984:3:50"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "11989:4:50"
                            }
                          ],
                          "functionName": {
                            "name": "return",
                            "nodeType": "YulIdentifier",
                            "src": "11977:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11977:17:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11977:17:50"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 2159,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "11899:13:50",
                      "valueSize": 1
                    }
                  ],
                  "id": 2171,
                  "nodeType": "InlineAssembly",
                  "src": "11748:256:50"
                }
              ]
            },
            "documentation": {
              "id": 2141,
              "nodeType": "StructuredDocumentation",
              "src": "10884:289:50",
              "text": "@notice Generate a proposal from a user that want to join to the CLH\n @dev Only avaiable in public CLH\n @param _name Nickname or other user identification\n @param _description About the request\n @return propId ID of the new proposal, based on `arrProposals`"
            },
            "functionSelector": "a19a5f50",
            "id": 2173,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropRequestToJoin",
            "nameLocation": "11187:17:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2143,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "11228:5:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2173,
                  "src": "11214:19:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2142,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "11214:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2145,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "11257:12:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2173,
                  "src": "11243:26:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2144,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "11243:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2147,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "11292:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2173,
                  "src": "11279:23:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2146,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11279:5:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11204:104:50"
            },
            "returnParameters": {
              "id": 2151,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2150,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2173,
                  "src": "11343:7:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2149,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11343:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11341:11:50"
            },
            "scope": 2391,
            "src": "11178:832:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2204,
              "nodeType": "Block",
              "src": "12252:613:50",
              "statements": [
                {
                  "assignments": [
                    2182
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2182,
                      "mutability": "mutable",
                      "name": "CLLUserManagement",
                      "nameLocation": "12270:17:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2204,
                      "src": "12262:25:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2181,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "12262:7:50",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2186,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2183,
                        "name": "CCLFACTORY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1066,
                        "src": "12290:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLFactory_$5688",
                          "typeString": "contract ICLFactory"
                        }
                      },
                      "id": 2184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "CLLUserManagement",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5621,
                      "src": "12290:28:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 2185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12290:30:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12262:58:50"
                },
                {
                  "assignments": [
                    2188,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2188,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "12394:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2204,
                      "src": "12389:18:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2187,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "12389:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "documentation": "@custom:oz-upgrades-unsafe-allow delegatecall",
                  "id": 2198,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "41636365707452656a656374496e7669746174696f6e28626f6f6c2c627974657329",
                            "id": 2193,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12499:36:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_81cf22d80f4ec7d62ace7f62bb20df069329fad76ea536d29d67fc68ae1b5019",
                              "typeString": "literal_string \"AcceptRejectInvitation(bool,bytes)\""
                            },
                            "value": "AcceptRejectInvitation(bool,bytes)"
                          },
                          {
                            "id": 2194,
                            "name": "_acceptance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2176,
                            "src": "12553:11:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 2195,
                            "name": "_signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2178,
                            "src": "12582:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_81cf22d80f4ec7d62ace7f62bb20df069329fad76ea536d29d67fc68ae1b5019",
                              "typeString": "literal_string \"AcceptRejectInvitation(bool,bytes)\""
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 2191,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "12457:3:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "12457:23:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 2196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12457:149:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 2189,
                        "name": "CLLUserManagement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2182,
                        "src": "12413:17:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 2190,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "12413:30:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 2197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12413:203:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12388:228:50"
                },
                {
                  "condition": {
                    "id": 2200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "12631:14:50",
                    "subExpression": {
                      "id": 2199,
                      "name": "successDGTCLL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2188,
                      "src": "12632:13:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2203,
                  "nodeType": "IfStatement",
                  "src": "12627:232:50",
                  "trueBody": {
                    "id": 2202,
                    "nodeType": "Block",
                    "src": "12648:211:50",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "12671:178:50",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "12689:22:50",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12706:4:50",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "12700:5:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12700:11:50"
                              },
                              "variables": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulTypedName",
                                  "src": "12693:3:50",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "12728:28:50",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "returndatasize",
                                  "nodeType": "YulIdentifier",
                                  "src": "12740:14:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12740:16:50"
                              },
                              "variables": [
                                {
                                  "name": "size",
                                  "nodeType": "YulTypedName",
                                  "src": "12732:4:50",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "12788:3:50"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12793:1:50",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "12796:4:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "returndatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "12773:14:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12773:28:50"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12773:28:50"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "12825:3:50"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "12830:4:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "12818:6:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12818:17:50"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12818:17:50"
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [],
                        "id": 2201,
                        "nodeType": "InlineAssembly",
                        "src": "12662:187:50"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2174,
              "nodeType": "StructuredDocumentation",
              "src": "12016:113:50",
              "text": "@notice For an user that have an invitation pending\n @param _acceptance True for accept the invitation"
            },
            "functionSelector": "81cf22d8",
            "id": 2205,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "AcceptRejectInvitation",
            "nameLocation": "12143:22:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2179,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2176,
                  "mutability": "mutable",
                  "name": "_acceptance",
                  "nameLocation": "12180:11:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2205,
                  "src": "12175:16:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2175,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12175:4:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2178,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "12214:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2205,
                  "src": "12201:23:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2177,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12201:5:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12165:65:50"
            },
            "returnParameters": {
              "id": 2180,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12252:0:50"
            },
            "scope": 2391,
            "src": "12134:731:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2242,
              "nodeType": "Block",
              "src": "13102:735:50",
              "statements": [
                {
                  "assignments": [
                    2221
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2221,
                      "mutability": "mutable",
                      "name": "CLLGovernance",
                      "nameLocation": "13120:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2242,
                      "src": "13112:21:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2220,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "13112:7:50",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2225,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2222,
                        "name": "CCLFACTORY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1066,
                        "src": "13136:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLFactory_$5688",
                          "typeString": "contract ICLFactory"
                        }
                      },
                      "id": 2223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "CLLGovernance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5626,
                      "src": "13136:24:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 2224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13136:26:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13112:50:50"
                },
                {
                  "assignments": [
                    2227,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2227,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "13236:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2242,
                      "src": "13231:18:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2226,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "13231:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "documentation": "@custom:oz-upgrades-unsafe-allow delegatecall",
                  "id": 2240,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f7053776170455243323028616464726573732c616464726573732c75696e743235362c737472696e672c75696e7432353629",
                            "id": 2232,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13337:55:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_152de3b98ea86d627e1f008ef402ac90ecf10b8b7150905cf13cb40560733610",
                              "typeString": "literal_string \"PropSwapERC20(address,address,uint256,string,uint256)\""
                            },
                            "value": "PropSwapERC20(address,address,uint256,string,uint256)"
                          },
                          {
                            "id": 2233,
                            "name": "_tokenOutCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2207,
                            "src": "13410:12:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2234,
                            "name": "_tokenInCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2209,
                            "src": "13440:11:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2235,
                            "name": "_amountOutCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2211,
                            "src": "13469:13:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 2236,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2213,
                            "src": "13500:12:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 2237,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2215,
                            "src": "13530:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_152de3b98ea86d627e1f008ef402ac90ecf10b8b7150905cf13cb40560733610",
                              "typeString": "literal_string \"PropSwapERC20(address,address,uint256,string,uint256)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2230,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "13295:3:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "13295:23:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 2238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13295:259:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 2228,
                        "name": "CLLGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2221,
                        "src": "13255:13:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 2229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "13255:26:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 2239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13255:309:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13230:334:50"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "13584:247:50",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "13598:22:50",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13615:4:50",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "13609:5:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13609:11:50"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "13602:3:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "13633:28:50",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "13645:14:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13645:16:50"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "13637:4:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "13689:3:50"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13694:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "13697:4:50"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "13674:14:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13674:28:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13674:28:50"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13742:49:50",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "13767:3:50"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "13772:4:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "13760:6:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13760:17:50"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13760:17:50"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "13726:13:50"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "13718:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13718:23:50"
                        },
                        "nodeType": "YulIf",
                        "src": "13715:76:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "13811:3:50"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "13816:4:50"
                            }
                          ],
                          "functionName": {
                            "name": "return",
                            "nodeType": "YulIdentifier",
                            "src": "13804:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13804:17:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13804:17:50"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 2227,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "13726:13:50",
                      "valueSize": 1
                    }
                  ],
                  "id": 2241,
                  "nodeType": "InlineAssembly",
                  "src": "13575:256:50"
                }
              ]
            },
            "functionSelector": "152de3b9",
            "id": 2243,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropSwapERC20",
            "nameLocation": "12880:13:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2216,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2207,
                  "mutability": "mutable",
                  "name": "_tokenOutCLV",
                  "nameLocation": "12911:12:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2243,
                  "src": "12903:20:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2206,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12903:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2209,
                  "mutability": "mutable",
                  "name": "_tokenInCLV",
                  "nameLocation": "12941:11:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2243,
                  "src": "12933:19:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2208,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12933:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2211,
                  "mutability": "mutable",
                  "name": "_amountOutCLV",
                  "nameLocation": "12970:13:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2243,
                  "src": "12962:21:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2210,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12962:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2213,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "13007:12:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2243,
                  "src": "12993:26:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2212,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "12993:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2215,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "13037:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2243,
                  "src": "13029:18:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2214,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13029:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12893:160:50"
            },
            "returnParameters": {
              "id": 2219,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2218,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2243,
                  "src": "13088:7:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2217,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13088:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13086:11:50"
            },
            "scope": 2391,
            "src": "12871:966:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2277,
              "nodeType": "Block",
              "src": "14045:698:50",
              "statements": [
                {
                  "assignments": [
                    2257
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2257,
                      "mutability": "mutable",
                      "name": "CLLGovernance",
                      "nameLocation": "14063:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2277,
                      "src": "14055:21:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2256,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "14055:7:50",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2261,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2258,
                        "name": "CCLFACTORY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1066,
                        "src": "14079:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLFactory_$5688",
                          "typeString": "contract ICLFactory"
                        }
                      },
                      "id": 2259,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "CLLGovernance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5626,
                      "src": "14079:24:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 2260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14079:26:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14055:50:50"
                },
                {
                  "assignments": [
                    2263,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2263,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "14179:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2277,
                      "src": "14174:18:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2262,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "14174:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "documentation": "@custom:oz-upgrades-unsafe-allow delegatecall",
                  "id": 2275,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f7053656c6c455243323028616464726573732c75696e743235362c737472696e672c75696e7432353629",
                            "id": 2268,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14280:47:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_04f17a9bb89b1e450e234a08e9c473746a395c39a699313d8ca6797b97b374af",
                              "typeString": "literal_string \"PropSellERC20(address,uint256,string,uint256)\""
                            },
                            "value": "PropSellERC20(address,uint256,string,uint256)"
                          },
                          {
                            "id": 2269,
                            "name": "_tokenOutCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2245,
                            "src": "14345:12:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2270,
                            "name": "_amountOutCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2247,
                            "src": "14375:13:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 2271,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2249,
                            "src": "14406:12:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 2272,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2251,
                            "src": "14436:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_04f17a9bb89b1e450e234a08e9c473746a395c39a699313d8ca6797b97b374af",
                              "typeString": "literal_string \"PropSellERC20(address,uint256,string,uint256)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2266,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "14238:3:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "14238:23:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 2273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14238:222:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 2264,
                        "name": "CLLGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2257,
                        "src": "14198:13:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 2265,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "14198:26:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 2274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14198:272:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14173:297:50"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "14490:247:50",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "14504:22:50",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14521:4:50",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "14515:5:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14515:11:50"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "14508:3:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "14539:28:50",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "14551:14:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14551:16:50"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "14543:4:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "14595:3:50"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14600:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "14603:4:50"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "14580:14:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14580:28:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14580:28:50"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14648:49:50",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "14673:3:50"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "14678:4:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "14666:6:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14666:17:50"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14666:17:50"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "14632:13:50"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "14624:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14624:23:50"
                        },
                        "nodeType": "YulIf",
                        "src": "14621:76:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "14717:3:50"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "14722:4:50"
                            }
                          ],
                          "functionName": {
                            "name": "return",
                            "nodeType": "YulIdentifier",
                            "src": "14710:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14710:17:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14710:17:50"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 2263,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "14632:13:50",
                      "valueSize": 1
                    }
                  ],
                  "id": 2276,
                  "nodeType": "InlineAssembly",
                  "src": "14481:256:50"
                }
              ]
            },
            "functionSelector": "04f17a9b",
            "id": 2278,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropSellERC20",
            "nameLocation": "13852:13:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2252,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2245,
                  "mutability": "mutable",
                  "name": "_tokenOutCLV",
                  "nameLocation": "13883:12:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2278,
                  "src": "13875:20:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2244,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13875:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2247,
                  "mutability": "mutable",
                  "name": "_amountOutCLV",
                  "nameLocation": "13913:13:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2278,
                  "src": "13905:21:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2246,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13905:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2249,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "13950:12:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2278,
                  "src": "13936:26:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2248,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "13936:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2251,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "13980:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2278,
                  "src": "13972:18:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2250,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13972:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13865:131:50"
            },
            "returnParameters": {
              "id": 2255,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2254,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2278,
                  "src": "14031:7:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2253,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14031:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14029:11:50"
            },
            "scope": 2391,
            "src": "13843:900:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2312,
              "nodeType": "Block",
              "src": "14949:696:50",
              "statements": [
                {
                  "assignments": [
                    2292
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2292,
                      "mutability": "mutable",
                      "name": "CLLGovernance",
                      "nameLocation": "14967:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2312,
                      "src": "14959:21:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2291,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "14959:7:50",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2296,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2293,
                        "name": "CCLFACTORY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1066,
                        "src": "14983:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLFactory_$5688",
                          "typeString": "contract ICLFactory"
                        }
                      },
                      "id": 2294,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "CLLGovernance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5626,
                      "src": "14983:24:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 2295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14983:26:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14959:50:50"
                },
                {
                  "assignments": [
                    2298,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2298,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "15083:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2312,
                      "src": "15078:18:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2297,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "15078:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "documentation": "@custom:oz-upgrades-unsafe-allow delegatecall",
                  "id": 2310,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f70427579455243323028616464726573732c75696e743235362c737472696e672c75696e7432353629",
                            "id": 2303,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15184:46:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_2266e1bc09a9739eac0cdf93a2f130fcaf0d67ad5f8d0909c155c6843375d27c",
                              "typeString": "literal_string \"PropBuyERC20(address,uint256,string,uint256)\""
                            },
                            "value": "PropBuyERC20(address,uint256,string,uint256)"
                          },
                          {
                            "id": 2304,
                            "name": "_tokenInCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2280,
                            "src": "15248:11:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2305,
                            "name": "_amountOutCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2282,
                            "src": "15277:13:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 2306,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2284,
                            "src": "15308:12:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 2307,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2286,
                            "src": "15338:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_2266e1bc09a9739eac0cdf93a2f130fcaf0d67ad5f8d0909c155c6843375d27c",
                              "typeString": "literal_string \"PropBuyERC20(address,uint256,string,uint256)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2301,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "15142:3:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "15142:23:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 2308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15142:220:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 2299,
                        "name": "CLLGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2292,
                        "src": "15102:13:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 2300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "15102:26:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 2309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15102:270:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15077:295:50"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "15392:247:50",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "15406:22:50",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15423:4:50",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "15417:5:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15417:11:50"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "15410:3:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "15441:28:50",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "15453:14:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15453:16:50"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "15445:4:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "15497:3:50"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15502:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "15505:4:50"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "15482:14:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15482:28:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15482:28:50"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15550:49:50",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "15575:3:50"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "15580:4:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "15568:6:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15568:17:50"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15568:17:50"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "15534:13:50"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "15526:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15526:23:50"
                        },
                        "nodeType": "YulIf",
                        "src": "15523:76:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "15619:3:50"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "15624:4:50"
                            }
                          ],
                          "functionName": {
                            "name": "return",
                            "nodeType": "YulIdentifier",
                            "src": "15612:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15612:17:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15612:17:50"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 2298,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "15534:13:50",
                      "valueSize": 1
                    }
                  ],
                  "id": 2311,
                  "nodeType": "InlineAssembly",
                  "src": "15383:256:50"
                }
              ]
            },
            "functionSelector": "2266e1bc",
            "id": 2313,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropBuyERC20",
            "nameLocation": "14758:12:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2280,
                  "mutability": "mutable",
                  "name": "_tokenInCLV",
                  "nameLocation": "14788:11:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2313,
                  "src": "14780:19:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2279,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14780:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2282,
                  "mutability": "mutable",
                  "name": "_amountOutCLV",
                  "nameLocation": "14817:13:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2313,
                  "src": "14809:21:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2281,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14809:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2284,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "14854:12:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2313,
                  "src": "14840:26:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2283,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14840:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2286,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "14884:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2313,
                  "src": "14876:18:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2285,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14876:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14770:130:50"
            },
            "returnParameters": {
              "id": 2290,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2289,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2313,
                  "src": "14935:7:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2288,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14935:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14933:11:50"
            },
            "scope": 2391,
            "src": "14749:896:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2347,
              "nodeType": "Block",
              "src": "16054:682:50",
              "statements": [
                {
                  "assignments": [
                    2327
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2327,
                      "mutability": "mutable",
                      "name": "CLLGovernance",
                      "nameLocation": "16072:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2347,
                      "src": "16064:21:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2326,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "16064:7:50",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2331,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2328,
                        "name": "CCLFACTORY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1066,
                        "src": "16088:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLFactory_$5688",
                          "typeString": "contract ICLFactory"
                        }
                      },
                      "id": 2329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "CLLGovernance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5626,
                      "src": "16088:24:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 2330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16088:26:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16064:50:50"
                },
                {
                  "assignments": [
                    2333,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2333,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "16188:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2347,
                      "src": "16183:18:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2332,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "16183:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "documentation": "@custom:oz-upgrades-unsafe-allow delegatecall",
                  "id": 2345,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "62756c6b566f74652875696e743235365b5d2c626f6f6c2c737472696e672c627974657329",
                            "id": 2338,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16289:39:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_a1c89c9df67037900e8200fdeb8dc1c4034c53148e3fd96bb77dc63379bb6bcb",
                              "typeString": "literal_string \"bulkVote(uint256[],bool,string,bytes)\""
                            },
                            "value": "bulkVote(uint256[],bool,string,bytes)"
                          },
                          {
                            "id": 2339,
                            "name": "_propId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2317,
                            "src": "16346:7:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "id": 2340,
                            "name": "_support",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2319,
                            "src": "16371:8:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 2341,
                            "name": "_justification",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2321,
                            "src": "16397:14:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 2342,
                            "name": "_signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2323,
                            "src": "16429:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_a1c89c9df67037900e8200fdeb8dc1c4034c53148e3fd96bb77dc63379bb6bcb",
                              "typeString": "literal_string \"bulkVote(uint256[],bool,string,bytes)\""
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 2336,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "16247:3:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "16247:23:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 2343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16247:206:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 2334,
                        "name": "CLLGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2327,
                        "src": "16207:13:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 2335,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "16207:26:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 2344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16207:256:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16182:281:50"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "16483:247:50",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "16497:22:50",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16514:4:50",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "16508:5:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16508:11:50"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "16501:3:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "16532:28:50",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "16544:14:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16544:16:50"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "16536:4:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "16588:3:50"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16593:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "16596:4:50"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "16573:14:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16573:28:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16573:28:50"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16641:49:50",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "16666:3:50"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "16671:4:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "16659:6:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16659:17:50"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16659:17:50"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "16625:13:50"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "16617:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16617:23:50"
                        },
                        "nodeType": "YulIf",
                        "src": "16614:76:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "16710:3:50"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "16715:4:50"
                            }
                          ],
                          "functionName": {
                            "name": "return",
                            "nodeType": "YulIdentifier",
                            "src": "16703:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16703:17:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16703:17:50"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 2333,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "16625:13:50",
                      "valueSize": 1
                    }
                  ],
                  "id": 2346,
                  "nodeType": "InlineAssembly",
                  "src": "16474:256:50"
                }
              ]
            },
            "documentation": {
              "id": 2314,
              "nodeType": "StructuredDocumentation",
              "src": "15652:224:50",
              "text": "@notice Vote for multiple proposal\n @param _propId Array with ID of the proposal to votes\n @param _support is the Vote (True or False) for all proposals\n @param _justification Description of the vote"
            },
            "functionSelector": "a1c89c9d",
            "id": 2348,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bulkVote",
            "nameLocation": "15890:8:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2324,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2317,
                  "mutability": "mutable",
                  "name": "_propId",
                  "nameLocation": "15925:7:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2348,
                  "src": "15908:24:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2315,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "15908:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2316,
                    "nodeType": "ArrayTypeName",
                    "src": "15908:9:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2319,
                  "mutability": "mutable",
                  "name": "_support",
                  "nameLocation": "15947:8:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2348,
                  "src": "15942:13:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2318,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "15942:4:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2321,
                  "mutability": "mutable",
                  "name": "_justification",
                  "nameLocation": "15979:14:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2348,
                  "src": "15965:28:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2320,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "15965:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2323,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "16016:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2348,
                  "src": "16003:23:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2322,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "16003:5:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15898:134:50"
            },
            "returnParameters": {
              "id": 2325,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16054:0:50"
            },
            "scope": 2391,
            "src": "15881:855:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2357,
              "nodeType": "Block",
              "src": "16844:39:50",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 2354,
                      "name": "arrUsers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1020,
                      "src": "16861:8:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_strUser_$9548_storage_$dyn_storage",
                        "typeString": "struct strUser storage ref[] storage ref"
                      }
                    },
                    "id": 2355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "16861:15:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2353,
                  "id": 2356,
                  "nodeType": "Return",
                  "src": "16854:22:50"
                }
              ]
            },
            "documentation": {
              "id": 2349,
              "nodeType": "StructuredDocumentation",
              "src": "16742:36:50",
              "text": "@notice Length of arrUsers array"
            },
            "functionSelector": "a693649a",
            "id": 2358,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetArrUsersLength",
            "nameLocation": "16792:17:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2350,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16809:2:50"
            },
            "returnParameters": {
              "id": 2353,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2352,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2358,
                  "src": "16835:7:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2351,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16835:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16833:11:50"
            },
            "scope": 2391,
            "src": "16783:100:50",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2367,
              "nodeType": "Block",
              "src": "16999:43:50",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 2364,
                      "name": "arrProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1024,
                      "src": "17016:12:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_strProposal_$9568_storage_$dyn_storage",
                        "typeString": "struct strProposal storage ref[] storage ref"
                      }
                    },
                    "id": 2365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "17016:19:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2363,
                  "id": 2366,
                  "nodeType": "Return",
                  "src": "17009:26:50"
                }
              ]
            },
            "documentation": {
              "id": 2359,
              "nodeType": "StructuredDocumentation",
              "src": "16889:40:50",
              "text": "@notice Length of arrProposals array"
            },
            "functionSelector": "4e9d5472",
            "id": 2368,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetArrProposalsLength",
            "nameLocation": "16943:21:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2360,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16964:2:50"
            },
            "returnParameters": {
              "id": 2363,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2362,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2368,
                  "src": "16990:7:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2361,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16990:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16988:11:50"
            },
            "scope": 2391,
            "src": "16934:108:50",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2378,
              "nodeType": "Block",
              "src": "17221:36:50",
              "statements": [
                {
                  "expression": {
                    "id": 2376,
                    "name": "arrProposals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1024,
                    "src": "17238:12:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_strProposal_$9568_storage_$dyn_storage",
                      "typeString": "struct strProposal storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 2375,
                  "id": 2377,
                  "nodeType": "Return",
                  "src": "17231:19:50"
                }
              ]
            },
            "documentation": {
              "id": 2369,
              "nodeType": "StructuredDocumentation",
              "src": "17048:95:50",
              "text": "@notice The list of all Proposals\n @return arrProposals the array with all proposals"
            },
            "functionSelector": "b4c62192",
            "id": 2379,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetProposalList",
            "nameLocation": "17157:15:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2370,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17172:2:50"
            },
            "returnParameters": {
              "id": 2375,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2374,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2379,
                  "src": "17198:20:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_strProposal_$9568_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct strProposal[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2372,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 2371,
                        "name": "strProposal",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 9568,
                        "src": "17198:11:50"
                      },
                      "referencedDeclaration": 9568,
                      "src": "17198:11:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_strProposal_$9568_storage_ptr",
                        "typeString": "struct strProposal"
                      }
                    },
                    "id": 2373,
                    "nodeType": "ArrayTypeName",
                    "src": "17198:13:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_strProposal_$9568_storage_$dyn_storage_ptr",
                      "typeString": "struct strProposal[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17196:24:50"
            },
            "scope": 2391,
            "src": "17148:109:50",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2389,
              "nodeType": "Block",
              "src": "17449:39:50",
              "statements": [
                {
                  "expression": {
                    "id": 2387,
                    "name": "arrDataPropUser",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1028,
                    "src": "17466:15:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_strDataUser_$9582_storage_$dyn_storage",
                      "typeString": "struct strDataUser storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 2386,
                  "id": 2388,
                  "nodeType": "Return",
                  "src": "17459:22:50"
                }
              ]
            },
            "documentation": {
              "id": 2380,
              "nodeType": "StructuredDocumentation",
              "src": "17263:105:50",
              "text": "@notice Get complete array of arrDataPropUser\n @return arrDataPropUser the array with all data"
            },
            "functionSelector": "29647ee5",
            "id": 2390,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetArrDataPropUser",
            "nameLocation": "17382:18:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2381,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17400:2:50"
            },
            "returnParameters": {
              "id": 2386,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2385,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2390,
                  "src": "17426:20:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_strDataUser_$9582_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct strDataUser[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2383,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 2382,
                        "name": "strDataUser",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 9582,
                        "src": "17426:11:50"
                      },
                      "referencedDeclaration": 9582,
                      "src": "17426:11:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_strDataUser_$9582_storage_ptr",
                        "typeString": "struct strDataUser"
                      }
                    },
                    "id": 2384,
                    "nodeType": "ArrayTypeName",
                    "src": "17426:13:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_strDataUser_$9582_storage_$dyn_storage_ptr",
                      "typeString": "struct strDataUser[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17424:24:50"
            },
            "scope": 2391,
            "src": "17373:115:50",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2392,
        "src": "327:17163:50",
        "usedErrors": []
      }
    ],
    "src": "32:17458:50"
  },
  "bytecode": "",
  "bytecodeSha1": "282beaa7a55d3b89906d5619f516cfa9a5d0691a",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "CLHouse",
  "coverageMap": {
    "branches": {
      "18": {
        "CLHouse.Init": {
          "13": [
            4396,
            4409,
            false
          ]
        }
      },
      "47": {},
      "48": {},
      "50": {
        "CLHouse.AcceptRejectInvitation": {
          "11": [
            12632,
            12645,
            false
          ]
        },
        "CLHouse.ExecProp": {
          "9": [
            3089,
            3102,
            false
          ]
        },
        "CLHouse.Init": {
          "10": [
            2029,
            2042,
            false
          ]
        },
        "CLHouse.VoteProposal": {
          "12": [
            4257,
            4270,
            false
          ]
        }
      }
    },
    "statements": {
      "18": {},
      "47": {},
      "48": {},
      "50": {
        "CLHouse.AcceptRejectInvitation": {
          "6": [
            12627,
            12859
          ]
        },
        "CLHouse.ExecProp": {
          "3": [
            3084,
            3316
          ],
          "4": [
            3326,
            3371
          ]
        },
        "CLHouse.GetArrDataPropUser": {
          "2": [
            17459,
            17481
          ]
        },
        "CLHouse.GetArrProposalsLength": {
          "0": [
            17009,
            17035
          ]
        },
        "CLHouse.GetArrUsersLength": {
          "1": [
            16854,
            16876
          ]
        },
        "CLHouse.GetProposalList": {
          "7": [
            17231,
            17250
          ]
        },
        "CLHouse.Init": {
          "5": [
            2024,
            2256
          ]
        },
        "CLHouse.VoteProposal": {
          "8": [
            4252,
            4484
          ]
        }
      }
    }
  },
  "dependencies": [
    "CLStorage",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/Initializable"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "327:17163:50:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13843:900;;;;;;:::i;:::-;;:::i;:::-;;;2099:25:62;;;2087:2;2072:18;13843:900:50;;;;;;;;1573:23:47;;;;;-1:-1:-1;;;;;1573:23:47;;;;;;-1:-1:-1;;;;;2314:32:62;;;2296:51;;2284:2;2269:18;1573:23:47;2135:218:62;673:21:47;;;;;-1:-1:-1;;;;;673:21:47;;;567:30;;;;;;12871:966:50;;;;;;:::i;:::-;;:::i;963:36:47:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;462:23::-;;;;;;819:37;;;;;;410:21;;;;;;;;;;;;;;;4973:14:62;;4966:22;4948:41;;4936:2;4921:18;410:21:47;4808:187:62;1602:27:47;;;;;-1:-1:-1;;;;;1602:27:47;;;14749:896:50;;;;;;:::i;:::-;;:::i;893:25:47:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;17373:115:50:-;;;:::i;:::-;;;;;;;:::i;6226:907::-;;;;;;:::i;:::-;;:::i;4926:1024::-;;;;;;:::i;:::-;;:::i;1055:44:47:-;;;;;;:::i;:::-;;:::i;16934:108:50:-;17016:12;:19;16934:108;;1187:54:47;;;;;;:::i;:::-;;;;;;;;;;;;;;759:24;;;:::i;:::-;;;;;;;:::i;10024:854:50:-;;;;;;:::i;:::-;;:::i;2617:761::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1516:23:47:-;;;;;-1:-1:-1;;;;;1516:23:47;;;1135:46;;;;;;:::i;:::-;;;;;;;;;;;;;;7478:884:50;;;;;;:::i;:::-;;:::i;1138:1124::-;;;;;;:::i;:::-;;:::i;:::-;;12134:731;;;;;;:::i;:::-;;:::i;1267:48:47:-;;;;;;:::i;:::-;;;;;;;;;;;;;;1545:22;;;;;-1:-1:-1;;;;;1545:22:47;;;523:38;;;;;;1482:28;;;;;-1:-1:-1;;;;;1482:28:47;;;11178:832:50;;;;;;:::i;:::-;;:::i;15881:855::-;;;;;;:::i;:::-;;:::i;16783:100::-;16861:8;:15;16783:100;;17148:109;;;:::i;:::-;;;;;;;:::i;1005:44:47:-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;18626:15:62;;;18608:34;;18673:2;18658:18;;18651:34;;;;18721:15;;;18701:18;;;18694:43;;;;18773:15;;;18768:2;18753:18;;18746:43;18557:3;18542:19;1005:44:47;18339:456:62;3664:826:50;;;;;;:::i;:::-;;:::i;1341:67:47:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;700:22::-;;;;;-1:-1:-1;;;;;700:22:47;;;924:33;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::i;8707:956:50:-;;;;;;:::i;:::-;;:::i;491:26:47:-;;;;;;603:33;;;;;;380:24;;;;;;;;;13843:900:50;14031:7;14055:21;14079:10;;;;;;;;;-1:-1:-1;;;;;14079:10:50;-1:-1:-1;;;;;14079:24:50;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14055:50;;14174:18;14198:13;-1:-1:-1;;;;;14198:26:50;14345:12;14375:13;14406:12;14436:10;14238:222;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;14238:222:50;;;;;;;;;;;;;;-1:-1:-1;;;;;14238:222:50;-1:-1:-1;;;14238:222:50;;;14198:272;;;14238:222;14198:272;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14173:297;;;14521:4;14515:11;14551:16;14603:4;14600:1;14595:3;14580:28;14632:13;14621:76;;14678:4;14673:3;14666:17;14621:76;14722:4;14717:3;14710:17;12871:966;13088:7;13112:21;13136:10;;;;;;;;;-1:-1:-1;;;;;13136:10:50;-1:-1:-1;;;;;13136:24:50;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13112:50;;13231:18;13255:13;-1:-1:-1;;;;;13255:26:50;13410:12;13440:11;13469:13;13500:12;13530:10;13295:259;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;13295:259:50;;;;;;;;;;;;;;-1:-1:-1;;;;;13295:259:50;-1:-1:-1;;;13295:259:50;;;13255:309;;;13295:259;13255:309;:::i;963:36:47:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;963:36:47;;;;-1:-1:-1;963:36:47;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;963:36:47;;;;;;;-1:-1:-1;;963:36:47;;;:::o;14749:896:50:-;14935:7;14959:21;14983:10;;;;;;;;;-1:-1:-1;;;;;14983:10:50;-1:-1:-1;;;;;14983:24:50;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14959:50;;15078:18;15102:13;-1:-1:-1;;;;;15102:26:50;15248:11;15277:13;15308:12;15338:10;15142:220;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;15142:220:50;;;;;;;;;;;;;;-1:-1:-1;;;;;15142:220:50;-1:-1:-1;;;15142:220:50;;;15102:270;;;15142:220;15102:270;:::i;893:25:47:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;893:25:47;;;;-1:-1:-1;893:25:47;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;893:25:47;;;;;;;;;;;;;;;;;-1:-1:-1;893:25:47;;;;;;:::o;17373:115:50:-;17426:20;17466:15;17459:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;17459:22:50;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;17459:22:50;;;-1:-1:-1;;17459:22:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17373:115;:::o;6226:907::-;6416:14;6447:21;6471:10;;;;;;;;;-1:-1:-1;;;;;6471:10:50;-1:-1:-1;;;;;6471:24:50;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6447:50;;6566:18;6590:13;-1:-1:-1;;;;;6590:26:50;6736:11;6765:12;6795:10;6823;6630:217;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6630:217:50;;;;;;;;;;;;;;-1:-1:-1;;;;;6630:217:50;-1:-1:-1;;;6630:217:50;;;6590:267;;;6630:217;6590:267;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6565:292;;;6908:4;6902:11;6938:16;6990:4;6987:1;6982:3;6967:28;7019:13;7008:76;;7065:4;7060:3;7053:17;7008:76;-1:-1:-1;7107:10:50;;6226:907;-1:-1:-1;;;;;;;6226:907:50:o;4926:1024::-;5170:14;5201:21;5225:10;;;;;;;;;-1:-1:-1;;;;;5225:10:50;-1:-1:-1;;;;;5225:24:50;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5201:50;;5320:18;5344:13;-1:-1:-1;;;;;5344:26:50;5502:11;5531:5;5554:12;5584:10;5612;5640;5384:280;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5384:280:50;;;;;;;;;;;;;;-1:-1:-1;;;;;5384:280:50;-1:-1:-1;;;5384:280:50;;;5344:330;;;5384:280;5344:330;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5319:355;;;5725:4;5719:11;5755:16;5807:4;5804:1;5799:3;5784:28;5836:13;5825:76;;5882:4;5877:3;5870:17;5825:76;-1:-1:-1;5924:10:50;;4926:1024;-1:-1:-1;;;;;;;;;4926:1024:50:o;1055:44:47:-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1055:44:47;:::o;759:24::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;10024:854:50:-;10188:14;10219:21;10243:10;;;;;;;;;-1:-1:-1;;;;;10243:10:50;-1:-1:-1;;;;;10243:24:50;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10219:50;;10338:18;10362:13;-1:-1:-1;;;;;10362:26:50;10500:20;10538:12;10568:10;10402:190;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;10402:190:50;;;;;;;;;;;;;;-1:-1:-1;;;;;10402:190:50;-1:-1:-1;;;10402:190:50;;;10362:240;;;10402:190;10362:240;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10337:265;;;10653:4;10647:11;10683:16;10735:4;10732:1;10727:3;10712:28;10764:13;10753:76;;10810:4;10805:3;10798:17;10753:76;-1:-1:-1;10852:10:50;;10024:854;-1:-1:-1;;;;;;10024:854:50:o;2617:761::-;2710:11;2735:21;2781;2805:10;;;;;;;;;-1:-1:-1;;;;;2805:10:50;-1:-1:-1;;;;;2805:24:50;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2781:50;;2900:18;2924:13;-1:-1:-1;;;;;2924:26:50;3042:7;2964:99;;;;;;2099:25:62;;2087:2;2072:18;;1953:177;2964:99:50;;;;-1:-1:-1;;2964:99:50;;;;;;;;;;;;;;-1:-1:-1;;;;;2964:99:50;-1:-1:-1;;;2964:99:50;;;2924:149;;;2964:99;2924:149;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2899:174;;;3089:13;3084:232;;3163:4;3157:11;3197:16;3253:4;3250:1;3245:3;3230:28;3287:4;3282:3;3275:17;3084:232;3335:4;3326:45;;;;;;;;;;;;;;;;;;;;;;;2617:761;;;:::o;7478:884::-;7653:14;7684:21;7708:10;;;;;;;;;-1:-1:-1;;;;;7708:10:50;-1:-1:-1;;;;;7708:24:50;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7684:50;;7803:18;7827:13;-1:-1:-1;;;;;7827:26:50;7970:3;7991:13;8022:12;8052:10;7867:209;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;7867:209:50;;;;;;;;;;;;;;-1:-1:-1;;;;;7867:209:50;-1:-1:-1;;;7867:209:50;;;7827:259;;;7867:209;7827:259;:::i;1138:1124::-;4396:13:18;;247:1:48;;-1:-1:-1;;;4396:13:18;;;;4395:14;:40;;;;-1:-1:-1;4413:12:18;;:22;;;;-1:-1:-1;;;4413:12:18;;;;:22;4395:40;4387:99;;;;-1:-1:-1;;;4387:99:18;;25716:2:62;4387:99:18;;;25698:21:62;25755:2;25735:18;;;25728:30;25794:34;25774:18;;;25767:62;-1:-1:-1;;;25845:18:62;;;25838:44;25899:19;;4387:99:18;;;;;;;;4496:12;:22;;-1:-1:-1;;;;;;;4528:20:18;;;-1:-1:-1;;;4496:22:18;;;;-1:-1:-1;;;;4528:20:18;;;;;-1:-1:-1;1575:4:50;1590:22:::1;1575:41;;;;-1:-1:-1::0;;;;;1575:54:50::1;1786:6;1811:10;1839:13;1870:10;1898:9;1925;1952:4;1974:15;1643:360;;;;;;;;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;1643:360:50;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;1643:360:50::1;-1:-1:-1::0;;;1643:360:50::1;::::0;;1575:438;::::1;::::0;1643:360;1575:438:::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1550:463;;;2029:13;2024:232;;2103:4;2097:11;2137:16;2193:4;2190:1;2185:3;2170:28;2227:4;2222:3;2215:17;2024:232;-1:-1:-1::0;4569:13:18;:21;;-1:-1:-1;;;;4569:21:18;;;4605:20;;28352:4:62;28340:17;;28322:36;;4605:20:18;;28310:2:62;28295:18;4605:20:18;;;;;;;1138:1124:50;;;;;;;;;:::o;12134:731::-;12290:10;;:30;;;-1:-1:-1;;;12290:30:50;;;;12262:25;;-1:-1:-1;;;;;12290:10:50;;:28;;:30;;;;;;;;;;;;;;:10;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12262:58;;12389:18;12413:17;-1:-1:-1;;;;;12413:30:50;12553:11;12582:10;12457:149;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;12457:149:50;;;;;;;;;;;;;;-1:-1:-1;;;;;12457:149:50;-1:-1:-1;;;12457:149:50;;;12413:203;;;12457:149;12413:203;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12388:228;;;12632:13;12627:232;;12706:4;12700:11;12740:16;12796:4;12793:1;12788:3;12773:28;12830:4;12825:3;12818:17;12627:232;12252:613;;12134:731;;:::o;11178:832::-;11343:7;11367:21;11391:10;;;;;;;;;-1:-1:-1;;;;;11391:10:50;-1:-1:-1;;;;;11391:24:50;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11367:50;;11486:18;11510:13;-1:-1:-1;;;;;11510:26:50;11650:5;11673:12;11703:10;11550:177;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;11550:177:50;;;;;;;;;;;;;;-1:-1:-1;;;;;11550:177:50;-1:-1:-1;;;11550:177:50;;;11510:227;;;11550:177;11510:227;:::i;15881:855::-;16088:10;;:26;;;-1:-1:-1;;;16088:26:50;;;;16064:21;;-1:-1:-1;;;;;16088:10:50;;:24;;:26;;;;;;;;;;;;;;:10;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16064:50;;16183:18;16207:13;-1:-1:-1;;;;;16207:26:50;16346:7;16371:8;16397:14;16429:10;16247:206;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;16247:206:50;;;;;;;;;;;;;;-1:-1:-1;;;;;16247:206:50;-1:-1:-1;;;16247:206:50;;;16207:256;;;16247:206;16207:256;:::i;17148:109::-;17198:20;17238:12;17231:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;17231:19:50;;;;;;;;;;;;-1:-1:-1;;;17231:19:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;17231:19:50;;;-1:-1:-1;;17231:19:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1005:44:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1005:44:47;;;;-1:-1:-1;1005:44:47;;;;;;;:::o;3664:826:50:-;3864:10;;:26;;;-1:-1:-1;;;3864:26:50;;;;3840:21;;-1:-1:-1;;;;;3864:10:50;;:24;;:26;;;;;;;;;;;;;;:10;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3840:50;;3959:18;3983:13;-1:-1:-1;;;;;3983:26:50;4124:7;4149:8;4175:14;4207:10;4023:208;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4023:208:50;;;;;;;;;;;;;;-1:-1:-1;;;;;4023:208:50;-1:-1:-1;;;4023:208:50;;;3983:258;;;4023:208;3983:258;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3958:283;;;4257:13;4252:232;;4331:4;4325:11;4365:16;4421:4;4418:1;4413:3;4398:28;4455:4;4450:3;4443:17;4252:232;3830:660;;3664:826;;;;:::o;1341:67:47:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;924:33::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;924:33:47;;;-1:-1:-1;;;;924:33:47;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;924:33:47;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;924:33:47;-1:-1:-1;924:33:47;;;;;;;;;;;:::o;8707:956:50:-;8914:14;8945:21;8969:10;;;;;;;;;-1:-1:-1;;;;;8969:10:50;-1:-1:-1;;;;;8969:24:50;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8945:50;;9064:18;9088:13;-1:-1:-1;;;;;9088:26:50;9241:3;9262:13;9293:12;9323;9353:10;9128:249;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;9128:249:50;;;;;;;;;;;;;;-1:-1:-1;;;;;9128:249:50;-1:-1:-1;;;9128:249:50;;;9088:299;;;9128:249;9088:299;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9063:324;;;9438:4;9432:11;9468:16;9520:4;9517:1;9512:3;9497:28;9549:13;9538:76;;9595:4;9590:3;9583:17;9538:76;-1:-1:-1;9637:10:50;;8707:956;-1:-1:-1;;;;;;;;8707:956:50:o;14:131:62:-;-1:-1:-1;;;;;89:31:62;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:127::-;211:10;206:3;202:20;199:1;192:31;242:4;239:1;232:15;266:4;263:1;256:15;282:251;354:2;348:9;396:2;384:15;;-1:-1:-1;;;;;414:34:62;;450:22;;;411:62;408:88;;;476:18;;:::i;:::-;512:2;505:22;282:251;:::o;538:275::-;609:2;603:9;674:2;655:13;;-1:-1:-1;;651:27:62;639:40;;-1:-1:-1;;;;;694:34:62;;730:22;;;691:62;688:88;;;756:18;;:::i;:::-;792:2;785:22;538:275;;-1:-1:-1;538:275:62:o;818:531::-;861:5;914:3;907:4;899:6;895:17;891:27;881:55;;932:1;929;922:12;881:55;968:6;955:20;-1:-1:-1;;;;;990:2:62;987:26;984:52;;;1016:18;;:::i;:::-;1060:55;1103:2;1084:13;;-1:-1:-1;;1080:27:62;1109:4;1076:38;1060:55;:::i;:::-;1140:2;1131:7;1124:19;1186:3;1179:4;1174:2;1166:6;1162:15;1158:26;1155:35;1152:55;;;1203:1;1200;1193:12;1152:55;1268:2;1261:4;1253:6;1249:17;1242:4;1233:7;1229:18;1216:55;1316:1;1291:16;;;1309:4;1287:27;1280:38;;;;1295:7;818:531;-1:-1:-1;;;818:531:62:o;1354:594::-;1450:6;1458;1466;1474;1527:3;1515:9;1506:7;1502:23;1498:33;1495:53;;;1544:1;1541;1534:12;1495:53;1583:9;1570:23;1602:31;1627:5;1602:31;:::i;:::-;1652:5;-1:-1:-1;1704:2:62;1689:18;;1676:32;;-1:-1:-1;1759:2:62;1744:18;;1731:32;-1:-1:-1;;;;;1775:30:62;;1772:50;;;1818:1;1815;1808:12;1772:50;1841;1883:7;1874:6;1863:9;1859:22;1841:50;:::i;:::-;1354:594;;;;-1:-1:-1;1831:60:62;;1938:2;1923:18;1910:32;;-1:-1:-1;;;1354:594:62:o;2675:736::-;2780:6;2788;2796;2804;2812;2865:3;2853:9;2844:7;2840:23;2836:33;2833:53;;;2882:1;2879;2872:12;2833:53;2921:9;2908:23;2940:31;2965:5;2940:31;:::i;:::-;2990:5;-1:-1:-1;3047:2:62;3032:18;;3019:32;3060:33;3019:32;3060:33;:::i;:::-;3112:7;-1:-1:-1;3166:2:62;3151:18;;3138:32;;-1:-1:-1;3221:2:62;3206:18;;3193:32;-1:-1:-1;;;;;3237:30:62;;3234:50;;;3280:1;3277;3270:12;3234:50;3303;3345:7;3336:6;3325:9;3321:22;3303:50;:::i;:::-;2675:736;;;;-1:-1:-1;2675:736:62;;3400:3;3385:19;3372:33;;2675:736;-1:-1:-1;;;2675:736:62:o;3416:180::-;3475:6;3528:2;3516:9;3507:7;3503:23;3499:32;3496:52;;;3544:1;3541;3534:12;3496:52;-1:-1:-1;3567:23:62;;3416:180;-1:-1:-1;3416:180:62:o;3601:258::-;3673:1;3683:113;3697:6;3694:1;3691:13;3683:113;;;3773:11;;;3767:18;3754:11;;;3747:39;3719:2;3712:10;3683:113;;;3814:6;3811:1;3808:13;3805:48;;;-1:-1:-1;;3849:1:62;3831:16;;3824:27;3601:258::o;3864:::-;3906:3;3944:5;3938:12;3971:6;3966:3;3959:19;3987:63;4043:6;4036:4;4031:3;4027:14;4020:4;4013:5;4009:16;3987:63;:::i;:::-;4104:2;4083:15;-1:-1:-1;;4079:29:62;4070:39;;;;4111:4;4066:50;;3864:258;-1:-1:-1;;3864:258:62:o;4223:398::-;-1:-1:-1;;;;;4422:32:62;;4404:51;;4491:2;4486;4471:18;;4464:30;;;-1:-1:-1;;4511:45:62;;4537:18;;4529:6;4511:45;:::i;:::-;4503:53;;4606:6;4599:14;4592:22;4587:2;4576:9;4572:18;4565:50;4223:398;;;;;;:::o;5000:553::-;-1:-1:-1;;;;;5249:32:62;;5231:51;;5269:3;5313:2;5298:18;;5291:31;;;-1:-1:-1;;5339:46:62;;5365:19;;5357:6;5339:46;:::i;:::-;5416:2;5401:18;;5394:34;;;;-1:-1:-1;5471:14:62;;5464:22;5459:2;5444:18;;5437:50;5531:14;5524:22;5518:3;5503:19;;;5496:51;5331:54;5000:553;-1:-1:-1;;5000:553:62:o;5558:1193::-;5758:4;5787:2;5827;5816:9;5812:18;5857:2;5846:9;5839:21;5880:6;5915;5909:13;5946:6;5938;5931:22;5972:2;5962:12;;6005:2;5994:9;5990:18;5983:25;;6067:2;6057:6;6054:1;6050:14;6039:9;6035:30;6031:39;6105:2;6097:6;6093:15;6126:1;6136:586;6150:6;6147:1;6144:13;6136:586;;;6215:22;;;-1:-1:-1;;6211:36:62;6199:49;;6271:13;;6343:9;;-1:-1:-1;;;;;6339:35:62;6324:51;;6414:11;;;6408:18;6307:4;6446:15;;;6439:27;;;6307:4;6493:48;6525:15;;;6408:18;6493:48;:::i;:::-;6598:11;;;6592:18;6585:26;6578:34;6561:15;;;6554:59;;;;-1:-1:-1;6700:12:62;;;;6479:62;-1:-1:-1;6665:15:62;;;;6172:1;6165:9;6136:586;;;-1:-1:-1;6739:6:62;;5558:1193;-1:-1:-1;;;;;;;;5558:1193:62:o;6756:746::-;6861:6;6869;6877;6885;6938:3;6926:9;6917:7;6913:23;6909:33;6906:53;;;6955:1;6952;6945:12;6906:53;6994:9;6981:23;7013:31;7038:5;7013:31;:::i;:::-;7063:5;-1:-1:-1;7119:2:62;7104:18;;7091:32;-1:-1:-1;;;;;7172:14:62;;;7169:34;;;7199:1;7196;7189:12;7169:34;7222:50;7264:7;7255:6;7244:9;7240:22;7222:50;:::i;:::-;7212:60;;7319:2;7308:9;7304:18;7291:32;7281:42;;7376:2;7365:9;7361:18;7348:32;7332:48;;7405:2;7395:8;7392:16;7389:36;;;7421:1;7418;7411:12;7389:36;;7444:52;7488:7;7477:8;7466:9;7462:24;7444:52;:::i;:::-;7434:62;;;6756:746;;;;;;;:::o;7507:160::-;7572:20;;7628:13;;7621:21;7611:32;;7601:60;;7657:1;7654;7647:12;7601:60;7507:160;;;:::o;7672:1016::-;7802:6;7810;7818;7826;7834;7842;7895:3;7883:9;7874:7;7870:23;7866:33;7863:53;;;7912:1;7909;7902:12;7863:53;7951:9;7938:23;7970:31;7995:5;7970:31;:::i;:::-;8020:5;-1:-1:-1;8076:2:62;8061:18;;8048:32;-1:-1:-1;;;;;8129:14:62;;;8126:34;;;8156:1;8153;8146:12;8126:34;8179:50;8221:7;8212:6;8201:9;8197:22;8179:50;:::i;:::-;8169:60;;8282:2;8271:9;8267:18;8254:32;8238:48;;8311:2;8301:8;8298:16;8295:36;;;8327:1;8324;8317:12;8295:36;8350:52;8394:7;8383:8;8372:9;8368:24;8350:52;:::i;:::-;8340:62;;8421:35;8452:2;8441:9;8437:18;8421:35;:::i;:::-;8411:45;;8503:3;8492:9;8488:19;8475:33;8465:43;;8561:3;8550:9;8546:19;8533:33;8517:49;;8591:2;8581:8;8578:16;8575:36;;;8607:1;8604;8597:12;8575:36;;8630:52;8674:7;8663:8;8652:9;8648:24;8630:52;:::i;:::-;8620:62;;;7672:1016;;;;;;;;:::o;8693:247::-;8752:6;8805:2;8793:9;8784:7;8780:23;8776:32;8773:52;;;8821:1;8818;8811:12;8773:52;8860:9;8847:23;8879:31;8904:5;8879:31;:::i;:::-;8929:5;8693:247;-1:-1:-1;;;8693:247:62:o;8945:220::-;9094:2;9083:9;9076:21;9057:4;9114:45;9155:2;9144:9;9140:18;9132:6;9114:45;:::i;9170:458::-;9257:6;9265;9273;9326:2;9314:9;9305:7;9301:23;9297:32;9294:52;;;9342:1;9339;9332:12;9294:52;9378:9;9365:23;9355:33;;9439:2;9428:9;9424:18;9411:32;-1:-1:-1;;;;;9458:6:62;9455:30;9452:50;;;9498:1;9495;9488:12;9452:50;9521;9563:7;9554:6;9543:9;9539:22;9521:50;:::i;:::-;9511:60;;;9618:2;9607:9;9603:18;9590:32;9580:42;;9170:458;;;;;:::o;9633:301::-;9818:6;9811:14;9804:22;9793:9;9786:41;9863:2;9858;9847:9;9843:18;9836:30;9767:4;9883:45;9924:2;9913:9;9909:18;9901:6;9883:45;:::i;:::-;9875:53;9633:301;-1:-1:-1;;;;9633:301:62:o;10171:723::-;10221:5;10274:3;10267:4;10259:6;10255:17;10251:27;10241:55;;10292:1;10289;10282:12;10241:55;10325:2;10319:9;10367:3;10359:6;10355:16;10437:6;10425:10;10422:22;-1:-1:-1;;;;;10389:10:62;10386:34;10383:62;10380:88;;;10448:18;;:::i;:::-;10484:2;10477:22;10519:6;10560:3;10548:16;;10576:15;;;10573:35;;;10604:1;10601;10594:12;10573:35;10628:6;10643:221;10659:6;10654:3;10651:15;10643:221;;;10741:3;10728:17;10758:31;10783:5;10758:31;:::i;:::-;10802:18;;10849:4;10840:14;;;;10676;10643:221;;;-1:-1:-1;10882:6:62;;10171:723;-1:-1:-1;;;;;10171:723:62:o;10899:183::-;10959:4;-1:-1:-1;;;;;10984:6:62;10981:30;10978:56;;;11014:18;;:::i;:::-;-1:-1:-1;11059:1:62;11055:14;11071:4;11051:25;;10899:183::o;11087:737::-;11141:5;11194:3;11187:4;11179:6;11175:17;11171:27;11161:55;;11212:1;11209;11202:12;11161:55;11248:6;11235:20;11274:4;11298:60;11314:43;11354:2;11314:43;:::i;:::-;11298:60;:::i;:::-;11392:15;;;11478:1;11474:10;;;;11462:23;;11458:32;;;11423:12;;;;11502:15;;;11499:35;;;11530:1;11527;11520:12;11499:35;11566:2;11558:6;11554:15;11578:217;11594:6;11589:3;11586:15;11578:217;;;11674:3;11661:17;11691:31;11716:5;11691:31;:::i;:::-;11735:18;;11773:12;;;;11611;;11578:217;;;-1:-1:-1;11813:5:62;11087:737;-1:-1:-1;;;;;;11087:737:62:o;11829:1513::-;12026:6;12034;12042;12050;12058;12066;12074;12082;12135:3;12123:9;12114:7;12110:23;12106:33;12103:53;;;12152:1;12149;12142:12;12103:53;12191:9;12178:23;12210:31;12235:5;12210:31;:::i;:::-;12260:5;-1:-1:-1;12284:2:62;12322:18;;;12309:32;-1:-1:-1;;;;;12390:14:62;;;12387:34;;;12417:1;12414;12407:12;12387:34;12440:50;12482:7;12473:6;12462:9;12458:22;12440:50;:::i;:::-;12430:60;;12509:35;12540:2;12529:9;12525:18;12509:35;:::i;:::-;12499:45;;12563:35;12594:2;12583:9;12579:18;12563:35;:::i;:::-;12553:45;;12645:3;12634:9;12630:19;12617:33;12607:43;;12694:7;12688:3;12677:9;12673:19;12669:33;12659:61;;12716:1;12713;12706:12;12659:61;12740:22;;:::i;:::-;12729:33;;12784:3;12825;12814:9;12810:19;12852:7;12844:6;12841:19;12838:39;;;12873:1;12870;12863:12;12838:39;12912:3;12901:9;12897:19;12925:142;12941:6;12936:3;12933:15;12925:142;;;13007:17;;12995:30;;13045:12;;;;12958;;12925:142;;;12929:3;13086:5;13076:15;;13110:41;13143:7;13135:6;13110:41;:::i;:::-;13100:51;;;;13204:3;13193:9;13189:19;13176:33;13160:49;;13234:2;13224:8;13221:16;13218:36;;;13250:1;13247;13240:12;13218:36;;;13273:63;13328:7;13317:8;13306:9;13302:24;13273:63;:::i;:::-;13263:73;;;11829:1513;;;;;;;;;;;:::o;13347:389::-;13421:6;13429;13482:2;13470:9;13461:7;13457:23;13453:32;13450:52;;;13498:1;13495;13488:12;13450:52;13521:26;13537:9;13521:26;:::i;:::-;13511:36;;13598:2;13587:9;13583:18;13570:32;-1:-1:-1;;;;;13617:6:62;13614:30;13611:50;;;13657:1;13654;13647:12;13611:50;13680;13722:7;13713:6;13702:9;13698:22;13680:50;:::i;:::-;13670:60;;;13347:389;;;;;:::o;13968:742::-;14074:6;14082;14090;14143:2;14131:9;14122:7;14118:23;14114:32;14111:52;;;14159:1;14156;14149:12;14111:52;14199:9;14186:23;-1:-1:-1;;;;;14269:2:62;14261:6;14258:14;14255:34;;;14285:1;14282;14275:12;14255:34;14308:50;14350:7;14341:6;14330:9;14326:22;14308:50;:::i;:::-;14298:60;;14411:2;14400:9;14396:18;14383:32;14367:48;;14440:2;14430:8;14427:16;14424:36;;;14456:1;14453;14446:12;14424:36;14479:52;14523:7;14512:8;14501:9;14497:24;14479:52;:::i;:::-;14469:62;;14584:2;14573:9;14569:18;14556:32;14540:48;;14613:2;14603:8;14600:16;14597:36;;;14629:1;14626;14619:12;14597:36;;14652:52;14696:7;14685:8;14674:9;14670:24;14652:52;:::i;:::-;14642:62;;;13968:742;;;;;:::o;14715:1382::-;14842:6;14850;14858;14866;14919:3;14907:9;14898:7;14894:23;14890:33;14887:53;;;14936:1;14933;14926:12;14887:53;14976:9;14963:23;-1:-1:-1;;;;;15046:2:62;15038:6;15035:14;15032:34;;;15062:1;15059;15052:12;15032:34;15100:6;15089:9;15085:22;15075:32;;15145:7;15138:4;15134:2;15130:13;15126:27;15116:55;;15167:1;15164;15157:12;15116:55;15203:2;15190:16;15225:4;15249:60;15265:43;15305:2;15265:43;:::i;15249:60::-;15343:15;;;15425:1;15421:10;;;;15413:19;;15409:28;;;15374:12;;;;15449:19;;;15446:39;;;15481:1;15478;15471:12;15446:39;15505:11;;;;15525:142;15541:6;15536:3;15533:15;15525:142;;;15607:17;;15595:30;;15558:12;;;;15645;;;;15525:142;;;15686:5;-1:-1:-1;15710:35:62;;-1:-1:-1;15726:18:62;;;15710:35;:::i;:::-;15700:45;;;;15798:2;15787:9;15783:18;15770:32;15754:48;;15827:2;15817:8;15814:16;15811:36;;;15843:1;15840;15833:12;15811:36;15866:52;15910:7;15899:8;15888:9;15884:24;15866:52;:::i;:::-;15856:62;;15971:2;15960:9;15956:18;15943:32;15927:48;;16000:2;15990:8;15987:16;15984:36;;;16016:1;16013;16006:12;16102:127;16163:10;16158:3;16154:20;16151:1;16144:31;16194:4;16191:1;16184:15;16218:4;16215:1;16208:15;16234:240;16318:1;16311:5;16308:12;16298:143;;16363:10;16358:3;16354:20;16351:1;16344:31;16398:4;16395:1;16388:15;16426:4;16423:1;16416:15;16298:143;16450:18;;16234:240::o;16479:1855::-;16679:4;16708:2;16748;16737:9;16733:18;16778:2;16767:9;16760:21;16801:6;16836;16830:13;16867:6;16859;16852:22;16893:2;16883:12;;16926:2;16915:9;16911:18;16904:25;;16988:2;16978:6;16975:1;16971:14;16960:9;16956:30;16952:39;17026:2;17018:6;17014:15;17047:1;17057:1248;17071:6;17068:1;17065:13;17057:1248;;;17136:22;;;-1:-1:-1;;17132:36:62;17120:49;;17192:13;;17266:9;;-1:-1:-1;;;;;2424:31:62;2412:44;;17228:6;17331:2;17327;17323:11;17317:18;17348:59;17403:2;17395:6;17391:15;17377:12;17348:59;:::i;:::-;;17456:2;17452;17448:11;17442:18;17497:2;17492;17484:6;17480:15;17473:27;17527:50;17573:2;17565:6;17561:15;17545:14;17527:50;:::i;:::-;17600:4;17647:11;;;17641:18;17624:15;;;17617:43;17683:4;17730:11;;;17724:18;17707:15;;;17700:43;17766:4;17813:11;;;17807:18;17790:15;;;17783:43;17849:4;17894:11;;;17888:18;4197:13;4190:21;17951:15;;;4178:34;17990:4;18035:11;;;18029:18;4197:13;4190:21;18092:15;;;4178:34;18132:6;18182:12;;;18176:19;18158:16;;;;18151:45;;;;-1:-1:-1;;18283:12:62;;;;18248:15;;;;17093:1;17086:9;17057:1248;;18800:679;18902:6;18910;18918;18926;18979:3;18967:9;18958:7;18954:23;18950:33;18947:53;;;18996:1;18993;18986:12;18947:53;19032:9;19019:23;19009:33;;19061:35;19092:2;19081:9;19077:18;19061:35;:::i;:::-;19051:45;;19147:2;19136:9;19132:18;19119:32;-1:-1:-1;;;;;19211:2:62;19203:6;19200:14;19197:34;;;19227:1;19224;19217:12;19484:315;19552:6;19560;19613:2;19601:9;19592:7;19588:23;19584:32;19581:52;;;19629:1;19626;19619:12;19581:52;19665:9;19652:23;19642:33;;19725:2;19714:9;19710:18;19697:32;19738:31;19763:5;19738:31;:::i;:::-;19788:5;19778:15;;;19484:315;;;;;:::o;19804:382::-;20011:6;20004:14;19997:22;19986:9;19979:41;20070:6;20063:14;20056:22;20051:2;20040:9;20036:18;20029:50;20115:2;20110;20099:9;20095:18;20088:30;19960:4;20135:45;20176:2;20165:9;20161:18;20153:6;20135:45;:::i;:::-;20127:53;19804:382;-1:-1:-1;;;;;19804:382:62:o;20191:898::-;-1:-1:-1;;;;;20589:32:62;;20571:51;;20530:4;20559:3;20631:56;20683:2;20668:18;;20660:6;20631:56;:::i;:::-;20723:2;20718;20707:9;20703:18;20696:30;20743:45;20784:2;20773:9;20769:18;20761:6;20743:45;:::i;:::-;20819:2;20804:18;;20797:34;;;;-1:-1:-1;;20862:3:62;20847:19;;20840:35;;;;20906:3;20891:19;;20884:35;;;;20963:14;;20956:22;20950:3;20935:19;;20928:51;21023:14;21016:22;21010:3;20995:19;;20988:51;21070:3;21055:19;;;21048:35;20735:53;20191:898;-1:-1:-1;;;20191:898:62:o;21094:736::-;21199:6;21207;21215;21223;21231;21284:3;21272:9;21263:7;21259:23;21255:33;21252:53;;;21301:1;21298;21291:12;21252:53;21340:9;21327:23;21359:31;21384:5;21359:31;:::i;:::-;21409:5;-1:-1:-1;21461:2:62;21446:18;;21433:32;;-1:-1:-1;21517:2:62;21502:18;;21489:32;21530:33;21489:32;21530:33;:::i;:::-;21582:7;-1:-1:-1;21640:2:62;21625:18;;21612:32;-1:-1:-1;;;;;21656:30:62;;21653:50;;;21699:1;21696;21689:12;21835:251;21905:6;21958:2;21946:9;21937:7;21933:23;21929:32;21926:52;;;21974:1;21971;21964:12;21926:52;22006:9;22000:16;22025:31;22050:5;22025:31;:::i;22091:461::-;22353:1;22349;22344:3;22340:11;22336:19;22328:6;22324:32;22313:9;22306:51;22393:6;22388:2;22377:9;22373:18;22366:34;22436:3;22431:2;22420:9;22416:18;22409:31;22287:4;22457:46;22498:3;22487:9;22483:19;22475:6;22457:46;:::i;:::-;22449:54;;22539:6;22534:2;22523:9;22519:18;22512:34;22091:461;;;;;;;:::o;22557:274::-;22686:3;22724:6;22718:13;22740:53;22786:6;22781:3;22774:4;22766:6;22762:17;22740:53;:::i;:::-;22809:16;;;;;22557:274;-1:-1:-1;;22557:274:62:o;22836:563::-;-1:-1:-1;;;;;23135:15:62;;;23117:34;;23187:15;;23182:2;23167:18;;23160:43;23234:2;23219:18;;23212:34;;;23097:3;23277:2;23262:18;;23255:31;;;23060:4;;23303:46;;23329:19;;23321:6;23303:46;:::i;:::-;23295:54;;23386:6;23380:3;23369:9;23365:19;23358:35;22836:563;;;;;;;;:::o;23404:380::-;23483:1;23479:12;;;;23526;;;23547:61;;23601:4;23593:6;23589:17;23579:27;;23547:61;23654:2;23646:6;23643:14;23623:18;23620:38;23617:161;;;23700:10;23695:3;23691:20;23688:1;23681:31;23735:4;23732:1;23725:15;23763:4;23760:1;23753:15;23617:161;;23404:380;;;:::o;23789:551::-;-1:-1:-1;;;;;24040:32:62;;24022:51;;24109:3;24104:2;24089:18;;24082:31;;;-1:-1:-1;;24136:46:62;;24162:19;;24154:6;24136:46;:::i;:::-;24218:6;24213:2;24202:9;24198:18;24191:34;24273:9;24265:6;24261:22;24256:2;24245:9;24241:18;24234:50;24301:33;24327:6;24319;24301:33;:::i;:::-;24293:41;23789:551;-1:-1:-1;;;;;;;23789:551:62:o;24345:797::-;-1:-1:-1;;;;;24666:32:62;;24648:51;;24735:3;24730:2;24715:18;;24708:31;;;-1:-1:-1;;24762:46:62;;24788:19;;24780:6;24762:46;:::i;:::-;24856:9;24848:6;24844:22;24839:2;24828:9;24824:18;24817:50;24890:33;24916:6;24908;24890:33;:::i;:::-;24876:47;;24973:6;24966:14;24959:22;24954:2;24943:9;24939:18;24932:50;25019:6;25013:3;25002:9;24998:19;24991:35;25075:9;25067:6;25063:22;25057:3;25046:9;25042:19;25035:51;25103:33;25129:6;25121;25103:33;:::i;:::-;25095:41;24345:797;-1:-1:-1;;;;;;;;;24345:797:62:o;25147:362::-;25352:6;25341:9;25334:25;25395:2;25390;25379:9;25375:18;25368:30;25315:4;25415:45;25456:2;25445:9;25441:18;25433:6;25415:45;:::i;:::-;25407:53;;25496:6;25491:2;25480:9;25476:18;25469:34;25147:362;;;;;;:::o;26061:352::-;26154:5;26177:1;26187:220;26201:4;26198:1;26195:11;26187:220;;;26264:13;;-1:-1:-1;;;;;26260:39:62;26248:52;;26323:4;26347:12;;;;26382:15;;;;26296:1;26214:9;26187:220;;26418:461;26471:3;26509:5;26503:12;26536:6;26531:3;26524:19;26562:4;26591:2;26586:3;26582:12;26575:19;;26628:2;26621:5;26617:14;26649:1;26659:195;26673:6;26670:1;26667:13;26659:195;;;26738:13;;-1:-1:-1;;;;;26734:39:62;26722:52;;26794:12;;;;26829:15;;;;26770:1;26688:9;26659:195;;;-1:-1:-1;26870:3:62;;26418:461;-1:-1:-1;;;;;26418:461:62:o;26884:1291::-;-1:-1:-1;;;;;27381:32:62;;27363:51;;27351:3;27433:2;27451:18;;;27444:30;;;27322:4;;27351:3;27497:45;27523:18;;;27515:6;27497:45;:::i;:::-;27483:59;;27592:6;27585:14;27578:22;27573:2;27562:9;27558:18;27551:50;27651:6;27644:14;27637:22;27632:2;27621:9;27617:18;27610:50;27697:6;27691:3;27680:9;27676:19;27669:35;27739:3;27728:9;27724:19;27785:6;27809:1;27819:167;27833:4;27830:1;27827:11;27819:167;;;27892:13;;27880:26;;27926:12;;;;27961:15;;;;27853:1;27846:9;27819:167;;;27823:3;;;;27995:53;28043:3;28032:9;28028:19;28020:6;27995:53;:::i;:::-;28097:9;28089:6;28085:22;28079:3;28068:9;28064:19;28057:51;28125:44;28162:6;28154;28125:44;:::i;:::-;28117:52;26884:1291;-1:-1:-1;;;;;;;;;;;26884:1291:62:o;28673:544::-;28916:2;28905:9;28898:21;28879:4;28942:45;28983:2;28972:9;28968:18;28960:6;28942:45;:::i;:::-;29035:9;29027:6;29023:22;29018:2;29007:9;29003:18;28996:50;29069:33;29095:6;29087;29069:33;:::i;:::-;29055:47;;29150:9;29142:6;29138:22;29133:2;29122:9;29118:18;29111:50;29178:33;29204:6;29196;29178:33;:::i;:::-;29170:41;28673:544;-1:-1:-1;;;;;;28673:544:62:o;29222:1010::-;29528:3;29541:22;;;29612:13;;29513:19;;;29634:22;;;29480:4;;29710;;29687:3;29672:19;;;29737:15;;;29480:4;29780:169;29794:6;29791:1;29788:13;29780:169;;;29855:13;;29843:26;;29889:12;;;;29924:15;;;;29816:1;29809:9;29780:169;;;29784:3;;;29999:6;29992:14;29985:22;29980:2;29969:9;29965:18;29958:50;30053:9;30048:3;30044:19;30039:2;30028:9;30024:18;30017:47;30087:30;30113:3;30105:6;30087:30;:::i;:::-;30073:44;;;30165:9;30157:6;30153:22;30148:2;30137:9;30133:18;30126:50;30193:33;30219:6;30211;30193:33;:::i;30237:535::-;30482:6;30471:9;30464:25;30539:6;30532:14;30525:22;30520:2;30509:9;30505:18;30498:50;30584:3;30579:2;30568:9;30564:18;30557:31;30445:4;30611:46;30652:3;30641:9;30637:19;30629:6;30611:46;:::i;:::-;30705:9;30697:6;30693:22;30688:2;30677:9;30673:18;30666:50;30733:33;30759:6;30751;30733:33;:::i;30777:563::-;-1:-1:-1;;;;;31076:15:62;;;31058:34;;31123:2;31108:18;;31101:34;;;31171:15;;31166:2;31151:18;;31144:43;31038:3;31218:2;31203:18;;31196:31;;;31001:4;;31244:46;;31270:19;;31262:6;31244:46;:::i",
  "language": "Solidity",
  "natspec": {
    "author": "Leonardo Urrego",
    "events": {
      "evtUser(uint8,address,string)": {
        "notice": "### Contract events ###"
      }
    },
    "kind": "dev",
    "methods": {
      "AcceptRejectInvitation(bool,bytes)": {
        "notice": "For an user that have an invitation pending",
        "params": {
          "_acceptance": "True for accept the invitation"
        }
      },
      "ExecProp(uint256)": {
        "details": "Normally is called internally after each vote",
        "notice": "Execute (or reject) a proposal computing the votes and the governance model",
        "params": {
          "_propId": "ID of the proposal, based on `arrProposals`"
        },
        "returns": {
          "message": "result of the transaction",
          "status": "True if the proposal can be execute, false in other cases"
        }
      },
      "GetArrDataPropUser()": {
        "notice": "Get complete array of arrDataPropUser",
        "returns": {
          "_0": "arrDataPropUser the array with all data"
        }
      },
      "GetArrProposalsLength()": {
        "notice": "Length of arrProposals array"
      },
      "GetArrUsersLength()": {
        "notice": "Length of arrUsers array"
      },
      "GetProposalList()": {
        "notice": "The list of all Proposals",
        "returns": {
          "_0": "arrProposals the array with all proposals"
        }
      },
      "Init(address,string,bool,bool,bytes32,uint256[3],address[4],address[])": {
        "details": "Some parameters can be ignored depending on the governance model",
        "notice": "Create a new CLH",
        "params": {
          "_CLC": "Array for CL Contracts see `enum eCLC`",
          "_ManagerWallets": "Whitelist of address for invitate as managers",
          "_govModel": "keccak256 hash of the governance model, see the __GOV_* constans",
          "_govRules": "Array for goverment rules see `enum gRule`",
          "_houseName": "Name given by the owner",
          "_houseOpen": "If is set to 1, the CLH is set to Open",
          "_housePrivate": "If is set to 1, the CLH is set to private",
          "_owner": "The address of the deployed wallet"
        }
      },
      "PropGovRules(uint256,string,uint256)": {
        "details": "When execute this proposal the new values will be set",
        "notice": "Generate a new proposal for change some governance parameters",
        "params": {
          "_description": "About the new proposal ",
          "_newApprovPercentage": "The new percentaje for accept or reject a proposal"
        },
        "returns": {
          "propId": "ID of the new proposal, based on `arrProposals`"
        }
      },
      "PropInviteUser(address,string,string,bool,uint256,bytes)": {
        "details": "the execution of this proposal only create an invitation ",
        "notice": "Generate a new proposal to invite a new user",
        "params": {
          "_description": "A text for the proposal",
          "_isManager": "True if is for a manager",
          "_name": "Can be the nickname or other reference to the User",
          "_walletAddr": "Address of the new user"
        },
        "returns": {
          "propId": "ID of the new proposal, based on `arrProposals`"
        }
      },
      "PropRemoveUser(address,string,uint256,bytes)": {
        "details": "The user can be a managaer",
        "notice": "Generate a new proposal for remove a user",
        "params": {
          "_description": "About the proposal",
          "_walletAddr": "user Address to be removed"
        },
        "returns": {
          "propId": "ID of the new proposal, based on `arrProposals`"
        }
      },
      "PropRequestToJoin(string,string,bytes)": {
        "details": "Only avaiable in public CLH",
        "notice": "Generate a proposal from a user that want to join to the CLH",
        "params": {
          "_description": "About the request",
          "_name": "Nickname or other user identification"
        },
        "returns": {
          "_0": "propId ID of the new proposal, based on `arrProposals`"
        }
      },
      "PropTxERC20(address,uint256,address,string,uint256)": {
        "details": "When execute this proposal, the transfer is made",
        "notice": "generate a new proposal to transfer ETH in weis",
        "params": {
          "_amountOutCLV": "Amount to transfer (in wei)",
          "_description": "About this proposal",
          "_to": "Recipient address"
        },
        "returns": {
          "propId": "ID of the new proposal, based on `arrProposals`"
        }
      },
      "PropTxWei(address,uint256,string,uint256)": {
        "details": "When execute this proposal, the transfer is made",
        "notice": "generate a new proposal to transfer ETH in weis",
        "params": {
          "_amountOutCLV": "Amount to transfer (in wei)",
          "_description": "About this proposal",
          "_to": "Recipient address"
        },
        "returns": {
          "propId": "ID of the new proposal, based on `arrProposals`"
        }
      },
      "VoteProposal(uint256,bool,string,bytes)": {
        "details": "After vote the proposal automatically try to be executed",
        "notice": "Used to vote a proposal",
        "params": {
          "_justification": "About your vote",
          "_propId": "ID of the proposal, based on `arrProposals`",
          "_support": "True for accept, false to reject"
        }
      },
      "bulkVote(uint256[],bool,string,bytes)": {
        "notice": "Vote for multiple proposal",
        "params": {
          "_justification": "Description of the vote",
          "_propId": "Array with ID of the proposal to votes",
          "_support": "is the Vote (True or False) for all proposals"
        }
      },
      "constructor": {
        "custom:oz-upgrades-unsafe-allow": "constructor"
      },
      "housePrivate()": {
        "notice": "### CLH Public Variables ###"
      }
    },
    "notice": "This contract for test only the most basic interactions",
    "title": "Contract to implement and test the basic fuctions of CLHouses",
    "version": 1
  },
  "offset": [
    327,
    17490
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x269 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6C2F34E7 GT PUSH2 0x151 JUMPI DUP1 PUSH4 0xA693649A GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xCADA7F19 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xCADA7F19 EQ PUSH2 0x5C8 JUMPI DUP1 PUSH4 0xCB85669C EQ PUSH2 0x5DB JUMPI DUP1 PUSH4 0xDE5AB14E EQ PUSH2 0x603 JUMPI DUP1 PUSH4 0xE68777D7 EQ PUSH2 0x616 JUMPI DUP1 PUSH4 0xE810A58E EQ PUSH2 0x61F JUMPI DUP1 PUSH4 0xF00D6274 EQ PUSH2 0x628 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA693649A EQ PUSH2 0x530 JUMPI DUP1 PUSH4 0xB4C62192 EQ PUSH2 0x538 JUMPI DUP1 PUSH4 0xBAA4D5E9 EQ PUSH2 0x54D JUMPI DUP1 PUSH4 0xC2B3AA08 EQ PUSH2 0x593 JUMPI DUP1 PUSH4 0xC347D2FD EQ PUSH2 0x5A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x860228FD GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x860228FD EQ PUSH2 0x4BB JUMPI DUP1 PUSH4 0x9360BFAD EQ PUSH2 0x4DB JUMPI DUP1 PUSH4 0x9C630A88 EQ PUSH2 0x4EE JUMPI DUP1 PUSH4 0xA0A625F9 EQ PUSH2 0x4F7 JUMPI DUP1 PUSH4 0xA19A5F50 EQ PUSH2 0x50A JUMPI DUP1 PUSH4 0xA1C89C9D EQ PUSH2 0x51D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6C2F34E7 EQ PUSH2 0x44D JUMPI DUP1 PUSH4 0x70FF918C EQ PUSH2 0x460 JUMPI DUP1 PUSH4 0x7C638548 EQ PUSH2 0x480 JUMPI DUP1 PUSH4 0x7E66495D EQ PUSH2 0x493 JUMPI DUP1 PUSH4 0x81CF22D8 EQ PUSH2 0x4A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2266E1BC GT PUSH2 0x1EA JUMPI DUP1 PUSH4 0x3A70693D GT PUSH2 0x1AE JUMPI DUP1 PUSH4 0x3A70693D EQ PUSH2 0x3C9 JUMPI DUP1 PUSH4 0x4E9D5472 EQ PUSH2 0x3DC JUMPI DUP1 PUSH4 0x50F7308A EQ PUSH2 0x3E4 JUMPI DUP1 PUSH4 0x59CA2D03 EQ PUSH2 0x404 JUMPI DUP1 PUSH4 0x5DE58F60 EQ PUSH2 0x419 JUMPI DUP1 PUSH4 0x5F3D99B3 EQ PUSH2 0x42C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2266E1BC EQ PUSH2 0x357 JUMPI DUP1 PUSH4 0x22B4081C EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0x29647EE5 EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0x2A57EF84 EQ PUSH2 0x3A3 JUMPI DUP1 PUSH4 0x31A0AFA7 EQ PUSH2 0x3B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1707ACE8 GT PUSH2 0x231 JUMPI DUP1 PUSH4 0x1707ACE8 EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x19A50F49 EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0x1D5FD3CA EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0x1F2E1339 EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0x1F50DD27 EQ PUSH2 0x344 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4F17A9B EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x52F9B0A EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x10790717 EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0x1343E9A5 EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0x152DE3B9 EQ PUSH2 0x2DB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x281 PUSH2 0x27C CALLDATASIZE PUSH1 0x4 PUSH2 0x1DB4 JUMP JUMPDEST PUSH2 0x635 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0xC4 SLOAD PUSH2 0x2A7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x28B JUMP JUMPDEST PUSH1 0x22 SLOAD PUSH2 0x2A7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x281 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x281 PUSH2 0x2E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E14 JUMP JUMPDEST PUSH2 0x763 JUMP JUMPDEST PUSH2 0x301 PUSH2 0x2FC CALLDATASIZE PUSH1 0x4 PUSH2 0x1E87 JUMP JUMPDEST PUSH2 0x839 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1EF8 JUMP JUMPDEST PUSH2 0x281 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x281 PUSH1 0x62 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x334 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x28B JUMP JUMPDEST PUSH1 0xC5 SLOAD PUSH2 0x2A7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x281 PUSH2 0x365 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DB4 JUMP JUMPDEST PUSH2 0x904 JUMP JUMPDEST PUSH2 0x37D PUSH2 0x378 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E87 JUMP JUMPDEST PUSH2 0x9D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28B SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F2E JUMP JUMPDEST PUSH2 0x396 PUSH2 0xAB3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x1F71 JUMP JUMPDEST PUSH2 0x281 PUSH2 0x3B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FFF JUMP JUMPDEST PUSH2 0xBCC JUMP JUMPDEST PUSH2 0x281 PUSH2 0x3C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2093 JUMP JUMPDEST PUSH2 0xD03 JUMP JUMPDEST PUSH2 0x281 PUSH2 0x3D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E87 JUMP JUMPDEST PUSH2 0xE40 JUMP JUMPDEST PUSH1 0x83 SLOAD PUSH2 0x281 JUMP JUMPDEST PUSH2 0x281 PUSH2 0x3F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2146 JUMP JUMPDEST PUSH1 0xA3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x40C PUSH2 0xE61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x216A JUMP JUMPDEST PUSH2 0x281 PUSH2 0x427 CALLDATASIZE PUSH1 0x4 PUSH2 0x217D JUMP JUMPDEST PUSH2 0xEEF JUMP JUMPDEST PUSH2 0x43F PUSH2 0x43A CALLDATASIZE PUSH1 0x4 PUSH2 0x1E87 JUMP JUMPDEST PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28B SWAP3 SWAP2 SWAP1 PUSH2 0x21CC JUMP JUMPDEST PUSH1 0xC2 SLOAD PUSH2 0x2A7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x281 PUSH2 0x46E CALLDATASIZE PUSH1 0x4 PUSH2 0x2146 JUMP JUMPDEST PUSH1 0xA2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x281 PUSH2 0x48E CALLDATASIZE PUSH1 0x4 PUSH2 0x1DB4 JUMP JUMPDEST PUSH2 0x118F JUMP JUMPDEST PUSH2 0x4A6 PUSH2 0x4A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x22FC JUMP JUMPDEST PUSH2 0x1263 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A6 PUSH2 0x4B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x23FF JUMP JUMPDEST PUSH2 0x1429 JUMP JUMPDEST PUSH2 0x281 PUSH2 0x4C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2146 JUMP JUMPDEST PUSH1 0xA4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC3 SLOAD PUSH2 0x2A7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x281 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC1 SLOAD PUSH2 0x2A7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x281 PUSH2 0x518 CALLDATASIZE PUSH1 0x4 PUSH2 0x244C JUMP JUMPDEST PUSH2 0x1549 JUMP JUMPDEST PUSH2 0x4A6 PUSH2 0x52B CALLDATASIZE PUSH1 0x4 PUSH2 0x24D3 JUMP JUMPDEST PUSH2 0x161B JUMP JUMPDEST PUSH1 0x82 SLOAD PUSH2 0x281 JUMP JUMPDEST PUSH2 0x540 PUSH2 0x16E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x25E2 JUMP JUMPDEST PUSH2 0x560 PUSH2 0x55B CALLDATASIZE PUSH1 0x4 PUSH2 0x1E87 JUMP JUMPDEST PUSH2 0x1861 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP2 DUP5 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x28B JUMP JUMPDEST PUSH2 0x4A6 PUSH2 0x5A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x26A9 JUMP JUMPDEST PUSH2 0x18A9 JUMP JUMPDEST PUSH2 0x5B9 PUSH2 0x5B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x26EB JUMP JUMPDEST PUSH2 0x19CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x271B JUMP JUMPDEST PUSH1 0x23 SLOAD PUSH2 0x2A7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x5EE PUSH2 0x5E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E87 JUMP JUMPDEST PUSH2 0x1A8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28B SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2747 JUMP JUMPDEST PUSH2 0x281 PUSH2 0x611 CALLDATASIZE PUSH1 0x4 PUSH2 0x27AE JUMP JUMPDEST PUSH2 0x1B85 JUMP JUMPDEST PUSH2 0x281 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x281 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x334 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA327AB69 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x68B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6AF SWAP2 SWAP1 PUSH2 0x2803 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x6D4 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2820 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x4F17A9B PUSH1 0xE0 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x709 SWAP2 SWAP1 PUSH2 0x2858 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x744 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x749 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP3 PUSH2 0x75F JUMPI DUP1 DUP3 REVERT JUMPDEST DUP1 DUP3 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA327AB69 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7B9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7DD SWAP2 SWAP1 PUSH2 0x2803 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x804 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2874 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x152DE3B9 PUSH1 0xE0 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x709 SWAP2 SWAP1 PUSH2 0x2858 JUMP JUMPDEST PUSH1 0x84 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x849 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP4 POP SWAP1 PUSH2 0x878 SWAP1 PUSH2 0x28B9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8A4 SWAP1 PUSH2 0x28B9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8F1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8C6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8F1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8D4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x2 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 POP POP PUSH1 0xFF AND DUP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA327AB69 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x95A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x97E SWAP2 SWAP1 PUSH2 0x2803 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x9A3 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2820 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x899B86F PUSH1 0xE2 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x709 SWAP2 SWAP1 PUSH2 0x2858 JUMP JUMPDEST PUSH1 0x82 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x9E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP4 POP SWAP1 PUSH2 0xA17 SWAP1 PUSH2 0x28B9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA43 SWAP1 PUSH2 0x28B9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA90 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA65 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA90 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA73 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 SWAP2 PUSH1 0xFF DUP1 DUP3 AND SWAP3 POP PUSH2 0x100 SWAP1 SWAP2 DIV AND DUP6 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x84 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xBC3 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP6 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD SWAP3 SWAP4 SWAP2 SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH2 0xB20 SWAP1 PUSH2 0x28B9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB4C SWAP1 PUSH2 0x28B9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB99 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB6E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB99 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB7C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x2 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x20 SWAP2 DUP3 ADD MSTORE SWAP1 DUP3 MSTORE PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0xAD7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA327AB69 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC22 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC46 SWAP2 SWAP1 PUSH2 0x2803 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xC6B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x28F4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA95FBE1 PUSH1 0xE2 SHL OR SWAP1 MSTORE MLOAD PUSH2 0xCA0 SWAP2 SWAP1 PUSH2 0x2858 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xCDB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCE0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP3 PUSH2 0xCF6 JUMPI DUP1 DUP3 REVERT JUMPDEST POP MLOAD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA327AB69 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD59 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD7D SWAP2 SWAP1 PUSH2 0x2803 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xDA6 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x293B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x31A0AFA7 PUSH1 0xE0 SHL OR SWAP1 MSTORE MLOAD PUSH2 0xDDB SWAP2 SWAP1 PUSH2 0x2858 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xE16 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xE1B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP3 PUSH2 0xE31 JUMPI DUP1 DUP3 REVERT JUMPDEST POP MLOAD SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x86 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xE50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x42 DUP1 SLOAD PUSH2 0xE6E SWAP1 PUSH2 0x28B9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE9A SWAP1 PUSH2 0x28B9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xEE7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xEBC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xEE7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xECA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA327AB69 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF45 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF69 SWAP2 SWAP1 PUSH2 0x2803 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xF8C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x29A0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x2EF2C7B PUSH1 0xE5 SHL OR SWAP1 MSTORE MLOAD PUSH2 0xFC1 SWAP2 SWAP1 PUSH2 0x2858 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xFFC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1001 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP3 PUSH2 0x1017 JUMPI DUP1 DUP3 REVERT JUMPDEST POP MLOAD SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH1 0xC1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA327AB69 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x107C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10A0 SWAP2 SWAP1 PUSH2 0x2803 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x10C1 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x5F3D99B3 PUSH1 0xE0 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x10F6 SWAP2 SWAP1 PUSH2 0x2858 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1131 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1136 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x114C JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP1 DUP3 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x537563636573732065786563757465642070726F706F73616C00000000000000 DUP2 MSTORE POP SWAP4 POP SWAP4 POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA327AB69 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11E5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1209 SWAP2 SWAP1 PUSH2 0x2803 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x122E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2820 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xF8C70A9 PUSH1 0xE3 SHL OR SWAP1 MSTORE MLOAD PUSH2 0xCA0 SWAP2 SWAP1 PUSH2 0x2858 JUMP JUMPDEST PUSH1 0xC5 SLOAD PUSH1 0x1 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x128E JUMPI POP PUSH1 0xC5 SLOAD PUSH1 0xFF DUP1 DUP4 AND PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP3 DIV AND LT JUMPDEST PUSH2 0x12F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC5 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL PUSH2 0xFFFF PUSH1 0xA0 SHL NOT SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0xFF DUP6 AND MUL PUSH1 0xFF PUSH1 0xA8 SHL NOT AND OR OR SWAP1 SSTORE PUSH1 0x0 DUP4 PUSH1 0x3 PUSH1 0x20 MUL ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x134F SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A39 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xEE8FFE1 PUSH1 0xE1 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x1384 SWAP2 SWAP1 PUSH2 0x2858 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x13BF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13C4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x13DA JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP1 DUP3 REVERT JUMPDEST POP PUSH1 0xC5 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0xFF DUP3 AND DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xC1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x529382D5 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x529382D5 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1473 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1497 SWAP2 SWAP1 PUSH2 0x2803 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x14B8 SWAP3 SWAP2 SWAP1 PUSH2 0x21CC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x1039E45B PUSH1 0xE3 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x14ED SWAP2 SWAP1 PUSH2 0x2858 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1528 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x152D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1543 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP1 DUP3 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA327AB69 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x159F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15C3 SWAP2 SWAP1 PUSH2 0x2803 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x15E6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2AD1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA19A5F5 PUSH1 0xE4 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x709 SWAP2 SWAP1 PUSH2 0x2858 JUMP JUMPDEST PUSH1 0xC1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA327AB69 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xA327AB69 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1665 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1689 SWAP2 SWAP1 PUSH2 0x2803 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x16AE SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B14 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA1C89C9D PUSH1 0xE0 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x709 SWAP2 SWAP1 PUSH2 0x2858 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x83 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xBC3 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x7 DUP6 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP4 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x8 DUP2 GT ISZERO PUSH2 0x175E JUMPI PUSH2 0x175E PUSH2 0x25AA JUMP JUMPDEST PUSH1 0x8 DUP2 GT ISZERO PUSH2 0x176F JUMPI PUSH2 0x176F PUSH2 0x25AA JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x1783 SWAP1 PUSH2 0x28B9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x17AF SWAP1 PUSH2 0x28B9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x17FC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x17D1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x17FC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x17DF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0x80 DUP6 ADD MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x6 SWAP1 SWAP3 ADD SLOAD PUSH1 0xC0 SWAP1 SWAP2 ADD MSTORE SWAP1 DUP3 MSTORE PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1707 JUMP JUMPDEST PUSH1 0x85 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1871 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP5 POP SWAP1 SWAP3 DUP3 AND SWAP2 AND DUP5 JUMP JUMPDEST PUSH1 0xC1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA327AB69 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xA327AB69 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18F3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1917 SWAP2 SWAP1 PUSH2 0x2803 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x193C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B7E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x18567541 PUSH1 0xE3 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x1971 SWAP2 SWAP1 PUSH2 0x2858 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x19AC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x19B1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x19C7 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP1 DUP3 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xA5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0xFF DUP1 DUP5 AND SWAP5 PUSH2 0x100 SWAP1 SWAP5 DIV AND SWAP3 SWAP2 SWAP1 PUSH2 0x1A09 SWAP1 PUSH2 0x28B9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1A35 SWAP1 PUSH2 0x28B9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1A82 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1A57 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1A82 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1A65 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x83 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1A9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x7 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP5 POP PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP3 DIV PUSH1 0xFF AND SWAP3 SWAP2 PUSH2 0x1AD6 SWAP1 PUSH2 0x28B9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1B02 SWAP1 PUSH2 0x28B9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1B4F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1B24 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1B4F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1B32 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x2 DUP5 ADD SLOAD PUSH1 0x3 DUP6 ADD SLOAD PUSH1 0x4 DUP7 ADD SLOAD PUSH1 0x5 DUP8 ADD SLOAD PUSH1 0x6 SWAP1 SWAP8 ADD SLOAD SWAP6 SWAP7 SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP PUSH1 0xFF DUP1 DUP4 AND SWAP3 PUSH2 0x100 SWAP1 DIV AND SWAP1 DUP10 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA327AB69 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BDB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BFF SWAP2 SWAP1 PUSH2 0x2803 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1C26 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2BB1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x6F2D58A7 PUSH1 0xE1 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x1C5B SWAP2 SWAP1 PUSH2 0x2858 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1C96 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1C9B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP3 PUSH2 0x1CB1 JUMPI DUP1 DUP3 REVERT JUMPDEST POP MLOAD SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1CD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1D0F JUMPI PUSH2 0x1D0F PUSH2 0x1CD7 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1D3D JUMPI PUSH2 0x1D3D PUSH2 0x1CD7 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1D56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1D6F JUMPI PUSH2 0x1D6F PUSH2 0x1CD7 JUMP JUMPDEST PUSH2 0x1D82 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x1D15 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x1D97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1DCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x1DD5 DUP2 PUSH2 0x1CBF JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1DF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E03 DUP8 DUP3 DUP9 ADD PUSH2 0x1D45 JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP4 SWAP5 PUSH1 0x60 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1E2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x1E37 DUP2 PUSH2 0x1CBF JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x1E47 DUP2 PUSH2 0x1CBF JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1E69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E75 DUP9 DUP3 DUP10 ADD PUSH2 0x1D45 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP3 SWAP6 PUSH1 0x80 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1EBB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1EA3 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1543 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1EE4 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1EA0 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1F1C SWAP1 DUP4 ADD DUP6 PUSH2 0x1ECC JUMP JUMPDEST SWAP1 POP DUP3 ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1F52 SWAP1 DUP4 ADD DUP8 PUSH2 0x1ECC JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE POP SWAP2 ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x80 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 SWAP3 POP DUP3 DUP7 ADD SWAP2 POP DUP3 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD DUP5 DUP9 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1FF1 JUMPI DUP9 DUP4 SUB PUSH1 0x3F NOT ADD DUP6 MSTORE DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE DUP8 DUP2 ADD MLOAD PUSH1 0x60 DUP10 DUP7 ADD DUP2 SWAP1 MSTORE SWAP1 PUSH2 0x1FD1 DUP3 DUP8 ADD DUP3 PUSH2 0x1ECC JUMP JUMPDEST SWAP3 DUP10 ADD MLOAD ISZERO ISZERO SWAP6 DUP10 ADD SWAP6 SWAP1 SWAP6 MSTORE POP SWAP5 DUP8 ADD SWAP5 SWAP3 POP SWAP1 DUP7 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1F98 JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2015 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x2020 DUP2 PUSH2 0x1CBF JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x203C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2048 DUP9 DUP4 DUP10 ADD PUSH2 0x1D45 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2065 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2072 DUP8 DUP3 DUP9 ADD PUSH2 0x1D45 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x208E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x20AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x20B7 DUP2 PUSH2 0x1CBF JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x20D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20DF DUP11 DUP4 DUP12 ADD PUSH2 0x1D45 JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x20F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2101 DUP11 DUP4 DUP12 ADD PUSH2 0x1D45 JUMP JUMPDEST SWAP6 POP PUSH2 0x210F PUSH1 0x60 DUP11 ADD PUSH2 0x207E JUMP JUMPDEST SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x212C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2139 DUP10 DUP3 DUP11 ADD PUSH2 0x1D45 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2158 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2163 DUP2 PUSH2 0x1CBF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2163 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1ECC JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x21AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21BB DUP7 DUP3 DUP8 ADD PUSH2 0x1D45 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x21E7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1ECC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x80 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR ISZERO PUSH2 0x2222 JUMPI PUSH2 0x2222 PUSH2 0x1CD7 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP1 PUSH1 0x80 DUP5 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x225A JUMPI DUP1 CALLDATALOAD PUSH2 0x224C DUP2 PUSH2 0x1CBF JUMP JUMPDEST DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x2239 JUMP JUMPDEST POP SWAP2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x227E JUMPI PUSH2 0x227E PUSH2 0x1CD7 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2299 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x22AE PUSH2 0x22A9 DUP4 PUSH2 0x2265 JUMP JUMPDEST PUSH2 0x1D15 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x22CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x22F1 JUMPI DUP1 CALLDATALOAD PUSH2 0x22E4 DUP2 PUSH2 0x1CBF JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x22D1 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1A0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x2319 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH2 0x2324 DUP2 PUSH2 0x1CBF JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 DUP2 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x2341 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x234D DUP14 DUP4 DUP15 ADD PUSH2 0x1D45 JUMP JUMPDEST SWAP10 POP PUSH2 0x235B PUSH1 0x40 DUP14 ADD PUSH2 0x207E JUMP JUMPDEST SWAP9 POP PUSH2 0x2369 PUSH1 0x60 DUP14 ADD PUSH2 0x207E JUMP JUMPDEST SWAP8 POP PUSH1 0x80 DUP13 ADD CALLDATALOAD SWAP7 POP DUP13 PUSH1 0xBF DUP14 ADD SLT PUSH2 0x2381 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2389 PUSH2 0x1CED JUMP JUMPDEST SWAP2 POP DUP2 PUSH2 0x100 DUP14 ADD DUP15 DUP2 GT ISZERO PUSH2 0x239E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA0 DUP15 ADD JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x23BA JUMPI DUP1 CALLDATALOAD DUP6 MSTORE SWAP4 DUP6 ADD SWAP4 DUP6 ADD PUSH2 0x23A3 JUMP JUMPDEST POP DUP2 SWAP8 POP PUSH2 0x23C8 DUP16 DUP3 PUSH2 0x21EF JUMP JUMPDEST SWAP7 POP POP POP PUSH2 0x180 DUP13 ADD CALLDATALOAD SWAP3 POP DUP1 DUP4 GT ISZERO PUSH2 0x23E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH2 0x23EF DUP12 DUP3 DUP13 ADD PUSH2 0x2288 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2412 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x241B DUP4 PUSH2 0x207E JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2436 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2442 DUP6 DUP3 DUP7 ADD PUSH2 0x1D45 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2461 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x2478 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2484 DUP8 DUP4 DUP9 ADD PUSH2 0x1D45 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x249A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x24A6 DUP8 DUP4 DUP9 ADD PUSH2 0x1D45 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x24BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24C9 DUP7 DUP3 DUP8 ADD PUSH2 0x1D45 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x24E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x2500 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2514 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x2524 PUSH2 0x22A9 DUP4 PUSH2 0x2265 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP12 DUP5 GT ISZERO PUSH2 0x2543 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x2561 JUMPI DUP6 CALLDATALOAD DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x2548 JUMP JUMPDEST SWAP9 POP PUSH2 0x2570 SWAP1 POP DUP10 DUP3 ADD PUSH2 0x207E JUMP JUMPDEST SWAP7 POP POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2588 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2594 DUP9 DUP4 DUP10 ADD PUSH2 0x1D45 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2065 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x9 DUP2 LT PUSH2 0x25DE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 SWAP3 POP DUP3 DUP7 ADD SWAP2 POP DUP3 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD DUP5 DUP9 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1FF1 JUMPI DUP9 DUP4 SUB PUSH1 0x3F NOT ADD DUP6 MSTORE DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH2 0x120 DUP9 DUP3 ADD MLOAD PUSH2 0x263C DUP11 DUP8 ADD DUP3 PUSH2 0x25C0 JUMP JUMPDEST POP DUP8 DUP3 ADD MLOAD DUP2 DUP10 DUP8 ADD MSTORE PUSH2 0x2652 DUP3 DUP8 ADD DUP3 PUSH2 0x1ECC JUMP JUMPDEST PUSH1 0x60 DUP5 DUP2 ADD MLOAD SWAP1 DUP9 ADD MSTORE PUSH1 0x80 DUP1 DUP6 ADD MLOAD SWAP1 DUP9 ADD MSTORE PUSH1 0xA0 DUP1 DUP6 ADD MLOAD SWAP1 DUP9 ADD MSTORE PUSH1 0xC0 DUP1 DUP6 ADD MLOAD ISZERO ISZERO SWAP1 DUP9 ADD MSTORE PUSH1 0xE0 DUP1 DUP6 ADD MLOAD ISZERO ISZERO SWAP1 DUP9 ADD MSTORE PUSH2 0x100 SWAP4 DUP5 ADD MLOAD SWAP4 SWAP1 SWAP7 ADD SWAP3 SWAP1 SWAP3 MSTORE POP POP SWAP4 DUP7 ADD SWAP4 SWAP1 DUP7 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2609 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x26BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH2 0x26CF PUSH1 0x20 DUP7 ADD PUSH2 0x207E JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x2588 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x26FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2710 DUP2 PUSH2 0x1CBF JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP4 ISZERO ISZERO DUP2 MSTORE DUP3 ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x273E PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1ECC JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP2 MSTORE PUSH1 0x0 PUSH2 0x120 PUSH2 0x2765 PUSH1 0x20 DUP5 ADD DUP13 PUSH2 0x25C0 JUMP JUMPDEST DUP1 PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x2777 DUP2 DUP5 ADD DUP12 PUSH2 0x1ECC JUMP JUMPDEST PUSH1 0x60 DUP5 ADD SWAP10 SWAP1 SWAP10 MSTORE POP POP PUSH1 0x80 DUP2 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0xA0 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0xC0 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 SWAP1 SWAP2 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x27C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x27D1 DUP2 PUSH2 0x1CBF JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH2 0x27E8 DUP2 PUSH2 0x1CBF JUMP JUMPDEST SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1E69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2815 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2163 DUP2 PUSH2 0x1CBF JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2847 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1ECC JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x60 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x286A DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1EA0 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x28A7 SWAP1 DUP4 ADD DUP6 PUSH2 0x1ECC JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x80 DUP4 ADD MSTORE SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x28CD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x28EE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2918 SWAP1 DUP4 ADD DUP7 PUSH2 0x1ECC JUMP JUMPDEST DUP5 PUSH1 0x40 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x2930 DUP2 DUP6 PUSH2 0x1ECC JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP2 MSTORE PUSH1 0xC0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x295F SWAP1 DUP4 ADD DUP9 PUSH2 0x1ECC JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x2971 DUP2 DUP9 PUSH2 0x1ECC JUMP JUMPDEST SWAP1 POP DUP6 ISZERO ISZERO PUSH1 0x60 DUP5 ADD MSTORE DUP5 PUSH1 0x80 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0x2993 DUP2 DUP6 PUSH2 0x1ECC JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x29B9 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1ECC JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x1543 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x29CD JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2A2E JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2A09 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP2 MSTORE PUSH2 0x1A0 PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH2 0x2A60 DUP5 DUP4 ADD DUP13 PUSH2 0x1ECC JUMP JUMPDEST SWAP2 POP DUP10 ISZERO ISZERO PUSH1 0x40 DUP6 ADD MSTORE DUP9 ISZERO ISZERO PUSH1 0x60 DUP6 ADD MSTORE DUP8 PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD DUP8 PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x2A9D JUMPI DUP2 MLOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2A80 JUMP JUMPDEST POP POP POP POP PUSH2 0x2AAF PUSH2 0x100 DUP5 ADD DUP7 PUSH2 0x29C9 JUMP JUMPDEST DUP3 DUP2 SUB PUSH2 0x180 DUP5 ADD MSTORE PUSH2 0x2AC2 DUP2 DUP6 PUSH2 0x29F5 JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2AE4 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1ECC JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2AF6 DUP2 DUP7 PUSH2 0x1ECC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x2B0A DUP2 DUP6 PUSH2 0x1ECC JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP1 DUP3 MSTORE DUP6 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0xA0 DUP5 ADD SWAP1 DUP3 DUP10 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2B4D JUMPI DUP2 MLOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2B31 JUMP JUMPDEST POP POP POP DUP7 ISZERO ISZERO DUP3 DUP6 ADD MSTORE DUP4 DUP2 SUB PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x2B69 DUP2 DUP8 PUSH2 0x1ECC JUMP JUMPDEST SWAP2 POP POP DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x2930 DUP2 DUP6 PUSH2 0x1ECC JUMP JUMPDEST DUP5 DUP2 MSTORE DUP4 ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2B9F PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1ECC JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x2930 DUP2 DUP6 PUSH2 0x1ECC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE DUP5 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x28A7 SWAP1 DUP4 ADD DUP6 PUSH2 0x1ECC JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD DUP4 BYTE 0xAD 0xB9 0xBD 0xD3 0xCC 0x2F 0xEB BASEFEE 0xDC 0xA9 0x1F 0x23 PUSH21 0xB3EFE0C0A72B00834ADBF1AAB38F860164736F6C63 NUMBER STOP ADDMOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        327,
        17490
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "CALLVALUE",
      "path": "50"
    },
    "6": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "DUP1",
      "path": "50"
    },
    "7": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "8": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "12": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "DUP1",
      "path": "50"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "REVERT",
      "path": "50"
    },
    "16": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "17": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "POP",
      "path": "50"
    },
    "18": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "21": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "LT",
      "path": "50"
    },
    "22": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x269"
    },
    "25": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "26": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "CALLDATALOAD",
      "path": "50"
    },
    "29": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "SHR",
      "path": "50"
    },
    "32": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "DUP1",
      "path": "50"
    },
    "33": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x6C2F34E7"
    },
    "38": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "GT",
      "path": "50"
    },
    "39": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x151"
    },
    "42": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "43": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "DUP1",
      "path": "50"
    },
    "44": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xA693649A"
    },
    "49": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "GT",
      "path": "50"
    },
    "50": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xC3"
    },
    "53": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "54": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "DUP1",
      "path": "50"
    },
    "55": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xCADA7F19"
    },
    "60": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "GT",
      "path": "50"
    },
    "61": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x87"
    },
    "64": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "65": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "DUP1",
      "path": "50"
    },
    "66": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xCADA7F19"
    },
    "71": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "EQ",
      "path": "50"
    },
    "72": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x5C8"
    },
    "75": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "76": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "DUP1",
      "path": "50"
    },
    "77": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xCB85669C"
    },
    "82": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "EQ",
      "path": "50"
    },
    "83": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x5DB"
    },
    "86": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "87": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "DUP1",
      "path": "50"
    },
    "88": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xDE5AB14E"
    },
    "93": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "EQ",
      "path": "50"
    },
    "94": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x603"
    },
    "97": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "98": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "DUP1",
      "path": "50"
    },
    "99": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xE68777D7"
    },
    "104": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "EQ",
      "path": "50"
    },
    "105": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x616"
    },
    "108": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "109": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "DUP1",
      "path": "50"
    },
    "110": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xE810A58E"
    },
    "115": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "EQ",
      "path": "50"
    },
    "116": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x61F"
    },
    "119": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "120": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "DUP1",
      "path": "50"
    },
    "121": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xF00D6274"
    },
    "126": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "EQ",
      "path": "50"
    },
    "127": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x628"
    },
    "130": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "131": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "133": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "DUP1",
      "path": "50"
    },
    "134": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "REVERT",
      "path": "50"
    },
    "135": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "136": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "DUP1",
      "path": "50"
    },
    "137": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xA693649A"
    },
    "142": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "EQ",
      "path": "50"
    },
    "143": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x530"
    },
    "146": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "147": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "DUP1",
      "path": "50"
    },
    "148": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xB4C62192"
    },
    "153": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "EQ",
      "path": "50"
    },
    "154": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x538"
    },
    "157": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "158": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "DUP1",
      "path": "50"
    },
    "159": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xBAA4D5E9"
    },
    "164": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "EQ",
      "path": "50"
    },
    "165": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x54D"
    },
    "168": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "169": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "DUP1",
      "path": "50"
    },
    "170": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xC2B3AA08"
    },
    "175": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "EQ",
      "path": "50"
    },
    "176": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x593"
    },
    "179": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "180": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "DUP1",
      "path": "50"
    },
    "181": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xC347D2FD"
    },
    "186": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "EQ",
      "path": "50"
    },
    "187": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x5A6"
    },
    "190": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "191": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "193": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "DUP1",
      "path": "50"
    },
    "194": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "REVERT",
      "path": "50"
    },
    "195": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "196": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "DUP1",
      "path": "50"
    },
    "197": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x860228FD"
    },
    "202": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "GT",
      "path": "50"
    },
    "203": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x115"
    },
    "206": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "207": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "DUP1",
      "path": "50"
    },
    "208": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x860228FD"
    },
    "213": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "EQ",
      "path": "50"
    },
    "214": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x4BB"
    },
    "217": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "218": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "DUP1",
      "path": "50"
    },
    "219": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x9360BFAD"
    },
    "224": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "EQ",
      "path": "50"
    },
    "225": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x4DB"
    },
    "228": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "229": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "DUP1",
      "path": "50"
    },
    "230": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x9C630A88"
    },
    "235": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "EQ",
      "path": "50"
    },
    "236": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x4EE"
    },
    "239": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "240": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "DUP1",
      "path": "50"
    },
    "241": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xA0A625F9"
    },
    "246": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "EQ",
      "path": "50"
    },
    "247": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x4F7"
    },
    "250": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "251": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "DUP1",
      "path": "50"
    },
    "252": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xA19A5F50"
    },
    "257": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "EQ",
      "path": "50"
    },
    "258": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x50A"
    },
    "261": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "262": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "DUP1",
      "path": "50"
    },
    "263": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xA1C89C9D"
    },
    "268": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "EQ",
      "path": "50"
    },
    "269": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x51D"
    },
    "272": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "273": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "275": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "DUP1",
      "path": "50"
    },
    "276": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "REVERT",
      "path": "50"
    },
    "277": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "278": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "DUP1",
      "path": "50"
    },
    "279": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x6C2F34E7"
    },
    "284": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "EQ",
      "path": "50"
    },
    "285": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x44D"
    },
    "288": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "289": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "DUP1",
      "path": "50"
    },
    "290": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x70FF918C"
    },
    "295": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "EQ",
      "path": "50"
    },
    "296": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x460"
    },
    "299": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "300": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "DUP1",
      "path": "50"
    },
    "301": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x7C638548"
    },
    "306": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "EQ",
      "path": "50"
    },
    "307": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x480"
    },
    "310": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "311": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "DUP1",
      "path": "50"
    },
    "312": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x7E66495D"
    },
    "317": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "EQ",
      "path": "50"
    },
    "318": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x493"
    },
    "321": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "322": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "DUP1",
      "path": "50"
    },
    "323": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x81CF22D8"
    },
    "328": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "EQ",
      "path": "50"
    },
    "329": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x4A8"
    },
    "332": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "333": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "335": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "DUP1",
      "path": "50"
    },
    "336": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "REVERT",
      "path": "50"
    },
    "337": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "338": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "DUP1",
      "path": "50"
    },
    "339": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x2266E1BC"
    },
    "344": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "GT",
      "path": "50"
    },
    "345": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1EA"
    },
    "348": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "349": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "DUP1",
      "path": "50"
    },
    "350": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x3A70693D"
    },
    "355": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "GT",
      "path": "50"
    },
    "356": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1AE"
    },
    "359": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "360": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "DUP1",
      "path": "50"
    },
    "361": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x3A70693D"
    },
    "366": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "EQ",
      "path": "50"
    },
    "367": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x3C9"
    },
    "370": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "371": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "DUP1",
      "path": "50"
    },
    "372": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x4E9D5472"
    },
    "377": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "EQ",
      "path": "50"
    },
    "378": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x3DC"
    },
    "381": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "382": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "DUP1",
      "path": "50"
    },
    "383": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x50F7308A"
    },
    "388": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "EQ",
      "path": "50"
    },
    "389": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x3E4"
    },
    "392": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "393": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "DUP1",
      "path": "50"
    },
    "394": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x59CA2D03"
    },
    "399": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "EQ",
      "path": "50"
    },
    "400": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x404"
    },
    "403": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "404": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "DUP1",
      "path": "50"
    },
    "405": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x5DE58F60"
    },
    "410": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "EQ",
      "path": "50"
    },
    "411": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x419"
    },
    "414": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "415": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "DUP1",
      "path": "50"
    },
    "416": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x5F3D99B3"
    },
    "421": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "EQ",
      "path": "50"
    },
    "422": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x42C"
    },
    "425": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "426": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "428": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "DUP1",
      "path": "50"
    },
    "429": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "REVERT",
      "path": "50"
    },
    "430": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "431": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "DUP1",
      "path": "50"
    },
    "432": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x2266E1BC"
    },
    "437": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "EQ",
      "path": "50"
    },
    "438": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x357"
    },
    "441": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "442": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "DUP1",
      "path": "50"
    },
    "443": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x22B4081C"
    },
    "448": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "EQ",
      "path": "50"
    },
    "449": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x36A"
    },
    "452": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "453": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "DUP1",
      "path": "50"
    },
    "454": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x29647EE5"
    },
    "459": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "EQ",
      "path": "50"
    },
    "460": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x38E"
    },
    "463": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "464": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "DUP1",
      "path": "50"
    },
    "465": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x2A57EF84"
    },
    "470": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "EQ",
      "path": "50"
    },
    "471": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x3A3"
    },
    "474": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "475": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "DUP1",
      "path": "50"
    },
    "476": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x31A0AFA7"
    },
    "481": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "EQ",
      "path": "50"
    },
    "482": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x3B6"
    },
    "485": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "486": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "488": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "DUP1",
      "path": "50"
    },
    "489": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "REVERT",
      "path": "50"
    },
    "490": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "491": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "DUP1",
      "path": "50"
    },
    "492": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x1707ACE8"
    },
    "497": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "GT",
      "path": "50"
    },
    "498": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x231"
    },
    "501": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "502": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "DUP1",
      "path": "50"
    },
    "503": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x1707ACE8"
    },
    "508": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "EQ",
      "path": "50"
    },
    "509": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2EE"
    },
    "512": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "513": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "DUP1",
      "path": "50"
    },
    "514": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x19A50F49"
    },
    "519": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "EQ",
      "path": "50"
    },
    "520": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x310"
    },
    "523": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "524": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "DUP1",
      "path": "50"
    },
    "525": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x1D5FD3CA"
    },
    "530": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "EQ",
      "path": "50"
    },
    "531": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x319"
    },
    "534": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "535": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "DUP1",
      "path": "50"
    },
    "536": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x1F2E1339"
    },
    "541": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "EQ",
      "path": "50"
    },
    "542": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x322"
    },
    "545": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "546": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "DUP1",
      "path": "50"
    },
    "547": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x1F50DD27"
    },
    "552": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "EQ",
      "path": "50"
    },
    "553": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x344"
    },
    "556": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "557": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "559": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "DUP1",
      "path": "50"
    },
    "560": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "REVERT",
      "path": "50"
    },
    "561": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "562": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "DUP1",
      "path": "50"
    },
    "563": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x4F17A9B"
    },
    "568": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "EQ",
      "path": "50"
    },
    "569": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x26E"
    },
    "572": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "573": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "DUP1",
      "path": "50"
    },
    "574": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x52F9B0A"
    },
    "579": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "EQ",
      "path": "50"
    },
    "580": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x294"
    },
    "583": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "584": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "DUP1",
      "path": "50"
    },
    "585": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x10790717"
    },
    "590": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "EQ",
      "path": "50"
    },
    "591": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2BF"
    },
    "594": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "595": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "DUP1",
      "path": "50"
    },
    "596": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x1343E9A5"
    },
    "601": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "EQ",
      "path": "50"
    },
    "602": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2D2"
    },
    "605": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "606": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "DUP1",
      "path": "50"
    },
    "607": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x152DE3B9"
    },
    "612": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "EQ",
      "path": "50"
    },
    "613": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2DB"
    },
    "616": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "617": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "618": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "620": {
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "DUP1",
      "path": "50"
    },
    "621": {
      "first_revert": true,
      "fn": null,
      "offset": [
        327,
        17490
      ],
      "op": "REVERT",
      "path": "50"
    },
    "622": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13843,
        14743
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "623": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13843,
        14743
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x281"
    },
    "626": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13843,
        14743
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x27C"
    },
    "629": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13843,
        14743
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "630": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13843,
        14743
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "632": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13843,
        14743
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1DB4"
    },
    "635": {
      "fn": "CLHouse.PropSellERC20",
      "jump": "i",
      "offset": [
        13843,
        14743
      ],
      "op": "JUMP",
      "path": "50"
    },
    "636": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13843,
        14743
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "637": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13843,
        14743
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x635"
    },
    "640": {
      "fn": "CLHouse.PropSellERC20",
      "jump": "i",
      "offset": [
        13843,
        14743
      ],
      "op": "JUMP",
      "path": "50"
    },
    "641": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13843,
        14743
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "642": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13843,
        14743
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "644": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13843,
        14743
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "645": {
      "op": "SWAP1"
    },
    "646": {
      "op": "DUP2"
    },
    "647": {
      "op": "MSTORE"
    },
    "648": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "650": {
      "op": "ADD"
    },
    "651": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13843,
        14743
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "652": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13843,
        14743
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "654": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13843,
        14743
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "655": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13843,
        14743
      ],
      "op": "DUP1",
      "path": "50"
    },
    "656": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13843,
        14743
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "657": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13843,
        14743
      ],
      "op": "SUB",
      "path": "50"
    },
    "658": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13843,
        14743
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "659": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13843,
        14743
      ],
      "op": "RETURN",
      "path": "50"
    },
    "660": {
      "offset": [
        1573,
        1596
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "661": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1573,
        1596
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0xC4"
    },
    "663": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1573,
        1596
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "664": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1573,
        1596
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2A7"
    },
    "667": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1573,
        1596
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "668": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "670": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "672": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "674": {
      "op": "SHL"
    },
    "675": {
      "op": "SUB"
    },
    "676": {
      "offset": [
        1573,
        1596
      ],
      "op": "AND",
      "path": "47"
    },
    "677": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1573,
        1596
      ],
      "op": "DUP2",
      "path": "47"
    },
    "678": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1573,
        1596
      ],
      "op": "JUMP",
      "path": "47"
    },
    "679": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1573,
        1596
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "680": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1573,
        1596
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "682": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1573,
        1596
      ],
      "op": "MLOAD",
      "path": "47"
    },
    "683": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "685": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "687": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "689": {
      "op": "SHL"
    },
    "690": {
      "op": "SUB"
    },
    "691": {
      "op": "SWAP1"
    },
    "692": {
      "op": "SWAP2"
    },
    "693": {
      "op": "AND"
    },
    "694": {
      "op": "DUP2"
    },
    "695": {
      "op": "MSTORE"
    },
    "696": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "698": {
      "op": "ADD"
    },
    "699": {
      "offset": [
        1573,
        1596
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x28B"
    },
    "702": {
      "op": "JUMP"
    },
    "703": {
      "offset": [
        673,
        694
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "704": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        673,
        694
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x22"
    },
    "706": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        673,
        694
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "707": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        673,
        694
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2A7"
    },
    "710": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        673,
        694
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "711": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "715": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "717": {
      "op": "SHL"
    },
    "718": {
      "op": "SUB"
    },
    "719": {
      "offset": [
        673,
        694
      ],
      "op": "AND",
      "path": "47"
    },
    "720": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        673,
        694
      ],
      "op": "DUP2",
      "path": "47"
    },
    "721": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        673,
        694
      ],
      "op": "JUMP",
      "path": "47"
    },
    "722": {
      "offset": [
        567,
        597
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "723": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        567,
        597
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x281"
    },
    "726": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        567,
        597
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x5"
    },
    "728": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        567,
        597
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "729": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        567,
        597
      ],
      "op": "DUP2",
      "path": "47"
    },
    "730": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        567,
        597
      ],
      "op": "JUMP",
      "path": "47"
    },
    "731": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12871,
        13837
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "732": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12871,
        13837
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x281"
    },
    "735": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12871,
        13837
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2E9"
    },
    "738": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12871,
        13837
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "739": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12871,
        13837
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "741": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12871,
        13837
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1E14"
    },
    "744": {
      "fn": "CLHouse.PropSwapERC20",
      "jump": "i",
      "offset": [
        12871,
        13837
      ],
      "op": "JUMP",
      "path": "50"
    },
    "745": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12871,
        13837
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "746": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12871,
        13837
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x763"
    },
    "749": {
      "fn": "CLHouse.PropSwapERC20",
      "jump": "i",
      "offset": [
        12871,
        13837
      ],
      "op": "JUMP",
      "path": "50"
    },
    "750": {
      "offset": [
        963,
        999
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "751": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x301"
    },
    "754": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2FC"
    },
    "757": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "CALLDATASIZE",
      "path": "47"
    },
    "758": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x4"
    },
    "760": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1E87"
    },
    "763": {
      "fn": "CLHouse.PropSwapERC20",
      "jump": "i",
      "offset": [
        963,
        999
      ],
      "op": "JUMP",
      "path": "47"
    },
    "764": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "765": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x839"
    },
    "768": {
      "fn": "CLHouse.PropSwapERC20",
      "jump": "i",
      "offset": [
        963,
        999
      ],
      "op": "JUMP",
      "path": "47"
    },
    "769": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "770": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "772": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "MLOAD",
      "path": "47"
    },
    "773": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x28B"
    },
    "776": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "SWAP4",
      "path": "47"
    },
    "777": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "778": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "779": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "780": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1EF8"
    },
    "783": {
      "fn": "CLHouse.PropSwapERC20",
      "jump": "i",
      "offset": [
        963,
        999
      ],
      "op": "JUMP",
      "path": "47"
    },
    "784": {
      "offset": [
        462,
        485
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "785": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        462,
        485
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x281"
    },
    "788": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        462,
        485
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x2"
    },
    "790": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        462,
        485
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "791": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        462,
        485
      ],
      "op": "DUP2",
      "path": "47"
    },
    "792": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        462,
        485
      ],
      "op": "JUMP",
      "path": "47"
    },
    "793": {
      "offset": [
        819,
        856
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "794": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        819,
        856
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x281"
    },
    "797": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        819,
        856
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x62"
    },
    "799": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        819,
        856
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "800": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        819,
        856
      ],
      "op": "DUP2",
      "path": "47"
    },
    "801": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        819,
        856
      ],
      "op": "JUMP",
      "path": "47"
    },
    "802": {
      "offset": [
        410,
        431
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "803": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        410,
        431
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "805": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        410,
        431
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "806": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        410,
        431
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x334"
    },
    "809": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        410,
        431
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "810": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        410,
        431
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x100"
    },
    "813": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        410,
        431
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "814": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        410,
        431
      ],
      "op": "DIV",
      "path": "47"
    },
    "815": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        410,
        431
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0xFF"
    },
    "817": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        410,
        431
      ],
      "op": "AND",
      "path": "47"
    },
    "818": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        410,
        431
      ],
      "op": "DUP2",
      "path": "47"
    },
    "819": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        410,
        431
      ],
      "op": "JUMP",
      "path": "47"
    },
    "820": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        410,
        431
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "821": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        410,
        431
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "823": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        410,
        431
      ],
      "op": "MLOAD",
      "path": "47"
    },
    "824": {
      "op": "SWAP1"
    },
    "825": {
      "op": "ISZERO"
    },
    "826": {
      "op": "ISZERO"
    },
    "827": {
      "op": "DUP2"
    },
    "828": {
      "op": "MSTORE"
    },
    "829": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "831": {
      "op": "ADD"
    },
    "832": {
      "offset": [
        410,
        431
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x28B"
    },
    "835": {
      "op": "JUMP"
    },
    "836": {
      "offset": [
        1602,
        1629
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "837": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1602,
        1629
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0xC5"
    },
    "839": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1602,
        1629
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "840": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1602,
        1629
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2A7"
    },
    "843": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1602,
        1629
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "844": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "848": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "850": {
      "op": "SHL"
    },
    "851": {
      "op": "SUB"
    },
    "852": {
      "offset": [
        1602,
        1629
      ],
      "op": "AND",
      "path": "47"
    },
    "853": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1602,
        1629
      ],
      "op": "DUP2",
      "path": "47"
    },
    "854": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1602,
        1629
      ],
      "op": "JUMP",
      "path": "47"
    },
    "855": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14749,
        15645
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "856": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14749,
        15645
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x281"
    },
    "859": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14749,
        15645
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x365"
    },
    "862": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14749,
        15645
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "863": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14749,
        15645
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "865": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14749,
        15645
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1DB4"
    },
    "868": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "i",
      "offset": [
        14749,
        15645
      ],
      "op": "JUMP",
      "path": "50"
    },
    "869": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14749,
        15645
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "870": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14749,
        15645
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x904"
    },
    "873": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "i",
      "offset": [
        14749,
        15645
      ],
      "op": "JUMP",
      "path": "50"
    },
    "874": {
      "offset": [
        893,
        918
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "875": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x37D"
    },
    "878": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x378"
    },
    "881": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "CALLDATASIZE",
      "path": "47"
    },
    "882": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x4"
    },
    "884": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1E87"
    },
    "887": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "i",
      "offset": [
        893,
        918
      ],
      "op": "JUMP",
      "path": "47"
    },
    "888": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "889": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x9D8"
    },
    "892": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "i",
      "offset": [
        893,
        918
      ],
      "op": "JUMP",
      "path": "47"
    },
    "893": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "894": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "896": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "MLOAD",
      "path": "47"
    },
    "897": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x28B"
    },
    "900": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "SWAP6",
      "path": "47"
    },
    "901": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "SWAP5",
      "path": "47"
    },
    "902": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "SWAP4",
      "path": "47"
    },
    "903": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "904": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "905": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "906": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1F2E"
    },
    "909": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "i",
      "offset": [
        893,
        918
      ],
      "op": "JUMP",
      "path": "47"
    },
    "910": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17373,
        17488
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "911": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17373,
        17488
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x396"
    },
    "914": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17373,
        17488
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xAB3"
    },
    "917": {
      "fn": "CLHouse.GetArrDataPropUser",
      "jump": "i",
      "offset": [
        17373,
        17488
      ],
      "op": "JUMP",
      "path": "50"
    },
    "918": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17373,
        17488
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "919": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17373,
        17488
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "921": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17373,
        17488
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "922": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17373,
        17488
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x28B"
    },
    "925": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17373,
        17488
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "926": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17373,
        17488
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "927": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17373,
        17488
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1F71"
    },
    "930": {
      "fn": "CLHouse.GetArrDataPropUser",
      "jump": "i",
      "offset": [
        17373,
        17488
      ],
      "op": "JUMP",
      "path": "50"
    },
    "931": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6226,
        7133
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "932": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6226,
        7133
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x281"
    },
    "935": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6226,
        7133
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x3B1"
    },
    "938": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6226,
        7133
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "939": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6226,
        7133
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "941": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6226,
        7133
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1FFF"
    },
    "944": {
      "fn": "CLHouse.PropRemoveUser",
      "jump": "i",
      "offset": [
        6226,
        7133
      ],
      "op": "JUMP",
      "path": "50"
    },
    "945": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6226,
        7133
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "946": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6226,
        7133
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xBCC"
    },
    "949": {
      "fn": "CLHouse.PropRemoveUser",
      "jump": "i",
      "offset": [
        6226,
        7133
      ],
      "op": "JUMP",
      "path": "50"
    },
    "950": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4926,
        5950
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "951": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4926,
        5950
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x281"
    },
    "954": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4926,
        5950
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x3C4"
    },
    "957": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4926,
        5950
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "958": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4926,
        5950
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "960": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4926,
        5950
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2093"
    },
    "963": {
      "fn": "CLHouse.PropInviteUser",
      "jump": "i",
      "offset": [
        4926,
        5950
      ],
      "op": "JUMP",
      "path": "50"
    },
    "964": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4926,
        5950
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "965": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4926,
        5950
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xD03"
    },
    "968": {
      "fn": "CLHouse.PropInviteUser",
      "jump": "i",
      "offset": [
        4926,
        5950
      ],
      "op": "JUMP",
      "path": "50"
    },
    "969": {
      "offset": [
        1055,
        1099
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "970": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1055,
        1099
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x281"
    },
    "973": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1055,
        1099
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x3D7"
    },
    "976": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1055,
        1099
      ],
      "op": "CALLDATASIZE",
      "path": "47"
    },
    "977": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1055,
        1099
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x4"
    },
    "979": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1055,
        1099
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1E87"
    },
    "982": {
      "fn": "CLHouse.PropInviteUser",
      "jump": "i",
      "offset": [
        1055,
        1099
      ],
      "op": "JUMP",
      "path": "47"
    },
    "983": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1055,
        1099
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "984": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1055,
        1099
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0xE40"
    },
    "987": {
      "fn": "CLHouse.PropInviteUser",
      "jump": "i",
      "offset": [
        1055,
        1099
      ],
      "op": "JUMP",
      "path": "47"
    },
    "988": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        16934,
        17042
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "989": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        17016,
        17028
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 0,
      "value": "0x83"
    },
    "991": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        17016,
        17035
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "992": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        16934,
        17042
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x281"
    },
    "995": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        16934,
        17042
      ],
      "op": "JUMP",
      "path": "50"
    },
    "996": {
      "offset": [
        1187,
        1241
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "997": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        1187,
        1241
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x281"
    },
    "1000": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        1187,
        1241
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x3F2"
    },
    "1003": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        1187,
        1241
      ],
      "op": "CALLDATASIZE",
      "path": "47"
    },
    "1004": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        1187,
        1241
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x4"
    },
    "1006": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        1187,
        1241
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2146"
    },
    "1009": {
      "fn": "CLHouse.GetArrProposalsLength",
      "jump": "i",
      "offset": [
        1187,
        1241
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1010": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        1187,
        1241
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1011": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        1187,
        1241
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0xA3"
    },
    "1013": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        1187,
        1241
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "1015": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        1187,
        1241
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "1016": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        1187,
        1241
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "1018": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        1187,
        1241
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "1019": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        1187,
        1241
      ],
      "op": "DUP2",
      "path": "47"
    },
    "1020": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        1187,
        1241
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "1021": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        1187,
        1241
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "1023": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        1187,
        1241
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "1024": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        1187,
        1241
      ],
      "op": "KECCAK256",
      "path": "47"
    },
    "1025": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        1187,
        1241
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "1026": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        1187,
        1241
      ],
      "op": "DUP2",
      "path": "47"
    },
    "1027": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        1187,
        1241
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1028": {
      "offset": [
        759,
        783
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1029": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        759,
        783
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x40C"
    },
    "1032": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        759,
        783
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0xE61"
    },
    "1035": {
      "fn": "CLHouse.GetArrProposalsLength",
      "jump": "i",
      "offset": [
        759,
        783
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1036": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        759,
        783
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1037": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        759,
        783
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "1039": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        759,
        783
      ],
      "op": "MLOAD",
      "path": "47"
    },
    "1040": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        759,
        783
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x28B"
    },
    "1043": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        759,
        783
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "1044": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        759,
        783
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "1045": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        759,
        783
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x216A"
    },
    "1048": {
      "fn": "CLHouse.GetArrProposalsLength",
      "jump": "i",
      "offset": [
        759,
        783
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1049": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10024,
        10878
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1050": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10024,
        10878
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x281"
    },
    "1053": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10024,
        10878
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x427"
    },
    "1056": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10024,
        10878
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "1057": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10024,
        10878
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "1059": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10024,
        10878
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x217D"
    },
    "1062": {
      "fn": "CLHouse.PropGovRules",
      "jump": "i",
      "offset": [
        10024,
        10878
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1063": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10024,
        10878
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1064": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10024,
        10878
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xEEF"
    },
    "1067": {
      "fn": "CLHouse.PropGovRules",
      "jump": "i",
      "offset": [
        10024,
        10878
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1068": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2617,
        3378
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1069": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2617,
        3378
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x43F"
    },
    "1072": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2617,
        3378
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x43A"
    },
    "1075": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2617,
        3378
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "1076": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2617,
        3378
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "1078": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2617,
        3378
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1E87"
    },
    "1081": {
      "fn": "CLHouse.ExecProp",
      "jump": "i",
      "offset": [
        2617,
        3378
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1082": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2617,
        3378
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1083": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2617,
        3378
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1023"
    },
    "1086": {
      "fn": "CLHouse.ExecProp",
      "jump": "i",
      "offset": [
        2617,
        3378
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1087": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2617,
        3378
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1088": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2617,
        3378
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1090": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2617,
        3378
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1091": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2617,
        3378
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x28B"
    },
    "1094": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2617,
        3378
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "1095": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2617,
        3378
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1096": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2617,
        3378
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1097": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2617,
        3378
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x21CC"
    },
    "1100": {
      "fn": "CLHouse.ExecProp",
      "jump": "i",
      "offset": [
        2617,
        3378
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1101": {
      "offset": [
        1516,
        1539
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1102": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1516,
        1539
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0xC2"
    },
    "1104": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1516,
        1539
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "1105": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1516,
        1539
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2A7"
    },
    "1108": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1516,
        1539
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "1109": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1111": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1113": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1115": {
      "op": "SHL"
    },
    "1116": {
      "op": "SUB"
    },
    "1117": {
      "offset": [
        1516,
        1539
      ],
      "op": "AND",
      "path": "47"
    },
    "1118": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1516,
        1539
      ],
      "op": "DUP2",
      "path": "47"
    },
    "1119": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1516,
        1539
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1120": {
      "offset": [
        1135,
        1181
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1121": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1135,
        1181
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x281"
    },
    "1124": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1135,
        1181
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x46E"
    },
    "1127": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1135,
        1181
      ],
      "op": "CALLDATASIZE",
      "path": "47"
    },
    "1128": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1135,
        1181
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x4"
    },
    "1130": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1135,
        1181
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2146"
    },
    "1133": {
      "fn": "CLHouse.ExecProp",
      "jump": "i",
      "offset": [
        1135,
        1181
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1134": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1135,
        1181
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1135": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1135,
        1181
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0xA2"
    },
    "1137": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1135,
        1181
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "1139": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1135,
        1181
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "1140": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1135,
        1181
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "1142": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1135,
        1181
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "1143": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1135,
        1181
      ],
      "op": "DUP2",
      "path": "47"
    },
    "1144": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1135,
        1181
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "1145": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1135,
        1181
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "1147": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1135,
        1181
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "1148": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1135,
        1181
      ],
      "op": "KECCAK256",
      "path": "47"
    },
    "1149": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1135,
        1181
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "1150": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1135,
        1181
      ],
      "op": "DUP2",
      "path": "47"
    },
    "1151": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1135,
        1181
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1152": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7478,
        8362
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1153": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7478,
        8362
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x281"
    },
    "1156": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7478,
        8362
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x48E"
    },
    "1159": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7478,
        8362
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "1160": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7478,
        8362
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "1162": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7478,
        8362
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1DB4"
    },
    "1165": {
      "fn": "CLHouse.PropTxWei",
      "jump": "i",
      "offset": [
        7478,
        8362
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1166": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7478,
        8362
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1167": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7478,
        8362
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x118F"
    },
    "1170": {
      "fn": "CLHouse.PropTxWei",
      "jump": "i",
      "offset": [
        7478,
        8362
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1171": {
      "fn": "CLHouse.Init",
      "offset": [
        1138,
        2262
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1172": {
      "fn": "CLHouse.Init",
      "offset": [
        1138,
        2262
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x4A6"
    },
    "1175": {
      "fn": "CLHouse.Init",
      "offset": [
        1138,
        2262
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x4A1"
    },
    "1178": {
      "fn": "CLHouse.Init",
      "offset": [
        1138,
        2262
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "1179": {
      "fn": "CLHouse.Init",
      "offset": [
        1138,
        2262
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "1181": {
      "fn": "CLHouse.Init",
      "offset": [
        1138,
        2262
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x22FC"
    },
    "1184": {
      "fn": "CLHouse.Init",
      "jump": "i",
      "offset": [
        1138,
        2262
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1185": {
      "fn": "CLHouse.Init",
      "offset": [
        1138,
        2262
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1186": {
      "fn": "CLHouse.Init",
      "offset": [
        1138,
        2262
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1263"
    },
    "1189": {
      "fn": "CLHouse.Init",
      "jump": "i",
      "offset": [
        1138,
        2262
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1190": {
      "fn": "CLHouse.Init",
      "offset": [
        1138,
        2262
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1191": {
      "fn": "CLHouse.Init",
      "offset": [
        1138,
        2262
      ],
      "op": "STOP",
      "path": "50"
    },
    "1192": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12134,
        12865
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1193": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12134,
        12865
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x4A6"
    },
    "1196": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12134,
        12865
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x4B6"
    },
    "1199": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12134,
        12865
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "1200": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12134,
        12865
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "1202": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12134,
        12865
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x23FF"
    },
    "1205": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "jump": "i",
      "offset": [
        12134,
        12865
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1206": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12134,
        12865
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1207": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12134,
        12865
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1429"
    },
    "1210": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "jump": "i",
      "offset": [
        12134,
        12865
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1211": {
      "offset": [
        1267,
        1315
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1212": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1267,
        1315
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x281"
    },
    "1215": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1267,
        1315
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x4C9"
    },
    "1218": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1267,
        1315
      ],
      "op": "CALLDATASIZE",
      "path": "47"
    },
    "1219": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1267,
        1315
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x4"
    },
    "1221": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1267,
        1315
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2146"
    },
    "1224": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "jump": "i",
      "offset": [
        1267,
        1315
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1225": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1267,
        1315
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1226": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1267,
        1315
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0xA4"
    },
    "1228": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1267,
        1315
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "1230": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1267,
        1315
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "1231": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1267,
        1315
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "1233": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1267,
        1315
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "1234": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1267,
        1315
      ],
      "op": "DUP2",
      "path": "47"
    },
    "1235": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1267,
        1315
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "1236": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1267,
        1315
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "1238": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1267,
        1315
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "1239": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1267,
        1315
      ],
      "op": "KECCAK256",
      "path": "47"
    },
    "1240": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1267,
        1315
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "1241": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1267,
        1315
      ],
      "op": "DUP2",
      "path": "47"
    },
    "1242": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1267,
        1315
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1243": {
      "offset": [
        1545,
        1567
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1244": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1545,
        1567
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0xC3"
    },
    "1246": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1545,
        1567
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "1247": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1545,
        1567
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2A7"
    },
    "1250": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1545,
        1567
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "1251": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1253": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1255": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1257": {
      "op": "SHL"
    },
    "1258": {
      "op": "SUB"
    },
    "1259": {
      "offset": [
        1545,
        1567
      ],
      "op": "AND",
      "path": "47"
    },
    "1260": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1545,
        1567
      ],
      "op": "DUP2",
      "path": "47"
    },
    "1261": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1545,
        1567
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1262": {
      "offset": [
        523,
        561
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1263": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        523,
        561
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x281"
    },
    "1266": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        523,
        561
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x4"
    },
    "1268": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        523,
        561
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "1269": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        523,
        561
      ],
      "op": "DUP2",
      "path": "47"
    },
    "1270": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        523,
        561
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1271": {
      "offset": [
        1482,
        1510
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1272": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1482,
        1510
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0xC1"
    },
    "1274": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1482,
        1510
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "1275": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1482,
        1510
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2A7"
    },
    "1278": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1482,
        1510
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "1279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1283": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1285": {
      "op": "SHL"
    },
    "1286": {
      "op": "SUB"
    },
    "1287": {
      "offset": [
        1482,
        1510
      ],
      "op": "AND",
      "path": "47"
    },
    "1288": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1482,
        1510
      ],
      "op": "DUP2",
      "path": "47"
    },
    "1289": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1482,
        1510
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1290": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11178,
        12010
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1291": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11178,
        12010
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x281"
    },
    "1294": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11178,
        12010
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x518"
    },
    "1297": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11178,
        12010
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "1298": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11178,
        12010
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "1300": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11178,
        12010
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x244C"
    },
    "1303": {
      "fn": "CLHouse.PropRequestToJoin",
      "jump": "i",
      "offset": [
        11178,
        12010
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1304": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11178,
        12010
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1305": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11178,
        12010
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1549"
    },
    "1308": {
      "fn": "CLHouse.PropRequestToJoin",
      "jump": "i",
      "offset": [
        11178,
        12010
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1309": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        15881,
        16736
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1310": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        15881,
        16736
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x4A6"
    },
    "1313": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        15881,
        16736
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x52B"
    },
    "1316": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        15881,
        16736
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "1317": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        15881,
        16736
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "1319": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        15881,
        16736
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x24D3"
    },
    "1322": {
      "fn": "CLHouse.bulkVote",
      "jump": "i",
      "offset": [
        15881,
        16736
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1323": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        15881,
        16736
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1324": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        15881,
        16736
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x161B"
    },
    "1327": {
      "fn": "CLHouse.bulkVote",
      "jump": "i",
      "offset": [
        15881,
        16736
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1328": {
      "fn": "CLHouse.GetArrUsersLength",
      "offset": [
        16783,
        16883
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1329": {
      "fn": "CLHouse.GetArrUsersLength",
      "offset": [
        16861,
        16869
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 1,
      "value": "0x82"
    },
    "1331": {
      "fn": "CLHouse.GetArrUsersLength",
      "offset": [
        16861,
        16876
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "1332": {
      "fn": "CLHouse.GetArrUsersLength",
      "offset": [
        16783,
        16883
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x281"
    },
    "1335": {
      "fn": "CLHouse.GetArrUsersLength",
      "offset": [
        16783,
        16883
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1336": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17148,
        17257
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1337": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17148,
        17257
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x540"
    },
    "1340": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17148,
        17257
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x16E3"
    },
    "1343": {
      "fn": "CLHouse.GetProposalList",
      "jump": "i",
      "offset": [
        17148,
        17257
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1344": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17148,
        17257
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1345": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17148,
        17257
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1347": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17148,
        17257
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1348": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17148,
        17257
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x28B"
    },
    "1351": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17148,
        17257
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1352": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17148,
        17257
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1353": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17148,
        17257
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x25E2"
    },
    "1356": {
      "fn": "CLHouse.GetProposalList",
      "jump": "i",
      "offset": [
        17148,
        17257
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1357": {
      "offset": [
        1005,
        1049
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1358": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1005,
        1049
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x560"
    },
    "1361": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1005,
        1049
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x55B"
    },
    "1364": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1005,
        1049
      ],
      "op": "CALLDATASIZE",
      "path": "47"
    },
    "1365": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1005,
        1049
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x4"
    },
    "1367": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1005,
        1049
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1E87"
    },
    "1370": {
      "fn": "CLHouse.GetProposalList",
      "jump": "i",
      "offset": [
        1005,
        1049
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1371": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1005,
        1049
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1372": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1005,
        1049
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1861"
    },
    "1375": {
      "fn": "CLHouse.GetProposalList",
      "jump": "i",
      "offset": [
        1005,
        1049
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1376": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1005,
        1049
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1377": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1005,
        1049
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "1379": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1005,
        1049
      ],
      "op": "DUP1",
      "path": "47"
    },
    "1380": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1005,
        1049
      ],
      "op": "MLOAD",
      "path": "47"
    },
    "1381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1385": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1387": {
      "op": "SHL"
    },
    "1388": {
      "op": "SUB"
    },
    "1389": {
      "op": "SWAP6"
    },
    "1390": {
      "op": "DUP7"
    },
    "1391": {
      "op": "AND"
    },
    "1392": {
      "op": "DUP2"
    },
    "1393": {
      "op": "MSTORE"
    },
    "1394": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1396": {
      "op": "DUP2"
    },
    "1397": {
      "op": "ADD"
    },
    "1398": {
      "op": "SWAP5"
    },
    "1399": {
      "op": "SWAP1"
    },
    "1400": {
      "op": "SWAP5"
    },
    "1401": {
      "op": "MSTORE"
    },
    "1402": {
      "op": "SWAP2"
    },
    "1403": {
      "op": "DUP5"
    },
    "1404": {
      "op": "AND"
    },
    "1405": {
      "op": "SWAP2"
    },
    "1406": {
      "op": "DUP4"
    },
    "1407": {
      "op": "ADD"
    },
    "1408": {
      "op": "SWAP2"
    },
    "1409": {
      "op": "SWAP1"
    },
    "1410": {
      "op": "SWAP2"
    },
    "1411": {
      "op": "MSTORE"
    },
    "1412": {
      "op": "SWAP1"
    },
    "1413": {
      "op": "SWAP2"
    },
    "1414": {
      "op": "AND"
    },
    "1415": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1417": {
      "op": "DUP3"
    },
    "1418": {
      "op": "ADD"
    },
    "1419": {
      "op": "MSTORE"
    },
    "1420": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1422": {
      "op": "ADD"
    },
    "1423": {
      "offset": [
        1005,
        1049
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x28B"
    },
    "1426": {
      "op": "JUMP"
    },
    "1427": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3664,
        4490
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1428": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3664,
        4490
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x4A6"
    },
    "1431": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3664,
        4490
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x5A1"
    },
    "1434": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3664,
        4490
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "1435": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3664,
        4490
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "1437": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3664,
        4490
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x26A9"
    },
    "1440": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        3664,
        4490
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1441": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3664,
        4490
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1442": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3664,
        4490
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x18A9"
    },
    "1445": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        3664,
        4490
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1446": {
      "offset": [
        1341,
        1408
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1447": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x5B9"
    },
    "1450": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x5B4"
    },
    "1453": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "CALLDATASIZE",
      "path": "47"
    },
    "1454": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x4"
    },
    "1456": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x26EB"
    },
    "1459": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        1341,
        1408
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1460": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1461": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x19CF"
    },
    "1464": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        1341,
        1408
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1465": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1466": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "1468": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "MLOAD",
      "path": "47"
    },
    "1469": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x28B"
    },
    "1472": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "SWAP4",
      "path": "47"
    },
    "1473": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "1474": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "1475": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "1476": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x271B"
    },
    "1479": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        1341,
        1408
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1480": {
      "offset": [
        700,
        722
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1481": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        700,
        722
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x23"
    },
    "1483": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        700,
        722
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "1484": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        700,
        722
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2A7"
    },
    "1487": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        700,
        722
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "1488": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1490": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1492": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1494": {
      "op": "SHL"
    },
    "1495": {
      "op": "SUB"
    },
    "1496": {
      "offset": [
        700,
        722
      ],
      "op": "AND",
      "path": "47"
    },
    "1497": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        700,
        722
      ],
      "op": "DUP2",
      "path": "47"
    },
    "1498": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        700,
        722
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1499": {
      "offset": [
        924,
        957
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1500": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x5EE"
    },
    "1503": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x5E9"
    },
    "1506": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "CALLDATASIZE",
      "path": "47"
    },
    "1507": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x4"
    },
    "1509": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1E87"
    },
    "1512": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        924,
        957
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1513": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1514": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1A8C"
    },
    "1517": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        924,
        957
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1518": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1519": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "1521": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "MLOAD",
      "path": "47"
    },
    "1522": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x28B"
    },
    "1525": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "SWAP10",
      "path": "47"
    },
    "1526": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "SWAP9",
      "path": "47"
    },
    "1527": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "SWAP8",
      "path": "47"
    },
    "1528": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "SWAP7",
      "path": "47"
    },
    "1529": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "SWAP6",
      "path": "47"
    },
    "1530": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "SWAP5",
      "path": "47"
    },
    "1531": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "SWAP4",
      "path": "47"
    },
    "1532": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "1533": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "1534": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "1535": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2747"
    },
    "1538": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        924,
        957
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1539": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8707,
        9663
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1540": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8707,
        9663
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x281"
    },
    "1543": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8707,
        9663
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x611"
    },
    "1546": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8707,
        9663
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "1547": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8707,
        9663
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "1549": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8707,
        9663
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x27AE"
    },
    "1552": {
      "fn": "CLHouse.PropTxERC20",
      "jump": "i",
      "offset": [
        8707,
        9663
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1553": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8707,
        9663
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1554": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8707,
        9663
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1B85"
    },
    "1557": {
      "fn": "CLHouse.PropTxERC20",
      "jump": "i",
      "offset": [
        8707,
        9663
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1558": {
      "offset": [
        491,
        517
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1559": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        491,
        517
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x281"
    },
    "1562": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        491,
        517
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x3"
    },
    "1564": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        491,
        517
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "1565": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        491,
        517
      ],
      "op": "DUP2",
      "path": "47"
    },
    "1566": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        491,
        517
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1567": {
      "offset": [
        603,
        636
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1568": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        603,
        636
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x281"
    },
    "1571": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        603,
        636
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x6"
    },
    "1573": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        603,
        636
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "1574": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        603,
        636
      ],
      "op": "DUP2",
      "path": "47"
    },
    "1575": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        603,
        636
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1576": {
      "offset": [
        380,
        404
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1577": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        380,
        404
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "1579": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        380,
        404
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "1580": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        380,
        404
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x334"
    },
    "1583": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        380,
        404
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "1584": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        380,
        404
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0xFF"
    },
    "1586": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        380,
        404
      ],
      "op": "AND",
      "path": "47"
    },
    "1587": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        380,
        404
      ],
      "op": "DUP2",
      "path": "47"
    },
    "1588": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        380,
        404
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1589": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13843,
        14743
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1590": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14031,
        14038
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "1592": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14055,
        14076
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1593": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14089
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xC1"
    },
    "1595": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14089
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "1597": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14089
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1598": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14089
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "1599": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14089
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1600": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14089
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x100"
    },
    "1603": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14089
      ],
      "op": "EXP",
      "path": "50"
    },
    "1604": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14089
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1605": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14089
      ],
      "op": "DIV",
      "path": "50"
    },
    "1606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1608": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1610": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1612": {
      "op": "SHL"
    },
    "1613": {
      "op": "SUB"
    },
    "1614": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14089
      ],
      "op": "AND",
      "path": "50"
    },
    "1615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1619": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1621": {
      "op": "SHL"
    },
    "1622": {
      "op": "SUB"
    },
    "1623": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14103
      ],
      "op": "AND",
      "path": "50"
    },
    "1624": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14103
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xA327AB69"
    },
    "1629": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1631": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1632": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1633": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xFFFFFFFF"
    },
    "1638": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "AND",
      "path": "50"
    },
    "1639": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xE0"
    },
    "1641": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "SHL",
      "path": "50"
    },
    "1642": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1643": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1644": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "1646": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "ADD",
      "path": "50"
    },
    "1647": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "1649": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1651": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1652": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1653": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "DUP4",
      "path": "50"
    },
    "1654": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "SUB",
      "path": "50"
    },
    "1655": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1656": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "DUP7",
      "path": "50"
    },
    "1657": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "GAS",
      "path": "50"
    },
    "1658": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "STATICCALL",
      "path": "50"
    },
    "1659": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "1660": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1661": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "1662": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x68B"
    },
    "1665": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "1666": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "1667": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "1669": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1670": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "1671": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "1672": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "1674": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "REVERT",
      "path": "50"
    },
    "1675": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1676": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "POP",
      "path": "50"
    },
    "1677": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "POP",
      "path": "50"
    },
    "1678": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "POP",
      "path": "50"
    },
    "1679": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "POP",
      "path": "50"
    },
    "1680": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1682": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1683": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "1684": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "1686": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "NOT",
      "path": "50"
    },
    "1687": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "1689": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "DUP3",
      "path": "50"
    },
    "1690": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "ADD",
      "path": "50"
    },
    "1691": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "AND",
      "path": "50"
    },
    "1692": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "DUP3",
      "path": "50"
    },
    "1693": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "ADD",
      "path": "50"
    },
    "1694": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1695": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1697": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1698": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "POP",
      "path": "50"
    },
    "1699": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1700": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "ADD",
      "path": "50"
    },
    "1701": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1702": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x6AF"
    },
    "1705": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1706": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1707": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2803"
    },
    "1710": {
      "fn": "CLHouse.PropSellERC20",
      "jump": "i",
      "offset": [
        14079,
        14105
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1711": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14079,
        14105
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1712": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14055,
        14105
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1713": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14055,
        14105
      ],
      "op": "POP",
      "path": "50"
    },
    "1714": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14174,
        14192
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "1716": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14198,
        14211
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1721": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1723": {
      "op": "SHL"
    },
    "1724": {
      "op": "SUB"
    },
    "1725": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14198,
        14224
      ],
      "op": "AND",
      "path": "50"
    },
    "1726": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14345,
        14357
      ],
      "op": "DUP8",
      "path": "50"
    },
    "1727": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14375,
        14388
      ],
      "op": "DUP8",
      "path": "50"
    },
    "1728": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14406,
        14418
      ],
      "op": "DUP8",
      "path": "50"
    },
    "1729": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14436,
        14446
      ],
      "op": "DUP8",
      "path": "50"
    },
    "1730": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14238,
        14460
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1732": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14238,
        14460
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1733": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14238,
        14460
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x24"
    },
    "1735": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14238,
        14460
      ],
      "op": "ADD",
      "path": "50"
    },
    "1736": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14238,
        14460
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x6D4"
    },
    "1739": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14238,
        14460
      ],
      "op": "SWAP5",
      "path": "50"
    },
    "1740": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14238,
        14460
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "1741": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14238,
        14460
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "1742": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14238,
        14460
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1743": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14238,
        14460
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1744": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14238,
        14460
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2820"
    },
    "1747": {
      "fn": "CLHouse.PropSellERC20",
      "jump": "i",
      "offset": [
        14238,
        14460
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1748": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14238,
        14460
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1749": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14238,
        14460
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1751": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14238,
        14460
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1752": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14238,
        14460
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1753": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1755": {
      "op": "NOT"
    },
    "1756": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14238,
        14460
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1757": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14238,
        14460
      ],
      "op": "DUP5",
      "path": "50"
    },
    "1758": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14238,
        14460
      ],
      "op": "SUB",
      "path": "50"
    },
    "1759": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14238,
        14460
      ],
      "op": "ADD",
      "path": "50"
    },
    "1760": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14238,
        14460
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1761": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14238,
        14460
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1762": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14238,
        14460
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1763": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14238,
        14460
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1764": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14238,
        14460
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1765": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14238,
        14460
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "1767": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14238,
        14460
      ],
      "op": "DUP3",
      "path": "50"
    },
    "1768": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14238,
        14460
      ],
      "op": "ADD",
      "path": "50"
    },
    "1769": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14238,
        14460
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1770": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14238,
        14460
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1771": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1773": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1775": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1777": {
      "op": "SHL"
    },
    "1778": {
      "op": "SUB"
    },
    "1779": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14238,
        14460
      ],
      "op": "AND",
      "path": "50"
    },
    "1780": {
      "op": "PUSH4",
      "value": "0x4F17A9B"
    },
    "1785": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1787": {
      "op": "SHL"
    },
    "1788": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14238,
        14460
      ],
      "op": "OR",
      "path": "50"
    },
    "1789": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14238,
        14460
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1790": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14238,
        14460
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1791": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14198,
        14470
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1792": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14198,
        14470
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x709"
    },
    "1795": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14198,
        14470
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1796": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14238,
        14460
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1797": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14198,
        14470
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2858"
    },
    "1800": {
      "fn": "CLHouse.PropSellERC20",
      "jump": "i",
      "offset": [
        14198,
        14470
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1801": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14198,
        14470
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1802": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14198,
        14470
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "1804": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14198,
        14470
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1806": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14198,
        14470
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1807": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14198,
        14470
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1808": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14198,
        14470
      ],
      "op": "DUP4",
      "path": "50"
    },
    "1809": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14198,
        14470
      ],
      "op": "SUB",
      "path": "50"
    },
    "1810": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14198,
        14470
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1811": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14198,
        14470
      ],
      "op": "DUP6",
      "path": "50"
    },
    "1812": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14198,
        14470
      ],
      "op": "GAS",
      "path": "50"
    },
    "1813": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14198,
        14470
      ],
      "op": "DELEGATECALL",
      "path": "50"
    },
    "1814": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14198,
        14470
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1815": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14198,
        14470
      ],
      "op": "POP",
      "path": "50"
    },
    "1816": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14198,
        14470
      ],
      "op": "POP",
      "path": "50"
    },
    "1817": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14198,
        14470
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "1818": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14198,
        14470
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1819": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14198,
        14470
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "1821": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14198,
        14470
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1822": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14198,
        14470
      ],
      "op": "EQ",
      "path": "50"
    },
    "1823": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14198,
        14470
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x744"
    },
    "1826": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14198,
        14470
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "1827": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14198,
        14470
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1829": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14198,
        14470
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1830": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14198,
        14470
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1831": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14198,
        14470
      ],
      "op": "POP",
      "path": "50"
    },
    "1832": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14198,
        14470
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "1834": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14198,
        14470
      ],
      "op": "NOT",
      "path": "50"
    },
    "1835": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14198,
        14470
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x3F"
    },
    "1837": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14198,
        14470
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "1838": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14198,
        14470
      ],
      "op": "ADD",
      "path": "50"
    },
    "1839": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14198,
        14470
      ],
      "op": "AND",
      "path": "50"
    },
    "1840": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14198,
        14470
      ],
      "op": "DUP3",
      "path": "50"
    },
    "1841": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14198,
        14470
      ],
      "op": "ADD",
      "path": "50"
    },
    "1842": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14198,
        14470
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1844": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14198,
        14470
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1845": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14198,
        14470
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "1846": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14198,
        14470
      ],
      "op": "DUP3",
      "path": "50"
    },
    "1847": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14198,
        14470
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1848": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14198,
        14470
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "1849": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14198,
        14470
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "1851": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14198,
        14470
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "1853": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14198,
        14470
      ],
      "op": "DUP5",
      "path": "50"
    },
    "1854": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14198,
        14470
      ],
      "op": "ADD",
      "path": "50"
    },
    "1855": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14198,
        14470
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "1856": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14198,
        14470
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x749"
    },
    "1859": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14198,
        14470
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1860": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14198,
        14470
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1861": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14198,
        14470
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x60"
    },
    "1863": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14198,
        14470
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1864": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14198,
        14470
      ],
      "op": "POP",
      "path": "50"
    },
    "1865": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14198,
        14470
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1866": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14198,
        14470
      ],
      "op": "POP",
      "path": "50"
    },
    "1867": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14173,
        14470
      ],
      "op": "POP",
      "path": "50"
    },
    "1868": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14173,
        14470
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1869": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14173,
        14470
      ],
      "op": "POP",
      "path": "50"
    },
    "1870": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14521,
        14525
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1872": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14515,
        14526
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1873": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14551,
        14567
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "1874": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14603,
        14607
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1875": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14600,
        14601
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "1877": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14595,
        14598
      ],
      "op": "DUP4",
      "path": "50"
    },
    "1878": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14580,
        14608
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "1879": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14632,
        14645
      ],
      "op": "DUP3",
      "path": "50"
    },
    "1880": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14621,
        14697
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x75F"
    },
    "1883": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14621,
        14697
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "1884": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14678,
        14682
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1885": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14673,
        14676
      ],
      "op": "DUP3",
      "path": "50"
    },
    "1886": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14666,
        14683
      ],
      "op": "REVERT",
      "path": "50"
    },
    "1887": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14621,
        14697
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1888": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14722,
        14726
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1889": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14717,
        14720
      ],
      "op": "DUP3",
      "path": "50"
    },
    "1890": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14710,
        14727
      ],
      "op": "RETURN",
      "path": "50"
    },
    "1891": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12871,
        13837
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1892": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13088,
        13095
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "1894": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13112,
        13133
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1895": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13146
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xC1"
    },
    "1897": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13146
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "1899": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13146
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1900": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13146
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "1901": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13146
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1902": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13146
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x100"
    },
    "1905": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13146
      ],
      "op": "EXP",
      "path": "50"
    },
    "1906": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13146
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1907": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13146
      ],
      "op": "DIV",
      "path": "50"
    },
    "1908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1910": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1912": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1914": {
      "op": "SHL"
    },
    "1915": {
      "op": "SUB"
    },
    "1916": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13146
      ],
      "op": "AND",
      "path": "50"
    },
    "1917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1919": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1921": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1923": {
      "op": "SHL"
    },
    "1924": {
      "op": "SUB"
    },
    "1925": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13160
      ],
      "op": "AND",
      "path": "50"
    },
    "1926": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13160
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xA327AB69"
    },
    "1931": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1933": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1934": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1935": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xFFFFFFFF"
    },
    "1940": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "AND",
      "path": "50"
    },
    "1941": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xE0"
    },
    "1943": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "SHL",
      "path": "50"
    },
    "1944": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1945": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1946": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "1948": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "ADD",
      "path": "50"
    },
    "1949": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "1951": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1953": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1954": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1955": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "DUP4",
      "path": "50"
    },
    "1956": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "SUB",
      "path": "50"
    },
    "1957": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1958": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "DUP7",
      "path": "50"
    },
    "1959": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "GAS",
      "path": "50"
    },
    "1960": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "STATICCALL",
      "path": "50"
    },
    "1961": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "1962": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1963": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "1964": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x7B9"
    },
    "1967": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "1968": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "1969": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "1971": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1972": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "1973": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "1974": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "1976": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "REVERT",
      "path": "50"
    },
    "1977": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1978": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "POP",
      "path": "50"
    },
    "1979": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "POP",
      "path": "50"
    },
    "1980": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "POP",
      "path": "50"
    },
    "1981": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "POP",
      "path": "50"
    },
    "1982": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1984": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1985": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "1986": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "1988": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "NOT",
      "path": "50"
    },
    "1989": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "1991": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "DUP3",
      "path": "50"
    },
    "1992": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "ADD",
      "path": "50"
    },
    "1993": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "AND",
      "path": "50"
    },
    "1994": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "DUP3",
      "path": "50"
    },
    "1995": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "ADD",
      "path": "50"
    },
    "1996": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1997": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1999": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2000": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "POP",
      "path": "50"
    },
    "2001": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2002": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "ADD",
      "path": "50"
    },
    "2003": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2004": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x7DD"
    },
    "2007": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2008": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2009": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2803"
    },
    "2012": {
      "fn": "CLHouse.PropSwapERC20",
      "jump": "i",
      "offset": [
        13136,
        13162
      ],
      "op": "JUMP",
      "path": "50"
    },
    "2013": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13136,
        13162
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2014": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13112,
        13162
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2015": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13112,
        13162
      ],
      "op": "POP",
      "path": "50"
    },
    "2016": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13231,
        13249
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2018": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13255,
        13268
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2019": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2021": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2023": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2025": {
      "op": "SHL"
    },
    "2026": {
      "op": "SUB"
    },
    "2027": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13255,
        13281
      ],
      "op": "AND",
      "path": "50"
    },
    "2028": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13410,
        13422
      ],
      "op": "DUP9",
      "path": "50"
    },
    "2029": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13440,
        13451
      ],
      "op": "DUP9",
      "path": "50"
    },
    "2030": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13469,
        13482
      ],
      "op": "DUP9",
      "path": "50"
    },
    "2031": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13500,
        13512
      ],
      "op": "DUP9",
      "path": "50"
    },
    "2032": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13530,
        13540
      ],
      "op": "DUP9",
      "path": "50"
    },
    "2033": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13295,
        13554
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "2035": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13295,
        13554
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2036": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13295,
        13554
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x24"
    },
    "2038": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13295,
        13554
      ],
      "op": "ADD",
      "path": "50"
    },
    "2039": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13295,
        13554
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x804"
    },
    "2042": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13295,
        13554
      ],
      "op": "SWAP6",
      "path": "50"
    },
    "2043": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13295,
        13554
      ],
      "op": "SWAP5",
      "path": "50"
    },
    "2044": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13295,
        13554
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "2045": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13295,
        13554
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "2046": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13295,
        13554
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2047": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13295,
        13554
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2048": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13295,
        13554
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2874"
    },
    "2051": {
      "fn": "CLHouse.PropSwapERC20",
      "jump": "i",
      "offset": [
        13295,
        13554
      ],
      "op": "JUMP",
      "path": "50"
    },
    "2052": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13295,
        13554
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2053": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13295,
        13554
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "2055": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13295,
        13554
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2056": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13295,
        13554
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2057": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2059": {
      "op": "NOT"
    },
    "2060": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13295,
        13554
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2061": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13295,
        13554
      ],
      "op": "DUP5",
      "path": "50"
    },
    "2062": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13295,
        13554
      ],
      "op": "SUB",
      "path": "50"
    },
    "2063": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13295,
        13554
      ],
      "op": "ADD",
      "path": "50"
    },
    "2064": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13295,
        13554
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2065": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13295,
        13554
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2066": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13295,
        13554
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2067": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13295,
        13554
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2068": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13295,
        13554
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2069": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13295,
        13554
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "2071": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13295,
        13554
      ],
      "op": "DUP3",
      "path": "50"
    },
    "2072": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13295,
        13554
      ],
      "op": "ADD",
      "path": "50"
    },
    "2073": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13295,
        13554
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2074": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13295,
        13554
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2075": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2077": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2079": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2081": {
      "op": "SHL"
    },
    "2082": {
      "op": "SUB"
    },
    "2083": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13295,
        13554
      ],
      "op": "AND",
      "path": "50"
    },
    "2084": {
      "op": "PUSH4",
      "value": "0x152DE3B9"
    },
    "2089": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2091": {
      "op": "SHL"
    },
    "2092": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13295,
        13554
      ],
      "op": "OR",
      "path": "50"
    },
    "2093": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13295,
        13554
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2094": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13295,
        13554
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2095": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13255,
        13564
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2096": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13255,
        13564
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x709"
    },
    "2099": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13255,
        13564
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2100": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13295,
        13554
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2101": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13255,
        13564
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2858"
    },
    "2104": {
      "fn": "CLHouse.PropSwapERC20",
      "jump": "i",
      "offset": [
        13255,
        13564
      ],
      "op": "JUMP",
      "path": "50"
    },
    "2105": {
      "offset": [
        963,
        999
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "2106": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x84"
    },
    "2108": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "DUP2",
      "path": "47"
    },
    "2109": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "DUP2",
      "path": "47"
    },
    "2110": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "2111": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "DUP2",
      "path": "47"
    },
    "2112": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "LT",
      "path": "47"
    },
    "2113": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x849"
    },
    "2116": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "2117": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "2119": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2120": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "REVERT",
      "path": "47"
    },
    "2121": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "2122": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "2124": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "2125": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "DUP3",
      "path": "47"
    },
    "2126": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "2127": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "2129": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2130": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "2131": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "KECCAK256",
      "path": "47"
    },
    "2132": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x3"
    },
    "2134": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2135": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "2136": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "MUL",
      "path": "47"
    },
    "2137": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "ADD",
      "path": "47"
    },
    "2138": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2139": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "2140": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1"
    },
    "2142": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "DUP3",
      "path": "47"
    },
    "2143": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "ADD",
      "path": "47"
    },
    "2144": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2145": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "2146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2150": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2152": {
      "op": "SHL"
    },
    "2153": {
      "op": "SUB"
    },
    "2154": {
      "offset": [
        963,
        999
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2155": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "2156": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "AND",
      "path": "47"
    },
    "2157": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "SWAP4",
      "path": "47"
    },
    "2158": {
      "op": "POP"
    },
    "2159": {
      "offset": [
        963,
        999
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2160": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x878"
    },
    "2163": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2164": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x28B9"
    },
    "2167": {
      "fn": "CLHouse.PropSwapERC20",
      "jump": "i",
      "offset": [
        963,
        999
      ],
      "op": "JUMP",
      "path": "47"
    },
    "2168": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "2169": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2170": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1F"
    },
    "2172": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "ADD",
      "path": "47"
    },
    "2173": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "2175": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2176": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "2177": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "DIV",
      "path": "47"
    },
    "2178": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "MUL",
      "path": "47"
    },
    "2179": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "2181": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "ADD",
      "path": "47"
    },
    "2182": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "2184": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "MLOAD",
      "path": "47"
    },
    "2185": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2186": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "DUP2",
      "path": "47"
    },
    "2187": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "ADD",
      "path": "47"
    },
    "2188": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "2190": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "2191": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2192": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "2193": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "2194": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2195": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "DUP2",
      "path": "47"
    },
    "2196": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "DUP2",
      "path": "47"
    },
    "2197": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "2198": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "2200": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "ADD",
      "path": "47"
    },
    "2201": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "DUP3",
      "path": "47"
    },
    "2202": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2203": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "2204": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x8A4"
    },
    "2207": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2208": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x28B9"
    },
    "2211": {
      "fn": "CLHouse.PropSwapERC20",
      "jump": "i",
      "offset": [
        963,
        999
      ],
      "op": "JUMP",
      "path": "47"
    },
    "2212": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "2213": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2214": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "ISZERO",
      "path": "47"
    },
    "2215": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x8F1"
    },
    "2218": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "2219": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2220": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1F"
    },
    "2222": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "LT",
      "path": "47"
    },
    "2223": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x8C6"
    },
    "2226": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "2227": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x100"
    },
    "2230": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2231": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "DUP4",
      "path": "47"
    },
    "2232": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "2233": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "DIV",
      "path": "47"
    },
    "2234": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "MUL",
      "path": "47"
    },
    "2235": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "DUP4",
      "path": "47"
    },
    "2236": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "2237": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "2238": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "2240": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "ADD",
      "path": "47"
    },
    "2241": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "2242": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x8F1"
    },
    "2245": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "JUMP",
      "path": "47"
    },
    "2246": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "2247": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "DUP3",
      "path": "47"
    },
    "2248": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "ADD",
      "path": "47"
    },
    "2249": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "2250": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2251": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "2253": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "2254": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "2256": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "2258": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "KECCAK256",
      "path": "47"
    },
    "2259": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2260": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "2261": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "DUP2",
      "path": "47"
    },
    "2262": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "2263": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "DUP2",
      "path": "47"
    },
    "2264": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "2265": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2266": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1"
    },
    "2268": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "ADD",
      "path": "47"
    },
    "2269": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2270": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "2272": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "ADD",
      "path": "47"
    },
    "2273": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2274": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "DUP4",
      "path": "47"
    },
    "2275": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "GT",
      "path": "47"
    },
    "2276": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x8D4"
    },
    "2279": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "2280": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "DUP3",
      "path": "47"
    },
    "2281": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2282": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "SUB",
      "path": "47"
    },
    "2283": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1F"
    },
    "2285": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "AND",
      "path": "47"
    },
    "2286": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "DUP3",
      "path": "47"
    },
    "2287": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "ADD",
      "path": "47"
    },
    "2288": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "2289": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "2290": {
      "op": "POP"
    },
    "2291": {
      "op": "POP"
    },
    "2292": {
      "op": "POP"
    },
    "2293": {
      "offset": [
        963,
        999
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x2"
    },
    "2295": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2296": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "SWAP4",
      "path": "47"
    },
    "2297": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "ADD",
      "path": "47"
    },
    "2298": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "2299": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "2300": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "2301": {
      "op": "POP"
    },
    "2302": {
      "op": "POP"
    },
    "2303": {
      "offset": [
        963,
        999
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0xFF"
    },
    "2305": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "AND",
      "path": "47"
    },
    "2306": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        963,
        999
      ],
      "op": "DUP4",
      "path": "47"
    },
    "2307": {
      "fn": "CLHouse.PropSwapERC20",
      "jump": "o",
      "offset": [
        963,
        999
      ],
      "op": "JUMP",
      "path": "47"
    },
    "2308": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14749,
        15645
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2309": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14935,
        14942
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2311": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14959,
        14980
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2312": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        14993
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xC1"
    },
    "2314": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        14993
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2316": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        14993
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2317": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        14993
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "2318": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        14993
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2319": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        14993
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x100"
    },
    "2322": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        14993
      ],
      "op": "EXP",
      "path": "50"
    },
    "2323": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        14993
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2324": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        14993
      ],
      "op": "DIV",
      "path": "50"
    },
    "2325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2329": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2331": {
      "op": "SHL"
    },
    "2332": {
      "op": "SUB"
    },
    "2333": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        14993
      ],
      "op": "AND",
      "path": "50"
    },
    "2334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2338": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2340": {
      "op": "SHL"
    },
    "2341": {
      "op": "SUB"
    },
    "2342": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15007
      ],
      "op": "AND",
      "path": "50"
    },
    "2343": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15007
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xA327AB69"
    },
    "2348": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "2350": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2351": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2352": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xFFFFFFFF"
    },
    "2357": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "AND",
      "path": "50"
    },
    "2358": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xE0"
    },
    "2360": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "SHL",
      "path": "50"
    },
    "2361": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2362": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2363": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "2365": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "ADD",
      "path": "50"
    },
    "2366": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "2368": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "2370": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2371": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2372": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "DUP4",
      "path": "50"
    },
    "2373": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "SUB",
      "path": "50"
    },
    "2374": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2375": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "DUP7",
      "path": "50"
    },
    "2376": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "GAS",
      "path": "50"
    },
    "2377": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "STATICCALL",
      "path": "50"
    },
    "2378": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "2379": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2380": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "2381": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x95A"
    },
    "2384": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "2385": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "2386": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2388": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2389": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "2390": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "2391": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2393": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "REVERT",
      "path": "50"
    },
    "2394": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2395": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "POP",
      "path": "50"
    },
    "2396": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "POP",
      "path": "50"
    },
    "2397": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "POP",
      "path": "50"
    },
    "2398": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "POP",
      "path": "50"
    },
    "2399": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "2401": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2402": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "2403": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "2405": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "NOT",
      "path": "50"
    },
    "2406": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "2408": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "DUP3",
      "path": "50"
    },
    "2409": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "ADD",
      "path": "50"
    },
    "2410": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "AND",
      "path": "50"
    },
    "2411": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "DUP3",
      "path": "50"
    },
    "2412": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "ADD",
      "path": "50"
    },
    "2413": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2414": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "2416": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2417": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "POP",
      "path": "50"
    },
    "2418": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2419": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "ADD",
      "path": "50"
    },
    "2420": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2421": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x97E"
    },
    "2424": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2425": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2426": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2803"
    },
    "2429": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "i",
      "offset": [
        14983,
        15009
      ],
      "op": "JUMP",
      "path": "50"
    },
    "2430": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14983,
        15009
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2431": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14959,
        15009
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2432": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14959,
        15009
      ],
      "op": "POP",
      "path": "50"
    },
    "2433": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15078,
        15096
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2435": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15102,
        15115
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2440": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2442": {
      "op": "SHL"
    },
    "2443": {
      "op": "SUB"
    },
    "2444": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15102,
        15128
      ],
      "op": "AND",
      "path": "50"
    },
    "2445": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15248,
        15259
      ],
      "op": "DUP8",
      "path": "50"
    },
    "2446": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15277,
        15290
      ],
      "op": "DUP8",
      "path": "50"
    },
    "2447": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15308,
        15320
      ],
      "op": "DUP8",
      "path": "50"
    },
    "2448": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15338,
        15348
      ],
      "op": "DUP8",
      "path": "50"
    },
    "2449": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15142,
        15362
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "2451": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15142,
        15362
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2452": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15142,
        15362
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x24"
    },
    "2454": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15142,
        15362
      ],
      "op": "ADD",
      "path": "50"
    },
    "2455": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15142,
        15362
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x9A3"
    },
    "2458": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15142,
        15362
      ],
      "op": "SWAP5",
      "path": "50"
    },
    "2459": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15142,
        15362
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "2460": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15142,
        15362
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "2461": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15142,
        15362
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2462": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15142,
        15362
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2463": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15142,
        15362
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2820"
    },
    "2466": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "i",
      "offset": [
        15142,
        15362
      ],
      "op": "JUMP",
      "path": "50"
    },
    "2467": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15142,
        15362
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2468": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15142,
        15362
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "2470": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15142,
        15362
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2471": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15142,
        15362
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2472": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2474": {
      "op": "NOT"
    },
    "2475": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15142,
        15362
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2476": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15142,
        15362
      ],
      "op": "DUP5",
      "path": "50"
    },
    "2477": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15142,
        15362
      ],
      "op": "SUB",
      "path": "50"
    },
    "2478": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15142,
        15362
      ],
      "op": "ADD",
      "path": "50"
    },
    "2479": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15142,
        15362
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2480": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15142,
        15362
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2481": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15142,
        15362
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2482": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15142,
        15362
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2483": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15142,
        15362
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2484": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15142,
        15362
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "2486": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15142,
        15362
      ],
      "op": "DUP3",
      "path": "50"
    },
    "2487": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15142,
        15362
      ],
      "op": "ADD",
      "path": "50"
    },
    "2488": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15142,
        15362
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2489": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15142,
        15362
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2490": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2492": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2494": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2496": {
      "op": "SHL"
    },
    "2497": {
      "op": "SUB"
    },
    "2498": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15142,
        15362
      ],
      "op": "AND",
      "path": "50"
    },
    "2499": {
      "op": "PUSH4",
      "value": "0x899B86F"
    },
    "2504": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2506": {
      "op": "SHL"
    },
    "2507": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15142,
        15362
      ],
      "op": "OR",
      "path": "50"
    },
    "2508": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15142,
        15362
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2509": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15142,
        15362
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2510": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15102,
        15372
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2511": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15102,
        15372
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x709"
    },
    "2514": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15102,
        15372
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2515": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15142,
        15362
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2516": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15102,
        15372
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2858"
    },
    "2519": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "i",
      "offset": [
        15102,
        15372
      ],
      "op": "JUMP",
      "path": "50"
    },
    "2520": {
      "offset": [
        893,
        918
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "2521": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x82"
    },
    "2523": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "DUP2",
      "path": "47"
    },
    "2524": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "DUP2",
      "path": "47"
    },
    "2525": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "2526": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "DUP2",
      "path": "47"
    },
    "2527": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "LT",
      "path": "47"
    },
    "2528": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x9E8"
    },
    "2531": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "2532": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "2534": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2535": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "REVERT",
      "path": "47"
    },
    "2536": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "2537": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "2539": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "2540": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "DUP3",
      "path": "47"
    },
    "2541": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "2542": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "2544": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2545": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "2546": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "KECCAK256",
      "path": "47"
    },
    "2547": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x4"
    },
    "2549": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2550": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "2551": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "MUL",
      "path": "47"
    },
    "2552": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "ADD",
      "path": "47"
    },
    "2553": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2554": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "2555": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1"
    },
    "2557": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "DUP3",
      "path": "47"
    },
    "2558": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "ADD",
      "path": "47"
    },
    "2559": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2560": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "2561": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2563": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2565": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2567": {
      "op": "SHL"
    },
    "2568": {
      "op": "SUB"
    },
    "2569": {
      "offset": [
        893,
        918
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2570": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "2571": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "AND",
      "path": "47"
    },
    "2572": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "SWAP4",
      "path": "47"
    },
    "2573": {
      "op": "POP"
    },
    "2574": {
      "offset": [
        893,
        918
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2575": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0xA17"
    },
    "2578": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2579": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x28B9"
    },
    "2582": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "i",
      "offset": [
        893,
        918
      ],
      "op": "JUMP",
      "path": "47"
    },
    "2583": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "2584": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2585": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1F"
    },
    "2587": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "ADD",
      "path": "47"
    },
    "2588": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "2590": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2591": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "2592": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "DIV",
      "path": "47"
    },
    "2593": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "MUL",
      "path": "47"
    },
    "2594": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "2596": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "ADD",
      "path": "47"
    },
    "2597": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "2599": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "MLOAD",
      "path": "47"
    },
    "2600": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2601": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "DUP2",
      "path": "47"
    },
    "2602": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "ADD",
      "path": "47"
    },
    "2603": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "2605": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "2606": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2607": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "2608": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "2609": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2610": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "DUP2",
      "path": "47"
    },
    "2611": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "DUP2",
      "path": "47"
    },
    "2612": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "2613": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "2615": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "ADD",
      "path": "47"
    },
    "2616": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "DUP3",
      "path": "47"
    },
    "2617": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2618": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "2619": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0xA43"
    },
    "2622": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2623": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x28B9"
    },
    "2626": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "i",
      "offset": [
        893,
        918
      ],
      "op": "JUMP",
      "path": "47"
    },
    "2627": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "2628": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2629": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "ISZERO",
      "path": "47"
    },
    "2630": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0xA90"
    },
    "2633": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "2634": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2635": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1F"
    },
    "2637": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "LT",
      "path": "47"
    },
    "2638": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0xA65"
    },
    "2641": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "2642": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x100"
    },
    "2645": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2646": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "DUP4",
      "path": "47"
    },
    "2647": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "2648": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "DIV",
      "path": "47"
    },
    "2649": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "MUL",
      "path": "47"
    },
    "2650": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "DUP4",
      "path": "47"
    },
    "2651": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "2652": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "2653": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "2655": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "ADD",
      "path": "47"
    },
    "2656": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "2657": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0xA90"
    },
    "2660": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "JUMP",
      "path": "47"
    },
    "2661": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "2662": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "DUP3",
      "path": "47"
    },
    "2663": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "ADD",
      "path": "47"
    },
    "2664": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "2665": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2666": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "2668": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "2669": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "2671": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "2673": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "KECCAK256",
      "path": "47"
    },
    "2674": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2675": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "2676": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "DUP2",
      "path": "47"
    },
    "2677": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "2678": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "DUP2",
      "path": "47"
    },
    "2679": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "2680": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2681": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1"
    },
    "2683": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "ADD",
      "path": "47"
    },
    "2684": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2685": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "2687": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "ADD",
      "path": "47"
    },
    "2688": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2689": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "DUP4",
      "path": "47"
    },
    "2690": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "GT",
      "path": "47"
    },
    "2691": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0xA73"
    },
    "2694": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "2695": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "DUP3",
      "path": "47"
    },
    "2696": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2697": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "SUB",
      "path": "47"
    },
    "2698": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1F"
    },
    "2700": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "AND",
      "path": "47"
    },
    "2701": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "DUP3",
      "path": "47"
    },
    "2702": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "ADD",
      "path": "47"
    },
    "2703": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "2704": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "2705": {
      "op": "POP"
    },
    "2706": {
      "op": "POP"
    },
    "2707": {
      "op": "POP"
    },
    "2708": {
      "op": "POP"
    },
    "2709": {
      "offset": [
        893,
        918
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x2"
    },
    "2711": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "DUP4",
      "path": "47"
    },
    "2712": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "ADD",
      "path": "47"
    },
    "2713": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "2714": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x3"
    },
    "2716": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2717": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "SWAP4",
      "path": "47"
    },
    "2718": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "ADD",
      "path": "47"
    },
    "2719": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "2720": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "2721": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "2722": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "2723": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0xFF"
    },
    "2725": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2726": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "DUP3",
      "path": "47"
    },
    "2727": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "AND",
      "path": "47"
    },
    "2728": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "2729": {
      "op": "POP"
    },
    "2730": {
      "offset": [
        893,
        918
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x100"
    },
    "2733": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2734": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "2735": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "DIV",
      "path": "47"
    },
    "2736": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "AND",
      "path": "47"
    },
    "2737": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        893,
        918
      ],
      "op": "DUP6",
      "path": "47"
    },
    "2738": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "o",
      "offset": [
        893,
        918
      ],
      "op": "JUMP",
      "path": "47"
    },
    "2739": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17373,
        17488
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2740": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17426,
        17446
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x60"
    },
    "2742": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17466,
        17481
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 2,
      "value": "0x84"
    },
    "2744": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2745": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "2746": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2747": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "2749": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "MUL",
      "path": "50"
    },
    "2750": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "2752": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "ADD",
      "path": "50"
    },
    "2753": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "2755": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2756": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2757": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2758": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "ADD",
      "path": "50"
    },
    "2759": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "2761": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2762": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2763": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "2764": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2765": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2766": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2767": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2768": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2769": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "2771": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "ADD",
      "path": "50"
    },
    "2772": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2774": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2775": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2776": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "DUP3",
      "path": "50"
    },
    "2777": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "DUP3",
      "path": "50"
    },
    "2778": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "LT",
      "path": "50"
    },
    "2779": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "2780": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xBC3"
    },
    "2783": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "2784": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2786": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "DUP5",
      "path": "50"
    },
    "2787": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2788": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2789": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "2791": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2792": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2793": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2794": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "KECCAK256",
      "path": "50"
    },
    "2795": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "2797": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2798": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2799": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x60"
    },
    "2801": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2802": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "ADD",
      "path": "50"
    },
    "2803": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2804": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2805": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2806": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x3"
    },
    "2808": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "DUP6",
      "path": "50"
    },
    "2809": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "MUL",
      "path": "50"
    },
    "2810": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2811": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2812": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "ADD",
      "path": "50"
    },
    "2813": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2814": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "2815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2819": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2821": {
      "op": "SHL"
    },
    "2822": {
      "op": "SUB"
    },
    "2823": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "AND",
      "path": "50"
    },
    "2824": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "DUP3",
      "path": "50"
    },
    "2825": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2826": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1"
    },
    "2828": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2829": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "ADD",
      "path": "50"
    },
    "2830": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2831": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "2832": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "2833": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "2834": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2835": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "2836": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2837": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "DUP5",
      "path": "50"
    },
    "2838": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "ADD",
      "path": "50"
    },
    "2839": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2840": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xB20"
    },
    "2843": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2844": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x28B9"
    },
    "2847": {
      "fn": "CLHouse.GetArrDataPropUser",
      "jump": "i",
      "offset": [
        17459,
        17481
      ],
      "op": "JUMP",
      "path": "50"
    },
    "2848": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2849": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2850": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "2852": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "ADD",
      "path": "50"
    },
    "2853": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "2855": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2856": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2857": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "DIV",
      "path": "50"
    },
    "2858": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "MUL",
      "path": "50"
    },
    "2859": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "2861": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "ADD",
      "path": "50"
    },
    "2862": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "2864": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2865": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2866": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2867": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "ADD",
      "path": "50"
    },
    "2868": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "2870": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2871": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2872": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "2873": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2874": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2875": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2876": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2877": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2878": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "2880": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "ADD",
      "path": "50"
    },
    "2881": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "DUP3",
      "path": "50"
    },
    "2882": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2883": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "2884": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xB4C"
    },
    "2887": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2888": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x28B9"
    },
    "2891": {
      "fn": "CLHouse.GetArrDataPropUser",
      "jump": "i",
      "offset": [
        17459,
        17481
      ],
      "op": "JUMP",
      "path": "50"
    },
    "2892": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2893": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2894": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "2895": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xB99"
    },
    "2898": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "2899": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2900": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "2902": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "LT",
      "path": "50"
    },
    "2903": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xB6E"
    },
    "2906": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "2907": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x100"
    },
    "2910": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2911": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "DUP4",
      "path": "50"
    },
    "2912": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "2913": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "DIV",
      "path": "50"
    },
    "2914": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "MUL",
      "path": "50"
    },
    "2915": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "DUP4",
      "path": "50"
    },
    "2916": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2917": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2918": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "2920": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "ADD",
      "path": "50"
    },
    "2921": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2922": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xB99"
    },
    "2925": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "JUMP",
      "path": "50"
    },
    "2926": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2927": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "DUP3",
      "path": "50"
    },
    "2928": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "ADD",
      "path": "50"
    },
    "2929": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2930": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2931": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2933": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2934": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "2936": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2938": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "KECCAK256",
      "path": "50"
    },
    "2939": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2940": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2941": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2942": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "2943": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2944": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2945": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2946": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1"
    },
    "2948": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "ADD",
      "path": "50"
    },
    "2949": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2950": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "2952": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "ADD",
      "path": "50"
    },
    "2953": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2954": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "DUP4",
      "path": "50"
    },
    "2955": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "GT",
      "path": "50"
    },
    "2956": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xB7C"
    },
    "2959": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "2960": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "DUP3",
      "path": "50"
    },
    "2961": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2962": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "SUB",
      "path": "50"
    },
    "2963": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "2965": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "AND",
      "path": "50"
    },
    "2966": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "DUP3",
      "path": "50"
    },
    "2967": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "ADD",
      "path": "50"
    },
    "2968": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2969": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2970": {
      "op": "POP"
    },
    "2971": {
      "op": "POP"
    },
    "2972": {
      "op": "POP"
    },
    "2973": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2974": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "DUP4",
      "path": "50"
    },
    "2975": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2976": {
      "op": "POP"
    },
    "2977": {
      "op": "POP"
    },
    "2978": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x2"
    },
    "2980": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2981": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2982": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2983": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "ADD",
      "path": "50"
    },
    "2984": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "2985": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xFF"
    },
    "2987": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "AND",
      "path": "50"
    },
    "2988": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "2989": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "2990": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "2992": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2993": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "DUP3",
      "path": "50"
    },
    "2994": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "ADD",
      "path": "50"
    },
    "2995": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2996": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2997": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "DUP3",
      "path": "50"
    },
    "2998": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2999": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1"
    },
    "3001": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "3002": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3003": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "3004": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "ADD",
      "path": "50"
    },
    "3005": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3006": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "ADD",
      "path": "50"
    },
    "3007": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xAD7"
    },
    "3010": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "JUMP",
      "path": "50"
    },
    "3011": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3012": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "POP",
      "path": "50"
    },
    "3013": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "POP",
      "path": "50"
    },
    "3014": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "POP",
      "path": "50"
    },
    "3015": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "POP",
      "path": "50"
    },
    "3016": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3017": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17459,
        17481
      ],
      "op": "POP",
      "path": "50"
    },
    "3018": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17373,
        17488
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3019": {
      "fn": "CLHouse.GetArrDataPropUser",
      "jump": "o",
      "offset": [
        17373,
        17488
      ],
      "op": "JUMP",
      "path": "50"
    },
    "3020": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6226,
        7133
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3021": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6416,
        6430
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3023": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6447,
        6468
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3024": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6481
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xC1"
    },
    "3026": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6481
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3028": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6481
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3029": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6481
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "3030": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6481
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3031": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6481
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x100"
    },
    "3034": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6481
      ],
      "op": "EXP",
      "path": "50"
    },
    "3035": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6481
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3036": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6481
      ],
      "op": "DIV",
      "path": "50"
    },
    "3037": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3039": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3041": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3043": {
      "op": "SHL"
    },
    "3044": {
      "op": "SUB"
    },
    "3045": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6481
      ],
      "op": "AND",
      "path": "50"
    },
    "3046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3050": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3052": {
      "op": "SHL"
    },
    "3053": {
      "op": "SUB"
    },
    "3054": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6495
      ],
      "op": "AND",
      "path": "50"
    },
    "3055": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6495
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xA327AB69"
    },
    "3060": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3062": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3063": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3064": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xFFFFFFFF"
    },
    "3069": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "AND",
      "path": "50"
    },
    "3070": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xE0"
    },
    "3072": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "SHL",
      "path": "50"
    },
    "3073": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3074": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3075": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "3077": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "ADD",
      "path": "50"
    },
    "3078": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "3080": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3082": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3083": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3084": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "DUP4",
      "path": "50"
    },
    "3085": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "SUB",
      "path": "50"
    },
    "3086": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3087": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "DUP7",
      "path": "50"
    },
    "3088": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "GAS",
      "path": "50"
    },
    "3089": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "STATICCALL",
      "path": "50"
    },
    "3090": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "3091": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3092": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "3093": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xC22"
    },
    "3096": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "3097": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "3098": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3100": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3101": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "3102": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "3103": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3105": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "REVERT",
      "path": "50"
    },
    "3106": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3107": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "POP",
      "path": "50"
    },
    "3108": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "POP",
      "path": "50"
    },
    "3109": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "POP",
      "path": "50"
    },
    "3110": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "POP",
      "path": "50"
    },
    "3111": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3113": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3114": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "3115": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "3117": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "NOT",
      "path": "50"
    },
    "3118": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "3120": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3121": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "ADD",
      "path": "50"
    },
    "3122": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "AND",
      "path": "50"
    },
    "3123": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3124": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "ADD",
      "path": "50"
    },
    "3125": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3126": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3128": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3129": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "POP",
      "path": "50"
    },
    "3130": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3131": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "ADD",
      "path": "50"
    },
    "3132": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3133": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xC46"
    },
    "3136": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3137": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3138": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2803"
    },
    "3141": {
      "fn": "CLHouse.PropRemoveUser",
      "jump": "i",
      "offset": [
        6471,
        6497
      ],
      "op": "JUMP",
      "path": "50"
    },
    "3142": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6471,
        6497
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3143": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6447,
        6497
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3144": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6447,
        6497
      ],
      "op": "POP",
      "path": "50"
    },
    "3145": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6566,
        6584
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3147": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6590,
        6603
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3150": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3152": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3154": {
      "op": "SHL"
    },
    "3155": {
      "op": "SUB"
    },
    "3156": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6590,
        6616
      ],
      "op": "AND",
      "path": "50"
    },
    "3157": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6736,
        6747
      ],
      "op": "DUP8",
      "path": "50"
    },
    "3158": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6765,
        6777
      ],
      "op": "DUP8",
      "path": "50"
    },
    "3159": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6795,
        6805
      ],
      "op": "DUP8",
      "path": "50"
    },
    "3160": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6823,
        6833
      ],
      "op": "DUP8",
      "path": "50"
    },
    "3161": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6630,
        6847
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3163": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6630,
        6847
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3164": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6630,
        6847
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x24"
    },
    "3166": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6630,
        6847
      ],
      "op": "ADD",
      "path": "50"
    },
    "3167": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6630,
        6847
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xC6B"
    },
    "3170": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6630,
        6847
      ],
      "op": "SWAP5",
      "path": "50"
    },
    "3171": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6630,
        6847
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "3172": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6630,
        6847
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "3173": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6630,
        6847
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3174": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6630,
        6847
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3175": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6630,
        6847
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x28F4"
    },
    "3178": {
      "fn": "CLHouse.PropRemoveUser",
      "jump": "i",
      "offset": [
        6630,
        6847
      ],
      "op": "JUMP",
      "path": "50"
    },
    "3179": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6630,
        6847
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3180": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6630,
        6847
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3182": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6630,
        6847
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3183": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6630,
        6847
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3184": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3186": {
      "op": "NOT"
    },
    "3187": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6630,
        6847
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3188": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6630,
        6847
      ],
      "op": "DUP5",
      "path": "50"
    },
    "3189": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6630,
        6847
      ],
      "op": "SUB",
      "path": "50"
    },
    "3190": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6630,
        6847
      ],
      "op": "ADD",
      "path": "50"
    },
    "3191": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6630,
        6847
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3192": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6630,
        6847
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3193": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6630,
        6847
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3194": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6630,
        6847
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3195": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6630,
        6847
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3196": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6630,
        6847
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "3198": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6630,
        6847
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3199": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6630,
        6847
      ],
      "op": "ADD",
      "path": "50"
    },
    "3200": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6630,
        6847
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3201": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6630,
        6847
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3204": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3206": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3208": {
      "op": "SHL"
    },
    "3209": {
      "op": "SUB"
    },
    "3210": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6630,
        6847
      ],
      "op": "AND",
      "path": "50"
    },
    "3211": {
      "op": "PUSH4",
      "value": "0xA95FBE1"
    },
    "3216": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "3218": {
      "op": "SHL"
    },
    "3219": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6630,
        6847
      ],
      "op": "OR",
      "path": "50"
    },
    "3220": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6630,
        6847
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3221": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6630,
        6847
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3222": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6590,
        6857
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3223": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6590,
        6857
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xCA0"
    },
    "3226": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6590,
        6857
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3227": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6630,
        6847
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3228": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6590,
        6857
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2858"
    },
    "3231": {
      "fn": "CLHouse.PropRemoveUser",
      "jump": "i",
      "offset": [
        6590,
        6857
      ],
      "op": "JUMP",
      "path": "50"
    },
    "3232": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6590,
        6857
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3233": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6590,
        6857
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3235": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6590,
        6857
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3237": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6590,
        6857
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3238": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6590,
        6857
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3239": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6590,
        6857
      ],
      "op": "DUP4",
      "path": "50"
    },
    "3240": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6590,
        6857
      ],
      "op": "SUB",
      "path": "50"
    },
    "3241": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6590,
        6857
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3242": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6590,
        6857
      ],
      "op": "DUP6",
      "path": "50"
    },
    "3243": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6590,
        6857
      ],
      "op": "GAS",
      "path": "50"
    },
    "3244": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6590,
        6857
      ],
      "op": "DELEGATECALL",
      "path": "50"
    },
    "3245": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6590,
        6857
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3246": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6590,
        6857
      ],
      "op": "POP",
      "path": "50"
    },
    "3247": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6590,
        6857
      ],
      "op": "POP",
      "path": "50"
    },
    "3248": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6590,
        6857
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "3249": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6590,
        6857
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3250": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6590,
        6857
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3252": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6590,
        6857
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3253": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6590,
        6857
      ],
      "op": "EQ",
      "path": "50"
    },
    "3254": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6590,
        6857
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xCDB"
    },
    "3257": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6590,
        6857
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "3258": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6590,
        6857
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3260": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6590,
        6857
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3261": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6590,
        6857
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3262": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6590,
        6857
      ],
      "op": "POP",
      "path": "50"
    },
    "3263": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6590,
        6857
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "3265": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6590,
        6857
      ],
      "op": "NOT",
      "path": "50"
    },
    "3266": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6590,
        6857
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x3F"
    },
    "3268": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6590,
        6857
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "3269": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6590,
        6857
      ],
      "op": "ADD",
      "path": "50"
    },
    "3270": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6590,
        6857
      ],
      "op": "AND",
      "path": "50"
    },
    "3271": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6590,
        6857
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3272": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6590,
        6857
      ],
      "op": "ADD",
      "path": "50"
    },
    "3273": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6590,
        6857
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3275": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6590,
        6857
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3276": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6590,
        6857
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "3277": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6590,
        6857
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3278": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6590,
        6857
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3279": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6590,
        6857
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "3280": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6590,
        6857
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3282": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6590,
        6857
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "3284": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6590,
        6857
      ],
      "op": "DUP5",
      "path": "50"
    },
    "3285": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6590,
        6857
      ],
      "op": "ADD",
      "path": "50"
    },
    "3286": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6590,
        6857
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "3287": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6590,
        6857
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xCE0"
    },
    "3290": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6590,
        6857
      ],
      "op": "JUMP",
      "path": "50"
    },
    "3291": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6590,
        6857
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3292": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6590,
        6857
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x60"
    },
    "3294": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6590,
        6857
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3295": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6590,
        6857
      ],
      "op": "POP",
      "path": "50"
    },
    "3296": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6590,
        6857
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3297": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6590,
        6857
      ],
      "op": "POP",
      "path": "50"
    },
    "3298": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6565,
        6857
      ],
      "op": "POP",
      "path": "50"
    },
    "3299": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6565,
        6857
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3300": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6565,
        6857
      ],
      "op": "POP",
      "path": "50"
    },
    "3301": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6908,
        6912
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3303": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6902,
        6913
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3304": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6938,
        6954
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "3305": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6990,
        6994
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3306": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6987,
        6988
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3308": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6982,
        6985
      ],
      "op": "DUP4",
      "path": "50"
    },
    "3309": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6967,
        6995
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "3310": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        7019,
        7032
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3311": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        7008,
        7084
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xCF6"
    },
    "3314": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        7008,
        7084
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "3315": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        7065,
        7069
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3316": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        7060,
        7063
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3317": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        7053,
        7070
      ],
      "op": "REVERT",
      "path": "50"
    },
    "3318": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        7008,
        7084
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3319": {
      "op": "POP"
    },
    "3320": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        7107,
        7117
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3321": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        7107,
        7117
      ],
      "op": "SWAP8",
      "path": "50"
    },
    "3322": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6226,
        7133
      ],
      "op": "SWAP7",
      "path": "50"
    },
    "3323": {
      "op": "POP"
    },
    "3324": {
      "op": "POP"
    },
    "3325": {
      "op": "POP"
    },
    "3326": {
      "op": "POP"
    },
    "3327": {
      "op": "POP"
    },
    "3328": {
      "op": "POP"
    },
    "3329": {
      "op": "POP"
    },
    "3330": {
      "fn": "CLHouse.PropRemoveUser",
      "jump": "o",
      "offset": [
        6226,
        7133
      ],
      "op": "JUMP",
      "path": "50"
    },
    "3331": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4926,
        5950
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3332": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5170,
        5184
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3334": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5201,
        5222
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3335": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5235
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xC1"
    },
    "3337": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5235
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3339": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5235
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3340": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5235
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "3341": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5235
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3342": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5235
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x100"
    },
    "3345": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5235
      ],
      "op": "EXP",
      "path": "50"
    },
    "3346": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5235
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3347": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5235
      ],
      "op": "DIV",
      "path": "50"
    },
    "3348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3352": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3354": {
      "op": "SHL"
    },
    "3355": {
      "op": "SUB"
    },
    "3356": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5235
      ],
      "op": "AND",
      "path": "50"
    },
    "3357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3361": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3363": {
      "op": "SHL"
    },
    "3364": {
      "op": "SUB"
    },
    "3365": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5249
      ],
      "op": "AND",
      "path": "50"
    },
    "3366": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5249
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xA327AB69"
    },
    "3371": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3373": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3374": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3375": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xFFFFFFFF"
    },
    "3380": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "AND",
      "path": "50"
    },
    "3381": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xE0"
    },
    "3383": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "SHL",
      "path": "50"
    },
    "3384": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3385": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3386": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "3388": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "ADD",
      "path": "50"
    },
    "3389": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "3391": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3393": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3394": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3395": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "DUP4",
      "path": "50"
    },
    "3396": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "SUB",
      "path": "50"
    },
    "3397": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3398": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "DUP7",
      "path": "50"
    },
    "3399": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "GAS",
      "path": "50"
    },
    "3400": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "STATICCALL",
      "path": "50"
    },
    "3401": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "3402": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3403": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "3404": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xD59"
    },
    "3407": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "3408": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "3409": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3411": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3412": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "3413": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "3414": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3416": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "REVERT",
      "path": "50"
    },
    "3417": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3418": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "POP",
      "path": "50"
    },
    "3419": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "POP",
      "path": "50"
    },
    "3420": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "POP",
      "path": "50"
    },
    "3421": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "POP",
      "path": "50"
    },
    "3422": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3424": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3425": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "3426": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "3428": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "NOT",
      "path": "50"
    },
    "3429": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "3431": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3432": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "ADD",
      "path": "50"
    },
    "3433": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "AND",
      "path": "50"
    },
    "3434": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3435": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "ADD",
      "path": "50"
    },
    "3436": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3437": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3439": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3440": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "POP",
      "path": "50"
    },
    "3441": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3442": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "ADD",
      "path": "50"
    },
    "3443": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3444": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xD7D"
    },
    "3447": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3448": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3449": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2803"
    },
    "3452": {
      "fn": "CLHouse.PropInviteUser",
      "jump": "i",
      "offset": [
        5225,
        5251
      ],
      "op": "JUMP",
      "path": "50"
    },
    "3453": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5225,
        5251
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3454": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5201,
        5251
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3455": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5201,
        5251
      ],
      "op": "POP",
      "path": "50"
    },
    "3456": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5320,
        5338
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3458": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5344,
        5357
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3463": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3465": {
      "op": "SHL"
    },
    "3466": {
      "op": "SUB"
    },
    "3467": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5344,
        5370
      ],
      "op": "AND",
      "path": "50"
    },
    "3468": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5502,
        5513
      ],
      "op": "DUP10",
      "path": "50"
    },
    "3469": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5531,
        5536
      ],
      "op": "DUP10",
      "path": "50"
    },
    "3470": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5554,
        5566
      ],
      "op": "DUP10",
      "path": "50"
    },
    "3471": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5584,
        5594
      ],
      "op": "DUP10",
      "path": "50"
    },
    "3472": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5612,
        5622
      ],
      "op": "DUP10",
      "path": "50"
    },
    "3473": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5640,
        5650
      ],
      "op": "DUP10",
      "path": "50"
    },
    "3474": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5384,
        5664
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3476": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5384,
        5664
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3477": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5384,
        5664
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x24"
    },
    "3479": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5384,
        5664
      ],
      "op": "ADD",
      "path": "50"
    },
    "3480": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5384,
        5664
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xDA6"
    },
    "3483": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5384,
        5664
      ],
      "op": "SWAP7",
      "path": "50"
    },
    "3484": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5384,
        5664
      ],
      "op": "SWAP6",
      "path": "50"
    },
    "3485": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5384,
        5664
      ],
      "op": "SWAP5",
      "path": "50"
    },
    "3486": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5384,
        5664
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "3487": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5384,
        5664
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "3488": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5384,
        5664
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3489": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5384,
        5664
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3490": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5384,
        5664
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x293B"
    },
    "3493": {
      "fn": "CLHouse.PropInviteUser",
      "jump": "i",
      "offset": [
        5384,
        5664
      ],
      "op": "JUMP",
      "path": "50"
    },
    "3494": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5384,
        5664
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3495": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5384,
        5664
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3497": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5384,
        5664
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3498": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5384,
        5664
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3499": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3501": {
      "op": "NOT"
    },
    "3502": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5384,
        5664
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3503": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5384,
        5664
      ],
      "op": "DUP5",
      "path": "50"
    },
    "3504": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5384,
        5664
      ],
      "op": "SUB",
      "path": "50"
    },
    "3505": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5384,
        5664
      ],
      "op": "ADD",
      "path": "50"
    },
    "3506": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5384,
        5664
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3507": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5384,
        5664
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3508": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5384,
        5664
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3509": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5384,
        5664
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3510": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5384,
        5664
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3511": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5384,
        5664
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "3513": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5384,
        5664
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3514": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5384,
        5664
      ],
      "op": "ADD",
      "path": "50"
    },
    "3515": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5384,
        5664
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3516": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5384,
        5664
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3521": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3523": {
      "op": "SHL"
    },
    "3524": {
      "op": "SUB"
    },
    "3525": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5384,
        5664
      ],
      "op": "AND",
      "path": "50"
    },
    "3526": {
      "op": "PUSH4",
      "value": "0x31A0AFA7"
    },
    "3531": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3533": {
      "op": "SHL"
    },
    "3534": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5384,
        5664
      ],
      "op": "OR",
      "path": "50"
    },
    "3535": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5384,
        5664
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3536": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5384,
        5664
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3537": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5344,
        5674
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3538": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5344,
        5674
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xDDB"
    },
    "3541": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5344,
        5674
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3542": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5384,
        5664
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3543": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5344,
        5674
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2858"
    },
    "3546": {
      "fn": "CLHouse.PropInviteUser",
      "jump": "i",
      "offset": [
        5344,
        5674
      ],
      "op": "JUMP",
      "path": "50"
    },
    "3547": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5344,
        5674
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3548": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5344,
        5674
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3550": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5344,
        5674
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3552": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5344,
        5674
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3553": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5344,
        5674
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3554": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5344,
        5674
      ],
      "op": "DUP4",
      "path": "50"
    },
    "3555": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5344,
        5674
      ],
      "op": "SUB",
      "path": "50"
    },
    "3556": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5344,
        5674
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3557": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5344,
        5674
      ],
      "op": "DUP6",
      "path": "50"
    },
    "3558": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5344,
        5674
      ],
      "op": "GAS",
      "path": "50"
    },
    "3559": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5344,
        5674
      ],
      "op": "DELEGATECALL",
      "path": "50"
    },
    "3560": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5344,
        5674
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3561": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5344,
        5674
      ],
      "op": "POP",
      "path": "50"
    },
    "3562": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5344,
        5674
      ],
      "op": "POP",
      "path": "50"
    },
    "3563": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5344,
        5674
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "3564": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5344,
        5674
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3565": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5344,
        5674
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3567": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5344,
        5674
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3568": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5344,
        5674
      ],
      "op": "EQ",
      "path": "50"
    },
    "3569": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5344,
        5674
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xE16"
    },
    "3572": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5344,
        5674
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "3573": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5344,
        5674
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3575": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5344,
        5674
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3576": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5344,
        5674
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3577": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5344,
        5674
      ],
      "op": "POP",
      "path": "50"
    },
    "3578": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5344,
        5674
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "3580": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5344,
        5674
      ],
      "op": "NOT",
      "path": "50"
    },
    "3581": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5344,
        5674
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x3F"
    },
    "3583": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5344,
        5674
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "3584": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5344,
        5674
      ],
      "op": "ADD",
      "path": "50"
    },
    "3585": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5344,
        5674
      ],
      "op": "AND",
      "path": "50"
    },
    "3586": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5344,
        5674
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3587": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5344,
        5674
      ],
      "op": "ADD",
      "path": "50"
    },
    "3588": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5344,
        5674
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3590": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5344,
        5674
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3591": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5344,
        5674
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "3592": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5344,
        5674
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3593": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5344,
        5674
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3594": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5344,
        5674
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "3595": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5344,
        5674
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3597": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5344,
        5674
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "3599": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5344,
        5674
      ],
      "op": "DUP5",
      "path": "50"
    },
    "3600": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5344,
        5674
      ],
      "op": "ADD",
      "path": "50"
    },
    "3601": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5344,
        5674
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "3602": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5344,
        5674
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xE1B"
    },
    "3605": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5344,
        5674
      ],
      "op": "JUMP",
      "path": "50"
    },
    "3606": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5344,
        5674
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3607": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5344,
        5674
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x60"
    },
    "3609": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5344,
        5674
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3610": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5344,
        5674
      ],
      "op": "POP",
      "path": "50"
    },
    "3611": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5344,
        5674
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3612": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5344,
        5674
      ],
      "op": "POP",
      "path": "50"
    },
    "3613": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5319,
        5674
      ],
      "op": "POP",
      "path": "50"
    },
    "3614": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5319,
        5674
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3615": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5319,
        5674
      ],
      "op": "POP",
      "path": "50"
    },
    "3616": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5725,
        5729
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3618": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5719,
        5730
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3619": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5755,
        5771
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "3620": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5807,
        5811
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3621": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5804,
        5805
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3623": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5799,
        5802
      ],
      "op": "DUP4",
      "path": "50"
    },
    "3624": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5784,
        5812
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "3625": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5836,
        5849
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3626": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5825,
        5901
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xE31"
    },
    "3629": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5825,
        5901
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "3630": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5882,
        5886
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3631": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5877,
        5880
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3632": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5870,
        5887
      ],
      "op": "REVERT",
      "path": "50"
    },
    "3633": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5825,
        5901
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3634": {
      "op": "POP"
    },
    "3635": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5924,
        5934
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3636": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5924,
        5934
      ],
      "op": "SWAP10",
      "path": "50"
    },
    "3637": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4926,
        5950
      ],
      "op": "SWAP9",
      "path": "50"
    },
    "3638": {
      "op": "POP"
    },
    "3639": {
      "op": "POP"
    },
    "3640": {
      "op": "POP"
    },
    "3641": {
      "op": "POP"
    },
    "3642": {
      "op": "POP"
    },
    "3643": {
      "op": "POP"
    },
    "3644": {
      "op": "POP"
    },
    "3645": {
      "op": "POP"
    },
    "3646": {
      "op": "POP"
    },
    "3647": {
      "fn": "CLHouse.PropInviteUser",
      "jump": "o",
      "offset": [
        4926,
        5950
      ],
      "op": "JUMP",
      "path": "50"
    },
    "3648": {
      "offset": [
        1055,
        1099
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "3649": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1055,
        1099
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x86"
    },
    "3651": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1055,
        1099
      ],
      "op": "DUP2",
      "path": "47"
    },
    "3652": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1055,
        1099
      ],
      "op": "DUP2",
      "path": "47"
    },
    "3653": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1055,
        1099
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "3654": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1055,
        1099
      ],
      "op": "DUP2",
      "path": "47"
    },
    "3655": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1055,
        1099
      ],
      "op": "LT",
      "path": "47"
    },
    "3656": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1055,
        1099
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0xE50"
    },
    "3659": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1055,
        1099
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "3660": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1055,
        1099
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "3662": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1055,
        1099
      ],
      "op": "DUP1",
      "path": "47"
    },
    "3663": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1055,
        1099
      ],
      "op": "REVERT",
      "path": "47"
    },
    "3664": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1055,
        1099
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "3665": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1055,
        1099
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "3667": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1055,
        1099
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "3668": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1055,
        1099
      ],
      "op": "DUP3",
      "path": "47"
    },
    "3669": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1055,
        1099
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "3670": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1055,
        1099
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "3672": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1055,
        1099
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "3673": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1055,
        1099
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "3674": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1055,
        1099
      ],
      "op": "KECCAK256",
      "path": "47"
    },
    "3675": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1055,
        1099
      ],
      "op": "ADD",
      "path": "47"
    },
    "3676": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1055,
        1099
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "3677": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1055,
        1099
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "3678": {
      "op": "POP"
    },
    "3679": {
      "offset": [
        1055,
        1099
      ],
      "op": "DUP2",
      "path": "47"
    },
    "3680": {
      "fn": "CLHouse.PropInviteUser",
      "jump": "o",
      "offset": [
        1055,
        1099
      ],
      "op": "JUMP",
      "path": "47"
    },
    "3681": {
      "offset": [
        759,
        783
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "3682": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x42"
    },
    "3684": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "DUP1",
      "path": "47"
    },
    "3685": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "3686": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0xE6E"
    },
    "3689": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "3690": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x28B9"
    },
    "3693": {
      "fn": "CLHouse.PropInviteUser",
      "jump": "i",
      "offset": [
        759,
        783
      ],
      "op": "JUMP",
      "path": "47"
    },
    "3694": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "3695": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "DUP1",
      "path": "47"
    },
    "3696": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1F"
    },
    "3698": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "ADD",
      "path": "47"
    },
    "3699": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "3701": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "DUP1",
      "path": "47"
    },
    "3702": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "3703": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "DIV",
      "path": "47"
    },
    "3704": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "MUL",
      "path": "47"
    },
    "3705": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "3707": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "ADD",
      "path": "47"
    },
    "3708": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "3710": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "MLOAD",
      "path": "47"
    },
    "3711": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "3712": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "DUP2",
      "path": "47"
    },
    "3713": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "ADD",
      "path": "47"
    },
    "3714": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "3716": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "3717": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "DUP1",
      "path": "47"
    },
    "3718": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "3719": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "3720": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "3721": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "DUP2",
      "path": "47"
    },
    "3722": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "DUP2",
      "path": "47"
    },
    "3723": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "3724": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "3726": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "ADD",
      "path": "47"
    },
    "3727": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "DUP3",
      "path": "47"
    },
    "3728": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "DUP1",
      "path": "47"
    },
    "3729": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "3730": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0xE9A"
    },
    "3733": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "3734": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x28B9"
    },
    "3737": {
      "fn": "CLHouse.PropInviteUser",
      "jump": "i",
      "offset": [
        759,
        783
      ],
      "op": "JUMP",
      "path": "47"
    },
    "3738": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "3739": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "DUP1",
      "path": "47"
    },
    "3740": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "ISZERO",
      "path": "47"
    },
    "3741": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0xEE7"
    },
    "3744": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "3745": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "DUP1",
      "path": "47"
    },
    "3746": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1F"
    },
    "3748": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "LT",
      "path": "47"
    },
    "3749": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0xEBC"
    },
    "3752": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "3753": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x100"
    },
    "3756": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "DUP1",
      "path": "47"
    },
    "3757": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "DUP4",
      "path": "47"
    },
    "3758": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "3759": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "DIV",
      "path": "47"
    },
    "3760": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "MUL",
      "path": "47"
    },
    "3761": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "DUP4",
      "path": "47"
    },
    "3762": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "3763": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "3764": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "3766": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "ADD",
      "path": "47"
    },
    "3767": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "3768": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0xEE7"
    },
    "3771": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "JUMP",
      "path": "47"
    },
    "3772": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "3773": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "DUP3",
      "path": "47"
    },
    "3774": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "ADD",
      "path": "47"
    },
    "3775": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "3776": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "3777": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "3779": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "3780": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "3782": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "3784": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "KECCAK256",
      "path": "47"
    },
    "3785": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "3786": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "3787": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "DUP2",
      "path": "47"
    },
    "3788": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "3789": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "DUP2",
      "path": "47"
    },
    "3790": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "3791": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "3792": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1"
    },
    "3794": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "ADD",
      "path": "47"
    },
    "3795": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "3796": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "3798": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "ADD",
      "path": "47"
    },
    "3799": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "DUP1",
      "path": "47"
    },
    "3800": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "DUP4",
      "path": "47"
    },
    "3801": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "GT",
      "path": "47"
    },
    "3802": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0xECA"
    },
    "3805": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "3806": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "DUP3",
      "path": "47"
    },
    "3807": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "3808": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "SUB",
      "path": "47"
    },
    "3809": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1F"
    },
    "3811": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "AND",
      "path": "47"
    },
    "3812": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "DUP3",
      "path": "47"
    },
    "3813": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "ADD",
      "path": "47"
    },
    "3814": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "3815": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "3816": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "POP",
      "path": "47"
    },
    "3817": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "POP",
      "path": "47"
    },
    "3818": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "POP",
      "path": "47"
    },
    "3819": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "POP",
      "path": "47"
    },
    "3820": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "POP",
      "path": "47"
    },
    "3821": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        759,
        783
      ],
      "op": "DUP2",
      "path": "47"
    },
    "3822": {
      "fn": "CLHouse.PropInviteUser",
      "jump": "o",
      "offset": [
        759,
        783
      ],
      "op": "JUMP",
      "path": "47"
    },
    "3823": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10024,
        10878
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3824": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10188,
        10202
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3826": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10219,
        10240
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3827": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10253
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xC1"
    },
    "3829": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10253
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3831": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10253
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3832": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10253
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "3833": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10253
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3834": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10253
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x100"
    },
    "3837": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10253
      ],
      "op": "EXP",
      "path": "50"
    },
    "3838": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10253
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3839": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10253
      ],
      "op": "DIV",
      "path": "50"
    },
    "3840": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3842": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3844": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3846": {
      "op": "SHL"
    },
    "3847": {
      "op": "SUB"
    },
    "3848": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10253
      ],
      "op": "AND",
      "path": "50"
    },
    "3849": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3853": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3855": {
      "op": "SHL"
    },
    "3856": {
      "op": "SUB"
    },
    "3857": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10267
      ],
      "op": "AND",
      "path": "50"
    },
    "3858": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10267
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xA327AB69"
    },
    "3863": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3865": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3866": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3867": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xFFFFFFFF"
    },
    "3872": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "AND",
      "path": "50"
    },
    "3873": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xE0"
    },
    "3875": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "SHL",
      "path": "50"
    },
    "3876": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3877": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3878": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "3880": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "ADD",
      "path": "50"
    },
    "3881": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "3883": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3885": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3886": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3887": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "DUP4",
      "path": "50"
    },
    "3888": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "SUB",
      "path": "50"
    },
    "3889": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3890": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "DUP7",
      "path": "50"
    },
    "3891": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "GAS",
      "path": "50"
    },
    "3892": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "STATICCALL",
      "path": "50"
    },
    "3893": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "3894": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3895": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "3896": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xF45"
    },
    "3899": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "3900": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "3901": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3903": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3904": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "3905": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "3906": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3908": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "REVERT",
      "path": "50"
    },
    "3909": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3910": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "POP",
      "path": "50"
    },
    "3911": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "POP",
      "path": "50"
    },
    "3912": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "POP",
      "path": "50"
    },
    "3913": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "POP",
      "path": "50"
    },
    "3914": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3916": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3917": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "3918": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "3920": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "NOT",
      "path": "50"
    },
    "3921": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "3923": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3924": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "ADD",
      "path": "50"
    },
    "3925": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "AND",
      "path": "50"
    },
    "3926": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3927": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "ADD",
      "path": "50"
    },
    "3928": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3929": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3931": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3932": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "POP",
      "path": "50"
    },
    "3933": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3934": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "ADD",
      "path": "50"
    },
    "3935": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3936": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xF69"
    },
    "3939": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3940": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3941": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2803"
    },
    "3944": {
      "fn": "CLHouse.PropGovRules",
      "jump": "i",
      "offset": [
        10243,
        10269
      ],
      "op": "JUMP",
      "path": "50"
    },
    "3945": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10243,
        10269
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3946": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10219,
        10269
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3947": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10219,
        10269
      ],
      "op": "POP",
      "path": "50"
    },
    "3948": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10338,
        10356
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3950": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10362,
        10375
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3953": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3955": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3957": {
      "op": "SHL"
    },
    "3958": {
      "op": "SUB"
    },
    "3959": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10362,
        10388
      ],
      "op": "AND",
      "path": "50"
    },
    "3960": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10500,
        10520
      ],
      "op": "DUP7",
      "path": "50"
    },
    "3961": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10538,
        10550
      ],
      "op": "DUP7",
      "path": "50"
    },
    "3962": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10568,
        10578
      ],
      "op": "DUP7",
      "path": "50"
    },
    "3963": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10402,
        10592
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3965": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10402,
        10592
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3966": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10402,
        10592
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x24"
    },
    "3968": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10402,
        10592
      ],
      "op": "ADD",
      "path": "50"
    },
    "3969": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10402,
        10592
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xF8C"
    },
    "3972": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10402,
        10592
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "3973": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10402,
        10592
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "3974": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10402,
        10592
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3975": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10402,
        10592
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3976": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10402,
        10592
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x29A0"
    },
    "3979": {
      "fn": "CLHouse.PropGovRules",
      "jump": "i",
      "offset": [
        10402,
        10592
      ],
      "op": "JUMP",
      "path": "50"
    },
    "3980": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10402,
        10592
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3981": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10402,
        10592
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3983": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10402,
        10592
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3984": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10402,
        10592
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3985": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3987": {
      "op": "NOT"
    },
    "3988": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10402,
        10592
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3989": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10402,
        10592
      ],
      "op": "DUP5",
      "path": "50"
    },
    "3990": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10402,
        10592
      ],
      "op": "SUB",
      "path": "50"
    },
    "3991": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10402,
        10592
      ],
      "op": "ADD",
      "path": "50"
    },
    "3992": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10402,
        10592
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3993": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10402,
        10592
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3994": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10402,
        10592
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3995": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10402,
        10592
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3996": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10402,
        10592
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3997": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10402,
        10592
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "3999": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10402,
        10592
      ],
      "op": "DUP3",
      "path": "50"
    },
    "4000": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10402,
        10592
      ],
      "op": "ADD",
      "path": "50"
    },
    "4001": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10402,
        10592
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4002": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10402,
        10592
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4003": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4005": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4007": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4009": {
      "op": "SHL"
    },
    "4010": {
      "op": "SUB"
    },
    "4011": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10402,
        10592
      ],
      "op": "AND",
      "path": "50"
    },
    "4012": {
      "op": "PUSH4",
      "value": "0x2EF2C7B"
    },
    "4017": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4019": {
      "op": "SHL"
    },
    "4020": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10402,
        10592
      ],
      "op": "OR",
      "path": "50"
    },
    "4021": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10402,
        10592
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4022": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10402,
        10592
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4023": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10362,
        10602
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4024": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10362,
        10602
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xFC1"
    },
    "4027": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10362,
        10602
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "4028": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10402,
        10592
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4029": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10362,
        10602
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2858"
    },
    "4032": {
      "fn": "CLHouse.PropGovRules",
      "jump": "i",
      "offset": [
        10362,
        10602
      ],
      "op": "JUMP",
      "path": "50"
    },
    "4033": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10362,
        10602
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4034": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10362,
        10602
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4036": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10362,
        10602
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4038": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10362,
        10602
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4039": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10362,
        10602
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4040": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10362,
        10602
      ],
      "op": "DUP4",
      "path": "50"
    },
    "4041": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10362,
        10602
      ],
      "op": "SUB",
      "path": "50"
    },
    "4042": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10362,
        10602
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4043": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10362,
        10602
      ],
      "op": "DUP6",
      "path": "50"
    },
    "4044": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10362,
        10602
      ],
      "op": "GAS",
      "path": "50"
    },
    "4045": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10362,
        10602
      ],
      "op": "DELEGATECALL",
      "path": "50"
    },
    "4046": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10362,
        10602
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "4047": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10362,
        10602
      ],
      "op": "POP",
      "path": "50"
    },
    "4048": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10362,
        10602
      ],
      "op": "POP",
      "path": "50"
    },
    "4049": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10362,
        10602
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "4050": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10362,
        10602
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4051": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10362,
        10602
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4053": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10362,
        10602
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4054": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10362,
        10602
      ],
      "op": "EQ",
      "path": "50"
    },
    "4055": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10362,
        10602
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xFFC"
    },
    "4058": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10362,
        10602
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "4059": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10362,
        10602
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4061": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10362,
        10602
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4062": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10362,
        10602
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "4063": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10362,
        10602
      ],
      "op": "POP",
      "path": "50"
    },
    "4064": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10362,
        10602
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "4066": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10362,
        10602
      ],
      "op": "NOT",
      "path": "50"
    },
    "4067": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10362,
        10602
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x3F"
    },
    "4069": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10362,
        10602
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "4070": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10362,
        10602
      ],
      "op": "ADD",
      "path": "50"
    },
    "4071": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10362,
        10602
      ],
      "op": "AND",
      "path": "50"
    },
    "4072": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10362,
        10602
      ],
      "op": "DUP3",
      "path": "50"
    },
    "4073": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10362,
        10602
      ],
      "op": "ADD",
      "path": "50"
    },
    "4074": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10362,
        10602
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4076": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10362,
        10602
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4077": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10362,
        10602
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "4078": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10362,
        10602
      ],
      "op": "DUP3",
      "path": "50"
    },
    "4079": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10362,
        10602
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4080": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10362,
        10602
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "4081": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10362,
        10602
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4083": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10362,
        10602
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "4085": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10362,
        10602
      ],
      "op": "DUP5",
      "path": "50"
    },
    "4086": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10362,
        10602
      ],
      "op": "ADD",
      "path": "50"
    },
    "4087": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10362,
        10602
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "4088": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10362,
        10602
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1001"
    },
    "4091": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10362,
        10602
      ],
      "op": "JUMP",
      "path": "50"
    },
    "4092": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10362,
        10602
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4093": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10362,
        10602
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x60"
    },
    "4095": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10362,
        10602
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "4096": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10362,
        10602
      ],
      "op": "POP",
      "path": "50"
    },
    "4097": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10362,
        10602
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4098": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10362,
        10602
      ],
      "op": "POP",
      "path": "50"
    },
    "4099": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10337,
        10602
      ],
      "op": "POP",
      "path": "50"
    },
    "4100": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10337,
        10602
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4101": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10337,
        10602
      ],
      "op": "POP",
      "path": "50"
    },
    "4102": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10653,
        10657
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4104": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10647,
        10658
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4105": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10683,
        10699
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "4106": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10735,
        10739
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4107": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10732,
        10733
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4109": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10727,
        10730
      ],
      "op": "DUP4",
      "path": "50"
    },
    "4110": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10712,
        10740
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "4111": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10764,
        10777
      ],
      "op": "DUP3",
      "path": "50"
    },
    "4112": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10753,
        10829
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1017"
    },
    "4115": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10753,
        10829
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "4116": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10810,
        10814
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4117": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10805,
        10808
      ],
      "op": "DUP3",
      "path": "50"
    },
    "4118": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10798,
        10815
      ],
      "op": "REVERT",
      "path": "50"
    },
    "4119": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10753,
        10829
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4120": {
      "op": "POP"
    },
    "4121": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10852,
        10862
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4122": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10852,
        10862
      ],
      "op": "SWAP7",
      "path": "50"
    },
    "4123": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10024,
        10878
      ],
      "op": "SWAP6",
      "path": "50"
    },
    "4124": {
      "op": "POP"
    },
    "4125": {
      "op": "POP"
    },
    "4126": {
      "op": "POP"
    },
    "4127": {
      "op": "POP"
    },
    "4128": {
      "op": "POP"
    },
    "4129": {
      "op": "POP"
    },
    "4130": {
      "fn": "CLHouse.PropGovRules",
      "jump": "o",
      "offset": [
        10024,
        10878
      ],
      "op": "JUMP",
      "path": "50"
    },
    "4131": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2617,
        3378
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4132": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2710,
        2721
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4134": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2735,
        2756
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x60"
    },
    "4136": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2781,
        2802
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4138": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2815
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xC1"
    },
    "4140": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2815
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4142": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2815
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4143": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2815
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "4144": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2815
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4145": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2815
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x100"
    },
    "4148": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2815
      ],
      "op": "EXP",
      "path": "50"
    },
    "4149": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2815
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4150": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2815
      ],
      "op": "DIV",
      "path": "50"
    },
    "4151": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4155": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4157": {
      "op": "SHL"
    },
    "4158": {
      "op": "SUB"
    },
    "4159": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2815
      ],
      "op": "AND",
      "path": "50"
    },
    "4160": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4162": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4164": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4166": {
      "op": "SHL"
    },
    "4167": {
      "op": "SUB"
    },
    "4168": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2829
      ],
      "op": "AND",
      "path": "50"
    },
    "4169": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2829
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xA327AB69"
    },
    "4174": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4176": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4177": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4178": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xFFFFFFFF"
    },
    "4183": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "AND",
      "path": "50"
    },
    "4184": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xE0"
    },
    "4186": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "SHL",
      "path": "50"
    },
    "4187": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4188": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4189": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "4191": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "ADD",
      "path": "50"
    },
    "4192": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "4194": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4196": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4197": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4198": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "DUP4",
      "path": "50"
    },
    "4199": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "SUB",
      "path": "50"
    },
    "4200": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4201": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "DUP7",
      "path": "50"
    },
    "4202": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "GAS",
      "path": "50"
    },
    "4203": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "STATICCALL",
      "path": "50"
    },
    "4204": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "4205": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4206": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "4207": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x107C"
    },
    "4210": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "4211": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "4212": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4214": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4215": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "4216": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "4217": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4219": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "REVERT",
      "path": "50"
    },
    "4220": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4221": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "POP",
      "path": "50"
    },
    "4222": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "POP",
      "path": "50"
    },
    "4223": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "POP",
      "path": "50"
    },
    "4224": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "POP",
      "path": "50"
    },
    "4225": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4227": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4228": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "4229": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "4231": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "NOT",
      "path": "50"
    },
    "4232": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "4234": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "DUP3",
      "path": "50"
    },
    "4235": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "ADD",
      "path": "50"
    },
    "4236": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "AND",
      "path": "50"
    },
    "4237": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "DUP3",
      "path": "50"
    },
    "4238": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "ADD",
      "path": "50"
    },
    "4239": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4240": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4242": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4243": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "POP",
      "path": "50"
    },
    "4244": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4245": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "ADD",
      "path": "50"
    },
    "4246": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4247": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x10A0"
    },
    "4250": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "4251": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4252": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2803"
    },
    "4255": {
      "fn": "CLHouse.ExecProp",
      "jump": "i",
      "offset": [
        2805,
        2831
      ],
      "op": "JUMP",
      "path": "50"
    },
    "4256": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2805,
        2831
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4257": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2781,
        2831
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4258": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2781,
        2831
      ],
      "op": "POP",
      "path": "50"
    },
    "4259": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2900,
        2918
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4261": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2924,
        2937
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4266": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4268": {
      "op": "SHL"
    },
    "4269": {
      "op": "SUB"
    },
    "4270": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2924,
        2950
      ],
      "op": "AND",
      "path": "50"
    },
    "4271": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3042,
        3049
      ],
      "op": "DUP6",
      "path": "50"
    },
    "4272": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2964,
        3063
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4274": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2964,
        3063
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4275": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2964,
        3063
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x24"
    },
    "4277": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2964,
        3063
      ],
      "op": "ADD",
      "path": "50"
    },
    "4278": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2964,
        3063
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x10C1"
    },
    "4281": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2964,
        3063
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "4282": {
      "op": "DUP2"
    },
    "4283": {
      "op": "MSTORE"
    },
    "4284": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4286": {
      "op": "ADD"
    },
    "4287": {
      "op": "SWAP1"
    },
    "4288": {
      "op": "JUMP"
    },
    "4289": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2964,
        3063
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4290": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2964,
        3063
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4292": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2964,
        3063
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4293": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2964,
        3063
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4294": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4296": {
      "op": "NOT"
    },
    "4297": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2964,
        3063
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4298": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2964,
        3063
      ],
      "op": "DUP5",
      "path": "50"
    },
    "4299": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2964,
        3063
      ],
      "op": "SUB",
      "path": "50"
    },
    "4300": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2964,
        3063
      ],
      "op": "ADD",
      "path": "50"
    },
    "4301": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2964,
        3063
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4302": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2964,
        3063
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4303": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2964,
        3063
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "4304": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2964,
        3063
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4305": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2964,
        3063
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4306": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2964,
        3063
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "4308": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2964,
        3063
      ],
      "op": "DUP3",
      "path": "50"
    },
    "4309": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2964,
        3063
      ],
      "op": "ADD",
      "path": "50"
    },
    "4310": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2964,
        3063
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4311": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2964,
        3063
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4314": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4316": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4318": {
      "op": "SHL"
    },
    "4319": {
      "op": "SUB"
    },
    "4320": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2964,
        3063
      ],
      "op": "AND",
      "path": "50"
    },
    "4321": {
      "op": "PUSH4",
      "value": "0x5F3D99B3"
    },
    "4326": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4328": {
      "op": "SHL"
    },
    "4329": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2964,
        3063
      ],
      "op": "OR",
      "path": "50"
    },
    "4330": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2964,
        3063
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4331": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2964,
        3063
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4332": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2924,
        3073
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4333": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2924,
        3073
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x10F6"
    },
    "4336": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2924,
        3073
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "4337": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2964,
        3063
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4338": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2924,
        3073
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2858"
    },
    "4341": {
      "fn": "CLHouse.ExecProp",
      "jump": "i",
      "offset": [
        2924,
        3073
      ],
      "op": "JUMP",
      "path": "50"
    },
    "4342": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2924,
        3073
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4343": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2924,
        3073
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4345": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2924,
        3073
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4347": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2924,
        3073
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4348": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2924,
        3073
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4349": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2924,
        3073
      ],
      "op": "DUP4",
      "path": "50"
    },
    "4350": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2924,
        3073
      ],
      "op": "SUB",
      "path": "50"
    },
    "4351": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2924,
        3073
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4352": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2924,
        3073
      ],
      "op": "DUP6",
      "path": "50"
    },
    "4353": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2924,
        3073
      ],
      "op": "GAS",
      "path": "50"
    },
    "4354": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2924,
        3073
      ],
      "op": "DELEGATECALL",
      "path": "50"
    },
    "4355": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2924,
        3073
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "4356": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2924,
        3073
      ],
      "op": "POP",
      "path": "50"
    },
    "4357": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2924,
        3073
      ],
      "op": "POP",
      "path": "50"
    },
    "4358": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2924,
        3073
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "4359": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2924,
        3073
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4360": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2924,
        3073
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4362": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2924,
        3073
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4363": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2924,
        3073
      ],
      "op": "EQ",
      "path": "50"
    },
    "4364": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2924,
        3073
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1131"
    },
    "4367": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2924,
        3073
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "4368": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2924,
        3073
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4370": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2924,
        3073
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4371": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2924,
        3073
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "4372": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2924,
        3073
      ],
      "op": "POP",
      "path": "50"
    },
    "4373": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2924,
        3073
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "4375": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2924,
        3073
      ],
      "op": "NOT",
      "path": "50"
    },
    "4376": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2924,
        3073
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x3F"
    },
    "4378": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2924,
        3073
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "4379": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2924,
        3073
      ],
      "op": "ADD",
      "path": "50"
    },
    "4380": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2924,
        3073
      ],
      "op": "AND",
      "path": "50"
    },
    "4381": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2924,
        3073
      ],
      "op": "DUP3",
      "path": "50"
    },
    "4382": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2924,
        3073
      ],
      "op": "ADD",
      "path": "50"
    },
    "4383": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2924,
        3073
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4385": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2924,
        3073
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4386": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2924,
        3073
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "4387": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2924,
        3073
      ],
      "op": "DUP3",
      "path": "50"
    },
    "4388": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2924,
        3073
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4389": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2924,
        3073
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "4390": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2924,
        3073
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4392": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2924,
        3073
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "4394": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2924,
        3073
      ],
      "op": "DUP5",
      "path": "50"
    },
    "4395": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2924,
        3073
      ],
      "op": "ADD",
      "path": "50"
    },
    "4396": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2924,
        3073
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "4397": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2924,
        3073
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1136"
    },
    "4400": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2924,
        3073
      ],
      "op": "JUMP",
      "path": "50"
    },
    "4401": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2924,
        3073
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4402": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2924,
        3073
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x60"
    },
    "4404": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2924,
        3073
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "4405": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2924,
        3073
      ],
      "op": "POP",
      "path": "50"
    },
    "4406": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2924,
        3073
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4407": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2924,
        3073
      ],
      "op": "POP",
      "path": "50"
    },
    "4408": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2899,
        3073
      ],
      "op": "POP",
      "path": "50"
    },
    "4409": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2899,
        3073
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4410": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2899,
        3073
      ],
      "op": "POP",
      "path": "50"
    },
    "4411": {
      "branch": 9,
      "fn": "CLHouse.ExecProp",
      "offset": [
        3089,
        3102
      ],
      "op": "DUP1",
      "path": "50",
      "statement": 3
    },
    "4412": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3084,
        3316
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x114C"
    },
    "4415": {
      "branch": 9,
      "fn": "CLHouse.ExecProp",
      "offset": [
        3084,
        3316
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "4416": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3163,
        3167
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4418": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3157,
        3168
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4419": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3197,
        3213
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "4420": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3253,
        3257
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4421": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3250,
        3251
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4423": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3245,
        3248
      ],
      "op": "DUP4",
      "path": "50"
    },
    "4424": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3230,
        3258
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "4425": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3287,
        3291
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4426": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3282,
        3285
      ],
      "op": "DUP3",
      "path": "50"
    },
    "4427": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3275,
        3292
      ],
      "op": "REVERT",
      "path": "50"
    },
    "4428": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3084,
        3316
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4429": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3335,
        3339
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 4,
      "value": "0x1"
    },
    "4431": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3326,
        3371
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4433": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3326,
        3371
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4434": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3326,
        3371
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4435": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3326,
        3371
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4437": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3326,
        3371
      ],
      "op": "ADD",
      "path": "50"
    },
    "4438": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3326,
        3371
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4440": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3326,
        3371
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4441": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3326,
        3371
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4442": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3326,
        3371
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x19"
    },
    "4444": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3326,
        3371
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4445": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3326,
        3371
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4446": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3326,
        3371
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "4448": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3326,
        3371
      ],
      "op": "ADD",
      "path": "50"
    },
    "4449": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3326,
        3371
      ],
      "op": "PUSH32",
      "path": "50",
      "value": "0x537563636573732065786563757465642070726F706F73616C00000000000000"
    },
    "4482": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3326,
        3371
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4483": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3326,
        3371
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4484": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3326,
        3371
      ],
      "op": "POP",
      "path": "50"
    },
    "4485": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3326,
        3371
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "4486": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3326,
        3371
      ],
      "op": "POP",
      "path": "50"
    },
    "4487": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3326,
        3371
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "4488": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3326,
        3371
      ],
      "op": "POP",
      "path": "50"
    },
    "4489": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3326,
        3371
      ],
      "op": "POP",
      "path": "50"
    },
    "4490": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3326,
        3371
      ],
      "op": "POP",
      "path": "50"
    },
    "4491": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2617,
        3378
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "4492": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2617,
        3378
      ],
      "op": "POP",
      "path": "50"
    },
    "4493": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2617,
        3378
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "4494": {
      "fn": "CLHouse.ExecProp",
      "jump": "o",
      "offset": [
        2617,
        3378
      ],
      "op": "JUMP",
      "path": "50"
    },
    "4495": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7478,
        8362
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4496": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7653,
        7667
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4498": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7684,
        7705
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4499": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7718
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xC1"
    },
    "4501": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7718
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4503": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7718
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4504": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7718
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "4505": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7718
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4506": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7718
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x100"
    },
    "4509": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7718
      ],
      "op": "EXP",
      "path": "50"
    },
    "4510": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7718
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4511": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7718
      ],
      "op": "DIV",
      "path": "50"
    },
    "4512": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4516": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4518": {
      "op": "SHL"
    },
    "4519": {
      "op": "SUB"
    },
    "4520": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7718
      ],
      "op": "AND",
      "path": "50"
    },
    "4521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4525": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4527": {
      "op": "SHL"
    },
    "4528": {
      "op": "SUB"
    },
    "4529": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7732
      ],
      "op": "AND",
      "path": "50"
    },
    "4530": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7732
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xA327AB69"
    },
    "4535": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4537": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4538": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4539": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xFFFFFFFF"
    },
    "4544": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "AND",
      "path": "50"
    },
    "4545": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xE0"
    },
    "4547": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "SHL",
      "path": "50"
    },
    "4548": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4549": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4550": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "4552": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "ADD",
      "path": "50"
    },
    "4553": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "4555": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4557": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4558": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4559": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "DUP4",
      "path": "50"
    },
    "4560": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "SUB",
      "path": "50"
    },
    "4561": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4562": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "DUP7",
      "path": "50"
    },
    "4563": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "GAS",
      "path": "50"
    },
    "4564": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "STATICCALL",
      "path": "50"
    },
    "4565": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "4566": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4567": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "4568": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x11E5"
    },
    "4571": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "4572": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "4573": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4575": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4576": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "4577": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "4578": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4580": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "REVERT",
      "path": "50"
    },
    "4581": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4582": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "POP",
      "path": "50"
    },
    "4583": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "POP",
      "path": "50"
    },
    "4584": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "POP",
      "path": "50"
    },
    "4585": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "POP",
      "path": "50"
    },
    "4586": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4588": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4589": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "4590": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "4592": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "NOT",
      "path": "50"
    },
    "4593": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "4595": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "DUP3",
      "path": "50"
    },
    "4596": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "ADD",
      "path": "50"
    },
    "4597": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "AND",
      "path": "50"
    },
    "4598": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "DUP3",
      "path": "50"
    },
    "4599": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "ADD",
      "path": "50"
    },
    "4600": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4601": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4603": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4604": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "POP",
      "path": "50"
    },
    "4605": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4606": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "ADD",
      "path": "50"
    },
    "4607": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4608": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1209"
    },
    "4611": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "4612": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4613": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2803"
    },
    "4616": {
      "fn": "CLHouse.PropTxWei",
      "jump": "i",
      "offset": [
        7708,
        7734
      ],
      "op": "JUMP",
      "path": "50"
    },
    "4617": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7708,
        7734
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4618": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7684,
        7734
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4619": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7684,
        7734
      ],
      "op": "POP",
      "path": "50"
    },
    "4620": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7803,
        7821
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4622": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7827,
        7840
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4623": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4627": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4629": {
      "op": "SHL"
    },
    "4630": {
      "op": "SUB"
    },
    "4631": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7827,
        7853
      ],
      "op": "AND",
      "path": "50"
    },
    "4632": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7970,
        7973
      ],
      "op": "DUP8",
      "path": "50"
    },
    "4633": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7991,
        8004
      ],
      "op": "DUP8",
      "path": "50"
    },
    "4634": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        8022,
        8034
      ],
      "op": "DUP8",
      "path": "50"
    },
    "4635": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        8052,
        8062
      ],
      "op": "DUP8",
      "path": "50"
    },
    "4636": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7867,
        8076
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4638": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7867,
        8076
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4639": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7867,
        8076
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x24"
    },
    "4641": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7867,
        8076
      ],
      "op": "ADD",
      "path": "50"
    },
    "4642": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7867,
        8076
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x122E"
    },
    "4645": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7867,
        8076
      ],
      "op": "SWAP5",
      "path": "50"
    },
    "4646": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7867,
        8076
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "4647": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7867,
        8076
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "4648": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7867,
        8076
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "4649": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7867,
        8076
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4650": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7867,
        8076
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2820"
    },
    "4653": {
      "fn": "CLHouse.PropTxWei",
      "jump": "i",
      "offset": [
        7867,
        8076
      ],
      "op": "JUMP",
      "path": "50"
    },
    "4654": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7867,
        8076
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4655": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7867,
        8076
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4657": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7867,
        8076
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4658": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7867,
        8076
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4659": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4661": {
      "op": "NOT"
    },
    "4662": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7867,
        8076
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4663": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7867,
        8076
      ],
      "op": "DUP5",
      "path": "50"
    },
    "4664": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7867,
        8076
      ],
      "op": "SUB",
      "path": "50"
    },
    "4665": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7867,
        8076
      ],
      "op": "ADD",
      "path": "50"
    },
    "4666": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7867,
        8076
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4667": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7867,
        8076
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4668": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7867,
        8076
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "4669": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7867,
        8076
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4670": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7867,
        8076
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4671": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7867,
        8076
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "4673": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7867,
        8076
      ],
      "op": "DUP3",
      "path": "50"
    },
    "4674": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7867,
        8076
      ],
      "op": "ADD",
      "path": "50"
    },
    "4675": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7867,
        8076
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4676": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7867,
        8076
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4679": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4681": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4683": {
      "op": "SHL"
    },
    "4684": {
      "op": "SUB"
    },
    "4685": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7867,
        8076
      ],
      "op": "AND",
      "path": "50"
    },
    "4686": {
      "op": "PUSH4",
      "value": "0xF8C70A9"
    },
    "4691": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "4693": {
      "op": "SHL"
    },
    "4694": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7867,
        8076
      ],
      "op": "OR",
      "path": "50"
    },
    "4695": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7867,
        8076
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4696": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7867,
        8076
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4697": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7827,
        8086
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4698": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7827,
        8086
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xCA0"
    },
    "4701": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7827,
        8086
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "4702": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7867,
        8076
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4703": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7827,
        8086
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2858"
    },
    "4706": {
      "fn": "CLHouse.PropTxWei",
      "jump": "i",
      "offset": [
        7827,
        8086
      ],
      "op": "JUMP",
      "path": "50"
    },
    "4707": {
      "fn": "CLHouse.Init",
      "offset": [
        1138,
        2262
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4708": {
      "offset": [
        4396,
        4409
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xC5"
    },
    "4710": {
      "fn": "CLHouse.Init",
      "offset": [
        4396,
        4409
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4711": {
      "offset": [
        247,
        248
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x1"
    },
    "4713": {
      "fn": "CLHouse.Init",
      "offset": [
        247,
        248
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "4714": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4716": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "4718": {
      "op": "SHL"
    },
    "4719": {
      "offset": [
        4396,
        4409
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4720": {
      "fn": "CLHouse.Init",
      "offset": [
        4396,
        4409
      ],
      "op": "DIV",
      "path": "18"
    },
    "4721": {
      "fn": "CLHouse.Init",
      "offset": [
        4396,
        4409
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "4723": {
      "branch": 13,
      "fn": "CLHouse.Init",
      "offset": [
        4396,
        4409
      ],
      "op": "AND",
      "path": "18"
    },
    "4724": {
      "offset": [
        4395,
        4409
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4725": {
      "offset": [
        4395,
        4435
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4726": {
      "fn": "CLHouse.Init",
      "offset": [
        4395,
        4435
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4727": {
      "fn": "CLHouse.Init",
      "offset": [
        4395,
        4435
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x128E"
    },
    "4730": {
      "branch": 13,
      "offset": [
        4395,
        4435
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4731": {
      "op": "POP"
    },
    "4732": {
      "offset": [
        4413,
        4425
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xC5"
    },
    "4734": {
      "fn": "CLHouse.Init",
      "offset": [
        4413,
        4425
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4735": {
      "offset": [
        4413,
        4435
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "4737": {
      "fn": "CLHouse.Init",
      "offset": [
        4413,
        4435
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4738": {
      "fn": "CLHouse.Init",
      "offset": [
        4413,
        4435
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4739": {
      "fn": "CLHouse.Init",
      "offset": [
        4413,
        4435
      ],
      "op": "AND",
      "path": "18"
    },
    "4740": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4742": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4744": {
      "op": "SHL"
    },
    "4745": {
      "offset": [
        4413,
        4425
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4746": {
      "fn": "CLHouse.Init",
      "offset": [
        4413,
        4425
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "4747": {
      "fn": "CLHouse.Init",
      "offset": [
        4413,
        4425
      ],
      "op": "DIV",
      "path": "18"
    },
    "4748": {
      "fn": "CLHouse.Init",
      "offset": [
        4413,
        4425
      ],
      "op": "AND",
      "path": "18"
    },
    "4749": {
      "offset": [
        4413,
        4435
      ],
      "op": "LT",
      "path": "18"
    },
    "4750": {
      "offset": [
        4395,
        4435
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4751": {
      "offset": [
        4387,
        4486
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x12F5"
    },
    "4754": {
      "offset": [
        4387,
        4486
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4755": {
      "fn": "CLHouse.Init",
      "offset": [
        4387,
        4486
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4757": {
      "fn": "CLHouse.Init",
      "offset": [
        4387,
        4486
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4758": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4762": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4764": {
      "op": "SHL"
    },
    "4765": {
      "offset": [
        4387,
        4486
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4766": {
      "fn": "CLHouse.Init",
      "offset": [
        4387,
        4486
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4767": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4769": {
      "offset": [
        4387,
        4486
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "4771": {
      "fn": "CLHouse.Init",
      "offset": [
        4387,
        4486
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4772": {
      "fn": "CLHouse.Init",
      "offset": [
        4387,
        4486
      ],
      "op": "ADD",
      "path": "18"
    },
    "4773": {
      "op": "MSTORE"
    },
    "4774": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "4776": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4778": {
      "op": "DUP3"
    },
    "4779": {
      "op": "ADD"
    },
    "4780": {
      "op": "MSTORE"
    },
    "4781": {
      "op": "PUSH32",
      "value": "0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
    },
    "4814": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4816": {
      "op": "DUP3"
    },
    "4817": {
      "op": "ADD"
    },
    "4818": {
      "op": "MSTORE"
    },
    "4819": {
      "op": "PUSH14",
      "value": "0x191E481A5B9A5D1A585B1A5E9959"
    },
    "4834": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "4836": {
      "op": "SHL"
    },
    "4837": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4839": {
      "op": "DUP3"
    },
    "4840": {
      "op": "ADD"
    },
    "4841": {
      "op": "MSTORE"
    },
    "4842": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4844": {
      "op": "ADD"
    },
    "4845": {
      "offset": [
        4387,
        4486
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4847": {
      "fn": "CLHouse.Init",
      "offset": [
        4387,
        4486
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4848": {
      "fn": "CLHouse.Init",
      "offset": [
        4387,
        4486
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4849": {
      "fn": "CLHouse.Init",
      "offset": [
        4387,
        4486
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4850": {
      "fn": "CLHouse.Init",
      "offset": [
        4387,
        4486
      ],
      "op": "SUB",
      "path": "18"
    },
    "4851": {
      "fn": "CLHouse.Init",
      "offset": [
        4387,
        4486
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4852": {
      "fn": "CLHouse.Init",
      "offset": [
        4387,
        4486
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "18"
    },
    "4853": {
      "fn": "CLHouse.Init",
      "offset": [
        4387,
        4486
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4854": {
      "offset": [
        4496,
        4508
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xC5"
    },
    "4856": {
      "offset": [
        4496,
        4518
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4857": {
      "fn": "CLHouse.Init",
      "offset": [
        4496,
        4518
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4860": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "4862": {
      "op": "SHL"
    },
    "4863": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "4866": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4868": {
      "op": "SHL"
    },
    "4869": {
      "op": "NOT"
    },
    "4870": {
      "offset": [
        4528,
        4548
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4871": {
      "fn": "CLHouse.Init",
      "offset": [
        4528,
        4548
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4872": {
      "fn": "CLHouse.Init",
      "offset": [
        4528,
        4548
      ],
      "op": "AND",
      "path": "18"
    },
    "4873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4875": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4877": {
      "op": "SHL"
    },
    "4878": {
      "offset": [
        4496,
        4518
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "4880": {
      "fn": "CLHouse.Init",
      "offset": [
        4496,
        4518
      ],
      "op": "DUP6",
      "path": "18"
    },
    "4881": {
      "fn": "CLHouse.Init",
      "offset": [
        4496,
        4518
      ],
      "op": "AND",
      "path": "18"
    },
    "4882": {
      "fn": "CLHouse.Init",
      "offset": [
        4496,
        4518
      ],
      "op": "MUL",
      "path": "18"
    },
    "4883": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4885": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "4887": {
      "op": "SHL"
    },
    "4888": {
      "op": "NOT"
    },
    "4889": {
      "offset": [
        4528,
        4548
      ],
      "op": "AND",
      "path": "18"
    },
    "4890": {
      "fn": "CLHouse.Init",
      "offset": [
        4528,
        4548
      ],
      "op": "OR",
      "path": "18"
    },
    "4891": {
      "fn": "CLHouse.Init",
      "offset": [
        4528,
        4548
      ],
      "op": "OR",
      "path": "18"
    },
    "4892": {
      "fn": "CLHouse.Init",
      "offset": [
        4528,
        4548
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4893": {
      "fn": "CLHouse.Init",
      "offset": [
        4528,
        4548
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "4894": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4896": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        1579
      ],
      "op": "DUP4",
      "path": "50"
    },
    "4897": {
      "fn": "CLHouse.Init",
      "offset": [
        1590,
        1612
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x3"
    },
    "4899": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        1616
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "4901": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        1616
      ],
      "op": "MUL",
      "path": "50"
    },
    "4902": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        1616
      ],
      "op": "ADD",
      "path": "50"
    },
    "4903": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        1616
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4908": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4910": {
      "op": "SHL"
    },
    "4911": {
      "op": "SUB"
    },
    "4912": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        1629
      ],
      "op": "AND",
      "path": "50"
    },
    "4913": {
      "fn": "CLHouse.Init",
      "offset": [
        1786,
        1792
      ],
      "op": "DUP11",
      "path": "50"
    },
    "4914": {
      "fn": "CLHouse.Init",
      "offset": [
        1811,
        1821
      ],
      "op": "DUP11",
      "path": "50"
    },
    "4915": {
      "fn": "CLHouse.Init",
      "offset": [
        1839,
        1852
      ],
      "op": "DUP11",
      "path": "50"
    },
    "4916": {
      "fn": "CLHouse.Init",
      "offset": [
        1870,
        1880
      ],
      "op": "DUP11",
      "path": "50"
    },
    "4917": {
      "fn": "CLHouse.Init",
      "offset": [
        1898,
        1907
      ],
      "op": "DUP11",
      "path": "50"
    },
    "4918": {
      "fn": "CLHouse.Init",
      "offset": [
        1925,
        1934
      ],
      "op": "DUP11",
      "path": "50"
    },
    "4919": {
      "fn": "CLHouse.Init",
      "offset": [
        1952,
        1956
      ],
      "op": "DUP11",
      "path": "50"
    },
    "4920": {
      "fn": "CLHouse.Init",
      "offset": [
        1974,
        1989
      ],
      "op": "DUP11",
      "path": "50"
    },
    "4921": {
      "fn": "CLHouse.Init",
      "offset": [
        1643,
        2003
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4923": {
      "fn": "CLHouse.Init",
      "offset": [
        1643,
        2003
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4924": {
      "fn": "CLHouse.Init",
      "offset": [
        1643,
        2003
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x24"
    },
    "4926": {
      "fn": "CLHouse.Init",
      "offset": [
        1643,
        2003
      ],
      "op": "ADD",
      "path": "50"
    },
    "4927": {
      "fn": "CLHouse.Init",
      "offset": [
        1643,
        2003
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x134F"
    },
    "4930": {
      "fn": "CLHouse.Init",
      "offset": [
        1643,
        2003
      ],
      "op": "SWAP9",
      "path": "50"
    },
    "4931": {
      "fn": "CLHouse.Init",
      "offset": [
        1643,
        2003
      ],
      "op": "SWAP8",
      "path": "50"
    },
    "4932": {
      "fn": "CLHouse.Init",
      "offset": [
        1643,
        2003
      ],
      "op": "SWAP7",
      "path": "50"
    },
    "4933": {
      "fn": "CLHouse.Init",
      "offset": [
        1643,
        2003
      ],
      "op": "SWAP6",
      "path": "50"
    },
    "4934": {
      "fn": "CLHouse.Init",
      "offset": [
        1643,
        2003
      ],
      "op": "SWAP5",
      "path": "50"
    },
    "4935": {
      "fn": "CLHouse.Init",
      "offset": [
        1643,
        2003
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "4936": {
      "fn": "CLHouse.Init",
      "offset": [
        1643,
        2003
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "4937": {
      "fn": "CLHouse.Init",
      "offset": [
        1643,
        2003
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "4938": {
      "fn": "CLHouse.Init",
      "offset": [
        1643,
        2003
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4939": {
      "fn": "CLHouse.Init",
      "offset": [
        1643,
        2003
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2A39"
    },
    "4942": {
      "fn": "CLHouse.Init",
      "jump": "i",
      "offset": [
        1643,
        2003
      ],
      "op": "JUMP",
      "path": "50"
    },
    "4943": {
      "fn": "CLHouse.Init",
      "offset": [
        1643,
        2003
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4944": {
      "fn": "CLHouse.Init",
      "offset": [
        1643,
        2003
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4946": {
      "fn": "CLHouse.Init",
      "offset": [
        1643,
        2003
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4947": {
      "fn": "CLHouse.Init",
      "offset": [
        1643,
        2003
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4948": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4950": {
      "op": "NOT"
    },
    "4951": {
      "fn": "CLHouse.Init",
      "offset": [
        1643,
        2003
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4952": {
      "fn": "CLHouse.Init",
      "offset": [
        1643,
        2003
      ],
      "op": "DUP5",
      "path": "50"
    },
    "4953": {
      "fn": "CLHouse.Init",
      "offset": [
        1643,
        2003
      ],
      "op": "SUB",
      "path": "50"
    },
    "4954": {
      "fn": "CLHouse.Init",
      "offset": [
        1643,
        2003
      ],
      "op": "ADD",
      "path": "50"
    },
    "4955": {
      "fn": "CLHouse.Init",
      "offset": [
        1643,
        2003
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4956": {
      "fn": "CLHouse.Init",
      "offset": [
        1643,
        2003
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4957": {
      "fn": "CLHouse.Init",
      "offset": [
        1643,
        2003
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "4958": {
      "fn": "CLHouse.Init",
      "offset": [
        1643,
        2003
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4959": {
      "fn": "CLHouse.Init",
      "offset": [
        1643,
        2003
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4960": {
      "fn": "CLHouse.Init",
      "offset": [
        1643,
        2003
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "4962": {
      "fn": "CLHouse.Init",
      "offset": [
        1643,
        2003
      ],
      "op": "DUP3",
      "path": "50"
    },
    "4963": {
      "fn": "CLHouse.Init",
      "offset": [
        1643,
        2003
      ],
      "op": "ADD",
      "path": "50"
    },
    "4964": {
      "fn": "CLHouse.Init",
      "offset": [
        1643,
        2003
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4965": {
      "fn": "CLHouse.Init",
      "offset": [
        1643,
        2003
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4968": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4970": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4972": {
      "op": "SHL"
    },
    "4973": {
      "op": "SUB"
    },
    "4974": {
      "fn": "CLHouse.Init",
      "offset": [
        1643,
        2003
      ],
      "op": "AND",
      "path": "50"
    },
    "4975": {
      "op": "PUSH4",
      "value": "0xEE8FFE1"
    },
    "4980": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4982": {
      "op": "SHL"
    },
    "4983": {
      "fn": "CLHouse.Init",
      "offset": [
        1643,
        2003
      ],
      "op": "OR",
      "path": "50"
    },
    "4984": {
      "fn": "CLHouse.Init",
      "offset": [
        1643,
        2003
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4985": {
      "fn": "CLHouse.Init",
      "offset": [
        1643,
        2003
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4986": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        2013
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4987": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        2013
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1384"
    },
    "4990": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        2013
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "4991": {
      "fn": "CLHouse.Init",
      "offset": [
        1643,
        2003
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4992": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        2013
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2858"
    },
    "4995": {
      "fn": "CLHouse.Init",
      "jump": "i",
      "offset": [
        1575,
        2013
      ],
      "op": "JUMP",
      "path": "50"
    },
    "4996": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        2013
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4997": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        2013
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4999": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        2013
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5001": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        2013
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5002": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        2013
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5003": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        2013
      ],
      "op": "DUP4",
      "path": "50"
    },
    "5004": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        2013
      ],
      "op": "SUB",
      "path": "50"
    },
    "5005": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        2013
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5006": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        2013
      ],
      "op": "DUP6",
      "path": "50"
    },
    "5007": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        2013
      ],
      "op": "GAS",
      "path": "50"
    },
    "5008": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        2013
      ],
      "op": "DELEGATECALL",
      "path": "50"
    },
    "5009": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        2013
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5010": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        2013
      ],
      "op": "POP",
      "path": "50"
    },
    "5011": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        2013
      ],
      "op": "POP",
      "path": "50"
    },
    "5012": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        2013
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "5013": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        2013
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5014": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        2013
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5016": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        2013
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5017": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        2013
      ],
      "op": "EQ",
      "path": "50"
    },
    "5018": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        2013
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x13BF"
    },
    "5021": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        2013
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "5022": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        2013
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5024": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        2013
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5025": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        2013
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5026": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        2013
      ],
      "op": "POP",
      "path": "50"
    },
    "5027": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        2013
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "5029": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        2013
      ],
      "op": "NOT",
      "path": "50"
    },
    "5030": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        2013
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x3F"
    },
    "5032": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        2013
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "5033": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        2013
      ],
      "op": "ADD",
      "path": "50"
    },
    "5034": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        2013
      ],
      "op": "AND",
      "path": "50"
    },
    "5035": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        2013
      ],
      "op": "DUP3",
      "path": "50"
    },
    "5036": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        2013
      ],
      "op": "ADD",
      "path": "50"
    },
    "5037": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        2013
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5039": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        2013
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5040": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        2013
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "5041": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        2013
      ],
      "op": "DUP3",
      "path": "50"
    },
    "5042": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        2013
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5043": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        2013
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "5044": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        2013
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5046": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        2013
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "5048": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        2013
      ],
      "op": "DUP5",
      "path": "50"
    },
    "5049": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        2013
      ],
      "op": "ADD",
      "path": "50"
    },
    "5050": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        2013
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "5051": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        2013
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x13C4"
    },
    "5054": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        2013
      ],
      "op": "JUMP",
      "path": "50"
    },
    "5055": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        2013
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5056": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        2013
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x60"
    },
    "5058": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        2013
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5059": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        2013
      ],
      "op": "POP",
      "path": "50"
    },
    "5060": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        2013
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5061": {
      "fn": "CLHouse.Init",
      "offset": [
        1575,
        2013
      ],
      "op": "POP",
      "path": "50"
    },
    "5062": {
      "fn": "CLHouse.Init",
      "offset": [
        1550,
        2013
      ],
      "op": "POP",
      "path": "50"
    },
    "5063": {
      "fn": "CLHouse.Init",
      "offset": [
        1550,
        2013
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5064": {
      "fn": "CLHouse.Init",
      "offset": [
        1550,
        2013
      ],
      "op": "POP",
      "path": "50"
    },
    "5065": {
      "branch": 10,
      "fn": "CLHouse.Init",
      "offset": [
        2029,
        2042
      ],
      "op": "DUP1",
      "path": "50",
      "statement": 5
    },
    "5066": {
      "fn": "CLHouse.Init",
      "offset": [
        2024,
        2256
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x13DA"
    },
    "5069": {
      "branch": 10,
      "fn": "CLHouse.Init",
      "offset": [
        2024,
        2256
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "5070": {
      "fn": "CLHouse.Init",
      "offset": [
        2103,
        2107
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5072": {
      "fn": "CLHouse.Init",
      "offset": [
        2097,
        2108
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5073": {
      "fn": "CLHouse.Init",
      "offset": [
        2137,
        2153
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "5074": {
      "fn": "CLHouse.Init",
      "offset": [
        2193,
        2197
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5075": {
      "fn": "CLHouse.Init",
      "offset": [
        2190,
        2191
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5077": {
      "fn": "CLHouse.Init",
      "offset": [
        2185,
        2188
      ],
      "op": "DUP4",
      "path": "50"
    },
    "5078": {
      "fn": "CLHouse.Init",
      "offset": [
        2170,
        2198
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "5079": {
      "fn": "CLHouse.Init",
      "offset": [
        2227,
        2231
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5080": {
      "fn": "CLHouse.Init",
      "offset": [
        2222,
        2225
      ],
      "op": "DUP3",
      "path": "50"
    },
    "5081": {
      "fn": "CLHouse.Init",
      "offset": [
        2215,
        2232
      ],
      "op": "REVERT",
      "path": "50"
    },
    "5082": {
      "fn": "CLHouse.Init",
      "offset": [
        2024,
        2256
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5083": {
      "op": "POP"
    },
    "5084": {
      "offset": [
        4569,
        4582
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xC5"
    },
    "5086": {
      "offset": [
        4569,
        4590
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5087": {
      "fn": "CLHouse.Init",
      "offset": [
        4569,
        4590
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "5088": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5090": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "5092": {
      "op": "SHL"
    },
    "5093": {
      "op": "NOT"
    },
    "5094": {
      "offset": [
        4569,
        4590
      ],
      "op": "AND",
      "path": "18"
    },
    "5095": {
      "fn": "CLHouse.Init",
      "offset": [
        4569,
        4590
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5096": {
      "fn": "CLHouse.Init",
      "offset": [
        4569,
        4590
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "5097": {
      "offset": [
        4605,
        4625
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5099": {
      "fn": "CLHouse.Init",
      "offset": [
        4605,
        4625
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5100": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5102": {
      "op": "DUP3"
    },
    "5103": {
      "op": "AND"
    },
    "5104": {
      "op": "DUP2"
    },
    "5105": {
      "op": "MSTORE"
    },
    "5106": {
      "offset": [
        4605,
        4625
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498"
    },
    "5139": {
      "fn": "CLHouse.Init",
      "offset": [
        4605,
        4625
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5140": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5142": {
      "op": "ADD"
    },
    "5143": {
      "offset": [
        4605,
        4625
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5145": {
      "fn": "CLHouse.Init",
      "offset": [
        4605,
        4625
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5146": {
      "fn": "CLHouse.Init",
      "offset": [
        4605,
        4625
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5147": {
      "fn": "CLHouse.Init",
      "offset": [
        4605,
        4625
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5148": {
      "fn": "CLHouse.Init",
      "offset": [
        4605,
        4625
      ],
      "op": "SUB",
      "path": "18"
    },
    "5149": {
      "fn": "CLHouse.Init",
      "offset": [
        4605,
        4625
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5150": {
      "fn": "CLHouse.Init",
      "offset": [
        4605,
        4625
      ],
      "op": "LOG1",
      "path": "18"
    },
    "5151": {
      "fn": "CLHouse.Init",
      "offset": [
        1138,
        2262
      ],
      "op": "POP",
      "path": "50"
    },
    "5152": {
      "fn": "CLHouse.Init",
      "offset": [
        1138,
        2262
      ],
      "op": "POP",
      "path": "50"
    },
    "5153": {
      "fn": "CLHouse.Init",
      "offset": [
        1138,
        2262
      ],
      "op": "POP",
      "path": "50"
    },
    "5154": {
      "fn": "CLHouse.Init",
      "offset": [
        1138,
        2262
      ],
      "op": "POP",
      "path": "50"
    },
    "5155": {
      "fn": "CLHouse.Init",
      "offset": [
        1138,
        2262
      ],
      "op": "POP",
      "path": "50"
    },
    "5156": {
      "fn": "CLHouse.Init",
      "offset": [
        1138,
        2262
      ],
      "op": "POP",
      "path": "50"
    },
    "5157": {
      "fn": "CLHouse.Init",
      "offset": [
        1138,
        2262
      ],
      "op": "POP",
      "path": "50"
    },
    "5158": {
      "fn": "CLHouse.Init",
      "offset": [
        1138,
        2262
      ],
      "op": "POP",
      "path": "50"
    },
    "5159": {
      "fn": "CLHouse.Init",
      "offset": [
        1138,
        2262
      ],
      "op": "POP",
      "path": "50"
    },
    "5160": {
      "fn": "CLHouse.Init",
      "jump": "o",
      "offset": [
        1138,
        2262
      ],
      "op": "JUMP",
      "path": "50"
    },
    "5161": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12134,
        12865
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5162": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12300
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xC1"
    },
    "5164": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12300
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "5165": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5167": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5168": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5169": {
      "op": "PUSH4",
      "value": "0x529382D5"
    },
    "5174": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5176": {
      "op": "SHL"
    },
    "5177": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5178": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5179": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5180": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5181": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12262,
        12287
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5183": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12262,
        12287
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "5184": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5186": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5188": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5190": {
      "op": "SHL"
    },
    "5191": {
      "op": "SUB"
    },
    "5192": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12300
      ],
      "op": "AND",
      "path": "50"
    },
    "5193": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12300
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5194": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12318
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x529382D5"
    },
    "5199": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12318
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5200": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "5202": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5203": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "DUP4",
      "path": "50"
    },
    "5204": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "ADD",
      "path": "50"
    },
    "5205": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "5206": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "5208": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "5209": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5210": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5211": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "DUP3",
      "path": "50"
    },
    "5212": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5213": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "SUB",
      "path": "50"
    },
    "5214": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "ADD",
      "path": "50"
    },
    "5215": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5216": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12300
      ],
      "op": "DUP7",
      "path": "50"
    },
    "5217": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "GAS",
      "path": "50"
    },
    "5218": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "STATICCALL",
      "path": "50"
    },
    "5219": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "5220": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5221": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "5222": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1473"
    },
    "5225": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "5226": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "5227": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5229": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5230": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "5231": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "5232": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5234": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "REVERT",
      "path": "50"
    },
    "5235": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5236": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "POP",
      "path": "50"
    },
    "5237": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "POP",
      "path": "50"
    },
    "5238": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "POP",
      "path": "50"
    },
    "5239": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "POP",
      "path": "50"
    },
    "5240": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5242": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5243": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "5244": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "5246": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "NOT",
      "path": "50"
    },
    "5247": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "5249": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "DUP3",
      "path": "50"
    },
    "5250": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "ADD",
      "path": "50"
    },
    "5251": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "AND",
      "path": "50"
    },
    "5252": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "DUP3",
      "path": "50"
    },
    "5253": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "ADD",
      "path": "50"
    },
    "5254": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5255": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5257": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5258": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "POP",
      "path": "50"
    },
    "5259": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5260": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "ADD",
      "path": "50"
    },
    "5261": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5262": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1497"
    },
    "5265": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5266": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5267": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2803"
    },
    "5270": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "jump": "i",
      "offset": [
        12290,
        12320
      ],
      "op": "JUMP",
      "path": "50"
    },
    "5271": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        12320
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5272": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12262,
        12320
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5273": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12262,
        12320
      ],
      "op": "POP",
      "path": "50"
    },
    "5274": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12389,
        12407
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5276": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12413,
        12430
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5281": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5283": {
      "op": "SHL"
    },
    "5284": {
      "op": "SUB"
    },
    "5285": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12413,
        12443
      ],
      "op": "AND",
      "path": "50"
    },
    "5286": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12553,
        12564
      ],
      "op": "DUP5",
      "path": "50"
    },
    "5287": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12582,
        12592
      ],
      "op": "DUP5",
      "path": "50"
    },
    "5288": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12457,
        12606
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5290": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12457,
        12606
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5291": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12457,
        12606
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x24"
    },
    "5293": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12457,
        12606
      ],
      "op": "ADD",
      "path": "50"
    },
    "5294": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12457,
        12606
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x14B8"
    },
    "5297": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12457,
        12606
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "5298": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12457,
        12606
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5299": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12457,
        12606
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5300": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12457,
        12606
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x21CC"
    },
    "5303": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "jump": "i",
      "offset": [
        12457,
        12606
      ],
      "op": "JUMP",
      "path": "50"
    },
    "5304": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12457,
        12606
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5305": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12457,
        12606
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5307": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12457,
        12606
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5308": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12457,
        12606
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5309": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5311": {
      "op": "NOT"
    },
    "5312": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12457,
        12606
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5313": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12457,
        12606
      ],
      "op": "DUP5",
      "path": "50"
    },
    "5314": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12457,
        12606
      ],
      "op": "SUB",
      "path": "50"
    },
    "5315": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12457,
        12606
      ],
      "op": "ADD",
      "path": "50"
    },
    "5316": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12457,
        12606
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5317": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12457,
        12606
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5318": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12457,
        12606
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5319": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12457,
        12606
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5320": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12457,
        12606
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5321": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12457,
        12606
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "5323": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12457,
        12606
      ],
      "op": "DUP3",
      "path": "50"
    },
    "5324": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12457,
        12606
      ],
      "op": "ADD",
      "path": "50"
    },
    "5325": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12457,
        12606
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5326": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12457,
        12606
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5329": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5331": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5333": {
      "op": "SHL"
    },
    "5334": {
      "op": "SUB"
    },
    "5335": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12457,
        12606
      ],
      "op": "AND",
      "path": "50"
    },
    "5336": {
      "op": "PUSH4",
      "value": "0x1039E45B"
    },
    "5341": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "5343": {
      "op": "SHL"
    },
    "5344": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12457,
        12606
      ],
      "op": "OR",
      "path": "50"
    },
    "5345": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12457,
        12606
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5346": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12457,
        12606
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5347": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12413,
        12616
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5348": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12413,
        12616
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x14ED"
    },
    "5351": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12413,
        12616
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5352": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12457,
        12606
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5353": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12413,
        12616
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2858"
    },
    "5356": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "jump": "i",
      "offset": [
        12413,
        12616
      ],
      "op": "JUMP",
      "path": "50"
    },
    "5357": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12413,
        12616
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5358": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12413,
        12616
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5360": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12413,
        12616
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5362": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12413,
        12616
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5363": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12413,
        12616
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5364": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12413,
        12616
      ],
      "op": "DUP4",
      "path": "50"
    },
    "5365": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12413,
        12616
      ],
      "op": "SUB",
      "path": "50"
    },
    "5366": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12413,
        12616
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5367": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12413,
        12616
      ],
      "op": "DUP6",
      "path": "50"
    },
    "5368": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12413,
        12616
      ],
      "op": "GAS",
      "path": "50"
    },
    "5369": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12413,
        12616
      ],
      "op": "DELEGATECALL",
      "path": "50"
    },
    "5370": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12413,
        12616
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5371": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12413,
        12616
      ],
      "op": "POP",
      "path": "50"
    },
    "5372": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12413,
        12616
      ],
      "op": "POP",
      "path": "50"
    },
    "5373": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12413,
        12616
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "5374": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12413,
        12616
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5375": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12413,
        12616
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5377": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12413,
        12616
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5378": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12413,
        12616
      ],
      "op": "EQ",
      "path": "50"
    },
    "5379": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12413,
        12616
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1528"
    },
    "5382": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12413,
        12616
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "5383": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12413,
        12616
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5385": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12413,
        12616
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5386": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12413,
        12616
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5387": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12413,
        12616
      ],
      "op": "POP",
      "path": "50"
    },
    "5388": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12413,
        12616
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "5390": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12413,
        12616
      ],
      "op": "NOT",
      "path": "50"
    },
    "5391": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12413,
        12616
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x3F"
    },
    "5393": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12413,
        12616
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "5394": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12413,
        12616
      ],
      "op": "ADD",
      "path": "50"
    },
    "5395": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12413,
        12616
      ],
      "op": "AND",
      "path": "50"
    },
    "5396": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12413,
        12616
      ],
      "op": "DUP3",
      "path": "50"
    },
    "5397": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12413,
        12616
      ],
      "op": "ADD",
      "path": "50"
    },
    "5398": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12413,
        12616
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5400": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12413,
        12616
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5401": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12413,
        12616
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "5402": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12413,
        12616
      ],
      "op": "DUP3",
      "path": "50"
    },
    "5403": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12413,
        12616
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5404": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12413,
        12616
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "5405": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12413,
        12616
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5407": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12413,
        12616
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "5409": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12413,
        12616
      ],
      "op": "DUP5",
      "path": "50"
    },
    "5410": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12413,
        12616
      ],
      "op": "ADD",
      "path": "50"
    },
    "5411": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12413,
        12616
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "5412": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12413,
        12616
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x152D"
    },
    "5415": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12413,
        12616
      ],
      "op": "JUMP",
      "path": "50"
    },
    "5416": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12413,
        12616
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5417": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12413,
        12616
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x60"
    },
    "5419": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12413,
        12616
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5420": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12413,
        12616
      ],
      "op": "POP",
      "path": "50"
    },
    "5421": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12413,
        12616
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5422": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12413,
        12616
      ],
      "op": "POP",
      "path": "50"
    },
    "5423": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12388,
        12616
      ],
      "op": "POP",
      "path": "50"
    },
    "5424": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12388,
        12616
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5425": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12388,
        12616
      ],
      "op": "POP",
      "path": "50"
    },
    "5426": {
      "branch": 11,
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12632,
        12645
      ],
      "op": "DUP1",
      "path": "50",
      "statement": 6
    },
    "5427": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12627,
        12859
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1543"
    },
    "5430": {
      "branch": 11,
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12627,
        12859
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "5431": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12706,
        12710
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5433": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12700,
        12711
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5434": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12740,
        12756
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "5435": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12796,
        12800
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5436": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12793,
        12794
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5438": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12788,
        12791
      ],
      "op": "DUP4",
      "path": "50"
    },
    "5439": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12773,
        12801
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "5440": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12830,
        12834
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5441": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12825,
        12828
      ],
      "op": "DUP3",
      "path": "50"
    },
    "5442": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12818,
        12835
      ],
      "op": "REVERT",
      "path": "50"
    },
    "5443": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12627,
        12859
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5444": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12252,
        12865
      ],
      "op": "POP",
      "path": "50"
    },
    "5445": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12252,
        12865
      ],
      "op": "POP",
      "path": "50"
    },
    "5446": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12134,
        12865
      ],
      "op": "POP",
      "path": "50"
    },
    "5447": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12134,
        12865
      ],
      "op": "POP",
      "path": "50"
    },
    "5448": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "jump": "o",
      "offset": [
        12134,
        12865
      ],
      "op": "JUMP",
      "path": "50"
    },
    "5449": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11178,
        12010
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5450": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11343,
        11350
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5452": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11367,
        11388
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5453": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11401
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xC1"
    },
    "5455": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11401
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5457": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11401
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5458": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11401
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "5459": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11401
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5460": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11401
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x100"
    },
    "5463": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11401
      ],
      "op": "EXP",
      "path": "50"
    },
    "5464": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11401
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5465": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11401
      ],
      "op": "DIV",
      "path": "50"
    },
    "5466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5468": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5470": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5472": {
      "op": "SHL"
    },
    "5473": {
      "op": "SUB"
    },
    "5474": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11401
      ],
      "op": "AND",
      "path": "50"
    },
    "5475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5479": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5481": {
      "op": "SHL"
    },
    "5482": {
      "op": "SUB"
    },
    "5483": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11415
      ],
      "op": "AND",
      "path": "50"
    },
    "5484": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11415
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xA327AB69"
    },
    "5489": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5491": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5492": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5493": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xFFFFFFFF"
    },
    "5498": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "AND",
      "path": "50"
    },
    "5499": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xE0"
    },
    "5501": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "SHL",
      "path": "50"
    },
    "5502": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5503": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5504": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "5506": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "ADD",
      "path": "50"
    },
    "5507": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "5509": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5511": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5512": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5513": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "DUP4",
      "path": "50"
    },
    "5514": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "SUB",
      "path": "50"
    },
    "5515": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5516": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "DUP7",
      "path": "50"
    },
    "5517": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "GAS",
      "path": "50"
    },
    "5518": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "STATICCALL",
      "path": "50"
    },
    "5519": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "5520": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5521": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "5522": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x159F"
    },
    "5525": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "5526": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "5527": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5529": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5530": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "5531": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "5532": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5534": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "REVERT",
      "path": "50"
    },
    "5535": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5536": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "POP",
      "path": "50"
    },
    "5537": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "POP",
      "path": "50"
    },
    "5538": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "POP",
      "path": "50"
    },
    "5539": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "POP",
      "path": "50"
    },
    "5540": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5542": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5543": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "5544": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "5546": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "NOT",
      "path": "50"
    },
    "5547": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "5549": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "DUP3",
      "path": "50"
    },
    "5550": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "ADD",
      "path": "50"
    },
    "5551": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "AND",
      "path": "50"
    },
    "5552": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "DUP3",
      "path": "50"
    },
    "5553": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "ADD",
      "path": "50"
    },
    "5554": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5555": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5557": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5558": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "POP",
      "path": "50"
    },
    "5559": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5560": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "ADD",
      "path": "50"
    },
    "5561": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5562": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x15C3"
    },
    "5565": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5566": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5567": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2803"
    },
    "5570": {
      "fn": "CLHouse.PropRequestToJoin",
      "jump": "i",
      "offset": [
        11391,
        11417
      ],
      "op": "JUMP",
      "path": "50"
    },
    "5571": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11391,
        11417
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5572": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11367,
        11417
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5573": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11367,
        11417
      ],
      "op": "POP",
      "path": "50"
    },
    "5574": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11486,
        11504
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5576": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11510,
        11523
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5577": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5579": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5581": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5583": {
      "op": "SHL"
    },
    "5584": {
      "op": "SUB"
    },
    "5585": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11510,
        11536
      ],
      "op": "AND",
      "path": "50"
    },
    "5586": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11650,
        11655
      ],
      "op": "DUP7",
      "path": "50"
    },
    "5587": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11673,
        11685
      ],
      "op": "DUP7",
      "path": "50"
    },
    "5588": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11703,
        11713
      ],
      "op": "DUP7",
      "path": "50"
    },
    "5589": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11550,
        11727
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5591": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11550,
        11727
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5592": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11550,
        11727
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x24"
    },
    "5594": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11550,
        11727
      ],
      "op": "ADD",
      "path": "50"
    },
    "5595": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11550,
        11727
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x15E6"
    },
    "5598": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11550,
        11727
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "5599": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11550,
        11727
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "5600": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11550,
        11727
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5601": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11550,
        11727
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5602": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11550,
        11727
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2AD1"
    },
    "5605": {
      "fn": "CLHouse.PropRequestToJoin",
      "jump": "i",
      "offset": [
        11550,
        11727
      ],
      "op": "JUMP",
      "path": "50"
    },
    "5606": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11550,
        11727
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5607": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11550,
        11727
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5609": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11550,
        11727
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5610": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11550,
        11727
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5611": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5613": {
      "op": "NOT"
    },
    "5614": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11550,
        11727
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5615": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11550,
        11727
      ],
      "op": "DUP5",
      "path": "50"
    },
    "5616": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11550,
        11727
      ],
      "op": "SUB",
      "path": "50"
    },
    "5617": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11550,
        11727
      ],
      "op": "ADD",
      "path": "50"
    },
    "5618": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11550,
        11727
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5619": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11550,
        11727
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5620": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11550,
        11727
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5621": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11550,
        11727
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5622": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11550,
        11727
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5623": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11550,
        11727
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "5625": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11550,
        11727
      ],
      "op": "DUP3",
      "path": "50"
    },
    "5626": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11550,
        11727
      ],
      "op": "ADD",
      "path": "50"
    },
    "5627": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11550,
        11727
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5628": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11550,
        11727
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5629": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5633": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5635": {
      "op": "SHL"
    },
    "5636": {
      "op": "SUB"
    },
    "5637": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11550,
        11727
      ],
      "op": "AND",
      "path": "50"
    },
    "5638": {
      "op": "PUSH4",
      "value": "0xA19A5F5"
    },
    "5643": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "5645": {
      "op": "SHL"
    },
    "5646": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11550,
        11727
      ],
      "op": "OR",
      "path": "50"
    },
    "5647": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11550,
        11727
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5648": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11550,
        11727
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5649": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11510,
        11737
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5650": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11510,
        11737
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x709"
    },
    "5653": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11510,
        11737
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5654": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11550,
        11727
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5655": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11510,
        11737
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2858"
    },
    "5658": {
      "fn": "CLHouse.PropRequestToJoin",
      "jump": "i",
      "offset": [
        11510,
        11737
      ],
      "op": "JUMP",
      "path": "50"
    },
    "5659": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        15881,
        16736
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5660": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16098
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xC1"
    },
    "5662": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16098
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "5663": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5665": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5666": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5667": {
      "op": "PUSH4",
      "value": "0xA327AB69"
    },
    "5672": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5674": {
      "op": "SHL"
    },
    "5675": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5676": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5677": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5678": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5679": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16064,
        16085
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5681": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16064,
        16085
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "5682": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5684": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5686": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5688": {
      "op": "SHL"
    },
    "5689": {
      "op": "SUB"
    },
    "5690": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16098
      ],
      "op": "AND",
      "path": "50"
    },
    "5691": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16098
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5692": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16112
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xA327AB69"
    },
    "5697": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16112
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5698": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "5700": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5701": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "DUP4",
      "path": "50"
    },
    "5702": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "ADD",
      "path": "50"
    },
    "5703": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "5704": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "5706": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "5707": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5708": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5709": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "DUP3",
      "path": "50"
    },
    "5710": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5711": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "SUB",
      "path": "50"
    },
    "5712": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "ADD",
      "path": "50"
    },
    "5713": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5714": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16098
      ],
      "op": "DUP7",
      "path": "50"
    },
    "5715": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "GAS",
      "path": "50"
    },
    "5716": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "STATICCALL",
      "path": "50"
    },
    "5717": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "5718": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5719": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "5720": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1665"
    },
    "5723": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "5724": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "5725": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5727": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5728": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "5729": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "5730": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5732": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "REVERT",
      "path": "50"
    },
    "5733": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5734": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "POP",
      "path": "50"
    },
    "5735": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "POP",
      "path": "50"
    },
    "5736": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "POP",
      "path": "50"
    },
    "5737": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "POP",
      "path": "50"
    },
    "5738": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5740": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5741": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "5742": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "5744": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "NOT",
      "path": "50"
    },
    "5745": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "5747": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "DUP3",
      "path": "50"
    },
    "5748": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "ADD",
      "path": "50"
    },
    "5749": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "AND",
      "path": "50"
    },
    "5750": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "DUP3",
      "path": "50"
    },
    "5751": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "ADD",
      "path": "50"
    },
    "5752": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5753": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5755": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5756": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "POP",
      "path": "50"
    },
    "5757": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5758": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "ADD",
      "path": "50"
    },
    "5759": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5760": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1689"
    },
    "5763": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5764": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5765": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2803"
    },
    "5768": {
      "fn": "CLHouse.bulkVote",
      "jump": "i",
      "offset": [
        16088,
        16114
      ],
      "op": "JUMP",
      "path": "50"
    },
    "5769": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16088,
        16114
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5770": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16064,
        16114
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5771": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16064,
        16114
      ],
      "op": "POP",
      "path": "50"
    },
    "5772": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16183,
        16201
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5774": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16207,
        16220
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5775": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5777": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5779": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5781": {
      "op": "SHL"
    },
    "5782": {
      "op": "SUB"
    },
    "5783": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16207,
        16233
      ],
      "op": "AND",
      "path": "50"
    },
    "5784": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16346,
        16353
      ],
      "op": "DUP7",
      "path": "50"
    },
    "5785": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16371,
        16379
      ],
      "op": "DUP7",
      "path": "50"
    },
    "5786": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16397,
        16411
      ],
      "op": "DUP7",
      "path": "50"
    },
    "5787": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16429,
        16439
      ],
      "op": "DUP7",
      "path": "50"
    },
    "5788": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16247,
        16453
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5790": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16247,
        16453
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5791": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16247,
        16453
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x24"
    },
    "5793": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16247,
        16453
      ],
      "op": "ADD",
      "path": "50"
    },
    "5794": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16247,
        16453
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x16AE"
    },
    "5797": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16247,
        16453
      ],
      "op": "SWAP5",
      "path": "50"
    },
    "5798": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16247,
        16453
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "5799": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16247,
        16453
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "5800": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16247,
        16453
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5801": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16247,
        16453
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5802": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16247,
        16453
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2B14"
    },
    "5805": {
      "fn": "CLHouse.bulkVote",
      "jump": "i",
      "offset": [
        16247,
        16453
      ],
      "op": "JUMP",
      "path": "50"
    },
    "5806": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16247,
        16453
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5807": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16247,
        16453
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5809": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16247,
        16453
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5810": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16247,
        16453
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5811": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5813": {
      "op": "NOT"
    },
    "5814": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16247,
        16453
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5815": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16247,
        16453
      ],
      "op": "DUP5",
      "path": "50"
    },
    "5816": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16247,
        16453
      ],
      "op": "SUB",
      "path": "50"
    },
    "5817": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16247,
        16453
      ],
      "op": "ADD",
      "path": "50"
    },
    "5818": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16247,
        16453
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5819": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16247,
        16453
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5820": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16247,
        16453
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5821": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16247,
        16453
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5822": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16247,
        16453
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5823": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16247,
        16453
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "5825": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16247,
        16453
      ],
      "op": "DUP3",
      "path": "50"
    },
    "5826": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16247,
        16453
      ],
      "op": "ADD",
      "path": "50"
    },
    "5827": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16247,
        16453
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5828": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16247,
        16453
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5831": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5833": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5835": {
      "op": "SHL"
    },
    "5836": {
      "op": "SUB"
    },
    "5837": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16247,
        16453
      ],
      "op": "AND",
      "path": "50"
    },
    "5838": {
      "op": "PUSH4",
      "value": "0xA1C89C9D"
    },
    "5843": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5845": {
      "op": "SHL"
    },
    "5846": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16247,
        16453
      ],
      "op": "OR",
      "path": "50"
    },
    "5847": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16247,
        16453
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5848": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16247,
        16453
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5849": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16207,
        16463
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5850": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16207,
        16463
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x709"
    },
    "5853": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16207,
        16463
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5854": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16247,
        16453
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5855": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16207,
        16463
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2858"
    },
    "5858": {
      "fn": "CLHouse.bulkVote",
      "jump": "i",
      "offset": [
        16207,
        16463
      ],
      "op": "JUMP",
      "path": "50"
    },
    "5859": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17148,
        17257
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5860": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17198,
        17218
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x60"
    },
    "5862": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17238,
        17250
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 7,
      "value": "0x83"
    },
    "5864": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5865": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "5866": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5867": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "5869": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "MUL",
      "path": "50"
    },
    "5870": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "5872": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "ADD",
      "path": "50"
    },
    "5873": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5875": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5876": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5877": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5878": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "ADD",
      "path": "50"
    },
    "5879": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5881": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5882": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5883": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "5884": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5885": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5886": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5887": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5888": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5889": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "5891": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "ADD",
      "path": "50"
    },
    "5892": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5894": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5895": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5896": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DUP3",
      "path": "50"
    },
    "5897": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DUP3",
      "path": "50"
    },
    "5898": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "LT",
      "path": "50"
    },
    "5899": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "5900": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xBC3"
    },
    "5903": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "5904": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5906": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DUP5",
      "path": "50"
    },
    "5907": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5908": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5909": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "5911": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5912": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5913": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5914": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "KECCAK256",
      "path": "50"
    },
    "5915": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5917": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5918": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5919": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x120"
    },
    "5922": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5923": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "ADD",
      "path": "50"
    },
    "5924": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5925": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5926": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5927": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x7"
    },
    "5929": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DUP6",
      "path": "50"
    },
    "5930": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "MUL",
      "path": "50"
    },
    "5931": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5932": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5933": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "ADD",
      "path": "50"
    },
    "5934": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5935": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "5936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5940": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5942": {
      "op": "SHL"
    },
    "5943": {
      "op": "SUB"
    },
    "5944": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5945": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "AND",
      "path": "50"
    },
    "5946": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DUP4",
      "path": "50"
    },
    "5947": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5948": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5949": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "5950": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5951": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5952": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5953": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DUP4",
      "path": "50"
    },
    "5954": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "ADD",
      "path": "50"
    },
    "5955": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5956": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5958": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5960": {
      "op": "SHL"
    },
    "5961": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5962": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DIV",
      "path": "50"
    },
    "5963": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xFF"
    },
    "5965": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "AND",
      "path": "50"
    },
    "5966": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x8"
    },
    "5968": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5969": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "GT",
      "path": "50"
    },
    "5970": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "5971": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x175E"
    },
    "5974": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "5975": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x175E"
    },
    "5978": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x25AA"
    },
    "5981": {
      "fn": "CLHouse.GetProposalList",
      "jump": "i",
      "offset": [
        17231,
        17250
      ],
      "op": "JUMP",
      "path": "50"
    },
    "5982": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5983": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x8"
    },
    "5985": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5986": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "GT",
      "path": "50"
    },
    "5987": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "5988": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x176F"
    },
    "5991": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "5992": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x176F"
    },
    "5995": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x25AA"
    },
    "5998": {
      "fn": "CLHouse.GetProposalList",
      "jump": "i",
      "offset": [
        17231,
        17250
      ],
      "op": "JUMP",
      "path": "50"
    },
    "5999": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "6000": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DUP2",
      "path": "50"
    },
    "6001": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6002": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "6004": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "ADD",
      "path": "50"
    },
    "6005": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1"
    },
    "6007": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DUP3",
      "path": "50"
    },
    "6008": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "ADD",
      "path": "50"
    },
    "6009": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6010": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "6011": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1783"
    },
    "6014": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6015": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x28B9"
    },
    "6018": {
      "fn": "CLHouse.GetProposalList",
      "jump": "i",
      "offset": [
        17231,
        17250
      ],
      "op": "JUMP",
      "path": "50"
    },
    "6019": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "6020": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6021": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "6023": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "ADD",
      "path": "50"
    },
    "6024": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "6026": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6027": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6028": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DIV",
      "path": "50"
    },
    "6029": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "MUL",
      "path": "50"
    },
    "6030": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "6032": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "ADD",
      "path": "50"
    },
    "6033": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "6035": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "6036": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6037": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DUP2",
      "path": "50"
    },
    "6038": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "ADD",
      "path": "50"
    },
    "6039": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "6041": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6042": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6043": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "6044": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6045": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6046": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DUP2",
      "path": "50"
    },
    "6047": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DUP2",
      "path": "50"
    },
    "6048": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6049": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "6051": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "ADD",
      "path": "50"
    },
    "6052": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DUP3",
      "path": "50"
    },
    "6053": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6054": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "6055": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x17AF"
    },
    "6058": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6059": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x28B9"
    },
    "6062": {
      "fn": "CLHouse.GetProposalList",
      "jump": "i",
      "offset": [
        17231,
        17250
      ],
      "op": "JUMP",
      "path": "50"
    },
    "6063": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "6064": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6065": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "6066": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x17FC"
    },
    "6069": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "6070": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6071": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "6073": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "LT",
      "path": "50"
    },
    "6074": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x17D1"
    },
    "6077": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "6078": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x100"
    },
    "6081": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6082": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DUP4",
      "path": "50"
    },
    "6083": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "6084": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DIV",
      "path": "50"
    },
    "6085": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "MUL",
      "path": "50"
    },
    "6086": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DUP4",
      "path": "50"
    },
    "6087": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6088": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6089": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "6091": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "ADD",
      "path": "50"
    },
    "6092": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6093": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x17FC"
    },
    "6096": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "JUMP",
      "path": "50"
    },
    "6097": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "6098": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DUP3",
      "path": "50"
    },
    "6099": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "ADD",
      "path": "50"
    },
    "6100": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6101": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6102": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "6104": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6105": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "6107": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "6109": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "KECCAK256",
      "path": "50"
    },
    "6110": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6111": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "6112": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DUP2",
      "path": "50"
    },
    "6113": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "6114": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DUP2",
      "path": "50"
    },
    "6115": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6116": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6117": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1"
    },
    "6119": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "ADD",
      "path": "50"
    },
    "6120": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6121": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "6123": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "ADD",
      "path": "50"
    },
    "6124": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6125": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DUP4",
      "path": "50"
    },
    "6126": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "GT",
      "path": "50"
    },
    "6127": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x17DF"
    },
    "6130": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "6131": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DUP3",
      "path": "50"
    },
    "6132": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6133": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SUB",
      "path": "50"
    },
    "6134": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "6136": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "AND",
      "path": "50"
    },
    "6137": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DUP3",
      "path": "50"
    },
    "6138": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "ADD",
      "path": "50"
    },
    "6139": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6140": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "6141": {
      "op": "POP"
    },
    "6142": {
      "op": "POP"
    },
    "6143": {
      "op": "POP"
    },
    "6144": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6145": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DUP4",
      "path": "50"
    },
    "6146": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6147": {
      "op": "POP"
    },
    "6148": {
      "op": "POP"
    },
    "6149": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x2"
    },
    "6151": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DUP3",
      "path": "50"
    },
    "6152": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "ADD",
      "path": "50"
    },
    "6153": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "6154": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "6156": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6157": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DUP4",
      "path": "50"
    },
    "6158": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "ADD",
      "path": "50"
    },
    "6159": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6160": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6161": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6162": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6163": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x3"
    },
    "6165": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DUP4",
      "path": "50"
    },
    "6166": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "ADD",
      "path": "50"
    },
    "6167": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "6168": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "6170": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DUP4",
      "path": "50"
    },
    "6171": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "ADD",
      "path": "50"
    },
    "6172": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6173": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "6175": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DUP4",
      "path": "50"
    },
    "6176": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "ADD",
      "path": "50"
    },
    "6177": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "6178": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x60"
    },
    "6180": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DUP4",
      "path": "50"
    },
    "6181": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "ADD",
      "path": "50"
    },
    "6182": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6183": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x5"
    },
    "6185": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DUP4",
      "path": "50"
    },
    "6186": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "ADD",
      "path": "50"
    },
    "6187": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "6188": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xFF"
    },
    "6190": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6191": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DUP3",
      "path": "50"
    },
    "6192": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "AND",
      "path": "50"
    },
    "6193": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "6194": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "6195": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x80"
    },
    "6197": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DUP6",
      "path": "50"
    },
    "6198": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "ADD",
      "path": "50"
    },
    "6199": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6200": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x100"
    },
    "6203": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6204": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6205": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DIV",
      "path": "50"
    },
    "6206": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "AND",
      "path": "50"
    },
    "6207": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "6208": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "6209": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xA0"
    },
    "6211": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DUP4",
      "path": "50"
    },
    "6212": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "ADD",
      "path": "50"
    },
    "6213": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6214": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x6"
    },
    "6216": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6217": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "6218": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "ADD",
      "path": "50"
    },
    "6219": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "6220": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xC0"
    },
    "6222": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6223": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6224": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "ADD",
      "path": "50"
    },
    "6225": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6226": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6227": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "DUP3",
      "path": "50"
    },
    "6228": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6229": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1"
    },
    "6231": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "6232": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6233": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "6234": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "ADD",
      "path": "50"
    },
    "6235": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6236": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "ADD",
      "path": "50"
    },
    "6237": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1707"
    },
    "6240": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17231,
        17250
      ],
      "op": "JUMP",
      "path": "50"
    },
    "6241": {
      "offset": [
        1005,
        1049
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "6242": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1005,
        1049
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x85"
    },
    "6244": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1005,
        1049
      ],
      "op": "DUP2",
      "path": "47"
    },
    "6245": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1005,
        1049
      ],
      "op": "DUP2",
      "path": "47"
    },
    "6246": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1005,
        1049
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "6247": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1005,
        1049
      ],
      "op": "DUP2",
      "path": "47"
    },
    "6248": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1005,
        1049
      ],
      "op": "LT",
      "path": "47"
    },
    "6249": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1005,
        1049
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1871"
    },
    "6252": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1005,
        1049
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "6253": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1005,
        1049
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "6255": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1005,
        1049
      ],
      "op": "DUP1",
      "path": "47"
    },
    "6256": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1005,
        1049
      ],
      "op": "REVERT",
      "path": "47"
    },
    "6257": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1005,
        1049
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "6258": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1005,
        1049
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "6260": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1005,
        1049
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "6261": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1005,
        1049
      ],
      "op": "DUP3",
      "path": "47"
    },
    "6262": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1005,
        1049
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "6263": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1005,
        1049
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "6265": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1005,
        1049
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6266": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1005,
        1049
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "6267": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1005,
        1049
      ],
      "op": "KECCAK256",
      "path": "47"
    },
    "6268": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1005,
        1049
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x4"
    },
    "6270": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1005,
        1049
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6271": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1005,
        1049
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "6272": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1005,
        1049
      ],
      "op": "MUL",
      "path": "47"
    },
    "6273": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1005,
        1049
      ],
      "op": "ADD",
      "path": "47"
    },
    "6274": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1005,
        1049
      ],
      "op": "DUP1",
      "path": "47"
    },
    "6275": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1005,
        1049
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "6276": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1005,
        1049
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1"
    },
    "6278": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1005,
        1049
      ],
      "op": "DUP3",
      "path": "47"
    },
    "6279": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1005,
        1049
      ],
      "op": "ADD",
      "path": "47"
    },
    "6280": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1005,
        1049
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "6281": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1005,
        1049
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x2"
    },
    "6283": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1005,
        1049
      ],
      "op": "DUP4",
      "path": "47"
    },
    "6284": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1005,
        1049
      ],
      "op": "ADD",
      "path": "47"
    },
    "6285": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1005,
        1049
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "6286": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1005,
        1049
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x3"
    },
    "6288": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1005,
        1049
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6289": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1005,
        1049
      ],
      "op": "SWAP4",
      "path": "47"
    },
    "6290": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1005,
        1049
      ],
      "op": "ADD",
      "path": "47"
    },
    "6291": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1005,
        1049
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "6292": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6294": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6296": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6298": {
      "op": "SHL"
    },
    "6299": {
      "op": "SUB"
    },
    "6300": {
      "offset": [
        1005,
        1049
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "6301": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1005,
        1049
      ],
      "op": "DUP4",
      "path": "47"
    },
    "6302": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1005,
        1049
      ],
      "op": "AND",
      "path": "47"
    },
    "6303": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1005,
        1049
      ],
      "op": "SWAP5",
      "path": "47"
    },
    "6304": {
      "op": "POP"
    },
    "6305": {
      "offset": [
        1005,
        1049
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6306": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1005,
        1049
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "6307": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1005,
        1049
      ],
      "op": "DUP3",
      "path": "47"
    },
    "6308": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1005,
        1049
      ],
      "op": "AND",
      "path": "47"
    },
    "6309": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1005,
        1049
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "6310": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1005,
        1049
      ],
      "op": "AND",
      "path": "47"
    },
    "6311": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1005,
        1049
      ],
      "op": "DUP5",
      "path": "47"
    },
    "6312": {
      "fn": "CLHouse.GetProposalList",
      "jump": "o",
      "offset": [
        1005,
        1049
      ],
      "op": "JUMP",
      "path": "47"
    },
    "6313": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3664,
        4490
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "6314": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3874
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xC1"
    },
    "6316": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3874
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "6317": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "6319": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6320": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "6321": {
      "op": "PUSH4",
      "value": "0xA327AB69"
    },
    "6326": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6328": {
      "op": "SHL"
    },
    "6329": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "DUP2",
      "path": "50"
    },
    "6330": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6331": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6332": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "6333": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3840,
        3861
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "6335": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3840,
        3861
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "6336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6340": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6342": {
      "op": "SHL"
    },
    "6343": {
      "op": "SUB"
    },
    "6344": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3874
      ],
      "op": "AND",
      "path": "50"
    },
    "6345": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3874
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6346": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3888
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xA327AB69"
    },
    "6351": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3888
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6352": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "6354": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6355": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "DUP4",
      "path": "50"
    },
    "6356": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "ADD",
      "path": "50"
    },
    "6357": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "6358": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "6360": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "6361": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6362": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6363": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "DUP3",
      "path": "50"
    },
    "6364": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6365": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "SUB",
      "path": "50"
    },
    "6366": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "ADD",
      "path": "50"
    },
    "6367": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "DUP2",
      "path": "50"
    },
    "6368": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3874
      ],
      "op": "DUP7",
      "path": "50"
    },
    "6369": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "GAS",
      "path": "50"
    },
    "6370": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "STATICCALL",
      "path": "50"
    },
    "6371": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "6372": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6373": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "6374": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x18F3"
    },
    "6377": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "6378": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "6379": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "6381": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6382": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "6383": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "6384": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "6386": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "REVERT",
      "path": "50"
    },
    "6387": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "6388": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "POP",
      "path": "50"
    },
    "6389": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "POP",
      "path": "50"
    },
    "6390": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "POP",
      "path": "50"
    },
    "6391": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "POP",
      "path": "50"
    },
    "6392": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "6394": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "6395": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "6396": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "6398": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "NOT",
      "path": "50"
    },
    "6399": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "6401": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "DUP3",
      "path": "50"
    },
    "6402": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "ADD",
      "path": "50"
    },
    "6403": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "AND",
      "path": "50"
    },
    "6404": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "DUP3",
      "path": "50"
    },
    "6405": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "ADD",
      "path": "50"
    },
    "6406": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6407": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "6409": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6410": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "POP",
      "path": "50"
    },
    "6411": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "DUP2",
      "path": "50"
    },
    "6412": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "ADD",
      "path": "50"
    },
    "6413": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6414": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1917"
    },
    "6417": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6418": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6419": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2803"
    },
    "6422": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        3864,
        3890
      ],
      "op": "JUMP",
      "path": "50"
    },
    "6423": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3864,
        3890
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "6424": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3840,
        3890
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6425": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3840,
        3890
      ],
      "op": "POP",
      "path": "50"
    },
    "6426": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3959,
        3977
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "6428": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3983,
        3996
      ],
      "op": "DUP2",
      "path": "50"
    },
    "6429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6431": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6433": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6435": {
      "op": "SHL"
    },
    "6436": {
      "op": "SUB"
    },
    "6437": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3983,
        4009
      ],
      "op": "AND",
      "path": "50"
    },
    "6438": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4124,
        4131
      ],
      "op": "DUP7",
      "path": "50"
    },
    "6439": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4149,
        4157
      ],
      "op": "DUP7",
      "path": "50"
    },
    "6440": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4175,
        4189
      ],
      "op": "DUP7",
      "path": "50"
    },
    "6441": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4207,
        4217
      ],
      "op": "DUP7",
      "path": "50"
    },
    "6442": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4023,
        4231
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "6444": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4023,
        4231
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "6445": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4023,
        4231
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x24"
    },
    "6447": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4023,
        4231
      ],
      "op": "ADD",
      "path": "50"
    },
    "6448": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4023,
        4231
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x193C"
    },
    "6451": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4023,
        4231
      ],
      "op": "SWAP5",
      "path": "50"
    },
    "6452": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4023,
        4231
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "6453": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4023,
        4231
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "6454": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4023,
        4231
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6455": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4023,
        4231
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6456": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4023,
        4231
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2B7E"
    },
    "6459": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        4023,
        4231
      ],
      "op": "JUMP",
      "path": "50"
    },
    "6460": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4023,
        4231
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "6461": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4023,
        4231
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "6463": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4023,
        4231
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6464": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4023,
        4231
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "6465": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6467": {
      "op": "NOT"
    },
    "6468": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4023,
        4231
      ],
      "op": "DUP2",
      "path": "50"
    },
    "6469": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4023,
        4231
      ],
      "op": "DUP5",
      "path": "50"
    },
    "6470": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4023,
        4231
      ],
      "op": "SUB",
      "path": "50"
    },
    "6471": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4023,
        4231
      ],
      "op": "ADD",
      "path": "50"
    },
    "6472": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4023,
        4231
      ],
      "op": "DUP2",
      "path": "50"
    },
    "6473": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4023,
        4231
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6474": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4023,
        4231
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6475": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4023,
        4231
      ],
      "op": "DUP2",
      "path": "50"
    },
    "6476": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4023,
        4231
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6477": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4023,
        4231
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "6479": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4023,
        4231
      ],
      "op": "DUP3",
      "path": "50"
    },
    "6480": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4023,
        4231
      ],
      "op": "ADD",
      "path": "50"
    },
    "6481": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4023,
        4231
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6482": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4023,
        4231
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "6483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6487": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6489": {
      "op": "SHL"
    },
    "6490": {
      "op": "SUB"
    },
    "6491": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4023,
        4231
      ],
      "op": "AND",
      "path": "50"
    },
    "6492": {
      "op": "PUSH4",
      "value": "0x18567541"
    },
    "6497": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "6499": {
      "op": "SHL"
    },
    "6500": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4023,
        4231
      ],
      "op": "OR",
      "path": "50"
    },
    "6501": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4023,
        4231
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6502": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4023,
        4231
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6503": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3983,
        4241
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "6504": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3983,
        4241
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1971"
    },
    "6507": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3983,
        4241
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6508": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4023,
        4231
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6509": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3983,
        4241
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2858"
    },
    "6512": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        3983,
        4241
      ],
      "op": "JUMP",
      "path": "50"
    },
    "6513": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3983,
        4241
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "6514": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3983,
        4241
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "6516": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3983,
        4241
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "6518": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3983,
        4241
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "6519": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3983,
        4241
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6520": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3983,
        4241
      ],
      "op": "DUP4",
      "path": "50"
    },
    "6521": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3983,
        4241
      ],
      "op": "SUB",
      "path": "50"
    },
    "6522": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3983,
        4241
      ],
      "op": "DUP2",
      "path": "50"
    },
    "6523": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3983,
        4241
      ],
      "op": "DUP6",
      "path": "50"
    },
    "6524": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3983,
        4241
      ],
      "op": "GAS",
      "path": "50"
    },
    "6525": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3983,
        4241
      ],
      "op": "DELEGATECALL",
      "path": "50"
    },
    "6526": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3983,
        4241
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6527": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3983,
        4241
      ],
      "op": "POP",
      "path": "50"
    },
    "6528": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3983,
        4241
      ],
      "op": "POP",
      "path": "50"
    },
    "6529": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3983,
        4241
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "6530": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3983,
        4241
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6531": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3983,
        4241
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "6533": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3983,
        4241
      ],
      "op": "DUP2",
      "path": "50"
    },
    "6534": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3983,
        4241
      ],
      "op": "EQ",
      "path": "50"
    },
    "6535": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3983,
        4241
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x19AC"
    },
    "6538": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3983,
        4241
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "6539": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3983,
        4241
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "6541": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3983,
        4241
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "6542": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3983,
        4241
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6543": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3983,
        4241
      ],
      "op": "POP",
      "path": "50"
    },
    "6544": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3983,
        4241
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "6546": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3983,
        4241
      ],
      "op": "NOT",
      "path": "50"
    },
    "6547": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3983,
        4241
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x3F"
    },
    "6549": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3983,
        4241
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "6550": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3983,
        4241
      ],
      "op": "ADD",
      "path": "50"
    },
    "6551": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3983,
        4241
      ],
      "op": "AND",
      "path": "50"
    },
    "6552": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3983,
        4241
      ],
      "op": "DUP3",
      "path": "50"
    },
    "6553": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3983,
        4241
      ],
      "op": "ADD",
      "path": "50"
    },
    "6554": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3983,
        4241
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "6556": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3983,
        4241
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6557": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3983,
        4241
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "6558": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3983,
        4241
      ],
      "op": "DUP3",
      "path": "50"
    },
    "6559": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3983,
        4241
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6560": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3983,
        4241
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "6561": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3983,
        4241
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "6563": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3983,
        4241
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "6565": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3983,
        4241
      ],
      "op": "DUP5",
      "path": "50"
    },
    "6566": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3983,
        4241
      ],
      "op": "ADD",
      "path": "50"
    },
    "6567": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3983,
        4241
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "6568": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3983,
        4241
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x19B1"
    },
    "6571": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3983,
        4241
      ],
      "op": "JUMP",
      "path": "50"
    },
    "6572": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3983,
        4241
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "6573": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3983,
        4241
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x60"
    },
    "6575": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3983,
        4241
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6576": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3983,
        4241
      ],
      "op": "POP",
      "path": "50"
    },
    "6577": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3983,
        4241
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "6578": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3983,
        4241
      ],
      "op": "POP",
      "path": "50"
    },
    "6579": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3958,
        4241
      ],
      "op": "POP",
      "path": "50"
    },
    "6580": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3958,
        4241
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6581": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3958,
        4241
      ],
      "op": "POP",
      "path": "50"
    },
    "6582": {
      "branch": 12,
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4257,
        4270
      ],
      "op": "DUP1",
      "path": "50",
      "statement": 8
    },
    "6583": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4252,
        4484
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x19C7"
    },
    "6586": {
      "branch": 12,
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4252,
        4484
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "6587": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4331,
        4335
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "6589": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4325,
        4336
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "6590": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4365,
        4381
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "6591": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4421,
        4425
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6592": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4418,
        4419
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "6594": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4413,
        4416
      ],
      "op": "DUP4",
      "path": "50"
    },
    "6595": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4398,
        4426
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "6596": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4455,
        4459
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6597": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4450,
        4453
      ],
      "op": "DUP3",
      "path": "50"
    },
    "6598": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4443,
        4460
      ],
      "op": "REVERT",
      "path": "50"
    },
    "6599": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4252,
        4484
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "6600": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3830,
        4490
      ],
      "op": "POP",
      "path": "50"
    },
    "6601": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3830,
        4490
      ],
      "op": "POP",
      "path": "50"
    },
    "6602": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3664,
        4490
      ],
      "op": "POP",
      "path": "50"
    },
    "6603": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3664,
        4490
      ],
      "op": "POP",
      "path": "50"
    },
    "6604": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3664,
        4490
      ],
      "op": "POP",
      "path": "50"
    },
    "6605": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3664,
        4490
      ],
      "op": "POP",
      "path": "50"
    },
    "6606": {
      "fn": "CLHouse.VoteProposal",
      "jump": "o",
      "offset": [
        3664,
        4490
      ],
      "op": "JUMP",
      "path": "50"
    },
    "6607": {
      "offset": [
        1341,
        1408
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "6608": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0xA5"
    },
    "6610": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "6612": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6613": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "DUP2",
      "path": "47"
    },
    "6614": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "6615": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "6617": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "6618": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "DUP4",
      "path": "47"
    },
    "6619": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "6620": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "6622": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "DUP1",
      "path": "47"
    },
    "6623": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "DUP5",
      "path": "47"
    },
    "6624": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "KECCAK256",
      "path": "47"
    },
    "6625": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6626": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "6627": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "6628": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6629": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "DUP3",
      "path": "47"
    },
    "6630": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "6631": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6632": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "KECCAK256",
      "path": "47"
    },
    "6633": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "DUP1",
      "path": "47"
    },
    "6634": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "6635": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1"
    },
    "6637": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "DUP3",
      "path": "47"
    },
    "6638": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "ADD",
      "path": "47"
    },
    "6639": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "DUP1",
      "path": "47"
    },
    "6640": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "6641": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0xFF"
    },
    "6643": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "DUP1",
      "path": "47"
    },
    "6644": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "DUP5",
      "path": "47"
    },
    "6645": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "AND",
      "path": "47"
    },
    "6646": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "SWAP5",
      "path": "47"
    },
    "6647": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x100"
    },
    "6650": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6651": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "SWAP5",
      "path": "47"
    },
    "6652": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "DIV",
      "path": "47"
    },
    "6653": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "AND",
      "path": "47"
    },
    "6654": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "6655": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "6656": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6657": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1A09"
    },
    "6660": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6661": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x28B9"
    },
    "6664": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        1341,
        1408
      ],
      "op": "JUMP",
      "path": "47"
    },
    "6665": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "6666": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "DUP1",
      "path": "47"
    },
    "6667": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1F"
    },
    "6669": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "ADD",
      "path": "47"
    },
    "6670": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "6672": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "DUP1",
      "path": "47"
    },
    "6673": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "6674": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "DIV",
      "path": "47"
    },
    "6675": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "MUL",
      "path": "47"
    },
    "6676": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "6678": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "ADD",
      "path": "47"
    },
    "6679": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "6681": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "MLOAD",
      "path": "47"
    },
    "6682": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6683": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "DUP2",
      "path": "47"
    },
    "6684": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "ADD",
      "path": "47"
    },
    "6685": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "6687": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "6688": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "DUP1",
      "path": "47"
    },
    "6689": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "6690": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "6691": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6692": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "DUP2",
      "path": "47"
    },
    "6693": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "DUP2",
      "path": "47"
    },
    "6694": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "6695": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "6697": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "ADD",
      "path": "47"
    },
    "6698": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "DUP3",
      "path": "47"
    },
    "6699": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "DUP1",
      "path": "47"
    },
    "6700": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "6701": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1A35"
    },
    "6704": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6705": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x28B9"
    },
    "6708": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        1341,
        1408
      ],
      "op": "JUMP",
      "path": "47"
    },
    "6709": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "6710": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "DUP1",
      "path": "47"
    },
    "6711": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "ISZERO",
      "path": "47"
    },
    "6712": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1A82"
    },
    "6715": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "6716": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "DUP1",
      "path": "47"
    },
    "6717": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1F"
    },
    "6719": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "LT",
      "path": "47"
    },
    "6720": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1A57"
    },
    "6723": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "6724": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x100"
    },
    "6727": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "DUP1",
      "path": "47"
    },
    "6728": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "DUP4",
      "path": "47"
    },
    "6729": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "6730": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "DIV",
      "path": "47"
    },
    "6731": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "MUL",
      "path": "47"
    },
    "6732": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "DUP4",
      "path": "47"
    },
    "6733": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "6734": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "6735": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "6737": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "ADD",
      "path": "47"
    },
    "6738": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "6739": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1A82"
    },
    "6742": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "JUMP",
      "path": "47"
    },
    "6743": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "6744": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "DUP3",
      "path": "47"
    },
    "6745": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "ADD",
      "path": "47"
    },
    "6746": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "6747": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6748": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "6750": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "6751": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "6753": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "6755": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "KECCAK256",
      "path": "47"
    },
    "6756": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6757": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "6758": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "DUP2",
      "path": "47"
    },
    "6759": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "6760": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "DUP2",
      "path": "47"
    },
    "6761": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "6762": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6763": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1"
    },
    "6765": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "ADD",
      "path": "47"
    },
    "6766": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6767": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "6769": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "ADD",
      "path": "47"
    },
    "6770": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "DUP1",
      "path": "47"
    },
    "6771": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "DUP4",
      "path": "47"
    },
    "6772": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "GT",
      "path": "47"
    },
    "6773": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1A65"
    },
    "6776": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "6777": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "DUP3",
      "path": "47"
    },
    "6778": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6779": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "SUB",
      "path": "47"
    },
    "6780": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1F"
    },
    "6782": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "AND",
      "path": "47"
    },
    "6783": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "DUP3",
      "path": "47"
    },
    "6784": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "ADD",
      "path": "47"
    },
    "6785": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "6786": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "6787": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "POP",
      "path": "47"
    },
    "6788": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "POP",
      "path": "47"
    },
    "6789": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "POP",
      "path": "47"
    },
    "6790": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "POP",
      "path": "47"
    },
    "6791": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "POP",
      "path": "47"
    },
    "6792": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6793": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "POP",
      "path": "47"
    },
    "6794": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1341,
        1408
      ],
      "op": "DUP4",
      "path": "47"
    },
    "6795": {
      "fn": "CLHouse.VoteProposal",
      "jump": "o",
      "offset": [
        1341,
        1408
      ],
      "op": "JUMP",
      "path": "47"
    },
    "6796": {
      "offset": [
        924,
        957
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "6797": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x83"
    },
    "6799": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "DUP2",
      "path": "47"
    },
    "6800": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "DUP2",
      "path": "47"
    },
    "6801": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "6802": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "DUP2",
      "path": "47"
    },
    "6803": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "LT",
      "path": "47"
    },
    "6804": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1A9C"
    },
    "6807": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "6808": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "6810": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "DUP1",
      "path": "47"
    },
    "6811": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "REVERT",
      "path": "47"
    },
    "6812": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "6813": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "6815": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "6816": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "DUP3",
      "path": "47"
    },
    "6817": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "6818": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "6820": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6821": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "6822": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "KECCAK256",
      "path": "47"
    },
    "6823": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x7"
    },
    "6825": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6826": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "6827": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "MUL",
      "path": "47"
    },
    "6828": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "ADD",
      "path": "47"
    },
    "6829": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "DUP1",
      "path": "47"
    },
    "6830": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "6831": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1"
    },
    "6833": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "DUP3",
      "path": "47"
    },
    "6834": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "ADD",
      "path": "47"
    },
    "6835": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "DUP1",
      "path": "47"
    },
    "6836": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "6837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6839": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6841": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6843": {
      "op": "SHL"
    },
    "6844": {
      "op": "SUB"
    },
    "6845": {
      "offset": [
        924,
        957
      ],
      "op": "DUP4",
      "path": "47"
    },
    "6846": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "AND",
      "path": "47"
    },
    "6847": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "SWAP5",
      "path": "47"
    },
    "6848": {
      "op": "POP"
    },
    "6849": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6851": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6853": {
      "op": "SHL"
    },
    "6854": {
      "offset": [
        924,
        957
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6855": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "6856": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "DIV",
      "path": "47"
    },
    "6857": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0xFF"
    },
    "6859": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "AND",
      "path": "47"
    },
    "6860": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "6861": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "6862": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1AD6"
    },
    "6865": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6866": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x28B9"
    },
    "6869": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        924,
        957
      ],
      "op": "JUMP",
      "path": "47"
    },
    "6870": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "6871": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "DUP1",
      "path": "47"
    },
    "6872": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1F"
    },
    "6874": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "ADD",
      "path": "47"
    },
    "6875": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "6877": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "DUP1",
      "path": "47"
    },
    "6878": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "6879": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "DIV",
      "path": "47"
    },
    "6880": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "MUL",
      "path": "47"
    },
    "6881": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "6883": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "ADD",
      "path": "47"
    },
    "6884": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "6886": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "MLOAD",
      "path": "47"
    },
    "6887": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6888": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "DUP2",
      "path": "47"
    },
    "6889": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "ADD",
      "path": "47"
    },
    "6890": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "6892": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "6893": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "DUP1",
      "path": "47"
    },
    "6894": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "6895": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "6896": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6897": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "DUP2",
      "path": "47"
    },
    "6898": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "DUP2",
      "path": "47"
    },
    "6899": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "6900": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "6902": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "ADD",
      "path": "47"
    },
    "6903": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "DUP3",
      "path": "47"
    },
    "6904": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "DUP1",
      "path": "47"
    },
    "6905": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "6906": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1B02"
    },
    "6909": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6910": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x28B9"
    },
    "6913": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        924,
        957
      ],
      "op": "JUMP",
      "path": "47"
    },
    "6914": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "6915": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "DUP1",
      "path": "47"
    },
    "6916": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "ISZERO",
      "path": "47"
    },
    "6917": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1B4F"
    },
    "6920": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "6921": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "DUP1",
      "path": "47"
    },
    "6922": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1F"
    },
    "6924": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "LT",
      "path": "47"
    },
    "6925": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1B24"
    },
    "6928": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "6929": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x100"
    },
    "6932": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "DUP1",
      "path": "47"
    },
    "6933": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "DUP4",
      "path": "47"
    },
    "6934": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "6935": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "DIV",
      "path": "47"
    },
    "6936": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "MUL",
      "path": "47"
    },
    "6937": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "DUP4",
      "path": "47"
    },
    "6938": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "6939": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "6940": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "6942": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "ADD",
      "path": "47"
    },
    "6943": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "6944": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1B4F"
    },
    "6947": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "JUMP",
      "path": "47"
    },
    "6948": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "6949": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "DUP3",
      "path": "47"
    },
    "6950": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "ADD",
      "path": "47"
    },
    "6951": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "6952": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6953": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "6955": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "6956": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "6958": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "6960": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "KECCAK256",
      "path": "47"
    },
    "6961": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6962": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "6963": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "DUP2",
      "path": "47"
    },
    "6964": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "6965": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "DUP2",
      "path": "47"
    },
    "6966": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "6967": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6968": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1"
    },
    "6970": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "ADD",
      "path": "47"
    },
    "6971": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6972": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "6974": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "ADD",
      "path": "47"
    },
    "6975": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "DUP1",
      "path": "47"
    },
    "6976": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "DUP4",
      "path": "47"
    },
    "6977": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "GT",
      "path": "47"
    },
    "6978": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1B32"
    },
    "6981": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "6982": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "DUP3",
      "path": "47"
    },
    "6983": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6984": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "SUB",
      "path": "47"
    },
    "6985": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1F"
    },
    "6987": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "AND",
      "path": "47"
    },
    "6988": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "DUP3",
      "path": "47"
    },
    "6989": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "ADD",
      "path": "47"
    },
    "6990": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "6991": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "6992": {
      "op": "POP"
    },
    "6993": {
      "op": "POP"
    },
    "6994": {
      "op": "POP"
    },
    "6995": {
      "offset": [
        924,
        957
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x2"
    },
    "6997": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "DUP5",
      "path": "47"
    },
    "6998": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "ADD",
      "path": "47"
    },
    "6999": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "7000": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x3"
    },
    "7002": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "DUP6",
      "path": "47"
    },
    "7003": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "ADD",
      "path": "47"
    },
    "7004": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "7005": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x4"
    },
    "7007": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "DUP7",
      "path": "47"
    },
    "7008": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "ADD",
      "path": "47"
    },
    "7009": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "7010": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x5"
    },
    "7012": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "DUP8",
      "path": "47"
    },
    "7013": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "ADD",
      "path": "47"
    },
    "7014": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "7015": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x6"
    },
    "7017": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "7018": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "SWAP8",
      "path": "47"
    },
    "7019": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "ADD",
      "path": "47"
    },
    "7020": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "7021": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "SWAP6",
      "path": "47"
    },
    "7022": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "SWAP7",
      "path": "47"
    },
    "7023": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "7024": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "SWAP6",
      "path": "47"
    },
    "7025": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "7026": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "SWAP5",
      "path": "47"
    },
    "7027": {
      "op": "POP"
    },
    "7028": {
      "offset": [
        924,
        957
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "7029": {
      "op": "POP"
    },
    "7030": {
      "offset": [
        924,
        957
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0xFF"
    },
    "7032": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "DUP1",
      "path": "47"
    },
    "7033": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "DUP4",
      "path": "47"
    },
    "7034": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "AND",
      "path": "47"
    },
    "7035": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "7036": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x100"
    },
    "7039": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "7040": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "DIV",
      "path": "47"
    },
    "7041": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "AND",
      "path": "47"
    },
    "7042": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "7043": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        924,
        957
      ],
      "op": "DUP10",
      "path": "47"
    },
    "7044": {
      "fn": "CLHouse.VoteProposal",
      "jump": "o",
      "offset": [
        924,
        957
      ],
      "op": "JUMP",
      "path": "47"
    },
    "7045": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8707,
        9663
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "7046": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8914,
        8928
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "7048": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8945,
        8966
      ],
      "op": "DUP1",
      "path": "50"
    },
    "7049": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8979
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xC1"
    },
    "7051": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8979
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "7053": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8979
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "7054": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8979
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "7055": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8979
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "7056": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8979
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x100"
    },
    "7059": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8979
      ],
      "op": "EXP",
      "path": "50"
    },
    "7060": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8979
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "7061": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8979
      ],
      "op": "DIV",
      "path": "50"
    },
    "7062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7066": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7068": {
      "op": "SHL"
    },
    "7069": {
      "op": "SUB"
    },
    "7070": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8979
      ],
      "op": "AND",
      "path": "50"
    },
    "7071": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7073": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7075": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7077": {
      "op": "SHL"
    },
    "7078": {
      "op": "SUB"
    },
    "7079": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8993
      ],
      "op": "AND",
      "path": "50"
    },
    "7080": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8993
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xA327AB69"
    },
    "7085": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "7087": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "7088": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "DUP2",
      "path": "50"
    },
    "7089": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xFFFFFFFF"
    },
    "7094": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "AND",
      "path": "50"
    },
    "7095": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xE0"
    },
    "7097": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "SHL",
      "path": "50"
    },
    "7098": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "DUP2",
      "path": "50"
    },
    "7099": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "7100": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "7102": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "ADD",
      "path": "50"
    },
    "7103": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "7105": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "7107": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "7108": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "DUP1",
      "path": "50"
    },
    "7109": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "DUP4",
      "path": "50"
    },
    "7110": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "SUB",
      "path": "50"
    },
    "7111": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "DUP2",
      "path": "50"
    },
    "7112": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "DUP7",
      "path": "50"
    },
    "7113": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "GAS",
      "path": "50"
    },
    "7114": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "STATICCALL",
      "path": "50"
    },
    "7115": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "7116": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "DUP1",
      "path": "50"
    },
    "7117": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "7118": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1BDB"
    },
    "7121": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "7122": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "7123": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "7125": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "DUP1",
      "path": "50"
    },
    "7126": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "7127": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "7128": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "7130": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "REVERT",
      "path": "50"
    },
    "7131": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "7132": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "POP",
      "path": "50"
    },
    "7133": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "POP",
      "path": "50"
    },
    "7134": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "POP",
      "path": "50"
    },
    "7135": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "POP",
      "path": "50"
    },
    "7136": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "7138": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "7139": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "7140": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "7142": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "NOT",
      "path": "50"
    },
    "7143": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "7145": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "DUP3",
      "path": "50"
    },
    "7146": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "ADD",
      "path": "50"
    },
    "7147": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "AND",
      "path": "50"
    },
    "7148": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "DUP3",
      "path": "50"
    },
    "7149": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "ADD",
      "path": "50"
    },
    "7150": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "DUP1",
      "path": "50"
    },
    "7151": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "7153": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "7154": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "POP",
      "path": "50"
    },
    "7155": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "DUP2",
      "path": "50"
    },
    "7156": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "ADD",
      "path": "50"
    },
    "7157": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "7158": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1BFF"
    },
    "7161": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "7162": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "7163": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2803"
    },
    "7166": {
      "fn": "CLHouse.PropTxERC20",
      "jump": "i",
      "offset": [
        8969,
        8995
      ],
      "op": "JUMP",
      "path": "50"
    },
    "7167": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8969,
        8995
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "7168": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8945,
        8995
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "7169": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8945,
        8995
      ],
      "op": "POP",
      "path": "50"
    },
    "7170": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9064,
        9082
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "7172": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9088,
        9101
      ],
      "op": "DUP2",
      "path": "50"
    },
    "7173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7177": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7179": {
      "op": "SHL"
    },
    "7180": {
      "op": "SUB"
    },
    "7181": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9088,
        9114
      ],
      "op": "AND",
      "path": "50"
    },
    "7182": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9241,
        9244
      ],
      "op": "DUP9",
      "path": "50"
    },
    "7183": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9262,
        9275
      ],
      "op": "DUP9",
      "path": "50"
    },
    "7184": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9293,
        9305
      ],
      "op": "DUP9",
      "path": "50"
    },
    "7185": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9323,
        9335
      ],
      "op": "DUP9",
      "path": "50"
    },
    "7186": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9353,
        9363
      ],
      "op": "DUP9",
      "path": "50"
    },
    "7187": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9128,
        9377
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "7189": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9128,
        9377
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "7190": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9128,
        9377
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x24"
    },
    "7192": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9128,
        9377
      ],
      "op": "ADD",
      "path": "50"
    },
    "7193": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9128,
        9377
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1C26"
    },
    "7196": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9128,
        9377
      ],
      "op": "SWAP6",
      "path": "50"
    },
    "7197": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9128,
        9377
      ],
      "op": "SWAP5",
      "path": "50"
    },
    "7198": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9128,
        9377
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "7199": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9128,
        9377
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "7200": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9128,
        9377
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "7201": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9128,
        9377
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "7202": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9128,
        9377
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2BB1"
    },
    "7205": {
      "fn": "CLHouse.PropTxERC20",
      "jump": "i",
      "offset": [
        9128,
        9377
      ],
      "op": "JUMP",
      "path": "50"
    },
    "7206": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9128,
        9377
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "7207": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9128,
        9377
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "7209": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9128,
        9377
      ],
      "op": "DUP1",
      "path": "50"
    },
    "7210": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9128,
        9377
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "7211": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7213": {
      "op": "NOT"
    },
    "7214": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9128,
        9377
      ],
      "op": "DUP2",
      "path": "50"
    },
    "7215": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9128,
        9377
      ],
      "op": "DUP5",
      "path": "50"
    },
    "7216": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9128,
        9377
      ],
      "op": "SUB",
      "path": "50"
    },
    "7217": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9128,
        9377
      ],
      "op": "ADD",
      "path": "50"
    },
    "7218": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9128,
        9377
      ],
      "op": "DUP2",
      "path": "50"
    },
    "7219": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9128,
        9377
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "7220": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9128,
        9377
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "7221": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9128,
        9377
      ],
      "op": "DUP2",
      "path": "50"
    },
    "7222": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9128,
        9377
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "7223": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9128,
        9377
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "7225": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9128,
        9377
      ],
      "op": "DUP3",
      "path": "50"
    },
    "7226": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9128,
        9377
      ],
      "op": "ADD",
      "path": "50"
    },
    "7227": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9128,
        9377
      ],
      "op": "DUP1",
      "path": "50"
    },
    "7228": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9128,
        9377
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "7229": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7233": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7235": {
      "op": "SHL"
    },
    "7236": {
      "op": "SUB"
    },
    "7237": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9128,
        9377
      ],
      "op": "AND",
      "path": "50"
    },
    "7238": {
      "op": "PUSH4",
      "value": "0x6F2D58A7"
    },
    "7243": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "7245": {
      "op": "SHL"
    },
    "7246": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9128,
        9377
      ],
      "op": "OR",
      "path": "50"
    },
    "7247": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9128,
        9377
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "7248": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9128,
        9377
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "7249": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9088,
        9387
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "7250": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9088,
        9387
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1C5B"
    },
    "7253": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9088,
        9387
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "7254": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9128,
        9377
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "7255": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9088,
        9387
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2858"
    },
    "7258": {
      "fn": "CLHouse.PropTxERC20",
      "jump": "i",
      "offset": [
        9088,
        9387
      ],
      "op": "JUMP",
      "path": "50"
    },
    "7259": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9088,
        9387
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "7260": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9088,
        9387
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "7262": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9088,
        9387
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "7264": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9088,
        9387
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "7265": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9088,
        9387
      ],
      "op": "DUP1",
      "path": "50"
    },
    "7266": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9088,
        9387
      ],
      "op": "DUP4",
      "path": "50"
    },
    "7267": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9088,
        9387
      ],
      "op": "SUB",
      "path": "50"
    },
    "7268": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9088,
        9387
      ],
      "op": "DUP2",
      "path": "50"
    },
    "7269": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9088,
        9387
      ],
      "op": "DUP6",
      "path": "50"
    },
    "7270": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9088,
        9387
      ],
      "op": "GAS",
      "path": "50"
    },
    "7271": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9088,
        9387
      ],
      "op": "DELEGATECALL",
      "path": "50"
    },
    "7272": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9088,
        9387
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "7273": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9088,
        9387
      ],
      "op": "POP",
      "path": "50"
    },
    "7274": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9088,
        9387
      ],
      "op": "POP",
      "path": "50"
    },
    "7275": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9088,
        9387
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "7276": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9088,
        9387
      ],
      "op": "DUP1",
      "path": "50"
    },
    "7277": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9088,
        9387
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "7279": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9088,
        9387
      ],
      "op": "DUP2",
      "path": "50"
    },
    "7280": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9088,
        9387
      ],
      "op": "EQ",
      "path": "50"
    },
    "7281": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9088,
        9387
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1C96"
    },
    "7284": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9088,
        9387
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "7285": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9088,
        9387
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "7287": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9088,
        9387
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "7288": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9088,
        9387
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "7289": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9088,
        9387
      ],
      "op": "POP",
      "path": "50"
    },
    "7290": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9088,
        9387
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "7292": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9088,
        9387
      ],
      "op": "NOT",
      "path": "50"
    },
    "7293": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9088,
        9387
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x3F"
    },
    "7295": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9088,
        9387
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "7296": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9088,
        9387
      ],
      "op": "ADD",
      "path": "50"
    },
    "7297": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9088,
        9387
      ],
      "op": "AND",
      "path": "50"
    },
    "7298": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9088,
        9387
      ],
      "op": "DUP3",
      "path": "50"
    },
    "7299": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9088,
        9387
      ],
      "op": "ADD",
      "path": "50"
    },
    "7300": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9088,
        9387
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "7302": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9088,
        9387
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "7303": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9088,
        9387
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "7304": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9088,
        9387
      ],
      "op": "DUP3",
      "path": "50"
    },
    "7305": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9088,
        9387
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "7306": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9088,
        9387
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "7307": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9088,
        9387
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "7309": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9088,
        9387
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "7311": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9088,
        9387
      ],
      "op": "DUP5",
      "path": "50"
    },
    "7312": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9088,
        9387
      ],
      "op": "ADD",
      "path": "50"
    },
    "7313": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9088,
        9387
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "7314": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9088,
        9387
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1C9B"
    },
    "7317": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9088,
        9387
      ],
      "op": "JUMP",
      "path": "50"
    },
    "7318": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9088,
        9387
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "7319": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9088,
        9387
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x60"
    },
    "7321": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9088,
        9387
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "7322": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9088,
        9387
      ],
      "op": "POP",
      "path": "50"
    },
    "7323": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9088,
        9387
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "7324": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9088,
        9387
      ],
      "op": "POP",
      "path": "50"
    },
    "7325": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9063,
        9387
      ],
      "op": "POP",
      "path": "50"
    },
    "7326": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9063,
        9387
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "7327": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9063,
        9387
      ],
      "op": "POP",
      "path": "50"
    },
    "7328": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9438,
        9442
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "7330": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9432,
        9443
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "7331": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9468,
        9484
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "7332": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9520,
        9524
      ],
      "op": "DUP1",
      "path": "50"
    },
    "7333": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9517,
        9518
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "7335": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9512,
        9515
      ],
      "op": "DUP4",
      "path": "50"
    },
    "7336": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9497,
        9525
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "7337": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9549,
        9562
      ],
      "op": "DUP3",
      "path": "50"
    },
    "7338": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9538,
        9614
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1CB1"
    },
    "7341": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9538,
        9614
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "7342": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9595,
        9599
      ],
      "op": "DUP1",
      "path": "50"
    },
    "7343": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9590,
        9593
      ],
      "op": "DUP3",
      "path": "50"
    },
    "7344": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9583,
        9600
      ],
      "op": "REVERT",
      "path": "50"
    },
    "7345": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9538,
        9614
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "7346": {
      "op": "POP"
    },
    "7347": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9637,
        9647
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "7348": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9637,
        9647
      ],
      "op": "SWAP9",
      "path": "50"
    },
    "7349": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8707,
        9663
      ],
      "op": "SWAP8",
      "path": "50"
    },
    "7350": {
      "op": "POP"
    },
    "7351": {
      "op": "POP"
    },
    "7352": {
      "op": "POP"
    },
    "7353": {
      "op": "POP"
    },
    "7354": {
      "op": "POP"
    },
    "7355": {
      "op": "POP"
    },
    "7356": {
      "op": "POP"
    },
    "7357": {
      "op": "POP"
    },
    "7358": {
      "fn": "CLHouse.PropTxERC20",
      "jump": "o",
      "offset": [
        8707,
        9663
      ],
      "op": "JUMP",
      "path": "50"
    },
    "7359": {
      "op": "JUMPDEST"
    },
    "7360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7362": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7364": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7366": {
      "op": "SHL"
    },
    "7367": {
      "op": "SUB"
    },
    "7368": {
      "op": "DUP2"
    },
    "7369": {
      "op": "AND"
    },
    "7370": {
      "op": "DUP2"
    },
    "7371": {
      "op": "EQ"
    },
    "7372": {
      "op": "PUSH2",
      "value": "0x1CD4"
    },
    "7375": {
      "op": "JUMPI"
    },
    "7376": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7378": {
      "op": "DUP1"
    },
    "7379": {
      "op": "REVERT"
    },
    "7380": {
      "op": "JUMPDEST"
    },
    "7381": {
      "op": "POP"
    },
    "7382": {
      "jump": "o",
      "op": "JUMP"
    },
    "7383": {
      "op": "JUMPDEST"
    },
    "7384": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7389": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7391": {
      "op": "SHL"
    },
    "7392": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7394": {
      "op": "MSTORE"
    },
    "7395": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "7397": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7399": {
      "op": "MSTORE"
    },
    "7400": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7402": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7404": {
      "op": "REVERT"
    },
    "7405": {
      "op": "JUMPDEST"
    },
    "7406": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7408": {
      "op": "MLOAD"
    },
    "7409": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7411": {
      "op": "DUP2"
    },
    "7412": {
      "op": "ADD"
    },
    "7413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7417": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7419": {
      "op": "SHL"
    },
    "7420": {
      "op": "SUB"
    },
    "7421": {
      "op": "DUP2"
    },
    "7422": {
      "op": "GT"
    },
    "7423": {
      "op": "DUP3"
    },
    "7424": {
      "op": "DUP3"
    },
    "7425": {
      "op": "LT"
    },
    "7426": {
      "op": "OR"
    },
    "7427": {
      "op": "ISZERO"
    },
    "7428": {
      "op": "PUSH2",
      "value": "0x1D0F"
    },
    "7431": {
      "op": "JUMPI"
    },
    "7432": {
      "op": "PUSH2",
      "value": "0x1D0F"
    },
    "7435": {
      "op": "PUSH2",
      "value": "0x1CD7"
    },
    "7438": {
      "jump": "i",
      "op": "JUMP"
    },
    "7439": {
      "op": "JUMPDEST"
    },
    "7440": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7442": {
      "op": "MSTORE"
    },
    "7443": {
      "op": "SWAP1"
    },
    "7444": {
      "jump": "o",
      "op": "JUMP"
    },
    "7445": {
      "op": "JUMPDEST"
    },
    "7446": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7448": {
      "op": "MLOAD"
    },
    "7449": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7451": {
      "op": "DUP3"
    },
    "7452": {
      "op": "ADD"
    },
    "7453": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7455": {
      "op": "NOT"
    },
    "7456": {
      "op": "AND"
    },
    "7457": {
      "op": "DUP2"
    },
    "7458": {
      "op": "ADD"
    },
    "7459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7463": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7465": {
      "op": "SHL"
    },
    "7466": {
      "op": "SUB"
    },
    "7467": {
      "op": "DUP2"
    },
    "7468": {
      "op": "GT"
    },
    "7469": {
      "op": "DUP3"
    },
    "7470": {
      "op": "DUP3"
    },
    "7471": {
      "op": "LT"
    },
    "7472": {
      "op": "OR"
    },
    "7473": {
      "op": "ISZERO"
    },
    "7474": {
      "op": "PUSH2",
      "value": "0x1D3D"
    },
    "7477": {
      "op": "JUMPI"
    },
    "7478": {
      "op": "PUSH2",
      "value": "0x1D3D"
    },
    "7481": {
      "op": "PUSH2",
      "value": "0x1CD7"
    },
    "7484": {
      "jump": "i",
      "op": "JUMP"
    },
    "7485": {
      "op": "JUMPDEST"
    },
    "7486": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7488": {
      "op": "MSTORE"
    },
    "7489": {
      "op": "SWAP2"
    },
    "7490": {
      "op": "SWAP1"
    },
    "7491": {
      "op": "POP"
    },
    "7492": {
      "jump": "o",
      "op": "JUMP"
    },
    "7493": {
      "op": "JUMPDEST"
    },
    "7494": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7496": {
      "op": "DUP3"
    },
    "7497": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7499": {
      "op": "DUP4"
    },
    "7500": {
      "op": "ADD"
    },
    "7501": {
      "op": "SLT"
    },
    "7502": {
      "op": "PUSH2",
      "value": "0x1D56"
    },
    "7505": {
      "op": "JUMPI"
    },
    "7506": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7508": {
      "op": "DUP1"
    },
    "7509": {
      "op": "REVERT"
    },
    "7510": {
      "op": "JUMPDEST"
    },
    "7511": {
      "op": "DUP2"
    },
    "7512": {
      "op": "CALLDATALOAD"
    },
    "7513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7515": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7517": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7519": {
      "op": "SHL"
    },
    "7520": {
      "op": "SUB"
    },
    "7521": {
      "op": "DUP2"
    },
    "7522": {
      "op": "GT"
    },
    "7523": {
      "op": "ISZERO"
    },
    "7524": {
      "op": "PUSH2",
      "value": "0x1D6F"
    },
    "7527": {
      "op": "JUMPI"
    },
    "7528": {
      "op": "PUSH2",
      "value": "0x1D6F"
    },
    "7531": {
      "op": "PUSH2",
      "value": "0x1CD7"
    },
    "7534": {
      "jump": "i",
      "op": "JUMP"
    },
    "7535": {
      "op": "JUMPDEST"
    },
    "7536": {
      "op": "PUSH2",
      "value": "0x1D82"
    },
    "7539": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7541": {
      "op": "DUP3"
    },
    "7542": {
      "op": "ADD"
    },
    "7543": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7545": {
      "op": "NOT"
    },
    "7546": {
      "op": "AND"
    },
    "7547": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7549": {
      "op": "ADD"
    },
    "7550": {
      "op": "PUSH2",
      "value": "0x1D15"
    },
    "7553": {
      "jump": "i",
      "op": "JUMP"
    },
    "7554": {
      "op": "JUMPDEST"
    },
    "7555": {
      "op": "DUP2"
    },
    "7556": {
      "op": "DUP2"
    },
    "7557": {
      "op": "MSTORE"
    },
    "7558": {
      "op": "DUP5"
    },
    "7559": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7561": {
      "op": "DUP4"
    },
    "7562": {
      "op": "DUP7"
    },
    "7563": {
      "op": "ADD"
    },
    "7564": {
      "op": "ADD"
    },
    "7565": {
      "op": "GT"
    },
    "7566": {
      "op": "ISZERO"
    },
    "7567": {
      "op": "PUSH2",
      "value": "0x1D97"
    },
    "7570": {
      "op": "JUMPI"
    },
    "7571": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7573": {
      "op": "DUP1"
    },
    "7574": {
      "op": "REVERT"
    },
    "7575": {
      "op": "JUMPDEST"
    },
    "7576": {
      "op": "DUP2"
    },
    "7577": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7579": {
      "op": "DUP6"
    },
    "7580": {
      "op": "ADD"
    },
    "7581": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7583": {
      "op": "DUP4"
    },
    "7584": {
      "op": "ADD"
    },
    "7585": {
      "op": "CALLDATACOPY"
    },
    "7586": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7588": {
      "op": "SWAP2"
    },
    "7589": {
      "op": "DUP2"
    },
    "7590": {
      "op": "ADD"
    },
    "7591": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7593": {
      "op": "ADD"
    },
    "7594": {
      "op": "SWAP2"
    },
    "7595": {
      "op": "SWAP1"
    },
    "7596": {
      "op": "SWAP2"
    },
    "7597": {
      "op": "MSTORE"
    },
    "7598": {
      "op": "SWAP4"
    },
    "7599": {
      "op": "SWAP3"
    },
    "7600": {
      "op": "POP"
    },
    "7601": {
      "op": "POP"
    },
    "7602": {
      "op": "POP"
    },
    "7603": {
      "jump": "o",
      "op": "JUMP"
    },
    "7604": {
      "op": "JUMPDEST"
    },
    "7605": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7607": {
      "op": "DUP1"
    },
    "7608": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7610": {
      "op": "DUP1"
    },
    "7611": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7613": {
      "op": "DUP6"
    },
    "7614": {
      "op": "DUP8"
    },
    "7615": {
      "op": "SUB"
    },
    "7616": {
      "op": "SLT"
    },
    "7617": {
      "op": "ISZERO"
    },
    "7618": {
      "op": "PUSH2",
      "value": "0x1DCA"
    },
    "7621": {
      "op": "JUMPI"
    },
    "7622": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7624": {
      "op": "DUP1"
    },
    "7625": {
      "op": "REVERT"
    },
    "7626": {
      "op": "JUMPDEST"
    },
    "7627": {
      "op": "DUP5"
    },
    "7628": {
      "op": "CALLDATALOAD"
    },
    "7629": {
      "op": "PUSH2",
      "value": "0x1DD5"
    },
    "7632": {
      "op": "DUP2"
    },
    "7633": {
      "op": "PUSH2",
      "value": "0x1CBF"
    },
    "7636": {
      "jump": "i",
      "op": "JUMP"
    },
    "7637": {
      "op": "JUMPDEST"
    },
    "7638": {
      "op": "SWAP4"
    },
    "7639": {
      "op": "POP"
    },
    "7640": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7642": {
      "op": "DUP6"
    },
    "7643": {
      "op": "ADD"
    },
    "7644": {
      "op": "CALLDATALOAD"
    },
    "7645": {
      "op": "SWAP3"
    },
    "7646": {
      "op": "POP"
    },
    "7647": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7649": {
      "op": "DUP6"
    },
    "7650": {
      "op": "ADD"
    },
    "7651": {
      "op": "CALLDATALOAD"
    },
    "7652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7654": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7656": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7658": {
      "op": "SHL"
    },
    "7659": {
      "op": "SUB"
    },
    "7660": {
      "op": "DUP2"
    },
    "7661": {
      "op": "GT"
    },
    "7662": {
      "op": "ISZERO"
    },
    "7663": {
      "op": "PUSH2",
      "value": "0x1DF7"
    },
    "7666": {
      "op": "JUMPI"
    },
    "7667": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7669": {
      "op": "DUP1"
    },
    "7670": {
      "op": "REVERT"
    },
    "7671": {
      "op": "JUMPDEST"
    },
    "7672": {
      "op": "PUSH2",
      "value": "0x1E03"
    },
    "7675": {
      "op": "DUP8"
    },
    "7676": {
      "op": "DUP3"
    },
    "7677": {
      "op": "DUP9"
    },
    "7678": {
      "op": "ADD"
    },
    "7679": {
      "op": "PUSH2",
      "value": "0x1D45"
    },
    "7682": {
      "jump": "i",
      "op": "JUMP"
    },
    "7683": {
      "op": "JUMPDEST"
    },
    "7684": {
      "op": "SWAP5"
    },
    "7685": {
      "op": "SWAP8"
    },
    "7686": {
      "op": "SWAP4"
    },
    "7687": {
      "op": "SWAP7"
    },
    "7688": {
      "op": "POP"
    },
    "7689": {
      "op": "SWAP4"
    },
    "7690": {
      "op": "SWAP5"
    },
    "7691": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7693": {
      "op": "ADD"
    },
    "7694": {
      "op": "CALLDATALOAD"
    },
    "7695": {
      "op": "SWAP4"
    },
    "7696": {
      "op": "POP"
    },
    "7697": {
      "op": "POP"
    },
    "7698": {
      "op": "POP"
    },
    "7699": {
      "jump": "o",
      "op": "JUMP"
    },
    "7700": {
      "op": "JUMPDEST"
    },
    "7701": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7703": {
      "op": "DUP1"
    },
    "7704": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7706": {
      "op": "DUP1"
    },
    "7707": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7709": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7711": {
      "op": "DUP7"
    },
    "7712": {
      "op": "DUP9"
    },
    "7713": {
      "op": "SUB"
    },
    "7714": {
      "op": "SLT"
    },
    "7715": {
      "op": "ISZERO"
    },
    "7716": {
      "op": "PUSH2",
      "value": "0x1E2C"
    },
    "7719": {
      "op": "JUMPI"
    },
    "7720": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7722": {
      "op": "DUP1"
    },
    "7723": {
      "op": "REVERT"
    },
    "7724": {
      "op": "JUMPDEST"
    },
    "7725": {
      "op": "DUP6"
    },
    "7726": {
      "op": "CALLDATALOAD"
    },
    "7727": {
      "op": "PUSH2",
      "value": "0x1E37"
    },
    "7730": {
      "op": "DUP2"
    },
    "7731": {
      "op": "PUSH2",
      "value": "0x1CBF"
    },
    "7734": {
      "jump": "i",
      "op": "JUMP"
    },
    "7735": {
      "op": "JUMPDEST"
    },
    "7736": {
      "op": "SWAP5"
    },
    "7737": {
      "op": "POP"
    },
    "7738": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7740": {
      "op": "DUP7"
    },
    "7741": {
      "op": "ADD"
    },
    "7742": {
      "op": "CALLDATALOAD"
    },
    "7743": {
      "op": "PUSH2",
      "value": "0x1E47"
    },
    "7746": {
      "op": "DUP2"
    },
    "7747": {
      "op": "PUSH2",
      "value": "0x1CBF"
    },
    "7750": {
      "jump": "i",
      "op": "JUMP"
    },
    "7751": {
      "op": "JUMPDEST"
    },
    "7752": {
      "op": "SWAP4"
    },
    "7753": {
      "op": "POP"
    },
    "7754": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7756": {
      "op": "DUP7"
    },
    "7757": {
      "op": "ADD"
    },
    "7758": {
      "op": "CALLDATALOAD"
    },
    "7759": {
      "op": "SWAP3"
    },
    "7760": {
      "op": "POP"
    },
    "7761": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7763": {
      "op": "DUP7"
    },
    "7764": {
      "op": "ADD"
    },
    "7765": {
      "op": "CALLDATALOAD"
    },
    "7766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7770": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7772": {
      "op": "SHL"
    },
    "7773": {
      "op": "SUB"
    },
    "7774": {
      "op": "DUP2"
    },
    "7775": {
      "op": "GT"
    },
    "7776": {
      "op": "ISZERO"
    },
    "7777": {
      "op": "PUSH2",
      "value": "0x1E69"
    },
    "7780": {
      "op": "JUMPI"
    },
    "7781": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7783": {
      "op": "DUP1"
    },
    "7784": {
      "op": "REVERT"
    },
    "7785": {
      "op": "JUMPDEST"
    },
    "7786": {
      "op": "PUSH2",
      "value": "0x1E75"
    },
    "7789": {
      "op": "DUP9"
    },
    "7790": {
      "op": "DUP3"
    },
    "7791": {
      "op": "DUP10"
    },
    "7792": {
      "op": "ADD"
    },
    "7793": {
      "op": "PUSH2",
      "value": "0x1D45"
    },
    "7796": {
      "jump": "i",
      "op": "JUMP"
    },
    "7797": {
      "op": "JUMPDEST"
    },
    "7798": {
      "op": "SWAP6"
    },
    "7799": {
      "op": "SWAP9"
    },
    "7800": {
      "op": "SWAP5"
    },
    "7801": {
      "op": "SWAP8"
    },
    "7802": {
      "op": "POP"
    },
    "7803": {
      "op": "SWAP3"
    },
    "7804": {
      "op": "SWAP6"
    },
    "7805": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7807": {
      "op": "ADD"
    },
    "7808": {
      "op": "CALLDATALOAD"
    },
    "7809": {
      "op": "SWAP4"
    },
    "7810": {
      "op": "SWAP3"
    },
    "7811": {
      "op": "POP"
    },
    "7812": {
      "op": "POP"
    },
    "7813": {
      "op": "POP"
    },
    "7814": {
      "jump": "o",
      "op": "JUMP"
    },
    "7815": {
      "op": "JUMPDEST"
    },
    "7816": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7818": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7820": {
      "op": "DUP3"
    },
    "7821": {
      "op": "DUP5"
    },
    "7822": {
      "op": "SUB"
    },
    "7823": {
      "op": "SLT"
    },
    "7824": {
      "op": "ISZERO"
    },
    "7825": {
      "op": "PUSH2",
      "value": "0x1E99"
    },
    "7828": {
      "op": "JUMPI"
    },
    "7829": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7831": {
      "op": "DUP1"
    },
    "7832": {
      "op": "REVERT"
    },
    "7833": {
      "op": "JUMPDEST"
    },
    "7834": {
      "op": "POP"
    },
    "7835": {
      "op": "CALLDATALOAD"
    },
    "7836": {
      "op": "SWAP2"
    },
    "7837": {
      "op": "SWAP1"
    },
    "7838": {
      "op": "POP"
    },
    "7839": {
      "jump": "o",
      "op": "JUMP"
    },
    "7840": {
      "op": "JUMPDEST"
    },
    "7841": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7843": {
      "op": "JUMPDEST"
    },
    "7844": {
      "op": "DUP4"
    },
    "7845": {
      "op": "DUP2"
    },
    "7846": {
      "op": "LT"
    },
    "7847": {
      "op": "ISZERO"
    },
    "7848": {
      "op": "PUSH2",
      "value": "0x1EBB"
    },
    "7851": {
      "op": "JUMPI"
    },
    "7852": {
      "op": "DUP2"
    },
    "7853": {
      "op": "DUP2"
    },
    "7854": {
      "op": "ADD"
    },
    "7855": {
      "op": "MLOAD"
    },
    "7856": {
      "op": "DUP4"
    },
    "7857": {
      "op": "DUP3"
    },
    "7858": {
      "op": "ADD"
    },
    "7859": {
      "op": "MSTORE"
    },
    "7860": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7862": {
      "op": "ADD"
    },
    "7863": {
      "op": "PUSH2",
      "value": "0x1EA3"
    },
    "7866": {
      "op": "JUMP"
    },
    "7867": {
      "op": "JUMPDEST"
    },
    "7868": {
      "op": "DUP4"
    },
    "7869": {
      "op": "DUP2"
    },
    "7870": {
      "op": "GT"
    },
    "7871": {
      "op": "ISZERO"
    },
    "7872": {
      "op": "PUSH2",
      "value": "0x1543"
    },
    "7875": {
      "op": "JUMPI"
    },
    "7876": {
      "op": "POP"
    },
    "7877": {
      "op": "POP"
    },
    "7878": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7880": {
      "op": "SWAP2"
    },
    "7881": {
      "op": "ADD"
    },
    "7882": {
      "op": "MSTORE"
    },
    "7883": {
      "jump": "o",
      "op": "JUMP"
    },
    "7884": {
      "op": "JUMPDEST"
    },
    "7885": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7887": {
      "op": "DUP2"
    },
    "7888": {
      "op": "MLOAD"
    },
    "7889": {
      "op": "DUP1"
    },
    "7890": {
      "op": "DUP5"
    },
    "7891": {
      "op": "MSTORE"
    },
    "7892": {
      "op": "PUSH2",
      "value": "0x1EE4"
    },
    "7895": {
      "op": "DUP2"
    },
    "7896": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7898": {
      "op": "DUP7"
    },
    "7899": {
      "op": "ADD"
    },
    "7900": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7902": {
      "op": "DUP7"
    },
    "7903": {
      "op": "ADD"
    },
    "7904": {
      "op": "PUSH2",
      "value": "0x1EA0"
    },
    "7907": {
      "jump": "i",
      "op": "JUMP"
    },
    "7908": {
      "op": "JUMPDEST"
    },
    "7909": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7911": {
      "op": "ADD"
    },
    "7912": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7914": {
      "op": "NOT"
    },
    "7915": {
      "op": "AND"
    },
    "7916": {
      "op": "SWAP3"
    },
    "7917": {
      "op": "SWAP1"
    },
    "7918": {
      "op": "SWAP3"
    },
    "7919": {
      "op": "ADD"
    },
    "7920": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7922": {
      "op": "ADD"
    },
    "7923": {
      "op": "SWAP3"
    },
    "7924": {
      "op": "SWAP2"
    },
    "7925": {
      "op": "POP"
    },
    "7926": {
      "op": "POP"
    },
    "7927": {
      "jump": "o",
      "op": "JUMP"
    },
    "7928": {
      "op": "JUMPDEST"
    },
    "7929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7933": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7935": {
      "op": "SHL"
    },
    "7936": {
      "op": "SUB"
    },
    "7937": {
      "op": "DUP5"
    },
    "7938": {
      "op": "AND"
    },
    "7939": {
      "op": "DUP2"
    },
    "7940": {
      "op": "MSTORE"
    },
    "7941": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7943": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7945": {
      "op": "DUP3"
    },
    "7946": {
      "op": "ADD"
    },
    "7947": {
      "op": "DUP2"
    },
    "7948": {
      "op": "SWAP1"
    },
    "7949": {
      "op": "MSTORE"
    },
    "7950": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7952": {
      "op": "SWAP1"
    },
    "7953": {
      "op": "PUSH2",
      "value": "0x1F1C"
    },
    "7956": {
      "op": "SWAP1"
    },
    "7957": {
      "op": "DUP4"
    },
    "7958": {
      "op": "ADD"
    },
    "7959": {
      "op": "DUP6"
    },
    "7960": {
      "op": "PUSH2",
      "value": "0x1ECC"
    },
    "7963": {
      "jump": "i",
      "op": "JUMP"
    },
    "7964": {
      "op": "JUMPDEST"
    },
    "7965": {
      "op": "SWAP1"
    },
    "7966": {
      "op": "POP"
    },
    "7967": {
      "op": "DUP3"
    },
    "7968": {
      "op": "ISZERO"
    },
    "7969": {
      "op": "ISZERO"
    },
    "7970": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7972": {
      "op": "DUP4"
    },
    "7973": {
      "op": "ADD"
    },
    "7974": {
      "op": "MSTORE"
    },
    "7975": {
      "op": "SWAP5"
    },
    "7976": {
      "op": "SWAP4"
    },
    "7977": {
      "op": "POP"
    },
    "7978": {
      "op": "POP"
    },
    "7979": {
      "op": "POP"
    },
    "7980": {
      "op": "POP"
    },
    "7981": {
      "jump": "o",
      "op": "JUMP"
    },
    "7982": {
      "op": "JUMPDEST"
    },
    "7983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7987": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7989": {
      "op": "SHL"
    },
    "7990": {
      "op": "SUB"
    },
    "7991": {
      "op": "DUP7"
    },
    "7992": {
      "op": "AND"
    },
    "7993": {
      "op": "DUP2"
    },
    "7994": {
      "op": "MSTORE"
    },
    "7995": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7997": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7999": {
      "op": "DUP3"
    },
    "8000": {
      "op": "ADD"
    },
    "8001": {
      "op": "DUP2"
    },
    "8002": {
      "op": "SWAP1"
    },
    "8003": {
      "op": "MSTORE"
    },
    "8004": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8006": {
      "op": "SWAP1"
    },
    "8007": {
      "op": "PUSH2",
      "value": "0x1F52"
    },
    "8010": {
      "op": "SWAP1"
    },
    "8011": {
      "op": "DUP4"
    },
    "8012": {
      "op": "ADD"
    },
    "8013": {
      "op": "DUP8"
    },
    "8014": {
      "op": "PUSH2",
      "value": "0x1ECC"
    },
    "8017": {
      "jump": "i",
      "op": "JUMP"
    },
    "8018": {
      "op": "JUMPDEST"
    },
    "8019": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8021": {
      "op": "DUP4"
    },
    "8022": {
      "op": "ADD"
    },
    "8023": {
      "op": "SWAP6"
    },
    "8024": {
      "op": "SWAP1"
    },
    "8025": {
      "op": "SWAP6"
    },
    "8026": {
      "op": "MSTORE"
    },
    "8027": {
      "op": "POP"
    },
    "8028": {
      "op": "SWAP2"
    },
    "8029": {
      "op": "ISZERO"
    },
    "8030": {
      "op": "ISZERO"
    },
    "8031": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8033": {
      "op": "DUP4"
    },
    "8034": {
      "op": "ADD"
    },
    "8035": {
      "op": "MSTORE"
    },
    "8036": {
      "op": "ISZERO"
    },
    "8037": {
      "op": "ISZERO"
    },
    "8038": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8040": {
      "op": "SWAP1"
    },
    "8041": {
      "op": "SWAP2"
    },
    "8042": {
      "op": "ADD"
    },
    "8043": {
      "op": "MSTORE"
    },
    "8044": {
      "op": "SWAP3"
    },
    "8045": {
      "op": "SWAP2"
    },
    "8046": {
      "op": "POP"
    },
    "8047": {
      "op": "POP"
    },
    "8048": {
      "jump": "o",
      "op": "JUMP"
    },
    "8049": {
      "op": "JUMPDEST"
    },
    "8050": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8052": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8054": {
      "op": "DUP1"
    },
    "8055": {
      "op": "DUP4"
    },
    "8056": {
      "op": "ADD"
    },
    "8057": {
      "op": "DUP2"
    },
    "8058": {
      "op": "DUP5"
    },
    "8059": {
      "op": "MSTORE"
    },
    "8060": {
      "op": "DUP1"
    },
    "8061": {
      "op": "DUP6"
    },
    "8062": {
      "op": "MLOAD"
    },
    "8063": {
      "op": "DUP1"
    },
    "8064": {
      "op": "DUP4"
    },
    "8065": {
      "op": "MSTORE"
    },
    "8066": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8068": {
      "op": "SWAP3"
    },
    "8069": {
      "op": "POP"
    },
    "8070": {
      "op": "DUP3"
    },
    "8071": {
      "op": "DUP7"
    },
    "8072": {
      "op": "ADD"
    },
    "8073": {
      "op": "SWAP2"
    },
    "8074": {
      "op": "POP"
    },
    "8075": {
      "op": "DUP3"
    },
    "8076": {
      "op": "DUP2"
    },
    "8077": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "8079": {
      "op": "SHL"
    },
    "8080": {
      "op": "DUP8"
    },
    "8081": {
      "op": "ADD"
    },
    "8082": {
      "op": "ADD"
    },
    "8083": {
      "op": "DUP5"
    },
    "8084": {
      "op": "DUP9"
    },
    "8085": {
      "op": "ADD"
    },
    "8086": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8088": {
      "op": "JUMPDEST"
    },
    "8089": {
      "op": "DUP4"
    },
    "8090": {
      "op": "DUP2"
    },
    "8091": {
      "op": "LT"
    },
    "8092": {
      "op": "ISZERO"
    },
    "8093": {
      "op": "PUSH2",
      "value": "0x1FF1"
    },
    "8096": {
      "op": "JUMPI"
    },
    "8097": {
      "op": "DUP9"
    },
    "8098": {
      "op": "DUP4"
    },
    "8099": {
      "op": "SUB"
    },
    "8100": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "8102": {
      "op": "NOT"
    },
    "8103": {
      "op": "ADD"
    },
    "8104": {
      "op": "DUP6"
    },
    "8105": {
      "op": "MSTORE"
    },
    "8106": {
      "op": "DUP2"
    },
    "8107": {
      "op": "MLOAD"
    },
    "8108": {
      "op": "DUP1"
    },
    "8109": {
      "op": "MLOAD"
    },
    "8110": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8114": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8116": {
      "op": "SHL"
    },
    "8117": {
      "op": "SUB"
    },
    "8118": {
      "op": "AND"
    },
    "8119": {
      "op": "DUP5"
    },
    "8120": {
      "op": "MSTORE"
    },
    "8121": {
      "op": "DUP8"
    },
    "8122": {
      "op": "DUP2"
    },
    "8123": {
      "op": "ADD"
    },
    "8124": {
      "op": "MLOAD"
    },
    "8125": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8127": {
      "op": "DUP10"
    },
    "8128": {
      "op": "DUP7"
    },
    "8129": {
      "op": "ADD"
    },
    "8130": {
      "op": "DUP2"
    },
    "8131": {
      "op": "SWAP1"
    },
    "8132": {
      "op": "MSTORE"
    },
    "8133": {
      "op": "SWAP1"
    },
    "8134": {
      "op": "PUSH2",
      "value": "0x1FD1"
    },
    "8137": {
      "op": "DUP3"
    },
    "8138": {
      "op": "DUP8"
    },
    "8139": {
      "op": "ADD"
    },
    "8140": {
      "op": "DUP3"
    },
    "8141": {
      "op": "PUSH2",
      "value": "0x1ECC"
    },
    "8144": {
      "jump": "i",
      "op": "JUMP"
    },
    "8145": {
      "op": "JUMPDEST"
    },
    "8146": {
      "op": "SWAP3"
    },
    "8147": {
      "op": "DUP10"
    },
    "8148": {
      "op": "ADD"
    },
    "8149": {
      "op": "MLOAD"
    },
    "8150": {
      "op": "ISZERO"
    },
    "8151": {
      "op": "ISZERO"
    },
    "8152": {
      "op": "SWAP6"
    },
    "8153": {
      "op": "DUP10"
    },
    "8154": {
      "op": "ADD"
    },
    "8155": {
      "op": "SWAP6"
    },
    "8156": {
      "op": "SWAP1"
    },
    "8157": {
      "op": "SWAP6"
    },
    "8158": {
      "op": "MSTORE"
    },
    "8159": {
      "op": "POP"
    },
    "8160": {
      "op": "SWAP5"
    },
    "8161": {
      "op": "DUP8"
    },
    "8162": {
      "op": "ADD"
    },
    "8163": {
      "op": "SWAP5"
    },
    "8164": {
      "op": "SWAP3"
    },
    "8165": {
      "op": "POP"
    },
    "8166": {
      "op": "SWAP1"
    },
    "8167": {
      "op": "DUP7"
    },
    "8168": {
      "op": "ADD"
    },
    "8169": {
      "op": "SWAP1"
    },
    "8170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8172": {
      "op": "ADD"
    },
    "8173": {
      "op": "PUSH2",
      "value": "0x1F98"
    },
    "8176": {
      "op": "JUMP"
    },
    "8177": {
      "op": "JUMPDEST"
    },
    "8178": {
      "op": "POP"
    },
    "8179": {
      "op": "SWAP1"
    },
    "8180": {
      "op": "SWAP9"
    },
    "8181": {
      "op": "SWAP8"
    },
    "8182": {
      "op": "POP"
    },
    "8183": {
      "op": "POP"
    },
    "8184": {
      "op": "POP"
    },
    "8185": {
      "op": "POP"
    },
    "8186": {
      "op": "POP"
    },
    "8187": {
      "op": "POP"
    },
    "8188": {
      "op": "POP"
    },
    "8189": {
      "op": "POP"
    },
    "8190": {
      "jump": "o",
      "op": "JUMP"
    },
    "8191": {
      "op": "JUMPDEST"
    },
    "8192": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8194": {
      "op": "DUP1"
    },
    "8195": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8197": {
      "op": "DUP1"
    },
    "8198": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8200": {
      "op": "DUP6"
    },
    "8201": {
      "op": "DUP8"
    },
    "8202": {
      "op": "SUB"
    },
    "8203": {
      "op": "SLT"
    },
    "8204": {
      "op": "ISZERO"
    },
    "8205": {
      "op": "PUSH2",
      "value": "0x2015"
    },
    "8208": {
      "op": "JUMPI"
    },
    "8209": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8211": {
      "op": "DUP1"
    },
    "8212": {
      "op": "REVERT"
    },
    "8213": {
      "op": "JUMPDEST"
    },
    "8214": {
      "op": "DUP5"
    },
    "8215": {
      "op": "CALLDATALOAD"
    },
    "8216": {
      "op": "PUSH2",
      "value": "0x2020"
    },
    "8219": {
      "op": "DUP2"
    },
    "8220": {
      "op": "PUSH2",
      "value": "0x1CBF"
    },
    "8223": {
      "jump": "i",
      "op": "JUMP"
    },
    "8224": {
      "op": "JUMPDEST"
    },
    "8225": {
      "op": "SWAP4"
    },
    "8226": {
      "op": "POP"
    },
    "8227": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8229": {
      "op": "DUP6"
    },
    "8230": {
      "op": "ADD"
    },
    "8231": {
      "op": "CALLDATALOAD"
    },
    "8232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8236": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8238": {
      "op": "SHL"
    },
    "8239": {
      "op": "SUB"
    },
    "8240": {
      "op": "DUP1"
    },
    "8241": {
      "op": "DUP3"
    },
    "8242": {
      "op": "GT"
    },
    "8243": {
      "op": "ISZERO"
    },
    "8244": {
      "op": "PUSH2",
      "value": "0x203C"
    },
    "8247": {
      "op": "JUMPI"
    },
    "8248": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8250": {
      "op": "DUP1"
    },
    "8251": {
      "op": "REVERT"
    },
    "8252": {
      "op": "JUMPDEST"
    },
    "8253": {
      "op": "PUSH2",
      "value": "0x2048"
    },
    "8256": {
      "op": "DUP9"
    },
    "8257": {
      "op": "DUP4"
    },
    "8258": {
      "op": "DUP10"
    },
    "8259": {
      "op": "ADD"
    },
    "8260": {
      "op": "PUSH2",
      "value": "0x1D45"
    },
    "8263": {
      "jump": "i",
      "op": "JUMP"
    },
    "8264": {
      "op": "JUMPDEST"
    },
    "8265": {
      "op": "SWAP5"
    },
    "8266": {
      "op": "POP"
    },
    "8267": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8269": {
      "op": "DUP8"
    },
    "8270": {
      "op": "ADD"
    },
    "8271": {
      "op": "CALLDATALOAD"
    },
    "8272": {
      "op": "SWAP4"
    },
    "8273": {
      "op": "POP"
    },
    "8274": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8276": {
      "op": "DUP8"
    },
    "8277": {
      "op": "ADD"
    },
    "8278": {
      "op": "CALLDATALOAD"
    },
    "8279": {
      "op": "SWAP2"
    },
    "8280": {
      "op": "POP"
    },
    "8281": {
      "op": "DUP1"
    },
    "8282": {
      "op": "DUP3"
    },
    "8283": {
      "op": "GT"
    },
    "8284": {
      "op": "ISZERO"
    },
    "8285": {
      "op": "PUSH2",
      "value": "0x2065"
    },
    "8288": {
      "op": "JUMPI"
    },
    "8289": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8291": {
      "op": "DUP1"
    },
    "8292": {
      "op": "REVERT"
    },
    "8293": {
      "op": "JUMPDEST"
    },
    "8294": {
      "op": "POP"
    },
    "8295": {
      "op": "PUSH2",
      "value": "0x2072"
    },
    "8298": {
      "op": "DUP8"
    },
    "8299": {
      "op": "DUP3"
    },
    "8300": {
      "op": "DUP9"
    },
    "8301": {
      "op": "ADD"
    },
    "8302": {
      "op": "PUSH2",
      "value": "0x1D45"
    },
    "8305": {
      "jump": "i",
      "op": "JUMP"
    },
    "8306": {
      "op": "JUMPDEST"
    },
    "8307": {
      "op": "SWAP2"
    },
    "8308": {
      "op": "POP"
    },
    "8309": {
      "op": "POP"
    },
    "8310": {
      "op": "SWAP3"
    },
    "8311": {
      "op": "SWAP6"
    },
    "8312": {
      "op": "SWAP2"
    },
    "8313": {
      "op": "SWAP5"
    },
    "8314": {
      "op": "POP"
    },
    "8315": {
      "op": "SWAP3"
    },
    "8316": {
      "op": "POP"
    },
    "8317": {
      "jump": "o",
      "op": "JUMP"
    },
    "8318": {
      "op": "JUMPDEST"
    },
    "8319": {
      "op": "DUP1"
    },
    "8320": {
      "op": "CALLDATALOAD"
    },
    "8321": {
      "op": "DUP1"
    },
    "8322": {
      "op": "ISZERO"
    },
    "8323": {
      "op": "ISZERO"
    },
    "8324": {
      "op": "DUP2"
    },
    "8325": {
      "op": "EQ"
    },
    "8326": {
      "op": "PUSH2",
      "value": "0x208E"
    },
    "8329": {
      "op": "JUMPI"
    },
    "8330": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8332": {
      "op": "DUP1"
    },
    "8333": {
      "op": "REVERT"
    },
    "8334": {
      "op": "JUMPDEST"
    },
    "8335": {
      "op": "SWAP2"
    },
    "8336": {
      "op": "SWAP1"
    },
    "8337": {
      "op": "POP"
    },
    "8338": {
      "jump": "o",
      "op": "JUMP"
    },
    "8339": {
      "op": "JUMPDEST"
    },
    "8340": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8342": {
      "op": "DUP1"
    },
    "8343": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8345": {
      "op": "DUP1"
    },
    "8346": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8348": {
      "op": "DUP1"
    },
    "8349": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "8351": {
      "op": "DUP8"
    },
    "8352": {
      "op": "DUP10"
    },
    "8353": {
      "op": "SUB"
    },
    "8354": {
      "op": "SLT"
    },
    "8355": {
      "op": "ISZERO"
    },
    "8356": {
      "op": "PUSH2",
      "value": "0x20AC"
    },
    "8359": {
      "op": "JUMPI"
    },
    "8360": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8362": {
      "op": "DUP1"
    },
    "8363": {
      "op": "REVERT"
    },
    "8364": {
      "op": "JUMPDEST"
    },
    "8365": {
      "op": "DUP7"
    },
    "8366": {
      "op": "CALLDATALOAD"
    },
    "8367": {
      "op": "PUSH2",
      "value": "0x20B7"
    },
    "8370": {
      "op": "DUP2"
    },
    "8371": {
      "op": "PUSH2",
      "value": "0x1CBF"
    },
    "8374": {
      "jump": "i",
      "op": "JUMP"
    },
    "8375": {
      "op": "JUMPDEST"
    },
    "8376": {
      "op": "SWAP6"
    },
    "8377": {
      "op": "POP"
    },
    "8378": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8380": {
      "op": "DUP8"
    },
    "8381": {
      "op": "ADD"
    },
    "8382": {
      "op": "CALLDATALOAD"
    },
    "8383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8387": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8389": {
      "op": "SHL"
    },
    "8390": {
      "op": "SUB"
    },
    "8391": {
      "op": "DUP1"
    },
    "8392": {
      "op": "DUP3"
    },
    "8393": {
      "op": "GT"
    },
    "8394": {
      "op": "ISZERO"
    },
    "8395": {
      "op": "PUSH2",
      "value": "0x20D3"
    },
    "8398": {
      "op": "JUMPI"
    },
    "8399": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8401": {
      "op": "DUP1"
    },
    "8402": {
      "op": "REVERT"
    },
    "8403": {
      "op": "JUMPDEST"
    },
    "8404": {
      "op": "PUSH2",
      "value": "0x20DF"
    },
    "8407": {
      "op": "DUP11"
    },
    "8408": {
      "op": "DUP4"
    },
    "8409": {
      "op": "DUP12"
    },
    "8410": {
      "op": "ADD"
    },
    "8411": {
      "op": "PUSH2",
      "value": "0x1D45"
    },
    "8414": {
      "jump": "i",
      "op": "JUMP"
    },
    "8415": {
      "op": "JUMPDEST"
    },
    "8416": {
      "op": "SWAP7"
    },
    "8417": {
      "op": "POP"
    },
    "8418": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8420": {
      "op": "DUP10"
    },
    "8421": {
      "op": "ADD"
    },
    "8422": {
      "op": "CALLDATALOAD"
    },
    "8423": {
      "op": "SWAP2"
    },
    "8424": {
      "op": "POP"
    },
    "8425": {
      "op": "DUP1"
    },
    "8426": {
      "op": "DUP3"
    },
    "8427": {
      "op": "GT"
    },
    "8428": {
      "op": "ISZERO"
    },
    "8429": {
      "op": "PUSH2",
      "value": "0x20F5"
    },
    "8432": {
      "op": "JUMPI"
    },
    "8433": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8435": {
      "op": "DUP1"
    },
    "8436": {
      "op": "REVERT"
    },
    "8437": {
      "op": "JUMPDEST"
    },
    "8438": {
      "op": "PUSH2",
      "value": "0x2101"
    },
    "8441": {
      "op": "DUP11"
    },
    "8442": {
      "op": "DUP4"
    },
    "8443": {
      "op": "DUP12"
    },
    "8444": {
      "op": "ADD"
    },
    "8445": {
      "op": "PUSH2",
      "value": "0x1D45"
    },
    "8448": {
      "jump": "i",
      "op": "JUMP"
    },
    "8449": {
      "op": "JUMPDEST"
    },
    "8450": {
      "op": "SWAP6"
    },
    "8451": {
      "op": "POP"
    },
    "8452": {
      "op": "PUSH2",
      "value": "0x210F"
    },
    "8455": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8457": {
      "op": "DUP11"
    },
    "8458": {
      "op": "ADD"
    },
    "8459": {
      "op": "PUSH2",
      "value": "0x207E"
    },
    "8462": {
      "jump": "i",
      "op": "JUMP"
    },
    "8463": {
      "op": "JUMPDEST"
    },
    "8464": {
      "op": "SWAP5"
    },
    "8465": {
      "op": "POP"
    },
    "8466": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8468": {
      "op": "DUP10"
    },
    "8469": {
      "op": "ADD"
    },
    "8470": {
      "op": "CALLDATALOAD"
    },
    "8471": {
      "op": "SWAP4"
    },
    "8472": {
      "op": "POP"
    },
    "8473": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8475": {
      "op": "DUP10"
    },
    "8476": {
      "op": "ADD"
    },
    "8477": {
      "op": "CALLDATALOAD"
    },
    "8478": {
      "op": "SWAP2"
    },
    "8479": {
      "op": "POP"
    },
    "8480": {
      "op": "DUP1"
    },
    "8481": {
      "op": "DUP3"
    },
    "8482": {
      "op": "GT"
    },
    "8483": {
      "op": "ISZERO"
    },
    "8484": {
      "op": "PUSH2",
      "value": "0x212C"
    },
    "8487": {
      "op": "JUMPI"
    },
    "8488": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8490": {
      "op": "DUP1"
    },
    "8491": {
      "op": "REVERT"
    },
    "8492": {
      "op": "JUMPDEST"
    },
    "8493": {
      "op": "POP"
    },
    "8494": {
      "op": "PUSH2",
      "value": "0x2139"
    },
    "8497": {
      "op": "DUP10"
    },
    "8498": {
      "op": "DUP3"
    },
    "8499": {
      "op": "DUP11"
    },
    "8500": {
      "op": "ADD"
    },
    "8501": {
      "op": "PUSH2",
      "value": "0x1D45"
    },
    "8504": {
      "jump": "i",
      "op": "JUMP"
    },
    "8505": {
      "op": "JUMPDEST"
    },
    "8506": {
      "op": "SWAP2"
    },
    "8507": {
      "op": "POP"
    },
    "8508": {
      "op": "POP"
    },
    "8509": {
      "op": "SWAP3"
    },
    "8510": {
      "op": "SWAP6"
    },
    "8511": {
      "op": "POP"
    },
    "8512": {
      "op": "SWAP3"
    },
    "8513": {
      "op": "SWAP6"
    },
    "8514": {
      "op": "POP"
    },
    "8515": {
      "op": "SWAP3"
    },
    "8516": {
      "op": "SWAP6"
    },
    "8517": {
      "jump": "o",
      "op": "JUMP"
    },
    "8518": {
      "op": "JUMPDEST"
    },
    "8519": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8521": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8523": {
      "op": "DUP3"
    },
    "8524": {
      "op": "DUP5"
    },
    "8525": {
      "op": "SUB"
    },
    "8526": {
      "op": "SLT"
    },
    "8527": {
      "op": "ISZERO"
    },
    "8528": {
      "op": "PUSH2",
      "value": "0x2158"
    },
    "8531": {
      "op": "JUMPI"
    },
    "8532": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8534": {
      "op": "DUP1"
    },
    "8535": {
      "op": "REVERT"
    },
    "8536": {
      "op": "JUMPDEST"
    },
    "8537": {
      "op": "DUP2"
    },
    "8538": {
      "op": "CALLDATALOAD"
    },
    "8539": {
      "op": "PUSH2",
      "value": "0x2163"
    },
    "8542": {
      "op": "DUP2"
    },
    "8543": {
      "op": "PUSH2",
      "value": "0x1CBF"
    },
    "8546": {
      "jump": "i",
      "op": "JUMP"
    },
    "8547": {
      "op": "JUMPDEST"
    },
    "8548": {
      "op": "SWAP4"
    },
    "8549": {
      "op": "SWAP3"
    },
    "8550": {
      "op": "POP"
    },
    "8551": {
      "op": "POP"
    },
    "8552": {
      "op": "POP"
    },
    "8553": {
      "jump": "o",
      "op": "JUMP"
    },
    "8554": {
      "op": "JUMPDEST"
    },
    "8555": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8557": {
      "op": "DUP2"
    },
    "8558": {
      "op": "MSTORE"
    },
    "8559": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8561": {
      "op": "PUSH2",
      "value": "0x2163"
    },
    "8564": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8566": {
      "op": "DUP4"
    },
    "8567": {
      "op": "ADD"
    },
    "8568": {
      "op": "DUP5"
    },
    "8569": {
      "op": "PUSH2",
      "value": "0x1ECC"
    },
    "8572": {
      "jump": "i",
      "op": "JUMP"
    },
    "8573": {
      "op": "JUMPDEST"
    },
    "8574": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8576": {
      "op": "DUP1"
    },
    "8577": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8579": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8581": {
      "op": "DUP5"
    },
    "8582": {
      "op": "DUP7"
    },
    "8583": {
      "op": "SUB"
    },
    "8584": {
      "op": "SLT"
    },
    "8585": {
      "op": "ISZERO"
    },
    "8586": {
      "op": "PUSH2",
      "value": "0x2192"
    },
    "8589": {
      "op": "JUMPI"
    },
    "8590": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8592": {
      "op": "DUP1"
    },
    "8593": {
      "op": "REVERT"
    },
    "8594": {
      "op": "JUMPDEST"
    },
    "8595": {
      "op": "DUP4"
    },
    "8596": {
      "op": "CALLDATALOAD"
    },
    "8597": {
      "op": "SWAP3"
    },
    "8598": {
      "op": "POP"
    },
    "8599": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8601": {
      "op": "DUP5"
    },
    "8602": {
      "op": "ADD"
    },
    "8603": {
      "op": "CALLDATALOAD"
    },
    "8604": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8608": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8610": {
      "op": "SHL"
    },
    "8611": {
      "op": "SUB"
    },
    "8612": {
      "op": "DUP2"
    },
    "8613": {
      "op": "GT"
    },
    "8614": {
      "op": "ISZERO"
    },
    "8615": {
      "op": "PUSH2",
      "value": "0x21AF"
    },
    "8618": {
      "op": "JUMPI"
    },
    "8619": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8621": {
      "op": "DUP1"
    },
    "8622": {
      "op": "REVERT"
    },
    "8623": {
      "op": "JUMPDEST"
    },
    "8624": {
      "op": "PUSH2",
      "value": "0x21BB"
    },
    "8627": {
      "op": "DUP7"
    },
    "8628": {
      "op": "DUP3"
    },
    "8629": {
      "op": "DUP8"
    },
    "8630": {
      "op": "ADD"
    },
    "8631": {
      "op": "PUSH2",
      "value": "0x1D45"
    },
    "8634": {
      "jump": "i",
      "op": "JUMP"
    },
    "8635": {
      "op": "JUMPDEST"
    },
    "8636": {
      "op": "SWAP3"
    },
    "8637": {
      "op": "POP"
    },
    "8638": {
      "op": "POP"
    },
    "8639": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8641": {
      "op": "DUP5"
    },
    "8642": {
      "op": "ADD"
    },
    "8643": {
      "op": "CALLDATALOAD"
    },
    "8644": {
      "op": "SWAP1"
    },
    "8645": {
      "op": "POP"
    },
    "8646": {
      "op": "SWAP3"
    },
    "8647": {
      "op": "POP"
    },
    "8648": {
      "op": "SWAP3"
    },
    "8649": {
      "op": "POP"
    },
    "8650": {
      "op": "SWAP3"
    },
    "8651": {
      "jump": "o",
      "op": "JUMP"
    },
    "8652": {
      "op": "JUMPDEST"
    },
    "8653": {
      "op": "DUP3"
    },
    "8654": {
      "op": "ISZERO"
    },
    "8655": {
      "op": "ISZERO"
    },
    "8656": {
      "op": "DUP2"
    },
    "8657": {
      "op": "MSTORE"
    },
    "8658": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8660": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8662": {
      "op": "DUP3"
    },
    "8663": {
      "op": "ADD"
    },
    "8664": {
      "op": "MSTORE"
    },
    "8665": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8667": {
      "op": "PUSH2",
      "value": "0x21E7"
    },
    "8670": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8672": {
      "op": "DUP4"
    },
    "8673": {
      "op": "ADD"
    },
    "8674": {
      "op": "DUP5"
    },
    "8675": {
      "op": "PUSH2",
      "value": "0x1ECC"
    },
    "8678": {
      "jump": "i",
      "op": "JUMP"
    },
    "8679": {
      "op": "JUMPDEST"
    },
    "8680": {
      "op": "SWAP5"
    },
    "8681": {
      "op": "SWAP4"
    },
    "8682": {
      "op": "POP"
    },
    "8683": {
      "op": "POP"
    },
    "8684": {
      "op": "POP"
    },
    "8685": {
      "op": "POP"
    },
    "8686": {
      "jump": "o",
      "op": "JUMP"
    },
    "8687": {
      "op": "JUMPDEST"
    },
    "8688": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8690": {
      "op": "DUP3"
    },
    "8691": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8693": {
      "op": "DUP4"
    },
    "8694": {
      "op": "ADD"
    },
    "8695": {
      "op": "SLT"
    },
    "8696": {
      "op": "PUSH2",
      "value": "0x2200"
    },
    "8699": {
      "op": "JUMPI"
    },
    "8700": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8702": {
      "op": "DUP1"
    },
    "8703": {
      "op": "REVERT"
    },
    "8704": {
      "op": "JUMPDEST"
    },
    "8705": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8707": {
      "op": "MLOAD"
    },
    "8708": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8710": {
      "op": "DUP2"
    },
    "8711": {
      "op": "ADD"
    },
    "8712": {
      "op": "DUP2"
    },
    "8713": {
      "op": "DUP2"
    },
    "8714": {
      "op": "LT"
    },
    "8715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8719": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8721": {
      "op": "SHL"
    },
    "8722": {
      "op": "SUB"
    },
    "8723": {
      "op": "DUP3"
    },
    "8724": {
      "op": "GT"
    },
    "8725": {
      "op": "OR"
    },
    "8726": {
      "op": "ISZERO"
    },
    "8727": {
      "op": "PUSH2",
      "value": "0x2222"
    },
    "8730": {
      "op": "JUMPI"
    },
    "8731": {
      "op": "PUSH2",
      "value": "0x2222"
    },
    "8734": {
      "op": "PUSH2",
      "value": "0x1CD7"
    },
    "8737": {
      "jump": "i",
      "op": "JUMP"
    },
    "8738": {
      "op": "JUMPDEST"
    },
    "8739": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8741": {
      "op": "MSTORE"
    },
    "8742": {
      "op": "DUP1"
    },
    "8743": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8745": {
      "op": "DUP5"
    },
    "8746": {
      "op": "ADD"
    },
    "8747": {
      "op": "DUP6"
    },
    "8748": {
      "op": "DUP2"
    },
    "8749": {
      "op": "GT"
    },
    "8750": {
      "op": "ISZERO"
    },
    "8751": {
      "op": "PUSH2",
      "value": "0x2237"
    },
    "8754": {
      "op": "JUMPI"
    },
    "8755": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8757": {
      "op": "DUP1"
    },
    "8758": {
      "op": "REVERT"
    },
    "8759": {
      "op": "JUMPDEST"
    },
    "8760": {
      "op": "DUP5"
    },
    "8761": {
      "op": "JUMPDEST"
    },
    "8762": {
      "op": "DUP2"
    },
    "8763": {
      "op": "DUP2"
    },
    "8764": {
      "op": "LT"
    },
    "8765": {
      "op": "ISZERO"
    },
    "8766": {
      "op": "PUSH2",
      "value": "0x225A"
    },
    "8769": {
      "op": "JUMPI"
    },
    "8770": {
      "op": "DUP1"
    },
    "8771": {
      "op": "CALLDATALOAD"
    },
    "8772": {
      "op": "PUSH2",
      "value": "0x224C"
    },
    "8775": {
      "op": "DUP2"
    },
    "8776": {
      "op": "PUSH2",
      "value": "0x1CBF"
    },
    "8779": {
      "jump": "i",
      "op": "JUMP"
    },
    "8780": {
      "op": "JUMPDEST"
    },
    "8781": {
      "op": "DUP4"
    },
    "8782": {
      "op": "MSTORE"
    },
    "8783": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8785": {
      "op": "SWAP3"
    },
    "8786": {
      "op": "DUP4"
    },
    "8787": {
      "op": "ADD"
    },
    "8788": {
      "op": "SWAP3"
    },
    "8789": {
      "op": "ADD"
    },
    "8790": {
      "op": "PUSH2",
      "value": "0x2239"
    },
    "8793": {
      "op": "JUMP"
    },
    "8794": {
      "op": "JUMPDEST"
    },
    "8795": {
      "op": "POP"
    },
    "8796": {
      "op": "SWAP2"
    },
    "8797": {
      "op": "SWAP6"
    },
    "8798": {
      "op": "SWAP5"
    },
    "8799": {
      "op": "POP"
    },
    "8800": {
      "op": "POP"
    },
    "8801": {
      "op": "POP"
    },
    "8802": {
      "op": "POP"
    },
    "8803": {
      "op": "POP"
    },
    "8804": {
      "jump": "o",
      "op": "JUMP"
    },
    "8805": {
      "op": "JUMPDEST"
    },
    "8806": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8808": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8810": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8812": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8814": {
      "op": "SHL"
    },
    "8815": {
      "op": "SUB"
    },
    "8816": {
      "op": "DUP3"
    },
    "8817": {
      "op": "GT"
    },
    "8818": {
      "op": "ISZERO"
    },
    "8819": {
      "op": "PUSH2",
      "value": "0x227E"
    },
    "8822": {
      "op": "JUMPI"
    },
    "8823": {
      "op": "PUSH2",
      "value": "0x227E"
    },
    "8826": {
      "op": "PUSH2",
      "value": "0x1CD7"
    },
    "8829": {
      "jump": "i",
      "op": "JUMP"
    },
    "8830": {
      "op": "JUMPDEST"
    },
    "8831": {
      "op": "POP"
    },
    "8832": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "8834": {
      "op": "SHL"
    },
    "8835": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8837": {
      "op": "ADD"
    },
    "8838": {
      "op": "SWAP1"
    },
    "8839": {
      "jump": "o",
      "op": "JUMP"
    },
    "8840": {
      "op": "JUMPDEST"
    },
    "8841": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8843": {
      "op": "DUP3"
    },
    "8844": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8846": {
      "op": "DUP4"
    },
    "8847": {
      "op": "ADD"
    },
    "8848": {
      "op": "SLT"
    },
    "8849": {
      "op": "PUSH2",
      "value": "0x2299"
    },
    "8852": {
      "op": "JUMPI"
    },
    "8853": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8855": {
      "op": "DUP1"
    },
    "8856": {
      "op": "REVERT"
    },
    "8857": {
      "op": "JUMPDEST"
    },
    "8858": {
      "op": "DUP2"
    },
    "8859": {
      "op": "CALLDATALOAD"
    },
    "8860": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8862": {
      "op": "PUSH2",
      "value": "0x22AE"
    },
    "8865": {
      "op": "PUSH2",
      "value": "0x22A9"
    },
    "8868": {
      "op": "DUP4"
    },
    "8869": {
      "op": "PUSH2",
      "value": "0x2265"
    },
    "8872": {
      "jump": "i",
      "op": "JUMP"
    },
    "8873": {
      "op": "JUMPDEST"
    },
    "8874": {
      "op": "PUSH2",
      "value": "0x1D15"
    },
    "8877": {
      "jump": "i",
      "op": "JUMP"
    },
    "8878": {
      "op": "JUMPDEST"
    },
    "8879": {
      "op": "DUP3"
    },
    "8880": {
      "op": "DUP2"
    },
    "8881": {
      "op": "MSTORE"
    },
    "8882": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "8884": {
      "op": "SWAP3"
    },
    "8885": {
      "op": "SWAP1"
    },
    "8886": {
      "op": "SWAP3"
    },
    "8887": {
      "op": "SHL"
    },
    "8888": {
      "op": "DUP5"
    },
    "8889": {
      "op": "ADD"
    },
    "8890": {
      "op": "DUP2"
    },
    "8891": {
      "op": "ADD"
    },
    "8892": {
      "op": "SWAP2"
    },
    "8893": {
      "op": "DUP2"
    },
    "8894": {
      "op": "DUP2"
    },
    "8895": {
      "op": "ADD"
    },
    "8896": {
      "op": "SWAP1"
    },
    "8897": {
      "op": "DUP7"
    },
    "8898": {
      "op": "DUP5"
    },
    "8899": {
      "op": "GT"
    },
    "8900": {
      "op": "ISZERO"
    },
    "8901": {
      "op": "PUSH2",
      "value": "0x22CD"
    },
    "8904": {
      "op": "JUMPI"
    },
    "8905": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8907": {
      "op": "DUP1"
    },
    "8908": {
      "op": "REVERT"
    },
    "8909": {
      "op": "JUMPDEST"
    },
    "8910": {
      "op": "DUP3"
    },
    "8911": {
      "op": "DUP7"
    },
    "8912": {
      "op": "ADD"
    },
    "8913": {
      "op": "JUMPDEST"
    },
    "8914": {
      "op": "DUP5"
    },
    "8915": {
      "op": "DUP2"
    },
    "8916": {
      "op": "LT"
    },
    "8917": {
      "op": "ISZERO"
    },
    "8918": {
      "op": "PUSH2",
      "value": "0x22F1"
    },
    "8921": {
      "op": "JUMPI"
    },
    "8922": {
      "op": "DUP1"
    },
    "8923": {
      "op": "CALLDATALOAD"
    },
    "8924": {
      "op": "PUSH2",
      "value": "0x22E4"
    },
    "8927": {
      "op": "DUP2"
    },
    "8928": {
      "op": "PUSH2",
      "value": "0x1CBF"
    },
    "8931": {
      "jump": "i",
      "op": "JUMP"
    },
    "8932": {
      "op": "JUMPDEST"
    },
    "8933": {
      "op": "DUP4"
    },
    "8934": {
      "op": "MSTORE"
    },
    "8935": {
      "op": "SWAP2"
    },
    "8936": {
      "op": "DUP4"
    },
    "8937": {
      "op": "ADD"
    },
    "8938": {
      "op": "SWAP2"
    },
    "8939": {
      "op": "DUP4"
    },
    "8940": {
      "op": "ADD"
    },
    "8941": {
      "op": "PUSH2",
      "value": "0x22D1"
    },
    "8944": {
      "op": "JUMP"
    },
    "8945": {
      "op": "JUMPDEST"
    },
    "8946": {
      "op": "POP"
    },
    "8947": {
      "op": "SWAP7"
    },
    "8948": {
      "op": "SWAP6"
    },
    "8949": {
      "op": "POP"
    },
    "8950": {
      "op": "POP"
    },
    "8951": {
      "op": "POP"
    },
    "8952": {
      "op": "POP"
    },
    "8953": {
      "op": "POP"
    },
    "8954": {
      "op": "POP"
    },
    "8955": {
      "jump": "o",
      "op": "JUMP"
    },
    "8956": {
      "op": "JUMPDEST"
    },
    "8957": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8959": {
      "op": "DUP1"
    },
    "8960": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8962": {
      "op": "DUP1"
    },
    "8963": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8965": {
      "op": "DUP1"
    },
    "8966": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8968": {
      "op": "DUP1"
    },
    "8969": {
      "op": "PUSH2",
      "value": "0x1A0"
    },
    "8972": {
      "op": "DUP10"
    },
    "8973": {
      "op": "DUP12"
    },
    "8974": {
      "op": "SUB"
    },
    "8975": {
      "op": "SLT"
    },
    "8976": {
      "op": "ISZERO"
    },
    "8977": {
      "op": "PUSH2",
      "value": "0x2319"
    },
    "8980": {
      "op": "JUMPI"
    },
    "8981": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8983": {
      "op": "DUP1"
    },
    "8984": {
      "op": "REVERT"
    },
    "8985": {
      "op": "JUMPDEST"
    },
    "8986": {
      "op": "DUP9"
    },
    "8987": {
      "op": "CALLDATALOAD"
    },
    "8988": {
      "op": "PUSH2",
      "value": "0x2324"
    },
    "8991": {
      "op": "DUP2"
    },
    "8992": {
      "op": "PUSH2",
      "value": "0x1CBF"
    },
    "8995": {
      "jump": "i",
      "op": "JUMP"
    },
    "8996": {
      "op": "JUMPDEST"
    },
    "8997": {
      "op": "SWAP8"
    },
    "8998": {
      "op": "POP"
    },
    "8999": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9001": {
      "op": "DUP10"
    },
    "9002": {
      "op": "DUP2"
    },
    "9003": {
      "op": "ADD"
    },
    "9004": {
      "op": "CALLDATALOAD"
    },
    "9005": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9007": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9009": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9011": {
      "op": "SHL"
    },
    "9012": {
      "op": "SUB"
    },
    "9013": {
      "op": "DUP1"
    },
    "9014": {
      "op": "DUP3"
    },
    "9015": {
      "op": "GT"
    },
    "9016": {
      "op": "ISZERO"
    },
    "9017": {
      "op": "PUSH2",
      "value": "0x2341"
    },
    "9020": {
      "op": "JUMPI"
    },
    "9021": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9023": {
      "op": "DUP1"
    },
    "9024": {
      "op": "REVERT"
    },
    "9025": {
      "op": "JUMPDEST"
    },
    "9026": {
      "op": "PUSH2",
      "value": "0x234D"
    },
    "9029": {
      "op": "DUP14"
    },
    "9030": {
      "op": "DUP4"
    },
    "9031": {
      "op": "DUP15"
    },
    "9032": {
      "op": "ADD"
    },
    "9033": {
      "op": "PUSH2",
      "value": "0x1D45"
    },
    "9036": {
      "jump": "i",
      "op": "JUMP"
    },
    "9037": {
      "op": "JUMPDEST"
    },
    "9038": {
      "op": "SWAP10"
    },
    "9039": {
      "op": "POP"
    },
    "9040": {
      "op": "PUSH2",
      "value": "0x235B"
    },
    "9043": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9045": {
      "op": "DUP14"
    },
    "9046": {
      "op": "ADD"
    },
    "9047": {
      "op": "PUSH2",
      "value": "0x207E"
    },
    "9050": {
      "jump": "i",
      "op": "JUMP"
    },
    "9051": {
      "op": "JUMPDEST"
    },
    "9052": {
      "op": "SWAP9"
    },
    "9053": {
      "op": "POP"
    },
    "9054": {
      "op": "PUSH2",
      "value": "0x2369"
    },
    "9057": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9059": {
      "op": "DUP14"
    },
    "9060": {
      "op": "ADD"
    },
    "9061": {
      "op": "PUSH2",
      "value": "0x207E"
    },
    "9064": {
      "jump": "i",
      "op": "JUMP"
    },
    "9065": {
      "op": "JUMPDEST"
    },
    "9066": {
      "op": "SWAP8"
    },
    "9067": {
      "op": "POP"
    },
    "9068": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9070": {
      "op": "DUP13"
    },
    "9071": {
      "op": "ADD"
    },
    "9072": {
      "op": "CALLDATALOAD"
    },
    "9073": {
      "op": "SWAP7"
    },
    "9074": {
      "op": "POP"
    },
    "9075": {
      "op": "DUP13"
    },
    "9076": {
      "op": "PUSH1",
      "value": "0xBF"
    },
    "9078": {
      "op": "DUP14"
    },
    "9079": {
      "op": "ADD"
    },
    "9080": {
      "op": "SLT"
    },
    "9081": {
      "op": "PUSH2",
      "value": "0x2381"
    },
    "9084": {
      "op": "JUMPI"
    },
    "9085": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9087": {
      "op": "DUP1"
    },
    "9088": {
      "op": "REVERT"
    },
    "9089": {
      "op": "JUMPDEST"
    },
    "9090": {
      "op": "PUSH2",
      "value": "0x2389"
    },
    "9093": {
      "op": "PUSH2",
      "value": "0x1CED"
    },
    "9096": {
      "jump": "i",
      "op": "JUMP"
    },
    "9097": {
      "op": "JUMPDEST"
    },
    "9098": {
      "op": "SWAP2"
    },
    "9099": {
      "op": "POP"
    },
    "9100": {
      "op": "DUP2"
    },
    "9101": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "9104": {
      "op": "DUP14"
    },
    "9105": {
      "op": "ADD"
    },
    "9106": {
      "op": "DUP15"
    },
    "9107": {
      "op": "DUP2"
    },
    "9108": {
      "op": "GT"
    },
    "9109": {
      "op": "ISZERO"
    },
    "9110": {
      "op": "PUSH2",
      "value": "0x239E"
    },
    "9113": {
      "op": "JUMPI"
    },
    "9114": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9116": {
      "op": "DUP1"
    },
    "9117": {
      "op": "REVERT"
    },
    "9118": {
      "op": "JUMPDEST"
    },
    "9119": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9121": {
      "op": "DUP15"
    },
    "9122": {
      "op": "ADD"
    },
    "9123": {
      "op": "JUMPDEST"
    },
    "9124": {
      "op": "DUP2"
    },
    "9125": {
      "op": "DUP2"
    },
    "9126": {
      "op": "LT"
    },
    "9127": {
      "op": "ISZERO"
    },
    "9128": {
      "op": "PUSH2",
      "value": "0x23BA"
    },
    "9131": {
      "op": "JUMPI"
    },
    "9132": {
      "op": "DUP1"
    },
    "9133": {
      "op": "CALLDATALOAD"
    },
    "9134": {
      "op": "DUP6"
    },
    "9135": {
      "op": "MSTORE"
    },
    "9136": {
      "op": "SWAP4"
    },
    "9137": {
      "op": "DUP6"
    },
    "9138": {
      "op": "ADD"
    },
    "9139": {
      "op": "SWAP4"
    },
    "9140": {
      "op": "DUP6"
    },
    "9141": {
      "op": "ADD"
    },
    "9142": {
      "op": "PUSH2",
      "value": "0x23A3"
    },
    "9145": {
      "op": "JUMP"
    },
    "9146": {
      "op": "JUMPDEST"
    },
    "9147": {
      "op": "POP"
    },
    "9148": {
      "op": "DUP2"
    },
    "9149": {
      "op": "SWAP8"
    },
    "9150": {
      "op": "POP"
    },
    "9151": {
      "op": "PUSH2",
      "value": "0x23C8"
    },
    "9154": {
      "op": "DUP16"
    },
    "9155": {
      "op": "DUP3"
    },
    "9156": {
      "op": "PUSH2",
      "value": "0x21EF"
    },
    "9159": {
      "jump": "i",
      "op": "JUMP"
    },
    "9160": {
      "op": "JUMPDEST"
    },
    "9161": {
      "op": "SWAP7"
    },
    "9162": {
      "op": "POP"
    },
    "9163": {
      "op": "POP"
    },
    "9164": {
      "op": "POP"
    },
    "9165": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "9168": {
      "op": "DUP13"
    },
    "9169": {
      "op": "ADD"
    },
    "9170": {
      "op": "CALLDATALOAD"
    },
    "9171": {
      "op": "SWAP3"
    },
    "9172": {
      "op": "POP"
    },
    "9173": {
      "op": "DUP1"
    },
    "9174": {
      "op": "DUP4"
    },
    "9175": {
      "op": "GT"
    },
    "9176": {
      "op": "ISZERO"
    },
    "9177": {
      "op": "PUSH2",
      "value": "0x23E1"
    },
    "9180": {
      "op": "JUMPI"
    },
    "9181": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9183": {
      "op": "DUP1"
    },
    "9184": {
      "op": "REVERT"
    },
    "9185": {
      "op": "JUMPDEST"
    },
    "9186": {
      "op": "POP"
    },
    "9187": {
      "op": "POP"
    },
    "9188": {
      "op": "PUSH2",
      "value": "0x23EF"
    },
    "9191": {
      "op": "DUP12"
    },
    "9192": {
      "op": "DUP3"
    },
    "9193": {
      "op": "DUP13"
    },
    "9194": {
      "op": "ADD"
    },
    "9195": {
      "op": "PUSH2",
      "value": "0x2288"
    },
    "9198": {
      "jump": "i",
      "op": "JUMP"
    },
    "9199": {
      "op": "JUMPDEST"
    },
    "9200": {
      "op": "SWAP2"
    },
    "9201": {
      "op": "POP"
    },
    "9202": {
      "op": "POP"
    },
    "9203": {
      "op": "SWAP3"
    },
    "9204": {
      "op": "SWAP6"
    },
    "9205": {
      "op": "SWAP9"
    },
    "9206": {
      "op": "POP"
    },
    "9207": {
      "op": "SWAP3"
    },
    "9208": {
      "op": "SWAP6"
    },
    "9209": {
      "op": "SWAP9"
    },
    "9210": {
      "op": "SWAP1"
    },
    "9211": {
      "op": "SWAP4"
    },
    "9212": {
      "op": "SWAP7"
    },
    "9213": {
      "op": "POP"
    },
    "9214": {
      "jump": "o",
      "op": "JUMP"
    },
    "9215": {
      "op": "JUMPDEST"
    },
    "9216": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9218": {
      "op": "DUP1"
    },
    "9219": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9221": {
      "op": "DUP4"
    },
    "9222": {
      "op": "DUP6"
    },
    "9223": {
      "op": "SUB"
    },
    "9224": {
      "op": "SLT"
    },
    "9225": {
      "op": "ISZERO"
    },
    "9226": {
      "op": "PUSH2",
      "value": "0x2412"
    },
    "9229": {
      "op": "JUMPI"
    },
    "9230": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9232": {
      "op": "DUP1"
    },
    "9233": {
      "op": "REVERT"
    },
    "9234": {
      "op": "JUMPDEST"
    },
    "9235": {
      "op": "PUSH2",
      "value": "0x241B"
    },
    "9238": {
      "op": "DUP4"
    },
    "9239": {
      "op": "PUSH2",
      "value": "0x207E"
    },
    "9242": {
      "jump": "i",
      "op": "JUMP"
    },
    "9243": {
      "op": "JUMPDEST"
    },
    "9244": {
      "op": "SWAP2"
    },
    "9245": {
      "op": "POP"
    },
    "9246": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9248": {
      "op": "DUP4"
    },
    "9249": {
      "op": "ADD"
    },
    "9250": {
      "op": "CALLDATALOAD"
    },
    "9251": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9253": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9255": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9257": {
      "op": "SHL"
    },
    "9258": {
      "op": "SUB"
    },
    "9259": {
      "op": "DUP2"
    },
    "9260": {
      "op": "GT"
    },
    "9261": {
      "op": "ISZERO"
    },
    "9262": {
      "op": "PUSH2",
      "value": "0x2436"
    },
    "9265": {
      "op": "JUMPI"
    },
    "9266": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9268": {
      "op": "DUP1"
    },
    "9269": {
      "op": "REVERT"
    },
    "9270": {
      "op": "JUMPDEST"
    },
    "9271": {
      "op": "PUSH2",
      "value": "0x2442"
    },
    "9274": {
      "op": "DUP6"
    },
    "9275": {
      "op": "DUP3"
    },
    "9276": {
      "op": "DUP7"
    },
    "9277": {
      "op": "ADD"
    },
    "9278": {
      "op": "PUSH2",
      "value": "0x1D45"
    },
    "9281": {
      "jump": "i",
      "op": "JUMP"
    },
    "9282": {
      "op": "JUMPDEST"
    },
    "9283": {
      "op": "SWAP2"
    },
    "9284": {
      "op": "POP"
    },
    "9285": {
      "op": "POP"
    },
    "9286": {
      "op": "SWAP3"
    },
    "9287": {
      "op": "POP"
    },
    "9288": {
      "op": "SWAP3"
    },
    "9289": {
      "op": "SWAP1"
    },
    "9290": {
      "op": "POP"
    },
    "9291": {
      "jump": "o",
      "op": "JUMP"
    },
    "9292": {
      "op": "JUMPDEST"
    },
    "9293": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9295": {
      "op": "DUP1"
    },
    "9296": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9298": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9300": {
      "op": "DUP5"
    },
    "9301": {
      "op": "DUP7"
    },
    "9302": {
      "op": "SUB"
    },
    "9303": {
      "op": "SLT"
    },
    "9304": {
      "op": "ISZERO"
    },
    "9305": {
      "op": "PUSH2",
      "value": "0x2461"
    },
    "9308": {
      "op": "JUMPI"
    },
    "9309": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9311": {
      "op": "DUP1"
    },
    "9312": {
      "op": "REVERT"
    },
    "9313": {
      "op": "JUMPDEST"
    },
    "9314": {
      "op": "DUP4"
    },
    "9315": {
      "op": "CALLDATALOAD"
    },
    "9316": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9320": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9322": {
      "op": "SHL"
    },
    "9323": {
      "op": "SUB"
    },
    "9324": {
      "op": "DUP1"
    },
    "9325": {
      "op": "DUP3"
    },
    "9326": {
      "op": "GT"
    },
    "9327": {
      "op": "ISZERO"
    },
    "9328": {
      "op": "PUSH2",
      "value": "0x2478"
    },
    "9331": {
      "op": "JUMPI"
    },
    "9332": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9334": {
      "op": "DUP1"
    },
    "9335": {
      "op": "REVERT"
    },
    "9336": {
      "op": "JUMPDEST"
    },
    "9337": {
      "op": "PUSH2",
      "value": "0x2484"
    },
    "9340": {
      "op": "DUP8"
    },
    "9341": {
      "op": "DUP4"
    },
    "9342": {
      "op": "DUP9"
    },
    "9343": {
      "op": "ADD"
    },
    "9344": {
      "op": "PUSH2",
      "value": "0x1D45"
    },
    "9347": {
      "jump": "i",
      "op": "JUMP"
    },
    "9348": {
      "op": "JUMPDEST"
    },
    "9349": {
      "op": "SWAP5"
    },
    "9350": {
      "op": "POP"
    },
    "9351": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9353": {
      "op": "DUP7"
    },
    "9354": {
      "op": "ADD"
    },
    "9355": {
      "op": "CALLDATALOAD"
    },
    "9356": {
      "op": "SWAP2"
    },
    "9357": {
      "op": "POP"
    },
    "9358": {
      "op": "DUP1"
    },
    "9359": {
      "op": "DUP3"
    },
    "9360": {
      "op": "GT"
    },
    "9361": {
      "op": "ISZERO"
    },
    "9362": {
      "op": "PUSH2",
      "value": "0x249A"
    },
    "9365": {
      "op": "JUMPI"
    },
    "9366": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9368": {
      "op": "DUP1"
    },
    "9369": {
      "op": "REVERT"
    },
    "9370": {
      "op": "JUMPDEST"
    },
    "9371": {
      "op": "PUSH2",
      "value": "0x24A6"
    },
    "9374": {
      "op": "DUP8"
    },
    "9375": {
      "op": "DUP4"
    },
    "9376": {
      "op": "DUP9"
    },
    "9377": {
      "op": "ADD"
    },
    "9378": {
      "op": "PUSH2",
      "value": "0x1D45"
    },
    "9381": {
      "jump": "i",
      "op": "JUMP"
    },
    "9382": {
      "op": "JUMPDEST"
    },
    "9383": {
      "op": "SWAP4"
    },
    "9384": {
      "op": "POP"
    },
    "9385": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9387": {
      "op": "DUP7"
    },
    "9388": {
      "op": "ADD"
    },
    "9389": {
      "op": "CALLDATALOAD"
    },
    "9390": {
      "op": "SWAP2"
    },
    "9391": {
      "op": "POP"
    },
    "9392": {
      "op": "DUP1"
    },
    "9393": {
      "op": "DUP3"
    },
    "9394": {
      "op": "GT"
    },
    "9395": {
      "op": "ISZERO"
    },
    "9396": {
      "op": "PUSH2",
      "value": "0x24BC"
    },
    "9399": {
      "op": "JUMPI"
    },
    "9400": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9402": {
      "op": "DUP1"
    },
    "9403": {
      "op": "REVERT"
    },
    "9404": {
      "op": "JUMPDEST"
    },
    "9405": {
      "op": "POP"
    },
    "9406": {
      "op": "PUSH2",
      "value": "0x24C9"
    },
    "9409": {
      "op": "DUP7"
    },
    "9410": {
      "op": "DUP3"
    },
    "9411": {
      "op": "DUP8"
    },
    "9412": {
      "op": "ADD"
    },
    "9413": {
      "op": "PUSH2",
      "value": "0x1D45"
    },
    "9416": {
      "jump": "i",
      "op": "JUMP"
    },
    "9417": {
      "op": "JUMPDEST"
    },
    "9418": {
      "op": "SWAP2"
    },
    "9419": {
      "op": "POP"
    },
    "9420": {
      "op": "POP"
    },
    "9421": {
      "op": "SWAP3"
    },
    "9422": {
      "op": "POP"
    },
    "9423": {
      "op": "SWAP3"
    },
    "9424": {
      "op": "POP"
    },
    "9425": {
      "op": "SWAP3"
    },
    "9426": {
      "jump": "o",
      "op": "JUMP"
    },
    "9427": {
      "op": "JUMPDEST"
    },
    "9428": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9430": {
      "op": "DUP1"
    },
    "9431": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9433": {
      "op": "DUP1"
    },
    "9434": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9436": {
      "op": "DUP6"
    },
    "9437": {
      "op": "DUP8"
    },
    "9438": {
      "op": "SUB"
    },
    "9439": {
      "op": "SLT"
    },
    "9440": {
      "op": "ISZERO"
    },
    "9441": {
      "op": "PUSH2",
      "value": "0x24E9"
    },
    "9444": {
      "op": "JUMPI"
    },
    "9445": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9447": {
      "op": "DUP1"
    },
    "9448": {
      "op": "REVERT"
    },
    "9449": {
      "op": "JUMPDEST"
    },
    "9450": {
      "op": "DUP5"
    },
    "9451": {
      "op": "CALLDATALOAD"
    },
    "9452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9456": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9458": {
      "op": "SHL"
    },
    "9459": {
      "op": "SUB"
    },
    "9460": {
      "op": "DUP1"
    },
    "9461": {
      "op": "DUP3"
    },
    "9462": {
      "op": "GT"
    },
    "9463": {
      "op": "ISZERO"
    },
    "9464": {
      "op": "PUSH2",
      "value": "0x2500"
    },
    "9467": {
      "op": "JUMPI"
    },
    "9468": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9470": {
      "op": "DUP1"
    },
    "9471": {
      "op": "REVERT"
    },
    "9472": {
      "op": "JUMPDEST"
    },
    "9473": {
      "op": "DUP2"
    },
    "9474": {
      "op": "DUP8"
    },
    "9475": {
      "op": "ADD"
    },
    "9476": {
      "op": "SWAP2"
    },
    "9477": {
      "op": "POP"
    },
    "9478": {
      "op": "DUP8"
    },
    "9479": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9481": {
      "op": "DUP4"
    },
    "9482": {
      "op": "ADD"
    },
    "9483": {
      "op": "SLT"
    },
    "9484": {
      "op": "PUSH2",
      "value": "0x2514"
    },
    "9487": {
      "op": "JUMPI"
    },
    "9488": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9490": {
      "op": "DUP1"
    },
    "9491": {
      "op": "REVERT"
    },
    "9492": {
      "op": "JUMPDEST"
    },
    "9493": {
      "op": "DUP2"
    },
    "9494": {
      "op": "CALLDATALOAD"
    },
    "9495": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9497": {
      "op": "PUSH2",
      "value": "0x2524"
    },
    "9500": {
      "op": "PUSH2",
      "value": "0x22A9"
    },
    "9503": {
      "op": "DUP4"
    },
    "9504": {
      "op": "PUSH2",
      "value": "0x2265"
    },
    "9507": {
      "jump": "i",
      "op": "JUMP"
    },
    "9508": {
      "op": "JUMPDEST"
    },
    "9509": {
      "op": "DUP3"
    },
    "9510": {
      "op": "DUP2"
    },
    "9511": {
      "op": "MSTORE"
    },
    "9512": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "9514": {
      "op": "SWAP3"
    },
    "9515": {
      "op": "SWAP1"
    },
    "9516": {
      "op": "SWAP3"
    },
    "9517": {
      "op": "SHL"
    },
    "9518": {
      "op": "DUP5"
    },
    "9519": {
      "op": "ADD"
    },
    "9520": {
      "op": "DUP2"
    },
    "9521": {
      "op": "ADD"
    },
    "9522": {
      "op": "SWAP2"
    },
    "9523": {
      "op": "DUP2"
    },
    "9524": {
      "op": "DUP2"
    },
    "9525": {
      "op": "ADD"
    },
    "9526": {
      "op": "SWAP1"
    },
    "9527": {
      "op": "DUP12"
    },
    "9528": {
      "op": "DUP5"
    },
    "9529": {
      "op": "GT"
    },
    "9530": {
      "op": "ISZERO"
    },
    "9531": {
      "op": "PUSH2",
      "value": "0x2543"
    },
    "9534": {
      "op": "JUMPI"
    },
    "9535": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9537": {
      "op": "DUP1"
    },
    "9538": {
      "op": "REVERT"
    },
    "9539": {
      "op": "JUMPDEST"
    },
    "9540": {
      "op": "SWAP5"
    },
    "9541": {
      "op": "DUP3"
    },
    "9542": {
      "op": "ADD"
    },
    "9543": {
      "op": "SWAP5"
    },
    "9544": {
      "op": "JUMPDEST"
    },
    "9545": {
      "op": "DUP4"
    },
    "9546": {
      "op": "DUP7"
    },
    "9547": {
      "op": "LT"
    },
    "9548": {
      "op": "ISZERO"
    },
    "9549": {
      "op": "PUSH2",
      "value": "0x2561"
    },
    "9552": {
      "op": "JUMPI"
    },
    "9553": {
      "op": "DUP6"
    },
    "9554": {
      "op": "CALLDATALOAD"
    },
    "9555": {
      "op": "DUP3"
    },
    "9556": {
      "op": "MSTORE"
    },
    "9557": {
      "op": "SWAP5"
    },
    "9558": {
      "op": "DUP3"
    },
    "9559": {
      "op": "ADD"
    },
    "9560": {
      "op": "SWAP5"
    },
    "9561": {
      "op": "SWAP1"
    },
    "9562": {
      "op": "DUP3"
    },
    "9563": {
      "op": "ADD"
    },
    "9564": {
      "op": "SWAP1"
    },
    "9565": {
      "op": "PUSH2",
      "value": "0x2548"
    },
    "9568": {
      "op": "JUMP"
    },
    "9569": {
      "op": "JUMPDEST"
    },
    "9570": {
      "op": "SWAP9"
    },
    "9571": {
      "op": "POP"
    },
    "9572": {
      "op": "PUSH2",
      "value": "0x2570"
    },
    "9575": {
      "op": "SWAP1"
    },
    "9576": {
      "op": "POP"
    },
    "9577": {
      "op": "DUP10"
    },
    "9578": {
      "op": "DUP3"
    },
    "9579": {
      "op": "ADD"
    },
    "9580": {
      "op": "PUSH2",
      "value": "0x207E"
    },
    "9583": {
      "jump": "i",
      "op": "JUMP"
    },
    "9584": {
      "op": "JUMPDEST"
    },
    "9585": {
      "op": "SWAP7"
    },
    "9586": {
      "op": "POP"
    },
    "9587": {
      "op": "POP"
    },
    "9588": {
      "op": "POP"
    },
    "9589": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9591": {
      "op": "DUP8"
    },
    "9592": {
      "op": "ADD"
    },
    "9593": {
      "op": "CALLDATALOAD"
    },
    "9594": {
      "op": "SWAP2"
    },
    "9595": {
      "op": "POP"
    },
    "9596": {
      "op": "DUP1"
    },
    "9597": {
      "op": "DUP3"
    },
    "9598": {
      "op": "GT"
    },
    "9599": {
      "op": "ISZERO"
    },
    "9600": {
      "op": "PUSH2",
      "value": "0x2588"
    },
    "9603": {
      "op": "JUMPI"
    },
    "9604": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9606": {
      "op": "DUP1"
    },
    "9607": {
      "op": "REVERT"
    },
    "9608": {
      "op": "JUMPDEST"
    },
    "9609": {
      "op": "PUSH2",
      "value": "0x2594"
    },
    "9612": {
      "op": "DUP9"
    },
    "9613": {
      "op": "DUP4"
    },
    "9614": {
      "op": "DUP10"
    },
    "9615": {
      "op": "ADD"
    },
    "9616": {
      "op": "PUSH2",
      "value": "0x1D45"
    },
    "9619": {
      "jump": "i",
      "op": "JUMP"
    },
    "9620": {
      "op": "JUMPDEST"
    },
    "9621": {
      "op": "SWAP4"
    },
    "9622": {
      "op": "POP"
    },
    "9623": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9625": {
      "op": "DUP8"
    },
    "9626": {
      "op": "ADD"
    },
    "9627": {
      "op": "CALLDATALOAD"
    },
    "9628": {
      "op": "SWAP2"
    },
    "9629": {
      "op": "POP"
    },
    "9630": {
      "op": "DUP1"
    },
    "9631": {
      "op": "DUP3"
    },
    "9632": {
      "op": "GT"
    },
    "9633": {
      "op": "ISZERO"
    },
    "9634": {
      "op": "PUSH2",
      "value": "0x2065"
    },
    "9637": {
      "op": "JUMPI"
    },
    "9638": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9640": {
      "op": "DUP1"
    },
    "9641": {
      "op": "REVERT"
    },
    "9642": {
      "op": "JUMPDEST"
    },
    "9643": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9648": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9650": {
      "op": "SHL"
    },
    "9651": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9653": {
      "op": "MSTORE"
    },
    "9654": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "9656": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9658": {
      "op": "MSTORE"
    },
    "9659": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9661": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9663": {
      "op": "REVERT"
    },
    "9664": {
      "op": "JUMPDEST"
    },
    "9665": {
      "op": "PUSH1",
      "value": "0x9"
    },
    "9667": {
      "op": "DUP2"
    },
    "9668": {
      "op": "LT"
    },
    "9669": {
      "op": "PUSH2",
      "value": "0x25DE"
    },
    "9672": {
      "op": "JUMPI"
    },
    "9673": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9678": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9680": {
      "op": "SHL"
    },
    "9681": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9683": {
      "op": "MSTORE"
    },
    "9684": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "9686": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9688": {
      "op": "MSTORE"
    },
    "9689": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9691": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9693": {
      "op": "REVERT"
    },
    "9694": {
      "op": "JUMPDEST"
    },
    "9695": {
      "op": "SWAP1"
    },
    "9696": {
      "op": "MSTORE"
    },
    "9697": {
      "jump": "o",
      "op": "JUMP"
    },
    "9698": {
      "op": "JUMPDEST"
    },
    "9699": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9701": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9703": {
      "op": "DUP1"
    },
    "9704": {
      "op": "DUP4"
    },
    "9705": {
      "op": "ADD"
    },
    "9706": {
      "op": "DUP2"
    },
    "9707": {
      "op": "DUP5"
    },
    "9708": {
      "op": "MSTORE"
    },
    "9709": {
      "op": "DUP1"
    },
    "9710": {
      "op": "DUP6"
    },
    "9711": {
      "op": "MLOAD"
    },
    "9712": {
      "op": "DUP1"
    },
    "9713": {
      "op": "DUP4"
    },
    "9714": {
      "op": "MSTORE"
    },
    "9715": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9717": {
      "op": "SWAP3"
    },
    "9718": {
      "op": "POP"
    },
    "9719": {
      "op": "DUP3"
    },
    "9720": {
      "op": "DUP7"
    },
    "9721": {
      "op": "ADD"
    },
    "9722": {
      "op": "SWAP2"
    },
    "9723": {
      "op": "POP"
    },
    "9724": {
      "op": "DUP3"
    },
    "9725": {
      "op": "DUP2"
    },
    "9726": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "9728": {
      "op": "SHL"
    },
    "9729": {
      "op": "DUP8"
    },
    "9730": {
      "op": "ADD"
    },
    "9731": {
      "op": "ADD"
    },
    "9732": {
      "op": "DUP5"
    },
    "9733": {
      "op": "DUP9"
    },
    "9734": {
      "op": "ADD"
    },
    "9735": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9737": {
      "op": "JUMPDEST"
    },
    "9738": {
      "op": "DUP4"
    },
    "9739": {
      "op": "DUP2"
    },
    "9740": {
      "op": "LT"
    },
    "9741": {
      "op": "ISZERO"
    },
    "9742": {
      "op": "PUSH2",
      "value": "0x1FF1"
    },
    "9745": {
      "op": "JUMPI"
    },
    "9746": {
      "op": "DUP9"
    },
    "9747": {
      "op": "DUP4"
    },
    "9748": {
      "op": "SUB"
    },
    "9749": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "9751": {
      "op": "NOT"
    },
    "9752": {
      "op": "ADD"
    },
    "9753": {
      "op": "DUP6"
    },
    "9754": {
      "op": "MSTORE"
    },
    "9755": {
      "op": "DUP2"
    },
    "9756": {
      "op": "MLOAD"
    },
    "9757": {
      "op": "DUP1"
    },
    "9758": {
      "op": "MLOAD"
    },
    "9759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9763": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9765": {
      "op": "SHL"
    },
    "9766": {
      "op": "SUB"
    },
    "9767": {
      "op": "AND"
    },
    "9768": {
      "op": "DUP5"
    },
    "9769": {
      "op": "MSTORE"
    },
    "9770": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "9773": {
      "op": "DUP9"
    },
    "9774": {
      "op": "DUP3"
    },
    "9775": {
      "op": "ADD"
    },
    "9776": {
      "op": "MLOAD"
    },
    "9777": {
      "op": "PUSH2",
      "value": "0x263C"
    },
    "9780": {
      "op": "DUP11"
    },
    "9781": {
      "op": "DUP8"
    },
    "9782": {
      "op": "ADD"
    },
    "9783": {
      "op": "DUP3"
    },
    "9784": {
      "op": "PUSH2",
      "value": "0x25C0"
    },
    "9787": {
      "jump": "i",
      "op": "JUMP"
    },
    "9788": {
      "op": "JUMPDEST"
    },
    "9789": {
      "op": "POP"
    },
    "9790": {
      "op": "DUP8"
    },
    "9791": {
      "op": "DUP3"
    },
    "9792": {
      "op": "ADD"
    },
    "9793": {
      "op": "MLOAD"
    },
    "9794": {
      "op": "DUP2"
    },
    "9795": {
      "op": "DUP10"
    },
    "9796": {
      "op": "DUP8"
    },
    "9797": {
      "op": "ADD"
    },
    "9798": {
      "op": "MSTORE"
    },
    "9799": {
      "op": "PUSH2",
      "value": "0x2652"
    },
    "9802": {
      "op": "DUP3"
    },
    "9803": {
      "op": "DUP8"
    },
    "9804": {
      "op": "ADD"
    },
    "9805": {
      "op": "DUP3"
    },
    "9806": {
      "op": "PUSH2",
      "value": "0x1ECC"
    },
    "9809": {
      "jump": "i",
      "op": "JUMP"
    },
    "9810": {
      "op": "JUMPDEST"
    },
    "9811": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9813": {
      "op": "DUP5"
    },
    "9814": {
      "op": "DUP2"
    },
    "9815": {
      "op": "ADD"
    },
    "9816": {
      "op": "MLOAD"
    },
    "9817": {
      "op": "SWAP1"
    },
    "9818": {
      "op": "DUP9"
    },
    "9819": {
      "op": "ADD"
    },
    "9820": {
      "op": "MSTORE"
    },
    "9821": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9823": {
      "op": "DUP1"
    },
    "9824": {
      "op": "DUP6"
    },
    "9825": {
      "op": "ADD"
    },
    "9826": {
      "op": "MLOAD"
    },
    "9827": {
      "op": "SWAP1"
    },
    "9828": {
      "op": "DUP9"
    },
    "9829": {
      "op": "ADD"
    },
    "9830": {
      "op": "MSTORE"
    },
    "9831": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9833": {
      "op": "DUP1"
    },
    "9834": {
      "op": "DUP6"
    },
    "9835": {
      "op": "ADD"
    },
    "9836": {
      "op": "MLOAD"
    },
    "9837": {
      "op": "SWAP1"
    },
    "9838": {
      "op": "DUP9"
    },
    "9839": {
      "op": "ADD"
    },
    "9840": {
      "op": "MSTORE"
    },
    "9841": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "9843": {
      "op": "DUP1"
    },
    "9844": {
      "op": "DUP6"
    },
    "9845": {
      "op": "ADD"
    },
    "9846": {
      "op": "MLOAD"
    },
    "9847": {
      "op": "ISZERO"
    },
    "9848": {
      "op": "ISZERO"
    },
    "9849": {
      "op": "SWAP1"
    },
    "9850": {
      "op": "DUP9"
    },
    "9851": {
      "op": "ADD"
    },
    "9852": {
      "op": "MSTORE"
    },
    "9853": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9855": {
      "op": "DUP1"
    },
    "9856": {
      "op": "DUP6"
    },
    "9857": {
      "op": "ADD"
    },
    "9858": {
      "op": "MLOAD"
    },
    "9859": {
      "op": "ISZERO"
    },
    "9860": {
      "op": "ISZERO"
    },
    "9861": {
      "op": "SWAP1"
    },
    "9862": {
      "op": "DUP9"
    },
    "9863": {
      "op": "ADD"
    },
    "9864": {
      "op": "MSTORE"
    },
    "9865": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "9868": {
      "op": "SWAP4"
    },
    "9869": {
      "op": "DUP5"
    },
    "9870": {
      "op": "ADD"
    },
    "9871": {
      "op": "MLOAD"
    },
    "9872": {
      "op": "SWAP4"
    },
    "9873": {
      "op": "SWAP1"
    },
    "9874": {
      "op": "SWAP7"
    },
    "9875": {
      "op": "ADD"
    },
    "9876": {
      "op": "SWAP3"
    },
    "9877": {
      "op": "SWAP1"
    },
    "9878": {
      "op": "SWAP3"
    },
    "9879": {
      "op": "MSTORE"
    },
    "9880": {
      "op": "POP"
    },
    "9881": {
      "op": "POP"
    },
    "9882": {
      "op": "SWAP4"
    },
    "9883": {
      "op": "DUP7"
    },
    "9884": {
      "op": "ADD"
    },
    "9885": {
      "op": "SWAP4"
    },
    "9886": {
      "op": "SWAP1"
    },
    "9887": {
      "op": "DUP7"
    },
    "9888": {
      "op": "ADD"
    },
    "9889": {
      "op": "SWAP1"
    },
    "9890": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9892": {
      "op": "ADD"
    },
    "9893": {
      "op": "PUSH2",
      "value": "0x2609"
    },
    "9896": {
      "op": "JUMP"
    },
    "9897": {
      "op": "JUMPDEST"
    },
    "9898": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9900": {
      "op": "DUP1"
    },
    "9901": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9903": {
      "op": "DUP1"
    },
    "9904": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9906": {
      "op": "DUP6"
    },
    "9907": {
      "op": "DUP8"
    },
    "9908": {
      "op": "SUB"
    },
    "9909": {
      "op": "SLT"
    },
    "9910": {
      "op": "ISZERO"
    },
    "9911": {
      "op": "PUSH2",
      "value": "0x26BF"
    },
    "9914": {
      "op": "JUMPI"
    },
    "9915": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9917": {
      "op": "DUP1"
    },
    "9918": {
      "op": "REVERT"
    },
    "9919": {
      "op": "JUMPDEST"
    },
    "9920": {
      "op": "DUP5"
    },
    "9921": {
      "op": "CALLDATALOAD"
    },
    "9922": {
      "op": "SWAP4"
    },
    "9923": {
      "op": "POP"
    },
    "9924": {
      "op": "PUSH2",
      "value": "0x26CF"
    },
    "9927": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9929": {
      "op": "DUP7"
    },
    "9930": {
      "op": "ADD"
    },
    "9931": {
      "op": "PUSH2",
      "value": "0x207E"
    },
    "9934": {
      "jump": "i",
      "op": "JUMP"
    },
    "9935": {
      "op": "JUMPDEST"
    },
    "9936": {
      "op": "SWAP3"
    },
    "9937": {
      "op": "POP"
    },
    "9938": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9940": {
      "op": "DUP6"
    },
    "9941": {
      "op": "ADD"
    },
    "9942": {
      "op": "CALLDATALOAD"
    },
    "9943": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9945": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9947": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9949": {
      "op": "SHL"
    },
    "9950": {
      "op": "SUB"
    },
    "9951": {
      "op": "DUP1"
    },
    "9952": {
      "op": "DUP3"
    },
    "9953": {
      "op": "GT"
    },
    "9954": {
      "op": "ISZERO"
    },
    "9955": {
      "op": "PUSH2",
      "value": "0x2588"
    },
    "9958": {
      "op": "JUMPI"
    },
    "9959": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9961": {
      "op": "DUP1"
    },
    "9962": {
      "op": "REVERT"
    },
    "9963": {
      "op": "JUMPDEST"
    },
    "9964": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9966": {
      "op": "DUP1"
    },
    "9967": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9969": {
      "op": "DUP4"
    },
    "9970": {
      "op": "DUP6"
    },
    "9971": {
      "op": "SUB"
    },
    "9972": {
      "op": "SLT"
    },
    "9973": {
      "op": "ISZERO"
    },
    "9974": {
      "op": "PUSH2",
      "value": "0x26FE"
    },
    "9977": {
      "op": "JUMPI"
    },
    "9978": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9980": {
      "op": "DUP1"
    },
    "9981": {
      "op": "REVERT"
    },
    "9982": {
      "op": "JUMPDEST"
    },
    "9983": {
      "op": "DUP3"
    },
    "9984": {
      "op": "CALLDATALOAD"
    },
    "9985": {
      "op": "SWAP2"
    },
    "9986": {
      "op": "POP"
    },
    "9987": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9989": {
      "op": "DUP4"
    },
    "9990": {
      "op": "ADD"
    },
    "9991": {
      "op": "CALLDATALOAD"
    },
    "9992": {
      "op": "PUSH2",
      "value": "0x2710"
    },
    "9995": {
      "op": "DUP2"
    },
    "9996": {
      "op": "PUSH2",
      "value": "0x1CBF"
    },
    "9999": {
      "jump": "i",
      "op": "JUMP"
    },
    "10000": {
      "op": "JUMPDEST"
    },
    "10001": {
      "op": "DUP1"
    },
    "10002": {
      "op": "SWAP2"
    },
    "10003": {
      "op": "POP"
    },
    "10004": {
      "op": "POP"
    },
    "10005": {
      "op": "SWAP3"
    },
    "10006": {
      "op": "POP"
    },
    "10007": {
      "op": "SWAP3"
    },
    "10008": {
      "op": "SWAP1"
    },
    "10009": {
      "op": "POP"
    },
    "10010": {
      "jump": "o",
      "op": "JUMP"
    },
    "10011": {
      "op": "JUMPDEST"
    },
    "10012": {
      "op": "DUP4"
    },
    "10013": {
      "op": "ISZERO"
    },
    "10014": {
      "op": "ISZERO"
    },
    "10015": {
      "op": "DUP2"
    },
    "10016": {
      "op": "MSTORE"
    },
    "10017": {
      "op": "DUP3"
    },
    "10018": {
      "op": "ISZERO"
    },
    "10019": {
      "op": "ISZERO"
    },
    "10020": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10022": {
      "op": "DUP3"
    },
    "10023": {
      "op": "ADD"
    },
    "10024": {
      "op": "MSTORE"
    },
    "10025": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10027": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10029": {
      "op": "DUP3"
    },
    "10030": {
      "op": "ADD"
    },
    "10031": {
      "op": "MSTORE"
    },
    "10032": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10034": {
      "op": "PUSH2",
      "value": "0x273E"
    },
    "10037": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10039": {
      "op": "DUP4"
    },
    "10040": {
      "op": "ADD"
    },
    "10041": {
      "op": "DUP5"
    },
    "10042": {
      "op": "PUSH2",
      "value": "0x1ECC"
    },
    "10045": {
      "jump": "i",
      "op": "JUMP"
    },
    "10046": {
      "op": "JUMPDEST"
    },
    "10047": {
      "op": "SWAP6"
    },
    "10048": {
      "op": "SWAP5"
    },
    "10049": {
      "op": "POP"
    },
    "10050": {
      "op": "POP"
    },
    "10051": {
      "op": "POP"
    },
    "10052": {
      "op": "POP"
    },
    "10053": {
      "op": "POP"
    },
    "10054": {
      "jump": "o",
      "op": "JUMP"
    },
    "10055": {
      "op": "JUMPDEST"
    },
    "10056": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10060": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10062": {
      "op": "SHL"
    },
    "10063": {
      "op": "SUB"
    },
    "10064": {
      "op": "DUP11"
    },
    "10065": {
      "op": "AND"
    },
    "10066": {
      "op": "DUP2"
    },
    "10067": {
      "op": "MSTORE"
    },
    "10068": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10070": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "10073": {
      "op": "PUSH2",
      "value": "0x2765"
    },
    "10076": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10078": {
      "op": "DUP5"
    },
    "10079": {
      "op": "ADD"
    },
    "10080": {
      "op": "DUP13"
    },
    "10081": {
      "op": "PUSH2",
      "value": "0x25C0"
    },
    "10084": {
      "jump": "i",
      "op": "JUMP"
    },
    "10085": {
      "op": "JUMPDEST"
    },
    "10086": {
      "op": "DUP1"
    },
    "10087": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10089": {
      "op": "DUP5"
    },
    "10090": {
      "op": "ADD"
    },
    "10091": {
      "op": "MSTORE"
    },
    "10092": {
      "op": "PUSH2",
      "value": "0x2777"
    },
    "10095": {
      "op": "DUP2"
    },
    "10096": {
      "op": "DUP5"
    },
    "10097": {
      "op": "ADD"
    },
    "10098": {
      "op": "DUP12"
    },
    "10099": {
      "op": "PUSH2",
      "value": "0x1ECC"
    },
    "10102": {
      "jump": "i",
      "op": "JUMP"
    },
    "10103": {
      "op": "JUMPDEST"
    },
    "10104": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10106": {
      "op": "DUP5"
    },
    "10107": {
      "op": "ADD"
    },
    "10108": {
      "op": "SWAP10"
    },
    "10109": {
      "op": "SWAP1"
    },
    "10110": {
      "op": "SWAP10"
    },
    "10111": {
      "op": "MSTORE"
    },
    "10112": {
      "op": "POP"
    },
    "10113": {
      "op": "POP"
    },
    "10114": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10116": {
      "op": "DUP2"
    },
    "10117": {
      "op": "ADD"
    },
    "10118": {
      "op": "SWAP6"
    },
    "10119": {
      "op": "SWAP1"
    },
    "10120": {
      "op": "SWAP6"
    },
    "10121": {
      "op": "MSTORE"
    },
    "10122": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10124": {
      "op": "DUP6"
    },
    "10125": {
      "op": "ADD"
    },
    "10126": {
      "op": "SWAP4"
    },
    "10127": {
      "op": "SWAP1"
    },
    "10128": {
      "op": "SWAP4"
    },
    "10129": {
      "op": "MSTORE"
    },
    "10130": {
      "op": "SWAP1"
    },
    "10131": {
      "op": "ISZERO"
    },
    "10132": {
      "op": "ISZERO"
    },
    "10133": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "10135": {
      "op": "DUP5"
    },
    "10136": {
      "op": "ADD"
    },
    "10137": {
      "op": "MSTORE"
    },
    "10138": {
      "op": "ISZERO"
    },
    "10139": {
      "op": "ISZERO"
    },
    "10140": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10142": {
      "op": "DUP4"
    },
    "10143": {
      "op": "ADD"
    },
    "10144": {
      "op": "MSTORE"
    },
    "10145": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "10148": {
      "op": "SWAP1"
    },
    "10149": {
      "op": "SWAP2"
    },
    "10150": {
      "op": "ADD"
    },
    "10151": {
      "op": "MSTORE"
    },
    "10152": {
      "op": "SWAP4"
    },
    "10153": {
      "op": "SWAP3"
    },
    "10154": {
      "op": "POP"
    },
    "10155": {
      "op": "POP"
    },
    "10156": {
      "op": "POP"
    },
    "10157": {
      "jump": "o",
      "op": "JUMP"
    },
    "10158": {
      "op": "JUMPDEST"
    },
    "10159": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10161": {
      "op": "DUP1"
    },
    "10162": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10164": {
      "op": "DUP1"
    },
    "10165": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10167": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10169": {
      "op": "DUP7"
    },
    "10170": {
      "op": "DUP9"
    },
    "10171": {
      "op": "SUB"
    },
    "10172": {
      "op": "SLT"
    },
    "10173": {
      "op": "ISZERO"
    },
    "10174": {
      "op": "PUSH2",
      "value": "0x27C6"
    },
    "10177": {
      "op": "JUMPI"
    },
    "10178": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10180": {
      "op": "DUP1"
    },
    "10181": {
      "op": "REVERT"
    },
    "10182": {
      "op": "JUMPDEST"
    },
    "10183": {
      "op": "DUP6"
    },
    "10184": {
      "op": "CALLDATALOAD"
    },
    "10185": {
      "op": "PUSH2",
      "value": "0x27D1"
    },
    "10188": {
      "op": "DUP2"
    },
    "10189": {
      "op": "PUSH2",
      "value": "0x1CBF"
    },
    "10192": {
      "jump": "i",
      "op": "JUMP"
    },
    "10193": {
      "op": "JUMPDEST"
    },
    "10194": {
      "op": "SWAP5"
    },
    "10195": {
      "op": "POP"
    },
    "10196": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10198": {
      "op": "DUP7"
    },
    "10199": {
      "op": "ADD"
    },
    "10200": {
      "op": "CALLDATALOAD"
    },
    "10201": {
      "op": "SWAP4"
    },
    "10202": {
      "op": "POP"
    },
    "10203": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10205": {
      "op": "DUP7"
    },
    "10206": {
      "op": "ADD"
    },
    "10207": {
      "op": "CALLDATALOAD"
    },
    "10208": {
      "op": "PUSH2",
      "value": "0x27E8"
    },
    "10211": {
      "op": "DUP2"
    },
    "10212": {
      "op": "PUSH2",
      "value": "0x1CBF"
    },
    "10215": {
      "jump": "i",
      "op": "JUMP"
    },
    "10216": {
      "op": "JUMPDEST"
    },
    "10217": {
      "op": "SWAP3"
    },
    "10218": {
      "op": "POP"
    },
    "10219": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10221": {
      "op": "DUP7"
    },
    "10222": {
      "op": "ADD"
    },
    "10223": {
      "op": "CALLDATALOAD"
    },
    "10224": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10226": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10228": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10230": {
      "op": "SHL"
    },
    "10231": {
      "op": "SUB"
    },
    "10232": {
      "op": "DUP2"
    },
    "10233": {
      "op": "GT"
    },
    "10234": {
      "op": "ISZERO"
    },
    "10235": {
      "op": "PUSH2",
      "value": "0x1E69"
    },
    "10238": {
      "op": "JUMPI"
    },
    "10239": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10241": {
      "op": "DUP1"
    },
    "10242": {
      "op": "REVERT"
    },
    "10243": {
      "op": "JUMPDEST"
    },
    "10244": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10246": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10248": {
      "op": "DUP3"
    },
    "10249": {
      "op": "DUP5"
    },
    "10250": {
      "op": "SUB"
    },
    "10251": {
      "op": "SLT"
    },
    "10252": {
      "op": "ISZERO"
    },
    "10253": {
      "op": "PUSH2",
      "value": "0x2815"
    },
    "10256": {
      "op": "JUMPI"
    },
    "10257": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10259": {
      "op": "DUP1"
    },
    "10260": {
      "op": "REVERT"
    },
    "10261": {
      "op": "JUMPDEST"
    },
    "10262": {
      "op": "DUP2"
    },
    "10263": {
      "op": "MLOAD"
    },
    "10264": {
      "op": "PUSH2",
      "value": "0x2163"
    },
    "10267": {
      "op": "DUP2"
    },
    "10268": {
      "op": "PUSH2",
      "value": "0x1CBF"
    },
    "10271": {
      "jump": "i",
      "op": "JUMP"
    },
    "10272": {
      "op": "JUMPDEST"
    },
    "10273": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10275": {
      "op": "DUP1"
    },
    "10276": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10278": {
      "op": "SHL"
    },
    "10279": {
      "op": "SUB"
    },
    "10280": {
      "op": "DUP6"
    },
    "10281": {
      "op": "AND"
    },
    "10282": {
      "op": "DUP2"
    },
    "10283": {
      "op": "MSTORE"
    },
    "10284": {
      "op": "DUP4"
    },
    "10285": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10287": {
      "op": "DUP3"
    },
    "10288": {
      "op": "ADD"
    },
    "10289": {
      "op": "MSTORE"
    },
    "10290": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10292": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10294": {
      "op": "DUP3"
    },
    "10295": {
      "op": "ADD"
    },
    "10296": {
      "op": "MSTORE"
    },
    "10297": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10299": {
      "op": "PUSH2",
      "value": "0x2847"
    },
    "10302": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10304": {
      "op": "DUP4"
    },
    "10305": {
      "op": "ADD"
    },
    "10306": {
      "op": "DUP6"
    },
    "10307": {
      "op": "PUSH2",
      "value": "0x1ECC"
    },
    "10310": {
      "jump": "i",
      "op": "JUMP"
    },
    "10311": {
      "op": "JUMPDEST"
    },
    "10312": {
      "op": "SWAP1"
    },
    "10313": {
      "op": "POP"
    },
    "10314": {
      "op": "DUP3"
    },
    "10315": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10317": {
      "op": "DUP4"
    },
    "10318": {
      "op": "ADD"
    },
    "10319": {
      "op": "MSTORE"
    },
    "10320": {
      "op": "SWAP6"
    },
    "10321": {
      "op": "SWAP5"
    },
    "10322": {
      "op": "POP"
    },
    "10323": {
      "op": "POP"
    },
    "10324": {
      "op": "POP"
    },
    "10325": {
      "op": "POP"
    },
    "10326": {
      "op": "POP"
    },
    "10327": {
      "jump": "o",
      "op": "JUMP"
    },
    "10328": {
      "op": "JUMPDEST"
    },
    "10329": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10331": {
      "op": "DUP3"
    },
    "10332": {
      "op": "MLOAD"
    },
    "10333": {
      "op": "PUSH2",
      "value": "0x286A"
    },
    "10336": {
      "op": "DUP2"
    },
    "10337": {
      "op": "DUP5"
    },
    "10338": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10340": {
      "op": "DUP8"
    },
    "10341": {
      "op": "ADD"
    },
    "10342": {
      "op": "PUSH2",
      "value": "0x1EA0"
    },
    "10345": {
      "jump": "i",
      "op": "JUMP"
    },
    "10346": {
      "op": "JUMPDEST"
    },
    "10347": {
      "op": "SWAP2"
    },
    "10348": {
      "op": "SWAP1"
    },
    "10349": {
      "op": "SWAP2"
    },
    "10350": {
      "op": "ADD"
    },
    "10351": {
      "op": "SWAP3"
    },
    "10352": {
      "op": "SWAP2"
    },
    "10353": {
      "op": "POP"
    },
    "10354": {
      "op": "POP"
    },
    "10355": {
      "jump": "o",
      "op": "JUMP"
    },
    "10356": {
      "op": "JUMPDEST"
    },
    "10357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10361": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10363": {
      "op": "SHL"
    },
    "10364": {
      "op": "SUB"
    },
    "10365": {
      "op": "DUP7"
    },
    "10366": {
      "op": "DUP2"
    },
    "10367": {
      "op": "AND"
    },
    "10368": {
      "op": "DUP3"
    },
    "10369": {
      "op": "MSTORE"
    },
    "10370": {
      "op": "DUP6"
    },
    "10371": {
      "op": "AND"
    },
    "10372": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10374": {
      "op": "DUP3"
    },
    "10375": {
      "op": "ADD"
    },
    "10376": {
      "op": "MSTORE"
    },
    "10377": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10379": {
      "op": "DUP2"
    },
    "10380": {
      "op": "ADD"
    },
    "10381": {
      "op": "DUP5"
    },
    "10382": {
      "op": "SWAP1"
    },
    "10383": {
      "op": "MSTORE"
    },
    "10384": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10386": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10388": {
      "op": "DUP3"
    },
    "10389": {
      "op": "ADD"
    },
    "10390": {
      "op": "DUP2"
    },
    "10391": {
      "op": "SWAP1"
    },
    "10392": {
      "op": "MSTORE"
    },
    "10393": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10395": {
      "op": "SWAP1"
    },
    "10396": {
      "op": "PUSH2",
      "value": "0x28A7"
    },
    "10399": {
      "op": "SWAP1"
    },
    "10400": {
      "op": "DUP4"
    },
    "10401": {
      "op": "ADD"
    },
    "10402": {
      "op": "DUP6"
    },
    "10403": {
      "op": "PUSH2",
      "value": "0x1ECC"
    },
    "10406": {
      "jump": "i",
      "op": "JUMP"
    },
    "10407": {
      "op": "JUMPDEST"
    },
    "10408": {
      "op": "SWAP1"
    },
    "10409": {
      "op": "POP"
    },
    "10410": {
      "op": "DUP3"
    },
    "10411": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10413": {
      "op": "DUP4"
    },
    "10414": {
      "op": "ADD"
    },
    "10415": {
      "op": "MSTORE"
    },
    "10416": {
      "op": "SWAP7"
    },
    "10417": {
      "op": "SWAP6"
    },
    "10418": {
      "op": "POP"
    },
    "10419": {
      "op": "POP"
    },
    "10420": {
      "op": "POP"
    },
    "10421": {
      "op": "POP"
    },
    "10422": {
      "op": "POP"
    },
    "10423": {
      "op": "POP"
    },
    "10424": {
      "jump": "o",
      "op": "JUMP"
    },
    "10425": {
      "op": "JUMPDEST"
    },
    "10426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10428": {
      "op": "DUP2"
    },
    "10429": {
      "op": "DUP2"
    },
    "10430": {
      "op": "SHR"
    },
    "10431": {
      "op": "SWAP1"
    },
    "10432": {
      "op": "DUP3"
    },
    "10433": {
      "op": "AND"
    },
    "10434": {
      "op": "DUP1"
    },
    "10435": {
      "op": "PUSH2",
      "value": "0x28CD"
    },
    "10438": {
      "op": "JUMPI"
    },
    "10439": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "10441": {
      "op": "DUP3"
    },
    "10442": {
      "op": "AND"
    },
    "10443": {
      "op": "SWAP2"
    },
    "10444": {
      "op": "POP"
    },
    "10445": {
      "op": "JUMPDEST"
    },
    "10446": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10448": {
      "op": "DUP3"
    },
    "10449": {
      "op": "LT"
    },
    "10450": {
      "op": "DUP2"
    },
    "10451": {
      "op": "EQ"
    },
    "10452": {
      "op": "ISZERO"
    },
    "10453": {
      "op": "PUSH2",
      "value": "0x28EE"
    },
    "10456": {
      "op": "JUMPI"
    },
    "10457": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10462": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10464": {
      "op": "SHL"
    },
    "10465": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10467": {
      "op": "MSTORE"
    },
    "10468": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "10470": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10472": {
      "op": "MSTORE"
    },
    "10473": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10475": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10477": {
      "op": "REVERT"
    },
    "10478": {
      "op": "JUMPDEST"
    },
    "10479": {
      "op": "POP"
    },
    "10480": {
      "op": "SWAP2"
    },
    "10481": {
      "op": "SWAP1"
    },
    "10482": {
      "op": "POP"
    },
    "10483": {
      "jump": "o",
      "op": "JUMP"
    },
    "10484": {
      "op": "JUMPDEST"
    },
    "10485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10489": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10491": {
      "op": "SHL"
    },
    "10492": {
      "op": "SUB"
    },
    "10493": {
      "op": "DUP6"
    },
    "10494": {
      "op": "AND"
    },
    "10495": {
      "op": "DUP2"
    },
    "10496": {
      "op": "MSTORE"
    },
    "10497": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10499": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10501": {
      "op": "DUP3"
    },
    "10502": {
      "op": "ADD"
    },
    "10503": {
      "op": "DUP2"
    },
    "10504": {
      "op": "SWAP1"
    },
    "10505": {
      "op": "MSTORE"
    },
    "10506": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10508": {
      "op": "SWAP1"
    },
    "10509": {
      "op": "PUSH2",
      "value": "0x2918"
    },
    "10512": {
      "op": "SWAP1"
    },
    "10513": {
      "op": "DUP4"
    },
    "10514": {
      "op": "ADD"
    },
    "10515": {
      "op": "DUP7"
    },
    "10516": {
      "op": "PUSH2",
      "value": "0x1ECC"
    },
    "10519": {
      "jump": "i",
      "op": "JUMP"
    },
    "10520": {
      "op": "JUMPDEST"
    },
    "10521": {
      "op": "DUP5"
    },
    "10522": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10524": {
      "op": "DUP5"
    },
    "10525": {
      "op": "ADD"
    },
    "10526": {
      "op": "MSTORE"
    },
    "10527": {
      "op": "DUP3"
    },
    "10528": {
      "op": "DUP2"
    },
    "10529": {
      "op": "SUB"
    },
    "10530": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10532": {
      "op": "DUP5"
    },
    "10533": {
      "op": "ADD"
    },
    "10534": {
      "op": "MSTORE"
    },
    "10535": {
      "op": "PUSH2",
      "value": "0x2930"
    },
    "10538": {
      "op": "DUP2"
    },
    "10539": {
      "op": "DUP6"
    },
    "10540": {
      "op": "PUSH2",
      "value": "0x1ECC"
    },
    "10543": {
      "jump": "i",
      "op": "JUMP"
    },
    "10544": {
      "op": "JUMPDEST"
    },
    "10545": {
      "op": "SWAP8"
    },
    "10546": {
      "op": "SWAP7"
    },
    "10547": {
      "op": "POP"
    },
    "10548": {
      "op": "POP"
    },
    "10549": {
      "op": "POP"
    },
    "10550": {
      "op": "POP"
    },
    "10551": {
      "op": "POP"
    },
    "10552": {
      "op": "POP"
    },
    "10553": {
      "op": "POP"
    },
    "10554": {
      "jump": "o",
      "op": "JUMP"
    },
    "10555": {
      "op": "JUMPDEST"
    },
    "10556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10558": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10560": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10562": {
      "op": "SHL"
    },
    "10563": {
      "op": "SUB"
    },
    "10564": {
      "op": "DUP8"
    },
    "10565": {
      "op": "AND"
    },
    "10566": {
      "op": "DUP2"
    },
    "10567": {
      "op": "MSTORE"
    },
    "10568": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "10570": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10572": {
      "op": "DUP3"
    },
    "10573": {
      "op": "ADD"
    },
    "10574": {
      "op": "DUP2"
    },
    "10575": {
      "op": "SWAP1"
    },
    "10576": {
      "op": "MSTORE"
    },
    "10577": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10579": {
      "op": "SWAP1"
    },
    "10580": {
      "op": "PUSH2",
      "value": "0x295F"
    },
    "10583": {
      "op": "SWAP1"
    },
    "10584": {
      "op": "DUP4"
    },
    "10585": {
      "op": "ADD"
    },
    "10586": {
      "op": "DUP9"
    },
    "10587": {
      "op": "PUSH2",
      "value": "0x1ECC"
    },
    "10590": {
      "jump": "i",
      "op": "JUMP"
    },
    "10591": {
      "op": "JUMPDEST"
    },
    "10592": {
      "op": "DUP3"
    },
    "10593": {
      "op": "DUP2"
    },
    "10594": {
      "op": "SUB"
    },
    "10595": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10597": {
      "op": "DUP5"
    },
    "10598": {
      "op": "ADD"
    },
    "10599": {
      "op": "MSTORE"
    },
    "10600": {
      "op": "PUSH2",
      "value": "0x2971"
    },
    "10603": {
      "op": "DUP2"
    },
    "10604": {
      "op": "DUP9"
    },
    "10605": {
      "op": "PUSH2",
      "value": "0x1ECC"
    },
    "10608": {
      "jump": "i",
      "op": "JUMP"
    },
    "10609": {
      "op": "JUMPDEST"
    },
    "10610": {
      "op": "SWAP1"
    },
    "10611": {
      "op": "POP"
    },
    "10612": {
      "op": "DUP6"
    },
    "10613": {
      "op": "ISZERO"
    },
    "10614": {
      "op": "ISZERO"
    },
    "10615": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10617": {
      "op": "DUP5"
    },
    "10618": {
      "op": "ADD"
    },
    "10619": {
      "op": "MSTORE"
    },
    "10620": {
      "op": "DUP5"
    },
    "10621": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10623": {
      "op": "DUP5"
    },
    "10624": {
      "op": "ADD"
    },
    "10625": {
      "op": "MSTORE"
    },
    "10626": {
      "op": "DUP3"
    },
    "10627": {
      "op": "DUP2"
    },
    "10628": {
      "op": "SUB"
    },
    "10629": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10631": {
      "op": "DUP5"
    },
    "10632": {
      "op": "ADD"
    },
    "10633": {
      "op": "MSTORE"
    },
    "10634": {
      "op": "PUSH2",
      "value": "0x2993"
    },
    "10637": {
      "op": "DUP2"
    },
    "10638": {
      "op": "DUP6"
    },
    "10639": {
      "op": "PUSH2",
      "value": "0x1ECC"
    },
    "10642": {
      "jump": "i",
      "op": "JUMP"
    },
    "10643": {
      "op": "JUMPDEST"
    },
    "10644": {
      "op": "SWAP10"
    },
    "10645": {
      "op": "SWAP9"
    },
    "10646": {
      "op": "POP"
    },
    "10647": {
      "op": "POP"
    },
    "10648": {
      "op": "POP"
    },
    "10649": {
      "op": "POP"
    },
    "10650": {
      "op": "POP"
    },
    "10651": {
      "op": "POP"
    },
    "10652": {
      "op": "POP"
    },
    "10653": {
      "op": "POP"
    },
    "10654": {
      "op": "POP"
    },
    "10655": {
      "jump": "o",
      "op": "JUMP"
    },
    "10656": {
      "op": "JUMPDEST"
    },
    "10657": {
      "op": "DUP4"
    },
    "10658": {
      "op": "DUP2"
    },
    "10659": {
      "op": "MSTORE"
    },
    "10660": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10662": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10664": {
      "op": "DUP3"
    },
    "10665": {
      "op": "ADD"
    },
    "10666": {
      "op": "MSTORE"
    },
    "10667": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10669": {
      "op": "PUSH2",
      "value": "0x29B9"
    },
    "10672": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10674": {
      "op": "DUP4"
    },
    "10675": {
      "op": "ADD"
    },
    "10676": {
      "op": "DUP6"
    },
    "10677": {
      "op": "PUSH2",
      "value": "0x1ECC"
    },
    "10680": {
      "jump": "i",
      "op": "JUMP"
    },
    "10681": {
      "op": "JUMPDEST"
    },
    "10682": {
      "op": "SWAP1"
    },
    "10683": {
      "op": "POP"
    },
    "10684": {
      "op": "DUP3"
    },
    "10685": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10687": {
      "op": "DUP4"
    },
    "10688": {
      "op": "ADD"
    },
    "10689": {
      "op": "MSTORE"
    },
    "10690": {
      "op": "SWAP5"
    },
    "10691": {
      "op": "SWAP4"
    },
    "10692": {
      "op": "POP"
    },
    "10693": {
      "op": "POP"
    },
    "10694": {
      "op": "POP"
    },
    "10695": {
      "op": "POP"
    },
    "10696": {
      "jump": "o",
      "op": "JUMP"
    },
    "10697": {
      "op": "JUMPDEST"
    },
    "10698": {
      "op": "DUP1"
    },
    "10699": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10701": {
      "op": "JUMPDEST"
    },
    "10702": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10704": {
      "op": "DUP2"
    },
    "10705": {
      "op": "LT"
    },
    "10706": {
      "op": "ISZERO"
    },
    "10707": {
      "op": "PUSH2",
      "value": "0x1543"
    },
    "10710": {
      "op": "JUMPI"
    },
    "10711": {
      "op": "DUP2"
    },
    "10712": {
      "op": "MLOAD"
    },
    "10713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10717": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10719": {
      "op": "SHL"
    },
    "10720": {
      "op": "SUB"
    },
    "10721": {
      "op": "AND"
    },
    "10722": {
      "op": "DUP5"
    },
    "10723": {
      "op": "MSTORE"
    },
    "10724": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10726": {
      "op": "SWAP4"
    },
    "10727": {
      "op": "DUP5"
    },
    "10728": {
      "op": "ADD"
    },
    "10729": {
      "op": "SWAP4"
    },
    "10730": {
      "op": "SWAP1"
    },
    "10731": {
      "op": "SWAP2"
    },
    "10732": {
      "op": "ADD"
    },
    "10733": {
      "op": "SWAP1"
    },
    "10734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10736": {
      "op": "ADD"
    },
    "10737": {
      "op": "PUSH2",
      "value": "0x29CD"
    },
    "10740": {
      "op": "JUMP"
    },
    "10741": {
      "op": "JUMPDEST"
    },
    "10742": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10744": {
      "op": "DUP2"
    },
    "10745": {
      "op": "MLOAD"
    },
    "10746": {
      "op": "DUP1"
    },
    "10747": {
      "op": "DUP5"
    },
    "10748": {
      "op": "MSTORE"
    },
    "10749": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10751": {
      "op": "DUP1"
    },
    "10752": {
      "op": "DUP6"
    },
    "10753": {
      "op": "ADD"
    },
    "10754": {
      "op": "SWAP5"
    },
    "10755": {
      "op": "POP"
    },
    "10756": {
      "op": "DUP1"
    },
    "10757": {
      "op": "DUP5"
    },
    "10758": {
      "op": "ADD"
    },
    "10759": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10761": {
      "op": "JUMPDEST"
    },
    "10762": {
      "op": "DUP4"
    },
    "10763": {
      "op": "DUP2"
    },
    "10764": {
      "op": "LT"
    },
    "10765": {
      "op": "ISZERO"
    },
    "10766": {
      "op": "PUSH2",
      "value": "0x2A2E"
    },
    "10769": {
      "op": "JUMPI"
    },
    "10770": {
      "op": "DUP2"
    },
    "10771": {
      "op": "MLOAD"
    },
    "10772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10776": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10778": {
      "op": "SHL"
    },
    "10779": {
      "op": "SUB"
    },
    "10780": {
      "op": "AND"
    },
    "10781": {
      "op": "DUP8"
    },
    "10782": {
      "op": "MSTORE"
    },
    "10783": {
      "op": "SWAP6"
    },
    "10784": {
      "op": "DUP3"
    },
    "10785": {
      "op": "ADD"
    },
    "10786": {
      "op": "SWAP6"
    },
    "10787": {
      "op": "SWAP1"
    },
    "10788": {
      "op": "DUP3"
    },
    "10789": {
      "op": "ADD"
    },
    "10790": {
      "op": "SWAP1"
    },
    "10791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10793": {
      "op": "ADD"
    },
    "10794": {
      "op": "PUSH2",
      "value": "0x2A09"
    },
    "10797": {
      "op": "JUMP"
    },
    "10798": {
      "op": "JUMPDEST"
    },
    "10799": {
      "op": "POP"
    },
    "10800": {
      "op": "SWAP5"
    },
    "10801": {
      "op": "SWAP6"
    },
    "10802": {
      "op": "SWAP5"
    },
    "10803": {
      "op": "POP"
    },
    "10804": {
      "op": "POP"
    },
    "10805": {
      "op": "POP"
    },
    "10806": {
      "op": "POP"
    },
    "10807": {
      "op": "POP"
    },
    "10808": {
      "jump": "o",
      "op": "JUMP"
    },
    "10809": {
      "op": "JUMPDEST"
    },
    "10810": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10812": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10814": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10816": {
      "op": "SHL"
    },
    "10817": {
      "op": "SUB"
    },
    "10818": {
      "op": "DUP10"
    },
    "10819": {
      "op": "AND"
    },
    "10820": {
      "op": "DUP2"
    },
    "10821": {
      "op": "MSTORE"
    },
    "10822": {
      "op": "PUSH2",
      "value": "0x1A0"
    },
    "10825": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10827": {
      "op": "DUP1"
    },
    "10828": {
      "op": "DUP4"
    },
    "10829": {
      "op": "ADD"
    },
    "10830": {
      "op": "DUP3"
    },
    "10831": {
      "op": "SWAP1"
    },
    "10832": {
      "op": "MSTORE"
    },
    "10833": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10835": {
      "op": "SWAP2"
    },
    "10836": {
      "op": "SWAP1"
    },
    "10837": {
      "op": "PUSH2",
      "value": "0x2A60"
    },
    "10840": {
      "op": "DUP5"
    },
    "10841": {
      "op": "DUP4"
    },
    "10842": {
      "op": "ADD"
    },
    "10843": {
      "op": "DUP13"
    },
    "10844": {
      "op": "PUSH2",
      "value": "0x1ECC"
    },
    "10847": {
      "jump": "i",
      "op": "JUMP"
    },
    "10848": {
      "op": "JUMPDEST"
    },
    "10849": {
      "op": "SWAP2"
    },
    "10850": {
      "op": "POP"
    },
    "10851": {
      "op": "DUP10"
    },
    "10852": {
      "op": "ISZERO"
    },
    "10853": {
      "op": "ISZERO"
    },
    "10854": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10856": {
      "op": "DUP6"
    },
    "10857": {
      "op": "ADD"
    },
    "10858": {
      "op": "MSTORE"
    },
    "10859": {
      "op": "DUP9"
    },
    "10860": {
      "op": "ISZERO"
    },
    "10861": {
      "op": "ISZERO"
    },
    "10862": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10864": {
      "op": "DUP6"
    },
    "10865": {
      "op": "ADD"
    },
    "10866": {
      "op": "MSTORE"
    },
    "10867": {
      "op": "DUP8"
    },
    "10868": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10870": {
      "op": "DUP6"
    },
    "10871": {
      "op": "ADD"
    },
    "10872": {
      "op": "MSTORE"
    },
    "10873": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10875": {
      "op": "DUP5"
    },
    "10876": {
      "op": "ADD"
    },
    "10877": {
      "op": "DUP8"
    },
    "10878": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10880": {
      "op": "JUMPDEST"
    },
    "10881": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "10883": {
      "op": "DUP2"
    },
    "10884": {
      "op": "LT"
    },
    "10885": {
      "op": "ISZERO"
    },
    "10886": {
      "op": "PUSH2",
      "value": "0x2A9D"
    },
    "10889": {
      "op": "JUMPI"
    },
    "10890": {
      "op": "DUP2"
    },
    "10891": {
      "op": "MLOAD"
    },
    "10892": {
      "op": "DUP4"
    },
    "10893": {
      "op": "MSTORE"
    },
    "10894": {
      "op": "SWAP2"
    },
    "10895": {
      "op": "DUP4"
    },
    "10896": {
      "op": "ADD"
    },
    "10897": {
      "op": "SWAP2"
    },
    "10898": {
      "op": "SWAP1"
    },
    "10899": {
      "op": "DUP4"
    },
    "10900": {
      "op": "ADD"
    },
    "10901": {
      "op": "SWAP1"
    },
    "10902": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10904": {
      "op": "ADD"
    },
    "10905": {
      "op": "PUSH2",
      "value": "0x2A80"
    },
    "10908": {
      "op": "JUMP"
    },
    "10909": {
      "op": "JUMPDEST"
    },
    "10910": {
      "op": "POP"
    },
    "10911": {
      "op": "POP"
    },
    "10912": {
      "op": "POP"
    },
    "10913": {
      "op": "POP"
    },
    "10914": {
      "op": "PUSH2",
      "value": "0x2AAF"
    },
    "10917": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "10920": {
      "op": "DUP5"
    },
    "10921": {
      "op": "ADD"
    },
    "10922": {
      "op": "DUP7"
    },
    "10923": {
      "op": "PUSH2",
      "value": "0x29C9"
    },
    "10926": {
      "jump": "i",
      "op": "JUMP"
    },
    "10927": {
      "op": "JUMPDEST"
    },
    "10928": {
      "op": "DUP3"
    },
    "10929": {
      "op": "DUP2"
    },
    "10930": {
      "op": "SUB"
    },
    "10931": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "10934": {
      "op": "DUP5"
    },
    "10935": {
      "op": "ADD"
    },
    "10936": {
      "op": "MSTORE"
    },
    "10937": {
      "op": "PUSH2",
      "value": "0x2AC2"
    },
    "10940": {
      "op": "DUP2"
    },
    "10941": {
      "op": "DUP6"
    },
    "10942": {
      "op": "PUSH2",
      "value": "0x29F5"
    },
    "10945": {
      "jump": "i",
      "op": "JUMP"
    },
    "10946": {
      "op": "JUMPDEST"
    },
    "10947": {
      "op": "SWAP12"
    },
    "10948": {
      "op": "SWAP11"
    },
    "10949": {
      "op": "POP"
    },
    "10950": {
      "op": "POP"
    },
    "10951": {
      "op": "POP"
    },
    "10952": {
      "op": "POP"
    },
    "10953": {
      "op": "POP"
    },
    "10954": {
      "op": "POP"
    },
    "10955": {
      "op": "POP"
    },
    "10956": {
      "op": "POP"
    },
    "10957": {
      "op": "POP"
    },
    "10958": {
      "op": "POP"
    },
    "10959": {
      "op": "POP"
    },
    "10960": {
      "jump": "o",
      "op": "JUMP"
    },
    "10961": {
      "op": "JUMPDEST"
    },
    "10962": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10964": {
      "op": "DUP2"
    },
    "10965": {
      "op": "MSTORE"
    },
    "10966": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10968": {
      "op": "PUSH2",
      "value": "0x2AE4"
    },
    "10971": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10973": {
      "op": "DUP4"
    },
    "10974": {
      "op": "ADD"
    },
    "10975": {
      "op": "DUP7"
    },
    "10976": {
      "op": "PUSH2",
      "value": "0x1ECC"
    },
    "10979": {
      "jump": "i",
      "op": "JUMP"
    },
    "10980": {
      "op": "JUMPDEST"
    },
    "10981": {
      "op": "DUP3"
    },
    "10982": {
      "op": "DUP2"
    },
    "10983": {
      "op": "SUB"
    },
    "10984": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10986": {
      "op": "DUP5"
    },
    "10987": {
      "op": "ADD"
    },
    "10988": {
      "op": "MSTORE"
    },
    "10989": {
      "op": "PUSH2",
      "value": "0x2AF6"
    },
    "10992": {
      "op": "DUP2"
    },
    "10993": {
      "op": "DUP7"
    },
    "10994": {
      "op": "PUSH2",
      "value": "0x1ECC"
    },
    "10997": {
      "jump": "i",
      "op": "JUMP"
    },
    "10998": {
      "op": "JUMPDEST"
    },
    "10999": {
      "op": "SWAP1"
    },
    "11000": {
      "op": "POP"
    },
    "11001": {
      "op": "DUP3"
    },
    "11002": {
      "op": "DUP2"
    },
    "11003": {
      "op": "SUB"
    },
    "11004": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11006": {
      "op": "DUP5"
    },
    "11007": {
      "op": "ADD"
    },
    "11008": {
      "op": "MSTORE"
    },
    "11009": {
      "op": "PUSH2",
      "value": "0x2B0A"
    },
    "11012": {
      "op": "DUP2"
    },
    "11013": {
      "op": "DUP6"
    },
    "11014": {
      "op": "PUSH2",
      "value": "0x1ECC"
    },
    "11017": {
      "jump": "i",
      "op": "JUMP"
    },
    "11018": {
      "op": "JUMPDEST"
    },
    "11019": {
      "op": "SWAP7"
    },
    "11020": {
      "op": "SWAP6"
    },
    "11021": {
      "op": "POP"
    },
    "11022": {
      "op": "POP"
    },
    "11023": {
      "op": "POP"
    },
    "11024": {
      "op": "POP"
    },
    "11025": {
      "op": "POP"
    },
    "11026": {
      "op": "POP"
    },
    "11027": {
      "jump": "o",
      "op": "JUMP"
    },
    "11028": {
      "op": "JUMPDEST"
    },
    "11029": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11031": {
      "op": "DUP1"
    },
    "11032": {
      "op": "DUP3"
    },
    "11033": {
      "op": "MSTORE"
    },
    "11034": {
      "op": "DUP6"
    },
    "11035": {
      "op": "MLOAD"
    },
    "11036": {
      "op": "SWAP1"
    },
    "11037": {
      "op": "DUP3"
    },
    "11038": {
      "op": "ADD"
    },
    "11039": {
      "op": "DUP2"
    },
    "11040": {
      "op": "SWAP1"
    },
    "11041": {
      "op": "MSTORE"
    },
    "11042": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11044": {
      "op": "SWAP1"
    },
    "11045": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11047": {
      "op": "SWAP1"
    },
    "11048": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11050": {
      "op": "DUP5"
    },
    "11051": {
      "op": "ADD"
    },
    "11052": {
      "op": "SWAP1"
    },
    "11053": {
      "op": "DUP3"
    },
    "11054": {
      "op": "DUP10"
    },
    "11055": {
      "op": "ADD"
    },
    "11056": {
      "op": "DUP5"
    },
    "11057": {
      "op": "JUMPDEST"
    },
    "11058": {
      "op": "DUP3"
    },
    "11059": {
      "op": "DUP2"
    },
    "11060": {
      "op": "LT"
    },
    "11061": {
      "op": "ISZERO"
    },
    "11062": {
      "op": "PUSH2",
      "value": "0x2B4D"
    },
    "11065": {
      "op": "JUMPI"
    },
    "11066": {
      "op": "DUP2"
    },
    "11067": {
      "op": "MLOAD"
    },
    "11068": {
      "op": "DUP5"
    },
    "11069": {
      "op": "MSTORE"
    },
    "11070": {
      "op": "SWAP3"
    },
    "11071": {
      "op": "DUP5"
    },
    "11072": {
      "op": "ADD"
    },
    "11073": {
      "op": "SWAP3"
    },
    "11074": {
      "op": "SWAP1"
    },
    "11075": {
      "op": "DUP5"
    },
    "11076": {
      "op": "ADD"
    },
    "11077": {
      "op": "SWAP1"
    },
    "11078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11080": {
      "op": "ADD"
    },
    "11081": {
      "op": "PUSH2",
      "value": "0x2B31"
    },
    "11084": {
      "op": "JUMP"
    },
    "11085": {
      "op": "JUMPDEST"
    },
    "11086": {
      "op": "POP"
    },
    "11087": {
      "op": "POP"
    },
    "11088": {
      "op": "POP"
    },
    "11089": {
      "op": "DUP7"
    },
    "11090": {
      "op": "ISZERO"
    },
    "11091": {
      "op": "ISZERO"
    },
    "11092": {
      "op": "DUP3"
    },
    "11093": {
      "op": "DUP6"
    },
    "11094": {
      "op": "ADD"
    },
    "11095": {
      "op": "MSTORE"
    },
    "11096": {
      "op": "DUP4"
    },
    "11097": {
      "op": "DUP2"
    },
    "11098": {
      "op": "SUB"
    },
    "11099": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11101": {
      "op": "DUP6"
    },
    "11102": {
      "op": "ADD"
    },
    "11103": {
      "op": "MSTORE"
    },
    "11104": {
      "op": "PUSH2",
      "value": "0x2B69"
    },
    "11107": {
      "op": "DUP2"
    },
    "11108": {
      "op": "DUP8"
    },
    "11109": {
      "op": "PUSH2",
      "value": "0x1ECC"
    },
    "11112": {
      "jump": "i",
      "op": "JUMP"
    },
    "11113": {
      "op": "JUMPDEST"
    },
    "11114": {
      "op": "SWAP2"
    },
    "11115": {
      "op": "POP"
    },
    "11116": {
      "op": "POP"
    },
    "11117": {
      "op": "DUP3"
    },
    "11118": {
      "op": "DUP2"
    },
    "11119": {
      "op": "SUB"
    },
    "11120": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11122": {
      "op": "DUP5"
    },
    "11123": {
      "op": "ADD"
    },
    "11124": {
      "op": "MSTORE"
    },
    "11125": {
      "op": "PUSH2",
      "value": "0x2930"
    },
    "11128": {
      "op": "DUP2"
    },
    "11129": {
      "op": "DUP6"
    },
    "11130": {
      "op": "PUSH2",
      "value": "0x1ECC"
    },
    "11133": {
      "jump": "i",
      "op": "JUMP"
    },
    "11134": {
      "op": "JUMPDEST"
    },
    "11135": {
      "op": "DUP5"
    },
    "11136": {
      "op": "DUP2"
    },
    "11137": {
      "op": "MSTORE"
    },
    "11138": {
      "op": "DUP4"
    },
    "11139": {
      "op": "ISZERO"
    },
    "11140": {
      "op": "ISZERO"
    },
    "11141": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11143": {
      "op": "DUP3"
    },
    "11144": {
      "op": "ADD"
    },
    "11145": {
      "op": "MSTORE"
    },
    "11146": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11148": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11150": {
      "op": "DUP3"
    },
    "11151": {
      "op": "ADD"
    },
    "11152": {
      "op": "MSTORE"
    },
    "11153": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11155": {
      "op": "PUSH2",
      "value": "0x2B9F"
    },
    "11158": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11160": {
      "op": "DUP4"
    },
    "11161": {
      "op": "ADD"
    },
    "11162": {
      "op": "DUP6"
    },
    "11163": {
      "op": "PUSH2",
      "value": "0x1ECC"
    },
    "11166": {
      "jump": "i",
      "op": "JUMP"
    },
    "11167": {
      "op": "JUMPDEST"
    },
    "11168": {
      "op": "DUP3"
    },
    "11169": {
      "op": "DUP2"
    },
    "11170": {
      "op": "SUB"
    },
    "11171": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11173": {
      "op": "DUP5"
    },
    "11174": {
      "op": "ADD"
    },
    "11175": {
      "op": "MSTORE"
    },
    "11176": {
      "op": "PUSH2",
      "value": "0x2930"
    },
    "11179": {
      "op": "DUP2"
    },
    "11180": {
      "op": "DUP6"
    },
    "11181": {
      "op": "PUSH2",
      "value": "0x1ECC"
    },
    "11184": {
      "jump": "i",
      "op": "JUMP"
    },
    "11185": {
      "op": "JUMPDEST"
    },
    "11186": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11190": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11192": {
      "op": "SHL"
    },
    "11193": {
      "op": "SUB"
    },
    "11194": {
      "op": "DUP7"
    },
    "11195": {
      "op": "DUP2"
    },
    "11196": {
      "op": "AND"
    },
    "11197": {
      "op": "DUP3"
    },
    "11198": {
      "op": "MSTORE"
    },
    "11199": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11201": {
      "op": "DUP3"
    },
    "11202": {
      "op": "ADD"
    },
    "11203": {
      "op": "DUP7"
    },
    "11204": {
      "op": "SWAP1"
    },
    "11205": {
      "op": "MSTORE"
    },
    "11206": {
      "op": "DUP5"
    },
    "11207": {
      "op": "AND"
    },
    "11208": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11210": {
      "op": "DUP3"
    },
    "11211": {
      "op": "ADD"
    },
    "11212": {
      "op": "MSTORE"
    },
    "11213": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11215": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11217": {
      "op": "DUP3"
    },
    "11218": {
      "op": "ADD"
    },
    "11219": {
      "op": "DUP2"
    },
    "11220": {
      "op": "SWAP1"
    },
    "11221": {
      "op": "MSTORE"
    },
    "11222": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11224": {
      "op": "SWAP1"
    },
    "11225": {
      "op": "PUSH2",
      "value": "0x28A7"
    },
    "11228": {
      "op": "SWAP1"
    },
    "11229": {
      "op": "DUP4"
    },
    "11230": {
      "op": "ADD"
    },
    "11231": {
      "op": "DUP6"
    },
    "11232": {
      "op": "PUSH2",
      "value": "0x1ECC"
    },
    "11235": {
      "jump": "i",
      "op": "JUMP"
    }
  },
  "sha1": "9705514be3321cad79ca4a0eb85f1c64044892c7",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.11;\n\nimport \"@openzeppelin/contracts/proxy/utils/Initializable.sol\";\nimport \"../CLCore/CLStorage.sol\";\n\n\n/// @title Contract to implement and test the basic fuctions of CLHouses\n/// @author Leonardo Urrego\n/// @notice This contract for test only the most basic interactions\ncontract CLHouse is CLStorage, Initializable {\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor() {\n        _disableInitializers();\n    }\n\n    /// @notice Create a new CLH\n    /// @dev Some parameters can be ignored depending on the governance model\n    /// @param _owner The address of the deployed wallet\n    /// @param _houseName Name given by the owner\n    /// @param _housePrivate If is set to 1, the CLH is set to private\n    /// @param _houseOpen If is set to 1, the CLH is set to Open\n    /// @param _govModel keccak256 hash of the governance model, see the __GOV_* constans\n    /// @param _govRules Array for goverment rules see `enum gRule`\n    /// @param _CLC Array for CL Contracts see `enum eCLC`\n    /// @param _ManagerWallets Whitelist of address for invitate as managers\n    function Init(\n        address _owner, \n        string memory _houseName,\n        bool _housePrivate,\n        bool _houseOpen,\n        bytes32 _govModel,\n        uint256[3] memory _govRules,\n        address[4] memory _CLC,\n        address[] memory _ManagerWallets\n    )\n        external\n        reinitializer( __UPGRADEABLE_CLH_VERSION__ )\n    {\n        /// @custom:oz-upgrades-unsafe-allow delegatecall\n        (bool successDGTCLL, ) = _CLC[ uint256( eCLC.CLLConstructorCLH ) ].delegatecall(\n            abi.encodeWithSignature(\n                \"__CLHConstructor(address,string,bool,bool,bytes32,uint256[3],address[4],address[])\",\n                _owner, \n                _houseName,\n                _housePrivate,\n                _houseOpen,\n                _govModel,\n                _govRules,\n                _CLC,\n                _ManagerWallets\n            )\n        );\n\n        if( !successDGTCLL ) {\n            assembly {\n                let ptr := mload(0x40)\n                let size := returndatasize()\n                returndatacopy(ptr, 0, size)\n                revert(ptr, size)\n            }\n        }\n    }\n\n    /// @notice Execute (or reject) a proposal computing the votes and the governance model\n    /// @dev Normally is called internally after each vote\n    /// @param _propId ID of the proposal, based on `arrProposals`\n    /// @return status True if the proposal can be execute, false in other cases\n    /// @return message result of the transaction\n    function ExecProp(\n        uint256 _propId\n    )\n        public\n        returns(\n            bool status,\n            string memory message\n        )\n    {\n        address CLLGovernance = CCLFACTORY.CLLGovernance();\n        /// @custom:oz-upgrades-unsafe-allow delegatecall\n        (bool successDGTCLL, ) = CLLGovernance.delegatecall(\n            abi.encodeWithSignature(\n                \"ExecProp(uint256)\",\n                _propId\n            )\n        );\n\n        if( !successDGTCLL ) {\n            assembly {\n                let ptr := mload(0x40)\n                let size := returndatasize()\n                returndatacopy(ptr, 0, size)\n                revert(ptr, size)\n            }\n        }\n\n        return ( true , \"Success executed proposal\" );\n    }\n\n    /// @notice Used to vote a proposal\n    /// @dev After vote the proposal automatically try to be executed\n    /// @param _propId ID of the proposal, based on `arrProposals`\n    /// @param _support True for accept, false to reject\n    /// @param _justification About your vote\n    function VoteProposal(\n        uint256 _propId,\n        bool _support,\n        string memory _justification,\n        bytes memory _signature\n    )\n        public\n    {\n        address CLLGovernance = CCLFACTORY.CLLGovernance();\n        /// @custom:oz-upgrades-unsafe-allow delegatecall\n        (bool successDGTCLL, ) = CLLGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"VoteProposal(uint256,bool,string,bytes)\",\n                _propId,\n                _support,\n                _justification,\n                _signature\n            )\n        );\n\n        if( !successDGTCLL ) {\n            assembly {\n                let ptr := mload(0x40)\n                let size := returndatasize()\n                returndatacopy(ptr, 0, size)\n                revert(ptr, size)\n            }\n        }\n    }\n\n    /// @notice Generate a new proposal to invite a new user\n    /// @dev the execution of this proposal only create an invitation \n    /// @param _walletAddr  Address of the new user\n    /// @param _name Can be the nickname or other reference to the User\n    /// @param _description A text for the proposal\n    /// @param _isManager True if is for a manager\n    /// @return propId ID of the new proposal, based on `arrProposals`\n    function PropInviteUser(\n        address _walletAddr,\n        string memory _name,\n        string memory _description,\n        bool _isManager,\n        uint256 _delayTime,\n        bytes memory _signature\n    )\n        external\n        returns( uint256 propId )\n    {\n        address CLLGovernance = CCLFACTORY.CLLGovernance();\n        /// @custom:oz-upgrades-unsafe-allow delegatecall\n        (bool successDGTCLL, ) = CLLGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropInviteUser(address,string,string,bool,uint256,bytes)\",\n                _walletAddr,\n                _name,\n                _description,\n                _isManager,\n                _delayTime,\n                _signature\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            propId := mload(ptr)\n        }\n    }\n\n    /// @notice Generate a new proposal for remove a user\n    /// @dev The user can be a managaer\n    /// @param _walletAddr user Address to be removed\n    /// @param _description About the proposal\n    /// @return propId ID of the new proposal, based on `arrProposals`\n    function PropRemoveUser(\n        address _walletAddr,\n        string memory _description,\n        uint256 _delayTime,\n        bytes memory _signature\n    )\n        external\n        returns( uint256 propId )\n    {\n        address CLLGovernance = CCLFACTORY.CLLGovernance();\n        /// @custom:oz-upgrades-unsafe-allow delegatecall\n        (bool successDGTCLL, ) = CLLGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropRemoveUser(address,string,uint256,bytes)\",\n                _walletAddr,\n                _description,\n                _delayTime,\n                _signature\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            propId := mload(ptr)\n        }\n    }\n\n    /// @notice generate a new proposal to transfer ETH in weis\n    /// @dev When execute this proposal, the transfer is made\n    /// @param _to Recipient address\n    /// @param _amountOutCLV Amount to transfer (in wei)\n    /// @param _description About this proposal\n    /// @return propId ID of the new proposal, based on `arrProposals`\n    function PropTxWei(\n        address _to,\n        uint256 _amountOutCLV,\n        string memory _description,\n        uint256 _delayTime\n    )\n        external\n        returns( uint256 propId )\n    {\n        address CLLGovernance = CCLFACTORY.CLLGovernance();\n        /// @custom:oz-upgrades-unsafe-allow delegatecall\n        (bool successDGTCLL, ) = CLLGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropTxWei(address,uint256,string,uint256)\",\n                _to,\n                _amountOutCLV,\n                _description,\n                _delayTime\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            propId := mload(ptr)\n        }\n    }\n\n    /// @notice generate a new proposal to transfer ETH in weis\n    /// @dev When execute this proposal, the transfer is made\n    /// @param _to Recipient address\n    /// @param _amountOutCLV Amount to transfer (in wei)\n    /// @param _description About this proposal\n    /// @return propId ID of the new proposal, based on `arrProposals`\n    function PropTxERC20(\n        address _to,\n        uint256 _amountOutCLV,\n        address _tokenOutCLV,\n        string memory _description,\n        uint256 _delayTime\n    )\n        external\n        returns( uint256 propId )\n    {\n        address CLLGovernance = CCLFACTORY.CLLGovernance();\n        /// @custom:oz-upgrades-unsafe-allow delegatecall\n        (bool successDGTCLL, ) = CLLGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropTxERC20(address,uint256,address,string,uint256)\",\n                _to,\n                _amountOutCLV,\n                _tokenOutCLV,\n                _description,\n                _delayTime\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            propId := mload(ptr)\n        }\n    }\n\n    /// @notice Generate a new proposal for change some governance parameters\n    /// @dev When execute this proposal the new values will be set\n    /// @param _newApprovPercentage The new percentaje for accept or reject a proposal\n    /// @param _description About the new proposal \n    /// @return propId ID of the new proposal, based on `arrProposals`\n    function PropGovRules(\n        uint256 _newApprovPercentage,\n        string memory _description,\n        uint256 _delayTime\n    )\n        external\n        returns( uint256 propId )\n    {\n        address CLLGovernance = CCLFACTORY.CLLGovernance();\n        /// @custom:oz-upgrades-unsafe-allow delegatecall\n        (bool successDGTCLL, ) = CLLGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropGovRules(uint256,string,uint256)\",\n                _newApprovPercentage,\n                _description,\n                _delayTime\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            propId := mload(ptr)\n        }\n    }\n\n    /// @notice Generate a proposal from a user that want to join to the CLH\n    /// @dev Only avaiable in public CLH\n    /// @param _name Nickname or other user identification\n    /// @param _description About the request\n    /// @return propId ID of the new proposal, based on `arrProposals`\n    function PropRequestToJoin(\n        string memory _name,\n        string memory _description,\n        bytes memory _signature\n    )\n        external\n        returns( uint256 )\n    {\n        address CLLGovernance = CCLFACTORY.CLLGovernance();\n        /// @custom:oz-upgrades-unsafe-allow delegatecall\n        (bool successDGTCLL, ) = CLLGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropRequestToJoin(string,string,bytes)\",\n                _name,\n                _description,\n                _signature\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            return(ptr, size)\n        }\n    }\n\n    /// @notice For an user that have an invitation pending\n    /// @param _acceptance True for accept the invitation\n    function AcceptRejectInvitation(\n        bool _acceptance,\n        bytes memory _signature\n    )\n        external\n    {\n        address CLLUserManagement = CCLFACTORY.CLLUserManagement();\n        /// @custom:oz-upgrades-unsafe-allow delegatecall\n        (bool successDGTCLL, ) = CLLUserManagement.delegatecall(\n            abi.encodeWithSignature( \n                \"AcceptRejectInvitation(bool,bytes)\",\n                _acceptance,\n                _signature\n            )\n        );\n\n        if( !successDGTCLL ) {\n            assembly {\n                let ptr := mload(0x40)\n                let size := returndatasize()\n                returndatacopy(ptr, 0, size)\n                revert(ptr, size)\n            }\n        }\n    }\n\n    function PropSwapERC20(\n        address _tokenOutCLV,\n        address _tokenInCLV,\n        uint256 _amountOutCLV,\n        string memory _description,\n        uint256 _delayTime\n    )\n        external\n        returns( uint256 )\n    {\n        address CLLGovernance = CCLFACTORY.CLLGovernance();\n        /// @custom:oz-upgrades-unsafe-allow delegatecall\n        (bool successDGTCLL, ) = CLLGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropSwapERC20(address,address,uint256,string,uint256)\",\n                _tokenOutCLV,\n                _tokenInCLV,\n                _amountOutCLV,\n                _description,\n                _delayTime\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            return(ptr, size)\n        }\n    }\n\n    function PropSellERC20(\n        address _tokenOutCLV,\n        uint256 _amountOutCLV,\n        string memory _description,\n        uint256 _delayTime\n    )\n        external\n        returns( uint256 )\n    {\n        address CLLGovernance = CCLFACTORY.CLLGovernance();\n        /// @custom:oz-upgrades-unsafe-allow delegatecall\n        (bool successDGTCLL, ) = CLLGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropSellERC20(address,uint256,string,uint256)\",\n                _tokenOutCLV,\n                _amountOutCLV,\n                _description,\n                _delayTime\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            return(ptr, size)\n        }\n    }\n\n    function PropBuyERC20(\n        address _tokenInCLV,\n        uint256 _amountOutCLV,\n        string memory _description,\n        uint256 _delayTime\n    )\n        external\n        returns( uint256 )\n    {\n        address CLLGovernance = CCLFACTORY.CLLGovernance();\n        /// @custom:oz-upgrades-unsafe-allow delegatecall\n        (bool successDGTCLL, ) = CLLGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropBuyERC20(address,uint256,string,uint256)\",\n                _tokenInCLV,\n                _amountOutCLV,\n                _description,\n                _delayTime\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            return(ptr, size)\n        }\n    }\n\n\n    /// @notice Vote for multiple proposal\n    /// @param _propId Array with ID of the proposal to votes\n    /// @param _support is the Vote (True or False) for all proposals\n    /// @param _justification Description of the vote\n    function bulkVote(\n        uint256[] memory _propId,\n        bool _support,\n        string memory _justification,\n        bytes memory _signature\n    )\n        external\n    {\n        address CLLGovernance = CCLFACTORY.CLLGovernance();\n        /// @custom:oz-upgrades-unsafe-allow delegatecall\n        (bool successDGTCLL, ) = CLLGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"bulkVote(uint256[],bool,string,bytes)\",\n                _propId,\n                _support,\n                _justification,\n                _signature\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            return(ptr, size)\n        }\n    }\n\n    /// @notice Length of arrUsers array\n    function GetArrUsersLength() external view returns( uint256 ){\n        return arrUsers.length;\n    }\n\n    /// @notice Length of arrProposals array\n    function GetArrProposalsLength() external view returns( uint256 ){\n        return arrProposals.length;\n    }\n\n    /// @notice The list of all Proposals\n    /// @return arrProposals the array with all proposals\n    function GetProposalList() external view returns( strProposal[] memory ) {\n        return arrProposals;\n    }\n\n    /// @notice Get complete array of arrDataPropUser\n    /// @return arrDataPropUser the array with all data\n    function GetArrDataPropUser() external view returns( strDataUser[] memory ) {\n        return arrDataPropUser;\n    }\n}",
  "sourceMap": "327:17163:50:-:0;;;431:53;;;;;;;;;-1:-1:-1;455:22:50;:20;:22::i;:::-;327:17163;;5366:279:18;5434:13;;-1:-1:-1;;;5434:13:18;;;;5433:14;5425:66;;;;-1:-1:-1;;;5425:66:18;;216:2:62;5425:66:18;;;198:21:62;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:62;;;338:37;392:19;;5425:66:18;;;;;;;;5505:12;;5520:15;-1:-1:-1;;;5505:12:18;;;;;:30;5501:138;;;5551:12;:30;;-1:-1:-1;;;;5551:30:18;-1:-1:-1;;;5551:30:18;;;5600:28;;5566:15;564:36:62;;5600:28:18;;552:2:62;537:18;5600:28:18;;;;;;;5501:138;5366:279::o;422:184:62:-;327:17163:50;;;;;;",
  "sourcePath": "contracts/CLHouse/CLHouse.sol",
  "type": "contract"
}