{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newApprovPercentage",
          "type": "uint256"
        }
      ],
      "name": "evtChangeGovRules",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum proposalEvent",
          "name": "eventProposal",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "propId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum proposalType",
          "name": "typeProposal",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "evtProposal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenOutCLV",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountOutCLV",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenInCLV",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountReceived",
          "type": "uint256"
        }
      ],
      "name": "evtSwapERC20",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "walletAddr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAdd",
          "type": "address"
        }
      ],
      "name": "evtTxERC20",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum assetsEvent",
          "name": "typeEvent",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "walletAddr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "evtTxEth",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum userEvent",
          "name": "eventUser",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "walletAddr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "evtUser",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "propId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "position",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "justification",
          "type": "string"
        }
      ],
      "name": "evtVoted",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_acceptance",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "AcceptRejectInvitation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CLHSAFE",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_propId",
          "type": "uint256"
        }
      ],
      "name": "ExecProp",
      "outputs": [
        {
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "message",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "GetArrDataPropAddUser",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "walletAddr",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "isManager",
              "type": "bool"
            }
          ],
          "internalType": "struct strDataAddUser[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "GetArrProposalsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "GetArrUsersLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "GetProposalList",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "proponent",
              "type": "address"
            },
            {
              "internalType": "enum proposalType",
              "name": "typeProposal",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "propDataId",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "numVotes",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "againstVotes",
              "type": "uint8"
            },
            {
              "internalType": "bool",
              "name": "executed",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "rejected",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "internalType": "struct strProposal[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "HOUSE_GOVERNANCE_MODEL",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "HOUSE_NAME",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_houseName",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "_housePrivate",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "_govModel",
          "type": "bytes32"
        },
        {
          "internalType": "uint8[3]",
          "name": "_govRules",
          "type": "uint8[3]"
        },
        {
          "internalType": "address[5]",
          "name": "_CLC",
          "type": "address[5]"
        },
        {
          "internalType": "address[]",
          "name": "_ManagerWallets",
          "type": "address[]"
        }
      ],
      "name": "Init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenInCLV",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountOutCLV",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        }
      ],
      "name": "PropBuyERC20",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_newApprovPercentage",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        }
      ],
      "name": "PropGovRules",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "propId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_walletAddr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "_isManager",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "PropInviteUser",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "propId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_walletAddr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "PropRemoveUser",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "propId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "PropRequestToJoin",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenOutCLV",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountOutCLV",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        }
      ],
      "name": "PropSellERC20",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenOutCLV",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenInCLV",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountOutCLV",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        }
      ],
      "name": "PropSwapERC20",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountOutCLV",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_tokenOutCLV",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        }
      ],
      "name": "PropTxERC20",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "propId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountOutCLV",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        }
      ],
      "name": "PropTxWei",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "propId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_propId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_support",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "_justification",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "VoteProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "arrDataPropAddUser",
      "outputs": [
        {
          "internalType": "address",
          "name": "walletAddr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "isManager",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "arrDataPropGovRules",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "newApprovPercentage",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "arrDataPropTxAssets",
      "outputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountOutCLV",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tokenOutCLV",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenInCLV",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "arrProposals",
      "outputs": [
        {
          "internalType": "address",
          "name": "proponent",
          "type": "address"
        },
        {
          "internalType": "enum proposalType",
          "name": "typeProposal",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "propDataId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "numVotes",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "againstVotes",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "rejected",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "arrUsers",
      "outputs": [
        {
          "internalType": "address",
          "name": "walletAddr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isUser",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isManager",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "govRuleApprovPercentage",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "govRuleMaxManagers",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "govRuleMaxUsers",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "housePrivate",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "mapIdUser",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "mapInvitationUser",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "mapVotes",
      "outputs": [
        {
          "internalType": "bool",
          "name": "voted",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "inSupport",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "justification",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nftAdmin",
      "outputs": [
        {
          "internalType": "contract CLHNFT",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nftInvitation",
      "outputs": [
        {
          "internalType": "contract CLHNFT",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nftMember",
      "outputs": [
        {
          "internalType": "contract CLHNFT",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numManagers",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numUsers",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultCLH",
      "outputs": [
        {
          "internalType": "contract CLVault",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "10": "/home/trecetp/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/proxy/utils/Initializable.sol",
    "29": "contracts/CLHouse/CLHouse.sol",
    "33": "contracts/CLHouse/CLStorage.sol",
    "35": "contracts/CLHouse/ICLHouse.sol"
  },
  "ast": {
    "absolutePath": "contracts/CLHouse/CLHouse.sol",
    "exportedSymbols": {
      "Address": [
        3510
      ],
      "CLHNFT": [
        4082
      ],
      "CLHouse": [
        931
      ],
      "CLHouseApi": [
        5658
      ],
      "CLStorage": [
        2938
      ],
      "CLVault": [
        3970
      ],
      "Context": [
        6846
      ],
      "Counters": [
        6754
      ],
      "DebugDLGTCLL": [
        7075
      ],
      "ERC165": [
        7809
      ],
      "ERC721": [
        6525
      ],
      "ERC721Burnable": [
        6555
      ],
      "ERC721URIStorage": [
        6680
      ],
      "ICLHouse": [
        7398
      ],
      "IERC165": [
        7821
      ],
      "IERC20": [
        6975
      ],
      "IERC721": [
        7514
      ],
      "IERC721Metadata": [
        7559
      ],
      "IERC721Receiver": [
        7532
      ],
      "ISwapRouter": [
        4823
      ],
      "IUniswapV3SwapCallback": [
        6897
      ],
      "Initializable": [
        2795
      ],
      "InvalidGovernanceType": [
        7069
      ],
      "Ownable": [
        4575
      ],
      "Strings": [
        7785
      ],
      "TransferHelper": [
        4994
      ],
      "__CONTRACT_NAME_HASH__": [
        7004
      ],
      "__CONTRACT_VERSION_HASH__": [
        7009
      ],
      "__GOV_COMMITTEE__": [
        6994
      ],
      "__GOV_DICTATORSHIP__": [
        6989
      ],
      "__GOV_SIMPLE_MAJORITY__": [
        6999
      ],
      "__STR_EIP712DOMAIN_HASH__": [
        7017
      ],
      "__STR_OCDELUSER_HASH__": [
        7049
      ],
      "__STR_OCINVIT_HASH__": [
        7025
      ],
      "__STR_OCNEWCLH_HASH__": [
        7065
      ],
      "__STR_OCNEWUSER_HASH__": [
        7041
      ],
      "__STR_OCREQUEST_HASH__": [
        7057
      ],
      "__STR_OCVOTE_HASH__": [
        7033
      ],
      "__UPGRADEABLE_CLF_VERSION__": [
        6984
      ],
      "__UPGRADEABLE_CLH_VERSION__": [
        6981
      ],
      "assetsEvent": [
        7089
      ],
      "eCLC": [
        7113
      ],
      "gRule": [
        7107
      ],
      "proposalEvent": [
        7093
      ],
      "proposalType": [
        7103
      ],
      "strDataAddUser": [
        7158
      ],
      "strDataGovRules": [
        7170
      ],
      "strDataTxAssets": [
        7167
      ],
      "strProposal": [
        7144
      ],
      "strUser": [
        7124
      ],
      "strVote": [
        7151
      ],
      "userEvent": [
        7082
      ]
    },
    "id": 932,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 456,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:29"
      },
      {
        "absolutePath": "/home/trecetp/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/proxy/utils/Initializable.sol",
        "file": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
        "id": 457,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 932,
        "sourceUnit": 2796,
        "src": "58:63:29",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/CLHouse/CLStorage.sol",
        "file": "./CLStorage.sol",
        "id": 458,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 932,
        "sourceUnit": 2939,
        "src": "122:25:29",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 460,
              "name": "CLStorage",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2938,
              "src": "339:9:29"
            },
            "id": 461,
            "nodeType": "InheritanceSpecifier",
            "src": "339:9:29"
          },
          {
            "baseName": {
              "id": 462,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2795,
              "src": "350:13:29"
            },
            "id": 463,
            "nodeType": "InheritanceSpecifier",
            "src": "350:13:29"
          }
        ],
        "canonicalName": "CLHouse",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 459,
          "nodeType": "StructuredDocumentation",
          "src": "150:169:29",
          "text": "@title Contract to implement and test the basic fuctions of CLHouses\n @author Leonardo Urrego\n @notice This contract for test only the most basic interactions"
        },
        "fullyImplemented": true,
        "id": 931,
        "linearizedBaseContracts": [
          931,
          2795,
          2938
        ],
        "name": "CLHouse",
        "nameLocation": "328:7:29",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 470,
              "nodeType": "Block",
              "src": "437:39:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 467,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2794,
                      "src": "447:20:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "447:22:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 469,
                  "nodeType": "ExpressionStatement",
                  "src": "447:22:29"
                }
              ]
            },
            "documentation": {
              "id": 464,
              "nodeType": "StructuredDocumentation",
              "src": "370:48:29",
              "text": "@custom:oz-upgrades-unsafe-allow constructor"
            },
            "id": 471,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 465,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "434:2:29"
            },
            "returnParameters": {
              "id": 466,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "437:0:29"
            },
            "scope": 931,
            "src": "423:53:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 525,
              "nodeType": "Block",
              "src": "1382:745:29",
              "statements": [
                {
                  "assignments": [
                    498,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 498,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "1456:13:29",
                      "nodeType": "VariableDeclaration",
                      "scope": 525,
                      "src": "1451:18:29",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 497,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1451:4:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "documentation": "@custom:oz-upgrades-unsafe-allow delegatecall",
                  "id": 519,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "5f5f434c48436f6e7374727563746f7228616464726573732c737472696e672c626f6f6c2c627974657333322c75696e74385b335d2c616464726573735b355d2c616464726573735b5d29",
                            "id": 509,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1584:77:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9f221d81966e47150dab845114b2ad5856a09b12dc49157b027001588ee923c0",
                              "typeString": "literal_string \"__CLHConstructor(address,string,bool,bytes32,uint8[3],address[5],address[])\""
                            },
                            "value": "__CLHConstructor(address,string,bool,bytes32,uint8[3],address[5],address[])"
                          },
                          {
                            "id": 510,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 474,
                            "src": "1679:6:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 511,
                            "name": "_houseName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 476,
                            "src": "1704:10:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 512,
                            "name": "_housePrivate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 478,
                            "src": "1732:13:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 513,
                            "name": "_govModel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 480,
                            "src": "1763:9:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 514,
                            "name": "_govRules",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 484,
                            "src": "1790:9:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint8_$3_memory_ptr",
                              "typeString": "uint8[3] memory"
                            }
                          },
                          {
                            "id": 515,
                            "name": "_CLC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 488,
                            "src": "1817:4:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$5_memory_ptr",
                              "typeString": "address[5] memory"
                            }
                          },
                          {
                            "id": 516,
                            "name": "_ManagerWallets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 491,
                            "src": "1839:15:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9f221d81966e47150dab845114b2ad5856a09b12dc49157b027001588ee923c0",
                              "typeString": "literal_string \"__CLHConstructor(address,string,bool,bytes32,uint8[3],address[5],address[])\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint8_$3_memory_ptr",
                              "typeString": "uint8[3] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_address_$5_memory_ptr",
                              "typeString": "address[5] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          ],
                          "expression": {
                            "id": 507,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1543:3:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 508,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "1543:23:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1543:325:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 499,
                          "name": "_CLC",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 488,
                          "src": "1475:4:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$5_memory_ptr",
                            "typeString": "address[5] memory"
                          }
                        },
                        "id": 505,
                        "indexExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 502,
                                "name": "eCLC",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7113,
                                "src": "1490:4:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_eCLC_$7113_$",
                                  "typeString": "type(enum eCLC)"
                                }
                              },
                              "id": 503,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "CLLConstructorCLH",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7110,
                              "src": "1490:22:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_eCLC_$7113",
                                "typeString": "enum eCLC"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_eCLC_$7113",
                                "typeString": "enum eCLC"
                              }
                            ],
                            "id": 501,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1481:7:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 500,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1481:7:29",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1481:33:29",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1475:41:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 506,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "1475:54:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1475:403:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1450:428:29"
                },
                {
                  "condition": {
                    "id": 521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1893:14:29",
                    "subExpression": {
                      "id": 520,
                      "name": "successDGTCLL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 498,
                      "src": "1894:13:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 524,
                  "nodeType": "IfStatement",
                  "src": "1889:232:29",
                  "trueBody": {
                    "id": 523,
                    "nodeType": "Block",
                    "src": "1910:211:29",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "1933:178:29",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1951:22:29",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1968:4:29",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1962:5:29"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1962:11:29"
                              },
                              "variables": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulTypedName",
                                  "src": "1955:3:29",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1990:28:29",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "returndatasize",
                                  "nodeType": "YulIdentifier",
                                  "src": "2002:14:29"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2002:16:29"
                              },
                              "variables": [
                                {
                                  "name": "size",
                                  "nodeType": "YulTypedName",
                                  "src": "1994:4:29",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "2050:3:29"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2055:1:29",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "2058:4:29"
                                  }
                                ],
                                "functionName": {
                                  "name": "returndatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "2035:14:29"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2035:28:29"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2035:28:29"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "2087:3:29"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "2092:4:29"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "2080:6:29"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2080:17:29"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2080:17:29"
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [],
                        "id": 522,
                        "nodeType": "InlineAssembly",
                        "src": "1924:187:29"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 472,
              "nodeType": "StructuredDocumentation",
              "src": "482:578:29",
              "text": "@notice Create a new CLH\n @dev Some parameters can be ignored depending on the governance model\n @param _owner The address of the deployed wallet\n @param _houseName Name given by the owner\n @param _housePrivate If is set to 1, the CLH is set to private\n @param _govModel keccak256 hash of the governance model, see the __GOV_* constans\n @param _govRules Array for goverment rules see `enum gRule`\n @param _CLC Array for CL Contracts see `enum eCLC`\n @param _ManagerWallets Whitelist of address for invitate as managers"
            },
            "functionSelector": "5c423330",
            "id": 526,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 494,
                    "name": "__UPGRADEABLE_CLH_VERSION__",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6981,
                    "src": "1348:27:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 495,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 493,
                  "name": "reinitializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2748,
                  "src": "1333:13:29"
                },
                "nodeType": "ModifierInvocation",
                "src": "1333:44:29"
              }
            ],
            "name": "Init",
            "nameLocation": "1074:4:29",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 492,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 474,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "1096:6:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 526,
                  "src": "1088:14:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 473,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1088:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 476,
                  "mutability": "mutable",
                  "name": "_houseName",
                  "nameLocation": "1127:10:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 526,
                  "src": "1113:24:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 475,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1113:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 478,
                  "mutability": "mutable",
                  "name": "_housePrivate",
                  "nameLocation": "1152:13:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 526,
                  "src": "1147:18:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 477,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1147:4:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 480,
                  "mutability": "mutable",
                  "name": "_govModel",
                  "nameLocation": "1183:9:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 526,
                  "src": "1175:17:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 479,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1175:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 484,
                  "mutability": "mutable",
                  "name": "_govRules",
                  "nameLocation": "1218:9:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 526,
                  "src": "1202:25:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint8_$3_memory_ptr",
                    "typeString": "uint8[3]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 481,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "1202:5:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 483,
                    "length": {
                      "hexValue": "33",
                      "id": 482,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1208:1:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1202:8:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint8_$3_storage_ptr",
                      "typeString": "uint8[3]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 488,
                  "mutability": "mutable",
                  "name": "_CLC",
                  "nameLocation": "1255:4:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 526,
                  "src": "1237:22:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$5_memory_ptr",
                    "typeString": "address[5]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 485,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1237:7:29",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 487,
                    "length": {
                      "hexValue": "35",
                      "id": 486,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1245:1:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      },
                      "value": "5"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1237:10:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$5_storage_ptr",
                      "typeString": "address[5]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 491,
                  "mutability": "mutable",
                  "name": "_ManagerWallets",
                  "nameLocation": "1286:15:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 526,
                  "src": "1269:32:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 489,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1269:7:29",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 490,
                    "nodeType": "ArrayTypeName",
                    "src": "1269:9:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1078:229:29"
            },
            "returnParameters": {
              "id": 496,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1382:0:29"
            },
            "scope": 931,
            "src": "1065:1062:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 556,
              "nodeType": "Block",
              "src": "2636:547:29",
              "statements": [
                {
                  "assignments": [
                    537,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 537,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "2710:13:29",
                      "nodeType": "VariableDeclaration",
                      "scope": 556,
                      "src": "2705:18:29",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 536,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2705:4:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "documentation": "@custom:oz-upgrades-unsafe-allow delegatecall",
                  "id": 546,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4578656350726f702875696e7432353629",
                            "id": 542,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2810:19:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_5f3d99b36eccea2d9a38fa911daeb9ce94a9ac486dd03f1648c38f62cafa2119",
                              "typeString": "literal_string \"ExecProp(uint256)\""
                            },
                            "value": "ExecProp(uint256)"
                          },
                          {
                            "id": 543,
                            "name": "_propId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 529,
                            "src": "2847:7:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_5f3d99b36eccea2d9a38fa911daeb9ce94a9ac486dd03f1648c38f62cafa2119",
                              "typeString": "literal_string \"ExecProp(uint256)\""
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 540,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2769:3:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "2769:23:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2769:99:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 538,
                        "name": "CLLGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2819,
                        "src": "2729:13:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 539,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "2729:26:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2729:149:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2704:174:29"
                },
                {
                  "condition": {
                    "id": 548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2893:14:29",
                    "subExpression": {
                      "id": 547,
                      "name": "successDGTCLL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 537,
                      "src": "2894:13:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 551,
                  "nodeType": "IfStatement",
                  "src": "2889:232:29",
                  "trueBody": {
                    "id": 550,
                    "nodeType": "Block",
                    "src": "2910:211:29",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "2933:178:29",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2951:22:29",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2968:4:29",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2962:5:29"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2962:11:29"
                              },
                              "variables": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulTypedName",
                                  "src": "2955:3:29",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2990:28:29",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "returndatasize",
                                  "nodeType": "YulIdentifier",
                                  "src": "3002:14:29"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3002:16:29"
                              },
                              "variables": [
                                {
                                  "name": "size",
                                  "nodeType": "YulTypedName",
                                  "src": "2994:4:29",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "3050:3:29"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3055:1:29",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "3058:4:29"
                                  }
                                ],
                                "functionName": {
                                  "name": "returndatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "3035:14:29"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3035:28:29"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3035:28:29"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "3087:3:29"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "3092:4:29"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "3080:6:29"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3080:17:29"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3080:17:29"
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [],
                        "id": 549,
                        "nodeType": "InlineAssembly",
                        "src": "2924:187:29"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "74727565",
                        "id": 552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3140:4:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "537563636573732065786563757465642070726f706f73616c",
                        "id": 553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3147:27:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cc5063be902007aa4094c05d7977aa17bd625bcc90d4b58bc658ed91467f2f04",
                          "typeString": "literal_string \"Success executed proposal\""
                        },
                        "value": "Success executed proposal"
                      }
                    ],
                    "id": 554,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3138:38:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_stringliteral_cc5063be902007aa4094c05d7977aa17bd625bcc90d4b58bc658ed91467f2f04_$",
                      "typeString": "tuple(bool,literal_string \"Success executed proposal\")"
                    }
                  },
                  "functionReturnParameters": 535,
                  "id": 555,
                  "nodeType": "Return",
                  "src": "3131:45:29"
                }
              ]
            },
            "documentation": {
              "id": 527,
              "nodeType": "StructuredDocumentation",
              "src": "2133:344:29",
              "text": "@notice Execute (or reject) a proposal computing the votes and the governance model\n @dev Normally is called internally after each vote\n @param _propId ID of the proposal, based on `arrProposals`\n @return status True if the proposal can be execute, false in other cases\n @return message result of the transaction"
            },
            "functionSelector": "5f3d99b3",
            "id": 557,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ExecProp",
            "nameLocation": "2491:8:29",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 530,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 529,
                  "mutability": "mutable",
                  "name": "_propId",
                  "nameLocation": "2517:7:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 557,
                  "src": "2509:15:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 528,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2509:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2499:31:29"
            },
            "returnParameters": {
              "id": 535,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 532,
                  "mutability": "mutable",
                  "name": "status",
                  "nameLocation": "2580:6:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 557,
                  "src": "2575:11:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 531,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2575:4:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 534,
                  "mutability": "mutable",
                  "name": "message",
                  "nameLocation": "2614:7:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 557,
                  "src": "2600:21:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 533,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2600:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2561:70:29"
            },
            "scope": 931,
            "src": "2482:701:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 588,
              "nodeType": "Block",
              "src": "3635:600:29",
              "statements": [
                {
                  "assignments": [
                    570,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 570,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "3709:13:29",
                      "nodeType": "VariableDeclaration",
                      "scope": 588,
                      "src": "3704:18:29",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 569,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3704:4:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "documentation": "@custom:oz-upgrades-unsafe-allow delegatecall",
                  "id": 582,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "566f746550726f706f73616c2875696e743235362c626f6f6c2c737472696e672c627974657329",
                            "id": 575,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3810:41:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c2b3aa089091839f7325bab8b8ed1dd8ad38b8c301fe29f7fcd75b4947c433c7",
                              "typeString": "literal_string \"VoteProposal(uint256,bool,string,bytes)\""
                            },
                            "value": "VoteProposal(uint256,bool,string,bytes)"
                          },
                          {
                            "id": 576,
                            "name": "_propId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 560,
                            "src": "3869:7:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 577,
                            "name": "_support",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 562,
                            "src": "3894:8:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 578,
                            "name": "_justification",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 564,
                            "src": "3920:14:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 579,
                            "name": "_signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 566,
                            "src": "3952:10:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c2b3aa089091839f7325bab8b8ed1dd8ad38b8c301fe29f7fcd75b4947c433c7",
                              "typeString": "literal_string \"VoteProposal(uint256,bool,string,bytes)\""
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 573,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3768:3:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "3768:23:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3768:208:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 571,
                        "name": "CLLGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2819,
                        "src": "3728:13:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 572,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "3728:26:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3728:258:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3703:283:29"
                },
                {
                  "condition": {
                    "id": 584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "4001:14:29",
                    "subExpression": {
                      "id": 583,
                      "name": "successDGTCLL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 570,
                      "src": "4002:13:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 587,
                  "nodeType": "IfStatement",
                  "src": "3997:232:29",
                  "trueBody": {
                    "id": 586,
                    "nodeType": "Block",
                    "src": "4018:211:29",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "4041:178:29",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4059:22:29",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4076:4:29",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "4070:5:29"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4070:11:29"
                              },
                              "variables": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulTypedName",
                                  "src": "4063:3:29",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4098:28:29",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "returndatasize",
                                  "nodeType": "YulIdentifier",
                                  "src": "4110:14:29"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4110:16:29"
                              },
                              "variables": [
                                {
                                  "name": "size",
                                  "nodeType": "YulTypedName",
                                  "src": "4102:4:29",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "4158:3:29"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4163:1:29",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "4166:4:29"
                                  }
                                ],
                                "functionName": {
                                  "name": "returndatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "4143:14:29"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4143:28:29"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4143:28:29"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "4195:3:29"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "4200:4:29"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "4188:6:29"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4188:17:29"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4188:17:29"
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [],
                        "id": 585,
                        "nodeType": "InlineAssembly",
                        "src": "4032:187:29"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 558,
              "nodeType": "StructuredDocumentation",
              "src": "3189:275:29",
              "text": "@notice Used to vote a proposal\n @dev After vote the proposal automatically try to be executed\n @param _propId ID of the proposal, based on `arrProposals`\n @param _support True for accept, false to reject\n @param _justification About your vote"
            },
            "functionSelector": "c2b3aa08",
            "id": 589,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "VoteProposal",
            "nameLocation": "3478:12:29",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 567,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 560,
                  "mutability": "mutable",
                  "name": "_propId",
                  "nameLocation": "3508:7:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 589,
                  "src": "3500:15:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 559,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3500:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 562,
                  "mutability": "mutable",
                  "name": "_support",
                  "nameLocation": "3530:8:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 589,
                  "src": "3525:13:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 561,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3525:4:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 564,
                  "mutability": "mutable",
                  "name": "_justification",
                  "nameLocation": "3562:14:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 589,
                  "src": "3548:28:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 563,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3548:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 566,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "3599:10:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 589,
                  "src": "3586:23:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 565,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3586:5:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3490:125:29"
            },
            "returnParameters": {
              "id": 568,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3635:0:29"
            },
            "scope": 931,
            "src": "3469:766:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 624,
              "nodeType": "Block",
              "src": "4936:699:29",
              "statements": [
                {
                  "assignments": [
                    608,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 608,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "5010:13:29",
                      "nodeType": "VariableDeclaration",
                      "scope": 624,
                      "src": "5005:18:29",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 607,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5005:4:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "documentation": "@custom:oz-upgrades-unsafe-allow delegatecall",
                  "id": 622,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f70496e766974655573657228616464726573732c737472696e672c737472696e672c626f6f6c2c75696e743235362c627974657329",
                            "id": 613,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5111:58:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_31a0afa7f676c8f7b485e9d34a7076717af4b3943f1bb7f40d38feb26e5c6635",
                              "typeString": "literal_string \"PropInviteUser(address,string,string,bool,uint256,bytes)\""
                            },
                            "value": "PropInviteUser(address,string,string,bool,uint256,bytes)"
                          },
                          {
                            "id": 614,
                            "name": "_walletAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 592,
                            "src": "5187:11:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 615,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 594,
                            "src": "5216:5:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 616,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 596,
                            "src": "5239:12:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 617,
                            "name": "_isManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 598,
                            "src": "5269:10:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 618,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 600,
                            "src": "5297:10:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 619,
                            "name": "_signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 602,
                            "src": "5325:10:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_31a0afa7f676c8f7b485e9d34a7076717af4b3943f1bb7f40d38feb26e5c6635",
                              "typeString": "literal_string \"PropInviteUser(address,string,string,bool,uint256,bytes)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 611,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5069:3:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "5069:23:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5069:280:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 609,
                        "name": "CLLGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2819,
                        "src": "5029:13:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 610,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "5029:26:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5029:330:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5004:355:29"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "5379:250:29",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "5393:22:29",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5410:4:29",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "5404:5:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5404:11:29"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "5397:3:29",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "5428:28:29",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "5440:14:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5440:16:29"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "5432:4:29",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "5484:3:29"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5489:1:29",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "5492:4:29"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "5469:14:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5469:28:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5469:28:29"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5537:49:29",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "5562:3:29"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "5567:4:29"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "5555:6:29"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5555:17:29"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5555:17:29"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "5521:13:29"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "5513:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5513:23:29"
                        },
                        "nodeType": "YulIf",
                        "src": "5510:76:29"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "5599:20:29",
                        "value": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "5615:3:29"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "5609:5:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5609:10:29"
                        },
                        "variableNames": [
                          {
                            "name": "propId",
                            "nodeType": "YulIdentifier",
                            "src": "5599:6:29"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 605,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "5599:6:29",
                      "valueSize": 1
                    },
                    {
                      "declaration": 608,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "5521:13:29",
                      "valueSize": 1
                    }
                  ],
                  "id": 623,
                  "nodeType": "InlineAssembly",
                  "src": "5370:259:29"
                }
              ]
            },
            "documentation": {
              "id": 590,
              "nodeType": "StructuredDocumentation",
              "src": "4241:425:29",
              "text": "@notice Generate a new proposal to invite a new user\n @dev the execution of this proposal only create an invitation \n @param _walletAddr  Address of the new user\n @param _name Can be the nickname or other reference to the User\n @param _description A text for the proposal\n @param _isManager True if is for a manager\n @return propId ID of the new proposal, based on `arrProposals`"
            },
            "functionSelector": "31a0afa7",
            "id": 625,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropInviteUser",
            "nameLocation": "4680:14:29",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 603,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 592,
                  "mutability": "mutable",
                  "name": "_walletAddr",
                  "nameLocation": "4712:11:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 625,
                  "src": "4704:19:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 591,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4704:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 594,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "4747:5:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 625,
                  "src": "4733:19:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 593,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4733:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 596,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "4776:12:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 625,
                  "src": "4762:26:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 595,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4762:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 598,
                  "mutability": "mutable",
                  "name": "_isManager",
                  "nameLocation": "4803:10:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 625,
                  "src": "4798:15:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 597,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4798:4:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 600,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "4831:10:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 625,
                  "src": "4823:18:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 599,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4823:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 602,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "4864:10:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 625,
                  "src": "4851:23:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 601,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4851:5:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4694:186:29"
            },
            "returnParameters": {
              "id": 606,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 605,
                  "mutability": "mutable",
                  "name": "propId",
                  "nameLocation": "4923:6:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 625,
                  "src": "4915:14:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 604,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4915:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4913:18:29"
            },
            "scope": 931,
            "src": "4671:964:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 654,
              "nodeType": "Block",
              "src": "6122:636:29",
              "statements": [
                {
                  "assignments": [
                    640,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 640,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "6196:13:29",
                      "nodeType": "VariableDeclaration",
                      "scope": 654,
                      "src": "6191:18:29",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 639,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "6191:4:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "documentation": "@custom:oz-upgrades-unsafe-allow delegatecall",
                  "id": 652,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f7052656d6f76655573657228616464726573732c737472696e672c75696e743235362c627974657329",
                            "id": 645,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6297:46:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_2a57ef8465999602129e676b4a60c0623eb2cc91d38b1a125e7aae8223cea980",
                              "typeString": "literal_string \"PropRemoveUser(address,string,uint256,bytes)\""
                            },
                            "value": "PropRemoveUser(address,string,uint256,bytes)"
                          },
                          {
                            "id": 646,
                            "name": "_walletAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 628,
                            "src": "6361:11:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 647,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 630,
                            "src": "6390:12:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 648,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 632,
                            "src": "6420:10:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 649,
                            "name": "_signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 634,
                            "src": "6448:10:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_2a57ef8465999602129e676b4a60c0623eb2cc91d38b1a125e7aae8223cea980",
                              "typeString": "literal_string \"PropRemoveUser(address,string,uint256,bytes)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 643,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "6255:3:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "6255:23:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6255:217:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 641,
                        "name": "CLLGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2819,
                        "src": "6215:13:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 642,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "6215:26:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6215:267:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6190:292:29"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "6502:250:29",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "6516:22:29",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6533:4:29",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "6527:5:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6527:11:29"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "6520:3:29",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "6551:28:29",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "6563:14:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6563:16:29"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "6555:4:29",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "6607:3:29"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6612:1:29",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "6615:4:29"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "6592:14:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6592:28:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6592:28:29"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6660:49:29",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "6685:3:29"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "6690:4:29"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "6678:6:29"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6678:17:29"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6678:17:29"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "6644:13:29"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "6636:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6636:23:29"
                        },
                        "nodeType": "YulIf",
                        "src": "6633:76:29"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "6722:20:29",
                        "value": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "6738:3:29"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "6732:5:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6732:10:29"
                        },
                        "variableNames": [
                          {
                            "name": "propId",
                            "nodeType": "YulIdentifier",
                            "src": "6722:6:29"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 637,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "6722:6:29",
                      "valueSize": 1
                    },
                    {
                      "declaration": 640,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "6644:13:29",
                      "valueSize": 1
                    }
                  ],
                  "id": 653,
                  "nodeType": "InlineAssembly",
                  "src": "6493:259:29"
                }
              ]
            },
            "documentation": {
              "id": 626,
              "nodeType": "StructuredDocumentation",
              "src": "5641:265:29",
              "text": "@notice Generate a new proposal for remove a user\n @dev The user can be a managaer\n @param _walletAddr user Address to be removed\n @param _description About the proposal\n @return propId ID of the new proposal, based on `arrProposals`"
            },
            "functionSelector": "2a57ef84",
            "id": 655,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropRemoveUser",
            "nameLocation": "5920:14:29",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 635,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 628,
                  "mutability": "mutable",
                  "name": "_walletAddr",
                  "nameLocation": "5952:11:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "5944:19:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 627,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5944:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 630,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "5987:12:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "5973:26:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 629,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5973:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 632,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "6017:10:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "6009:18:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 631,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6009:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 634,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "6050:10:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "6037:23:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 633,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6037:5:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5934:132:29"
            },
            "returnParameters": {
              "id": 638,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 637,
                  "mutability": "mutable",
                  "name": "propId",
                  "nameLocation": "6109:6:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "6101:14:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 636,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6101:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6099:18:29"
            },
            "scope": 931,
            "src": "5911:847:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 684,
              "nodeType": "Block",
              "src": "7299:628:29",
              "statements": [
                {
                  "assignments": [
                    670,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 670,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "7373:13:29",
                      "nodeType": "VariableDeclaration",
                      "scope": 684,
                      "src": "7368:18:29",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 669,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7368:4:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "documentation": "@custom:oz-upgrades-unsafe-allow delegatecall",
                  "id": 682,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f70547857656928616464726573732c75696e743235362c737472696e672c75696e7432353629",
                            "id": 675,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7474:43:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_7c6385482cc50c34905baf4b5888e8798c5594a0a2bf4d252265bc9209354799",
                              "typeString": "literal_string \"PropTxWei(address,uint256,string,uint256)\""
                            },
                            "value": "PropTxWei(address,uint256,string,uint256)"
                          },
                          {
                            "id": 676,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 658,
                            "src": "7535:3:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 677,
                            "name": "_amountOutCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 660,
                            "src": "7556:13:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 678,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 662,
                            "src": "7587:12:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 679,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 664,
                            "src": "7617:10:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_7c6385482cc50c34905baf4b5888e8798c5594a0a2bf4d252265bc9209354799",
                              "typeString": "literal_string \"PropTxWei(address,uint256,string,uint256)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 673,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7432:3:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 674,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "7432:23:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 680,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7432:209:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 671,
                        "name": "CLLGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2819,
                        "src": "7392:13:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 672,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "7392:26:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7392:259:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7367:284:29"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "7671:250:29",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "7685:22:29",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7702:4:29",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "7696:5:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7696:11:29"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "7689:3:29",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "7720:28:29",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "7732:14:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7732:16:29"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "7724:4:29",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "7776:3:29"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7781:1:29",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "7784:4:29"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "7761:14:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7761:28:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7761:28:29"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7829:49:29",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "7854:3:29"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "7859:4:29"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "7847:6:29"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7847:17:29"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7847:17:29"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "7813:13:29"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "7805:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7805:23:29"
                        },
                        "nodeType": "YulIf",
                        "src": "7802:76:29"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "7891:20:29",
                        "value": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "7907:3:29"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "7901:5:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7901:10:29"
                        },
                        "variableNames": [
                          {
                            "name": "propId",
                            "nodeType": "YulIdentifier",
                            "src": "7891:6:29"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 667,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "7891:6:29",
                      "valueSize": 1
                    },
                    {
                      "declaration": 670,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "7813:13:29",
                      "valueSize": 1
                    }
                  ],
                  "id": 683,
                  "nodeType": "InlineAssembly",
                  "src": "7662:259:29"
                }
              ]
            },
            "documentation": {
              "id": 656,
              "nodeType": "StructuredDocumentation",
              "src": "6764:334:29",
              "text": "@notice generate a new proposal to transfer ETH in weis\n @dev When execute this proposal, the transfer is made\n @param _to Recipient address\n @param _amountOutCLV Amount to transfer (in wei)\n @param _description About this proposal\n @return propId ID of the new proposal, based on `arrProposals`"
            },
            "functionSelector": "7c638548",
            "id": 685,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropTxWei",
            "nameLocation": "7112:9:29",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 665,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 658,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "7139:3:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 685,
                  "src": "7131:11:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 657,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7131:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 660,
                  "mutability": "mutable",
                  "name": "_amountOutCLV",
                  "nameLocation": "7160:13:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 685,
                  "src": "7152:21:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 659,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7152:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 662,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "7197:12:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 685,
                  "src": "7183:26:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 661,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7183:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 664,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "7227:10:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 685,
                  "src": "7219:18:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 663,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7219:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7121:122:29"
            },
            "returnParameters": {
              "id": 668,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 667,
                  "mutability": "mutable",
                  "name": "propId",
                  "nameLocation": "7286:6:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 685,
                  "src": "7278:14:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 666,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7278:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7276:18:29"
            },
            "scope": 931,
            "src": "7103:824:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 717,
              "nodeType": "Block",
              "src": "8500:668:29",
              "statements": [
                {
                  "assignments": [
                    702,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 702,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "8574:13:29",
                      "nodeType": "VariableDeclaration",
                      "scope": 717,
                      "src": "8569:18:29",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 701,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "8569:4:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "documentation": "@custom:oz-upgrades-unsafe-allow delegatecall",
                  "id": 715,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f705478455243323028616464726573732c75696e743235362c616464726573732c737472696e672c75696e7432353629",
                            "id": 707,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8675:53:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_de5ab14ee76e872eb390c8f0942b0cbe9e6de8609dea31f21b3c6b5cdfc0a34b",
                              "typeString": "literal_string \"PropTxERC20(address,uint256,address,string,uint256)\""
                            },
                            "value": "PropTxERC20(address,uint256,address,string,uint256)"
                          },
                          {
                            "id": 708,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 688,
                            "src": "8746:3:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 709,
                            "name": "_amountOutCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 690,
                            "src": "8767:13:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 710,
                            "name": "_tokenOutCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 692,
                            "src": "8798:12:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 711,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 694,
                            "src": "8828:12:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 712,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 696,
                            "src": "8858:10:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_de5ab14ee76e872eb390c8f0942b0cbe9e6de8609dea31f21b3c6b5cdfc0a34b",
                              "typeString": "literal_string \"PropTxERC20(address,uint256,address,string,uint256)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 705,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "8633:3:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 706,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "8633:23:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8633:249:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 703,
                        "name": "CLLGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2819,
                        "src": "8593:13:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 704,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "8593:26:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8593:299:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8568:324:29"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "8912:250:29",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "8926:22:29",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8943:4:29",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "8937:5:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8937:11:29"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "8930:3:29",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "8961:28:29",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "8973:14:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8973:16:29"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "8965:4:29",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "9017:3:29"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9022:1:29",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "9025:4:29"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "9002:14:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9002:28:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9002:28:29"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9070:49:29",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "9095:3:29"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "9100:4:29"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "9088:6:29"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9088:17:29"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9088:17:29"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "9054:13:29"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "9046:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9046:23:29"
                        },
                        "nodeType": "YulIf",
                        "src": "9043:76:29"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "9132:20:29",
                        "value": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "9148:3:29"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "9142:5:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9142:10:29"
                        },
                        "variableNames": [
                          {
                            "name": "propId",
                            "nodeType": "YulIdentifier",
                            "src": "9132:6:29"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 699,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "9132:6:29",
                      "valueSize": 1
                    },
                    {
                      "declaration": 702,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "9054:13:29",
                      "valueSize": 1
                    }
                  ],
                  "id": 716,
                  "nodeType": "InlineAssembly",
                  "src": "8903:259:29"
                }
              ]
            },
            "documentation": {
              "id": 686,
              "nodeType": "StructuredDocumentation",
              "src": "7933:334:29",
              "text": "@notice generate a new proposal to transfer ETH in weis\n @dev When execute this proposal, the transfer is made\n @param _to Recipient address\n @param _amountOutCLV Amount to transfer (in wei)\n @param _description About this proposal\n @return propId ID of the new proposal, based on `arrProposals`"
            },
            "functionSelector": "de5ab14e",
            "id": 718,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropTxERC20",
            "nameLocation": "8281:11:29",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 697,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 688,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "8310:3:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 718,
                  "src": "8302:11:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 687,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8302:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 690,
                  "mutability": "mutable",
                  "name": "_amountOutCLV",
                  "nameLocation": "8331:13:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 718,
                  "src": "8323:21:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 689,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8323:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 692,
                  "mutability": "mutable",
                  "name": "_tokenOutCLV",
                  "nameLocation": "8362:12:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 718,
                  "src": "8354:20:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 691,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8354:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 694,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "8398:12:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 718,
                  "src": "8384:26:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 693,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8384:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 696,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "8428:10:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 718,
                  "src": "8420:18:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 695,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8420:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8292:152:29"
            },
            "returnParameters": {
              "id": 700,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 699,
                  "mutability": "mutable",
                  "name": "propId",
                  "nameLocation": "8487:6:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 718,
                  "src": "8479:14:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 698,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8479:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8477:18:29"
            },
            "scope": 931,
            "src": "8272:896:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 744,
              "nodeType": "Block",
              "src": "9712:607:29",
              "statements": [
                {
                  "assignments": [
                    731,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 731,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "9786:13:29",
                      "nodeType": "VariableDeclaration",
                      "scope": 744,
                      "src": "9781:18:29",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 730,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "9781:4:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "documentation": "@custom:oz-upgrades-unsafe-allow delegatecall",
                  "id": 742,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f70476f7652756c65732875696e74382c737472696e672c75696e7432353629",
                            "id": 736,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9887:36:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_70acb761237d5585eadfc2ae41fe8a485128e55ebdae74fa45652b412e62ee83",
                              "typeString": "literal_string \"PropGovRules(uint8,string,uint256)\""
                            },
                            "value": "PropGovRules(uint8,string,uint256)"
                          },
                          {
                            "id": 737,
                            "name": "_newApprovPercentage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 721,
                            "src": "9941:20:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          {
                            "id": 738,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 723,
                            "src": "9979:12:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 739,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 725,
                            "src": "10009:10:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_70acb761237d5585eadfc2ae41fe8a485128e55ebdae74fa45652b412e62ee83",
                              "typeString": "literal_string \"PropGovRules(uint8,string,uint256)\""
                            },
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 734,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "9845:3:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 735,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "9845:23:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9845:188:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 732,
                        "name": "CLLGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2819,
                        "src": "9805:13:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 733,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "9805:26:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9805:238:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9780:263:29"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "10063:250:29",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "10077:22:29",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10094:4:29",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "10088:5:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10088:11:29"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "10081:3:29",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "10112:28:29",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "10124:14:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10124:16:29"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "10116:4:29",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "10168:3:29"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10173:1:29",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "10176:4:29"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "10153:14:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10153:28:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10153:28:29"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10221:49:29",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "10246:3:29"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "10251:4:29"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "10239:6:29"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10239:17:29"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10239:17:29"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "10205:13:29"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "10197:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10197:23:29"
                        },
                        "nodeType": "YulIf",
                        "src": "10194:76:29"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "10283:20:29",
                        "value": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "10299:3:29"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "10293:5:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10293:10:29"
                        },
                        "variableNames": [
                          {
                            "name": "propId",
                            "nodeType": "YulIdentifier",
                            "src": "10283:6:29"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 728,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "10283:6:29",
                      "valueSize": 1
                    },
                    {
                      "declaration": 731,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "10205:13:29",
                      "valueSize": 1
                    }
                  ],
                  "id": 743,
                  "nodeType": "InlineAssembly",
                  "src": "10054:259:29"
                }
              ]
            },
            "documentation": {
              "id": 719,
              "nodeType": "StructuredDocumentation",
              "src": "9174:350:29",
              "text": "@notice Generate a new proposal for change some governance parameters\n @dev When execute this proposal the new values will be set\n @param _newApprovPercentage The new percentaje for accept or reject a proposal\n @param _description About the new proposal \n @return propId ID of the new proposal, based on `arrProposals`"
            },
            "functionSelector": "70acb761",
            "id": 745,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropGovRules",
            "nameLocation": "9538:12:29",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 721,
                  "mutability": "mutable",
                  "name": "_newApprovPercentage",
                  "nameLocation": "9566:20:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 745,
                  "src": "9560:26:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 720,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "9560:5:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 723,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "9610:12:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 745,
                  "src": "9596:26:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 722,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9596:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 725,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "9640:10:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 745,
                  "src": "9632:18:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 724,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9632:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9550:106:29"
            },
            "returnParameters": {
              "id": 729,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 728,
                  "mutability": "mutable",
                  "name": "propId",
                  "nameLocation": "9699:6:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 745,
                  "src": "9691:14:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 727,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9691:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9689:18:29"
            },
            "scope": 931,
            "src": "9529:790:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 771,
              "nodeType": "Block",
              "src": "10798:593:29",
              "statements": [
                {
                  "assignments": [
                    758,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 758,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "10872:13:29",
                      "nodeType": "VariableDeclaration",
                      "scope": 771,
                      "src": "10867:18:29",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 757,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "10867:4:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "documentation": "@custom:oz-upgrades-unsafe-allow delegatecall",
                  "id": 769,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f7052657175657374546f4a6f696e28737472696e672c737472696e672c627974657329",
                            "id": 763,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10973:40:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_a19a5f5094957b68797a833ce3e8ce60bcd0e148d0183b60e4fdf5efc7499e5e",
                              "typeString": "literal_string \"PropRequestToJoin(string,string,bytes)\""
                            },
                            "value": "PropRequestToJoin(string,string,bytes)"
                          },
                          {
                            "id": 764,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 748,
                            "src": "11031:5:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 765,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 750,
                            "src": "11054:12:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 766,
                            "name": "_signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 752,
                            "src": "11084:10:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_a19a5f5094957b68797a833ce3e8ce60bcd0e148d0183b60e4fdf5efc7499e5e",
                              "typeString": "literal_string \"PropRequestToJoin(string,string,bytes)\""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 761,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "10931:3:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 762,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "10931:23:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10931:177:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 759,
                        "name": "CLLGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2819,
                        "src": "10891:13:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 760,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "10891:26:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10891:227:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10866:252:29"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "11138:247:29",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "11152:22:29",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11169:4:29",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "11163:5:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11163:11:29"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "11156:3:29",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "11187:28:29",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "11199:14:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11199:16:29"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "11191:4:29",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "11243:3:29"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11248:1:29",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "11251:4:29"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "11228:14:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11228:28:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11228:28:29"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11296:49:29",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "11321:3:29"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "11326:4:29"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "11314:6:29"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11314:17:29"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11314:17:29"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "11280:13:29"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "11272:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11272:23:29"
                        },
                        "nodeType": "YulIf",
                        "src": "11269:76:29"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "11365:3:29"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "11370:4:29"
                            }
                          ],
                          "functionName": {
                            "name": "return",
                            "nodeType": "YulIdentifier",
                            "src": "11358:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11358:17:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11358:17:29"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 758,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "11280:13:29",
                      "valueSize": 1
                    }
                  ],
                  "id": 770,
                  "nodeType": "InlineAssembly",
                  "src": "11129:256:29"
                }
              ]
            },
            "documentation": {
              "id": 746,
              "nodeType": "StructuredDocumentation",
              "src": "10325:289:29",
              "text": "@notice Generate a proposal from a user that want to join to the CLH\n @dev Only avaiable in public CLH\n @param _name Nickname or other user identification\n @param _description About the request\n @return propId ID of the new proposal, based on `arrProposals`"
            },
            "functionSelector": "a19a5f50",
            "id": 772,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropRequestToJoin",
            "nameLocation": "10628:17:29",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 753,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 748,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "10669:5:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 772,
                  "src": "10655:19:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 747,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10655:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 750,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "10698:12:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 772,
                  "src": "10684:26:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 749,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10684:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 752,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "10733:10:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 772,
                  "src": "10720:23:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 751,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10720:5:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10645:104:29"
            },
            "returnParameters": {
              "id": 756,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 755,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 772,
                  "src": "10784:7:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 754,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10784:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10782:11:29"
            },
            "scope": 931,
            "src": "10619:772:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 797,
              "nodeType": "Block",
              "src": "11647:545:29",
              "statements": [
                {
                  "assignments": [
                    781,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 781,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "11721:13:29",
                      "nodeType": "VariableDeclaration",
                      "scope": 797,
                      "src": "11716:18:29",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 780,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "11716:4:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "documentation": "@custom:oz-upgrades-unsafe-allow delegatecall",
                  "id": 791,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "41636365707452656a656374496e7669746174696f6e28626f6f6c2c627974657329",
                            "id": 786,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11826:36:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_81cf22d80f4ec7d62ace7f62bb20df069329fad76ea536d29d67fc68ae1b5019",
                              "typeString": "literal_string \"AcceptRejectInvitation(bool,bytes)\""
                            },
                            "value": "AcceptRejectInvitation(bool,bytes)"
                          },
                          {
                            "id": 787,
                            "name": "_acceptance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 775,
                            "src": "11880:11:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 788,
                            "name": "_signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 777,
                            "src": "11909:10:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_81cf22d80f4ec7d62ace7f62bb20df069329fad76ea536d29d67fc68ae1b5019",
                              "typeString": "literal_string \"AcceptRejectInvitation(bool,bytes)\""
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 784,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "11784:3:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "11784:23:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11784:149:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 782,
                        "name": "CLLUserManagement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2817,
                        "src": "11740:17:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 783,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "11740:30:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11740:203:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11715:228:29"
                },
                {
                  "condition": {
                    "id": 793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "11958:14:29",
                    "subExpression": {
                      "id": 792,
                      "name": "successDGTCLL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 781,
                      "src": "11959:13:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 796,
                  "nodeType": "IfStatement",
                  "src": "11954:232:29",
                  "trueBody": {
                    "id": 795,
                    "nodeType": "Block",
                    "src": "11975:211:29",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "11998:178:29",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "12016:22:29",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12033:4:29",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "12027:5:29"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12027:11:29"
                              },
                              "variables": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulTypedName",
                                  "src": "12020:3:29",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "12055:28:29",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "returndatasize",
                                  "nodeType": "YulIdentifier",
                                  "src": "12067:14:29"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12067:16:29"
                              },
                              "variables": [
                                {
                                  "name": "size",
                                  "nodeType": "YulTypedName",
                                  "src": "12059:4:29",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "12115:3:29"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12120:1:29",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "12123:4:29"
                                  }
                                ],
                                "functionName": {
                                  "name": "returndatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "12100:14:29"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12100:28:29"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12100:28:29"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "12152:3:29"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "12157:4:29"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "12145:6:29"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12145:17:29"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12145:17:29"
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [],
                        "id": 794,
                        "nodeType": "InlineAssembly",
                        "src": "11989:187:29"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 773,
              "nodeType": "StructuredDocumentation",
              "src": "11397:127:29",
              "text": "@notice For an user that have an invitation pending\n @dev \n @param _acceptance True for accept the invitation"
            },
            "functionSelector": "81cf22d8",
            "id": 798,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "AcceptRejectInvitation",
            "nameLocation": "11538:22:29",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 778,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 775,
                  "mutability": "mutable",
                  "name": "_acceptance",
                  "nameLocation": "11575:11:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 798,
                  "src": "11570:16:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 774,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11570:4:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 777,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "11609:10:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 798,
                  "src": "11596:23:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 776,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11596:5:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11560:65:29"
            },
            "returnParameters": {
              "id": 779,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11647:0:29"
            },
            "scope": 931,
            "src": "11529:663:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 829,
              "nodeType": "Block",
              "src": "12429:675:29",
              "statements": [
                {
                  "assignments": [
                    814,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 814,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "12503:13:29",
                      "nodeType": "VariableDeclaration",
                      "scope": 829,
                      "src": "12498:18:29",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 813,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "12498:4:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "documentation": "@custom:oz-upgrades-unsafe-allow delegatecall",
                  "id": 827,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f7053776170455243323028616464726573732c616464726573732c75696e743235362c737472696e672c75696e7432353629",
                            "id": 819,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12604:55:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_152de3b98ea86d627e1f008ef402ac90ecf10b8b7150905cf13cb40560733610",
                              "typeString": "literal_string \"PropSwapERC20(address,address,uint256,string,uint256)\""
                            },
                            "value": "PropSwapERC20(address,address,uint256,string,uint256)"
                          },
                          {
                            "id": 820,
                            "name": "_tokenOutCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 800,
                            "src": "12677:12:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 821,
                            "name": "_tokenInCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 802,
                            "src": "12707:11:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 822,
                            "name": "_amountOutCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 804,
                            "src": "12736:13:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 823,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 806,
                            "src": "12767:12:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 824,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 808,
                            "src": "12797:10:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_152de3b98ea86d627e1f008ef402ac90ecf10b8b7150905cf13cb40560733610",
                              "typeString": "literal_string \"PropSwapERC20(address,address,uint256,string,uint256)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 817,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "12562:3:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "12562:23:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12562:259:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 815,
                        "name": "CLLGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2819,
                        "src": "12522:13:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 816,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "12522:26:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12522:309:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12497:334:29"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "12851:247:29",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "12865:22:29",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12882:4:29",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "12876:5:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12876:11:29"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "12869:3:29",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "12900:28:29",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "12912:14:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12912:16:29"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "12904:4:29",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "12956:3:29"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12961:1:29",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "12964:4:29"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "12941:14:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12941:28:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12941:28:29"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13009:49:29",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "13034:3:29"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "13039:4:29"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "13027:6:29"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13027:17:29"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13027:17:29"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "12993:13:29"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "12985:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12985:23:29"
                        },
                        "nodeType": "YulIf",
                        "src": "12982:76:29"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "13078:3:29"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "13083:4:29"
                            }
                          ],
                          "functionName": {
                            "name": "return",
                            "nodeType": "YulIdentifier",
                            "src": "13071:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13071:17:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13071:17:29"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 814,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "12993:13:29",
                      "valueSize": 1
                    }
                  ],
                  "id": 828,
                  "nodeType": "InlineAssembly",
                  "src": "12842:256:29"
                }
              ]
            },
            "functionSelector": "152de3b9",
            "id": 830,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropSwapERC20",
            "nameLocation": "12207:13:29",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 809,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 800,
                  "mutability": "mutable",
                  "name": "_tokenOutCLV",
                  "nameLocation": "12238:12:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 830,
                  "src": "12230:20:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 799,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12230:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 802,
                  "mutability": "mutable",
                  "name": "_tokenInCLV",
                  "nameLocation": "12268:11:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 830,
                  "src": "12260:19:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 801,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12260:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 804,
                  "mutability": "mutable",
                  "name": "_amountOutCLV",
                  "nameLocation": "12297:13:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 830,
                  "src": "12289:21:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 803,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12289:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 806,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "12334:12:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 830,
                  "src": "12320:26:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 805,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "12320:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 808,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "12364:10:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 830,
                  "src": "12356:18:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 807,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12356:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12220:160:29"
            },
            "returnParameters": {
              "id": 812,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 811,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 830,
                  "src": "12415:7:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 810,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12415:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12413:11:29"
            },
            "scope": 931,
            "src": "12198:906:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 858,
              "nodeType": "Block",
              "src": "13312:638:29",
              "statements": [
                {
                  "assignments": [
                    844,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 844,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "13386:13:29",
                      "nodeType": "VariableDeclaration",
                      "scope": 858,
                      "src": "13381:18:29",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 843,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "13381:4:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "documentation": "@custom:oz-upgrades-unsafe-allow delegatecall",
                  "id": 856,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f7053656c6c455243323028616464726573732c75696e743235362c737472696e672c75696e7432353629",
                            "id": 849,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13487:47:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_04f17a9bb89b1e450e234a08e9c473746a395c39a699313d8ca6797b97b374af",
                              "typeString": "literal_string \"PropSellERC20(address,uint256,string,uint256)\""
                            },
                            "value": "PropSellERC20(address,uint256,string,uint256)"
                          },
                          {
                            "id": 850,
                            "name": "_tokenOutCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 832,
                            "src": "13552:12:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 851,
                            "name": "_amountOutCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 834,
                            "src": "13582:13:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 852,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 836,
                            "src": "13613:12:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 853,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 838,
                            "src": "13643:10:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_04f17a9bb89b1e450e234a08e9c473746a395c39a699313d8ca6797b97b374af",
                              "typeString": "literal_string \"PropSellERC20(address,uint256,string,uint256)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 847,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "13445:3:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 848,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "13445:23:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13445:222:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 845,
                        "name": "CLLGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2819,
                        "src": "13405:13:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 846,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "13405:26:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13405:272:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13380:297:29"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "13697:247:29",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "13711:22:29",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13728:4:29",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "13722:5:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13722:11:29"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "13715:3:29",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "13746:28:29",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "13758:14:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13758:16:29"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "13750:4:29",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "13802:3:29"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13807:1:29",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "13810:4:29"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "13787:14:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13787:28:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13787:28:29"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13855:49:29",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "13880:3:29"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "13885:4:29"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "13873:6:29"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13873:17:29"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13873:17:29"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "13839:13:29"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "13831:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13831:23:29"
                        },
                        "nodeType": "YulIf",
                        "src": "13828:76:29"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "13924:3:29"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "13929:4:29"
                            }
                          ],
                          "functionName": {
                            "name": "return",
                            "nodeType": "YulIdentifier",
                            "src": "13917:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13917:17:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13917:17:29"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 844,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "13839:13:29",
                      "valueSize": 1
                    }
                  ],
                  "id": 857,
                  "nodeType": "InlineAssembly",
                  "src": "13688:256:29"
                }
              ]
            },
            "functionSelector": "04f17a9b",
            "id": 859,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropSellERC20",
            "nameLocation": "13119:13:29",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 839,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 832,
                  "mutability": "mutable",
                  "name": "_tokenOutCLV",
                  "nameLocation": "13150:12:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 859,
                  "src": "13142:20:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 831,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13142:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 834,
                  "mutability": "mutable",
                  "name": "_amountOutCLV",
                  "nameLocation": "13180:13:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 859,
                  "src": "13172:21:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 833,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13172:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 836,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "13217:12:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 859,
                  "src": "13203:26:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 835,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "13203:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 838,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "13247:10:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 859,
                  "src": "13239:18:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 837,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13239:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13132:131:29"
            },
            "returnParameters": {
              "id": 842,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 841,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 859,
                  "src": "13298:7:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 840,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13298:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13296:11:29"
            },
            "scope": 931,
            "src": "13110:840:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 887,
              "nodeType": "Block",
              "src": "14156:636:29",
              "statements": [
                {
                  "assignments": [
                    873,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 873,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "14230:13:29",
                      "nodeType": "VariableDeclaration",
                      "scope": 887,
                      "src": "14225:18:29",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 872,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "14225:4:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "documentation": "@custom:oz-upgrades-unsafe-allow delegatecall",
                  "id": 885,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f70427579455243323028616464726573732c75696e743235362c737472696e672c75696e7432353629",
                            "id": 878,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14331:46:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_2266e1bc09a9739eac0cdf93a2f130fcaf0d67ad5f8d0909c155c6843375d27c",
                              "typeString": "literal_string \"PropBuyERC20(address,uint256,string,uint256)\""
                            },
                            "value": "PropBuyERC20(address,uint256,string,uint256)"
                          },
                          {
                            "id": 879,
                            "name": "_tokenInCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 861,
                            "src": "14395:11:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 880,
                            "name": "_amountOutCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 863,
                            "src": "14424:13:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 881,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 865,
                            "src": "14455:12:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 882,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 867,
                            "src": "14485:10:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_2266e1bc09a9739eac0cdf93a2f130fcaf0d67ad5f8d0909c155c6843375d27c",
                              "typeString": "literal_string \"PropBuyERC20(address,uint256,string,uint256)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 876,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "14289:3:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 877,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "14289:23:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14289:220:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 874,
                        "name": "CLLGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2819,
                        "src": "14249:13:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 875,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "14249:26:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14249:270:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14224:295:29"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "14539:247:29",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "14553:22:29",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14570:4:29",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "14564:5:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14564:11:29"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "14557:3:29",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "14588:28:29",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "14600:14:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14600:16:29"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "14592:4:29",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "14644:3:29"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14649:1:29",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "14652:4:29"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "14629:14:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14629:28:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14629:28:29"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14697:49:29",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "14722:3:29"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "14727:4:29"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "14715:6:29"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14715:17:29"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14715:17:29"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "14681:13:29"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "14673:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14673:23:29"
                        },
                        "nodeType": "YulIf",
                        "src": "14670:76:29"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "14766:3:29"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "14771:4:29"
                            }
                          ],
                          "functionName": {
                            "name": "return",
                            "nodeType": "YulIdentifier",
                            "src": "14759:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14759:17:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14759:17:29"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 873,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "14681:13:29",
                      "valueSize": 1
                    }
                  ],
                  "id": 886,
                  "nodeType": "InlineAssembly",
                  "src": "14530:256:29"
                }
              ]
            },
            "functionSelector": "2266e1bc",
            "id": 888,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropBuyERC20",
            "nameLocation": "13965:12:29",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 868,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 861,
                  "mutability": "mutable",
                  "name": "_tokenInCLV",
                  "nameLocation": "13995:11:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 888,
                  "src": "13987:19:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 860,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13987:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 863,
                  "mutability": "mutable",
                  "name": "_amountOutCLV",
                  "nameLocation": "14024:13:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 888,
                  "src": "14016:21:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 862,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14016:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 865,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "14061:12:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 888,
                  "src": "14047:26:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 864,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14047:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 867,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "14091:10:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 888,
                  "src": "14083:18:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 866,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14083:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13977:130:29"
            },
            "returnParameters": {
              "id": 871,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 870,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 888,
                  "src": "14142:7:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 869,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14142:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14140:11:29"
            },
            "scope": 931,
            "src": "13956:836:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 897,
              "nodeType": "Block",
              "src": "14891:39:29",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 894,
                      "name": "arrUsers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2872,
                      "src": "14908:8:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_strUser_$7124_storage_$dyn_storage",
                        "typeString": "struct strUser storage ref[] storage ref"
                      }
                    },
                    "id": 895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "14908:15:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 893,
                  "id": 896,
                  "nodeType": "Return",
                  "src": "14901:22:29"
                }
              ]
            },
            "documentation": {
              "id": 889,
              "nodeType": "StructuredDocumentation",
              "src": "14798:27:29",
              "text": "@notice Length of array"
            },
            "functionSelector": "a693649a",
            "id": 898,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetArrUsersLength",
            "nameLocation": "14839:17:29",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 890,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14856:2:29"
            },
            "returnParameters": {
              "id": 893,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 892,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 898,
                  "src": "14882:7:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 891,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14882:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14880:11:29"
            },
            "scope": 931,
            "src": "14830:100:29",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 907,
              "nodeType": "Block",
              "src": "15033:43:29",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 904,
                      "name": "arrProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2856,
                      "src": "15050:12:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_strProposal_$7144_storage_$dyn_storage",
                        "typeString": "struct strProposal storage ref[] storage ref"
                      }
                    },
                    "id": 905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "15050:19:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 903,
                  "id": 906,
                  "nodeType": "Return",
                  "src": "15043:26:29"
                }
              ]
            },
            "documentation": {
              "id": 899,
              "nodeType": "StructuredDocumentation",
              "src": "14936:27:29",
              "text": "@notice Length of array"
            },
            "functionSelector": "4e9d5472",
            "id": 908,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetArrProposalsLength",
            "nameLocation": "14977:21:29",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 900,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14998:2:29"
            },
            "returnParameters": {
              "id": 903,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 902,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 908,
                  "src": "15024:7:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 901,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15024:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15022:11:29"
            },
            "scope": 931,
            "src": "14968:108:29",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 918,
              "nodeType": "Block",
              "src": "15255:36:29",
              "statements": [
                {
                  "expression": {
                    "id": 916,
                    "name": "arrProposals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2856,
                    "src": "15272:12:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_strProposal_$7144_storage_$dyn_storage",
                      "typeString": "struct strProposal storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 915,
                  "id": 917,
                  "nodeType": "Return",
                  "src": "15265:19:29"
                }
              ]
            },
            "documentation": {
              "id": 909,
              "nodeType": "StructuredDocumentation",
              "src": "15082:95:29",
              "text": "@notice The list of all Proposals\n @return arrProposals the array with all proposals"
            },
            "functionSelector": "b4c62192",
            "id": 919,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetProposalList",
            "nameLocation": "15191:15:29",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 910,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15206:2:29"
            },
            "returnParameters": {
              "id": 915,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 914,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 919,
                  "src": "15232:20:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_strProposal_$7144_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct strProposal[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 912,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 911,
                        "name": "strProposal",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 7144,
                        "src": "15232:11:29"
                      },
                      "referencedDeclaration": 7144,
                      "src": "15232:11:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_strProposal_$7144_storage_ptr",
                        "typeString": "struct strProposal"
                      }
                    },
                    "id": 913,
                    "nodeType": "ArrayTypeName",
                    "src": "15232:13:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_strProposal_$7144_storage_$dyn_storage_ptr",
                      "typeString": "struct strProposal[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15230:24:29"
            },
            "scope": 931,
            "src": "15182:109:29",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 929,
              "nodeType": "Block",
              "src": "15495:42:29",
              "statements": [
                {
                  "expression": {
                    "id": 927,
                    "name": "arrDataPropAddUser",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2860,
                    "src": "15512:18:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_strDataAddUser_$7158_storage_$dyn_storage",
                      "typeString": "struct strDataAddUser storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 926,
                  "id": 928,
                  "nodeType": "Return",
                  "src": "15505:25:29"
                }
              ]
            },
            "documentation": {
              "id": 920,
              "nodeType": "StructuredDocumentation",
              "src": "15297:111:29",
              "text": "@notice Get complete array of arrDataPropAddUser\n @return arrDataPropAddUser the array with all data"
            },
            "functionSelector": "5aadd414",
            "id": 930,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetArrDataPropAddUser",
            "nameLocation": "15422:21:29",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 921,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15443:2:29"
            },
            "returnParameters": {
              "id": 926,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 925,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 930,
                  "src": "15469:23:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_strDataAddUser_$7158_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct strDataAddUser[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 923,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 922,
                        "name": "strDataAddUser",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 7158,
                        "src": "15469:14:29"
                      },
                      "referencedDeclaration": 7158,
                      "src": "15469:14:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_strDataAddUser_$7158_storage_ptr",
                        "typeString": "struct strDataAddUser"
                      }
                    },
                    "id": 924,
                    "nodeType": "ArrayTypeName",
                    "src": "15469:16:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_strDataAddUser_$7158_storage_$dyn_storage_ptr",
                      "typeString": "struct strDataAddUser[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15467:27:29"
            },
            "scope": 931,
            "src": "15413:124:29",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 932,
        "src": "319:15220:29",
        "usedErrors": []
      }
    ],
    "src": "32:15507:29"
  },
  "bytecode": "",
  "bytecodeSha1": "a2e6617c583dd99f622cb76ed56c2e0dadf9f7dc",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "CLHouse",
  "coverageMap": {
    "branches": {
      "10": {
        "CLHouse.Init": {
          "13": [
            4396,
            4409,
            false
          ]
        }
      },
      "29": {
        "CLHouse.AcceptRejectInvitation": {
          "11": [
            11959,
            11972,
            false
          ]
        },
        "CLHouse.ExecProp": {
          "10": [
            2894,
            2907,
            false
          ]
        },
        "CLHouse.Init": {
          "9": [
            1894,
            1907,
            false
          ]
        },
        "CLHouse.VoteProposal": {
          "12": [
            4002,
            4015,
            false
          ]
        }
      },
      "33": {},
      "35": {}
    },
    "statements": {
      "10": {},
      "29": {
        "CLHouse.AcceptRejectInvitation": {
          "6": [
            11954,
            12186
          ]
        },
        "CLHouse.ExecProp": {
          "4": [
            2889,
            3121
          ],
          "5": [
            3131,
            3176
          ]
        },
        "CLHouse.GetArrDataPropAddUser": {
          "2": [
            15505,
            15530
          ]
        },
        "CLHouse.GetArrProposalsLength": {
          "0": [
            15043,
            15069
          ]
        },
        "CLHouse.GetArrUsersLength": {
          "1": [
            14901,
            14923
          ]
        },
        "CLHouse.GetProposalList": {
          "7": [
            15265,
            15284
          ]
        },
        "CLHouse.Init": {
          "3": [
            1889,
            2121
          ]
        },
        "CLHouse.VoteProposal": {
          "8": [
            3997,
            4229
          ]
        }
      },
      "33": {},
      "35": {}
    }
  },
  "dependencies": [
    "CLStorage",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/Initializable"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "319:15220:29:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13110:840;;;;;;:::i;:::-;;:::i;:::-;;;2080:25:37;;;2068:2;2053:18;13110:840:29;;;;;;;;892:23:33;;;;;-1:-1:-1;;;;;892:23:33;;;;;;-1:-1:-1;;;;;2295:32:37;;;2277:51;;2265:2;2250:18;892:23:33;2116:218:37;559:28:33;;;;;;;;;;;;;;;2591:4:37;2579:17;;;2561:36;;2549:2;2534:18;559:28:33;2419:184:37;12198:906:29;;;;;;:::i;:::-;;:::i;460:21:33:-;;;;;;;;;779:37;;;;;;921:27;;;;;-1:-1:-1;;;;;921:27:33;;;13956:836:29;;;;;;:::i;:::-;;:::i;1382:25:33:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;5911:847:29:-;;;;;;:::i;:::-;;:::i;4671:964::-;;;;;;:::i;:::-;;:::i;1332:44:33:-;;;;;;:::i;:::-;;:::i;14968:108:29:-;15050:12;:19;14968:108;;954:54:33;;;;;;:::i;:::-;;;;;;;;;;;;;;320:24;;;:::i;:::-;;;;;;;:::i;15413:124:29:-;;;:::i;:::-;;;;;;;:::i;1065:1062::-;;;;;;:::i;:::-;;:::i;:::-;;2482:701;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;835:23:33:-;;;;;-1:-1:-1;;;;;835:23:33;;;9529:790:29;;;;;;:::i;:::-;;:::i;1034:46:33:-;;;;;;:::i;:::-;;;;;;;;;;;;;;7103:824:29;;;;;;:::i;:::-;;:::i;11529:663::-;;;;;;:::i;:::-;;:::i;864:22:33:-;;;;;-1:-1:-1;;;;;864:22:33;;;1234:42;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;517:36::-;;;;;;;;;;;;10619:772:29;;;;;;:::i;:::-;;:::i;14830:100::-;14908:8;:15;14830:100;;15182:109;;;:::i;:::-;;;;;;;:::i;1282:44:33:-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;16434:15:37;;;16416:34;;16481:2;16466:18;;16459:34;;;;16529:15;;;16509:18;;;16502:43;;;;16581:15;;;16576:2;16561:18;;16554:43;16365:3;16350:19;1282:44:33;16147:456:37;3469:766:29;;;;;;:::i;:::-;;:::i;1086:67:33:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;751:22::-;;;;;-1:-1:-1;;;;;751:22:33;;;1195:33;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::i;8272:896:29:-;;;;;;:::i;:::-;;:::i;487:24:33:-;;;;;;;;;;;;593:31;;;;;;;;;;;;643:24;;;;;;;;;;;;;;;19841:14:37;;19834:22;19816:41;;19804:2;19789:18;643:24:33;19676:187:37;13110:840:29;13405:13;;13445:222;;13298:7;;;;-1:-1:-1;;;;;13405:13:29;;;;13445:222;;13552:12;;13582:13;;13613:12;;13643:10;;13445:222;;;:::i;:::-;;;;-1:-1:-1;;13445:222:29;;;;;;;;;;;;;;-1:-1:-1;;;;;13445:222:29;-1:-1:-1;;;13445:222:29;;;13405:272;;;13445:222;13405:272;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13380:297;;;13728:4;13722:11;13758:16;13810:4;13807:1;13802:3;13787:28;13839:13;13828:76;;13885:4;13880:3;13873:17;13828:76;13929:4;13924:3;13917:17;12198:906;12522:13;;12562:259;;12415:7;;;;-1:-1:-1;;;;;12522:13:29;;;;12562:259;;12677:12;;12707:11;;12736:13;;12767:12;;12797:10;;12562:259;;;:::i;:::-;;;;-1:-1:-1;;12562:259:29;;;;;;;;;;;;;;-1:-1:-1;;;;;12562:259:29;-1:-1:-1;;;12562:259:29;;;12522:309;;;12562:259;12522:309;:::i;13956:836::-;14249:13;;14289:220;;14142:7;;;;-1:-1:-1;;;;;14249:13:29;;;;14289:220;;14395:11;;14424:13;;14455:12;;14485:10;;14289:220;;;:::i;:::-;;;;-1:-1:-1;;14289:220:29;;;;;;;;;;;;;;-1:-1:-1;;;;;14289:220:29;-1:-1:-1;;;14289:220:29;;;14249:270;;;14289:220;14249:270;:::i;1382:25:33:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1382:25:33;;;;-1:-1:-1;1382:25:33;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1382:25:33;;;;;;;;;;;;;;;;;-1:-1:-1;1382:25:33;;;;;;:::o;5911:847:29:-;6215:13;;6255:217;;6101:14;;;;-1:-1:-1;;;;;6215:13:29;;;;6255:217;;6361:11;;6390:12;;6420:10;;6448;;6255:217;;;:::i;:::-;;;;-1:-1:-1;;6255:217:29;;;;;;;;;;;;;;-1:-1:-1;;;;;6255:217:29;-1:-1:-1;;;6255:217:29;;;6215:267;;;6255:217;6215:267;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6190:292;;;6533:4;6527:11;6563:16;6615:4;6612:1;6607:3;6592:28;6644:13;6633:76;;6690:4;6685:3;6678:17;6633:76;-1:-1:-1;6732:10:29;;5911:847;-1:-1:-1;;;;;;5911:847:29:o;4671:964::-;5029:13;;5069:280;;4915:14;;;;-1:-1:-1;;;;;5029:13:29;;;;5069:280;;5187:11;;5216:5;;5239:12;;5269:10;;5297;;5325;;5069:280;;;:::i;:::-;;;;-1:-1:-1;;5069:280:29;;;;;;;;;;;;;;-1:-1:-1;;;;;5069:280:29;-1:-1:-1;;;5069:280:29;;;5029:330;;;5069:280;5029:330;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5004:355;;;5410:4;5404:11;5440:16;5492:4;5489:1;5484:3;5469:28;5521:13;5510:76;;5567:4;5562:3;5555:17;5510:76;-1:-1:-1;5609:10:29;;4671:964;-1:-1:-1;;;;;;;;4671:964:29:o;1332:44:33:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1332:44:33;:::o;320:24::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;15413:124:29:-;15469:23;15512:18;15505:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15505:25:29;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;15505:25:29;;;-1:-1:-1;;15505:25:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15413:124;:::o;1065:1062::-;4396:13:10;;161:1:35;;4396:13:10;;;;;4395:14;:40;;;;-1:-1:-1;4413:12:10;;:22;;;;:12;;:22;4395:40;4387:99;;;;-1:-1:-1;;;4387:99:10;;23126:2:37;4387:99:10;;;23108:21:37;23165:2;23145:18;;;23138:30;23204:34;23184:18;;;23177:62;-1:-1:-1;;;23255:18:37;;;23248:44;23309:19;;4387:99:10;;;;;;;;4496:12;:22;;-1:-1:-1;;4528:20:10;4496:22;;;4528:20;4496:22;4528:20;;;4496:12;1475:4:29;1490:22:::1;1475:41;;;;;;;:::i;:::-;;;;;-1:-1:-1::0;;;;;1475:54:29::1;1679:6;1704:10;1732:13;1763:9;1790;1817:4;1839:15;1543:325;;;;;;;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;1543:325:29;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;1543:325:29::1;-1:-1:-1::0;;;1543:325:29::1;::::0;;1475:403;::::1;::::0;1543:325;1475:403:::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1450:428;;;1894:13;1889:232;;1968:4;1962:11;2002:16;2058:4;2055:1;2050:3;2035:28;2092:4;2087:3;2080:17;1889:232;-1:-1:-1::0;4569:13:10;:21;;-1:-1:-1;;4569:21:10;;;4605:20;;2591:4:37;2579:17;;2561:36;;4605:20:10;;2549:2:37;2534:18;4605:20:10;;;;;;;1065:1062:29;;;;;;;;:::o;2482:701::-;2729:13;;2769:99;;;;;2080:25:37;;;2575:11:29;;2600:21;;2575:11;;-1:-1:-1;;;;;2729:13:29;;2053:18:37;;2769:99:29;;;-1:-1:-1;;2769:99:29;;;;;;;;;;;;;;-1:-1:-1;;;;;2769:99:29;-1:-1:-1;;;2769:99:29;;;2729:149;;;2769:99;2729:149;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2704:174;;;2894:13;2889:232;;2968:4;2962:11;3002:16;3058:4;3055:1;3050:3;3035:28;3092:4;3087:3;3080:17;2889:232;3140:4;3131:45;;;;;;;;;;;;;;;;;;;;;;2482:701;;;:::o;9529:790::-;9805:13;;9845:188;;9691:14;;;;-1:-1:-1;;;;;9805:13:29;;;;9845:188;;9941:20;;9979:12;;10009:10;;9845:188;;;:::i;:::-;;;;-1:-1:-1;;9845:188:29;;;;;;;;;;;;;;-1:-1:-1;;;;;9845:188:29;-1:-1:-1;;;9845:188:29;;;9805:238;;;9845:188;9805:238;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9780:263;;;10094:4;10088:11;10124:16;10176:4;10173:1;10168:3;10153:28;10205:13;10194:76;;10251:4;10246:3;10239:17;10194:76;-1:-1:-1;10293:10:29;;9529:790;-1:-1:-1;;;;;9529:790:29:o;7103:824::-;7392:13;;7432:209;;7278:14;;;;-1:-1:-1;;;;;7392:13:29;;;;7432:209;;7535:3;;7556:13;;7587:12;;7617:10;;7432:209;;;:::i;:::-;;;;-1:-1:-1;;7432:209:29;;;;;;;;;;;;;;-1:-1:-1;;;;;7432:209:29;-1:-1:-1;;;7432:209:29;;;7392:259;;;7432:209;7392:259;:::i;11529:663::-;11740:17;;11784:149;;11716:18;;11740:17;;;-1:-1:-1;;;;;11740:17:29;;11784:149;;11880:11;;11909:10;;11784:149;;;:::i;:::-;;;;-1:-1:-1;;11784:149:29;;;;;;;;;;;;;;-1:-1:-1;;;;;11784:149:29;-1:-1:-1;;;11784:149:29;;;11740:203;;;11784:149;11740:203;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11715:228;;;11959:13;11954:232;;12033:4;12027:11;12067:16;12123:4;12120:1;12115:3;12100:28;12157:4;12152:3;12145:17;11954:232;11647:545;11529:663;;:::o;1234:42:33:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1234:42:33;;;;-1:-1:-1;1234:42:33;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1234:42:33;;;;;;;-1:-1:-1;;1234:42:33;;;:::o;10619:772:29:-;10891:13;;10931:177;;10784:7;;;;-1:-1:-1;;;;;10891:13:29;;;;10931:177;;11031:5;;11054:12;;11084:10;;10931:177;;;:::i;:::-;;;;-1:-1:-1;;10931:177:29;;;;;;;;;;;;;;-1:-1:-1;;;;;10931:177:29;-1:-1:-1;;;10931:177:29;;;10891:227;;;10931:177;10891:227;:::i;15182:109::-;15232:20;15272:12;15265:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15265:19:29;;;;;;;;;;;;-1:-1:-1;;;15265:19:29;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;15265:19:29;;;-1:-1:-1;;15265:19:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1282:44:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1282:44:33;;;;-1:-1:-1;1282:44:33;;;;;;;:::o;3469:766:29:-;3728:13;;3768:208;;3704:18;;-1:-1:-1;;;;;3728:13:29;;3768:208;;3869:7;;3894:8;;3920:14;;3952:10;;3768:208;;;:::i;:::-;;;;-1:-1:-1;;3768:208:29;;;;;;;;;;;;;;-1:-1:-1;;;;;3768:208:29;-1:-1:-1;;;3768:208:29;;;3728:258;;;3768:208;3728:258;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3703:283;;;4002:13;3997:232;;4076:4;4070:11;4110:16;4166:4;4163:1;4158:3;4143:28;4200:4;4195:3;4188:17;3997:232;3635:600;3469:766;;;;:::o;1086:67:33:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1195:33::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1195:33:33;;;-1:-1:-1;;;;1195:33:33;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1195:33:33;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1195:33:33;;;;;;-1:-1:-1;1195:33:33;;;;;;;;;;;;:::o;8272:896:29:-;8593:13;;8633:249;;8479:14;;;;-1:-1:-1;;;;;8593:13:29;;;;8633:249;;8746:3;;8767:13;;8798:12;;8828;;8858:10;;8633:249;;;:::i;:::-;;;;-1:-1:-1;;8633:249:29;;;;;;;;;;;;;;-1:-1:-1;;;;;8633:249:29;-1:-1:-1;;;8633:249:29;;;8593:299;;;8633:249;8593:299;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8568:324;;;8943:4;8937:11;8973:16;9025:4;9022:1;9017:3;9002:28;9054:13;9043:76;;9100:4;9095:3;9088:17;9043:76;-1:-1:-1;9142:10:29;;8272:896;-1:-1:-1;;;;;;;8272:896:29:o;14:173:37:-;82:20;;-1:-1:-1;;;;;131:31:37;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:127::-;253:10;248:3;244:20;241:1;234:31;284:4;281:1;274:15;308:4;305:1;298:15;324:251;396:2;390:9;438:2;426:15;;-1:-1:-1;;;;;456:34:37;;492:22;;;453:62;450:88;;;518:18;;:::i;:::-;554:2;547:22;324:251;:::o;580:275::-;651:2;645:9;716:2;697:13;;-1:-1:-1;;693:27:37;681:40;;-1:-1:-1;;;;;736:34:37;;772:22;;;733:62;730:88;;;798:18;;:::i;:::-;834:2;827:22;580:275;;-1:-1:-1;580:275:37:o;860:531::-;903:5;956:3;949:4;941:6;937:17;933:27;923:55;;974:1;971;964:12;923:55;1010:6;997:20;-1:-1:-1;;;;;1032:2:37;1029:26;1026:52;;;1058:18;;:::i;:::-;1102:55;1145:2;1126:13;;-1:-1:-1;;1122:27:37;1151:4;1118:38;1102:55;:::i;:::-;1182:2;1173:7;1166:19;1228:3;1221:4;1216:2;1208:6;1204:15;1200:26;1197:35;1194:55;;;1245:1;1242;1235:12;1194:55;1310:2;1303:4;1295:6;1291:17;1284:4;1275:7;1271:18;1258:55;1358:1;1333:16;;;1351:4;1329:27;1322:38;;;;1337:7;860:531;-1:-1:-1;;;860:531:37:o;1396:533::-;1492:6;1500;1508;1516;1569:3;1557:9;1548:7;1544:23;1540:33;1537:53;;;1586:1;1583;1576:12;1537:53;1609:29;1628:9;1609:29;:::i;:::-;1599:39;;1685:2;1674:9;1670:18;1657:32;1647:42;;1740:2;1729:9;1725:18;1712:32;-1:-1:-1;;;;;1759:6:37;1756:30;1753:50;;;1799:1;1796;1789:12;1753:50;1822;1864:7;1855:6;1844:9;1840:22;1822:50;:::i;:::-;1396:533;;;;-1:-1:-1;1812:60:37;;1919:2;1904:18;1891:32;;-1:-1:-1;;;1396:533:37:o;2608:608::-;2713:6;2721;2729;2737;2745;2798:3;2786:9;2777:7;2773:23;2769:33;2766:53;;;2815:1;2812;2805:12;2766:53;2838:29;2857:9;2838:29;:::i;:::-;2828:39;;2886:38;2920:2;2909:9;2905:18;2886:38;:::i;:::-;2876:48;;2971:2;2960:9;2956:18;2943:32;2933:42;;3026:2;3015:9;3011:18;2998:32;-1:-1:-1;;;;;3045:6:37;3042:30;3039:50;;;3085:1;3082;3075:12;3039:50;3108;3150:7;3141:6;3130:9;3126:22;3108:50;:::i;:::-;2608:608;;;;-1:-1:-1;2608:608:37;;3205:3;3190:19;3177:33;;2608:608;-1:-1:-1;;;2608:608:37:o;3403:180::-;3462:6;3515:2;3503:9;3494:7;3490:23;3486:32;3483:52;;;3531:1;3528;3521:12;3483:52;-1:-1:-1;3554:23:37;;3403:180;-1:-1:-1;3403:180:37:o;3697:258::-;3769:1;3779:113;3793:6;3790:1;3787:13;3779:113;;;3869:11;;;3863:18;3850:11;;;3843:39;3815:2;3808:10;3779:113;;;3910:6;3907:1;3904:13;3901:48;;;3945:1;3936:6;3931:3;3927:16;3920:27;3901:48;;3697:258;;;:::o;3960:::-;4002:3;4040:5;4034:12;4067:6;4062:3;4055:19;4083:63;4139:6;4132:4;4127:3;4123:14;4116:4;4109:5;4105:16;4083:63;:::i;:::-;4200:2;4179:15;-1:-1:-1;;4175:29:37;4166:39;;;;4207:4;4162:50;;3960:258;-1:-1:-1;;3960:258:37:o;4319:553::-;-1:-1:-1;;;;;4568:32:37;;4550:51;;4588:3;4632:2;4617:18;;4610:31;;;-1:-1:-1;;4658:46:37;;4684:19;;4676:6;4658:46;:::i;:::-;4735:2;4720:18;;4713:34;;;;-1:-1:-1;4790:14:37;;4783:22;4778:2;4763:18;;4756:50;4850:14;4843:22;4837:3;4822:19;;;4815:51;4650:54;4319:553;-1:-1:-1;;4319:553:37:o;4877:685::-;4982:6;4990;4998;5006;5059:3;5047:9;5038:7;5034:23;5030:33;5027:53;;;5076:1;5073;5066:12;5027:53;5099:29;5118:9;5099:29;:::i;:::-;5089:39;;5179:2;5168:9;5164:18;5151:32;-1:-1:-1;;;;;5243:2:37;5235:6;5232:14;5229:34;;;5259:1;5256;5249:12;5229:34;5282:50;5324:7;5315:6;5304:9;5300:22;5282:50;:::i;:::-;5272:60;;5379:2;5368:9;5364:18;5351:32;5341:42;;5436:2;5425:9;5421:18;5408:32;5392:48;;5465:2;5455:8;5452:16;5449:36;;;5481:1;5478;5471:12;5449:36;;5504:52;5548:7;5537:8;5526:9;5522:24;5504:52;:::i;:::-;5494:62;;;4877:685;;;;;;;:::o;5567:160::-;5632:20;;5688:13;;5681:21;5671:32;;5661:60;;5717:1;5714;5707:12;5732:955;5862:6;5870;5878;5886;5894;5902;5955:3;5943:9;5934:7;5930:23;5926:33;5923:53;;;5972:1;5969;5962:12;5923:53;5995:29;6014:9;5995:29;:::i;:::-;5985:39;;6075:2;6064:9;6060:18;6047:32;-1:-1:-1;;;;;6139:2:37;6131:6;6128:14;6125:34;;;6155:1;6152;6145:12;6125:34;6178:50;6220:7;6211:6;6200:9;6196:22;6178:50;:::i;:::-;6168:60;;6281:2;6270:9;6266:18;6253:32;6237:48;;6310:2;6300:8;6297:16;6294:36;;;6326:1;6323;6316:12;6294:36;6349:52;6393:7;6382:8;6371:9;6367:24;6349:52;:::i;:::-;6339:62;;6420:35;6451:2;6440:9;6436:18;6420:35;:::i;:::-;6410:45;;6502:3;6491:9;6487:19;6474:33;6464:43;;6560:3;6549:9;6545:19;6532:33;6516:49;;6590:2;6580:8;6577:16;6574:36;;;6606:1;6603;6596:12;6574:36;;6629:52;6673:7;6662:8;6651:9;6647:24;6629:52;:::i;:::-;6619:62;;;5732:955;;;;;;;;:::o;6692:186::-;6751:6;6804:2;6792:9;6783:7;6779:23;6775:32;6772:52;;;6820:1;6817;6810:12;6772:52;6843:29;6862:9;6843:29;:::i;:::-;6833:39;6692:186;-1:-1:-1;;;6692:186:37:o;6883:220::-;7032:2;7021:9;7014:21;6995:4;7052:45;7093:2;7082:9;7078:18;7070:6;7052:45;:::i;7108:1199::-;7314:4;7343:2;7383;7372:9;7368:18;7413:2;7402:9;7395:21;7436:6;7471;7465:13;7502:6;7494;7487:22;7528:2;7518:12;;7561:2;7550:9;7546:18;7539:25;;7623:2;7613:6;7610:1;7606:14;7595:9;7591:30;7587:39;7661:2;7653:6;7649:15;7682:1;7692:586;7706:6;7703:1;7700:13;7692:586;;;7771:22;;;-1:-1:-1;;7767:36:37;7755:49;;7827:13;;7899:9;;-1:-1:-1;;;;;7895:35:37;7880:51;;7970:11;;;7964:18;7863:4;8002:15;;;7995:27;;;7863:4;8049:48;8081:15;;;7964:18;8049:48;:::i;:::-;8154:11;;;8148:18;8141:26;8134:34;8117:15;;;8110:59;;;;-1:-1:-1;8256:12:37;;;;8035:62;-1:-1:-1;8221:15:37;;;;7728:1;7721:9;7692:586;;;-1:-1:-1;8295:6:37;;7108:1199;-1:-1:-1;;;;;;;;7108:1199:37:o;8312:156::-;8378:20;;8438:4;8427:16;;8417:27;;8407:55;;8458:1;8455;8448:12;8473:654;8523:5;8576:3;8569:4;8561:6;8557:17;8553:27;8543:55;;8594:1;8591;8584:12;8543:55;8627:2;8621:9;8669:3;8661:6;8657:16;8739:6;8727:10;8724:22;-1:-1:-1;;;;;8691:10:37;8688:34;8685:62;8682:88;;;8750:18;;:::i;:::-;8786:2;8779:22;8821:6;8862:3;8850:16;;8878:15;;;8875:35;;;8906:1;8903;8896:12;8875:35;8930:6;8945:152;8961:6;8956:3;8953:15;8945:152;;;9029:23;9048:3;9029:23;:::i;:::-;9017:36;;9082:4;9073:14;;;;8978;8945:152;;;-1:-1:-1;9115:6:37;;8473:654;-1:-1:-1;;;;;8473:654:37:o;9132:718::-;9186:5;9239:3;9232:4;9224:6;9220:17;9216:27;9206:55;;9257:1;9254;9247:12;9206:55;9293:6;9280:20;9319:4;-1:-1:-1;;;;;9338:2:37;9335:26;9332:52;;;9364:18;;:::i;:::-;9410:2;9407:1;9403:10;9433:28;9457:2;9453;9449:11;9433:28;:::i;:::-;9495:15;;;9565;;;9561:24;;;9526:12;;;;9597:15;;;9594:35;;;9625:1;9622;9615:12;9594:35;9661:2;9653:6;9649:15;9638:26;;9673:148;9689:6;9684:3;9681:15;9673:148;;;9755:23;9774:3;9755:23;:::i;:::-;9743:36;;9706:12;;;;9799;;;;9673:148;;;9839:5;9132:718;-1:-1:-1;;;;;;;9132:718:37:o;9855:1385::-;10044:6;10052;10060;10068;10076;10084;10092;10145:3;10133:9;10124:7;10120:23;10116:33;10113:53;;;10162:1;10159;10152:12;10113:53;10185:29;10204:9;10185:29;:::i;:::-;10175:39;;10233:2;10286;10275:9;10271:18;10258:32;-1:-1:-1;;;;;10350:2:37;10342:6;10339:14;10336:34;;;10366:1;10363;10356:12;10336:34;10389:50;10431:7;10422:6;10411:9;10407:22;10389:50;:::i;:::-;10379:60;;10458:35;10489:2;10478:9;10474:18;10458:35;:::i;:::-;10448:45;;10540:2;10529:9;10525:18;10512:32;10502:42;;10588:7;10582:3;10571:9;10567:19;10563:33;10553:61;;10610:1;10607;10600:12;10553:61;10634:22;;:::i;:::-;10623:33;;10678:3;10719;10708:9;10704:19;10746:7;10738:6;10735:19;10732:39;;;10767:1;10764;10757:12;10732:39;10806:3;10795:9;10791:19;10819:146;10835:6;10830:3;10827:15;10819:146;;;10901:21;10918:3;10901:21;:::i;:::-;10889:34;;10943:12;;;;10852;;10819:146;;;10823:3;10984:5;10974:15;;11008:41;11041:7;11033:6;11008:41;:::i;:::-;10998:51;;;;11102:3;11091:9;11087:19;11074:33;11058:49;;11132:2;11122:8;11119:16;11116:36;;;11148:1;11145;11138:12;11116:36;;;11171:63;11226:7;11215:8;11204:9;11200:24;11171:63;:::i;:::-;11161:73;;;9855:1385;;;;;;;;;;:::o;11245:301::-;11430:6;11423:14;11416:22;11405:9;11398:41;11475:2;11470;11459:9;11455:18;11448:30;11379:4;11495:45;11536:2;11525:9;11521:18;11513:6;11495:45;:::i;:::-;11487:53;11245:301;-1:-1:-1;;;;11245:301:37:o;11783:460::-;11868:6;11876;11884;11937:2;11925:9;11916:7;11912:23;11908:32;11905:52;;;11953:1;11950;11943:12;11905:52;11976:27;11993:9;11976:27;:::i;:::-;11966:37;;12054:2;12043:9;12039:18;12026:32;-1:-1:-1;;;;;12073:6:37;12070:30;12067:50;;;12113:1;12110;12103:12;12067:50;12136;12178:7;12169:6;12158:9;12154:22;12136:50;:::i;:::-;12126:60;;;12233:2;12222:9;12218:18;12205:32;12195:42;;11783:460;;;;;:::o;12248:389::-;12322:6;12330;12383:2;12371:9;12362:7;12358:23;12354:32;12351:52;;;12399:1;12396;12389:12;12351:52;12422:26;12438:9;12422:26;:::i;:::-;12412:36;;12499:2;12488:9;12484:18;12471:32;-1:-1:-1;;;;;12518:6:37;12515:30;12512:50;;;12558:1;12555;12548:12;12512:50;12581;12623:7;12614:6;12603:9;12599:22;12581:50;:::i;:::-;12571:60;;;12248:389;;;;;:::o;12642:398::-;-1:-1:-1;;;;;12841:32:37;;12823:51;;12910:2;12905;12890:18;;12883:30;;;-1:-1:-1;;12930:45:37;;12956:18;;12948:6;12930:45;:::i;:::-;12922:53;;13025:6;13018:14;13011:22;13006:2;12995:9;12991:18;12984:50;12642:398;;;;;;:::o;13045:742::-;13151:6;13159;13167;13220:2;13208:9;13199:7;13195:23;13191:32;13188:52;;;13236:1;13233;13226:12;13188:52;13276:9;13263:23;-1:-1:-1;;;;;13346:2:37;13338:6;13335:14;13332:34;;;13362:1;13359;13352:12;13332:34;13385:50;13427:7;13418:6;13407:9;13403:22;13385:50;:::i;:::-;13375:60;;13488:2;13477:9;13473:18;13460:32;13444:48;;13517:2;13507:8;13504:16;13501:36;;;13533:1;13530;13523:12;13501:36;13556:52;13600:7;13589:8;13578:9;13574:24;13556:52;:::i;:::-;13546:62;;13661:2;13650:9;13646:18;13633:32;13617:48;;13690:2;13680:8;13677:16;13674:36;;;13706:1;13703;13696:12;13674:36;;13729:52;13773:7;13762:8;13751:9;13747:24;13729:52;:::i;:::-;13719:62;;;13045:742;;;;;:::o;13792:127::-;13853:10;13848:3;13844:20;13841:1;13834:31;13884:4;13881:1;13874:15;13908:4;13905:1;13898:15;13924:240;14008:1;14001:5;13998:12;13988:143;;14053:10;14048:3;14044:20;14041:1;14034:31;14088:4;14085:1;14078:15;14116:4;14113:1;14106:15;13988:143;14140:18;;13924:240::o;14169:1973::-;14369:4;14398:2;14438;14427:9;14423:18;14468:2;14457:9;14450:21;14491:6;14526;14520:13;14557:6;14549;14542:22;14583:2;14573:12;;14616:2;14605:9;14601:18;14594:25;;14678:2;14668:6;14665:1;14661:14;14650:9;14646:30;14642:39;14716:2;14708:6;14704:15;14737:1;14747:1366;14761:6;14758:1;14755:13;14747:1366;;;14826:22;;;-1:-1:-1;;14822:36:37;14810:49;;14882:13;;14956:9;;-1:-1:-1;;;;;3654:31:37;3642:44;;14918:6;15021:2;15017;15013:11;15007:18;15038:59;15093:2;15085:6;15081:15;15067:12;15038:59;:::i;:::-;;15146:2;15142;15138:11;15132:18;15187:2;15182;15174:6;15170:15;15163:27;15217:50;15263:2;15255:6;15251:15;15235:14;15217:50;:::i;:::-;15203:64;;;15290:4;15345:2;15341;15337:11;15331:18;15326:2;15318:6;15314:15;15307:43;;15373:4;15426:2;15422;15418:11;15412:18;15443:49;15488:2;15480:6;15476:15;15460:14;2406:4;2395:16;2383:29;;2339:75;15443:49;-1:-1:-1;;15515:4:37;15560:11;;;15554:18;2406:4;2395:16;15618:15;;;2383:29;15657:4;15702:11;;;15696:18;4293:13;4286:21;15759:15;;;4274:34;15798:4;15843:11;;;15837:18;4293:13;4286:21;15900:15;;;4274:34;15940:6;15990:12;;;15984:19;15966:16;;;;15959:45;16091:12;;;;16056:15;;;;14783:1;14776:9;14747:1366;;16608:679;16710:6;16718;16726;16734;16787:3;16775:9;16766:7;16762:23;16758:33;16755:53;;;16804:1;16801;16794:12;16755:53;16840:9;16827:23;16817:33;;16869:35;16900:2;16889:9;16885:18;16869:35;:::i;:::-;16859:45;;16955:2;16944:9;16940:18;16927:32;-1:-1:-1;;;;;17019:2:37;17011:6;17008:14;17005:34;;;17035:1;17032;17025:12;17005:34;17058:50;17100:7;17091:6;17080:9;17076:22;17058:50;:::i;:::-;17048:60;;17161:2;17150:9;17146:18;17133:32;17117:48;;17190:2;17180:8;17177:16;17174:36;;;17206:1;17203;17196:12;17292:254;17360:6;17368;17421:2;17409:9;17400:7;17396:23;17392:32;17389:52;;;17437:1;17434;17427:12;17389:52;17473:9;17460:23;17450:33;;17502:38;17536:2;17525:9;17521:18;17502:38;:::i;:::-;17492:48;;17292:254;;;;;:::o;17551:382::-;17758:6;17751:14;17744:22;17733:9;17726:41;17817:6;17810:14;17803:22;17798:2;17787:9;17783:18;17776:50;17862:2;17857;17846:9;17842:18;17835:30;17707:4;17882:45;17923:2;17912:9;17908:18;17900:6;17882:45;:::i;:::-;17874:53;17551:382;-1:-1:-1;;;;;17551:382:37:o;18146:912::-;-1:-1:-1;;;;;18536:32:37;;18518:51;;18477:4;18506:3;18578:56;18630:2;18615:18;;18607:6;18578:56;:::i;:::-;18670:2;18665;18654:9;18650:18;18643:30;18690:45;18731:2;18720:9;18716:18;18708:6;18690:45;:::i;:::-;18766:2;18751:18;;18744:34;;;;-1:-1:-1;;18827:4:37;18815:17;;;18809:3;18794:19;;18787:46;18870:17;;;;18864:3;18849:19;;18842:46;18932:14;;18925:22;18919:3;18904:19;;18897:51;18992:14;18985:22;18979:3;18964:19;;18957:51;19039:3;19024:19;19017:35;18682:53;18146:912;-1:-1:-1;;;18146:912:37:o;19063:608::-;19168:6;19176;19184;19192;19200;19253:3;19241:9;19232:7;19228:23;19224:33;19221:53;;;19270:1;19267;19260:12;19221:53;19293:29;19312:9;19293:29;:::i;:::-;19283:39;;19369:2;19358:9;19354:18;19341:32;19331:42;;19392:38;19426:2;19415:9;19411:18;19392:38;:::i;:::-;19382:48;;19481:2;19470:9;19466:18;19453:32;-1:-1:-1;;;;;19500:6:37;19497:30;19494:50;;;19540:1;19537;19530:12;19868:461;20130:1;20126;20121:3;20117:11;20113:19;20105:6;20101:32;20090:9;20083:51;20170:6;20165:2;20154:9;20150:18;20143:34;20213:3;20208:2;20197:9;20193:18;20186:31;20064:4;20234:46;20275:3;20264:9;20260:19;20252:6;20234:46;:::i;:::-;20226:54;;20316:6;20311:2;20300:9;20296:18;20289:34;19868:461;;;;;;;:::o;20334:274::-;20463:3;20501:6;20495:13;20517:53;20563:6;20558:3;20551:4;20543:6;20539:17;20517:53;:::i;:::-;20586:16;;;;;20334:274;-1:-1:-1;;20334:274:37:o;20613:563::-;-1:-1:-1;;;;;20912:15:37;;;20894:34;;20964:15;;20959:2;20944:18;;20937:43;21011:2;20996:18;;20989:34;;;20874:3;21054:2;21039:18;;21032:31;;;20837:4;;21080:46;;21106:19;;21098:6;21080:46;:::i;:::-;21072:54;;21163:6;21157:3;21146:9;21142:19;21135:35;20613:563;;;;;;;;:::o;21181:380::-;21260:1;21256:12;;;;21303;;;21324:61;;21378:4;21370:6;21366:17;21356:27;;21324:61;21431:2;21423:6;21420:14;21400:18;21397:38;21394:161;;;21477:10;21472:3;21468:20;21465:1;21458:31;21512:4;21509:1;21502:15;21540:4;21537:1;21530:15;21394:161;;21181:380;;;:::o;21566:551::-;-1:-1:-1;;;;;21817:32:37;;21799:51;;21886:3;21881:2;21866:18;;21859:31;;;-1:-1:-1;;21913:46:37;;21939:19;;21931:6;21913:46;:::i;:::-;21995:6;21990:2;21979:9;21975:18;21968:34;22050:9;22042:6;22038:22;22033:2;22022:9;22018:18;22011:50;22078:33;22104:6;22096;22078:33;:::i;22122:797::-;-1:-1:-1;;;;;22443:32:37;;22425:51;;22512:3;22507:2;22492:18;;22485:31;;;-1:-1:-1;;22539:46:37;;22565:19;;22557:6;22539:46;:::i;:::-;22633:9;22625:6;22621:22;22616:2;22605:9;22601:18;22594:50;22667:33;22693:6;22685;22667:33;:::i;:::-;22653:47;;22750:6;22743:14;22736:22;22731:2;22720:9;22716:18;22709:50;22796:6;22790:3;22779:9;22775:19;22768:35;22852:9;22844:6;22840:22;22834:3;22823:9;22819:19;22812:51;22880:33;22906:6;22898;22880:33;:::i;:::-;22872:41;22122:797;-1:-1:-1;;;;;;;;;22122:797:37:o;23339:127::-;23400:10;23395:3;23391:20;23388:1;23381:31;23431:4;23428:1;23421:15;23455:4;23452:1;23445:15;23471:352;23564:5;23587:1;23597:220;23611:4;23608:1;23605:11;23597:220;;;23674:13;;-1:-1:-1;;;;;23670:39:37;23658:52;;23733:4;23757:12;;;;23792:15;;;;23706:1;23624:9;23597:220;;23828:461;23881:3;23919:5;23913:12;23946:6;23941:3;23934:19;23972:4;24001:2;23996:3;23992:12;23985:19;;24038:2;24031:5;24027:14;24059:1;24069:195;24083:6;24080:1;24077:13;24069:195;;;24148:13;;-1:-1:-1;;;;;24144:39:37;24132:52;;24204:12;;;;24239:15;;;;24180:1;24098:9;24069:195;;;-1:-1:-1;24280:3:37;;23828:461;-1:-1:-1;;;;;23828:461:37:o;24294:1216::-;-1:-1:-1;;;;;24765:32:37;;24747:51;;24735:3;24817:2;24835:18;;;24828:30;;;24706:4;;24735:3;24881:45;24907:18;;;24899:6;24881:45;:::i;:::-;24867:59;;24976:6;24969:14;24962:22;24957:2;24946:9;24942:18;24935:50;25021:6;25016:2;25005:9;25001:18;24994:34;25063:3;25052:9;25048:19;25109:6;25133:1;25143:178;25157:4;25154:1;25151:11;25143:178;;;25220:13;;25235:4;25216:24;25204:37;;25261:12;;;;25296:15;;;;25177:1;25170:9;25143:178;;;25147:3;;;;25330:53;25378:3;25367:9;25363:19;25355:6;25330:53;:::i;:::-;25432:9;25424:6;25420:22;25414:3;25403:9;25399:19;25392:51;25460:44;25497:6;25489;25460:44;:::i;:::-;25452:52;24294:1216;-1:-1:-1;;;;;;;;;;24294:1216:37:o;25515:369::-;25728:4;25720:6;25716:17;25705:9;25698:36;25770:2;25765;25754:9;25750:18;25743:30;25679:4;25790:45;25831:2;25820:9;25816:18;25808:6;25790:45;:::i;:::-;25782:53;;25871:6;25866:2;25855:9;25851:18;25844:34;25515:369;;;;;;:::o;26193:544::-;26436:2;26425:9;26418:21;26399:4;26462:45;26503:2;26492:9;26488:18;26480:6;26462:45;:::i;:::-;26555:9;26547:6;26543:22;26538:2;26527:9;26523:18;26516:50;26589:33;26615:6;26607;26589:33;:::i;:::-;26575:47;;26670:9;26662:6;26658:22;26653:2;26642:9;26638:18;26631:50;26698:33;26724:6;26716;26698:33;:::i;:::-;26690:41;26193:544;-1:-1:-1;;;;;;26193:544:37:o;26742:535::-;26987:6;26976:9;26969:25;27044:6;27037:14;27030:22;27025:2;27014:9;27010:18;27003:50;27089:3;27084:2;27073:9;27069:18;27062:31;26950:4;27116:46;27157:3;27146:9;27142:19;27134:6;27116:46;:::i;:::-;27210:9;27202:6;27198:22;27193:2;27182:9;27178:18;27171:50;27238:33;27264:6;27256;27238:33;:::i;27282:563::-;-1:-1:-1;;;;;27581:15:37;;;27563:34;;27628:2;27613:18;;27606:34;;;27676:15;;27671:2;27656:18;;27649:43;27543:3;27723:2;27708:18;;27701:31;;;27506:4;;27749:46;;27775:19;;27767:6;27749:46;:::i",
  "language": "Solidity",
  "natspec": {
    "author": "Leonardo Urrego",
    "events": {
      "evtProposal(uint8,uint256,uint8,string)": {
        "notice": "### Contract events ###"
      }
    },
    "kind": "dev",
    "methods": {
      "AcceptRejectInvitation(bool,bytes)": {
        "notice": "For an user that have an invitation pending",
        "params": {
          "_acceptance": "True for accept the invitation"
        }
      },
      "ExecProp(uint256)": {
        "details": "Normally is called internally after each vote",
        "notice": "Execute (or reject) a proposal computing the votes and the governance model",
        "params": {
          "_propId": "ID of the proposal, based on `arrProposals`"
        },
        "returns": {
          "message": "result of the transaction",
          "status": "True if the proposal can be execute, false in other cases"
        }
      },
      "GetArrDataPropAddUser()": {
        "notice": "Get complete array of arrDataPropAddUser",
        "returns": {
          "_0": "arrDataPropAddUser the array with all data"
        }
      },
      "GetArrProposalsLength()": {
        "notice": "Length of array"
      },
      "GetArrUsersLength()": {
        "notice": "Length of array"
      },
      "GetProposalList()": {
        "notice": "The list of all Proposals",
        "returns": {
          "_0": "arrProposals the array with all proposals"
        }
      },
      "HOUSE_NAME()": {
        "notice": "### CLH Public Variables ###"
      },
      "Init(address,string,bool,bytes32,uint8[3],address[5],address[])": {
        "details": "Some parameters can be ignored depending on the governance model",
        "notice": "Create a new CLH",
        "params": {
          "_CLC": "Array for CL Contracts see `enum eCLC`",
          "_ManagerWallets": "Whitelist of address for invitate as managers",
          "_govModel": "keccak256 hash of the governance model, see the __GOV_* constans",
          "_govRules": "Array for goverment rules see `enum gRule`",
          "_houseName": "Name given by the owner",
          "_housePrivate": "If is set to 1, the CLH is set to private",
          "_owner": "The address of the deployed wallet"
        }
      },
      "PropGovRules(uint8,string,uint256)": {
        "details": "When execute this proposal the new values will be set",
        "notice": "Generate a new proposal for change some governance parameters",
        "params": {
          "_description": "About the new proposal ",
          "_newApprovPercentage": "The new percentaje for accept or reject a proposal"
        },
        "returns": {
          "propId": "ID of the new proposal, based on `arrProposals`"
        }
      },
      "PropInviteUser(address,string,string,bool,uint256,bytes)": {
        "details": "the execution of this proposal only create an invitation ",
        "notice": "Generate a new proposal to invite a new user",
        "params": {
          "_description": "A text for the proposal",
          "_isManager": "True if is for a manager",
          "_name": "Can be the nickname or other reference to the User",
          "_walletAddr": "Address of the new user"
        },
        "returns": {
          "propId": "ID of the new proposal, based on `arrProposals`"
        }
      },
      "PropRemoveUser(address,string,uint256,bytes)": {
        "details": "The user can be a managaer",
        "notice": "Generate a new proposal for remove a user",
        "params": {
          "_description": "About the proposal",
          "_walletAddr": "user Address to be removed"
        },
        "returns": {
          "propId": "ID of the new proposal, based on `arrProposals`"
        }
      },
      "PropRequestToJoin(string,string,bytes)": {
        "details": "Only avaiable in public CLH",
        "notice": "Generate a proposal from a user that want to join to the CLH",
        "params": {
          "_description": "About the request",
          "_name": "Nickname or other user identification"
        },
        "returns": {
          "_0": "propId ID of the new proposal, based on `arrProposals`"
        }
      },
      "PropTxERC20(address,uint256,address,string,uint256)": {
        "details": "When execute this proposal, the transfer is made",
        "notice": "generate a new proposal to transfer ETH in weis",
        "params": {
          "_amountOutCLV": "Amount to transfer (in wei)",
          "_description": "About this proposal",
          "_to": "Recipient address"
        },
        "returns": {
          "propId": "ID of the new proposal, based on `arrProposals`"
        }
      },
      "PropTxWei(address,uint256,string,uint256)": {
        "details": "When execute this proposal, the transfer is made",
        "notice": "generate a new proposal to transfer ETH in weis",
        "params": {
          "_amountOutCLV": "Amount to transfer (in wei)",
          "_description": "About this proposal",
          "_to": "Recipient address"
        },
        "returns": {
          "propId": "ID of the new proposal, based on `arrProposals`"
        }
      },
      "VoteProposal(uint256,bool,string,bytes)": {
        "details": "After vote the proposal automatically try to be executed",
        "notice": "Used to vote a proposal",
        "params": {
          "_justification": "About your vote",
          "_propId": "ID of the proposal, based on `arrProposals`",
          "_support": "True for accept, false to reject"
        }
      },
      "constructor": {
        "custom:oz-upgrades-unsafe-allow": "constructor"
      }
    },
    "notice": "This contract for test only the most basic interactions",
    "title": "Contract to implement and test the basic fuctions of CLHouses",
    "version": 1
  },
  "offset": [
    319,
    15539
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x232 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70ACB761 GT PUSH2 0x130 JUMPI DUP1 PUSH4 0xB4C62192 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xCB85669C GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xCB85669C EQ PUSH2 0x554 JUMPI DUP1 PUSH4 0xDE5AB14E EQ PUSH2 0x57C JUMPI DUP1 PUSH4 0xE68777D7 EQ PUSH2 0x58F JUMPI DUP1 PUSH4 0xE810A58E EQ PUSH2 0x5A1 JUMPI DUP1 PUSH4 0xF00D6274 EQ PUSH2 0x5B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB4C62192 EQ PUSH2 0x4B1 JUMPI DUP1 PUSH4 0xBAA4D5E9 EQ PUSH2 0x4C6 JUMPI DUP1 PUSH4 0xC2B3AA08 EQ PUSH2 0x50C JUMPI DUP1 PUSH4 0xC347D2FD EQ PUSH2 0x51F JUMPI DUP1 PUSH4 0xCADA7F19 EQ PUSH2 0x541 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9360BFAD GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x9360BFAD EQ PUSH2 0x44E JUMPI DUP1 PUSH4 0x96A3DD84 EQ PUSH2 0x461 JUMPI DUP1 PUSH4 0x9C630A88 EQ PUSH2 0x483 JUMPI DUP1 PUSH4 0xA19A5F50 EQ PUSH2 0x496 JUMPI DUP1 PUSH4 0xA693649A EQ PUSH2 0x4A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70ACB761 EQ PUSH2 0x3F5 JUMPI DUP1 PUSH4 0x70FF918C EQ PUSH2 0x408 JUMPI DUP1 PUSH4 0x7C638548 EQ PUSH2 0x428 JUMPI DUP1 PUSH4 0x81CF22D8 EQ PUSH2 0x43B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2A57EF84 GT PUSH2 0x1BE JUMPI DUP1 PUSH4 0x59CA2D03 GT PUSH2 0x182 JUMPI DUP1 PUSH4 0x59CA2D03 EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0x5AADD414 EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0x5C423330 EQ PUSH2 0x3AC JUMPI DUP1 PUSH4 0x5F3D99B3 EQ PUSH2 0x3C1 JUMPI DUP1 PUSH4 0x6C2F34E7 EQ PUSH2 0x3E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2A57EF84 EQ PUSH2 0x321 JUMPI DUP1 PUSH4 0x31A0AFA7 EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0x3A70693D EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0x4E9D5472 EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0x50F7308A EQ PUSH2 0x362 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x19A50F49 GT PUSH2 0x205 JUMPI DUP1 PUSH4 0x19A50F49 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x1D5FD3CA EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x1F50DD27 EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x2266E1BC EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0x22B4081C EQ PUSH2 0x2FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4F17A9B EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x52F9B0A EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x1343E9A5 EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x152DE3B9 EQ PUSH2 0x2AE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x24A PUSH2 0x245 CALLDATASIZE PUSH1 0x4 PUSH2 0x1730 JUMP JUMPDEST PUSH2 0x5DC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x270 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x254 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x29C SWAP1 PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x254 JUMP JUMPDEST PUSH2 0x24A PUSH2 0x2BC CALLDATASIZE PUSH1 0x4 PUSH2 0x178E JUMP JUMPDEST PUSH2 0x696 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x29C SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x24A PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x270 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x24A PUSH2 0x2F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1730 JUMP JUMPDEST PUSH2 0x6F8 JUMP JUMPDEST PUSH2 0x310 PUSH2 0x30B CALLDATASIZE PUSH1 0x4 PUSH2 0x17FD JUMP JUMPDEST PUSH2 0x758 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1872 JUMP JUMPDEST PUSH2 0x24A PUSH2 0x32F CALLDATASIZE PUSH1 0x4 PUSH2 0x18B5 JUMP JUMPDEST PUSH2 0x833 JUMP JUMPDEST PUSH2 0x24A PUSH2 0x342 CALLDATASIZE PUSH1 0x4 PUSH2 0x1942 JUMP JUMPDEST PUSH2 0x8F5 JUMP JUMPDEST PUSH2 0x29C PUSH2 0x355 CALLDATASIZE PUSH1 0x4 PUSH2 0x17FD JUMP JUMPDEST PUSH2 0x9BD JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x24A JUMP JUMPDEST PUSH2 0x24A PUSH2 0x370 CALLDATASIZE PUSH1 0x4 PUSH2 0x19F3 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x38A PUSH2 0x9E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x1A15 JUMP JUMPDEST PUSH2 0x39F PUSH2 0xA6F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x1A28 JUMP JUMPDEST PUSH2 0x3BF PUSH2 0x3BA CALLDATASIZE PUSH1 0x4 PUSH2 0x1BC1 JUMP JUMPDEST PUSH2 0xB88 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3D4 PUSH2 0x3CF CALLDATASIZE PUSH1 0x4 PUSH2 0x17FD JUMP JUMPDEST PUSH2 0xD3C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254 SWAP3 SWAP2 SWAP1 PUSH2 0x1CB8 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x270 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x24A PUSH2 0x403 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CDB JUMP JUMPDEST PUSH2 0xE2B JUMP JUMPDEST PUSH2 0x24A PUSH2 0x416 CALLDATASIZE PUSH1 0x4 PUSH2 0x19F3 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x24A PUSH2 0x436 CALLDATASIZE PUSH1 0x4 PUSH2 0x1730 JUMP JUMPDEST PUSH2 0xEEA JUMP JUMPDEST PUSH2 0x3BF PUSH2 0x449 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D31 JUMP JUMPDEST PUSH2 0xF4A JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x270 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x474 PUSH2 0x46F CALLDATASIZE PUSH1 0x4 PUSH2 0x17FD JUMP JUMPDEST PUSH2 0x1007 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D7E JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x29C SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x24A PUSH2 0x4A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DB4 JUMP JUMPDEST PUSH2 0x10D2 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0x24A JUMP JUMPDEST PUSH2 0x4B9 PUSH2 0x1130 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x1E73 JUMP JUMPDEST PUSH2 0x4D9 PUSH2 0x4D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x17FD JUMP JUMPDEST PUSH2 0x12B5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP2 DUP5 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x254 JUMP JUMPDEST PUSH2 0x3BF PUSH2 0x51A CALLDATASIZE PUSH1 0x4 PUSH2 0x1F48 JUMP JUMPDEST PUSH2 0x12FD JUMP JUMPDEST PUSH2 0x532 PUSH2 0x52D CALLDATASIZE PUSH1 0x4 PUSH2 0x1FAC JUMP JUMPDEST PUSH2 0x13B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FD8 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x270 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x567 PUSH2 0x562 CALLDATASIZE PUSH1 0x4 PUSH2 0x17FD JUMP JUMPDEST PUSH2 0x1473 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2004 JUMP JUMPDEST PUSH2 0x24A PUSH2 0x58A CALLDATASIZE PUSH1 0x4 PUSH2 0x206C JUMP JUMPDEST PUSH2 0x1572 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x29C SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x29C SWAP1 PUSH5 0x100000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x5CC SWAP1 PUSH6 0x10000000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x254 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH2 0x607 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x24 ADD PUSH2 0x20BD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x4F17A9B PUSH1 0xE0 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x63C SWAP2 SWAP1 PUSH2 0x20F5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x677 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x67C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP3 PUSH2 0x692 JUMPI DUP1 DUP3 REVERT JUMPDEST DUP1 DUP3 RETURN JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH2 0x6C3 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x24 ADD PUSH2 0x2111 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x152DE3B9 PUSH1 0xE0 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x63C SWAP2 SWAP1 PUSH2 0x20F5 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH2 0x723 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x24 ADD PUSH2 0x20BD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x899B86F PUSH1 0xE2 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x63C SWAP2 SWAP1 PUSH2 0x20F5 JUMP JUMPDEST PUSH1 0x11 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x768 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP4 POP SWAP1 PUSH2 0x797 SWAP1 PUSH2 0x2156 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7C3 SWAP1 PUSH2 0x2156 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x810 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7E5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x810 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7F3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 SWAP2 PUSH1 0xFF DUP1 DUP3 AND SWAP3 POP PUSH2 0x100 SWAP1 SWAP2 DIV AND DUP6 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH2 0x85E SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x24 ADD PUSH2 0x2191 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA95FBE1 PUSH1 0xE2 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x893 SWAP2 SWAP1 PUSH2 0x20F5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x8CE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x8D3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP3 PUSH2 0x8E9 JUMPI DUP1 DUP3 REVERT JUMPDEST POP MLOAD SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH2 0x924 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x24 ADD PUSH2 0x21CD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x31A0AFA7 PUSH1 0xE0 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x959 SWAP2 SWAP1 PUSH2 0x20F5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x994 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x999 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP3 PUSH2 0x9AF JUMPI DUP1 DUP3 REVERT JUMPDEST POP MLOAD SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x10 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x9CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0xFF AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x9EE SWAP1 PUSH2 0x2156 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA1A SWAP1 PUSH2 0x2156 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA67 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA3C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA67 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA4A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xE DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xB7F JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP6 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD SWAP3 SWAP4 SWAP2 SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH2 0xADC SWAP1 PUSH2 0x2156 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB08 SWAP1 PUSH2 0x2156 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB55 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB2A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB55 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB38 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x2 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x20 SWAP2 DUP3 ADD MSTORE SWAP1 DUP3 MSTORE PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0xA93 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x1 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xBAA JUMPI POP PUSH1 0x12 SLOAD PUSH1 0xFF DUP1 DUP4 AND SWAP2 AND LT JUMPDEST PUSH2 0xC11 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x12 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH1 0xFF DUP4 AND OR PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x0 DUP4 PUSH1 0x2 PUSH1 0x5 DUP2 LT PUSH2 0xC3A JUMPI PUSH2 0xC3A PUSH2 0x2232 JUMP JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xC65 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22B8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x9F221D81 PUSH1 0xE0 SHL OR SWAP1 MSTORE MLOAD PUSH2 0xC9A SWAP2 SWAP1 PUSH2 0x20F5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xCD5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCDA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xCF0 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP1 DUP3 REVERT JUMPDEST POP PUSH1 0x12 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0xFF DUP3 AND DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x60 SWAP2 DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x44 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x5F3D99B3 PUSH1 0xE0 SHL OR SWAP1 MSTORE MLOAD PUSH2 0xD93 SWAP2 SWAP1 PUSH2 0x20F5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xDCE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xDD3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xDE9 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP1 DUP3 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x537563636573732065786563757465642070726F706F73616C00000000000000 DUP2 MSTORE POP SWAP3 POP SWAP3 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH2 0xE54 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x24 ADD PUSH2 0x2349 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x70ACB761 PUSH1 0xE0 SHL OR SWAP1 MSTORE MLOAD PUSH2 0xE89 SWAP2 SWAP1 PUSH2 0x20F5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xEC4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xEC9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP3 PUSH2 0xEDF JUMPI DUP1 DUP3 REVERT JUMPDEST POP MLOAD SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH2 0xF15 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x24 ADD PUSH2 0x20BD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xF8C70A9 PUSH1 0xE3 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x893 SWAP2 SWAP1 PUSH2 0x20F5 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH7 0x1000000000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0xF77 SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH1 0x24 ADD PUSH2 0x1CB8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x1039E45B PUSH1 0xE3 SHL OR SWAP1 MSTORE MLOAD PUSH2 0xFAC SWAP2 SWAP1 PUSH2 0x20F5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xFE7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xFEC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1002 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP1 DUP3 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xE DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1017 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP4 POP SWAP1 PUSH2 0x1046 SWAP1 PUSH2 0x2156 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1072 SWAP1 PUSH2 0x2156 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x10BF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1094 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x10BF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x10A2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x2 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 POP POP PUSH1 0xFF AND DUP4 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH2 0x10FB SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x24 ADD PUSH2 0x2375 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA19A5F5 PUSH1 0xE4 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x63C SWAP2 SWAP1 PUSH2 0x20F5 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xB7F JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x5 DUP6 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP4 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x8 DUP2 GT ISZERO PUSH2 0x11AB JUMPI PUSH2 0x11AB PUSH2 0x1E3B JUMP JUMPDEST PUSH1 0x8 DUP2 GT ISZERO PUSH2 0x11BC JUMPI PUSH2 0x11BC PUSH2 0x1E3B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x11D0 SWAP1 PUSH2 0x2156 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x11FC SWAP1 PUSH2 0x2156 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1249 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x121E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1249 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x122C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x100 DUP3 DIV DUP2 AND PUSH1 0x60 DUP6 ADD MSTORE PUSH3 0x10000 DUP3 DIV DUP2 AND ISZERO ISZERO PUSH1 0x80 DUP6 ADD MSTORE PUSH4 0x1000000 SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0xC0 SWAP1 SWAP2 ADD MSTORE SWAP1 DUP3 MSTORE PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1154 JUMP JUMPDEST PUSH1 0xF DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x12C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP5 POP SWAP1 SWAP3 DUP3 AND SWAP2 AND DUP5 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x1324 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x24 ADD PUSH2 0x23B8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x18567541 PUSH1 0xE3 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x1359 SWAP2 SWAP1 PUSH2 0x20F5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1394 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1399 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x13AF JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP1 DUP3 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0xFF DUP1 DUP5 AND SWAP5 PUSH2 0x100 SWAP1 SWAP5 DIV AND SWAP3 SWAP2 SWAP1 PUSH2 0x13F0 SWAP1 PUSH2 0x2156 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x141C SWAP1 PUSH2 0x2156 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1469 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x143E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1469 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x144C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0xD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1483 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP5 POP PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP3 DIV PUSH1 0xFF AND SWAP3 SWAP2 PUSH2 0x14BD SWAP1 PUSH2 0x2156 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x14E9 SWAP1 PUSH2 0x2156 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1536 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x150B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1536 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1519 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x2 DUP5 ADD SLOAD PUSH1 0x3 DUP6 ADD SLOAD PUSH1 0x4 SWAP1 SWAP6 ADD SLOAD SWAP4 SWAP5 SWAP1 SWAP4 PUSH1 0xFF DUP1 DUP4 AND SWAP5 POP PUSH2 0x100 DUP4 DIV DUP2 AND SWAP4 POP PUSH3 0x10000 DUP4 DIV DUP2 AND SWAP3 PUSH4 0x1000000 SWAP1 DIV AND SWAP1 DUP10 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH2 0x159F SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x24 ADD PUSH2 0x23EB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x6F2D58A7 PUSH1 0xE1 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x15D4 SWAP2 SWAP1 PUSH2 0x20F5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x160F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1614 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP3 PUSH2 0x162A JUMPI DUP1 DUP3 REVERT JUMPDEST POP MLOAD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x164E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x168B JUMPI PUSH2 0x168B PUSH2 0x1653 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x16B9 JUMPI PUSH2 0x16B9 PUSH2 0x1653 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x16D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x16EB JUMPI PUSH2 0x16EB PUSH2 0x1653 JUMP JUMPDEST PUSH2 0x16FE PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x1691 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x1713 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1746 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x174F DUP6 PUSH2 0x1637 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1771 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x177D DUP8 DUP3 DUP9 ADD PUSH2 0x16C1 JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP4 SWAP5 PUSH1 0x60 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x17A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17AF DUP7 PUSH2 0x1637 JUMP JUMPDEST SWAP5 POP PUSH2 0x17BD PUSH1 0x20 DUP8 ADD PUSH2 0x1637 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x17DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17EB DUP9 DUP3 DUP10 ADD PUSH2 0x16C1 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP3 SWAP6 PUSH1 0x80 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x180F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1831 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1819 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1840 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x185E DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1816 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1896 SWAP1 DUP4 ADD DUP8 PUSH2 0x1846 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE POP SWAP2 ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x80 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x18CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18D4 DUP6 PUSH2 0x1637 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x18F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18FC DUP9 DUP4 DUP10 ADD PUSH2 0x16C1 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1919 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1926 DUP8 DUP3 DUP9 ADD PUSH2 0x16C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x164E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x195B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1964 DUP8 PUSH2 0x1637 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1980 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x198C DUP11 DUP4 DUP12 ADD PUSH2 0x16C1 JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x19A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19AE DUP11 DUP4 DUP12 ADD PUSH2 0x16C1 JUMP JUMPDEST SWAP6 POP PUSH2 0x19BC PUSH1 0x60 DUP11 ADD PUSH2 0x1932 JUMP JUMPDEST SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x19D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19E6 DUP10 DUP3 DUP11 ADD PUSH2 0x16C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A0E DUP3 PUSH2 0x1637 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1A0E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1846 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 SWAP3 POP DUP3 DUP7 ADD SWAP2 POP DUP3 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD DUP5 DUP9 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1AA8 JUMPI DUP9 DUP4 SUB PUSH1 0x3F NOT ADD DUP6 MSTORE DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE DUP8 DUP2 ADD MLOAD PUSH1 0x60 DUP10 DUP7 ADD DUP2 SWAP1 MSTORE SWAP1 PUSH2 0x1A88 DUP3 DUP8 ADD DUP3 PUSH2 0x1846 JUMP JUMPDEST SWAP3 DUP10 ADD MLOAD ISZERO ISZERO SWAP6 DUP10 ADD SWAP6 SWAP1 SWAP6 MSTORE POP SWAP5 DUP8 ADD SWAP5 SWAP3 POP SWAP1 DUP7 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1A4F JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x164E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1AD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xA0 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR ISZERO PUSH2 0x1AFA JUMPI PUSH2 0x1AFA PUSH2 0x1653 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP1 PUSH1 0xA0 DUP5 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1B0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1B30 JUMPI PUSH2 0x1B22 DUP2 PUSH2 0x1637 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x1B11 JUMP JUMPDEST POP SWAP2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1B4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x1B67 JUMPI PUSH2 0x1B67 PUSH2 0x1653 JUMP JUMPDEST DUP2 PUSH1 0x5 SHL PUSH2 0x1B76 DUP3 DUP3 ADD PUSH2 0x1691 JUMP JUMPDEST SWAP3 DUP4 MSTORE DUP5 DUP2 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP1 DUP8 DUP6 GT ISZERO PUSH2 0x1B90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP8 ADD SWAP3 POP JUMPDEST DUP5 DUP4 LT ISZERO PUSH2 0x1BB6 JUMPI PUSH2 0x1BA7 DUP4 PUSH2 0x1637 JUMP JUMPDEST DUP3 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH2 0x1B96 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1A0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1BDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BE6 DUP9 PUSH2 0x1637 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP1 DUP10 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1C03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C0F DUP13 DUP4 DUP14 ADD PUSH2 0x16C1 JUMP JUMPDEST SWAP9 POP PUSH2 0x1C1D PUSH1 0x40 DUP13 ADD PUSH2 0x1932 JUMP JUMPDEST SWAP8 POP PUSH1 0x60 DUP12 ADD CALLDATALOAD SWAP7 POP DUP12 PUSH1 0x9F DUP13 ADD SLT PUSH2 0x1C35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C3D PUSH2 0x1669 JUMP JUMPDEST SWAP2 POP DUP2 PUSH1 0xE0 DUP13 ADD DUP14 DUP2 GT ISZERO PUSH2 0x1C51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x80 DUP14 ADD JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C74 JUMPI PUSH2 0x1C67 DUP2 PUSH2 0x1AB6 JUMP JUMPDEST DUP6 MSTORE SWAP4 DUP6 ADD SWAP4 DUP6 ADD PUSH2 0x1C56 JUMP JUMPDEST POP DUP2 SWAP8 POP PUSH2 0x1C82 DUP15 DUP3 PUSH2 0x1AC7 JUMP JUMPDEST SWAP7 POP POP POP PUSH2 0x180 DUP12 ADD CALLDATALOAD SWAP3 POP DUP1 DUP4 GT ISZERO PUSH2 0x1C9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH2 0x1CA9 DUP11 DUP3 DUP12 ADD PUSH2 0x1B3B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1CD3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1846 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1CF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CF9 DUP5 PUSH2 0x1AB6 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1D14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D20 DUP7 DUP3 DUP8 ADD PUSH2 0x16C1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D4D DUP4 PUSH2 0x1932 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1D68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D74 DUP6 DUP3 DUP7 ADD PUSH2 0x16C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1DA2 SWAP1 DUP4 ADD DUP6 PUSH2 0x1846 JUMP JUMPDEST SWAP1 POP DUP3 ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1DC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1DE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DEC DUP8 DUP4 DUP9 ADD PUSH2 0x16C1 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1E02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E0E DUP8 DUP4 DUP9 ADD PUSH2 0x16C1 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1E24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E31 DUP7 DUP3 DUP8 ADD PUSH2 0x16C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x9 DUP2 LT PUSH2 0x1E6F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 SWAP3 POP DUP3 DUP7 ADD SWAP2 POP DUP3 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD DUP5 DUP9 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1AA8 JUMPI DUP9 DUP4 SUB PUSH1 0x3F NOT ADD DUP6 MSTORE DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH2 0x120 DUP9 DUP3 ADD MLOAD PUSH2 0x1ECD DUP11 DUP8 ADD DUP3 PUSH2 0x1E51 JUMP JUMPDEST POP DUP8 DUP3 ADD MLOAD DUP2 DUP10 DUP8 ADD MSTORE PUSH2 0x1EE3 DUP3 DUP8 ADD DUP3 PUSH2 0x1846 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x60 DUP1 DUP4 ADD MLOAD DUP2 DUP8 ADD MSTORE POP PUSH1 0x80 DUP1 DUP4 ADD MLOAD PUSH2 0x1F05 DUP3 DUP9 ADD DUP3 PUSH1 0xFF AND SWAP1 MSTORE JUMP JUMPDEST POP POP PUSH1 0xA0 DUP3 DUP2 ADD MLOAD PUSH1 0xFF AND SWAP1 DUP7 ADD MSTORE PUSH1 0xC0 DUP1 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 DUP7 ADD MSTORE PUSH1 0xE0 DUP1 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 DUP7 ADD MSTORE PUSH2 0x100 SWAP2 DUP3 ADD MLOAD SWAP2 SWAP1 SWAP5 ADD MSTORE SWAP4 DUP7 ADD SWAP4 SWAP1 DUP7 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1E9A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1F5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH2 0x1F6E PUSH1 0x20 DUP7 ADD PUSH2 0x1932 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1F8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F96 DUP9 DUP4 DUP10 ADD PUSH2 0x16C1 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1919 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1FCF PUSH1 0x20 DUP5 ADD PUSH2 0x1637 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP4 ISZERO ISZERO DUP2 MSTORE DUP3 ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1FFB PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1846 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP2 MSTORE PUSH1 0x0 PUSH2 0x120 PUSH2 0x2022 PUSH1 0x20 DUP5 ADD DUP13 PUSH2 0x1E51 JUMP JUMPDEST DUP1 PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x2034 DUP2 DUP5 ADD DUP12 PUSH2 0x1846 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD SWAP10 SWAP1 SWAP10 MSTORE POP POP PUSH1 0xFF SWAP6 DUP7 AND PUSH1 0x80 DUP3 ADD MSTORE SWAP4 SWAP1 SWAP5 AND PUSH1 0xA0 DUP5 ADD MSTORE SWAP1 ISZERO ISZERO PUSH1 0xC0 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2084 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x208D DUP7 PUSH2 0x1637 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH2 0x20A2 PUSH1 0x40 DUP8 ADD PUSH2 0x1637 JUMP JUMPDEST SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x17DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x20E4 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1846 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x60 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2107 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1816 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2144 SWAP1 DUP4 ADD DUP6 PUSH2 0x1846 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x80 DUP4 ADD MSTORE SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x216A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x218B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x21B5 SWAP1 DUP4 ADD DUP7 PUSH2 0x1846 JUMP JUMPDEST DUP5 PUSH1 0x40 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1BB6 DUP2 DUP6 PUSH2 0x1846 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP2 MSTORE PUSH1 0xC0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x21F1 SWAP1 DUP4 ADD DUP9 PUSH2 0x1846 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x2203 DUP2 DUP9 PUSH2 0x1846 JUMP JUMPDEST SWAP1 POP DUP6 ISZERO ISZERO PUSH1 0x60 DUP5 ADD MSTORE DUP5 PUSH1 0x80 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0x2225 DUP2 DUP6 PUSH2 0x1846 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 PUSH1 0x0 JUMPDEST PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x1840 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x224C JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x22AD JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2288 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP2 MSTORE PUSH2 0x1A0 PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH2 0x22DF DUP5 DUP4 ADD DUP12 PUSH2 0x1846 JUMP JUMPDEST SWAP2 POP DUP9 ISZERO ISZERO PUSH1 0x40 DUP6 ADD MSTORE DUP8 PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD DUP8 PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x2317 JUMPI DUP2 MLOAD PUSH1 0xFF AND DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x22F7 JUMP JUMPDEST POP POP POP POP PUSH2 0x2328 PUSH1 0xE0 DUP5 ADD DUP7 PUSH2 0x2248 JUMP JUMPDEST DUP3 DUP2 SUB PUSH2 0x180 DUP5 ADD MSTORE PUSH2 0x233B DUP2 DUP6 PUSH2 0x2274 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xFF DUP5 AND DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2365 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1846 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2388 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1846 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x239A DUP2 DUP7 PUSH2 0x1846 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x23AE DUP2 DUP6 PUSH2 0x1846 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP5 DUP2 MSTORE DUP4 ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x23D9 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1846 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1BB6 DUP2 DUP6 PUSH2 0x1846 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE DUP5 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2144 SWAP1 DUP4 ADD DUP6 PUSH2 0x1846 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 0xC5 0xDF 0xE0 DUP9 LOG4 RETURNDATASIZE 0xD3 EXTCODESIZE 0x23 SWAP11 0xD5 0xC1 EXTCODECOPY DUP1 0xCA CALLDATACOPY CALLDATALOAD DUP12 PUSH8 0xC6DE9F37AFB34116 DUP1 0x2D PUSH6 0x5964736F6C63 NUMBER STOP ADDMOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        319,
        15539
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "5": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "CALLVALUE",
      "path": "29"
    },
    "6": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "DUP1",
      "path": "29"
    },
    "7": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "8": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "12": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "DUP1",
      "path": "29"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "REVERT",
      "path": "29"
    },
    "16": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "17": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "POP",
      "path": "29"
    },
    "18": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "CALLDATASIZE",
      "path": "29"
    },
    "21": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "LT",
      "path": "29"
    },
    "22": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x232"
    },
    "25": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "26": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "29": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "SHR",
      "path": "29"
    },
    "32": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "DUP1",
      "path": "29"
    },
    "33": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x70ACB761"
    },
    "38": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "GT",
      "path": "29"
    },
    "39": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x130"
    },
    "42": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "43": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "DUP1",
      "path": "29"
    },
    "44": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xB4C62192"
    },
    "49": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "GT",
      "path": "29"
    },
    "50": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xB8"
    },
    "53": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "54": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "DUP1",
      "path": "29"
    },
    "55": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xCB85669C"
    },
    "60": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "GT",
      "path": "29"
    },
    "61": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x7C"
    },
    "64": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "65": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "DUP1",
      "path": "29"
    },
    "66": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xCB85669C"
    },
    "71": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "EQ",
      "path": "29"
    },
    "72": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x554"
    },
    "75": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "76": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "DUP1",
      "path": "29"
    },
    "77": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xDE5AB14E"
    },
    "82": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "EQ",
      "path": "29"
    },
    "83": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x57C"
    },
    "86": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "87": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "DUP1",
      "path": "29"
    },
    "88": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xE68777D7"
    },
    "93": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "EQ",
      "path": "29"
    },
    "94": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x58F"
    },
    "97": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "98": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "DUP1",
      "path": "29"
    },
    "99": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xE810A58E"
    },
    "104": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "EQ",
      "path": "29"
    },
    "105": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x5A1"
    },
    "108": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "109": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "DUP1",
      "path": "29"
    },
    "110": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xF00D6274"
    },
    "115": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "EQ",
      "path": "29"
    },
    "116": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x5B6"
    },
    "119": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "120": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "122": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "DUP1",
      "path": "29"
    },
    "123": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "REVERT",
      "path": "29"
    },
    "124": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "125": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "DUP1",
      "path": "29"
    },
    "126": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xB4C62192"
    },
    "131": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "EQ",
      "path": "29"
    },
    "132": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x4B1"
    },
    "135": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "136": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "DUP1",
      "path": "29"
    },
    "137": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xBAA4D5E9"
    },
    "142": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "EQ",
      "path": "29"
    },
    "143": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x4C6"
    },
    "146": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "147": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "DUP1",
      "path": "29"
    },
    "148": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xC2B3AA08"
    },
    "153": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "EQ",
      "path": "29"
    },
    "154": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x50C"
    },
    "157": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "158": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "DUP1",
      "path": "29"
    },
    "159": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xC347D2FD"
    },
    "164": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "EQ",
      "path": "29"
    },
    "165": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x51F"
    },
    "168": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "169": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "DUP1",
      "path": "29"
    },
    "170": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xCADA7F19"
    },
    "175": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "EQ",
      "path": "29"
    },
    "176": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x541"
    },
    "179": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "180": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "182": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "DUP1",
      "path": "29"
    },
    "183": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "REVERT",
      "path": "29"
    },
    "184": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "185": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "DUP1",
      "path": "29"
    },
    "186": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x9360BFAD"
    },
    "191": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "GT",
      "path": "29"
    },
    "192": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xFF"
    },
    "195": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "196": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "DUP1",
      "path": "29"
    },
    "197": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x9360BFAD"
    },
    "202": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "EQ",
      "path": "29"
    },
    "203": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x44E"
    },
    "206": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "207": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "DUP1",
      "path": "29"
    },
    "208": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x96A3DD84"
    },
    "213": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "EQ",
      "path": "29"
    },
    "214": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x461"
    },
    "217": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "218": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "DUP1",
      "path": "29"
    },
    "219": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x9C630A88"
    },
    "224": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "EQ",
      "path": "29"
    },
    "225": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x483"
    },
    "228": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "229": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "DUP1",
      "path": "29"
    },
    "230": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xA19A5F50"
    },
    "235": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "EQ",
      "path": "29"
    },
    "236": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x496"
    },
    "239": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "240": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "DUP1",
      "path": "29"
    },
    "241": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xA693649A"
    },
    "246": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "EQ",
      "path": "29"
    },
    "247": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x4A9"
    },
    "250": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "251": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "253": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "DUP1",
      "path": "29"
    },
    "254": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "REVERT",
      "path": "29"
    },
    "255": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "256": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "DUP1",
      "path": "29"
    },
    "257": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x70ACB761"
    },
    "262": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "EQ",
      "path": "29"
    },
    "263": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x3F5"
    },
    "266": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "267": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "DUP1",
      "path": "29"
    },
    "268": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x70FF918C"
    },
    "273": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "EQ",
      "path": "29"
    },
    "274": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x408"
    },
    "277": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "278": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "DUP1",
      "path": "29"
    },
    "279": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x7C638548"
    },
    "284": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "EQ",
      "path": "29"
    },
    "285": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x428"
    },
    "288": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "289": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "DUP1",
      "path": "29"
    },
    "290": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x81CF22D8"
    },
    "295": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "EQ",
      "path": "29"
    },
    "296": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x43B"
    },
    "299": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "300": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "302": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "DUP1",
      "path": "29"
    },
    "303": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "REVERT",
      "path": "29"
    },
    "304": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "305": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "DUP1",
      "path": "29"
    },
    "306": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x2A57EF84"
    },
    "311": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "GT",
      "path": "29"
    },
    "312": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1BE"
    },
    "315": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "316": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "DUP1",
      "path": "29"
    },
    "317": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x59CA2D03"
    },
    "322": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "GT",
      "path": "29"
    },
    "323": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x182"
    },
    "326": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "327": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "DUP1",
      "path": "29"
    },
    "328": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x59CA2D03"
    },
    "333": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "EQ",
      "path": "29"
    },
    "334": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x382"
    },
    "337": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "338": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "DUP1",
      "path": "29"
    },
    "339": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x5AADD414"
    },
    "344": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "EQ",
      "path": "29"
    },
    "345": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x397"
    },
    "348": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "349": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "DUP1",
      "path": "29"
    },
    "350": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x5C423330"
    },
    "355": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "EQ",
      "path": "29"
    },
    "356": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x3AC"
    },
    "359": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "360": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "DUP1",
      "path": "29"
    },
    "361": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x5F3D99B3"
    },
    "366": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "EQ",
      "path": "29"
    },
    "367": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x3C1"
    },
    "370": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "371": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "DUP1",
      "path": "29"
    },
    "372": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x6C2F34E7"
    },
    "377": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "EQ",
      "path": "29"
    },
    "378": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x3E2"
    },
    "381": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "382": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "384": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "DUP1",
      "path": "29"
    },
    "385": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "REVERT",
      "path": "29"
    },
    "386": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "387": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "DUP1",
      "path": "29"
    },
    "388": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x2A57EF84"
    },
    "393": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "EQ",
      "path": "29"
    },
    "394": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x321"
    },
    "397": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "398": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "DUP1",
      "path": "29"
    },
    "399": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x31A0AFA7"
    },
    "404": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "EQ",
      "path": "29"
    },
    "405": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x334"
    },
    "408": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "409": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "DUP1",
      "path": "29"
    },
    "410": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x3A70693D"
    },
    "415": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "EQ",
      "path": "29"
    },
    "416": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x347"
    },
    "419": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "420": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "DUP1",
      "path": "29"
    },
    "421": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x4E9D5472"
    },
    "426": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "EQ",
      "path": "29"
    },
    "427": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x35A"
    },
    "430": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "431": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "DUP1",
      "path": "29"
    },
    "432": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x50F7308A"
    },
    "437": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "EQ",
      "path": "29"
    },
    "438": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x362"
    },
    "441": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "442": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "444": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "DUP1",
      "path": "29"
    },
    "445": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "REVERT",
      "path": "29"
    },
    "446": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "447": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "DUP1",
      "path": "29"
    },
    "448": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x19A50F49"
    },
    "453": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "GT",
      "path": "29"
    },
    "454": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x205"
    },
    "457": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "458": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "DUP1",
      "path": "29"
    },
    "459": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x19A50F49"
    },
    "464": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "EQ",
      "path": "29"
    },
    "465": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x2C1"
    },
    "468": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "469": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "DUP1",
      "path": "29"
    },
    "470": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x1D5FD3CA"
    },
    "475": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "EQ",
      "path": "29"
    },
    "476": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x2CE"
    },
    "479": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "480": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "DUP1",
      "path": "29"
    },
    "481": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x1F50DD27"
    },
    "486": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "EQ",
      "path": "29"
    },
    "487": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x2D7"
    },
    "490": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "491": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "DUP1",
      "path": "29"
    },
    "492": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x2266E1BC"
    },
    "497": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "EQ",
      "path": "29"
    },
    "498": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x2EA"
    },
    "501": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "502": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "DUP1",
      "path": "29"
    },
    "503": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x22B4081C"
    },
    "508": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "EQ",
      "path": "29"
    },
    "509": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x2FD"
    },
    "512": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "513": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "515": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "DUP1",
      "path": "29"
    },
    "516": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "REVERT",
      "path": "29"
    },
    "517": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "518": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "DUP1",
      "path": "29"
    },
    "519": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x4F17A9B"
    },
    "524": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "EQ",
      "path": "29"
    },
    "525": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x237"
    },
    "528": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "529": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "DUP1",
      "path": "29"
    },
    "530": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x52F9B0A"
    },
    "535": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "EQ",
      "path": "29"
    },
    "536": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x25D"
    },
    "539": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "540": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "DUP1",
      "path": "29"
    },
    "541": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x1343E9A5"
    },
    "546": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "EQ",
      "path": "29"
    },
    "547": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x288"
    },
    "550": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "551": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "DUP1",
      "path": "29"
    },
    "552": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x152DE3B9"
    },
    "557": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "EQ",
      "path": "29"
    },
    "558": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x2AE"
    },
    "561": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "562": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "563": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "565": {
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "DUP1",
      "path": "29"
    },
    "566": {
      "first_revert": true,
      "fn": null,
      "offset": [
        319,
        15539
      ],
      "op": "REVERT",
      "path": "29"
    },
    "567": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13110,
        13950
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "568": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13110,
        13950
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x24A"
    },
    "571": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13110,
        13950
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x245"
    },
    "574": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13110,
        13950
      ],
      "op": "CALLDATASIZE",
      "path": "29"
    },
    "575": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13110,
        13950
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "577": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13110,
        13950
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1730"
    },
    "580": {
      "fn": "CLHouse.PropSellERC20",
      "jump": "i",
      "offset": [
        13110,
        13950
      ],
      "op": "JUMP",
      "path": "29"
    },
    "581": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13110,
        13950
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "582": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13110,
        13950
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x5DC"
    },
    "585": {
      "fn": "CLHouse.PropSellERC20",
      "jump": "i",
      "offset": [
        13110,
        13950
      ],
      "op": "JUMP",
      "path": "29"
    },
    "586": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13110,
        13950
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "587": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13110,
        13950
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "589": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13110,
        13950
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "590": {
      "op": "SWAP1"
    },
    "591": {
      "op": "DUP2"
    },
    "592": {
      "op": "MSTORE"
    },
    "593": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "595": {
      "op": "ADD"
    },
    "596": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13110,
        13950
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "597": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13110,
        13950
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "599": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13110,
        13950
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "600": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13110,
        13950
      ],
      "op": "DUP1",
      "path": "29"
    },
    "601": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13110,
        13950
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "602": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13110,
        13950
      ],
      "op": "SUB",
      "path": "29"
    },
    "603": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13110,
        13950
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "604": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13110,
        13950
      ],
      "op": "RETURN",
      "path": "29"
    },
    "605": {
      "offset": [
        892,
        915
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "606": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        892,
        915
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x8"
    },
    "608": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        892,
        915
      ],
      "op": "SLOAD",
      "path": "33"
    },
    "609": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        892,
        915
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x270"
    },
    "612": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        892,
        915
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "617": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "619": {
      "op": "SHL"
    },
    "620": {
      "op": "SUB"
    },
    "621": {
      "offset": [
        892,
        915
      ],
      "op": "AND",
      "path": "33"
    },
    "622": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        892,
        915
      ],
      "op": "DUP2",
      "path": "33"
    },
    "623": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        892,
        915
      ],
      "op": "JUMP",
      "path": "33"
    },
    "624": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        892,
        915
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "625": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        892,
        915
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x40"
    },
    "627": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        892,
        915
      ],
      "op": "MLOAD",
      "path": "33"
    },
    "628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "632": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "634": {
      "op": "SHL"
    },
    "635": {
      "op": "SUB"
    },
    "636": {
      "op": "SWAP1"
    },
    "637": {
      "op": "SWAP2"
    },
    "638": {
      "op": "AND"
    },
    "639": {
      "op": "DUP2"
    },
    "640": {
      "op": "MSTORE"
    },
    "641": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "643": {
      "op": "ADD"
    },
    "644": {
      "offset": [
        892,
        915
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x254"
    },
    "647": {
      "op": "JUMP"
    },
    "648": {
      "offset": [
        559,
        587
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "649": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        559,
        587
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x1"
    },
    "651": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        559,
        587
      ],
      "op": "SLOAD",
      "path": "33"
    },
    "652": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        559,
        587
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x29C"
    },
    "655": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        559,
        587
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "656": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        559,
        587
      ],
      "op": "PUSH4",
      "path": "33",
      "value": "0x1000000"
    },
    "661": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        559,
        587
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "662": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        559,
        587
      ],
      "op": "DIV",
      "path": "33"
    },
    "663": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        559,
        587
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0xFF"
    },
    "665": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        559,
        587
      ],
      "op": "AND",
      "path": "33"
    },
    "666": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        559,
        587
      ],
      "op": "DUP2",
      "path": "33"
    },
    "667": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        559,
        587
      ],
      "op": "JUMP",
      "path": "33"
    },
    "668": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        559,
        587
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "669": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        559,
        587
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x40"
    },
    "671": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        559,
        587
      ],
      "op": "MLOAD",
      "path": "33"
    },
    "672": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "674": {
      "op": "SWAP1"
    },
    "675": {
      "op": "SWAP2"
    },
    "676": {
      "op": "AND"
    },
    "677": {
      "op": "DUP2"
    },
    "678": {
      "op": "MSTORE"
    },
    "679": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "681": {
      "op": "ADD"
    },
    "682": {
      "offset": [
        559,
        587
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x254"
    },
    "685": {
      "op": "JUMP"
    },
    "686": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12198,
        13104
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "687": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12198,
        13104
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x24A"
    },
    "690": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12198,
        13104
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x2BC"
    },
    "693": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12198,
        13104
      ],
      "op": "CALLDATASIZE",
      "path": "29"
    },
    "694": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12198,
        13104
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "696": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12198,
        13104
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x178E"
    },
    "699": {
      "fn": "CLHouse.PropSwapERC20",
      "jump": "i",
      "offset": [
        12198,
        13104
      ],
      "op": "JUMP",
      "path": "29"
    },
    "700": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12198,
        13104
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "701": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12198,
        13104
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x696"
    },
    "704": {
      "fn": "CLHouse.PropSwapERC20",
      "jump": "i",
      "offset": [
        12198,
        13104
      ],
      "op": "JUMP",
      "path": "29"
    },
    "705": {
      "offset": [
        460,
        481
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "706": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        460,
        481
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x1"
    },
    "708": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        460,
        481
      ],
      "op": "SLOAD",
      "path": "33"
    },
    "709": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        460,
        481
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x29C"
    },
    "712": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        460,
        481
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "713": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        460,
        481
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0xFF"
    },
    "715": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        460,
        481
      ],
      "op": "AND",
      "path": "33"
    },
    "716": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        460,
        481
      ],
      "op": "DUP2",
      "path": "33"
    },
    "717": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        460,
        481
      ],
      "op": "JUMP",
      "path": "33"
    },
    "718": {
      "offset": [
        779,
        816
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "719": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        779,
        816
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x24A"
    },
    "722": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        779,
        816
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x5"
    },
    "724": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        779,
        816
      ],
      "op": "SLOAD",
      "path": "33"
    },
    "725": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        779,
        816
      ],
      "op": "DUP2",
      "path": "33"
    },
    "726": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        779,
        816
      ],
      "op": "JUMP",
      "path": "33"
    },
    "727": {
      "offset": [
        921,
        948
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "728": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        921,
        948
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x9"
    },
    "730": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        921,
        948
      ],
      "op": "SLOAD",
      "path": "33"
    },
    "731": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        921,
        948
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x270"
    },
    "734": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        921,
        948
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "737": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "739": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "741": {
      "op": "SHL"
    },
    "742": {
      "op": "SUB"
    },
    "743": {
      "offset": [
        921,
        948
      ],
      "op": "AND",
      "path": "33"
    },
    "744": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        921,
        948
      ],
      "op": "DUP2",
      "path": "33"
    },
    "745": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        921,
        948
      ],
      "op": "JUMP",
      "path": "33"
    },
    "746": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13956,
        14792
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "747": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13956,
        14792
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x24A"
    },
    "750": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13956,
        14792
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x2F8"
    },
    "753": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13956,
        14792
      ],
      "op": "CALLDATASIZE",
      "path": "29"
    },
    "754": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13956,
        14792
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "756": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13956,
        14792
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1730"
    },
    "759": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "i",
      "offset": [
        13956,
        14792
      ],
      "op": "JUMP",
      "path": "29"
    },
    "760": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13956,
        14792
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "761": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13956,
        14792
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x6F8"
    },
    "764": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "i",
      "offset": [
        13956,
        14792
      ],
      "op": "JUMP",
      "path": "29"
    },
    "765": {
      "offset": [
        1382,
        1407
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "766": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x310"
    },
    "769": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x30B"
    },
    "772": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "CALLDATASIZE",
      "path": "33"
    },
    "773": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x4"
    },
    "775": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x17FD"
    },
    "778": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "i",
      "offset": [
        1382,
        1407
      ],
      "op": "JUMP",
      "path": "33"
    },
    "779": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "780": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x758"
    },
    "783": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "i",
      "offset": [
        1382,
        1407
      ],
      "op": "JUMP",
      "path": "33"
    },
    "784": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "785": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x40"
    },
    "787": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "MLOAD",
      "path": "33"
    },
    "788": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x254"
    },
    "791": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP6",
      "path": "33"
    },
    "792": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP5",
      "path": "33"
    },
    "793": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP4",
      "path": "33"
    },
    "794": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP3",
      "path": "33"
    },
    "795": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "796": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "797": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x1872"
    },
    "800": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "i",
      "offset": [
        1382,
        1407
      ],
      "op": "JUMP",
      "path": "33"
    },
    "801": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5911,
        6758
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "802": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5911,
        6758
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x24A"
    },
    "805": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5911,
        6758
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x32F"
    },
    "808": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5911,
        6758
      ],
      "op": "CALLDATASIZE",
      "path": "29"
    },
    "809": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5911,
        6758
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "811": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5911,
        6758
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x18B5"
    },
    "814": {
      "fn": "CLHouse.PropRemoveUser",
      "jump": "i",
      "offset": [
        5911,
        6758
      ],
      "op": "JUMP",
      "path": "29"
    },
    "815": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5911,
        6758
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "816": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5911,
        6758
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x833"
    },
    "819": {
      "fn": "CLHouse.PropRemoveUser",
      "jump": "i",
      "offset": [
        5911,
        6758
      ],
      "op": "JUMP",
      "path": "29"
    },
    "820": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4671,
        5635
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "821": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4671,
        5635
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x24A"
    },
    "824": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4671,
        5635
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x342"
    },
    "827": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4671,
        5635
      ],
      "op": "CALLDATASIZE",
      "path": "29"
    },
    "828": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4671,
        5635
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "830": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4671,
        5635
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1942"
    },
    "833": {
      "fn": "CLHouse.PropInviteUser",
      "jump": "i",
      "offset": [
        4671,
        5635
      ],
      "op": "JUMP",
      "path": "29"
    },
    "834": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4671,
        5635
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "835": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4671,
        5635
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x8F5"
    },
    "838": {
      "fn": "CLHouse.PropInviteUser",
      "jump": "i",
      "offset": [
        4671,
        5635
      ],
      "op": "JUMP",
      "path": "29"
    },
    "839": {
      "offset": [
        1332,
        1376
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "840": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x29C"
    },
    "843": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x355"
    },
    "846": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "CALLDATASIZE",
      "path": "33"
    },
    "847": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x4"
    },
    "849": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x17FD"
    },
    "852": {
      "fn": "CLHouse.PropInviteUser",
      "jump": "i",
      "offset": [
        1332,
        1376
      ],
      "op": "JUMP",
      "path": "33"
    },
    "853": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "854": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x9BD"
    },
    "857": {
      "fn": "CLHouse.PropInviteUser",
      "jump": "i",
      "offset": [
        1332,
        1376
      ],
      "op": "JUMP",
      "path": "33"
    },
    "858": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        14968,
        15076
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "859": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        15050,
        15062
      ],
      "op": "PUSH1",
      "path": "29",
      "statement": 0,
      "value": "0xD"
    },
    "861": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        15050,
        15069
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "862": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        14968,
        15076
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x24A"
    },
    "865": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        14968,
        15076
      ],
      "op": "JUMP",
      "path": "29"
    },
    "866": {
      "offset": [
        954,
        1008
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "867": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        954,
        1008
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x24A"
    },
    "870": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        954,
        1008
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x370"
    },
    "873": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        954,
        1008
      ],
      "op": "CALLDATASIZE",
      "path": "33"
    },
    "874": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        954,
        1008
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x4"
    },
    "876": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        954,
        1008
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x19F3"
    },
    "879": {
      "fn": "CLHouse.GetArrProposalsLength",
      "jump": "i",
      "offset": [
        954,
        1008
      ],
      "op": "JUMP",
      "path": "33"
    },
    "880": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        954,
        1008
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "881": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        954,
        1008
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0xA"
    },
    "883": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        954,
        1008
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x20"
    },
    "885": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        954,
        1008
      ],
      "op": "MSTORE",
      "path": "33"
    },
    "886": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        954,
        1008
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x0"
    },
    "888": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        954,
        1008
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "889": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        954,
        1008
      ],
      "op": "DUP2",
      "path": "33"
    },
    "890": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        954,
        1008
      ],
      "op": "MSTORE",
      "path": "33"
    },
    "891": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        954,
        1008
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x40"
    },
    "893": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        954,
        1008
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "894": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        954,
        1008
      ],
      "op": "KECCAK256",
      "path": "33"
    },
    "895": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        954,
        1008
      ],
      "op": "SLOAD",
      "path": "33"
    },
    "896": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        954,
        1008
      ],
      "op": "DUP2",
      "path": "33"
    },
    "897": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        954,
        1008
      ],
      "op": "JUMP",
      "path": "33"
    },
    "898": {
      "offset": [
        320,
        344
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "899": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        320,
        344
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x38A"
    },
    "902": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        320,
        344
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x9E1"
    },
    "905": {
      "fn": "CLHouse.GetArrProposalsLength",
      "jump": "i",
      "offset": [
        320,
        344
      ],
      "op": "JUMP",
      "path": "33"
    },
    "906": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        320,
        344
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "907": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x40"
    },
    "909": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        320,
        344
      ],
      "op": "MLOAD",
      "path": "33"
    },
    "910": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        320,
        344
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x254"
    },
    "913": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        320,
        344
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "914": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        320,
        344
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "915": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        320,
        344
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x1A15"
    },
    "918": {
      "fn": "CLHouse.GetArrProposalsLength",
      "jump": "i",
      "offset": [
        320,
        344
      ],
      "op": "JUMP",
      "path": "33"
    },
    "919": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15413,
        15537
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "920": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15413,
        15537
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x39F"
    },
    "923": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15413,
        15537
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xA6F"
    },
    "926": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "jump": "i",
      "offset": [
        15413,
        15537
      ],
      "op": "JUMP",
      "path": "29"
    },
    "927": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15413,
        15537
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "928": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15413,
        15537
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "930": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15413,
        15537
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "931": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15413,
        15537
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x254"
    },
    "934": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15413,
        15537
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "935": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15413,
        15537
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "936": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15413,
        15537
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1A28"
    },
    "939": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "jump": "i",
      "offset": [
        15413,
        15537
      ],
      "op": "JUMP",
      "path": "29"
    },
    "940": {
      "fn": "CLHouse.Init",
      "offset": [
        1065,
        2127
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "941": {
      "fn": "CLHouse.Init",
      "offset": [
        1065,
        2127
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x3BF"
    },
    "944": {
      "fn": "CLHouse.Init",
      "offset": [
        1065,
        2127
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x3BA"
    },
    "947": {
      "fn": "CLHouse.Init",
      "offset": [
        1065,
        2127
      ],
      "op": "CALLDATASIZE",
      "path": "29"
    },
    "948": {
      "fn": "CLHouse.Init",
      "offset": [
        1065,
        2127
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "950": {
      "fn": "CLHouse.Init",
      "offset": [
        1065,
        2127
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1BC1"
    },
    "953": {
      "fn": "CLHouse.Init",
      "jump": "i",
      "offset": [
        1065,
        2127
      ],
      "op": "JUMP",
      "path": "29"
    },
    "954": {
      "fn": "CLHouse.Init",
      "offset": [
        1065,
        2127
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "955": {
      "fn": "CLHouse.Init",
      "offset": [
        1065,
        2127
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xB88"
    },
    "958": {
      "fn": "CLHouse.Init",
      "jump": "i",
      "offset": [
        1065,
        2127
      ],
      "op": "JUMP",
      "path": "29"
    },
    "959": {
      "fn": "CLHouse.Init",
      "offset": [
        1065,
        2127
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "960": {
      "fn": "CLHouse.Init",
      "offset": [
        1065,
        2127
      ],
      "op": "STOP",
      "path": "29"
    },
    "961": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2482,
        3183
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "962": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2482,
        3183
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x3D4"
    },
    "965": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2482,
        3183
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x3CF"
    },
    "968": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2482,
        3183
      ],
      "op": "CALLDATASIZE",
      "path": "29"
    },
    "969": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2482,
        3183
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "971": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2482,
        3183
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x17FD"
    },
    "974": {
      "fn": "CLHouse.ExecProp",
      "jump": "i",
      "offset": [
        2482,
        3183
      ],
      "op": "JUMP",
      "path": "29"
    },
    "975": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2482,
        3183
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "976": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2482,
        3183
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xD3C"
    },
    "979": {
      "fn": "CLHouse.ExecProp",
      "jump": "i",
      "offset": [
        2482,
        3183
      ],
      "op": "JUMP",
      "path": "29"
    },
    "980": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2482,
        3183
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "981": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2482,
        3183
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "983": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2482,
        3183
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "984": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2482,
        3183
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x254"
    },
    "987": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2482,
        3183
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "988": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2482,
        3183
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "989": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2482,
        3183
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "990": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2482,
        3183
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1CB8"
    },
    "993": {
      "fn": "CLHouse.ExecProp",
      "jump": "i",
      "offset": [
        2482,
        3183
      ],
      "op": "JUMP",
      "path": "29"
    },
    "994": {
      "offset": [
        835,
        858
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "995": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        835,
        858
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x6"
    },
    "997": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        835,
        858
      ],
      "op": "SLOAD",
      "path": "33"
    },
    "998": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        835,
        858
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x270"
    },
    "1001": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        835,
        858
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "1002": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1004": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1006": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1008": {
      "op": "SHL"
    },
    "1009": {
      "op": "SUB"
    },
    "1010": {
      "offset": [
        835,
        858
      ],
      "op": "AND",
      "path": "33"
    },
    "1011": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        835,
        858
      ],
      "op": "DUP2",
      "path": "33"
    },
    "1012": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        835,
        858
      ],
      "op": "JUMP",
      "path": "33"
    },
    "1013": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9529,
        10319
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1014": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9529,
        10319
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x24A"
    },
    "1017": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9529,
        10319
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x403"
    },
    "1020": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9529,
        10319
      ],
      "op": "CALLDATASIZE",
      "path": "29"
    },
    "1021": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9529,
        10319
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "1023": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9529,
        10319
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1CDB"
    },
    "1026": {
      "fn": "CLHouse.PropGovRules",
      "jump": "i",
      "offset": [
        9529,
        10319
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1027": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9529,
        10319
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1028": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9529,
        10319
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xE2B"
    },
    "1031": {
      "fn": "CLHouse.PropGovRules",
      "jump": "i",
      "offset": [
        9529,
        10319
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1032": {
      "offset": [
        1034,
        1080
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "1033": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        1034,
        1080
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x24A"
    },
    "1036": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        1034,
        1080
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x416"
    },
    "1039": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        1034,
        1080
      ],
      "op": "CALLDATASIZE",
      "path": "33"
    },
    "1040": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        1034,
        1080
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x4"
    },
    "1042": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        1034,
        1080
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x19F3"
    },
    "1045": {
      "fn": "CLHouse.PropGovRules",
      "jump": "i",
      "offset": [
        1034,
        1080
      ],
      "op": "JUMP",
      "path": "33"
    },
    "1046": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        1034,
        1080
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "1047": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        1034,
        1080
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0xB"
    },
    "1049": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        1034,
        1080
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x20"
    },
    "1051": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        1034,
        1080
      ],
      "op": "MSTORE",
      "path": "33"
    },
    "1052": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        1034,
        1080
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x0"
    },
    "1054": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        1034,
        1080
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "1055": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        1034,
        1080
      ],
      "op": "DUP2",
      "path": "33"
    },
    "1056": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        1034,
        1080
      ],
      "op": "MSTORE",
      "path": "33"
    },
    "1057": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        1034,
        1080
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x40"
    },
    "1059": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        1034,
        1080
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "1060": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        1034,
        1080
      ],
      "op": "KECCAK256",
      "path": "33"
    },
    "1061": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        1034,
        1080
      ],
      "op": "SLOAD",
      "path": "33"
    },
    "1062": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        1034,
        1080
      ],
      "op": "DUP2",
      "path": "33"
    },
    "1063": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        1034,
        1080
      ],
      "op": "JUMP",
      "path": "33"
    },
    "1064": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7103,
        7927
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1065": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7103,
        7927
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x24A"
    },
    "1068": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7103,
        7927
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x436"
    },
    "1071": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7103,
        7927
      ],
      "op": "CALLDATASIZE",
      "path": "29"
    },
    "1072": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7103,
        7927
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "1074": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7103,
        7927
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1730"
    },
    "1077": {
      "fn": "CLHouse.PropTxWei",
      "jump": "i",
      "offset": [
        7103,
        7927
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1078": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7103,
        7927
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1079": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7103,
        7927
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xEEA"
    },
    "1082": {
      "fn": "CLHouse.PropTxWei",
      "jump": "i",
      "offset": [
        7103,
        7927
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1083": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11529,
        12192
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1084": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11529,
        12192
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x3BF"
    },
    "1087": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11529,
        12192
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x449"
    },
    "1090": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11529,
        12192
      ],
      "op": "CALLDATASIZE",
      "path": "29"
    },
    "1091": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11529,
        12192
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "1093": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11529,
        12192
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1D31"
    },
    "1096": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "jump": "i",
      "offset": [
        11529,
        12192
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1097": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11529,
        12192
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1098": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11529,
        12192
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xF4A"
    },
    "1101": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "jump": "i",
      "offset": [
        11529,
        12192
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1102": {
      "offset": [
        864,
        886
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "1103": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        864,
        886
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x7"
    },
    "1105": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        864,
        886
      ],
      "op": "SLOAD",
      "path": "33"
    },
    "1106": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        864,
        886
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x270"
    },
    "1109": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        864,
        886
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "1110": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1114": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1116": {
      "op": "SHL"
    },
    "1117": {
      "op": "SUB"
    },
    "1118": {
      "offset": [
        864,
        886
      ],
      "op": "AND",
      "path": "33"
    },
    "1119": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        864,
        886
      ],
      "op": "DUP2",
      "path": "33"
    },
    "1120": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        864,
        886
      ],
      "op": "JUMP",
      "path": "33"
    },
    "1121": {
      "offset": [
        1234,
        1276
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "1122": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x474"
    },
    "1125": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x46F"
    },
    "1128": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "CALLDATASIZE",
      "path": "33"
    },
    "1129": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x4"
    },
    "1131": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x17FD"
    },
    "1134": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "jump": "i",
      "offset": [
        1234,
        1276
      ],
      "op": "JUMP",
      "path": "33"
    },
    "1135": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "1136": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x1007"
    },
    "1139": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "jump": "i",
      "offset": [
        1234,
        1276
      ],
      "op": "JUMP",
      "path": "33"
    },
    "1140": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "1141": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x40"
    },
    "1143": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "MLOAD",
      "path": "33"
    },
    "1144": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x254"
    },
    "1147": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP4",
      "path": "33"
    },
    "1148": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP3",
      "path": "33"
    },
    "1149": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "1150": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "1151": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x1D7E"
    },
    "1154": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "jump": "i",
      "offset": [
        1234,
        1276
      ],
      "op": "JUMP",
      "path": "33"
    },
    "1155": {
      "offset": [
        517,
        553
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "1156": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        517,
        553
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x1"
    },
    "1158": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        517,
        553
      ],
      "op": "SLOAD",
      "path": "33"
    },
    "1159": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        517,
        553
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x29C"
    },
    "1162": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        517,
        553
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "1163": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        517,
        553
      ],
      "op": "PUSH3",
      "path": "33",
      "value": "0x10000"
    },
    "1167": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        517,
        553
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "1168": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        517,
        553
      ],
      "op": "DIV",
      "path": "33"
    },
    "1169": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        517,
        553
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0xFF"
    },
    "1171": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        517,
        553
      ],
      "op": "AND",
      "path": "33"
    },
    "1172": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        517,
        553
      ],
      "op": "DUP2",
      "path": "33"
    },
    "1173": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        517,
        553
      ],
      "op": "JUMP",
      "path": "33"
    },
    "1174": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10619,
        11391
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1175": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10619,
        11391
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x24A"
    },
    "1178": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10619,
        11391
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x4A4"
    },
    "1181": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10619,
        11391
      ],
      "op": "CALLDATASIZE",
      "path": "29"
    },
    "1182": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10619,
        11391
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "1184": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10619,
        11391
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1DB4"
    },
    "1187": {
      "fn": "CLHouse.PropRequestToJoin",
      "jump": "i",
      "offset": [
        10619,
        11391
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1188": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10619,
        11391
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1189": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10619,
        11391
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x10D2"
    },
    "1192": {
      "fn": "CLHouse.PropRequestToJoin",
      "jump": "i",
      "offset": [
        10619,
        11391
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1193": {
      "fn": "CLHouse.GetArrUsersLength",
      "offset": [
        14830,
        14930
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1194": {
      "fn": "CLHouse.GetArrUsersLength",
      "offset": [
        14908,
        14916
      ],
      "op": "PUSH1",
      "path": "29",
      "statement": 1,
      "value": "0x11"
    },
    "1196": {
      "fn": "CLHouse.GetArrUsersLength",
      "offset": [
        14908,
        14923
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "1197": {
      "fn": "CLHouse.GetArrUsersLength",
      "offset": [
        14830,
        14930
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x24A"
    },
    "1200": {
      "fn": "CLHouse.GetArrUsersLength",
      "offset": [
        14830,
        14930
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1201": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15182,
        15291
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1202": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15182,
        15291
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x4B9"
    },
    "1205": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15182,
        15291
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1130"
    },
    "1208": {
      "fn": "CLHouse.GetProposalList",
      "jump": "i",
      "offset": [
        15182,
        15291
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1209": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15182,
        15291
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1210": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15182,
        15291
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "1212": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15182,
        15291
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1213": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15182,
        15291
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x254"
    },
    "1216": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15182,
        15291
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1217": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15182,
        15291
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1218": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15182,
        15291
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1E73"
    },
    "1221": {
      "fn": "CLHouse.GetProposalList",
      "jump": "i",
      "offset": [
        15182,
        15291
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1222": {
      "offset": [
        1282,
        1326
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "1223": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x4D9"
    },
    "1226": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x4D4"
    },
    "1229": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "CALLDATASIZE",
      "path": "33"
    },
    "1230": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x4"
    },
    "1232": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x17FD"
    },
    "1235": {
      "fn": "CLHouse.GetProposalList",
      "jump": "i",
      "offset": [
        1282,
        1326
      ],
      "op": "JUMP",
      "path": "33"
    },
    "1236": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "1237": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x12B5"
    },
    "1240": {
      "fn": "CLHouse.GetProposalList",
      "jump": "i",
      "offset": [
        1282,
        1326
      ],
      "op": "JUMP",
      "path": "33"
    },
    "1241": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "1242": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x40"
    },
    "1244": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "DUP1",
      "path": "33"
    },
    "1245": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "MLOAD",
      "path": "33"
    },
    "1246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1248": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1250": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1252": {
      "op": "SHL"
    },
    "1253": {
      "op": "SUB"
    },
    "1254": {
      "op": "SWAP6"
    },
    "1255": {
      "op": "DUP7"
    },
    "1256": {
      "op": "AND"
    },
    "1257": {
      "op": "DUP2"
    },
    "1258": {
      "op": "MSTORE"
    },
    "1259": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1261": {
      "op": "DUP2"
    },
    "1262": {
      "op": "ADD"
    },
    "1263": {
      "op": "SWAP5"
    },
    "1264": {
      "op": "SWAP1"
    },
    "1265": {
      "op": "SWAP5"
    },
    "1266": {
      "op": "MSTORE"
    },
    "1267": {
      "op": "SWAP2"
    },
    "1268": {
      "op": "DUP5"
    },
    "1269": {
      "op": "AND"
    },
    "1270": {
      "op": "SWAP2"
    },
    "1271": {
      "op": "DUP4"
    },
    "1272": {
      "op": "ADD"
    },
    "1273": {
      "op": "SWAP2"
    },
    "1274": {
      "op": "SWAP1"
    },
    "1275": {
      "op": "SWAP2"
    },
    "1276": {
      "op": "MSTORE"
    },
    "1277": {
      "op": "SWAP1"
    },
    "1278": {
      "op": "SWAP2"
    },
    "1279": {
      "op": "AND"
    },
    "1280": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1282": {
      "op": "DUP3"
    },
    "1283": {
      "op": "ADD"
    },
    "1284": {
      "op": "MSTORE"
    },
    "1285": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1287": {
      "op": "ADD"
    },
    "1288": {
      "offset": [
        1282,
        1326
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x254"
    },
    "1291": {
      "op": "JUMP"
    },
    "1292": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3469,
        4235
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1293": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3469,
        4235
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x3BF"
    },
    "1296": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3469,
        4235
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x51A"
    },
    "1299": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3469,
        4235
      ],
      "op": "CALLDATASIZE",
      "path": "29"
    },
    "1300": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3469,
        4235
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "1302": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3469,
        4235
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1F48"
    },
    "1305": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        3469,
        4235
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1306": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3469,
        4235
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1307": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3469,
        4235
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x12FD"
    },
    "1310": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        3469,
        4235
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1311": {
      "offset": [
        1086,
        1153
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "1312": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x532"
    },
    "1315": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x52D"
    },
    "1318": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "CALLDATASIZE",
      "path": "33"
    },
    "1319": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x4"
    },
    "1321": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x1FAC"
    },
    "1324": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        1086,
        1153
      ],
      "op": "JUMP",
      "path": "33"
    },
    "1325": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "1326": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x13B6"
    },
    "1329": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        1086,
        1153
      ],
      "op": "JUMP",
      "path": "33"
    },
    "1330": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "1331": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x40"
    },
    "1333": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "MLOAD",
      "path": "33"
    },
    "1334": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x254"
    },
    "1337": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP4",
      "path": "33"
    },
    "1338": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP3",
      "path": "33"
    },
    "1339": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "1340": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "1341": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x1FD8"
    },
    "1344": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        1086,
        1153
      ],
      "op": "JUMP",
      "path": "33"
    },
    "1345": {
      "offset": [
        751,
        773
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "1346": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        751,
        773
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x4"
    },
    "1348": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        751,
        773
      ],
      "op": "SLOAD",
      "path": "33"
    },
    "1349": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        751,
        773
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x270"
    },
    "1352": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        751,
        773
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "1353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1357": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1359": {
      "op": "SHL"
    },
    "1360": {
      "op": "SUB"
    },
    "1361": {
      "offset": [
        751,
        773
      ],
      "op": "AND",
      "path": "33"
    },
    "1362": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        751,
        773
      ],
      "op": "DUP2",
      "path": "33"
    },
    "1363": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        751,
        773
      ],
      "op": "JUMP",
      "path": "33"
    },
    "1364": {
      "offset": [
        1195,
        1228
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "1365": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x567"
    },
    "1368": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x562"
    },
    "1371": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "CALLDATASIZE",
      "path": "33"
    },
    "1372": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x4"
    },
    "1374": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x17FD"
    },
    "1377": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        1195,
        1228
      ],
      "op": "JUMP",
      "path": "33"
    },
    "1378": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "1379": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x1473"
    },
    "1382": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        1195,
        1228
      ],
      "op": "JUMP",
      "path": "33"
    },
    "1383": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "1384": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x40"
    },
    "1386": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "MLOAD",
      "path": "33"
    },
    "1387": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x254"
    },
    "1390": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP10",
      "path": "33"
    },
    "1391": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP9",
      "path": "33"
    },
    "1392": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP8",
      "path": "33"
    },
    "1393": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP7",
      "path": "33"
    },
    "1394": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP6",
      "path": "33"
    },
    "1395": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP5",
      "path": "33"
    },
    "1396": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP4",
      "path": "33"
    },
    "1397": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP3",
      "path": "33"
    },
    "1398": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "1399": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "1400": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x2004"
    },
    "1403": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        1195,
        1228
      ],
      "op": "JUMP",
      "path": "33"
    },
    "1404": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8272,
        9168
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1405": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8272,
        9168
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x24A"
    },
    "1408": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8272,
        9168
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x58A"
    },
    "1411": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8272,
        9168
      ],
      "op": "CALLDATASIZE",
      "path": "29"
    },
    "1412": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8272,
        9168
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "1414": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8272,
        9168
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x206C"
    },
    "1417": {
      "fn": "CLHouse.PropTxERC20",
      "jump": "i",
      "offset": [
        8272,
        9168
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1418": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8272,
        9168
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1419": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8272,
        9168
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1572"
    },
    "1422": {
      "fn": "CLHouse.PropTxERC20",
      "jump": "i",
      "offset": [
        8272,
        9168
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1423": {
      "offset": [
        487,
        511
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "1424": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        487,
        511
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x1"
    },
    "1426": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        487,
        511
      ],
      "op": "SLOAD",
      "path": "33"
    },
    "1427": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        487,
        511
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x29C"
    },
    "1430": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        487,
        511
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "1431": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        487,
        511
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x100"
    },
    "1434": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        487,
        511
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "1435": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        487,
        511
      ],
      "op": "DIV",
      "path": "33"
    },
    "1436": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        487,
        511
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0xFF"
    },
    "1438": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        487,
        511
      ],
      "op": "AND",
      "path": "33"
    },
    "1439": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        487,
        511
      ],
      "op": "DUP2",
      "path": "33"
    },
    "1440": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        487,
        511
      ],
      "op": "JUMP",
      "path": "33"
    },
    "1441": {
      "offset": [
        593,
        624
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "1442": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        593,
        624
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x1"
    },
    "1444": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        593,
        624
      ],
      "op": "SLOAD",
      "path": "33"
    },
    "1445": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        593,
        624
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x29C"
    },
    "1448": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        593,
        624
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "1449": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        593,
        624
      ],
      "op": "PUSH5",
      "path": "33",
      "value": "0x100000000"
    },
    "1455": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        593,
        624
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "1456": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        593,
        624
      ],
      "op": "DIV",
      "path": "33"
    },
    "1457": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        593,
        624
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0xFF"
    },
    "1459": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        593,
        624
      ],
      "op": "AND",
      "path": "33"
    },
    "1460": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        593,
        624
      ],
      "op": "DUP2",
      "path": "33"
    },
    "1461": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        593,
        624
      ],
      "op": "JUMP",
      "path": "33"
    },
    "1462": {
      "offset": [
        643,
        667
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "1463": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        643,
        667
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x1"
    },
    "1465": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        643,
        667
      ],
      "op": "SLOAD",
      "path": "33"
    },
    "1466": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        643,
        667
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x5CC"
    },
    "1469": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        643,
        667
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "1470": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        643,
        667
      ],
      "op": "PUSH6",
      "path": "33",
      "value": "0x10000000000"
    },
    "1477": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        643,
        667
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "1478": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        643,
        667
      ],
      "op": "DIV",
      "path": "33"
    },
    "1479": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        643,
        667
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0xFF"
    },
    "1481": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        643,
        667
      ],
      "op": "AND",
      "path": "33"
    },
    "1482": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        643,
        667
      ],
      "op": "DUP2",
      "path": "33"
    },
    "1483": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        643,
        667
      ],
      "op": "JUMP",
      "path": "33"
    },
    "1484": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        643,
        667
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "1485": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        643,
        667
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x40"
    },
    "1487": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        643,
        667
      ],
      "op": "MLOAD",
      "path": "33"
    },
    "1488": {
      "op": "SWAP1"
    },
    "1489": {
      "op": "ISZERO"
    },
    "1490": {
      "op": "ISZERO"
    },
    "1491": {
      "op": "DUP2"
    },
    "1492": {
      "op": "MSTORE"
    },
    "1493": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1495": {
      "op": "ADD"
    },
    "1496": {
      "offset": [
        643,
        667
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x254"
    },
    "1499": {
      "op": "JUMP"
    },
    "1500": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13110,
        13950
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1501": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13418
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x2"
    },
    "1503": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13418
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "1504": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13445,
        13667
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "1506": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13445,
        13667
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1507": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13298,
        13305
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1509": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13298,
        13305
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1510": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13298,
        13305
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1511": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13298,
        13305
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1512": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1516": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1518": {
      "op": "SHL"
    },
    "1519": {
      "op": "SUB"
    },
    "1520": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13418
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1521": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13418
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1522": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13418
      ],
      "op": "AND",
      "path": "29"
    },
    "1523": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13418
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1524": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13445,
        13667
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x607"
    },
    "1527": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13445,
        13667
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1528": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13552,
        13564
      ],
      "op": "DUP9",
      "path": "29"
    },
    "1529": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13552,
        13564
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1530": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13582,
        13595
      ],
      "op": "DUP9",
      "path": "29"
    },
    "1531": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13582,
        13595
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1532": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13613,
        13625
      ],
      "op": "DUP9",
      "path": "29"
    },
    "1533": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13613,
        13625
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1534": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13643,
        13653
      ],
      "op": "DUP9",
      "path": "29"
    },
    "1535": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13643,
        13653
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1536": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13445,
        13667
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x24"
    },
    "1538": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13445,
        13667
      ],
      "op": "ADD",
      "path": "29"
    },
    "1539": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13445,
        13667
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x20BD"
    },
    "1542": {
      "fn": "CLHouse.PropSellERC20",
      "jump": "i",
      "offset": [
        13445,
        13667
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1543": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13445,
        13667
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1544": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13445,
        13667
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "1546": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13445,
        13667
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1547": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13445,
        13667
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1548": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1550": {
      "op": "NOT"
    },
    "1551": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13445,
        13667
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1552": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13445,
        13667
      ],
      "op": "DUP5",
      "path": "29"
    },
    "1553": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13445,
        13667
      ],
      "op": "SUB",
      "path": "29"
    },
    "1554": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13445,
        13667
      ],
      "op": "ADD",
      "path": "29"
    },
    "1555": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13445,
        13667
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1556": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13445,
        13667
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1557": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13445,
        13667
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1558": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13445,
        13667
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1559": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13445,
        13667
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1560": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13445,
        13667
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "1562": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13445,
        13667
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1563": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13445,
        13667
      ],
      "op": "ADD",
      "path": "29"
    },
    "1564": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13445,
        13667
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1565": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13445,
        13667
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1570": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1572": {
      "op": "SHL"
    },
    "1573": {
      "op": "SUB"
    },
    "1574": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13445,
        13667
      ],
      "op": "AND",
      "path": "29"
    },
    "1575": {
      "op": "PUSH4",
      "value": "0x4F17A9B"
    },
    "1580": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1582": {
      "op": "SHL"
    },
    "1583": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13445,
        13667
      ],
      "op": "OR",
      "path": "29"
    },
    "1584": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13445,
        13667
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1585": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13445,
        13667
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1586": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13677
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1587": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13677
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x63C"
    },
    "1590": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13677
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1591": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13445,
        13667
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1592": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13677
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x20F5"
    },
    "1595": {
      "fn": "CLHouse.PropSellERC20",
      "jump": "i",
      "offset": [
        13405,
        13677
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1596": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13677
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1597": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13677
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1599": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13677
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "1601": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13677
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1602": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13677
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1603": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13677
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1604": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13677
      ],
      "op": "SUB",
      "path": "29"
    },
    "1605": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13677
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1606": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13677
      ],
      "op": "DUP6",
      "path": "29"
    },
    "1607": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13677
      ],
      "op": "GAS",
      "path": "29"
    },
    "1608": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13677
      ],
      "op": "DELEGATECALL",
      "path": "29"
    },
    "1609": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13677
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1610": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13677
      ],
      "op": "POP",
      "path": "29"
    },
    "1611": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13677
      ],
      "op": "POP",
      "path": "29"
    },
    "1612": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13677
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "1613": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13677
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1614": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13677
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1616": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13677
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1617": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13677
      ],
      "op": "EQ",
      "path": "29"
    },
    "1618": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13677
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x677"
    },
    "1621": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13677
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "1622": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13677
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "1624": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13677
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1625": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13677
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1626": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13677
      ],
      "op": "POP",
      "path": "29"
    },
    "1627": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13677
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1F"
    },
    "1629": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13677
      ],
      "op": "NOT",
      "path": "29"
    },
    "1630": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13677
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x3F"
    },
    "1632": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13677
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "1633": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13677
      ],
      "op": "ADD",
      "path": "29"
    },
    "1634": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13677
      ],
      "op": "AND",
      "path": "29"
    },
    "1635": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13677
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1636": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13677
      ],
      "op": "ADD",
      "path": "29"
    },
    "1637": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13677
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "1639": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13677
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1640": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13677
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "1641": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13677
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1642": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13677
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1643": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13677
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "1644": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13677
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1646": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13677
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "1648": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13677
      ],
      "op": "DUP5",
      "path": "29"
    },
    "1649": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13677
      ],
      "op": "ADD",
      "path": "29"
    },
    "1650": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13677
      ],
      "op": "RETURNDATACOPY",
      "path": "29"
    },
    "1651": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13677
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x67C"
    },
    "1654": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13677
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1655": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13677
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1656": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13677
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x60"
    },
    "1658": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13677
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1659": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13677
      ],
      "op": "POP",
      "path": "29"
    },
    "1660": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13677
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1661": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13405,
        13677
      ],
      "op": "POP",
      "path": "29"
    },
    "1662": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13380,
        13677
      ],
      "op": "POP",
      "path": "29"
    },
    "1663": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13380,
        13677
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1664": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13380,
        13677
      ],
      "op": "POP",
      "path": "29"
    },
    "1665": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13728,
        13732
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "1667": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13722,
        13733
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1668": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13758,
        13774
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "1669": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13810,
        13814
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1670": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13807,
        13808
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1672": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13802,
        13805
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1673": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13787,
        13815
      ],
      "op": "RETURNDATACOPY",
      "path": "29"
    },
    "1674": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13839,
        13852
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1675": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13828,
        13904
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x692"
    },
    "1678": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13828,
        13904
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "1679": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13885,
        13889
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1680": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13880,
        13883
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1681": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13873,
        13890
      ],
      "op": "REVERT",
      "path": "29"
    },
    "1682": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13828,
        13904
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1683": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13929,
        13933
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1684": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13924,
        13927
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1685": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13917,
        13934
      ],
      "op": "RETURN",
      "path": "29"
    },
    "1686": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12198,
        13104
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1687": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12522,
        12535
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x2"
    },
    "1689": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12522,
        12535
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "1690": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12562,
        12821
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "1692": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12562,
        12821
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1693": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12415,
        12422
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1695": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12415,
        12422
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1696": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12415,
        12422
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1697": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12415,
        12422
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1702": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1704": {
      "op": "SHL"
    },
    "1705": {
      "op": "SUB"
    },
    "1706": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12522,
        12535
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1707": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12522,
        12535
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1708": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12522,
        12535
      ],
      "op": "AND",
      "path": "29"
    },
    "1709": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12522,
        12535
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1710": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12562,
        12821
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x6C3"
    },
    "1713": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12562,
        12821
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1714": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12677,
        12689
      ],
      "op": "DUP10",
      "path": "29"
    },
    "1715": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12677,
        12689
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1716": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12707,
        12718
      ],
      "op": "DUP10",
      "path": "29"
    },
    "1717": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12707,
        12718
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1718": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12736,
        12749
      ],
      "op": "DUP10",
      "path": "29"
    },
    "1719": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12736,
        12749
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1720": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12767,
        12779
      ],
      "op": "DUP10",
      "path": "29"
    },
    "1721": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12767,
        12779
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1722": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12797,
        12807
      ],
      "op": "DUP10",
      "path": "29"
    },
    "1723": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12797,
        12807
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1724": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12562,
        12821
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x24"
    },
    "1726": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12562,
        12821
      ],
      "op": "ADD",
      "path": "29"
    },
    "1727": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12562,
        12821
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x2111"
    },
    "1730": {
      "fn": "CLHouse.PropSwapERC20",
      "jump": "i",
      "offset": [
        12562,
        12821
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1731": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12562,
        12821
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1732": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12562,
        12821
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "1734": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12562,
        12821
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1735": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12562,
        12821
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1736": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1738": {
      "op": "NOT"
    },
    "1739": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12562,
        12821
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1740": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12562,
        12821
      ],
      "op": "DUP5",
      "path": "29"
    },
    "1741": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12562,
        12821
      ],
      "op": "SUB",
      "path": "29"
    },
    "1742": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12562,
        12821
      ],
      "op": "ADD",
      "path": "29"
    },
    "1743": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12562,
        12821
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1744": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12562,
        12821
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1745": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12562,
        12821
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1746": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12562,
        12821
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1747": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12562,
        12821
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1748": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12562,
        12821
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "1750": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12562,
        12821
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1751": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12562,
        12821
      ],
      "op": "ADD",
      "path": "29"
    },
    "1752": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12562,
        12821
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1753": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12562,
        12821
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1756": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1758": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1760": {
      "op": "SHL"
    },
    "1761": {
      "op": "SUB"
    },
    "1762": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12562,
        12821
      ],
      "op": "AND",
      "path": "29"
    },
    "1763": {
      "op": "PUSH4",
      "value": "0x152DE3B9"
    },
    "1768": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1770": {
      "op": "SHL"
    },
    "1771": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12562,
        12821
      ],
      "op": "OR",
      "path": "29"
    },
    "1772": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12562,
        12821
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1773": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12562,
        12821
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1774": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12522,
        12831
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1775": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12522,
        12831
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x63C"
    },
    "1778": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12522,
        12831
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1779": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12562,
        12821
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1780": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        12522,
        12831
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x20F5"
    },
    "1783": {
      "fn": "CLHouse.PropSwapERC20",
      "jump": "i",
      "offset": [
        12522,
        12831
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1784": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        13956,
        14792
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1785": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14249,
        14262
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x2"
    },
    "1787": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14249,
        14262
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "1788": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14289,
        14509
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "1790": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14289,
        14509
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1791": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14142,
        14149
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1793": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14142,
        14149
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1794": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14142,
        14149
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1795": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14142,
        14149
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1800": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1802": {
      "op": "SHL"
    },
    "1803": {
      "op": "SUB"
    },
    "1804": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14249,
        14262
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1805": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14249,
        14262
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1806": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14249,
        14262
      ],
      "op": "AND",
      "path": "29"
    },
    "1807": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14249,
        14262
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1808": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14289,
        14509
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x723"
    },
    "1811": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14289,
        14509
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1812": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14395,
        14406
      ],
      "op": "DUP9",
      "path": "29"
    },
    "1813": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14395,
        14406
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1814": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14424,
        14437
      ],
      "op": "DUP9",
      "path": "29"
    },
    "1815": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14424,
        14437
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1816": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14455,
        14467
      ],
      "op": "DUP9",
      "path": "29"
    },
    "1817": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14455,
        14467
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1818": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14485,
        14495
      ],
      "op": "DUP9",
      "path": "29"
    },
    "1819": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14485,
        14495
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1820": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14289,
        14509
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x24"
    },
    "1822": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14289,
        14509
      ],
      "op": "ADD",
      "path": "29"
    },
    "1823": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14289,
        14509
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x20BD"
    },
    "1826": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "i",
      "offset": [
        14289,
        14509
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1827": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14289,
        14509
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1828": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14289,
        14509
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "1830": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14289,
        14509
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1831": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14289,
        14509
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1832": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1834": {
      "op": "NOT"
    },
    "1835": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14289,
        14509
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1836": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14289,
        14509
      ],
      "op": "DUP5",
      "path": "29"
    },
    "1837": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14289,
        14509
      ],
      "op": "SUB",
      "path": "29"
    },
    "1838": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14289,
        14509
      ],
      "op": "ADD",
      "path": "29"
    },
    "1839": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14289,
        14509
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1840": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14289,
        14509
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1841": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14289,
        14509
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1842": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14289,
        14509
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1843": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14289,
        14509
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1844": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14289,
        14509
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "1846": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14289,
        14509
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1847": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14289,
        14509
      ],
      "op": "ADD",
      "path": "29"
    },
    "1848": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14289,
        14509
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1849": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14289,
        14509
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1854": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1856": {
      "op": "SHL"
    },
    "1857": {
      "op": "SUB"
    },
    "1858": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14289,
        14509
      ],
      "op": "AND",
      "path": "29"
    },
    "1859": {
      "op": "PUSH4",
      "value": "0x899B86F"
    },
    "1864": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "1866": {
      "op": "SHL"
    },
    "1867": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14289,
        14509
      ],
      "op": "OR",
      "path": "29"
    },
    "1868": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14289,
        14509
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1869": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14289,
        14509
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1870": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14249,
        14519
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1871": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14249,
        14519
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x63C"
    },
    "1874": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14249,
        14519
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1875": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14289,
        14509
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1876": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14249,
        14519
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x20F5"
    },
    "1879": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "i",
      "offset": [
        14249,
        14519
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1880": {
      "offset": [
        1382,
        1407
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "1881": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x11"
    },
    "1883": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP2",
      "path": "33"
    },
    "1884": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP2",
      "path": "33"
    },
    "1885": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SLOAD",
      "path": "33"
    },
    "1886": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP2",
      "path": "33"
    },
    "1887": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "LT",
      "path": "33"
    },
    "1888": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x768"
    },
    "1891": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "JUMPI",
      "path": "33"
    },
    "1892": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x0"
    },
    "1894": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP1",
      "path": "33"
    },
    "1895": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "REVERT",
      "path": "33"
    },
    "1896": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "1897": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x0"
    },
    "1899": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "1900": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP3",
      "path": "33"
    },
    "1901": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "MSTORE",
      "path": "33"
    },
    "1902": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x20"
    },
    "1904": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "1905": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "1906": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "KECCAK256",
      "path": "33"
    },
    "1907": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x4"
    },
    "1909": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "1910": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "1911": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "MUL",
      "path": "33"
    },
    "1912": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "ADD",
      "path": "33"
    },
    "1913": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP1",
      "path": "33"
    },
    "1914": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SLOAD",
      "path": "33"
    },
    "1915": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x1"
    },
    "1917": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP3",
      "path": "33"
    },
    "1918": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "ADD",
      "path": "33"
    },
    "1919": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP1",
      "path": "33"
    },
    "1920": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SLOAD",
      "path": "33"
    },
    "1921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1925": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1927": {
      "op": "SHL"
    },
    "1928": {
      "op": "SUB"
    },
    "1929": {
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "1930": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP3",
      "path": "33"
    },
    "1931": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "AND",
      "path": "33"
    },
    "1932": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP4",
      "path": "33"
    },
    "1933": {
      "op": "POP"
    },
    "1934": {
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "1935": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x797"
    },
    "1938": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "1939": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x2156"
    },
    "1942": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "i",
      "offset": [
        1382,
        1407
      ],
      "op": "JUMP",
      "path": "33"
    },
    "1943": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "1944": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP1",
      "path": "33"
    },
    "1945": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x1F"
    },
    "1947": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "ADD",
      "path": "33"
    },
    "1948": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x20"
    },
    "1950": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP1",
      "path": "33"
    },
    "1951": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "1952": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DIV",
      "path": "33"
    },
    "1953": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "MUL",
      "path": "33"
    },
    "1954": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x20"
    },
    "1956": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "ADD",
      "path": "33"
    },
    "1957": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x40"
    },
    "1959": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "MLOAD",
      "path": "33"
    },
    "1960": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "1961": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP2",
      "path": "33"
    },
    "1962": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "ADD",
      "path": "33"
    },
    "1963": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x40"
    },
    "1965": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "MSTORE",
      "path": "33"
    },
    "1966": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP1",
      "path": "33"
    },
    "1967": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP3",
      "path": "33"
    },
    "1968": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "1969": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "1970": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP2",
      "path": "33"
    },
    "1971": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP2",
      "path": "33"
    },
    "1972": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "MSTORE",
      "path": "33"
    },
    "1973": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x20"
    },
    "1975": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "ADD",
      "path": "33"
    },
    "1976": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP3",
      "path": "33"
    },
    "1977": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP1",
      "path": "33"
    },
    "1978": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SLOAD",
      "path": "33"
    },
    "1979": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x7C3"
    },
    "1982": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "1983": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x2156"
    },
    "1986": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "i",
      "offset": [
        1382,
        1407
      ],
      "op": "JUMP",
      "path": "33"
    },
    "1987": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "1988": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP1",
      "path": "33"
    },
    "1989": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "ISZERO",
      "path": "33"
    },
    "1990": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x810"
    },
    "1993": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "JUMPI",
      "path": "33"
    },
    "1994": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP1",
      "path": "33"
    },
    "1995": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x1F"
    },
    "1997": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "LT",
      "path": "33"
    },
    "1998": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x7E5"
    },
    "2001": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "JUMPI",
      "path": "33"
    },
    "2002": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x100"
    },
    "2005": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP1",
      "path": "33"
    },
    "2006": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP4",
      "path": "33"
    },
    "2007": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SLOAD",
      "path": "33"
    },
    "2008": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DIV",
      "path": "33"
    },
    "2009": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "MUL",
      "path": "33"
    },
    "2010": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP4",
      "path": "33"
    },
    "2011": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "MSTORE",
      "path": "33"
    },
    "2012": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "2013": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x20"
    },
    "2015": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "ADD",
      "path": "33"
    },
    "2016": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "2017": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x810"
    },
    "2020": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "JUMP",
      "path": "33"
    },
    "2021": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "2022": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP3",
      "path": "33"
    },
    "2023": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "ADD",
      "path": "33"
    },
    "2024": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "2025": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "2026": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x0"
    },
    "2028": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "MSTORE",
      "path": "33"
    },
    "2029": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x20"
    },
    "2031": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x0"
    },
    "2033": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "KECCAK256",
      "path": "33"
    },
    "2034": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "2035": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "2036": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP2",
      "path": "33"
    },
    "2037": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SLOAD",
      "path": "33"
    },
    "2038": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP2",
      "path": "33"
    },
    "2039": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "MSTORE",
      "path": "33"
    },
    "2040": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "2041": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x1"
    },
    "2043": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "ADD",
      "path": "33"
    },
    "2044": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "2045": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x20"
    },
    "2047": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "ADD",
      "path": "33"
    },
    "2048": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP1",
      "path": "33"
    },
    "2049": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP4",
      "path": "33"
    },
    "2050": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "GT",
      "path": "33"
    },
    "2051": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x7F3"
    },
    "2054": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "JUMPI",
      "path": "33"
    },
    "2055": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP3",
      "path": "33"
    },
    "2056": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "2057": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SUB",
      "path": "33"
    },
    "2058": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x1F"
    },
    "2060": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "AND",
      "path": "33"
    },
    "2061": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP3",
      "path": "33"
    },
    "2062": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "ADD",
      "path": "33"
    },
    "2063": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "2064": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "2065": {
      "op": "POP"
    },
    "2066": {
      "op": "POP"
    },
    "2067": {
      "op": "POP"
    },
    "2068": {
      "op": "POP"
    },
    "2069": {
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x2"
    },
    "2071": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP4",
      "path": "33"
    },
    "2072": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "ADD",
      "path": "33"
    },
    "2073": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SLOAD",
      "path": "33"
    },
    "2074": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x3"
    },
    "2076": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "2077": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP4",
      "path": "33"
    },
    "2078": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "ADD",
      "path": "33"
    },
    "2079": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SLOAD",
      "path": "33"
    },
    "2080": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "2081": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP3",
      "path": "33"
    },
    "2082": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "2083": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0xFF"
    },
    "2085": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP1",
      "path": "33"
    },
    "2086": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP3",
      "path": "33"
    },
    "2087": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "AND",
      "path": "33"
    },
    "2088": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP3",
      "path": "33"
    },
    "2089": {
      "op": "POP"
    },
    "2090": {
      "offset": [
        1382,
        1407
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x100"
    },
    "2093": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "2094": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "2095": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DIV",
      "path": "33"
    },
    "2096": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "AND",
      "path": "33"
    },
    "2097": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        1382,
        1407
      ],
      "op": "DUP6",
      "path": "33"
    },
    "2098": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "o",
      "offset": [
        1382,
        1407
      ],
      "op": "JUMP",
      "path": "33"
    },
    "2099": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5911,
        6758
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2100": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6228
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x2"
    },
    "2102": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6228
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "2103": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6255,
        6472
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "2105": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6255,
        6472
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "2106": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6101,
        6115
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "2108": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6101,
        6115
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2109": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6101,
        6115
      ],
      "op": "DUP3",
      "path": "29"
    },
    "2110": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6101,
        6115
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2111": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2113": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2115": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2117": {
      "op": "SHL"
    },
    "2118": {
      "op": "SUB"
    },
    "2119": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6228
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2120": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6228
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2121": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6228
      ],
      "op": "AND",
      "path": "29"
    },
    "2122": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6228
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2123": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6255,
        6472
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x85E"
    },
    "2126": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6255,
        6472
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2127": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6361,
        6372
      ],
      "op": "DUP9",
      "path": "29"
    },
    "2128": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6361,
        6372
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2129": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6390,
        6402
      ],
      "op": "DUP9",
      "path": "29"
    },
    "2130": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6390,
        6402
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2131": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6420,
        6430
      ],
      "op": "DUP9",
      "path": "29"
    },
    "2132": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6420,
        6430
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2133": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6448,
        6458
      ],
      "op": "DUP9",
      "path": "29"
    },
    "2134": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6448,
        6458
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2135": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6255,
        6472
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x24"
    },
    "2137": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6255,
        6472
      ],
      "op": "ADD",
      "path": "29"
    },
    "2138": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6255,
        6472
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x2191"
    },
    "2141": {
      "fn": "CLHouse.PropRemoveUser",
      "jump": "i",
      "offset": [
        6255,
        6472
      ],
      "op": "JUMP",
      "path": "29"
    },
    "2142": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6255,
        6472
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2143": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6255,
        6472
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "2145": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6255,
        6472
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2146": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6255,
        6472
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "2147": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2149": {
      "op": "NOT"
    },
    "2150": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6255,
        6472
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2151": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6255,
        6472
      ],
      "op": "DUP5",
      "path": "29"
    },
    "2152": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6255,
        6472
      ],
      "op": "SUB",
      "path": "29"
    },
    "2153": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6255,
        6472
      ],
      "op": "ADD",
      "path": "29"
    },
    "2154": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6255,
        6472
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2155": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6255,
        6472
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2156": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6255,
        6472
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2157": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6255,
        6472
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2158": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6255,
        6472
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2159": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6255,
        6472
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "2161": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6255,
        6472
      ],
      "op": "DUP3",
      "path": "29"
    },
    "2162": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6255,
        6472
      ],
      "op": "ADD",
      "path": "29"
    },
    "2163": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6255,
        6472
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2164": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6255,
        6472
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "2165": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2167": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2169": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2171": {
      "op": "SHL"
    },
    "2172": {
      "op": "SUB"
    },
    "2173": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6255,
        6472
      ],
      "op": "AND",
      "path": "29"
    },
    "2174": {
      "op": "PUSH4",
      "value": "0xA95FBE1"
    },
    "2179": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2181": {
      "op": "SHL"
    },
    "2182": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6255,
        6472
      ],
      "op": "OR",
      "path": "29"
    },
    "2183": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6255,
        6472
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2184": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6255,
        6472
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2185": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6482
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "2186": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6482
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x893"
    },
    "2189": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6482
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2190": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6255,
        6472
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2191": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6482
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x20F5"
    },
    "2194": {
      "fn": "CLHouse.PropRemoveUser",
      "jump": "i",
      "offset": [
        6215,
        6482
      ],
      "op": "JUMP",
      "path": "29"
    },
    "2195": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6482
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2196": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6482
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "2198": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6482
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "2200": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6482
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "2201": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6482
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2202": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6482
      ],
      "op": "DUP4",
      "path": "29"
    },
    "2203": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6482
      ],
      "op": "SUB",
      "path": "29"
    },
    "2204": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6482
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2205": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6482
      ],
      "op": "DUP6",
      "path": "29"
    },
    "2206": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6482
      ],
      "op": "GAS",
      "path": "29"
    },
    "2207": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6482
      ],
      "op": "DELEGATECALL",
      "path": "29"
    },
    "2208": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6482
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2209": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6482
      ],
      "op": "POP",
      "path": "29"
    },
    "2210": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6482
      ],
      "op": "POP",
      "path": "29"
    },
    "2211": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6482
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "2212": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6482
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2213": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6482
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "2215": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6482
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2216": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6482
      ],
      "op": "EQ",
      "path": "29"
    },
    "2217": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6482
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x8CE"
    },
    "2220": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6482
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "2221": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6482
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "2223": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6482
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "2224": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6482
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2225": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6482
      ],
      "op": "POP",
      "path": "29"
    },
    "2226": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6482
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1F"
    },
    "2228": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6482
      ],
      "op": "NOT",
      "path": "29"
    },
    "2229": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6482
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x3F"
    },
    "2231": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6482
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "2232": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6482
      ],
      "op": "ADD",
      "path": "29"
    },
    "2233": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6482
      ],
      "op": "AND",
      "path": "29"
    },
    "2234": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6482
      ],
      "op": "DUP3",
      "path": "29"
    },
    "2235": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6482
      ],
      "op": "ADD",
      "path": "29"
    },
    "2236": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6482
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "2238": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6482
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2239": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6482
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "2240": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6482
      ],
      "op": "DUP3",
      "path": "29"
    },
    "2241": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6482
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2242": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6482
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "2243": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6482
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "2245": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6482
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "2247": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6482
      ],
      "op": "DUP5",
      "path": "29"
    },
    "2248": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6482
      ],
      "op": "ADD",
      "path": "29"
    },
    "2249": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6482
      ],
      "op": "RETURNDATACOPY",
      "path": "29"
    },
    "2250": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6482
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x8D3"
    },
    "2253": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6482
      ],
      "op": "JUMP",
      "path": "29"
    },
    "2254": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6482
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2255": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6482
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x60"
    },
    "2257": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6482
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2258": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6482
      ],
      "op": "POP",
      "path": "29"
    },
    "2259": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6482
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2260": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6215,
        6482
      ],
      "op": "POP",
      "path": "29"
    },
    "2261": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6190,
        6482
      ],
      "op": "POP",
      "path": "29"
    },
    "2262": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6190,
        6482
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2263": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6190,
        6482
      ],
      "op": "POP",
      "path": "29"
    },
    "2264": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6533,
        6537
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "2266": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6527,
        6538
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "2267": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6563,
        6579
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "2268": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6615,
        6619
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2269": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6612,
        6613
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "2271": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6607,
        6610
      ],
      "op": "DUP4",
      "path": "29"
    },
    "2272": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6592,
        6620
      ],
      "op": "RETURNDATACOPY",
      "path": "29"
    },
    "2273": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6644,
        6657
      ],
      "op": "DUP3",
      "path": "29"
    },
    "2274": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6633,
        6709
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x8E9"
    },
    "2277": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6633,
        6709
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "2278": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6690,
        6694
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2279": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6685,
        6688
      ],
      "op": "DUP3",
      "path": "29"
    },
    "2280": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6678,
        6695
      ],
      "op": "REVERT",
      "path": "29"
    },
    "2281": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6633,
        6709
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2282": {
      "op": "POP"
    },
    "2283": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6732,
        6742
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "2284": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6732,
        6742
      ],
      "op": "SWAP7",
      "path": "29"
    },
    "2285": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        5911,
        6758
      ],
      "op": "SWAP6",
      "path": "29"
    },
    "2286": {
      "op": "POP"
    },
    "2287": {
      "op": "POP"
    },
    "2288": {
      "op": "POP"
    },
    "2289": {
      "op": "POP"
    },
    "2290": {
      "op": "POP"
    },
    "2291": {
      "op": "POP"
    },
    "2292": {
      "fn": "CLHouse.PropRemoveUser",
      "jump": "o",
      "offset": [
        5911,
        6758
      ],
      "op": "JUMP",
      "path": "29"
    },
    "2293": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4671,
        5635
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2294": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5042
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x2"
    },
    "2296": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5042
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "2297": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5069,
        5349
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "2299": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5069,
        5349
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "2300": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4915,
        4929
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "2302": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4915,
        4929
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2303": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4915,
        4929
      ],
      "op": "DUP3",
      "path": "29"
    },
    "2304": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4915,
        4929
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2309": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2311": {
      "op": "SHL"
    },
    "2312": {
      "op": "SUB"
    },
    "2313": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5042
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2314": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5042
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2315": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5042
      ],
      "op": "AND",
      "path": "29"
    },
    "2316": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5042
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2317": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5069,
        5349
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x924"
    },
    "2320": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5069,
        5349
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2321": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5187,
        5198
      ],
      "op": "DUP11",
      "path": "29"
    },
    "2322": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5187,
        5198
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2323": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5216,
        5221
      ],
      "op": "DUP11",
      "path": "29"
    },
    "2324": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5216,
        5221
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2325": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5239,
        5251
      ],
      "op": "DUP11",
      "path": "29"
    },
    "2326": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5239,
        5251
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2327": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5269,
        5279
      ],
      "op": "DUP11",
      "path": "29"
    },
    "2328": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5269,
        5279
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2329": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5297,
        5307
      ],
      "op": "DUP11",
      "path": "29"
    },
    "2330": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5297,
        5307
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2331": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5325,
        5335
      ],
      "op": "DUP11",
      "path": "29"
    },
    "2332": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5325,
        5335
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2333": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5069,
        5349
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x24"
    },
    "2335": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5069,
        5349
      ],
      "op": "ADD",
      "path": "29"
    },
    "2336": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5069,
        5349
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x21CD"
    },
    "2339": {
      "fn": "CLHouse.PropInviteUser",
      "jump": "i",
      "offset": [
        5069,
        5349
      ],
      "op": "JUMP",
      "path": "29"
    },
    "2340": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5069,
        5349
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2341": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5069,
        5349
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "2343": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5069,
        5349
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2344": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5069,
        5349
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "2345": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2347": {
      "op": "NOT"
    },
    "2348": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5069,
        5349
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2349": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5069,
        5349
      ],
      "op": "DUP5",
      "path": "29"
    },
    "2350": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5069,
        5349
      ],
      "op": "SUB",
      "path": "29"
    },
    "2351": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5069,
        5349
      ],
      "op": "ADD",
      "path": "29"
    },
    "2352": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5069,
        5349
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2353": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5069,
        5349
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2354": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5069,
        5349
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2355": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5069,
        5349
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2356": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5069,
        5349
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2357": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5069,
        5349
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "2359": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5069,
        5349
      ],
      "op": "DUP3",
      "path": "29"
    },
    "2360": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5069,
        5349
      ],
      "op": "ADD",
      "path": "29"
    },
    "2361": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5069,
        5349
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2362": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5069,
        5349
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "2363": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2365": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2367": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2369": {
      "op": "SHL"
    },
    "2370": {
      "op": "SUB"
    },
    "2371": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5069,
        5349
      ],
      "op": "AND",
      "path": "29"
    },
    "2372": {
      "op": "PUSH4",
      "value": "0x31A0AFA7"
    },
    "2377": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2379": {
      "op": "SHL"
    },
    "2380": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5069,
        5349
      ],
      "op": "OR",
      "path": "29"
    },
    "2381": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5069,
        5349
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2382": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5069,
        5349
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2383": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5359
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "2384": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5359
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x959"
    },
    "2387": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5359
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2388": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5069,
        5349
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2389": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5359
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x20F5"
    },
    "2392": {
      "fn": "CLHouse.PropInviteUser",
      "jump": "i",
      "offset": [
        5029,
        5359
      ],
      "op": "JUMP",
      "path": "29"
    },
    "2393": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5359
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2394": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5359
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "2396": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5359
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "2398": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5359
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "2399": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5359
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2400": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5359
      ],
      "op": "DUP4",
      "path": "29"
    },
    "2401": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5359
      ],
      "op": "SUB",
      "path": "29"
    },
    "2402": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5359
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2403": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5359
      ],
      "op": "DUP6",
      "path": "29"
    },
    "2404": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5359
      ],
      "op": "GAS",
      "path": "29"
    },
    "2405": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5359
      ],
      "op": "DELEGATECALL",
      "path": "29"
    },
    "2406": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5359
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2407": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5359
      ],
      "op": "POP",
      "path": "29"
    },
    "2408": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5359
      ],
      "op": "POP",
      "path": "29"
    },
    "2409": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5359
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "2410": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5359
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2411": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5359
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "2413": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5359
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2414": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5359
      ],
      "op": "EQ",
      "path": "29"
    },
    "2415": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5359
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x994"
    },
    "2418": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5359
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "2419": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5359
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "2421": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5359
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "2422": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5359
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2423": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5359
      ],
      "op": "POP",
      "path": "29"
    },
    "2424": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5359
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1F"
    },
    "2426": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5359
      ],
      "op": "NOT",
      "path": "29"
    },
    "2427": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5359
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x3F"
    },
    "2429": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5359
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "2430": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5359
      ],
      "op": "ADD",
      "path": "29"
    },
    "2431": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5359
      ],
      "op": "AND",
      "path": "29"
    },
    "2432": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5359
      ],
      "op": "DUP3",
      "path": "29"
    },
    "2433": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5359
      ],
      "op": "ADD",
      "path": "29"
    },
    "2434": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5359
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "2436": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5359
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2437": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5359
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "2438": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5359
      ],
      "op": "DUP3",
      "path": "29"
    },
    "2439": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5359
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2440": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5359
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "2441": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5359
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "2443": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5359
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "2445": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5359
      ],
      "op": "DUP5",
      "path": "29"
    },
    "2446": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5359
      ],
      "op": "ADD",
      "path": "29"
    },
    "2447": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5359
      ],
      "op": "RETURNDATACOPY",
      "path": "29"
    },
    "2448": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5359
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x999"
    },
    "2451": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5359
      ],
      "op": "JUMP",
      "path": "29"
    },
    "2452": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5359
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2453": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5359
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x60"
    },
    "2455": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5359
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2456": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5359
      ],
      "op": "POP",
      "path": "29"
    },
    "2457": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5359
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2458": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5029,
        5359
      ],
      "op": "POP",
      "path": "29"
    },
    "2459": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5004,
        5359
      ],
      "op": "POP",
      "path": "29"
    },
    "2460": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5004,
        5359
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2461": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5004,
        5359
      ],
      "op": "POP",
      "path": "29"
    },
    "2462": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5410,
        5414
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "2464": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5404,
        5415
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "2465": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5440,
        5456
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "2466": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5492,
        5496
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2467": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5489,
        5490
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "2469": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5484,
        5487
      ],
      "op": "DUP4",
      "path": "29"
    },
    "2470": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5469,
        5497
      ],
      "op": "RETURNDATACOPY",
      "path": "29"
    },
    "2471": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5521,
        5534
      ],
      "op": "DUP3",
      "path": "29"
    },
    "2472": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5510,
        5586
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x9AF"
    },
    "2475": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5510,
        5586
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "2476": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5567,
        5571
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2477": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5562,
        5565
      ],
      "op": "DUP3",
      "path": "29"
    },
    "2478": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5555,
        5572
      ],
      "op": "REVERT",
      "path": "29"
    },
    "2479": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5510,
        5586
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2480": {
      "op": "POP"
    },
    "2481": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5609,
        5619
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "2482": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5609,
        5619
      ],
      "op": "SWAP9",
      "path": "29"
    },
    "2483": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4671,
        5635
      ],
      "op": "SWAP8",
      "path": "29"
    },
    "2484": {
      "op": "POP"
    },
    "2485": {
      "op": "POP"
    },
    "2486": {
      "op": "POP"
    },
    "2487": {
      "op": "POP"
    },
    "2488": {
      "op": "POP"
    },
    "2489": {
      "op": "POP"
    },
    "2490": {
      "op": "POP"
    },
    "2491": {
      "op": "POP"
    },
    "2492": {
      "fn": "CLHouse.PropInviteUser",
      "jump": "o",
      "offset": [
        4671,
        5635
      ],
      "op": "JUMP",
      "path": "29"
    },
    "2493": {
      "offset": [
        1332,
        1376
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "2494": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x10"
    },
    "2496": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "DUP2",
      "path": "33"
    },
    "2497": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "DUP2",
      "path": "33"
    },
    "2498": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "SLOAD",
      "path": "33"
    },
    "2499": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "DUP2",
      "path": "33"
    },
    "2500": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "LT",
      "path": "33"
    },
    "2501": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x9CD"
    },
    "2504": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "JUMPI",
      "path": "33"
    },
    "2505": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x0"
    },
    "2507": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "DUP1",
      "path": "33"
    },
    "2508": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "REVERT",
      "path": "33"
    },
    "2509": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "2510": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x0"
    },
    "2512": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "2513": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "DUP3",
      "path": "33"
    },
    "2514": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "MSTORE",
      "path": "33"
    },
    "2515": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x20"
    },
    "2517": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "2518": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "2519": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "KECCAK256",
      "path": "33"
    },
    "2520": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "ADD",
      "path": "33"
    },
    "2521": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "SLOAD",
      "path": "33"
    },
    "2522": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0xFF"
    },
    "2524": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "AND",
      "path": "33"
    },
    "2525": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1332,
        1376
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "2526": {
      "op": "POP"
    },
    "2527": {
      "offset": [
        1332,
        1376
      ],
      "op": "DUP2",
      "path": "33"
    },
    "2528": {
      "fn": "CLHouse.PropInviteUser",
      "jump": "o",
      "offset": [
        1332,
        1376
      ],
      "op": "JUMP",
      "path": "33"
    },
    "2529": {
      "offset": [
        320,
        344
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "2530": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x0"
    },
    "2532": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "DUP1",
      "path": "33"
    },
    "2533": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "SLOAD",
      "path": "33"
    },
    "2534": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x9EE"
    },
    "2537": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "2538": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x2156"
    },
    "2541": {
      "fn": "CLHouse.PropInviteUser",
      "jump": "i",
      "offset": [
        320,
        344
      ],
      "op": "JUMP",
      "path": "33"
    },
    "2542": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "2543": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "DUP1",
      "path": "33"
    },
    "2544": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x1F"
    },
    "2546": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "ADD",
      "path": "33"
    },
    "2547": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x20"
    },
    "2549": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "DUP1",
      "path": "33"
    },
    "2550": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "2551": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "DIV",
      "path": "33"
    },
    "2552": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "MUL",
      "path": "33"
    },
    "2553": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x20"
    },
    "2555": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "ADD",
      "path": "33"
    },
    "2556": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x40"
    },
    "2558": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "MLOAD",
      "path": "33"
    },
    "2559": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "2560": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "DUP2",
      "path": "33"
    },
    "2561": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "ADD",
      "path": "33"
    },
    "2562": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x40"
    },
    "2564": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "MSTORE",
      "path": "33"
    },
    "2565": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "DUP1",
      "path": "33"
    },
    "2566": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "SWAP3",
      "path": "33"
    },
    "2567": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "2568": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "2569": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "DUP2",
      "path": "33"
    },
    "2570": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "DUP2",
      "path": "33"
    },
    "2571": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "MSTORE",
      "path": "33"
    },
    "2572": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x20"
    },
    "2574": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "ADD",
      "path": "33"
    },
    "2575": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "DUP3",
      "path": "33"
    },
    "2576": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "DUP1",
      "path": "33"
    },
    "2577": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "SLOAD",
      "path": "33"
    },
    "2578": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0xA1A"
    },
    "2581": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "2582": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x2156"
    },
    "2585": {
      "fn": "CLHouse.PropInviteUser",
      "jump": "i",
      "offset": [
        320,
        344
      ],
      "op": "JUMP",
      "path": "33"
    },
    "2586": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "2587": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "DUP1",
      "path": "33"
    },
    "2588": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "ISZERO",
      "path": "33"
    },
    "2589": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0xA67"
    },
    "2592": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "JUMPI",
      "path": "33"
    },
    "2593": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "DUP1",
      "path": "33"
    },
    "2594": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x1F"
    },
    "2596": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "LT",
      "path": "33"
    },
    "2597": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0xA3C"
    },
    "2600": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "JUMPI",
      "path": "33"
    },
    "2601": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x100"
    },
    "2604": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "DUP1",
      "path": "33"
    },
    "2605": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "DUP4",
      "path": "33"
    },
    "2606": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "SLOAD",
      "path": "33"
    },
    "2607": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "DIV",
      "path": "33"
    },
    "2608": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "MUL",
      "path": "33"
    },
    "2609": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "DUP4",
      "path": "33"
    },
    "2610": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "MSTORE",
      "path": "33"
    },
    "2611": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "2612": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x20"
    },
    "2614": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "ADD",
      "path": "33"
    },
    "2615": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "2616": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0xA67"
    },
    "2619": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "JUMP",
      "path": "33"
    },
    "2620": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "2621": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "DUP3",
      "path": "33"
    },
    "2622": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "ADD",
      "path": "33"
    },
    "2623": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "2624": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "2625": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x0"
    },
    "2627": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "MSTORE",
      "path": "33"
    },
    "2628": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x20"
    },
    "2630": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x0"
    },
    "2632": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "KECCAK256",
      "path": "33"
    },
    "2633": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "2634": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "2635": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "DUP2",
      "path": "33"
    },
    "2636": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "SLOAD",
      "path": "33"
    },
    "2637": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "DUP2",
      "path": "33"
    },
    "2638": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "MSTORE",
      "path": "33"
    },
    "2639": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "2640": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x1"
    },
    "2642": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "ADD",
      "path": "33"
    },
    "2643": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "2644": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x20"
    },
    "2646": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "ADD",
      "path": "33"
    },
    "2647": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "DUP1",
      "path": "33"
    },
    "2648": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "DUP4",
      "path": "33"
    },
    "2649": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "GT",
      "path": "33"
    },
    "2650": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0xA4A"
    },
    "2653": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "JUMPI",
      "path": "33"
    },
    "2654": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "DUP3",
      "path": "33"
    },
    "2655": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "2656": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "SUB",
      "path": "33"
    },
    "2657": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x1F"
    },
    "2659": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "AND",
      "path": "33"
    },
    "2660": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "DUP3",
      "path": "33"
    },
    "2661": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "ADD",
      "path": "33"
    },
    "2662": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "2663": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "2664": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "POP",
      "path": "33"
    },
    "2665": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "POP",
      "path": "33"
    },
    "2666": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "POP",
      "path": "33"
    },
    "2667": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "POP",
      "path": "33"
    },
    "2668": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "POP",
      "path": "33"
    },
    "2669": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        320,
        344
      ],
      "op": "DUP2",
      "path": "33"
    },
    "2670": {
      "fn": "CLHouse.PropInviteUser",
      "jump": "o",
      "offset": [
        320,
        344
      ],
      "op": "JUMP",
      "path": "33"
    },
    "2671": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15413,
        15537
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2672": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15469,
        15492
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x60"
    },
    "2674": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15512,
        15530
      ],
      "op": "PUSH1",
      "path": "29",
      "statement": 2,
      "value": "0xE"
    },
    "2676": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2677": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "2678": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2679": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "2681": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "MUL",
      "path": "29"
    },
    "2682": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "2684": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "ADD",
      "path": "29"
    },
    "2685": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "2687": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "2688": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2689": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2690": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "ADD",
      "path": "29"
    },
    "2691": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "2693": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2694": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2695": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "2696": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2697": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2698": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2699": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2700": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2701": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "2703": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "ADD",
      "path": "29"
    },
    "2704": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "2706": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2707": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2708": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "DUP3",
      "path": "29"
    },
    "2709": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "DUP3",
      "path": "29"
    },
    "2710": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "LT",
      "path": "29"
    },
    "2711": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "2712": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xB7F"
    },
    "2715": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "2716": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "2718": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "DUP5",
      "path": "29"
    },
    "2719": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2720": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2721": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "2723": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2724": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2725": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2726": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "2727": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "2729": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2730": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "2731": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x60"
    },
    "2733": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2734": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "ADD",
      "path": "29"
    },
    "2735": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2736": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2737": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2738": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x3"
    },
    "2740": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "DUP6",
      "path": "29"
    },
    "2741": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "MUL",
      "path": "29"
    },
    "2742": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2743": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2744": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "ADD",
      "path": "29"
    },
    "2745": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2746": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "2747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2751": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2753": {
      "op": "SHL"
    },
    "2754": {
      "op": "SUB"
    },
    "2755": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "AND",
      "path": "29"
    },
    "2756": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "DUP3",
      "path": "29"
    },
    "2757": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2758": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1"
    },
    "2760": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2761": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "ADD",
      "path": "29"
    },
    "2762": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2763": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "2764": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "2765": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "SWAP4",
      "path": "29"
    },
    "2766": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2767": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "2768": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2769": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "DUP5",
      "path": "29"
    },
    "2770": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "ADD",
      "path": "29"
    },
    "2771": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2772": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xADC"
    },
    "2775": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2776": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x2156"
    },
    "2779": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "jump": "i",
      "offset": [
        15505,
        15530
      ],
      "op": "JUMP",
      "path": "29"
    },
    "2780": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2781": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2782": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1F"
    },
    "2784": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "ADD",
      "path": "29"
    },
    "2785": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "2787": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2788": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2789": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "DIV",
      "path": "29"
    },
    "2790": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "MUL",
      "path": "29"
    },
    "2791": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "2793": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "ADD",
      "path": "29"
    },
    "2794": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "2796": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "2797": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2798": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2799": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "ADD",
      "path": "29"
    },
    "2800": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "2802": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2803": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2804": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "2805": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2806": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2807": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2808": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2809": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2810": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "2812": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "ADD",
      "path": "29"
    },
    "2813": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "DUP3",
      "path": "29"
    },
    "2814": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2815": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "2816": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xB08"
    },
    "2819": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2820": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x2156"
    },
    "2823": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "jump": "i",
      "offset": [
        15505,
        15530
      ],
      "op": "JUMP",
      "path": "29"
    },
    "2824": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2825": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2826": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "2827": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xB55"
    },
    "2830": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "2831": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2832": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1F"
    },
    "2834": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "LT",
      "path": "29"
    },
    "2835": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xB2A"
    },
    "2838": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "2839": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x100"
    },
    "2842": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2843": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "DUP4",
      "path": "29"
    },
    "2844": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "2845": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "DIV",
      "path": "29"
    },
    "2846": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "MUL",
      "path": "29"
    },
    "2847": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "DUP4",
      "path": "29"
    },
    "2848": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2849": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2850": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "2852": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "ADD",
      "path": "29"
    },
    "2853": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2854": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xB55"
    },
    "2857": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "JUMP",
      "path": "29"
    },
    "2858": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2859": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "DUP3",
      "path": "29"
    },
    "2860": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "ADD",
      "path": "29"
    },
    "2861": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2862": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2863": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "2865": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2866": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "2868": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "2870": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "2871": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2872": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2873": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2874": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "2875": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2876": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2877": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2878": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1"
    },
    "2880": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "ADD",
      "path": "29"
    },
    "2881": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2882": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "2884": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "ADD",
      "path": "29"
    },
    "2885": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2886": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "DUP4",
      "path": "29"
    },
    "2887": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "GT",
      "path": "29"
    },
    "2888": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xB38"
    },
    "2891": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "2892": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "DUP3",
      "path": "29"
    },
    "2893": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2894": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "SUB",
      "path": "29"
    },
    "2895": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1F"
    },
    "2897": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "AND",
      "path": "29"
    },
    "2898": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "DUP3",
      "path": "29"
    },
    "2899": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "ADD",
      "path": "29"
    },
    "2900": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2901": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2902": {
      "op": "POP"
    },
    "2903": {
      "op": "POP"
    },
    "2904": {
      "op": "POP"
    },
    "2905": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2906": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "DUP4",
      "path": "29"
    },
    "2907": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2908": {
      "op": "POP"
    },
    "2909": {
      "op": "POP"
    },
    "2910": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x2"
    },
    "2912": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2913": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2914": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2915": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "ADD",
      "path": "29"
    },
    "2916": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "2917": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0xFF"
    },
    "2919": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "AND",
      "path": "29"
    },
    "2920": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "2921": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "2922": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "2924": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2925": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "DUP3",
      "path": "29"
    },
    "2926": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "ADD",
      "path": "29"
    },
    "2927": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2928": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2929": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "DUP3",
      "path": "29"
    },
    "2930": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2931": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1"
    },
    "2933": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "2934": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2935": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "2936": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "ADD",
      "path": "29"
    },
    "2937": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2938": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "ADD",
      "path": "29"
    },
    "2939": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xA93"
    },
    "2942": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "JUMP",
      "path": "29"
    },
    "2943": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2944": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "POP",
      "path": "29"
    },
    "2945": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "POP",
      "path": "29"
    },
    "2946": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "POP",
      "path": "29"
    },
    "2947": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "POP",
      "path": "29"
    },
    "2948": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2949": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15505,
        15530
      ],
      "op": "POP",
      "path": "29"
    },
    "2950": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "offset": [
        15413,
        15537
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2951": {
      "fn": "CLHouse.GetArrDataPropAddUser",
      "jump": "o",
      "offset": [
        15413,
        15537
      ],
      "op": "JUMP",
      "path": "29"
    },
    "2952": {
      "fn": "CLHouse.Init",
      "offset": [
        1065,
        2127
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2953": {
      "offset": [
        4396,
        4409
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x12"
    },
    "2955": {
      "fn": "CLHouse.Init",
      "offset": [
        4396,
        4409
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2956": {
      "offset": [
        161,
        162
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x1"
    },
    "2958": {
      "fn": "CLHouse.Init",
      "offset": [
        161,
        162
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "2959": {
      "offset": [
        4396,
        4409
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x100"
    },
    "2962": {
      "fn": "CLHouse.Init",
      "offset": [
        4396,
        4409
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2963": {
      "fn": "CLHouse.Init",
      "offset": [
        4396,
        4409
      ],
      "op": "DIV",
      "path": "10"
    },
    "2964": {
      "fn": "CLHouse.Init",
      "offset": [
        4396,
        4409
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xFF"
    },
    "2966": {
      "branch": 13,
      "fn": "CLHouse.Init",
      "offset": [
        4396,
        4409
      ],
      "op": "AND",
      "path": "10"
    },
    "2967": {
      "offset": [
        4395,
        4409
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2968": {
      "offset": [
        4395,
        4435
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2969": {
      "fn": "CLHouse.Init",
      "offset": [
        4395,
        4435
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2970": {
      "fn": "CLHouse.Init",
      "offset": [
        4395,
        4435
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xBAA"
    },
    "2973": {
      "branch": 13,
      "offset": [
        4395,
        4435
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2974": {
      "op": "POP"
    },
    "2975": {
      "offset": [
        4413,
        4425
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x12"
    },
    "2977": {
      "fn": "CLHouse.Init",
      "offset": [
        4413,
        4425
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2978": {
      "offset": [
        4413,
        4435
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xFF"
    },
    "2980": {
      "fn": "CLHouse.Init",
      "offset": [
        4413,
        4435
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2981": {
      "fn": "CLHouse.Init",
      "offset": [
        4413,
        4435
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2982": {
      "fn": "CLHouse.Init",
      "offset": [
        4413,
        4435
      ],
      "op": "AND",
      "path": "10"
    },
    "2983": {
      "offset": [
        4413,
        4425
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2984": {
      "fn": "CLHouse.Init",
      "offset": [
        4413,
        4425
      ],
      "op": "AND",
      "path": "10"
    },
    "2985": {
      "offset": [
        4413,
        4435
      ],
      "op": "LT",
      "path": "10"
    },
    "2986": {
      "offset": [
        4395,
        4435
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2987": {
      "offset": [
        4387,
        4486
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC11"
    },
    "2990": {
      "offset": [
        4387,
        4486
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2991": {
      "fn": "CLHouse.Init",
      "offset": [
        4387,
        4486
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2993": {
      "fn": "CLHouse.Init",
      "offset": [
        4387,
        4486
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2994": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2998": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3000": {
      "op": "SHL"
    },
    "3001": {
      "offset": [
        4387,
        4486
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3002": {
      "fn": "CLHouse.Init",
      "offset": [
        4387,
        4486
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3003": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3005": {
      "offset": [
        4387,
        4486
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3007": {
      "fn": "CLHouse.Init",
      "offset": [
        4387,
        4486
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3008": {
      "fn": "CLHouse.Init",
      "offset": [
        4387,
        4486
      ],
      "op": "ADD",
      "path": "10"
    },
    "3009": {
      "op": "MSTORE"
    },
    "3010": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "3012": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3014": {
      "op": "DUP3"
    },
    "3015": {
      "op": "ADD"
    },
    "3016": {
      "op": "MSTORE"
    },
    "3017": {
      "op": "PUSH32",
      "value": "0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
    },
    "3050": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3052": {
      "op": "DUP3"
    },
    "3053": {
      "op": "ADD"
    },
    "3054": {
      "op": "MSTORE"
    },
    "3055": {
      "op": "PUSH14",
      "value": "0x191E481A5B9A5D1A585B1A5E9959"
    },
    "3070": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "3072": {
      "op": "SHL"
    },
    "3073": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3075": {
      "op": "DUP3"
    },
    "3076": {
      "op": "ADD"
    },
    "3077": {
      "op": "MSTORE"
    },
    "3078": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3080": {
      "op": "ADD"
    },
    "3081": {
      "offset": [
        4387,
        4486
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3083": {
      "fn": "CLHouse.Init",
      "offset": [
        4387,
        4486
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3084": {
      "fn": "CLHouse.Init",
      "offset": [
        4387,
        4486
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3085": {
      "fn": "CLHouse.Init",
      "offset": [
        4387,
        4486
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3086": {
      "fn": "CLHouse.Init",
      "offset": [
        4387,
        4486
      ],
      "op": "SUB",
      "path": "10"
    },
    "3087": {
      "fn": "CLHouse.Init",
      "offset": [
        4387,
        4486
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3088": {
      "fn": "CLHouse.Init",
      "offset": [
        4387,
        4486
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "10"
    },
    "3089": {
      "fn": "CLHouse.Init",
      "offset": [
        4387,
        4486
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3090": {
      "offset": [
        4496,
        4508
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x12"
    },
    "3092": {
      "offset": [
        4496,
        4518
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3093": {
      "fn": "CLHouse.Init",
      "offset": [
        4496,
        4518
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3094": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "3097": {
      "op": "NOT"
    },
    "3098": {
      "offset": [
        4528,
        4548
      ],
      "op": "AND",
      "path": "10"
    },
    "3099": {
      "offset": [
        4496,
        4518
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xFF"
    },
    "3101": {
      "fn": "CLHouse.Init",
      "offset": [
        4496,
        4518
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3102": {
      "fn": "CLHouse.Init",
      "offset": [
        4496,
        4518
      ],
      "op": "AND",
      "path": "10"
    },
    "3103": {
      "offset": [
        4528,
        4548
      ],
      "op": "OR",
      "path": "10"
    },
    "3104": {
      "offset": [
        4496,
        4518
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x100"
    },
    "3107": {
      "offset": [
        4528,
        4548
      ],
      "op": "OR",
      "path": "10"
    },
    "3108": {
      "fn": "CLHouse.Init",
      "offset": [
        4528,
        4548
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3109": {
      "fn": "CLHouse.Init",
      "offset": [
        4528,
        4548
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "3110": {
      "offset": [
        4496,
        4508
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3112": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1479
      ],
      "op": "DUP4",
      "path": "29"
    },
    "3113": {
      "fn": "CLHouse.Init",
      "offset": [
        1490,
        1512
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x2"
    },
    "3115": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1516
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x5"
    },
    "3117": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1516
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3118": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1516
      ],
      "op": "LT",
      "path": "29"
    },
    "3119": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1516
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xC3A"
    },
    "3122": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1516
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "3123": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1516
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xC3A"
    },
    "3126": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1516
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x2232"
    },
    "3129": {
      "fn": "CLHouse.Init",
      "jump": "i",
      "offset": [
        1475,
        1516
      ],
      "op": "JUMP",
      "path": "29"
    },
    "3130": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1516
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "3131": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1516
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "3133": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1516
      ],
      "op": "MUL",
      "path": "29"
    },
    "3134": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1516
      ],
      "op": "ADD",
      "path": "29"
    },
    "3135": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1516
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3140": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3142": {
      "op": "SHL"
    },
    "3143": {
      "op": "SUB"
    },
    "3144": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1529
      ],
      "op": "AND",
      "path": "29"
    },
    "3145": {
      "fn": "CLHouse.Init",
      "offset": [
        1679,
        1685
      ],
      "op": "DUP10",
      "path": "29"
    },
    "3146": {
      "fn": "CLHouse.Init",
      "offset": [
        1704,
        1714
      ],
      "op": "DUP10",
      "path": "29"
    },
    "3147": {
      "fn": "CLHouse.Init",
      "offset": [
        1732,
        1745
      ],
      "op": "DUP10",
      "path": "29"
    },
    "3148": {
      "fn": "CLHouse.Init",
      "offset": [
        1763,
        1772
      ],
      "op": "DUP10",
      "path": "29"
    },
    "3149": {
      "fn": "CLHouse.Init",
      "offset": [
        1790,
        1799
      ],
      "op": "DUP10",
      "path": "29"
    },
    "3150": {
      "fn": "CLHouse.Init",
      "offset": [
        1817,
        1821
      ],
      "op": "DUP10",
      "path": "29"
    },
    "3151": {
      "fn": "CLHouse.Init",
      "offset": [
        1839,
        1854
      ],
      "op": "DUP10",
      "path": "29"
    },
    "3152": {
      "fn": "CLHouse.Init",
      "offset": [
        1543,
        1868
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "3154": {
      "fn": "CLHouse.Init",
      "offset": [
        1543,
        1868
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3155": {
      "fn": "CLHouse.Init",
      "offset": [
        1543,
        1868
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x24"
    },
    "3157": {
      "fn": "CLHouse.Init",
      "offset": [
        1543,
        1868
      ],
      "op": "ADD",
      "path": "29"
    },
    "3158": {
      "fn": "CLHouse.Init",
      "offset": [
        1543,
        1868
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xC65"
    },
    "3161": {
      "fn": "CLHouse.Init",
      "offset": [
        1543,
        1868
      ],
      "op": "SWAP8",
      "path": "29"
    },
    "3162": {
      "fn": "CLHouse.Init",
      "offset": [
        1543,
        1868
      ],
      "op": "SWAP7",
      "path": "29"
    },
    "3163": {
      "fn": "CLHouse.Init",
      "offset": [
        1543,
        1868
      ],
      "op": "SWAP6",
      "path": "29"
    },
    "3164": {
      "fn": "CLHouse.Init",
      "offset": [
        1543,
        1868
      ],
      "op": "SWAP5",
      "path": "29"
    },
    "3165": {
      "fn": "CLHouse.Init",
      "offset": [
        1543,
        1868
      ],
      "op": "SWAP4",
      "path": "29"
    },
    "3166": {
      "fn": "CLHouse.Init",
      "offset": [
        1543,
        1868
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "3167": {
      "fn": "CLHouse.Init",
      "offset": [
        1543,
        1868
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3168": {
      "fn": "CLHouse.Init",
      "offset": [
        1543,
        1868
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3169": {
      "fn": "CLHouse.Init",
      "offset": [
        1543,
        1868
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x22B8"
    },
    "3172": {
      "fn": "CLHouse.Init",
      "jump": "i",
      "offset": [
        1543,
        1868
      ],
      "op": "JUMP",
      "path": "29"
    },
    "3173": {
      "fn": "CLHouse.Init",
      "offset": [
        1543,
        1868
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "3174": {
      "fn": "CLHouse.Init",
      "offset": [
        1543,
        1868
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "3176": {
      "fn": "CLHouse.Init",
      "offset": [
        1543,
        1868
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3177": {
      "fn": "CLHouse.Init",
      "offset": [
        1543,
        1868
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3178": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3180": {
      "op": "NOT"
    },
    "3181": {
      "fn": "CLHouse.Init",
      "offset": [
        1543,
        1868
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3182": {
      "fn": "CLHouse.Init",
      "offset": [
        1543,
        1868
      ],
      "op": "DUP5",
      "path": "29"
    },
    "3183": {
      "fn": "CLHouse.Init",
      "offset": [
        1543,
        1868
      ],
      "op": "SUB",
      "path": "29"
    },
    "3184": {
      "fn": "CLHouse.Init",
      "offset": [
        1543,
        1868
      ],
      "op": "ADD",
      "path": "29"
    },
    "3185": {
      "fn": "CLHouse.Init",
      "offset": [
        1543,
        1868
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3186": {
      "fn": "CLHouse.Init",
      "offset": [
        1543,
        1868
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3187": {
      "fn": "CLHouse.Init",
      "offset": [
        1543,
        1868
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3188": {
      "fn": "CLHouse.Init",
      "offset": [
        1543,
        1868
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3189": {
      "fn": "CLHouse.Init",
      "offset": [
        1543,
        1868
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3190": {
      "fn": "CLHouse.Init",
      "offset": [
        1543,
        1868
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "3192": {
      "fn": "CLHouse.Init",
      "offset": [
        1543,
        1868
      ],
      "op": "DUP3",
      "path": "29"
    },
    "3193": {
      "fn": "CLHouse.Init",
      "offset": [
        1543,
        1868
      ],
      "op": "ADD",
      "path": "29"
    },
    "3194": {
      "fn": "CLHouse.Init",
      "offset": [
        1543,
        1868
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3195": {
      "fn": "CLHouse.Init",
      "offset": [
        1543,
        1868
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3196": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3200": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3202": {
      "op": "SHL"
    },
    "3203": {
      "op": "SUB"
    },
    "3204": {
      "fn": "CLHouse.Init",
      "offset": [
        1543,
        1868
      ],
      "op": "AND",
      "path": "29"
    },
    "3205": {
      "op": "PUSH4",
      "value": "0x9F221D81"
    },
    "3210": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3212": {
      "op": "SHL"
    },
    "3213": {
      "fn": "CLHouse.Init",
      "offset": [
        1543,
        1868
      ],
      "op": "OR",
      "path": "29"
    },
    "3214": {
      "fn": "CLHouse.Init",
      "offset": [
        1543,
        1868
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3215": {
      "fn": "CLHouse.Init",
      "offset": [
        1543,
        1868
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3216": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1878
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3217": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1878
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xC9A"
    },
    "3220": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1878
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3221": {
      "fn": "CLHouse.Init",
      "offset": [
        1543,
        1868
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3222": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1878
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x20F5"
    },
    "3225": {
      "fn": "CLHouse.Init",
      "jump": "i",
      "offset": [
        1475,
        1878
      ],
      "op": "JUMP",
      "path": "29"
    },
    "3226": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1878
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "3227": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1878
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "3229": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1878
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "3231": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1878
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3232": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1878
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3233": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1878
      ],
      "op": "DUP4",
      "path": "29"
    },
    "3234": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1878
      ],
      "op": "SUB",
      "path": "29"
    },
    "3235": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1878
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3236": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1878
      ],
      "op": "DUP6",
      "path": "29"
    },
    "3237": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1878
      ],
      "op": "GAS",
      "path": "29"
    },
    "3238": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1878
      ],
      "op": "DELEGATECALL",
      "path": "29"
    },
    "3239": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1878
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3240": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1878
      ],
      "op": "POP",
      "path": "29"
    },
    "3241": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1878
      ],
      "op": "POP",
      "path": "29"
    },
    "3242": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1878
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "3243": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1878
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3244": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1878
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "3246": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1878
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3247": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1878
      ],
      "op": "EQ",
      "path": "29"
    },
    "3248": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1878
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xCD5"
    },
    "3251": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1878
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "3252": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1878
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "3254": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1878
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3255": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1878
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3256": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1878
      ],
      "op": "POP",
      "path": "29"
    },
    "3257": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1878
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1F"
    },
    "3259": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1878
      ],
      "op": "NOT",
      "path": "29"
    },
    "3260": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1878
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x3F"
    },
    "3262": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1878
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "3263": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1878
      ],
      "op": "ADD",
      "path": "29"
    },
    "3264": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1878
      ],
      "op": "AND",
      "path": "29"
    },
    "3265": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1878
      ],
      "op": "DUP3",
      "path": "29"
    },
    "3266": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1878
      ],
      "op": "ADD",
      "path": "29"
    },
    "3267": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1878
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "3269": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1878
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3270": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1878
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "3271": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1878
      ],
      "op": "DUP3",
      "path": "29"
    },
    "3272": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1878
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3273": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1878
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "3274": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1878
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "3276": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1878
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "3278": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1878
      ],
      "op": "DUP5",
      "path": "29"
    },
    "3279": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1878
      ],
      "op": "ADD",
      "path": "29"
    },
    "3280": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1878
      ],
      "op": "RETURNDATACOPY",
      "path": "29"
    },
    "3281": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1878
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xCDA"
    },
    "3284": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1878
      ],
      "op": "JUMP",
      "path": "29"
    },
    "3285": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1878
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "3286": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1878
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x60"
    },
    "3288": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1878
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3289": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1878
      ],
      "op": "POP",
      "path": "29"
    },
    "3290": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1878
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "3291": {
      "fn": "CLHouse.Init",
      "offset": [
        1475,
        1878
      ],
      "op": "POP",
      "path": "29"
    },
    "3292": {
      "fn": "CLHouse.Init",
      "offset": [
        1450,
        1878
      ],
      "op": "POP",
      "path": "29"
    },
    "3293": {
      "fn": "CLHouse.Init",
      "offset": [
        1450,
        1878
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3294": {
      "fn": "CLHouse.Init",
      "offset": [
        1450,
        1878
      ],
      "op": "POP",
      "path": "29"
    },
    "3295": {
      "branch": 9,
      "fn": "CLHouse.Init",
      "offset": [
        1894,
        1907
      ],
      "op": "DUP1",
      "path": "29",
      "statement": 3
    },
    "3296": {
      "fn": "CLHouse.Init",
      "offset": [
        1889,
        2121
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xCF0"
    },
    "3299": {
      "branch": 9,
      "fn": "CLHouse.Init",
      "offset": [
        1889,
        2121
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "3300": {
      "fn": "CLHouse.Init",
      "offset": [
        1968,
        1972
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "3302": {
      "fn": "CLHouse.Init",
      "offset": [
        1962,
        1973
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3303": {
      "fn": "CLHouse.Init",
      "offset": [
        2002,
        2018
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "3304": {
      "fn": "CLHouse.Init",
      "offset": [
        2058,
        2062
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3305": {
      "fn": "CLHouse.Init",
      "offset": [
        2055,
        2056
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "3307": {
      "fn": "CLHouse.Init",
      "offset": [
        2050,
        2053
      ],
      "op": "DUP4",
      "path": "29"
    },
    "3308": {
      "fn": "CLHouse.Init",
      "offset": [
        2035,
        2063
      ],
      "op": "RETURNDATACOPY",
      "path": "29"
    },
    "3309": {
      "fn": "CLHouse.Init",
      "offset": [
        2092,
        2096
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3310": {
      "fn": "CLHouse.Init",
      "offset": [
        2087,
        2090
      ],
      "op": "DUP3",
      "path": "29"
    },
    "3311": {
      "fn": "CLHouse.Init",
      "offset": [
        2080,
        2097
      ],
      "op": "REVERT",
      "path": "29"
    },
    "3312": {
      "fn": "CLHouse.Init",
      "offset": [
        1889,
        2121
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "3313": {
      "op": "POP"
    },
    "3314": {
      "offset": [
        4569,
        4582
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x12"
    },
    "3316": {
      "offset": [
        4569,
        4590
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3317": {
      "fn": "CLHouse.Init",
      "offset": [
        4569,
        4590
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3318": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "3321": {
      "op": "NOT"
    },
    "3322": {
      "offset": [
        4569,
        4590
      ],
      "op": "AND",
      "path": "10"
    },
    "3323": {
      "fn": "CLHouse.Init",
      "offset": [
        4569,
        4590
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3324": {
      "fn": "CLHouse.Init",
      "offset": [
        4569,
        4590
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "3325": {
      "offset": [
        4605,
        4625
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3327": {
      "fn": "CLHouse.Init",
      "offset": [
        4605,
        4625
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3328": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3330": {
      "op": "DUP3"
    },
    "3331": {
      "op": "AND"
    },
    "3332": {
      "op": "DUP2"
    },
    "3333": {
      "op": "MSTORE"
    },
    "3334": {
      "offset": [
        4605,
        4625
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498"
    },
    "3367": {
      "fn": "CLHouse.Init",
      "offset": [
        4605,
        4625
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3368": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3370": {
      "op": "ADD"
    },
    "3371": {
      "offset": [
        4605,
        4625
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3373": {
      "fn": "CLHouse.Init",
      "offset": [
        4605,
        4625
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3374": {
      "fn": "CLHouse.Init",
      "offset": [
        4605,
        4625
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3375": {
      "fn": "CLHouse.Init",
      "offset": [
        4605,
        4625
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3376": {
      "fn": "CLHouse.Init",
      "offset": [
        4605,
        4625
      ],
      "op": "SUB",
      "path": "10"
    },
    "3377": {
      "fn": "CLHouse.Init",
      "offset": [
        4605,
        4625
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3378": {
      "fn": "CLHouse.Init",
      "offset": [
        4605,
        4625
      ],
      "op": "LOG1",
      "path": "10"
    },
    "3379": {
      "fn": "CLHouse.Init",
      "offset": [
        1065,
        2127
      ],
      "op": "POP",
      "path": "29"
    },
    "3380": {
      "fn": "CLHouse.Init",
      "offset": [
        1065,
        2127
      ],
      "op": "POP",
      "path": "29"
    },
    "3381": {
      "fn": "CLHouse.Init",
      "offset": [
        1065,
        2127
      ],
      "op": "POP",
      "path": "29"
    },
    "3382": {
      "fn": "CLHouse.Init",
      "offset": [
        1065,
        2127
      ],
      "op": "POP",
      "path": "29"
    },
    "3383": {
      "fn": "CLHouse.Init",
      "offset": [
        1065,
        2127
      ],
      "op": "POP",
      "path": "29"
    },
    "3384": {
      "fn": "CLHouse.Init",
      "offset": [
        1065,
        2127
      ],
      "op": "POP",
      "path": "29"
    },
    "3385": {
      "fn": "CLHouse.Init",
      "offset": [
        1065,
        2127
      ],
      "op": "POP",
      "path": "29"
    },
    "3386": {
      "fn": "CLHouse.Init",
      "offset": [
        1065,
        2127
      ],
      "op": "POP",
      "path": "29"
    },
    "3387": {
      "fn": "CLHouse.Init",
      "jump": "o",
      "offset": [
        1065,
        2127
      ],
      "op": "JUMP",
      "path": "29"
    },
    "3388": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2482,
        3183
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "3389": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2729,
        2742
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x2"
    },
    "3391": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2729,
        2742
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "3392": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2769,
        2868
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "3394": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2769,
        2868
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3395": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2769,
        2868
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x24"
    },
    "3397": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2769,
        2868
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3398": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2769,
        2868
      ],
      "op": "ADD",
      "path": "29"
    },
    "3399": {
      "op": "DUP4"
    },
    "3400": {
      "op": "SWAP1"
    },
    "3401": {
      "op": "MSTORE"
    },
    "3402": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2575,
        2586
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "3404": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2575,
        2586
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3405": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2600,
        2621
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x60"
    },
    "3407": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2600,
        2621
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3408": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2575,
        2586
      ],
      "op": "DUP4",
      "path": "29"
    },
    "3409": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2575,
        2586
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3410": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3414": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3416": {
      "op": "SHL"
    },
    "3417": {
      "op": "SUB"
    },
    "3418": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2729,
        2742
      ],
      "op": "AND",
      "path": "29"
    },
    "3419": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2729,
        2742
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3420": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3422": {
      "op": "ADD"
    },
    "3423": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2769,
        2868
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "3425": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2769,
        2868
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3426": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2769,
        2868
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3427": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3429": {
      "op": "NOT"
    },
    "3430": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2769,
        2868
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3431": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2769,
        2868
      ],
      "op": "DUP5",
      "path": "29"
    },
    "3432": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2769,
        2868
      ],
      "op": "SUB",
      "path": "29"
    },
    "3433": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2769,
        2868
      ],
      "op": "ADD",
      "path": "29"
    },
    "3434": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2769,
        2868
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3435": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2769,
        2868
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3436": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2769,
        2868
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3437": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2769,
        2868
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3438": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2769,
        2868
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3439": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2769,
        2868
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "3441": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2769,
        2868
      ],
      "op": "DUP3",
      "path": "29"
    },
    "3442": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2769,
        2868
      ],
      "op": "ADD",
      "path": "29"
    },
    "3443": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2769,
        2868
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3444": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2769,
        2868
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3445": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3447": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3449": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3451": {
      "op": "SHL"
    },
    "3452": {
      "op": "SUB"
    },
    "3453": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2769,
        2868
      ],
      "op": "AND",
      "path": "29"
    },
    "3454": {
      "op": "PUSH4",
      "value": "0x5F3D99B3"
    },
    "3459": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3461": {
      "op": "SHL"
    },
    "3462": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2769,
        2868
      ],
      "op": "OR",
      "path": "29"
    },
    "3463": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2769,
        2868
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3464": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2769,
        2868
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3465": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2729,
        2878
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3466": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2729,
        2878
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xD93"
    },
    "3469": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2729,
        2878
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3470": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2769,
        2868
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3471": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2729,
        2878
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x20F5"
    },
    "3474": {
      "fn": "CLHouse.ExecProp",
      "jump": "i",
      "offset": [
        2729,
        2878
      ],
      "op": "JUMP",
      "path": "29"
    },
    "3475": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2729,
        2878
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "3476": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2729,
        2878
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "3478": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2729,
        2878
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "3480": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2729,
        2878
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3481": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2729,
        2878
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3482": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2729,
        2878
      ],
      "op": "DUP4",
      "path": "29"
    },
    "3483": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2729,
        2878
      ],
      "op": "SUB",
      "path": "29"
    },
    "3484": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2729,
        2878
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3485": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2729,
        2878
      ],
      "op": "DUP6",
      "path": "29"
    },
    "3486": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2729,
        2878
      ],
      "op": "GAS",
      "path": "29"
    },
    "3487": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2729,
        2878
      ],
      "op": "DELEGATECALL",
      "path": "29"
    },
    "3488": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2729,
        2878
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3489": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2729,
        2878
      ],
      "op": "POP",
      "path": "29"
    },
    "3490": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2729,
        2878
      ],
      "op": "POP",
      "path": "29"
    },
    "3491": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2729,
        2878
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "3492": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2729,
        2878
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3493": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2729,
        2878
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "3495": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2729,
        2878
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3496": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2729,
        2878
      ],
      "op": "EQ",
      "path": "29"
    },
    "3497": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2729,
        2878
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xDCE"
    },
    "3500": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2729,
        2878
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "3501": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2729,
        2878
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "3503": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2729,
        2878
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3504": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2729,
        2878
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3505": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2729,
        2878
      ],
      "op": "POP",
      "path": "29"
    },
    "3506": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2729,
        2878
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1F"
    },
    "3508": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2729,
        2878
      ],
      "op": "NOT",
      "path": "29"
    },
    "3509": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2729,
        2878
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x3F"
    },
    "3511": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2729,
        2878
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "3512": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2729,
        2878
      ],
      "op": "ADD",
      "path": "29"
    },
    "3513": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2729,
        2878
      ],
      "op": "AND",
      "path": "29"
    },
    "3514": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2729,
        2878
      ],
      "op": "DUP3",
      "path": "29"
    },
    "3515": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2729,
        2878
      ],
      "op": "ADD",
      "path": "29"
    },
    "3516": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2729,
        2878
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "3518": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2729,
        2878
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3519": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2729,
        2878
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "3520": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2729,
        2878
      ],
      "op": "DUP3",
      "path": "29"
    },
    "3521": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2729,
        2878
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3522": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2729,
        2878
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "3523": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2729,
        2878
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "3525": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2729,
        2878
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "3527": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2729,
        2878
      ],
      "op": "DUP5",
      "path": "29"
    },
    "3528": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2729,
        2878
      ],
      "op": "ADD",
      "path": "29"
    },
    "3529": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2729,
        2878
      ],
      "op": "RETURNDATACOPY",
      "path": "29"
    },
    "3530": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2729,
        2878
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xDD3"
    },
    "3533": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2729,
        2878
      ],
      "op": "JUMP",
      "path": "29"
    },
    "3534": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2729,
        2878
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "3535": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2729,
        2878
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x60"
    },
    "3537": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2729,
        2878
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3538": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2729,
        2878
      ],
      "op": "POP",
      "path": "29"
    },
    "3539": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2729,
        2878
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "3540": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2729,
        2878
      ],
      "op": "POP",
      "path": "29"
    },
    "3541": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2704,
        2878
      ],
      "op": "POP",
      "path": "29"
    },
    "3542": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2704,
        2878
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3543": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2704,
        2878
      ],
      "op": "POP",
      "path": "29"
    },
    "3544": {
      "branch": 10,
      "fn": "CLHouse.ExecProp",
      "offset": [
        2894,
        2907
      ],
      "op": "DUP1",
      "path": "29",
      "statement": 4
    },
    "3545": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2889,
        3121
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xDE9"
    },
    "3548": {
      "branch": 10,
      "fn": "CLHouse.ExecProp",
      "offset": [
        2889,
        3121
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "3549": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2968,
        2972
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "3551": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2962,
        2973
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3552": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3002,
        3018
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "3553": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3058,
        3062
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3554": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3055,
        3056
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "3556": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3050,
        3053
      ],
      "op": "DUP4",
      "path": "29"
    },
    "3557": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3035,
        3063
      ],
      "op": "RETURNDATACOPY",
      "path": "29"
    },
    "3558": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3092,
        3096
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3559": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3087,
        3090
      ],
      "op": "DUP3",
      "path": "29"
    },
    "3560": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3080,
        3097
      ],
      "op": "REVERT",
      "path": "29"
    },
    "3561": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2889,
        3121
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "3562": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3140,
        3144
      ],
      "op": "PUSH1",
      "path": "29",
      "statement": 5,
      "value": "0x1"
    },
    "3564": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3131,
        3176
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "3566": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3131,
        3176
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3567": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3131,
        3176
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3568": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3131,
        3176
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "3570": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3131,
        3176
      ],
      "op": "ADD",
      "path": "29"
    },
    "3571": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3131,
        3176
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "3573": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3131,
        3176
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3574": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3131,
        3176
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3575": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3131,
        3176
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x19"
    },
    "3577": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3131,
        3176
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3578": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3131,
        3176
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3579": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3131,
        3176
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "3581": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3131,
        3176
      ],
      "op": "ADD",
      "path": "29"
    },
    "3582": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3131,
        3176
      ],
      "op": "PUSH32",
      "path": "29",
      "value": "0x537563636573732065786563757465642070726F706F73616C00000000000000"
    },
    "3615": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3131,
        3176
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3616": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3131,
        3176
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3617": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3131,
        3176
      ],
      "op": "POP",
      "path": "29"
    },
    "3618": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3131,
        3176
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "3619": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3131,
        3176
      ],
      "op": "POP",
      "path": "29"
    },
    "3620": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3131,
        3176
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "3621": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3131,
        3176
      ],
      "op": "POP",
      "path": "29"
    },
    "3622": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3131,
        3176
      ],
      "op": "POP",
      "path": "29"
    },
    "3623": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2482,
        3183
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3624": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2482,
        3183
      ],
      "op": "POP",
      "path": "29"
    },
    "3625": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2482,
        3183
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3626": {
      "fn": "CLHouse.ExecProp",
      "jump": "o",
      "offset": [
        2482,
        3183
      ],
      "op": "JUMP",
      "path": "29"
    },
    "3627": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9529,
        10319
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "3628": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        9818
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x2"
    },
    "3630": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        9818
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "3631": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9845,
        10033
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "3633": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9845,
        10033
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3634": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9691,
        9705
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "3636": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9691,
        9705
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3637": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9691,
        9705
      ],
      "op": "DUP3",
      "path": "29"
    },
    "3638": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9691,
        9705
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3641": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3643": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3645": {
      "op": "SHL"
    },
    "3646": {
      "op": "SUB"
    },
    "3647": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        9818
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3648": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        9818
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3649": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        9818
      ],
      "op": "AND",
      "path": "29"
    },
    "3650": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        9818
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3651": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9845,
        10033
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xE54"
    },
    "3654": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9845,
        10033
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3655": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9941,
        9961
      ],
      "op": "DUP8",
      "path": "29"
    },
    "3656": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9941,
        9961
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3657": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9979,
        9991
      ],
      "op": "DUP8",
      "path": "29"
    },
    "3658": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9979,
        9991
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3659": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10009,
        10019
      ],
      "op": "DUP8",
      "path": "29"
    },
    "3660": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10009,
        10019
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3661": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9845,
        10033
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x24"
    },
    "3663": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9845,
        10033
      ],
      "op": "ADD",
      "path": "29"
    },
    "3664": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9845,
        10033
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x2349"
    },
    "3667": {
      "fn": "CLHouse.PropGovRules",
      "jump": "i",
      "offset": [
        9845,
        10033
      ],
      "op": "JUMP",
      "path": "29"
    },
    "3668": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9845,
        10033
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "3669": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9845,
        10033
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "3671": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9845,
        10033
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3672": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9845,
        10033
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3673": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3675": {
      "op": "NOT"
    },
    "3676": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9845,
        10033
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3677": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9845,
        10033
      ],
      "op": "DUP5",
      "path": "29"
    },
    "3678": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9845,
        10033
      ],
      "op": "SUB",
      "path": "29"
    },
    "3679": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9845,
        10033
      ],
      "op": "ADD",
      "path": "29"
    },
    "3680": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9845,
        10033
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3681": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9845,
        10033
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3682": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9845,
        10033
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3683": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9845,
        10033
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3684": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9845,
        10033
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3685": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9845,
        10033
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "3687": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9845,
        10033
      ],
      "op": "DUP3",
      "path": "29"
    },
    "3688": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9845,
        10033
      ],
      "op": "ADD",
      "path": "29"
    },
    "3689": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9845,
        10033
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3690": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9845,
        10033
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3691": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3695": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3697": {
      "op": "SHL"
    },
    "3698": {
      "op": "SUB"
    },
    "3699": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9845,
        10033
      ],
      "op": "AND",
      "path": "29"
    },
    "3700": {
      "op": "PUSH4",
      "value": "0x70ACB761"
    },
    "3705": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3707": {
      "op": "SHL"
    },
    "3708": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9845,
        10033
      ],
      "op": "OR",
      "path": "29"
    },
    "3709": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9845,
        10033
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3710": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9845,
        10033
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3711": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        10043
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3712": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        10043
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xE89"
    },
    "3715": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        10043
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3716": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9845,
        10033
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3717": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        10043
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x20F5"
    },
    "3720": {
      "fn": "CLHouse.PropGovRules",
      "jump": "i",
      "offset": [
        9805,
        10043
      ],
      "op": "JUMP",
      "path": "29"
    },
    "3721": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        10043
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "3722": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        10043
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "3724": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        10043
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "3726": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        10043
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3727": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        10043
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3728": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        10043
      ],
      "op": "DUP4",
      "path": "29"
    },
    "3729": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        10043
      ],
      "op": "SUB",
      "path": "29"
    },
    "3730": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        10043
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3731": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        10043
      ],
      "op": "DUP6",
      "path": "29"
    },
    "3732": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        10043
      ],
      "op": "GAS",
      "path": "29"
    },
    "3733": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        10043
      ],
      "op": "DELEGATECALL",
      "path": "29"
    },
    "3734": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        10043
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3735": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        10043
      ],
      "op": "POP",
      "path": "29"
    },
    "3736": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        10043
      ],
      "op": "POP",
      "path": "29"
    },
    "3737": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        10043
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "3738": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        10043
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3739": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        10043
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "3741": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        10043
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3742": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        10043
      ],
      "op": "EQ",
      "path": "29"
    },
    "3743": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        10043
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xEC4"
    },
    "3746": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        10043
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "3747": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        10043
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "3749": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        10043
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3750": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        10043
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3751": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        10043
      ],
      "op": "POP",
      "path": "29"
    },
    "3752": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        10043
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1F"
    },
    "3754": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        10043
      ],
      "op": "NOT",
      "path": "29"
    },
    "3755": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        10043
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x3F"
    },
    "3757": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        10043
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "3758": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        10043
      ],
      "op": "ADD",
      "path": "29"
    },
    "3759": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        10043
      ],
      "op": "AND",
      "path": "29"
    },
    "3760": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        10043
      ],
      "op": "DUP3",
      "path": "29"
    },
    "3761": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        10043
      ],
      "op": "ADD",
      "path": "29"
    },
    "3762": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        10043
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "3764": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        10043
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3765": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        10043
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "3766": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        10043
      ],
      "op": "DUP3",
      "path": "29"
    },
    "3767": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        10043
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3768": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        10043
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "3769": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        10043
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "3771": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        10043
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "3773": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        10043
      ],
      "op": "DUP5",
      "path": "29"
    },
    "3774": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        10043
      ],
      "op": "ADD",
      "path": "29"
    },
    "3775": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        10043
      ],
      "op": "RETURNDATACOPY",
      "path": "29"
    },
    "3776": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        10043
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xEC9"
    },
    "3779": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        10043
      ],
      "op": "JUMP",
      "path": "29"
    },
    "3780": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        10043
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "3781": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        10043
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x60"
    },
    "3783": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        10043
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3784": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        10043
      ],
      "op": "POP",
      "path": "29"
    },
    "3785": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        10043
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "3786": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9805,
        10043
      ],
      "op": "POP",
      "path": "29"
    },
    "3787": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9780,
        10043
      ],
      "op": "POP",
      "path": "29"
    },
    "3788": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9780,
        10043
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3789": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9780,
        10043
      ],
      "op": "POP",
      "path": "29"
    },
    "3790": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10094,
        10098
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "3792": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10088,
        10099
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3793": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10124,
        10140
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "3794": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10176,
        10180
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3795": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10173,
        10174
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "3797": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10168,
        10171
      ],
      "op": "DUP4",
      "path": "29"
    },
    "3798": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10153,
        10181
      ],
      "op": "RETURNDATACOPY",
      "path": "29"
    },
    "3799": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10205,
        10218
      ],
      "op": "DUP3",
      "path": "29"
    },
    "3800": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10194,
        10270
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xEDF"
    },
    "3803": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10194,
        10270
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "3804": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10251,
        10255
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3805": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10246,
        10249
      ],
      "op": "DUP3",
      "path": "29"
    },
    "3806": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10239,
        10256
      ],
      "op": "REVERT",
      "path": "29"
    },
    "3807": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10194,
        10270
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "3808": {
      "op": "POP"
    },
    "3809": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10303
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3810": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10293,
        10303
      ],
      "op": "SWAP6",
      "path": "29"
    },
    "3811": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        9529,
        10319
      ],
      "op": "SWAP5",
      "path": "29"
    },
    "3812": {
      "op": "POP"
    },
    "3813": {
      "op": "POP"
    },
    "3814": {
      "op": "POP"
    },
    "3815": {
      "op": "POP"
    },
    "3816": {
      "op": "POP"
    },
    "3817": {
      "fn": "CLHouse.PropGovRules",
      "jump": "o",
      "offset": [
        9529,
        10319
      ],
      "op": "JUMP",
      "path": "29"
    },
    "3818": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7103,
        7927
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "3819": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7392,
        7405
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x2"
    },
    "3821": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7392,
        7405
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "3822": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7432,
        7641
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "3824": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7432,
        7641
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3825": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7278,
        7292
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "3827": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7278,
        7292
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3828": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7278,
        7292
      ],
      "op": "DUP3",
      "path": "29"
    },
    "3829": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7278,
        7292
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3834": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3836": {
      "op": "SHL"
    },
    "3837": {
      "op": "SUB"
    },
    "3838": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7392,
        7405
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3839": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7392,
        7405
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3840": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7392,
        7405
      ],
      "op": "AND",
      "path": "29"
    },
    "3841": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7392,
        7405
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3842": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7432,
        7641
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xF15"
    },
    "3845": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7432,
        7641
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3846": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7535,
        7538
      ],
      "op": "DUP9",
      "path": "29"
    },
    "3847": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7535,
        7538
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3848": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7556,
        7569
      ],
      "op": "DUP9",
      "path": "29"
    },
    "3849": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7556,
        7569
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3850": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7587,
        7599
      ],
      "op": "DUP9",
      "path": "29"
    },
    "3851": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7587,
        7599
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3852": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7617,
        7627
      ],
      "op": "DUP9",
      "path": "29"
    },
    "3853": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7617,
        7627
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3854": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7432,
        7641
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x24"
    },
    "3856": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7432,
        7641
      ],
      "op": "ADD",
      "path": "29"
    },
    "3857": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7432,
        7641
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x20BD"
    },
    "3860": {
      "fn": "CLHouse.PropTxWei",
      "jump": "i",
      "offset": [
        7432,
        7641
      ],
      "op": "JUMP",
      "path": "29"
    },
    "3861": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7432,
        7641
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "3862": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7432,
        7641
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "3864": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7432,
        7641
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3865": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7432,
        7641
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3866": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3868": {
      "op": "NOT"
    },
    "3869": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7432,
        7641
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3870": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7432,
        7641
      ],
      "op": "DUP5",
      "path": "29"
    },
    "3871": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7432,
        7641
      ],
      "op": "SUB",
      "path": "29"
    },
    "3872": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7432,
        7641
      ],
      "op": "ADD",
      "path": "29"
    },
    "3873": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7432,
        7641
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3874": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7432,
        7641
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3875": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7432,
        7641
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3876": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7432,
        7641
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3877": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7432,
        7641
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3878": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7432,
        7641
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "3880": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7432,
        7641
      ],
      "op": "DUP3",
      "path": "29"
    },
    "3881": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7432,
        7641
      ],
      "op": "ADD",
      "path": "29"
    },
    "3882": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7432,
        7641
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3883": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7432,
        7641
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3886": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3888": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3890": {
      "op": "SHL"
    },
    "3891": {
      "op": "SUB"
    },
    "3892": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7432,
        7641
      ],
      "op": "AND",
      "path": "29"
    },
    "3893": {
      "op": "PUSH4",
      "value": "0xF8C70A9"
    },
    "3898": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "3900": {
      "op": "SHL"
    },
    "3901": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7432,
        7641
      ],
      "op": "OR",
      "path": "29"
    },
    "3902": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7432,
        7641
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3903": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7432,
        7641
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3904": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7392,
        7651
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3905": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7392,
        7651
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x893"
    },
    "3908": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7392,
        7651
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3909": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7432,
        7641
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3910": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7392,
        7651
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x20F5"
    },
    "3913": {
      "fn": "CLHouse.PropTxWei",
      "jump": "i",
      "offset": [
        7392,
        7651
      ],
      "op": "JUMP",
      "path": "29"
    },
    "3914": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11529,
        12192
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "3915": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11757
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1"
    },
    "3917": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11757
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "3918": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11784,
        11933
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "3920": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11784,
        11933
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3921": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11716,
        11734
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "3923": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11716,
        11734
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3924": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11757
      ],
      "op": "PUSH7",
      "path": "29",
      "value": "0x1000000000000"
    },
    "3932": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11757
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3933": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11757
      ],
      "op": "DIV",
      "path": "29"
    },
    "3934": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3938": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3940": {
      "op": "SHL"
    },
    "3941": {
      "op": "SUB"
    },
    "3942": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11757
      ],
      "op": "AND",
      "path": "29"
    },
    "3943": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11757
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3944": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11784,
        11933
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xF77"
    },
    "3947": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11784,
        11933
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3948": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11880,
        11891
      ],
      "op": "DUP6",
      "path": "29"
    },
    "3949": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11880,
        11891
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3950": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11909,
        11919
      ],
      "op": "DUP6",
      "path": "29"
    },
    "3951": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11909,
        11919
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3952": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11784,
        11933
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x24"
    },
    "3954": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11784,
        11933
      ],
      "op": "ADD",
      "path": "29"
    },
    "3955": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11784,
        11933
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1CB8"
    },
    "3958": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "jump": "i",
      "offset": [
        11784,
        11933
      ],
      "op": "JUMP",
      "path": "29"
    },
    "3959": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11784,
        11933
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "3960": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11784,
        11933
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "3962": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11784,
        11933
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3963": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11784,
        11933
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3964": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3966": {
      "op": "NOT"
    },
    "3967": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11784,
        11933
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3968": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11784,
        11933
      ],
      "op": "DUP5",
      "path": "29"
    },
    "3969": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11784,
        11933
      ],
      "op": "SUB",
      "path": "29"
    },
    "3970": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11784,
        11933
      ],
      "op": "ADD",
      "path": "29"
    },
    "3971": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11784,
        11933
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3972": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11784,
        11933
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3973": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11784,
        11933
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3974": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11784,
        11933
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3975": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11784,
        11933
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3976": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11784,
        11933
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "3978": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11784,
        11933
      ],
      "op": "DUP3",
      "path": "29"
    },
    "3979": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11784,
        11933
      ],
      "op": "ADD",
      "path": "29"
    },
    "3980": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11784,
        11933
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3981": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11784,
        11933
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3986": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3988": {
      "op": "SHL"
    },
    "3989": {
      "op": "SUB"
    },
    "3990": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11784,
        11933
      ],
      "op": "AND",
      "path": "29"
    },
    "3991": {
      "op": "PUSH4",
      "value": "0x1039E45B"
    },
    "3996": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "3998": {
      "op": "SHL"
    },
    "3999": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11784,
        11933
      ],
      "op": "OR",
      "path": "29"
    },
    "4000": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11784,
        11933
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4001": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11784,
        11933
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "4002": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11943
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "4003": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11943
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xFAC"
    },
    "4006": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11943
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "4007": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11784,
        11933
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4008": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11943
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x20F5"
    },
    "4011": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "jump": "i",
      "offset": [
        11740,
        11943
      ],
      "op": "JUMP",
      "path": "29"
    },
    "4012": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11943
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "4013": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11943
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "4015": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11943
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "4017": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11943
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "4018": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11943
      ],
      "op": "DUP1",
      "path": "29"
    },
    "4019": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11943
      ],
      "op": "DUP4",
      "path": "29"
    },
    "4020": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11943
      ],
      "op": "SUB",
      "path": "29"
    },
    "4021": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11943
      ],
      "op": "DUP2",
      "path": "29"
    },
    "4022": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11943
      ],
      "op": "DUP6",
      "path": "29"
    },
    "4023": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11943
      ],
      "op": "GAS",
      "path": "29"
    },
    "4024": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11943
      ],
      "op": "DELEGATECALL",
      "path": "29"
    },
    "4025": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11943
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "4026": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11943
      ],
      "op": "POP",
      "path": "29"
    },
    "4027": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11943
      ],
      "op": "POP",
      "path": "29"
    },
    "4028": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11943
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "4029": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11943
      ],
      "op": "DUP1",
      "path": "29"
    },
    "4030": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11943
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "4032": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11943
      ],
      "op": "DUP2",
      "path": "29"
    },
    "4033": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11943
      ],
      "op": "EQ",
      "path": "29"
    },
    "4034": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11943
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xFE7"
    },
    "4037": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11943
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "4038": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11943
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "4040": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11943
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "4041": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11943
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "4042": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11943
      ],
      "op": "POP",
      "path": "29"
    },
    "4043": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11943
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1F"
    },
    "4045": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11943
      ],
      "op": "NOT",
      "path": "29"
    },
    "4046": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11943
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x3F"
    },
    "4048": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11943
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "4049": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11943
      ],
      "op": "ADD",
      "path": "29"
    },
    "4050": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11943
      ],
      "op": "AND",
      "path": "29"
    },
    "4051": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11943
      ],
      "op": "DUP3",
      "path": "29"
    },
    "4052": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11943
      ],
      "op": "ADD",
      "path": "29"
    },
    "4053": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11943
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "4055": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11943
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "4056": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11943
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "4057": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11943
      ],
      "op": "DUP3",
      "path": "29"
    },
    "4058": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11943
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "4059": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11943
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "4060": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11943
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "4062": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11943
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "4064": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11943
      ],
      "op": "DUP5",
      "path": "29"
    },
    "4065": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11943
      ],
      "op": "ADD",
      "path": "29"
    },
    "4066": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11943
      ],
      "op": "RETURNDATACOPY",
      "path": "29"
    },
    "4067": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11943
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xFEC"
    },
    "4070": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11943
      ],
      "op": "JUMP",
      "path": "29"
    },
    "4071": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11943
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "4072": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11943
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x60"
    },
    "4074": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11943
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "4075": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11943
      ],
      "op": "POP",
      "path": "29"
    },
    "4076": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11943
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "4077": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11740,
        11943
      ],
      "op": "POP",
      "path": "29"
    },
    "4078": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11715,
        11943
      ],
      "op": "POP",
      "path": "29"
    },
    "4079": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11715,
        11943
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4080": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11715,
        11943
      ],
      "op": "POP",
      "path": "29"
    },
    "4081": {
      "branch": 11,
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11959,
        11972
      ],
      "op": "DUP1",
      "path": "29",
      "statement": 6
    },
    "4082": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11954,
        12186
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1002"
    },
    "4085": {
      "branch": 11,
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11954,
        12186
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "4086": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12033,
        12037
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "4088": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12027,
        12038
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "4089": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12067,
        12083
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "4090": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12123,
        12127
      ],
      "op": "DUP1",
      "path": "29"
    },
    "4091": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12120,
        12121
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "4093": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12115,
        12118
      ],
      "op": "DUP4",
      "path": "29"
    },
    "4094": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12100,
        12128
      ],
      "op": "RETURNDATACOPY",
      "path": "29"
    },
    "4095": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12157,
        12161
      ],
      "op": "DUP1",
      "path": "29"
    },
    "4096": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12152,
        12155
      ],
      "op": "DUP3",
      "path": "29"
    },
    "4097": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12145,
        12162
      ],
      "op": "REVERT",
      "path": "29"
    },
    "4098": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11954,
        12186
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "4099": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11647,
        12192
      ],
      "op": "POP",
      "path": "29"
    },
    "4100": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11529,
        12192
      ],
      "op": "POP",
      "path": "29"
    },
    "4101": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        11529,
        12192
      ],
      "op": "POP",
      "path": "29"
    },
    "4102": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "jump": "o",
      "offset": [
        11529,
        12192
      ],
      "op": "JUMP",
      "path": "29"
    },
    "4103": {
      "offset": [
        1234,
        1276
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "4104": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0xE"
    },
    "4106": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DUP2",
      "path": "33"
    },
    "4107": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DUP2",
      "path": "33"
    },
    "4108": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SLOAD",
      "path": "33"
    },
    "4109": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DUP2",
      "path": "33"
    },
    "4110": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "LT",
      "path": "33"
    },
    "4111": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x1017"
    },
    "4114": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "JUMPI",
      "path": "33"
    },
    "4115": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x0"
    },
    "4117": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DUP1",
      "path": "33"
    },
    "4118": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "REVERT",
      "path": "33"
    },
    "4119": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "4120": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x0"
    },
    "4122": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "4123": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DUP3",
      "path": "33"
    },
    "4124": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "MSTORE",
      "path": "33"
    },
    "4125": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x20"
    },
    "4127": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "4128": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "4129": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "KECCAK256",
      "path": "33"
    },
    "4130": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x3"
    },
    "4132": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "4133": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "4134": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "MUL",
      "path": "33"
    },
    "4135": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "ADD",
      "path": "33"
    },
    "4136": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DUP1",
      "path": "33"
    },
    "4137": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SLOAD",
      "path": "33"
    },
    "4138": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x1"
    },
    "4140": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DUP3",
      "path": "33"
    },
    "4141": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "ADD",
      "path": "33"
    },
    "4142": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DUP1",
      "path": "33"
    },
    "4143": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SLOAD",
      "path": "33"
    },
    "4144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4148": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4150": {
      "op": "SHL"
    },
    "4151": {
      "op": "SUB"
    },
    "4152": {
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "4153": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP3",
      "path": "33"
    },
    "4154": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "AND",
      "path": "33"
    },
    "4155": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP4",
      "path": "33"
    },
    "4156": {
      "op": "POP"
    },
    "4157": {
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "4158": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x1046"
    },
    "4161": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "4162": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x2156"
    },
    "4165": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "jump": "i",
      "offset": [
        1234,
        1276
      ],
      "op": "JUMP",
      "path": "33"
    },
    "4166": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "4167": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DUP1",
      "path": "33"
    },
    "4168": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x1F"
    },
    "4170": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "ADD",
      "path": "33"
    },
    "4171": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x20"
    },
    "4173": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DUP1",
      "path": "33"
    },
    "4174": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "4175": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DIV",
      "path": "33"
    },
    "4176": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "MUL",
      "path": "33"
    },
    "4177": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x20"
    },
    "4179": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "ADD",
      "path": "33"
    },
    "4180": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x40"
    },
    "4182": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "MLOAD",
      "path": "33"
    },
    "4183": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "4184": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DUP2",
      "path": "33"
    },
    "4185": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "ADD",
      "path": "33"
    },
    "4186": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x40"
    },
    "4188": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "MSTORE",
      "path": "33"
    },
    "4189": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DUP1",
      "path": "33"
    },
    "4190": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP3",
      "path": "33"
    },
    "4191": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "4192": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "4193": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DUP2",
      "path": "33"
    },
    "4194": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DUP2",
      "path": "33"
    },
    "4195": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "MSTORE",
      "path": "33"
    },
    "4196": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x20"
    },
    "4198": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "ADD",
      "path": "33"
    },
    "4199": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DUP3",
      "path": "33"
    },
    "4200": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DUP1",
      "path": "33"
    },
    "4201": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SLOAD",
      "path": "33"
    },
    "4202": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x1072"
    },
    "4205": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "4206": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x2156"
    },
    "4209": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "jump": "i",
      "offset": [
        1234,
        1276
      ],
      "op": "JUMP",
      "path": "33"
    },
    "4210": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "4211": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DUP1",
      "path": "33"
    },
    "4212": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "ISZERO",
      "path": "33"
    },
    "4213": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x10BF"
    },
    "4216": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "JUMPI",
      "path": "33"
    },
    "4217": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DUP1",
      "path": "33"
    },
    "4218": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x1F"
    },
    "4220": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "LT",
      "path": "33"
    },
    "4221": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x1094"
    },
    "4224": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "JUMPI",
      "path": "33"
    },
    "4225": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x100"
    },
    "4228": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DUP1",
      "path": "33"
    },
    "4229": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DUP4",
      "path": "33"
    },
    "4230": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SLOAD",
      "path": "33"
    },
    "4231": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DIV",
      "path": "33"
    },
    "4232": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "MUL",
      "path": "33"
    },
    "4233": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DUP4",
      "path": "33"
    },
    "4234": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "MSTORE",
      "path": "33"
    },
    "4235": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "4236": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x20"
    },
    "4238": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "ADD",
      "path": "33"
    },
    "4239": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "4240": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x10BF"
    },
    "4243": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "JUMP",
      "path": "33"
    },
    "4244": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "4245": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DUP3",
      "path": "33"
    },
    "4246": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "ADD",
      "path": "33"
    },
    "4247": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "4248": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "4249": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x0"
    },
    "4251": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "MSTORE",
      "path": "33"
    },
    "4252": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x20"
    },
    "4254": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x0"
    },
    "4256": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "KECCAK256",
      "path": "33"
    },
    "4257": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "4258": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "4259": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DUP2",
      "path": "33"
    },
    "4260": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SLOAD",
      "path": "33"
    },
    "4261": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DUP2",
      "path": "33"
    },
    "4262": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "MSTORE",
      "path": "33"
    },
    "4263": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "4264": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x1"
    },
    "4266": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "ADD",
      "path": "33"
    },
    "4267": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "4268": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x20"
    },
    "4270": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "ADD",
      "path": "33"
    },
    "4271": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DUP1",
      "path": "33"
    },
    "4272": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DUP4",
      "path": "33"
    },
    "4273": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "GT",
      "path": "33"
    },
    "4274": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x10A2"
    },
    "4277": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "JUMPI",
      "path": "33"
    },
    "4278": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DUP3",
      "path": "33"
    },
    "4279": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "4280": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SUB",
      "path": "33"
    },
    "4281": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x1F"
    },
    "4283": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "AND",
      "path": "33"
    },
    "4284": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DUP3",
      "path": "33"
    },
    "4285": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "ADD",
      "path": "33"
    },
    "4286": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "4287": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "4288": {
      "op": "POP"
    },
    "4289": {
      "op": "POP"
    },
    "4290": {
      "op": "POP"
    },
    "4291": {
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x2"
    },
    "4293": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "4294": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP4",
      "path": "33"
    },
    "4295": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "ADD",
      "path": "33"
    },
    "4296": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SLOAD",
      "path": "33"
    },
    "4297": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "4298": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "SWAP3",
      "path": "33"
    },
    "4299": {
      "op": "POP"
    },
    "4300": {
      "op": "POP"
    },
    "4301": {
      "offset": [
        1234,
        1276
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0xFF"
    },
    "4303": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "AND",
      "path": "33"
    },
    "4304": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1234,
        1276
      ],
      "op": "DUP4",
      "path": "33"
    },
    "4305": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "jump": "o",
      "offset": [
        1234,
        1276
      ],
      "op": "JUMP",
      "path": "33"
    },
    "4306": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10619,
        11391
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "4307": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10891,
        10904
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x2"
    },
    "4309": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10891,
        10904
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "4310": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10931,
        11108
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "4312": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10931,
        11108
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "4313": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10784,
        10791
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "4315": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10784,
        10791
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "4316": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10784,
        10791
      ],
      "op": "DUP3",
      "path": "29"
    },
    "4317": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10784,
        10791
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "4318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4322": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4324": {
      "op": "SHL"
    },
    "4325": {
      "op": "SUB"
    },
    "4326": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10891,
        10904
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4327": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10891,
        10904
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "4328": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10891,
        10904
      ],
      "op": "AND",
      "path": "29"
    },
    "4329": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10891,
        10904
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4330": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10931,
        11108
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x10FB"
    },
    "4333": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10931,
        11108
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4334": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11031,
        11036
      ],
      "op": "DUP8",
      "path": "29"
    },
    "4335": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11031,
        11036
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4336": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11054,
        11066
      ],
      "op": "DUP8",
      "path": "29"
    },
    "4337": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11054,
        11066
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4338": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11084,
        11094
      ],
      "op": "DUP8",
      "path": "29"
    },
    "4339": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11084,
        11094
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4340": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10931,
        11108
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x24"
    },
    "4342": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10931,
        11108
      ],
      "op": "ADD",
      "path": "29"
    },
    "4343": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10931,
        11108
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x2375"
    },
    "4346": {
      "fn": "CLHouse.PropRequestToJoin",
      "jump": "i",
      "offset": [
        10931,
        11108
      ],
      "op": "JUMP",
      "path": "29"
    },
    "4347": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10931,
        11108
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "4348": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10931,
        11108
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "4350": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10931,
        11108
      ],
      "op": "DUP1",
      "path": "29"
    },
    "4351": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10931,
        11108
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "4352": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4354": {
      "op": "NOT"
    },
    "4355": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10931,
        11108
      ],
      "op": "DUP2",
      "path": "29"
    },
    "4356": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10931,
        11108
      ],
      "op": "DUP5",
      "path": "29"
    },
    "4357": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10931,
        11108
      ],
      "op": "SUB",
      "path": "29"
    },
    "4358": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10931,
        11108
      ],
      "op": "ADD",
      "path": "29"
    },
    "4359": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10931,
        11108
      ],
      "op": "DUP2",
      "path": "29"
    },
    "4360": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10931,
        11108
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "4361": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10931,
        11108
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "4362": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10931,
        11108
      ],
      "op": "DUP2",
      "path": "29"
    },
    "4363": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10931,
        11108
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "4364": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10931,
        11108
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "4366": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10931,
        11108
      ],
      "op": "DUP3",
      "path": "29"
    },
    "4367": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10931,
        11108
      ],
      "op": "ADD",
      "path": "29"
    },
    "4368": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10931,
        11108
      ],
      "op": "DUP1",
      "path": "29"
    },
    "4369": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10931,
        11108
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "4370": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4374": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4376": {
      "op": "SHL"
    },
    "4377": {
      "op": "SUB"
    },
    "4378": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10931,
        11108
      ],
      "op": "AND",
      "path": "29"
    },
    "4379": {
      "op": "PUSH4",
      "value": "0xA19A5F5"
    },
    "4384": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "4386": {
      "op": "SHL"
    },
    "4387": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10931,
        11108
      ],
      "op": "OR",
      "path": "29"
    },
    "4388": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10931,
        11108
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4389": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10931,
        11108
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "4390": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10891,
        11118
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "4391": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10891,
        11118
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x63C"
    },
    "4394": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10891,
        11118
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "4395": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10931,
        11108
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4396": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        10891,
        11118
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x20F5"
    },
    "4399": {
      "fn": "CLHouse.PropRequestToJoin",
      "jump": "i",
      "offset": [
        10891,
        11118
      ],
      "op": "JUMP",
      "path": "29"
    },
    "4400": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15182,
        15291
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "4401": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15232,
        15252
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x60"
    },
    "4403": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15272,
        15284
      ],
      "op": "PUSH1",
      "path": "29",
      "statement": 7,
      "value": "0xD"
    },
    "4405": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DUP1",
      "path": "29"
    },
    "4406": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "4407": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DUP1",
      "path": "29"
    },
    "4408": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "4410": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "MUL",
      "path": "29"
    },
    "4411": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "4413": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "ADD",
      "path": "29"
    },
    "4414": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "4416": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "4417": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4418": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DUP2",
      "path": "29"
    },
    "4419": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "ADD",
      "path": "29"
    },
    "4420": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "4422": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "4423": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DUP1",
      "path": "29"
    },
    "4424": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "4425": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "4426": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4427": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DUP2",
      "path": "29"
    },
    "4428": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DUP2",
      "path": "29"
    },
    "4429": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "4430": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "4432": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "ADD",
      "path": "29"
    },
    "4433": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "4435": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4436": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "4437": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DUP3",
      "path": "29"
    },
    "4438": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DUP3",
      "path": "29"
    },
    "4439": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "LT",
      "path": "29"
    },
    "4440": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "4441": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xB7F"
    },
    "4444": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "4445": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "4447": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DUP5",
      "path": "29"
    },
    "4448": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DUP2",
      "path": "29"
    },
    "4449": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "4450": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "4452": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4453": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DUP2",
      "path": "29"
    },
    "4454": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4455": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "4456": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "4458": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DUP1",
      "path": "29"
    },
    "4459": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "4460": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x120"
    },
    "4463": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DUP2",
      "path": "29"
    },
    "4464": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "ADD",
      "path": "29"
    },
    "4465": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4466": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "4467": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "4468": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x5"
    },
    "4470": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DUP6",
      "path": "29"
    },
    "4471": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "MUL",
      "path": "29"
    },
    "4472": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4473": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "4474": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "ADD",
      "path": "29"
    },
    "4475": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DUP1",
      "path": "29"
    },
    "4476": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "4477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4479": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4481": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4483": {
      "op": "SHL"
    },
    "4484": {
      "op": "SUB"
    },
    "4485": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DUP2",
      "path": "29"
    },
    "4486": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "AND",
      "path": "29"
    },
    "4487": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DUP4",
      "path": "29"
    },
    "4488": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "4489": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "4490": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "4491": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4492": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "4493": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4494": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DUP4",
      "path": "29"
    },
    "4495": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "ADD",
      "path": "29"
    },
    "4496": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4499": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4501": {
      "op": "SHL"
    },
    "4502": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4503": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DIV",
      "path": "29"
    },
    "4504": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0xFF"
    },
    "4506": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "AND",
      "path": "29"
    },
    "4507": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x8"
    },
    "4509": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DUP2",
      "path": "29"
    },
    "4510": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "GT",
      "path": "29"
    },
    "4511": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "4512": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x11AB"
    },
    "4515": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "4516": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x11AB"
    },
    "4519": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1E3B"
    },
    "4522": {
      "fn": "CLHouse.GetProposalList",
      "jump": "i",
      "offset": [
        15265,
        15284
      ],
      "op": "JUMP",
      "path": "29"
    },
    "4523": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "4524": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x8"
    },
    "4526": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DUP2",
      "path": "29"
    },
    "4527": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "GT",
      "path": "29"
    },
    "4528": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "4529": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x11BC"
    },
    "4532": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "4533": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x11BC"
    },
    "4536": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1E3B"
    },
    "4539": {
      "fn": "CLHouse.GetProposalList",
      "jump": "i",
      "offset": [
        15265,
        15284
      ],
      "op": "JUMP",
      "path": "29"
    },
    "4540": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "4541": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DUP2",
      "path": "29"
    },
    "4542": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "4543": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "4545": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "ADD",
      "path": "29"
    },
    "4546": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1"
    },
    "4548": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DUP3",
      "path": "29"
    },
    "4549": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "ADD",
      "path": "29"
    },
    "4550": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DUP1",
      "path": "29"
    },
    "4551": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "4552": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x11D0"
    },
    "4555": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4556": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x2156"
    },
    "4559": {
      "fn": "CLHouse.GetProposalList",
      "jump": "i",
      "offset": [
        15265,
        15284
      ],
      "op": "JUMP",
      "path": "29"
    },
    "4560": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "4561": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DUP1",
      "path": "29"
    },
    "4562": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1F"
    },
    "4564": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "ADD",
      "path": "29"
    },
    "4565": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "4567": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DUP1",
      "path": "29"
    },
    "4568": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "4569": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DIV",
      "path": "29"
    },
    "4570": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "MUL",
      "path": "29"
    },
    "4571": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "4573": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "ADD",
      "path": "29"
    },
    "4574": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "4576": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "4577": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4578": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DUP2",
      "path": "29"
    },
    "4579": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "ADD",
      "path": "29"
    },
    "4580": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "4582": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "4583": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DUP1",
      "path": "29"
    },
    "4584": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "4585": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "4586": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4587": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DUP2",
      "path": "29"
    },
    "4588": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DUP2",
      "path": "29"
    },
    "4589": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "4590": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "4592": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "ADD",
      "path": "29"
    },
    "4593": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DUP3",
      "path": "29"
    },
    "4594": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DUP1",
      "path": "29"
    },
    "4595": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "4596": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x11FC"
    },
    "4599": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4600": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x2156"
    },
    "4603": {
      "fn": "CLHouse.GetProposalList",
      "jump": "i",
      "offset": [
        15265,
        15284
      ],
      "op": "JUMP",
      "path": "29"
    },
    "4604": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "4605": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DUP1",
      "path": "29"
    },
    "4606": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "4607": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1249"
    },
    "4610": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "4611": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DUP1",
      "path": "29"
    },
    "4612": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1F"
    },
    "4614": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "LT",
      "path": "29"
    },
    "4615": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x121E"
    },
    "4618": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "4619": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x100"
    },
    "4622": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DUP1",
      "path": "29"
    },
    "4623": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DUP4",
      "path": "29"
    },
    "4624": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "4625": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DIV",
      "path": "29"
    },
    "4626": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "MUL",
      "path": "29"
    },
    "4627": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DUP4",
      "path": "29"
    },
    "4628": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "4629": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "4630": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "4632": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "ADD",
      "path": "29"
    },
    "4633": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "4634": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1249"
    },
    "4637": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "JUMP",
      "path": "29"
    },
    "4638": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "4639": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DUP3",
      "path": "29"
    },
    "4640": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "ADD",
      "path": "29"
    },
    "4641": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "4642": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4643": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "4645": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "4646": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "4648": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "4650": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "4651": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4652": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "4653": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DUP2",
      "path": "29"
    },
    "4654": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "4655": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DUP2",
      "path": "29"
    },
    "4656": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "4657": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4658": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1"
    },
    "4660": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "ADD",
      "path": "29"
    },
    "4661": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4662": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "4664": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "ADD",
      "path": "29"
    },
    "4665": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DUP1",
      "path": "29"
    },
    "4666": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DUP4",
      "path": "29"
    },
    "4667": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "GT",
      "path": "29"
    },
    "4668": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x122C"
    },
    "4671": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "4672": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DUP3",
      "path": "29"
    },
    "4673": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4674": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "SUB",
      "path": "29"
    },
    "4675": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1F"
    },
    "4677": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "AND",
      "path": "29"
    },
    "4678": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DUP3",
      "path": "29"
    },
    "4679": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "ADD",
      "path": "29"
    },
    "4680": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "4681": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "4682": {
      "op": "POP"
    },
    "4683": {
      "op": "POP"
    },
    "4684": {
      "op": "POP"
    },
    "4685": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "4686": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DUP4",
      "path": "29"
    },
    "4687": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "4688": {
      "op": "POP"
    },
    "4689": {
      "op": "POP"
    },
    "4690": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x2"
    },
    "4692": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DUP3",
      "path": "29"
    },
    "4693": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "ADD",
      "path": "29"
    },
    "4694": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "4695": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "4697": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DUP1",
      "path": "29"
    },
    "4698": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DUP4",
      "path": "29"
    },
    "4699": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "ADD",
      "path": "29"
    },
    "4700": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "4701": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4702": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "4703": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "4704": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x3"
    },
    "4706": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DUP4",
      "path": "29"
    },
    "4707": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "ADD",
      "path": "29"
    },
    "4708": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "4709": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0xFF"
    },
    "4711": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DUP1",
      "path": "29"
    },
    "4712": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DUP3",
      "path": "29"
    },
    "4713": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "AND",
      "path": "29"
    },
    "4714": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "4716": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DUP6",
      "path": "29"
    },
    "4717": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "ADD",
      "path": "29"
    },
    "4718": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "4719": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x100"
    },
    "4722": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DUP3",
      "path": "29"
    },
    "4723": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DIV",
      "path": "29"
    },
    "4724": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DUP2",
      "path": "29"
    },
    "4725": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "AND",
      "path": "29"
    },
    "4726": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x60"
    },
    "4728": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DUP6",
      "path": "29"
    },
    "4729": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "ADD",
      "path": "29"
    },
    "4730": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "4731": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH3",
      "path": "29",
      "value": "0x10000"
    },
    "4735": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DUP3",
      "path": "29"
    },
    "4736": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DIV",
      "path": "29"
    },
    "4737": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DUP2",
      "path": "29"
    },
    "4738": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "AND",
      "path": "29"
    },
    "4739": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "4740": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "4741": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x80"
    },
    "4743": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DUP6",
      "path": "29"
    },
    "4744": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "ADD",
      "path": "29"
    },
    "4745": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "4746": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x1000000"
    },
    "4751": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4752": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "4753": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DIV",
      "path": "29"
    },
    "4754": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "AND",
      "path": "29"
    },
    "4755": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "4756": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "4757": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0xA0"
    },
    "4759": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DUP4",
      "path": "29"
    },
    "4760": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "ADD",
      "path": "29"
    },
    "4761": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "4762": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "4764": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4765": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "4766": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "ADD",
      "path": "29"
    },
    "4767": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "4768": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0xC0"
    },
    "4770": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4771": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "4772": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "ADD",
      "path": "29"
    },
    "4773": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "4774": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4775": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "DUP3",
      "path": "29"
    },
    "4776": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "4777": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1"
    },
    "4779": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "4780": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4781": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "4782": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "ADD",
      "path": "29"
    },
    "4783": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "4784": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "ADD",
      "path": "29"
    },
    "4785": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1154"
    },
    "4788": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        15265,
        15284
      ],
      "op": "JUMP",
      "path": "29"
    },
    "4789": {
      "offset": [
        1282,
        1326
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "4790": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0xF"
    },
    "4792": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "DUP2",
      "path": "33"
    },
    "4793": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "DUP2",
      "path": "33"
    },
    "4794": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "SLOAD",
      "path": "33"
    },
    "4795": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "DUP2",
      "path": "33"
    },
    "4796": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "LT",
      "path": "33"
    },
    "4797": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x12C5"
    },
    "4800": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "JUMPI",
      "path": "33"
    },
    "4801": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x0"
    },
    "4803": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "DUP1",
      "path": "33"
    },
    "4804": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "REVERT",
      "path": "33"
    },
    "4805": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "4806": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x0"
    },
    "4808": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "4809": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "DUP3",
      "path": "33"
    },
    "4810": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "MSTORE",
      "path": "33"
    },
    "4811": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x20"
    },
    "4813": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "4814": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "4815": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "KECCAK256",
      "path": "33"
    },
    "4816": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x4"
    },
    "4818": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "4819": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "4820": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "MUL",
      "path": "33"
    },
    "4821": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "ADD",
      "path": "33"
    },
    "4822": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "DUP1",
      "path": "33"
    },
    "4823": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "SLOAD",
      "path": "33"
    },
    "4824": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x1"
    },
    "4826": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "DUP3",
      "path": "33"
    },
    "4827": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "ADD",
      "path": "33"
    },
    "4828": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "SLOAD",
      "path": "33"
    },
    "4829": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x2"
    },
    "4831": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "DUP4",
      "path": "33"
    },
    "4832": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "ADD",
      "path": "33"
    },
    "4833": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "SLOAD",
      "path": "33"
    },
    "4834": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x3"
    },
    "4836": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "4837": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "SWAP4",
      "path": "33"
    },
    "4838": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "ADD",
      "path": "33"
    },
    "4839": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "SLOAD",
      "path": "33"
    },
    "4840": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4842": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4844": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4846": {
      "op": "SHL"
    },
    "4847": {
      "op": "SUB"
    },
    "4848": {
      "offset": [
        1282,
        1326
      ],
      "op": "SWAP3",
      "path": "33"
    },
    "4849": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "DUP4",
      "path": "33"
    },
    "4850": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "AND",
      "path": "33"
    },
    "4851": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "SWAP5",
      "path": "33"
    },
    "4852": {
      "op": "POP"
    },
    "4853": {
      "offset": [
        1282,
        1326
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "4854": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "SWAP3",
      "path": "33"
    },
    "4855": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "DUP3",
      "path": "33"
    },
    "4856": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "AND",
      "path": "33"
    },
    "4857": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "4858": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "AND",
      "path": "33"
    },
    "4859": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1282,
        1326
      ],
      "op": "DUP5",
      "path": "33"
    },
    "4860": {
      "fn": "CLHouse.GetProposalList",
      "jump": "o",
      "offset": [
        1282,
        1326
      ],
      "op": "JUMP",
      "path": "33"
    },
    "4861": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3469,
        4235
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "4862": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3728,
        3741
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x2"
    },
    "4864": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3728,
        3741
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "4865": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3768,
        3976
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "4867": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3768,
        3976
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "4868": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3704,
        3722
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "4870": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3704,
        3722
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "4871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4875": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4877": {
      "op": "SHL"
    },
    "4878": {
      "op": "SUB"
    },
    "4879": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3728,
        3741
      ],
      "op": "AND",
      "path": "29"
    },
    "4880": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3728,
        3741
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4881": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3768,
        3976
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1324"
    },
    "4884": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3768,
        3976
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4885": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3869,
        3876
      ],
      "op": "DUP8",
      "path": "29"
    },
    "4886": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3869,
        3876
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4887": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3894,
        3902
      ],
      "op": "DUP8",
      "path": "29"
    },
    "4888": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3894,
        3902
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4889": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3920,
        3934
      ],
      "op": "DUP8",
      "path": "29"
    },
    "4890": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3920,
        3934
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4891": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3952,
        3962
      ],
      "op": "DUP8",
      "path": "29"
    },
    "4892": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3952,
        3962
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4893": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3768,
        3976
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x24"
    },
    "4895": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3768,
        3976
      ],
      "op": "ADD",
      "path": "29"
    },
    "4896": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3768,
        3976
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x23B8"
    },
    "4899": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        3768,
        3976
      ],
      "op": "JUMP",
      "path": "29"
    },
    "4900": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3768,
        3976
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "4901": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3768,
        3976
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "4903": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3768,
        3976
      ],
      "op": "DUP1",
      "path": "29"
    },
    "4904": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3768,
        3976
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "4905": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4907": {
      "op": "NOT"
    },
    "4908": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3768,
        3976
      ],
      "op": "DUP2",
      "path": "29"
    },
    "4909": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3768,
        3976
      ],
      "op": "DUP5",
      "path": "29"
    },
    "4910": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3768,
        3976
      ],
      "op": "SUB",
      "path": "29"
    },
    "4911": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3768,
        3976
      ],
      "op": "ADD",
      "path": "29"
    },
    "4912": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3768,
        3976
      ],
      "op": "DUP2",
      "path": "29"
    },
    "4913": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3768,
        3976
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "4914": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3768,
        3976
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "4915": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3768,
        3976
      ],
      "op": "DUP2",
      "path": "29"
    },
    "4916": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3768,
        3976
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "4917": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3768,
        3976
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "4919": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3768,
        3976
      ],
      "op": "DUP3",
      "path": "29"
    },
    "4920": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3768,
        3976
      ],
      "op": "ADD",
      "path": "29"
    },
    "4921": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3768,
        3976
      ],
      "op": "DUP1",
      "path": "29"
    },
    "4922": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3768,
        3976
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "4923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4927": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4929": {
      "op": "SHL"
    },
    "4930": {
      "op": "SUB"
    },
    "4931": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3768,
        3976
      ],
      "op": "AND",
      "path": "29"
    },
    "4932": {
      "op": "PUSH4",
      "value": "0x18567541"
    },
    "4937": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "4939": {
      "op": "SHL"
    },
    "4940": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3768,
        3976
      ],
      "op": "OR",
      "path": "29"
    },
    "4941": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3768,
        3976
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4942": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3768,
        3976
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "4943": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3728,
        3986
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "4944": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3728,
        3986
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1359"
    },
    "4947": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3728,
        3986
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "4948": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3768,
        3976
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4949": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3728,
        3986
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x20F5"
    },
    "4952": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        3728,
        3986
      ],
      "op": "JUMP",
      "path": "29"
    },
    "4953": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3728,
        3986
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "4954": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3728,
        3986
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "4956": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3728,
        3986
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "4958": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3728,
        3986
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "4959": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3728,
        3986
      ],
      "op": "DUP1",
      "path": "29"
    },
    "4960": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3728,
        3986
      ],
      "op": "DUP4",
      "path": "29"
    },
    "4961": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3728,
        3986
      ],
      "op": "SUB",
      "path": "29"
    },
    "4962": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3728,
        3986
      ],
      "op": "DUP2",
      "path": "29"
    },
    "4963": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3728,
        3986
      ],
      "op": "DUP6",
      "path": "29"
    },
    "4964": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3728,
        3986
      ],
      "op": "GAS",
      "path": "29"
    },
    "4965": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3728,
        3986
      ],
      "op": "DELEGATECALL",
      "path": "29"
    },
    "4966": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3728,
        3986
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "4967": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3728,
        3986
      ],
      "op": "POP",
      "path": "29"
    },
    "4968": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3728,
        3986
      ],
      "op": "POP",
      "path": "29"
    },
    "4969": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3728,
        3986
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "4970": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3728,
        3986
      ],
      "op": "DUP1",
      "path": "29"
    },
    "4971": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3728,
        3986
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "4973": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3728,
        3986
      ],
      "op": "DUP2",
      "path": "29"
    },
    "4974": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3728,
        3986
      ],
      "op": "EQ",
      "path": "29"
    },
    "4975": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3728,
        3986
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1394"
    },
    "4978": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3728,
        3986
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "4979": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3728,
        3986
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "4981": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3728,
        3986
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "4982": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3728,
        3986
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "4983": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3728,
        3986
      ],
      "op": "POP",
      "path": "29"
    },
    "4984": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3728,
        3986
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1F"
    },
    "4986": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3728,
        3986
      ],
      "op": "NOT",
      "path": "29"
    },
    "4987": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3728,
        3986
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x3F"
    },
    "4989": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3728,
        3986
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "4990": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3728,
        3986
      ],
      "op": "ADD",
      "path": "29"
    },
    "4991": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3728,
        3986
      ],
      "op": "AND",
      "path": "29"
    },
    "4992": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3728,
        3986
      ],
      "op": "DUP3",
      "path": "29"
    },
    "4993": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3728,
        3986
      ],
      "op": "ADD",
      "path": "29"
    },
    "4994": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3728,
        3986
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "4996": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3728,
        3986
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "4997": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3728,
        3986
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "4998": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3728,
        3986
      ],
      "op": "DUP3",
      "path": "29"
    },
    "4999": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3728,
        3986
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "5000": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3728,
        3986
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "5001": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3728,
        3986
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "5003": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3728,
        3986
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "5005": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3728,
        3986
      ],
      "op": "DUP5",
      "path": "29"
    },
    "5006": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3728,
        3986
      ],
      "op": "ADD",
      "path": "29"
    },
    "5007": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3728,
        3986
      ],
      "op": "RETURNDATACOPY",
      "path": "29"
    },
    "5008": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3728,
        3986
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1399"
    },
    "5011": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3728,
        3986
      ],
      "op": "JUMP",
      "path": "29"
    },
    "5012": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3728,
        3986
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "5013": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3728,
        3986
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x60"
    },
    "5015": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3728,
        3986
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "5016": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3728,
        3986
      ],
      "op": "POP",
      "path": "29"
    },
    "5017": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3728,
        3986
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "5018": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3728,
        3986
      ],
      "op": "POP",
      "path": "29"
    },
    "5019": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3703,
        3986
      ],
      "op": "POP",
      "path": "29"
    },
    "5020": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3703,
        3986
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "5021": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3703,
        3986
      ],
      "op": "POP",
      "path": "29"
    },
    "5022": {
      "branch": 12,
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4002,
        4015
      ],
      "op": "DUP1",
      "path": "29",
      "statement": 8
    },
    "5023": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3997,
        4229
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x13AF"
    },
    "5026": {
      "branch": 12,
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3997,
        4229
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "5027": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4076,
        4080
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "5029": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4070,
        4081
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "5030": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4110,
        4126
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "5031": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4166,
        4170
      ],
      "op": "DUP1",
      "path": "29"
    },
    "5032": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4163,
        4164
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "5034": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4158,
        4161
      ],
      "op": "DUP4",
      "path": "29"
    },
    "5035": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4143,
        4171
      ],
      "op": "RETURNDATACOPY",
      "path": "29"
    },
    "5036": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4200,
        4204
      ],
      "op": "DUP1",
      "path": "29"
    },
    "5037": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4195,
        4198
      ],
      "op": "DUP3",
      "path": "29"
    },
    "5038": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4188,
        4205
      ],
      "op": "REVERT",
      "path": "29"
    },
    "5039": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3997,
        4229
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "5040": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3635,
        4235
      ],
      "op": "POP",
      "path": "29"
    },
    "5041": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3469,
        4235
      ],
      "op": "POP",
      "path": "29"
    },
    "5042": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3469,
        4235
      ],
      "op": "POP",
      "path": "29"
    },
    "5043": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3469,
        4235
      ],
      "op": "POP",
      "path": "29"
    },
    "5044": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3469,
        4235
      ],
      "op": "POP",
      "path": "29"
    },
    "5045": {
      "fn": "CLHouse.VoteProposal",
      "jump": "o",
      "offset": [
        3469,
        4235
      ],
      "op": "JUMP",
      "path": "29"
    },
    "5046": {
      "offset": [
        1086,
        1153
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "5047": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0xC"
    },
    "5049": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x20"
    },
    "5051": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "5052": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP2",
      "path": "33"
    },
    "5053": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "MSTORE",
      "path": "33"
    },
    "5054": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x0"
    },
    "5056": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP3",
      "path": "33"
    },
    "5057": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP4",
      "path": "33"
    },
    "5058": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "MSTORE",
      "path": "33"
    },
    "5059": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x40"
    },
    "5061": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP1",
      "path": "33"
    },
    "5062": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP5",
      "path": "33"
    },
    "5063": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "KECCAK256",
      "path": "33"
    },
    "5064": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "5065": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "5066": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "MSTORE",
      "path": "33"
    },
    "5067": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "5068": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP3",
      "path": "33"
    },
    "5069": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "MSTORE",
      "path": "33"
    },
    "5070": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "5071": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "KECCAK256",
      "path": "33"
    },
    "5072": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP1",
      "path": "33"
    },
    "5073": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SLOAD",
      "path": "33"
    },
    "5074": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x1"
    },
    "5076": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP3",
      "path": "33"
    },
    "5077": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "ADD",
      "path": "33"
    },
    "5078": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP1",
      "path": "33"
    },
    "5079": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SLOAD",
      "path": "33"
    },
    "5080": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0xFF"
    },
    "5082": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP1",
      "path": "33"
    },
    "5083": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP5",
      "path": "33"
    },
    "5084": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "AND",
      "path": "33"
    },
    "5085": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP5",
      "path": "33"
    },
    "5086": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x100"
    },
    "5089": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "5090": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP5",
      "path": "33"
    },
    "5091": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DIV",
      "path": "33"
    },
    "5092": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "AND",
      "path": "33"
    },
    "5093": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP3",
      "path": "33"
    },
    "5094": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "5095": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "5096": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x13F0"
    },
    "5099": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "5100": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x2156"
    },
    "5103": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        1086,
        1153
      ],
      "op": "JUMP",
      "path": "33"
    },
    "5104": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "5105": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP1",
      "path": "33"
    },
    "5106": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x1F"
    },
    "5108": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "ADD",
      "path": "33"
    },
    "5109": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x20"
    },
    "5111": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP1",
      "path": "33"
    },
    "5112": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "5113": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DIV",
      "path": "33"
    },
    "5114": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "MUL",
      "path": "33"
    },
    "5115": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x20"
    },
    "5117": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "ADD",
      "path": "33"
    },
    "5118": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x40"
    },
    "5120": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "MLOAD",
      "path": "33"
    },
    "5121": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "5122": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP2",
      "path": "33"
    },
    "5123": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "ADD",
      "path": "33"
    },
    "5124": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x40"
    },
    "5126": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "MSTORE",
      "path": "33"
    },
    "5127": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP1",
      "path": "33"
    },
    "5128": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP3",
      "path": "33"
    },
    "5129": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "5130": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "5131": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP2",
      "path": "33"
    },
    "5132": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP2",
      "path": "33"
    },
    "5133": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "MSTORE",
      "path": "33"
    },
    "5134": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x20"
    },
    "5136": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "ADD",
      "path": "33"
    },
    "5137": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP3",
      "path": "33"
    },
    "5138": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP1",
      "path": "33"
    },
    "5139": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SLOAD",
      "path": "33"
    },
    "5140": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x141C"
    },
    "5143": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "5144": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x2156"
    },
    "5147": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        1086,
        1153
      ],
      "op": "JUMP",
      "path": "33"
    },
    "5148": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "5149": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP1",
      "path": "33"
    },
    "5150": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "ISZERO",
      "path": "33"
    },
    "5151": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x1469"
    },
    "5154": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "JUMPI",
      "path": "33"
    },
    "5155": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP1",
      "path": "33"
    },
    "5156": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x1F"
    },
    "5158": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "LT",
      "path": "33"
    },
    "5159": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x143E"
    },
    "5162": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "JUMPI",
      "path": "33"
    },
    "5163": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x100"
    },
    "5166": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP1",
      "path": "33"
    },
    "5167": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP4",
      "path": "33"
    },
    "5168": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SLOAD",
      "path": "33"
    },
    "5169": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DIV",
      "path": "33"
    },
    "5170": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "MUL",
      "path": "33"
    },
    "5171": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP4",
      "path": "33"
    },
    "5172": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "MSTORE",
      "path": "33"
    },
    "5173": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "5174": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x20"
    },
    "5176": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "ADD",
      "path": "33"
    },
    "5177": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "5178": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x1469"
    },
    "5181": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "JUMP",
      "path": "33"
    },
    "5182": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "5183": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP3",
      "path": "33"
    },
    "5184": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "ADD",
      "path": "33"
    },
    "5185": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "5186": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "5187": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x0"
    },
    "5189": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "MSTORE",
      "path": "33"
    },
    "5190": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x20"
    },
    "5192": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x0"
    },
    "5194": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "KECCAK256",
      "path": "33"
    },
    "5195": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "5196": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "5197": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP2",
      "path": "33"
    },
    "5198": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SLOAD",
      "path": "33"
    },
    "5199": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP2",
      "path": "33"
    },
    "5200": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "MSTORE",
      "path": "33"
    },
    "5201": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "5202": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x1"
    },
    "5204": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "ADD",
      "path": "33"
    },
    "5205": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "5206": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x20"
    },
    "5208": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "ADD",
      "path": "33"
    },
    "5209": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP1",
      "path": "33"
    },
    "5210": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP4",
      "path": "33"
    },
    "5211": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "GT",
      "path": "33"
    },
    "5212": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x144C"
    },
    "5215": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "JUMPI",
      "path": "33"
    },
    "5216": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP3",
      "path": "33"
    },
    "5217": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "5218": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SUB",
      "path": "33"
    },
    "5219": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x1F"
    },
    "5221": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "AND",
      "path": "33"
    },
    "5222": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP3",
      "path": "33"
    },
    "5223": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "ADD",
      "path": "33"
    },
    "5224": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "5225": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "5226": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "POP",
      "path": "33"
    },
    "5227": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "POP",
      "path": "33"
    },
    "5228": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "POP",
      "path": "33"
    },
    "5229": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "POP",
      "path": "33"
    },
    "5230": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "POP",
      "path": "33"
    },
    "5231": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "5232": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "POP",
      "path": "33"
    },
    "5233": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1086,
        1153
      ],
      "op": "DUP4",
      "path": "33"
    },
    "5234": {
      "fn": "CLHouse.VoteProposal",
      "jump": "o",
      "offset": [
        1086,
        1153
      ],
      "op": "JUMP",
      "path": "33"
    },
    "5235": {
      "offset": [
        1195,
        1228
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "5236": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0xD"
    },
    "5238": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP2",
      "path": "33"
    },
    "5239": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP2",
      "path": "33"
    },
    "5240": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SLOAD",
      "path": "33"
    },
    "5241": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP2",
      "path": "33"
    },
    "5242": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "LT",
      "path": "33"
    },
    "5243": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x1483"
    },
    "5246": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "JUMPI",
      "path": "33"
    },
    "5247": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x0"
    },
    "5249": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP1",
      "path": "33"
    },
    "5250": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "REVERT",
      "path": "33"
    },
    "5251": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "5252": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x0"
    },
    "5254": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "5255": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP3",
      "path": "33"
    },
    "5256": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "MSTORE",
      "path": "33"
    },
    "5257": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x20"
    },
    "5259": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "5260": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "5261": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "KECCAK256",
      "path": "33"
    },
    "5262": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x5"
    },
    "5264": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "5265": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "5266": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "MUL",
      "path": "33"
    },
    "5267": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "ADD",
      "path": "33"
    },
    "5268": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP1",
      "path": "33"
    },
    "5269": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SLOAD",
      "path": "33"
    },
    "5270": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x1"
    },
    "5272": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP3",
      "path": "33"
    },
    "5273": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "ADD",
      "path": "33"
    },
    "5274": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP1",
      "path": "33"
    },
    "5275": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SLOAD",
      "path": "33"
    },
    "5276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5280": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5282": {
      "op": "SHL"
    },
    "5283": {
      "op": "SUB"
    },
    "5284": {
      "offset": [
        1195,
        1228
      ],
      "op": "DUP4",
      "path": "33"
    },
    "5285": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "AND",
      "path": "33"
    },
    "5286": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP5",
      "path": "33"
    },
    "5287": {
      "op": "POP"
    },
    "5288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5290": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5292": {
      "op": "SHL"
    },
    "5293": {
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "5294": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP3",
      "path": "33"
    },
    "5295": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DIV",
      "path": "33"
    },
    "5296": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0xFF"
    },
    "5298": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "AND",
      "path": "33"
    },
    "5299": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP3",
      "path": "33"
    },
    "5300": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "5301": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x14BD"
    },
    "5304": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "5305": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x2156"
    },
    "5308": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        1195,
        1228
      ],
      "op": "JUMP",
      "path": "33"
    },
    "5309": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "5310": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP1",
      "path": "33"
    },
    "5311": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x1F"
    },
    "5313": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "ADD",
      "path": "33"
    },
    "5314": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x20"
    },
    "5316": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP1",
      "path": "33"
    },
    "5317": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "5318": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DIV",
      "path": "33"
    },
    "5319": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "MUL",
      "path": "33"
    },
    "5320": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x20"
    },
    "5322": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "ADD",
      "path": "33"
    },
    "5323": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x40"
    },
    "5325": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "MLOAD",
      "path": "33"
    },
    "5326": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "5327": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP2",
      "path": "33"
    },
    "5328": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "ADD",
      "path": "33"
    },
    "5329": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x40"
    },
    "5331": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "MSTORE",
      "path": "33"
    },
    "5332": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP1",
      "path": "33"
    },
    "5333": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP3",
      "path": "33"
    },
    "5334": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "5335": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "5336": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP2",
      "path": "33"
    },
    "5337": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP2",
      "path": "33"
    },
    "5338": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "MSTORE",
      "path": "33"
    },
    "5339": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x20"
    },
    "5341": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "ADD",
      "path": "33"
    },
    "5342": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP3",
      "path": "33"
    },
    "5343": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP1",
      "path": "33"
    },
    "5344": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SLOAD",
      "path": "33"
    },
    "5345": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x14E9"
    },
    "5348": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "5349": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x2156"
    },
    "5352": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        1195,
        1228
      ],
      "op": "JUMP",
      "path": "33"
    },
    "5353": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "5354": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP1",
      "path": "33"
    },
    "5355": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "ISZERO",
      "path": "33"
    },
    "5356": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x1536"
    },
    "5359": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "JUMPI",
      "path": "33"
    },
    "5360": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP1",
      "path": "33"
    },
    "5361": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x1F"
    },
    "5363": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "LT",
      "path": "33"
    },
    "5364": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x150B"
    },
    "5367": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "JUMPI",
      "path": "33"
    },
    "5368": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x100"
    },
    "5371": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP1",
      "path": "33"
    },
    "5372": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP4",
      "path": "33"
    },
    "5373": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SLOAD",
      "path": "33"
    },
    "5374": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DIV",
      "path": "33"
    },
    "5375": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "MUL",
      "path": "33"
    },
    "5376": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP4",
      "path": "33"
    },
    "5377": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "MSTORE",
      "path": "33"
    },
    "5378": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "5379": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x20"
    },
    "5381": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "ADD",
      "path": "33"
    },
    "5382": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "5383": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x1536"
    },
    "5386": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "JUMP",
      "path": "33"
    },
    "5387": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "5388": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP3",
      "path": "33"
    },
    "5389": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "ADD",
      "path": "33"
    },
    "5390": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "5391": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "5392": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x0"
    },
    "5394": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "MSTORE",
      "path": "33"
    },
    "5395": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x20"
    },
    "5397": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x0"
    },
    "5399": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "KECCAK256",
      "path": "33"
    },
    "5400": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "5401": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "5402": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP2",
      "path": "33"
    },
    "5403": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SLOAD",
      "path": "33"
    },
    "5404": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP2",
      "path": "33"
    },
    "5405": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "MSTORE",
      "path": "33"
    },
    "5406": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "5407": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x1"
    },
    "5409": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "ADD",
      "path": "33"
    },
    "5410": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "5411": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x20"
    },
    "5413": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "ADD",
      "path": "33"
    },
    "5414": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP1",
      "path": "33"
    },
    "5415": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP4",
      "path": "33"
    },
    "5416": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "GT",
      "path": "33"
    },
    "5417": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x1519"
    },
    "5420": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "JUMPI",
      "path": "33"
    },
    "5421": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP3",
      "path": "33"
    },
    "5422": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "5423": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SUB",
      "path": "33"
    },
    "5424": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x1F"
    },
    "5426": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "AND",
      "path": "33"
    },
    "5427": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP3",
      "path": "33"
    },
    "5428": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "ADD",
      "path": "33"
    },
    "5429": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "5430": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "5431": {
      "op": "POP"
    },
    "5432": {
      "op": "POP"
    },
    "5433": {
      "op": "POP"
    },
    "5434": {
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x2"
    },
    "5436": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP5",
      "path": "33"
    },
    "5437": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "ADD",
      "path": "33"
    },
    "5438": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SLOAD",
      "path": "33"
    },
    "5439": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x3"
    },
    "5441": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP6",
      "path": "33"
    },
    "5442": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "ADD",
      "path": "33"
    },
    "5443": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SLOAD",
      "path": "33"
    },
    "5444": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x4"
    },
    "5446": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "5447": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP6",
      "path": "33"
    },
    "5448": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "ADD",
      "path": "33"
    },
    "5449": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SLOAD",
      "path": "33"
    },
    "5450": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP4",
      "path": "33"
    },
    "5451": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP5",
      "path": "33"
    },
    "5452": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "5453": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP4",
      "path": "33"
    },
    "5454": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0xFF"
    },
    "5456": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP1",
      "path": "33"
    },
    "5457": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP4",
      "path": "33"
    },
    "5458": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "AND",
      "path": "33"
    },
    "5459": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP5",
      "path": "33"
    },
    "5460": {
      "op": "POP"
    },
    "5461": {
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x100"
    },
    "5464": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP4",
      "path": "33"
    },
    "5465": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DIV",
      "path": "33"
    },
    "5466": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP2",
      "path": "33"
    },
    "5467": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "AND",
      "path": "33"
    },
    "5468": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP4",
      "path": "33"
    },
    "5469": {
      "op": "POP"
    },
    "5470": {
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH3",
      "path": "33",
      "value": "0x10000"
    },
    "5474": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP4",
      "path": "33"
    },
    "5475": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DIV",
      "path": "33"
    },
    "5476": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP2",
      "path": "33"
    },
    "5477": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "AND",
      "path": "33"
    },
    "5478": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP3",
      "path": "33"
    },
    "5479": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "PUSH4",
      "path": "33",
      "value": "0x1000000"
    },
    "5484": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "5485": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DIV",
      "path": "33"
    },
    "5486": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "AND",
      "path": "33"
    },
    "5487": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "5488": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1195,
        1228
      ],
      "op": "DUP10",
      "path": "33"
    },
    "5489": {
      "fn": "CLHouse.VoteProposal",
      "jump": "o",
      "offset": [
        1195,
        1228
      ],
      "op": "JUMP",
      "path": "33"
    },
    "5490": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8272,
        9168
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "5491": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8606
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x2"
    },
    "5493": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8606
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "5494": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8633,
        8882
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "5496": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8633,
        8882
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "5497": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8479,
        8493
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "5499": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8479,
        8493
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "5500": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8479,
        8493
      ],
      "op": "DUP3",
      "path": "29"
    },
    "5501": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8479,
        8493
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "5502": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5506": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5508": {
      "op": "SHL"
    },
    "5509": {
      "op": "SUB"
    },
    "5510": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8606
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "5511": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8606
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "5512": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8606
      ],
      "op": "AND",
      "path": "29"
    },
    "5513": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8606
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "5514": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8633,
        8882
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x159F"
    },
    "5517": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8633,
        8882
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "5518": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8746,
        8749
      ],
      "op": "DUP10",
      "path": "29"
    },
    "5519": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8746,
        8749
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "5520": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8767,
        8780
      ],
      "op": "DUP10",
      "path": "29"
    },
    "5521": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8767,
        8780
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "5522": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8798,
        8810
      ],
      "op": "DUP10",
      "path": "29"
    },
    "5523": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8798,
        8810
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "5524": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8828,
        8840
      ],
      "op": "DUP10",
      "path": "29"
    },
    "5525": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8828,
        8840
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "5526": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8858,
        8868
      ],
      "op": "DUP10",
      "path": "29"
    },
    "5527": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8858,
        8868
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "5528": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8633,
        8882
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x24"
    },
    "5530": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8633,
        8882
      ],
      "op": "ADD",
      "path": "29"
    },
    "5531": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8633,
        8882
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x23EB"
    },
    "5534": {
      "fn": "CLHouse.PropTxERC20",
      "jump": "i",
      "offset": [
        8633,
        8882
      ],
      "op": "JUMP",
      "path": "29"
    },
    "5535": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8633,
        8882
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "5536": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8633,
        8882
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "5538": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8633,
        8882
      ],
      "op": "DUP1",
      "path": "29"
    },
    "5539": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8633,
        8882
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "5540": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5542": {
      "op": "NOT"
    },
    "5543": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8633,
        8882
      ],
      "op": "DUP2",
      "path": "29"
    },
    "5544": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8633,
        8882
      ],
      "op": "DUP5",
      "path": "29"
    },
    "5545": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8633,
        8882
      ],
      "op": "SUB",
      "path": "29"
    },
    "5546": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8633,
        8882
      ],
      "op": "ADD",
      "path": "29"
    },
    "5547": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8633,
        8882
      ],
      "op": "DUP2",
      "path": "29"
    },
    "5548": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8633,
        8882
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "5549": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8633,
        8882
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "5550": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8633,
        8882
      ],
      "op": "DUP2",
      "path": "29"
    },
    "5551": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8633,
        8882
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "5552": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8633,
        8882
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "5554": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8633,
        8882
      ],
      "op": "DUP3",
      "path": "29"
    },
    "5555": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8633,
        8882
      ],
      "op": "ADD",
      "path": "29"
    },
    "5556": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8633,
        8882
      ],
      "op": "DUP1",
      "path": "29"
    },
    "5557": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8633,
        8882
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "5558": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5560": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5562": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5564": {
      "op": "SHL"
    },
    "5565": {
      "op": "SUB"
    },
    "5566": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8633,
        8882
      ],
      "op": "AND",
      "path": "29"
    },
    "5567": {
      "op": "PUSH4",
      "value": "0x6F2D58A7"
    },
    "5572": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "5574": {
      "op": "SHL"
    },
    "5575": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8633,
        8882
      ],
      "op": "OR",
      "path": "29"
    },
    "5576": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8633,
        8882
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "5577": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8633,
        8882
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "5578": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8892
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "5579": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8892
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x15D4"
    },
    "5582": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8892
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "5583": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8633,
        8882
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "5584": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8892
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x20F5"
    },
    "5587": {
      "fn": "CLHouse.PropTxERC20",
      "jump": "i",
      "offset": [
        8593,
        8892
      ],
      "op": "JUMP",
      "path": "29"
    },
    "5588": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8892
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "5589": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8892
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "5591": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8892
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "5593": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8892
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "5594": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8892
      ],
      "op": "DUP1",
      "path": "29"
    },
    "5595": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8892
      ],
      "op": "DUP4",
      "path": "29"
    },
    "5596": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8892
      ],
      "op": "SUB",
      "path": "29"
    },
    "5597": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8892
      ],
      "op": "DUP2",
      "path": "29"
    },
    "5598": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8892
      ],
      "op": "DUP6",
      "path": "29"
    },
    "5599": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8892
      ],
      "op": "GAS",
      "path": "29"
    },
    "5600": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8892
      ],
      "op": "DELEGATECALL",
      "path": "29"
    },
    "5601": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8892
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "5602": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8892
      ],
      "op": "POP",
      "path": "29"
    },
    "5603": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8892
      ],
      "op": "POP",
      "path": "29"
    },
    "5604": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8892
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "5605": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8892
      ],
      "op": "DUP1",
      "path": "29"
    },
    "5606": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8892
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "5608": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8892
      ],
      "op": "DUP2",
      "path": "29"
    },
    "5609": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8892
      ],
      "op": "EQ",
      "path": "29"
    },
    "5610": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8892
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x160F"
    },
    "5613": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8892
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "5614": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8892
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "5616": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8892
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "5617": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8892
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "5618": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8892
      ],
      "op": "POP",
      "path": "29"
    },
    "5619": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8892
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1F"
    },
    "5621": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8892
      ],
      "op": "NOT",
      "path": "29"
    },
    "5622": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8892
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x3F"
    },
    "5624": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8892
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "5625": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8892
      ],
      "op": "ADD",
      "path": "29"
    },
    "5626": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8892
      ],
      "op": "AND",
      "path": "29"
    },
    "5627": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8892
      ],
      "op": "DUP3",
      "path": "29"
    },
    "5628": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8892
      ],
      "op": "ADD",
      "path": "29"
    },
    "5629": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8892
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "5631": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8892
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "5632": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8892
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "5633": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8892
      ],
      "op": "DUP3",
      "path": "29"
    },
    "5634": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8892
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "5635": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8892
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "5636": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8892
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "5638": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8892
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "5640": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8892
      ],
      "op": "DUP5",
      "path": "29"
    },
    "5641": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8892
      ],
      "op": "ADD",
      "path": "29"
    },
    "5642": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8892
      ],
      "op": "RETURNDATACOPY",
      "path": "29"
    },
    "5643": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8892
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1614"
    },
    "5646": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8892
      ],
      "op": "JUMP",
      "path": "29"
    },
    "5647": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8892
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "5648": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8892
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x60"
    },
    "5650": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8892
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "5651": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8892
      ],
      "op": "POP",
      "path": "29"
    },
    "5652": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8892
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "5653": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8593,
        8892
      ],
      "op": "POP",
      "path": "29"
    },
    "5654": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8568,
        8892
      ],
      "op": "POP",
      "path": "29"
    },
    "5655": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8568,
        8892
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "5656": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8568,
        8892
      ],
      "op": "POP",
      "path": "29"
    },
    "5657": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8943,
        8947
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "5659": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8937,
        8948
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "5660": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8973,
        8989
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "5661": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9025,
        9029
      ],
      "op": "DUP1",
      "path": "29"
    },
    "5662": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9022,
        9023
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "5664": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9017,
        9020
      ],
      "op": "DUP4",
      "path": "29"
    },
    "5665": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9002,
        9030
      ],
      "op": "RETURNDATACOPY",
      "path": "29"
    },
    "5666": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9054,
        9067
      ],
      "op": "DUP3",
      "path": "29"
    },
    "5667": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9043,
        9119
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x162A"
    },
    "5670": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9043,
        9119
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "5671": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9100,
        9104
      ],
      "op": "DUP1",
      "path": "29"
    },
    "5672": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9095,
        9098
      ],
      "op": "DUP3",
      "path": "29"
    },
    "5673": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9088,
        9105
      ],
      "op": "REVERT",
      "path": "29"
    },
    "5674": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9043,
        9119
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "5675": {
      "op": "POP"
    },
    "5676": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9142,
        9152
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "5677": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9142,
        9152
      ],
      "op": "SWAP8",
      "path": "29"
    },
    "5678": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8272,
        9168
      ],
      "op": "SWAP7",
      "path": "29"
    },
    "5679": {
      "op": "POP"
    },
    "5680": {
      "op": "POP"
    },
    "5681": {
      "op": "POP"
    },
    "5682": {
      "op": "POP"
    },
    "5683": {
      "op": "POP"
    },
    "5684": {
      "op": "POP"
    },
    "5685": {
      "op": "POP"
    },
    "5686": {
      "fn": "CLHouse.PropTxERC20",
      "jump": "o",
      "offset": [
        8272,
        9168
      ],
      "op": "JUMP",
      "path": "29"
    },
    "5687": {
      "op": "JUMPDEST"
    },
    "5688": {
      "op": "DUP1"
    },
    "5689": {
      "op": "CALLDATALOAD"
    },
    "5690": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5694": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5696": {
      "op": "SHL"
    },
    "5697": {
      "op": "SUB"
    },
    "5698": {
      "op": "DUP2"
    },
    "5699": {
      "op": "AND"
    },
    "5700": {
      "op": "DUP2"
    },
    "5701": {
      "op": "EQ"
    },
    "5702": {
      "op": "PUSH2",
      "value": "0x164E"
    },
    "5705": {
      "op": "JUMPI"
    },
    "5706": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5708": {
      "op": "DUP1"
    },
    "5709": {
      "op": "REVERT"
    },
    "5710": {
      "op": "JUMPDEST"
    },
    "5711": {
      "op": "SWAP2"
    },
    "5712": {
      "op": "SWAP1"
    },
    "5713": {
      "op": "POP"
    },
    "5714": {
      "jump": "o",
      "op": "JUMP"
    },
    "5715": {
      "op": "JUMPDEST"
    },
    "5716": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5721": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5723": {
      "op": "SHL"
    },
    "5724": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5726": {
      "op": "MSTORE"
    },
    "5727": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "5729": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5731": {
      "op": "MSTORE"
    },
    "5732": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5734": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5736": {
      "op": "REVERT"
    },
    "5737": {
      "op": "JUMPDEST"
    },
    "5738": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5740": {
      "op": "MLOAD"
    },
    "5741": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5743": {
      "op": "DUP2"
    },
    "5744": {
      "op": "ADD"
    },
    "5745": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5749": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5751": {
      "op": "SHL"
    },
    "5752": {
      "op": "SUB"
    },
    "5753": {
      "op": "DUP2"
    },
    "5754": {
      "op": "GT"
    },
    "5755": {
      "op": "DUP3"
    },
    "5756": {
      "op": "DUP3"
    },
    "5757": {
      "op": "LT"
    },
    "5758": {
      "op": "OR"
    },
    "5759": {
      "op": "ISZERO"
    },
    "5760": {
      "op": "PUSH2",
      "value": "0x168B"
    },
    "5763": {
      "op": "JUMPI"
    },
    "5764": {
      "op": "PUSH2",
      "value": "0x168B"
    },
    "5767": {
      "op": "PUSH2",
      "value": "0x1653"
    },
    "5770": {
      "jump": "i",
      "op": "JUMP"
    },
    "5771": {
      "op": "JUMPDEST"
    },
    "5772": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5774": {
      "op": "MSTORE"
    },
    "5775": {
      "op": "SWAP1"
    },
    "5776": {
      "jump": "o",
      "op": "JUMP"
    },
    "5777": {
      "op": "JUMPDEST"
    },
    "5778": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5780": {
      "op": "MLOAD"
    },
    "5781": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5783": {
      "op": "DUP3"
    },
    "5784": {
      "op": "ADD"
    },
    "5785": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5787": {
      "op": "NOT"
    },
    "5788": {
      "op": "AND"
    },
    "5789": {
      "op": "DUP2"
    },
    "5790": {
      "op": "ADD"
    },
    "5791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5793": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5795": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5797": {
      "op": "SHL"
    },
    "5798": {
      "op": "SUB"
    },
    "5799": {
      "op": "DUP2"
    },
    "5800": {
      "op": "GT"
    },
    "5801": {
      "op": "DUP3"
    },
    "5802": {
      "op": "DUP3"
    },
    "5803": {
      "op": "LT"
    },
    "5804": {
      "op": "OR"
    },
    "5805": {
      "op": "ISZERO"
    },
    "5806": {
      "op": "PUSH2",
      "value": "0x16B9"
    },
    "5809": {
      "op": "JUMPI"
    },
    "5810": {
      "op": "PUSH2",
      "value": "0x16B9"
    },
    "5813": {
      "op": "PUSH2",
      "value": "0x1653"
    },
    "5816": {
      "jump": "i",
      "op": "JUMP"
    },
    "5817": {
      "op": "JUMPDEST"
    },
    "5818": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5820": {
      "op": "MSTORE"
    },
    "5821": {
      "op": "SWAP2"
    },
    "5822": {
      "op": "SWAP1"
    },
    "5823": {
      "op": "POP"
    },
    "5824": {
      "jump": "o",
      "op": "JUMP"
    },
    "5825": {
      "op": "JUMPDEST"
    },
    "5826": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5828": {
      "op": "DUP3"
    },
    "5829": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5831": {
      "op": "DUP4"
    },
    "5832": {
      "op": "ADD"
    },
    "5833": {
      "op": "SLT"
    },
    "5834": {
      "op": "PUSH2",
      "value": "0x16D2"
    },
    "5837": {
      "op": "JUMPI"
    },
    "5838": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5840": {
      "op": "DUP1"
    },
    "5841": {
      "op": "REVERT"
    },
    "5842": {
      "op": "JUMPDEST"
    },
    "5843": {
      "op": "DUP2"
    },
    "5844": {
      "op": "CALLDATALOAD"
    },
    "5845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5847": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5849": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5851": {
      "op": "SHL"
    },
    "5852": {
      "op": "SUB"
    },
    "5853": {
      "op": "DUP2"
    },
    "5854": {
      "op": "GT"
    },
    "5855": {
      "op": "ISZERO"
    },
    "5856": {
      "op": "PUSH2",
      "value": "0x16EB"
    },
    "5859": {
      "op": "JUMPI"
    },
    "5860": {
      "op": "PUSH2",
      "value": "0x16EB"
    },
    "5863": {
      "op": "PUSH2",
      "value": "0x1653"
    },
    "5866": {
      "jump": "i",
      "op": "JUMP"
    },
    "5867": {
      "op": "JUMPDEST"
    },
    "5868": {
      "op": "PUSH2",
      "value": "0x16FE"
    },
    "5871": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5873": {
      "op": "DUP3"
    },
    "5874": {
      "op": "ADD"
    },
    "5875": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5877": {
      "op": "NOT"
    },
    "5878": {
      "op": "AND"
    },
    "5879": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5881": {
      "op": "ADD"
    },
    "5882": {
      "op": "PUSH2",
      "value": "0x1691"
    },
    "5885": {
      "jump": "i",
      "op": "JUMP"
    },
    "5886": {
      "op": "JUMPDEST"
    },
    "5887": {
      "op": "DUP2"
    },
    "5888": {
      "op": "DUP2"
    },
    "5889": {
      "op": "MSTORE"
    },
    "5890": {
      "op": "DUP5"
    },
    "5891": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5893": {
      "op": "DUP4"
    },
    "5894": {
      "op": "DUP7"
    },
    "5895": {
      "op": "ADD"
    },
    "5896": {
      "op": "ADD"
    },
    "5897": {
      "op": "GT"
    },
    "5898": {
      "op": "ISZERO"
    },
    "5899": {
      "op": "PUSH2",
      "value": "0x1713"
    },
    "5902": {
      "op": "JUMPI"
    },
    "5903": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5905": {
      "op": "DUP1"
    },
    "5906": {
      "op": "REVERT"
    },
    "5907": {
      "op": "JUMPDEST"
    },
    "5908": {
      "op": "DUP2"
    },
    "5909": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5911": {
      "op": "DUP6"
    },
    "5912": {
      "op": "ADD"
    },
    "5913": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5915": {
      "op": "DUP4"
    },
    "5916": {
      "op": "ADD"
    },
    "5917": {
      "op": "CALLDATACOPY"
    },
    "5918": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5920": {
      "op": "SWAP2"
    },
    "5921": {
      "op": "DUP2"
    },
    "5922": {
      "op": "ADD"
    },
    "5923": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5925": {
      "op": "ADD"
    },
    "5926": {
      "op": "SWAP2"
    },
    "5927": {
      "op": "SWAP1"
    },
    "5928": {
      "op": "SWAP2"
    },
    "5929": {
      "op": "MSTORE"
    },
    "5930": {
      "op": "SWAP4"
    },
    "5931": {
      "op": "SWAP3"
    },
    "5932": {
      "op": "POP"
    },
    "5933": {
      "op": "POP"
    },
    "5934": {
      "op": "POP"
    },
    "5935": {
      "jump": "o",
      "op": "JUMP"
    },
    "5936": {
      "op": "JUMPDEST"
    },
    "5937": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5939": {
      "op": "DUP1"
    },
    "5940": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5942": {
      "op": "DUP1"
    },
    "5943": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5945": {
      "op": "DUP6"
    },
    "5946": {
      "op": "DUP8"
    },
    "5947": {
      "op": "SUB"
    },
    "5948": {
      "op": "SLT"
    },
    "5949": {
      "op": "ISZERO"
    },
    "5950": {
      "op": "PUSH2",
      "value": "0x1746"
    },
    "5953": {
      "op": "JUMPI"
    },
    "5954": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5956": {
      "op": "DUP1"
    },
    "5957": {
      "op": "REVERT"
    },
    "5958": {
      "op": "JUMPDEST"
    },
    "5959": {
      "op": "PUSH2",
      "value": "0x174F"
    },
    "5962": {
      "op": "DUP6"
    },
    "5963": {
      "op": "PUSH2",
      "value": "0x1637"
    },
    "5966": {
      "jump": "i",
      "op": "JUMP"
    },
    "5967": {
      "op": "JUMPDEST"
    },
    "5968": {
      "op": "SWAP4"
    },
    "5969": {
      "op": "POP"
    },
    "5970": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5972": {
      "op": "DUP6"
    },
    "5973": {
      "op": "ADD"
    },
    "5974": {
      "op": "CALLDATALOAD"
    },
    "5975": {
      "op": "SWAP3"
    },
    "5976": {
      "op": "POP"
    },
    "5977": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5979": {
      "op": "DUP6"
    },
    "5980": {
      "op": "ADD"
    },
    "5981": {
      "op": "CALLDATALOAD"
    },
    "5982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5986": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5988": {
      "op": "SHL"
    },
    "5989": {
      "op": "SUB"
    },
    "5990": {
      "op": "DUP2"
    },
    "5991": {
      "op": "GT"
    },
    "5992": {
      "op": "ISZERO"
    },
    "5993": {
      "op": "PUSH2",
      "value": "0x1771"
    },
    "5996": {
      "op": "JUMPI"
    },
    "5997": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5999": {
      "op": "DUP1"
    },
    "6000": {
      "op": "REVERT"
    },
    "6001": {
      "op": "JUMPDEST"
    },
    "6002": {
      "op": "PUSH2",
      "value": "0x177D"
    },
    "6005": {
      "op": "DUP8"
    },
    "6006": {
      "op": "DUP3"
    },
    "6007": {
      "op": "DUP9"
    },
    "6008": {
      "op": "ADD"
    },
    "6009": {
      "op": "PUSH2",
      "value": "0x16C1"
    },
    "6012": {
      "jump": "i",
      "op": "JUMP"
    },
    "6013": {
      "op": "JUMPDEST"
    },
    "6014": {
      "op": "SWAP5"
    },
    "6015": {
      "op": "SWAP8"
    },
    "6016": {
      "op": "SWAP4"
    },
    "6017": {
      "op": "SWAP7"
    },
    "6018": {
      "op": "POP"
    },
    "6019": {
      "op": "SWAP4"
    },
    "6020": {
      "op": "SWAP5"
    },
    "6021": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6023": {
      "op": "ADD"
    },
    "6024": {
      "op": "CALLDATALOAD"
    },
    "6025": {
      "op": "SWAP4"
    },
    "6026": {
      "op": "POP"
    },
    "6027": {
      "op": "POP"
    },
    "6028": {
      "op": "POP"
    },
    "6029": {
      "jump": "o",
      "op": "JUMP"
    },
    "6030": {
      "op": "JUMPDEST"
    },
    "6031": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6033": {
      "op": "DUP1"
    },
    "6034": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6036": {
      "op": "DUP1"
    },
    "6037": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6039": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6041": {
      "op": "DUP7"
    },
    "6042": {
      "op": "DUP9"
    },
    "6043": {
      "op": "SUB"
    },
    "6044": {
      "op": "SLT"
    },
    "6045": {
      "op": "ISZERO"
    },
    "6046": {
      "op": "PUSH2",
      "value": "0x17A6"
    },
    "6049": {
      "op": "JUMPI"
    },
    "6050": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6052": {
      "op": "DUP1"
    },
    "6053": {
      "op": "REVERT"
    },
    "6054": {
      "op": "JUMPDEST"
    },
    "6055": {
      "op": "PUSH2",
      "value": "0x17AF"
    },
    "6058": {
      "op": "DUP7"
    },
    "6059": {
      "op": "PUSH2",
      "value": "0x1637"
    },
    "6062": {
      "jump": "i",
      "op": "JUMP"
    },
    "6063": {
      "op": "JUMPDEST"
    },
    "6064": {
      "op": "SWAP5"
    },
    "6065": {
      "op": "POP"
    },
    "6066": {
      "op": "PUSH2",
      "value": "0x17BD"
    },
    "6069": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6071": {
      "op": "DUP8"
    },
    "6072": {
      "op": "ADD"
    },
    "6073": {
      "op": "PUSH2",
      "value": "0x1637"
    },
    "6076": {
      "jump": "i",
      "op": "JUMP"
    },
    "6077": {
      "op": "JUMPDEST"
    },
    "6078": {
      "op": "SWAP4"
    },
    "6079": {
      "op": "POP"
    },
    "6080": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6082": {
      "op": "DUP7"
    },
    "6083": {
      "op": "ADD"
    },
    "6084": {
      "op": "CALLDATALOAD"
    },
    "6085": {
      "op": "SWAP3"
    },
    "6086": {
      "op": "POP"
    },
    "6087": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6089": {
      "op": "DUP7"
    },
    "6090": {
      "op": "ADD"
    },
    "6091": {
      "op": "CALLDATALOAD"
    },
    "6092": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6094": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6096": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6098": {
      "op": "SHL"
    },
    "6099": {
      "op": "SUB"
    },
    "6100": {
      "op": "DUP2"
    },
    "6101": {
      "op": "GT"
    },
    "6102": {
      "op": "ISZERO"
    },
    "6103": {
      "op": "PUSH2",
      "value": "0x17DF"
    },
    "6106": {
      "op": "JUMPI"
    },
    "6107": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6109": {
      "op": "DUP1"
    },
    "6110": {
      "op": "REVERT"
    },
    "6111": {
      "op": "JUMPDEST"
    },
    "6112": {
      "op": "PUSH2",
      "value": "0x17EB"
    },
    "6115": {
      "op": "DUP9"
    },
    "6116": {
      "op": "DUP3"
    },
    "6117": {
      "op": "DUP10"
    },
    "6118": {
      "op": "ADD"
    },
    "6119": {
      "op": "PUSH2",
      "value": "0x16C1"
    },
    "6122": {
      "jump": "i",
      "op": "JUMP"
    },
    "6123": {
      "op": "JUMPDEST"
    },
    "6124": {
      "op": "SWAP6"
    },
    "6125": {
      "op": "SWAP9"
    },
    "6126": {
      "op": "SWAP5"
    },
    "6127": {
      "op": "SWAP8"
    },
    "6128": {
      "op": "POP"
    },
    "6129": {
      "op": "SWAP3"
    },
    "6130": {
      "op": "SWAP6"
    },
    "6131": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6133": {
      "op": "ADD"
    },
    "6134": {
      "op": "CALLDATALOAD"
    },
    "6135": {
      "op": "SWAP4"
    },
    "6136": {
      "op": "SWAP3"
    },
    "6137": {
      "op": "POP"
    },
    "6138": {
      "op": "POP"
    },
    "6139": {
      "op": "POP"
    },
    "6140": {
      "jump": "o",
      "op": "JUMP"
    },
    "6141": {
      "op": "JUMPDEST"
    },
    "6142": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6144": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6146": {
      "op": "DUP3"
    },
    "6147": {
      "op": "DUP5"
    },
    "6148": {
      "op": "SUB"
    },
    "6149": {
      "op": "SLT"
    },
    "6150": {
      "op": "ISZERO"
    },
    "6151": {
      "op": "PUSH2",
      "value": "0x180F"
    },
    "6154": {
      "op": "JUMPI"
    },
    "6155": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6157": {
      "op": "DUP1"
    },
    "6158": {
      "op": "REVERT"
    },
    "6159": {
      "op": "JUMPDEST"
    },
    "6160": {
      "op": "POP"
    },
    "6161": {
      "op": "CALLDATALOAD"
    },
    "6162": {
      "op": "SWAP2"
    },
    "6163": {
      "op": "SWAP1"
    },
    "6164": {
      "op": "POP"
    },
    "6165": {
      "jump": "o",
      "op": "JUMP"
    },
    "6166": {
      "op": "JUMPDEST"
    },
    "6167": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6169": {
      "op": "JUMPDEST"
    },
    "6170": {
      "op": "DUP4"
    },
    "6171": {
      "op": "DUP2"
    },
    "6172": {
      "op": "LT"
    },
    "6173": {
      "op": "ISZERO"
    },
    "6174": {
      "op": "PUSH2",
      "value": "0x1831"
    },
    "6177": {
      "op": "JUMPI"
    },
    "6178": {
      "op": "DUP2"
    },
    "6179": {
      "op": "DUP2"
    },
    "6180": {
      "op": "ADD"
    },
    "6181": {
      "op": "MLOAD"
    },
    "6182": {
      "op": "DUP4"
    },
    "6183": {
      "op": "DUP3"
    },
    "6184": {
      "op": "ADD"
    },
    "6185": {
      "op": "MSTORE"
    },
    "6186": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6188": {
      "op": "ADD"
    },
    "6189": {
      "op": "PUSH2",
      "value": "0x1819"
    },
    "6192": {
      "op": "JUMP"
    },
    "6193": {
      "op": "JUMPDEST"
    },
    "6194": {
      "op": "DUP4"
    },
    "6195": {
      "op": "DUP2"
    },
    "6196": {
      "op": "GT"
    },
    "6197": {
      "op": "ISZERO"
    },
    "6198": {
      "op": "PUSH2",
      "value": "0x1840"
    },
    "6201": {
      "op": "JUMPI"
    },
    "6202": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6204": {
      "op": "DUP5"
    },
    "6205": {
      "op": "DUP5"
    },
    "6206": {
      "op": "ADD"
    },
    "6207": {
      "op": "MSTORE"
    },
    "6208": {
      "op": "JUMPDEST"
    },
    "6209": {
      "op": "POP"
    },
    "6210": {
      "op": "POP"
    },
    "6211": {
      "op": "POP"
    },
    "6212": {
      "op": "POP"
    },
    "6213": {
      "jump": "o",
      "op": "JUMP"
    },
    "6214": {
      "op": "JUMPDEST"
    },
    "6215": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6217": {
      "op": "DUP2"
    },
    "6218": {
      "op": "MLOAD"
    },
    "6219": {
      "op": "DUP1"
    },
    "6220": {
      "op": "DUP5"
    },
    "6221": {
      "op": "MSTORE"
    },
    "6222": {
      "op": "PUSH2",
      "value": "0x185E"
    },
    "6225": {
      "op": "DUP2"
    },
    "6226": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6228": {
      "op": "DUP7"
    },
    "6229": {
      "op": "ADD"
    },
    "6230": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6232": {
      "op": "DUP7"
    },
    "6233": {
      "op": "ADD"
    },
    "6234": {
      "op": "PUSH2",
      "value": "0x1816"
    },
    "6237": {
      "jump": "i",
      "op": "JUMP"
    },
    "6238": {
      "op": "JUMPDEST"
    },
    "6239": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6241": {
      "op": "ADD"
    },
    "6242": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6244": {
      "op": "NOT"
    },
    "6245": {
      "op": "AND"
    },
    "6246": {
      "op": "SWAP3"
    },
    "6247": {
      "op": "SWAP1"
    },
    "6248": {
      "op": "SWAP3"
    },
    "6249": {
      "op": "ADD"
    },
    "6250": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6252": {
      "op": "ADD"
    },
    "6253": {
      "op": "SWAP3"
    },
    "6254": {
      "op": "SWAP2"
    },
    "6255": {
      "op": "POP"
    },
    "6256": {
      "op": "POP"
    },
    "6257": {
      "jump": "o",
      "op": "JUMP"
    },
    "6258": {
      "op": "JUMPDEST"
    },
    "6259": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6261": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6263": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6265": {
      "op": "SHL"
    },
    "6266": {
      "op": "SUB"
    },
    "6267": {
      "op": "DUP7"
    },
    "6268": {
      "op": "AND"
    },
    "6269": {
      "op": "DUP2"
    },
    "6270": {
      "op": "MSTORE"
    },
    "6271": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6273": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6275": {
      "op": "DUP3"
    },
    "6276": {
      "op": "ADD"
    },
    "6277": {
      "op": "DUP2"
    },
    "6278": {
      "op": "SWAP1"
    },
    "6279": {
      "op": "MSTORE"
    },
    "6280": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6282": {
      "op": "SWAP1"
    },
    "6283": {
      "op": "PUSH2",
      "value": "0x1896"
    },
    "6286": {
      "op": "SWAP1"
    },
    "6287": {
      "op": "DUP4"
    },
    "6288": {
      "op": "ADD"
    },
    "6289": {
      "op": "DUP8"
    },
    "6290": {
      "op": "PUSH2",
      "value": "0x1846"
    },
    "6293": {
      "jump": "i",
      "op": "JUMP"
    },
    "6294": {
      "op": "JUMPDEST"
    },
    "6295": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6297": {
      "op": "DUP4"
    },
    "6298": {
      "op": "ADD"
    },
    "6299": {
      "op": "SWAP6"
    },
    "6300": {
      "op": "SWAP1"
    },
    "6301": {
      "op": "SWAP6"
    },
    "6302": {
      "op": "MSTORE"
    },
    "6303": {
      "op": "POP"
    },
    "6304": {
      "op": "SWAP2"
    },
    "6305": {
      "op": "ISZERO"
    },
    "6306": {
      "op": "ISZERO"
    },
    "6307": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6309": {
      "op": "DUP4"
    },
    "6310": {
      "op": "ADD"
    },
    "6311": {
      "op": "MSTORE"
    },
    "6312": {
      "op": "ISZERO"
    },
    "6313": {
      "op": "ISZERO"
    },
    "6314": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6316": {
      "op": "SWAP1"
    },
    "6317": {
      "op": "SWAP2"
    },
    "6318": {
      "op": "ADD"
    },
    "6319": {
      "op": "MSTORE"
    },
    "6320": {
      "op": "SWAP3"
    },
    "6321": {
      "op": "SWAP2"
    },
    "6322": {
      "op": "POP"
    },
    "6323": {
      "op": "POP"
    },
    "6324": {
      "jump": "o",
      "op": "JUMP"
    },
    "6325": {
      "op": "JUMPDEST"
    },
    "6326": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6328": {
      "op": "DUP1"
    },
    "6329": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6331": {
      "op": "DUP1"
    },
    "6332": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6334": {
      "op": "DUP6"
    },
    "6335": {
      "op": "DUP8"
    },
    "6336": {
      "op": "SUB"
    },
    "6337": {
      "op": "SLT"
    },
    "6338": {
      "op": "ISZERO"
    },
    "6339": {
      "op": "PUSH2",
      "value": "0x18CB"
    },
    "6342": {
      "op": "JUMPI"
    },
    "6343": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6345": {
      "op": "DUP1"
    },
    "6346": {
      "op": "REVERT"
    },
    "6347": {
      "op": "JUMPDEST"
    },
    "6348": {
      "op": "PUSH2",
      "value": "0x18D4"
    },
    "6351": {
      "op": "DUP6"
    },
    "6352": {
      "op": "PUSH2",
      "value": "0x1637"
    },
    "6355": {
      "jump": "i",
      "op": "JUMP"
    },
    "6356": {
      "op": "JUMPDEST"
    },
    "6357": {
      "op": "SWAP4"
    },
    "6358": {
      "op": "POP"
    },
    "6359": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6361": {
      "op": "DUP6"
    },
    "6362": {
      "op": "ADD"
    },
    "6363": {
      "op": "CALLDATALOAD"
    },
    "6364": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6366": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6368": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6370": {
      "op": "SHL"
    },
    "6371": {
      "op": "SUB"
    },
    "6372": {
      "op": "DUP1"
    },
    "6373": {
      "op": "DUP3"
    },
    "6374": {
      "op": "GT"
    },
    "6375": {
      "op": "ISZERO"
    },
    "6376": {
      "op": "PUSH2",
      "value": "0x18F0"
    },
    "6379": {
      "op": "JUMPI"
    },
    "6380": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6382": {
      "op": "DUP1"
    },
    "6383": {
      "op": "REVERT"
    },
    "6384": {
      "op": "JUMPDEST"
    },
    "6385": {
      "op": "PUSH2",
      "value": "0x18FC"
    },
    "6388": {
      "op": "DUP9"
    },
    "6389": {
      "op": "DUP4"
    },
    "6390": {
      "op": "DUP10"
    },
    "6391": {
      "op": "ADD"
    },
    "6392": {
      "op": "PUSH2",
      "value": "0x16C1"
    },
    "6395": {
      "jump": "i",
      "op": "JUMP"
    },
    "6396": {
      "op": "JUMPDEST"
    },
    "6397": {
      "op": "SWAP5"
    },
    "6398": {
      "op": "POP"
    },
    "6399": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6401": {
      "op": "DUP8"
    },
    "6402": {
      "op": "ADD"
    },
    "6403": {
      "op": "CALLDATALOAD"
    },
    "6404": {
      "op": "SWAP4"
    },
    "6405": {
      "op": "POP"
    },
    "6406": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6408": {
      "op": "DUP8"
    },
    "6409": {
      "op": "ADD"
    },
    "6410": {
      "op": "CALLDATALOAD"
    },
    "6411": {
      "op": "SWAP2"
    },
    "6412": {
      "op": "POP"
    },
    "6413": {
      "op": "DUP1"
    },
    "6414": {
      "op": "DUP3"
    },
    "6415": {
      "op": "GT"
    },
    "6416": {
      "op": "ISZERO"
    },
    "6417": {
      "op": "PUSH2",
      "value": "0x1919"
    },
    "6420": {
      "op": "JUMPI"
    },
    "6421": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6423": {
      "op": "DUP1"
    },
    "6424": {
      "op": "REVERT"
    },
    "6425": {
      "op": "JUMPDEST"
    },
    "6426": {
      "op": "POP"
    },
    "6427": {
      "op": "PUSH2",
      "value": "0x1926"
    },
    "6430": {
      "op": "DUP8"
    },
    "6431": {
      "op": "DUP3"
    },
    "6432": {
      "op": "DUP9"
    },
    "6433": {
      "op": "ADD"
    },
    "6434": {
      "op": "PUSH2",
      "value": "0x16C1"
    },
    "6437": {
      "jump": "i",
      "op": "JUMP"
    },
    "6438": {
      "op": "JUMPDEST"
    },
    "6439": {
      "op": "SWAP2"
    },
    "6440": {
      "op": "POP"
    },
    "6441": {
      "op": "POP"
    },
    "6442": {
      "op": "SWAP3"
    },
    "6443": {
      "op": "SWAP6"
    },
    "6444": {
      "op": "SWAP2"
    },
    "6445": {
      "op": "SWAP5"
    },
    "6446": {
      "op": "POP"
    },
    "6447": {
      "op": "SWAP3"
    },
    "6448": {
      "op": "POP"
    },
    "6449": {
      "jump": "o",
      "op": "JUMP"
    },
    "6450": {
      "op": "JUMPDEST"
    },
    "6451": {
      "op": "DUP1"
    },
    "6452": {
      "op": "CALLDATALOAD"
    },
    "6453": {
      "op": "DUP1"
    },
    "6454": {
      "op": "ISZERO"
    },
    "6455": {
      "op": "ISZERO"
    },
    "6456": {
      "op": "DUP2"
    },
    "6457": {
      "op": "EQ"
    },
    "6458": {
      "op": "PUSH2",
      "value": "0x164E"
    },
    "6461": {
      "op": "JUMPI"
    },
    "6462": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6464": {
      "op": "DUP1"
    },
    "6465": {
      "op": "REVERT"
    },
    "6466": {
      "op": "JUMPDEST"
    },
    "6467": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6469": {
      "op": "DUP1"
    },
    "6470": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6472": {
      "op": "DUP1"
    },
    "6473": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6475": {
      "op": "DUP1"
    },
    "6476": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "6478": {
      "op": "DUP8"
    },
    "6479": {
      "op": "DUP10"
    },
    "6480": {
      "op": "SUB"
    },
    "6481": {
      "op": "SLT"
    },
    "6482": {
      "op": "ISZERO"
    },
    "6483": {
      "op": "PUSH2",
      "value": "0x195B"
    },
    "6486": {
      "op": "JUMPI"
    },
    "6487": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6489": {
      "op": "DUP1"
    },
    "6490": {
      "op": "REVERT"
    },
    "6491": {
      "op": "JUMPDEST"
    },
    "6492": {
      "op": "PUSH2",
      "value": "0x1964"
    },
    "6495": {
      "op": "DUP8"
    },
    "6496": {
      "op": "PUSH2",
      "value": "0x1637"
    },
    "6499": {
      "jump": "i",
      "op": "JUMP"
    },
    "6500": {
      "op": "JUMPDEST"
    },
    "6501": {
      "op": "SWAP6"
    },
    "6502": {
      "op": "POP"
    },
    "6503": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6505": {
      "op": "DUP8"
    },
    "6506": {
      "op": "ADD"
    },
    "6507": {
      "op": "CALLDATALOAD"
    },
    "6508": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6510": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6512": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6514": {
      "op": "SHL"
    },
    "6515": {
      "op": "SUB"
    },
    "6516": {
      "op": "DUP1"
    },
    "6517": {
      "op": "DUP3"
    },
    "6518": {
      "op": "GT"
    },
    "6519": {
      "op": "ISZERO"
    },
    "6520": {
      "op": "PUSH2",
      "value": "0x1980"
    },
    "6523": {
      "op": "JUMPI"
    },
    "6524": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6526": {
      "op": "DUP1"
    },
    "6527": {
      "op": "REVERT"
    },
    "6528": {
      "op": "JUMPDEST"
    },
    "6529": {
      "op": "PUSH2",
      "value": "0x198C"
    },
    "6532": {
      "op": "DUP11"
    },
    "6533": {
      "op": "DUP4"
    },
    "6534": {
      "op": "DUP12"
    },
    "6535": {
      "op": "ADD"
    },
    "6536": {
      "op": "PUSH2",
      "value": "0x16C1"
    },
    "6539": {
      "jump": "i",
      "op": "JUMP"
    },
    "6540": {
      "op": "JUMPDEST"
    },
    "6541": {
      "op": "SWAP7"
    },
    "6542": {
      "op": "POP"
    },
    "6543": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6545": {
      "op": "DUP10"
    },
    "6546": {
      "op": "ADD"
    },
    "6547": {
      "op": "CALLDATALOAD"
    },
    "6548": {
      "op": "SWAP2"
    },
    "6549": {
      "op": "POP"
    },
    "6550": {
      "op": "DUP1"
    },
    "6551": {
      "op": "DUP3"
    },
    "6552": {
      "op": "GT"
    },
    "6553": {
      "op": "ISZERO"
    },
    "6554": {
      "op": "PUSH2",
      "value": "0x19A2"
    },
    "6557": {
      "op": "JUMPI"
    },
    "6558": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6560": {
      "op": "DUP1"
    },
    "6561": {
      "op": "REVERT"
    },
    "6562": {
      "op": "JUMPDEST"
    },
    "6563": {
      "op": "PUSH2",
      "value": "0x19AE"
    },
    "6566": {
      "op": "DUP11"
    },
    "6567": {
      "op": "DUP4"
    },
    "6568": {
      "op": "DUP12"
    },
    "6569": {
      "op": "ADD"
    },
    "6570": {
      "op": "PUSH2",
      "value": "0x16C1"
    },
    "6573": {
      "jump": "i",
      "op": "JUMP"
    },
    "6574": {
      "op": "JUMPDEST"
    },
    "6575": {
      "op": "SWAP6"
    },
    "6576": {
      "op": "POP"
    },
    "6577": {
      "op": "PUSH2",
      "value": "0x19BC"
    },
    "6580": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6582": {
      "op": "DUP11"
    },
    "6583": {
      "op": "ADD"
    },
    "6584": {
      "op": "PUSH2",
      "value": "0x1932"
    },
    "6587": {
      "jump": "i",
      "op": "JUMP"
    },
    "6588": {
      "op": "JUMPDEST"
    },
    "6589": {
      "op": "SWAP5"
    },
    "6590": {
      "op": "POP"
    },
    "6591": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6593": {
      "op": "DUP10"
    },
    "6594": {
      "op": "ADD"
    },
    "6595": {
      "op": "CALLDATALOAD"
    },
    "6596": {
      "op": "SWAP4"
    },
    "6597": {
      "op": "POP"
    },
    "6598": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6600": {
      "op": "DUP10"
    },
    "6601": {
      "op": "ADD"
    },
    "6602": {
      "op": "CALLDATALOAD"
    },
    "6603": {
      "op": "SWAP2"
    },
    "6604": {
      "op": "POP"
    },
    "6605": {
      "op": "DUP1"
    },
    "6606": {
      "op": "DUP3"
    },
    "6607": {
      "op": "GT"
    },
    "6608": {
      "op": "ISZERO"
    },
    "6609": {
      "op": "PUSH2",
      "value": "0x19D9"
    },
    "6612": {
      "op": "JUMPI"
    },
    "6613": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6615": {
      "op": "DUP1"
    },
    "6616": {
      "op": "REVERT"
    },
    "6617": {
      "op": "JUMPDEST"
    },
    "6618": {
      "op": "POP"
    },
    "6619": {
      "op": "PUSH2",
      "value": "0x19E6"
    },
    "6622": {
      "op": "DUP10"
    },
    "6623": {
      "op": "DUP3"
    },
    "6624": {
      "op": "DUP11"
    },
    "6625": {
      "op": "ADD"
    },
    "6626": {
      "op": "PUSH2",
      "value": "0x16C1"
    },
    "6629": {
      "jump": "i",
      "op": "JUMP"
    },
    "6630": {
      "op": "JUMPDEST"
    },
    "6631": {
      "op": "SWAP2"
    },
    "6632": {
      "op": "POP"
    },
    "6633": {
      "op": "POP"
    },
    "6634": {
      "op": "SWAP3"
    },
    "6635": {
      "op": "SWAP6"
    },
    "6636": {
      "op": "POP"
    },
    "6637": {
      "op": "SWAP3"
    },
    "6638": {
      "op": "SWAP6"
    },
    "6639": {
      "op": "POP"
    },
    "6640": {
      "op": "SWAP3"
    },
    "6641": {
      "op": "SWAP6"
    },
    "6642": {
      "jump": "o",
      "op": "JUMP"
    },
    "6643": {
      "op": "JUMPDEST"
    },
    "6644": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6646": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6648": {
      "op": "DUP3"
    },
    "6649": {
      "op": "DUP5"
    },
    "6650": {
      "op": "SUB"
    },
    "6651": {
      "op": "SLT"
    },
    "6652": {
      "op": "ISZERO"
    },
    "6653": {
      "op": "PUSH2",
      "value": "0x1A05"
    },
    "6656": {
      "op": "JUMPI"
    },
    "6657": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6659": {
      "op": "DUP1"
    },
    "6660": {
      "op": "REVERT"
    },
    "6661": {
      "op": "JUMPDEST"
    },
    "6662": {
      "op": "PUSH2",
      "value": "0x1A0E"
    },
    "6665": {
      "op": "DUP3"
    },
    "6666": {
      "op": "PUSH2",
      "value": "0x1637"
    },
    "6669": {
      "jump": "i",
      "op": "JUMP"
    },
    "6670": {
      "op": "JUMPDEST"
    },
    "6671": {
      "op": "SWAP4"
    },
    "6672": {
      "op": "SWAP3"
    },
    "6673": {
      "op": "POP"
    },
    "6674": {
      "op": "POP"
    },
    "6675": {
      "op": "POP"
    },
    "6676": {
      "jump": "o",
      "op": "JUMP"
    },
    "6677": {
      "op": "JUMPDEST"
    },
    "6678": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6680": {
      "op": "DUP2"
    },
    "6681": {
      "op": "MSTORE"
    },
    "6682": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6684": {
      "op": "PUSH2",
      "value": "0x1A0E"
    },
    "6687": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6689": {
      "op": "DUP4"
    },
    "6690": {
      "op": "ADD"
    },
    "6691": {
      "op": "DUP5"
    },
    "6692": {
      "op": "PUSH2",
      "value": "0x1846"
    },
    "6695": {
      "jump": "i",
      "op": "JUMP"
    },
    "6696": {
      "op": "JUMPDEST"
    },
    "6697": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6699": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6701": {
      "op": "DUP1"
    },
    "6702": {
      "op": "DUP4"
    },
    "6703": {
      "op": "ADD"
    },
    "6704": {
      "op": "DUP2"
    },
    "6705": {
      "op": "DUP5"
    },
    "6706": {
      "op": "MSTORE"
    },
    "6707": {
      "op": "DUP1"
    },
    "6708": {
      "op": "DUP6"
    },
    "6709": {
      "op": "MLOAD"
    },
    "6710": {
      "op": "DUP1"
    },
    "6711": {
      "op": "DUP4"
    },
    "6712": {
      "op": "MSTORE"
    },
    "6713": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6715": {
      "op": "SWAP3"
    },
    "6716": {
      "op": "POP"
    },
    "6717": {
      "op": "DUP3"
    },
    "6718": {
      "op": "DUP7"
    },
    "6719": {
      "op": "ADD"
    },
    "6720": {
      "op": "SWAP2"
    },
    "6721": {
      "op": "POP"
    },
    "6722": {
      "op": "DUP3"
    },
    "6723": {
      "op": "DUP2"
    },
    "6724": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "6726": {
      "op": "SHL"
    },
    "6727": {
      "op": "DUP8"
    },
    "6728": {
      "op": "ADD"
    },
    "6729": {
      "op": "ADD"
    },
    "6730": {
      "op": "DUP5"
    },
    "6731": {
      "op": "DUP9"
    },
    "6732": {
      "op": "ADD"
    },
    "6733": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6735": {
      "op": "JUMPDEST"
    },
    "6736": {
      "op": "DUP4"
    },
    "6737": {
      "op": "DUP2"
    },
    "6738": {
      "op": "LT"
    },
    "6739": {
      "op": "ISZERO"
    },
    "6740": {
      "op": "PUSH2",
      "value": "0x1AA8"
    },
    "6743": {
      "op": "JUMPI"
    },
    "6744": {
      "op": "DUP9"
    },
    "6745": {
      "op": "DUP4"
    },
    "6746": {
      "op": "SUB"
    },
    "6747": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "6749": {
      "op": "NOT"
    },
    "6750": {
      "op": "ADD"
    },
    "6751": {
      "op": "DUP6"
    },
    "6752": {
      "op": "MSTORE"
    },
    "6753": {
      "op": "DUP2"
    },
    "6754": {
      "op": "MLOAD"
    },
    "6755": {
      "op": "DUP1"
    },
    "6756": {
      "op": "MLOAD"
    },
    "6757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6761": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6763": {
      "op": "SHL"
    },
    "6764": {
      "op": "SUB"
    },
    "6765": {
      "op": "AND"
    },
    "6766": {
      "op": "DUP5"
    },
    "6767": {
      "op": "MSTORE"
    },
    "6768": {
      "op": "DUP8"
    },
    "6769": {
      "op": "DUP2"
    },
    "6770": {
      "op": "ADD"
    },
    "6771": {
      "op": "MLOAD"
    },
    "6772": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6774": {
      "op": "DUP10"
    },
    "6775": {
      "op": "DUP7"
    },
    "6776": {
      "op": "ADD"
    },
    "6777": {
      "op": "DUP2"
    },
    "6778": {
      "op": "SWAP1"
    },
    "6779": {
      "op": "MSTORE"
    },
    "6780": {
      "op": "SWAP1"
    },
    "6781": {
      "op": "PUSH2",
      "value": "0x1A88"
    },
    "6784": {
      "op": "DUP3"
    },
    "6785": {
      "op": "DUP8"
    },
    "6786": {
      "op": "ADD"
    },
    "6787": {
      "op": "DUP3"
    },
    "6788": {
      "op": "PUSH2",
      "value": "0x1846"
    },
    "6791": {
      "jump": "i",
      "op": "JUMP"
    },
    "6792": {
      "op": "JUMPDEST"
    },
    "6793": {
      "op": "SWAP3"
    },
    "6794": {
      "op": "DUP10"
    },
    "6795": {
      "op": "ADD"
    },
    "6796": {
      "op": "MLOAD"
    },
    "6797": {
      "op": "ISZERO"
    },
    "6798": {
      "op": "ISZERO"
    },
    "6799": {
      "op": "SWAP6"
    },
    "6800": {
      "op": "DUP10"
    },
    "6801": {
      "op": "ADD"
    },
    "6802": {
      "op": "SWAP6"
    },
    "6803": {
      "op": "SWAP1"
    },
    "6804": {
      "op": "SWAP6"
    },
    "6805": {
      "op": "MSTORE"
    },
    "6806": {
      "op": "POP"
    },
    "6807": {
      "op": "SWAP5"
    },
    "6808": {
      "op": "DUP8"
    },
    "6809": {
      "op": "ADD"
    },
    "6810": {
      "op": "SWAP5"
    },
    "6811": {
      "op": "SWAP3"
    },
    "6812": {
      "op": "POP"
    },
    "6813": {
      "op": "SWAP1"
    },
    "6814": {
      "op": "DUP7"
    },
    "6815": {
      "op": "ADD"
    },
    "6816": {
      "op": "SWAP1"
    },
    "6817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6819": {
      "op": "ADD"
    },
    "6820": {
      "op": "PUSH2",
      "value": "0x1A4F"
    },
    "6823": {
      "op": "JUMP"
    },
    "6824": {
      "op": "JUMPDEST"
    },
    "6825": {
      "op": "POP"
    },
    "6826": {
      "op": "SWAP1"
    },
    "6827": {
      "op": "SWAP9"
    },
    "6828": {
      "op": "SWAP8"
    },
    "6829": {
      "op": "POP"
    },
    "6830": {
      "op": "POP"
    },
    "6831": {
      "op": "POP"
    },
    "6832": {
      "op": "POP"
    },
    "6833": {
      "op": "POP"
    },
    "6834": {
      "op": "POP"
    },
    "6835": {
      "op": "POP"
    },
    "6836": {
      "op": "POP"
    },
    "6837": {
      "jump": "o",
      "op": "JUMP"
    },
    "6838": {
      "op": "JUMPDEST"
    },
    "6839": {
      "op": "DUP1"
    },
    "6840": {
      "op": "CALLDATALOAD"
    },
    "6841": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6843": {
      "op": "DUP2"
    },
    "6844": {
      "op": "AND"
    },
    "6845": {
      "op": "DUP2"
    },
    "6846": {
      "op": "EQ"
    },
    "6847": {
      "op": "PUSH2",
      "value": "0x164E"
    },
    "6850": {
      "op": "JUMPI"
    },
    "6851": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6853": {
      "op": "DUP1"
    },
    "6854": {
      "op": "REVERT"
    },
    "6855": {
      "op": "JUMPDEST"
    },
    "6856": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6858": {
      "op": "DUP3"
    },
    "6859": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6861": {
      "op": "DUP4"
    },
    "6862": {
      "op": "ADD"
    },
    "6863": {
      "op": "SLT"
    },
    "6864": {
      "op": "PUSH2",
      "value": "0x1AD8"
    },
    "6867": {
      "op": "JUMPI"
    },
    "6868": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6870": {
      "op": "DUP1"
    },
    "6871": {
      "op": "REVERT"
    },
    "6872": {
      "op": "JUMPDEST"
    },
    "6873": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6875": {
      "op": "MLOAD"
    },
    "6876": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6878": {
      "op": "DUP2"
    },
    "6879": {
      "op": "ADD"
    },
    "6880": {
      "op": "DUP2"
    },
    "6881": {
      "op": "DUP2"
    },
    "6882": {
      "op": "LT"
    },
    "6883": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6885": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6887": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6889": {
      "op": "SHL"
    },
    "6890": {
      "op": "SUB"
    },
    "6891": {
      "op": "DUP3"
    },
    "6892": {
      "op": "GT"
    },
    "6893": {
      "op": "OR"
    },
    "6894": {
      "op": "ISZERO"
    },
    "6895": {
      "op": "PUSH2",
      "value": "0x1AFA"
    },
    "6898": {
      "op": "JUMPI"
    },
    "6899": {
      "op": "PUSH2",
      "value": "0x1AFA"
    },
    "6902": {
      "op": "PUSH2",
      "value": "0x1653"
    },
    "6905": {
      "jump": "i",
      "op": "JUMP"
    },
    "6906": {
      "op": "JUMPDEST"
    },
    "6907": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6909": {
      "op": "MSTORE"
    },
    "6910": {
      "op": "DUP1"
    },
    "6911": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6913": {
      "op": "DUP5"
    },
    "6914": {
      "op": "ADD"
    },
    "6915": {
      "op": "DUP6"
    },
    "6916": {
      "op": "DUP2"
    },
    "6917": {
      "op": "GT"
    },
    "6918": {
      "op": "ISZERO"
    },
    "6919": {
      "op": "PUSH2",
      "value": "0x1B0F"
    },
    "6922": {
      "op": "JUMPI"
    },
    "6923": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6925": {
      "op": "DUP1"
    },
    "6926": {
      "op": "REVERT"
    },
    "6927": {
      "op": "JUMPDEST"
    },
    "6928": {
      "op": "DUP5"
    },
    "6929": {
      "op": "JUMPDEST"
    },
    "6930": {
      "op": "DUP2"
    },
    "6931": {
      "op": "DUP2"
    },
    "6932": {
      "op": "LT"
    },
    "6933": {
      "op": "ISZERO"
    },
    "6934": {
      "op": "PUSH2",
      "value": "0x1B30"
    },
    "6937": {
      "op": "JUMPI"
    },
    "6938": {
      "op": "PUSH2",
      "value": "0x1B22"
    },
    "6941": {
      "op": "DUP2"
    },
    "6942": {
      "op": "PUSH2",
      "value": "0x1637"
    },
    "6945": {
      "jump": "i",
      "op": "JUMP"
    },
    "6946": {
      "op": "JUMPDEST"
    },
    "6947": {
      "op": "DUP4"
    },
    "6948": {
      "op": "MSTORE"
    },
    "6949": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6951": {
      "op": "SWAP3"
    },
    "6952": {
      "op": "DUP4"
    },
    "6953": {
      "op": "ADD"
    },
    "6954": {
      "op": "SWAP3"
    },
    "6955": {
      "op": "ADD"
    },
    "6956": {
      "op": "PUSH2",
      "value": "0x1B11"
    },
    "6959": {
      "op": "JUMP"
    },
    "6960": {
      "op": "JUMPDEST"
    },
    "6961": {
      "op": "POP"
    },
    "6962": {
      "op": "SWAP2"
    },
    "6963": {
      "op": "SWAP6"
    },
    "6964": {
      "op": "SWAP5"
    },
    "6965": {
      "op": "POP"
    },
    "6966": {
      "op": "POP"
    },
    "6967": {
      "op": "POP"
    },
    "6968": {
      "op": "POP"
    },
    "6969": {
      "op": "POP"
    },
    "6970": {
      "jump": "o",
      "op": "JUMP"
    },
    "6971": {
      "op": "JUMPDEST"
    },
    "6972": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6974": {
      "op": "DUP3"
    },
    "6975": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6977": {
      "op": "DUP4"
    },
    "6978": {
      "op": "ADD"
    },
    "6979": {
      "op": "SLT"
    },
    "6980": {
      "op": "PUSH2",
      "value": "0x1B4C"
    },
    "6983": {
      "op": "JUMPI"
    },
    "6984": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6986": {
      "op": "DUP1"
    },
    "6987": {
      "op": "REVERT"
    },
    "6988": {
      "op": "JUMPDEST"
    },
    "6989": {
      "op": "DUP2"
    },
    "6990": {
      "op": "CALLDATALOAD"
    },
    "6991": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6997": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6999": {
      "op": "SHL"
    },
    "7000": {
      "op": "SUB"
    },
    "7001": {
      "op": "DUP3"
    },
    "7002": {
      "op": "GT"
    },
    "7003": {
      "op": "ISZERO"
    },
    "7004": {
      "op": "PUSH2",
      "value": "0x1B67"
    },
    "7007": {
      "op": "JUMPI"
    },
    "7008": {
      "op": "PUSH2",
      "value": "0x1B67"
    },
    "7011": {
      "op": "PUSH2",
      "value": "0x1653"
    },
    "7014": {
      "jump": "i",
      "op": "JUMP"
    },
    "7015": {
      "op": "JUMPDEST"
    },
    "7016": {
      "op": "DUP2"
    },
    "7017": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "7019": {
      "op": "SHL"
    },
    "7020": {
      "op": "PUSH2",
      "value": "0x1B76"
    },
    "7023": {
      "op": "DUP3"
    },
    "7024": {
      "op": "DUP3"
    },
    "7025": {
      "op": "ADD"
    },
    "7026": {
      "op": "PUSH2",
      "value": "0x1691"
    },
    "7029": {
      "jump": "i",
      "op": "JUMP"
    },
    "7030": {
      "op": "JUMPDEST"
    },
    "7031": {
      "op": "SWAP3"
    },
    "7032": {
      "op": "DUP4"
    },
    "7033": {
      "op": "MSTORE"
    },
    "7034": {
      "op": "DUP5"
    },
    "7035": {
      "op": "DUP2"
    },
    "7036": {
      "op": "ADD"
    },
    "7037": {
      "op": "DUP3"
    },
    "7038": {
      "op": "ADD"
    },
    "7039": {
      "op": "SWAP3"
    },
    "7040": {
      "op": "DUP3"
    },
    "7041": {
      "op": "DUP2"
    },
    "7042": {
      "op": "ADD"
    },
    "7043": {
      "op": "SWAP1"
    },
    "7044": {
      "op": "DUP8"
    },
    "7045": {
      "op": "DUP6"
    },
    "7046": {
      "op": "GT"
    },
    "7047": {
      "op": "ISZERO"
    },
    "7048": {
      "op": "PUSH2",
      "value": "0x1B90"
    },
    "7051": {
      "op": "JUMPI"
    },
    "7052": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7054": {
      "op": "DUP1"
    },
    "7055": {
      "op": "REVERT"
    },
    "7056": {
      "op": "JUMPDEST"
    },
    "7057": {
      "op": "DUP4"
    },
    "7058": {
      "op": "DUP8"
    },
    "7059": {
      "op": "ADD"
    },
    "7060": {
      "op": "SWAP3"
    },
    "7061": {
      "op": "POP"
    },
    "7062": {
      "op": "JUMPDEST"
    },
    "7063": {
      "op": "DUP5"
    },
    "7064": {
      "op": "DUP4"
    },
    "7065": {
      "op": "LT"
    },
    "7066": {
      "op": "ISZERO"
    },
    "7067": {
      "op": "PUSH2",
      "value": "0x1BB6"
    },
    "7070": {
      "op": "JUMPI"
    },
    "7071": {
      "op": "PUSH2",
      "value": "0x1BA7"
    },
    "7074": {
      "op": "DUP4"
    },
    "7075": {
      "op": "PUSH2",
      "value": "0x1637"
    },
    "7078": {
      "jump": "i",
      "op": "JUMP"
    },
    "7079": {
      "op": "JUMPDEST"
    },
    "7080": {
      "op": "DUP3"
    },
    "7081": {
      "op": "MSTORE"
    },
    "7082": {
      "op": "SWAP2"
    },
    "7083": {
      "op": "DUP4"
    },
    "7084": {
      "op": "ADD"
    },
    "7085": {
      "op": "SWAP2"
    },
    "7086": {
      "op": "SWAP1"
    },
    "7087": {
      "op": "DUP4"
    },
    "7088": {
      "op": "ADD"
    },
    "7089": {
      "op": "SWAP1"
    },
    "7090": {
      "op": "PUSH2",
      "value": "0x1B96"
    },
    "7093": {
      "op": "JUMP"
    },
    "7094": {
      "op": "JUMPDEST"
    },
    "7095": {
      "op": "SWAP8"
    },
    "7096": {
      "op": "SWAP7"
    },
    "7097": {
      "op": "POP"
    },
    "7098": {
      "op": "POP"
    },
    "7099": {
      "op": "POP"
    },
    "7100": {
      "op": "POP"
    },
    "7101": {
      "op": "POP"
    },
    "7102": {
      "op": "POP"
    },
    "7103": {
      "op": "POP"
    },
    "7104": {
      "jump": "o",
      "op": "JUMP"
    },
    "7105": {
      "op": "JUMPDEST"
    },
    "7106": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7108": {
      "op": "DUP1"
    },
    "7109": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7111": {
      "op": "DUP1"
    },
    "7112": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7114": {
      "op": "DUP1"
    },
    "7115": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7117": {
      "op": "PUSH2",
      "value": "0x1A0"
    },
    "7120": {
      "op": "DUP9"
    },
    "7121": {
      "op": "DUP11"
    },
    "7122": {
      "op": "SUB"
    },
    "7123": {
      "op": "SLT"
    },
    "7124": {
      "op": "ISZERO"
    },
    "7125": {
      "op": "PUSH2",
      "value": "0x1BDD"
    },
    "7128": {
      "op": "JUMPI"
    },
    "7129": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7131": {
      "op": "DUP1"
    },
    "7132": {
      "op": "REVERT"
    },
    "7133": {
      "op": "JUMPDEST"
    },
    "7134": {
      "op": "PUSH2",
      "value": "0x1BE6"
    },
    "7137": {
      "op": "DUP9"
    },
    "7138": {
      "op": "PUSH2",
      "value": "0x1637"
    },
    "7141": {
      "jump": "i",
      "op": "JUMP"
    },
    "7142": {
      "op": "JUMPDEST"
    },
    "7143": {
      "op": "SWAP7"
    },
    "7144": {
      "op": "POP"
    },
    "7145": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7147": {
      "op": "DUP1"
    },
    "7148": {
      "op": "DUP10"
    },
    "7149": {
      "op": "ADD"
    },
    "7150": {
      "op": "CALLDATALOAD"
    },
    "7151": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7155": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7157": {
      "op": "SHL"
    },
    "7158": {
      "op": "SUB"
    },
    "7159": {
      "op": "DUP1"
    },
    "7160": {
      "op": "DUP3"
    },
    "7161": {
      "op": "GT"
    },
    "7162": {
      "op": "ISZERO"
    },
    "7163": {
      "op": "PUSH2",
      "value": "0x1C03"
    },
    "7166": {
      "op": "JUMPI"
    },
    "7167": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7169": {
      "op": "DUP1"
    },
    "7170": {
      "op": "REVERT"
    },
    "7171": {
      "op": "JUMPDEST"
    },
    "7172": {
      "op": "PUSH2",
      "value": "0x1C0F"
    },
    "7175": {
      "op": "DUP13"
    },
    "7176": {
      "op": "DUP4"
    },
    "7177": {
      "op": "DUP14"
    },
    "7178": {
      "op": "ADD"
    },
    "7179": {
      "op": "PUSH2",
      "value": "0x16C1"
    },
    "7182": {
      "jump": "i",
      "op": "JUMP"
    },
    "7183": {
      "op": "JUMPDEST"
    },
    "7184": {
      "op": "SWAP9"
    },
    "7185": {
      "op": "POP"
    },
    "7186": {
      "op": "PUSH2",
      "value": "0x1C1D"
    },
    "7189": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7191": {
      "op": "DUP13"
    },
    "7192": {
      "op": "ADD"
    },
    "7193": {
      "op": "PUSH2",
      "value": "0x1932"
    },
    "7196": {
      "jump": "i",
      "op": "JUMP"
    },
    "7197": {
      "op": "JUMPDEST"
    },
    "7198": {
      "op": "SWAP8"
    },
    "7199": {
      "op": "POP"
    },
    "7200": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7202": {
      "op": "DUP12"
    },
    "7203": {
      "op": "ADD"
    },
    "7204": {
      "op": "CALLDATALOAD"
    },
    "7205": {
      "op": "SWAP7"
    },
    "7206": {
      "op": "POP"
    },
    "7207": {
      "op": "DUP12"
    },
    "7208": {
      "op": "PUSH1",
      "value": "0x9F"
    },
    "7210": {
      "op": "DUP13"
    },
    "7211": {
      "op": "ADD"
    },
    "7212": {
      "op": "SLT"
    },
    "7213": {
      "op": "PUSH2",
      "value": "0x1C35"
    },
    "7216": {
      "op": "JUMPI"
    },
    "7217": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7219": {
      "op": "DUP1"
    },
    "7220": {
      "op": "REVERT"
    },
    "7221": {
      "op": "JUMPDEST"
    },
    "7222": {
      "op": "PUSH2",
      "value": "0x1C3D"
    },
    "7225": {
      "op": "PUSH2",
      "value": "0x1669"
    },
    "7228": {
      "jump": "i",
      "op": "JUMP"
    },
    "7229": {
      "op": "JUMPDEST"
    },
    "7230": {
      "op": "SWAP2"
    },
    "7231": {
      "op": "POP"
    },
    "7232": {
      "op": "DUP2"
    },
    "7233": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7235": {
      "op": "DUP13"
    },
    "7236": {
      "op": "ADD"
    },
    "7237": {
      "op": "DUP14"
    },
    "7238": {
      "op": "DUP2"
    },
    "7239": {
      "op": "GT"
    },
    "7240": {
      "op": "ISZERO"
    },
    "7241": {
      "op": "PUSH2",
      "value": "0x1C51"
    },
    "7244": {
      "op": "JUMPI"
    },
    "7245": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7247": {
      "op": "DUP1"
    },
    "7248": {
      "op": "REVERT"
    },
    "7249": {
      "op": "JUMPDEST"
    },
    "7250": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7252": {
      "op": "DUP14"
    },
    "7253": {
      "op": "ADD"
    },
    "7254": {
      "op": "JUMPDEST"
    },
    "7255": {
      "op": "DUP2"
    },
    "7256": {
      "op": "DUP2"
    },
    "7257": {
      "op": "LT"
    },
    "7258": {
      "op": "ISZERO"
    },
    "7259": {
      "op": "PUSH2",
      "value": "0x1C74"
    },
    "7262": {
      "op": "JUMPI"
    },
    "7263": {
      "op": "PUSH2",
      "value": "0x1C67"
    },
    "7266": {
      "op": "DUP2"
    },
    "7267": {
      "op": "PUSH2",
      "value": "0x1AB6"
    },
    "7270": {
      "jump": "i",
      "op": "JUMP"
    },
    "7271": {
      "op": "JUMPDEST"
    },
    "7272": {
      "op": "DUP6"
    },
    "7273": {
      "op": "MSTORE"
    },
    "7274": {
      "op": "SWAP4"
    },
    "7275": {
      "op": "DUP6"
    },
    "7276": {
      "op": "ADD"
    },
    "7277": {
      "op": "SWAP4"
    },
    "7278": {
      "op": "DUP6"
    },
    "7279": {
      "op": "ADD"
    },
    "7280": {
      "op": "PUSH2",
      "value": "0x1C56"
    },
    "7283": {
      "op": "JUMP"
    },
    "7284": {
      "op": "JUMPDEST"
    },
    "7285": {
      "op": "POP"
    },
    "7286": {
      "op": "DUP2"
    },
    "7287": {
      "op": "SWAP8"
    },
    "7288": {
      "op": "POP"
    },
    "7289": {
      "op": "PUSH2",
      "value": "0x1C82"
    },
    "7292": {
      "op": "DUP15"
    },
    "7293": {
      "op": "DUP3"
    },
    "7294": {
      "op": "PUSH2",
      "value": "0x1AC7"
    },
    "7297": {
      "jump": "i",
      "op": "JUMP"
    },
    "7298": {
      "op": "JUMPDEST"
    },
    "7299": {
      "op": "SWAP7"
    },
    "7300": {
      "op": "POP"
    },
    "7301": {
      "op": "POP"
    },
    "7302": {
      "op": "POP"
    },
    "7303": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "7306": {
      "op": "DUP12"
    },
    "7307": {
      "op": "ADD"
    },
    "7308": {
      "op": "CALLDATALOAD"
    },
    "7309": {
      "op": "SWAP3"
    },
    "7310": {
      "op": "POP"
    },
    "7311": {
      "op": "DUP1"
    },
    "7312": {
      "op": "DUP4"
    },
    "7313": {
      "op": "GT"
    },
    "7314": {
      "op": "ISZERO"
    },
    "7315": {
      "op": "PUSH2",
      "value": "0x1C9B"
    },
    "7318": {
      "op": "JUMPI"
    },
    "7319": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7321": {
      "op": "DUP1"
    },
    "7322": {
      "op": "REVERT"
    },
    "7323": {
      "op": "JUMPDEST"
    },
    "7324": {
      "op": "POP"
    },
    "7325": {
      "op": "POP"
    },
    "7326": {
      "op": "PUSH2",
      "value": "0x1CA9"
    },
    "7329": {
      "op": "DUP11"
    },
    "7330": {
      "op": "DUP3"
    },
    "7331": {
      "op": "DUP12"
    },
    "7332": {
      "op": "ADD"
    },
    "7333": {
      "op": "PUSH2",
      "value": "0x1B3B"
    },
    "7336": {
      "jump": "i",
      "op": "JUMP"
    },
    "7337": {
      "op": "JUMPDEST"
    },
    "7338": {
      "op": "SWAP2"
    },
    "7339": {
      "op": "POP"
    },
    "7340": {
      "op": "POP"
    },
    "7341": {
      "op": "SWAP3"
    },
    "7342": {
      "op": "SWAP6"
    },
    "7343": {
      "op": "SWAP9"
    },
    "7344": {
      "op": "SWAP2"
    },
    "7345": {
      "op": "SWAP5"
    },
    "7346": {
      "op": "SWAP8"
    },
    "7347": {
      "op": "POP"
    },
    "7348": {
      "op": "SWAP3"
    },
    "7349": {
      "op": "SWAP6"
    },
    "7350": {
      "op": "POP"
    },
    "7351": {
      "jump": "o",
      "op": "JUMP"
    },
    "7352": {
      "op": "JUMPDEST"
    },
    "7353": {
      "op": "DUP3"
    },
    "7354": {
      "op": "ISZERO"
    },
    "7355": {
      "op": "ISZERO"
    },
    "7356": {
      "op": "DUP2"
    },
    "7357": {
      "op": "MSTORE"
    },
    "7358": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7360": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7362": {
      "op": "DUP3"
    },
    "7363": {
      "op": "ADD"
    },
    "7364": {
      "op": "MSTORE"
    },
    "7365": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7367": {
      "op": "PUSH2",
      "value": "0x1CD3"
    },
    "7370": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7372": {
      "op": "DUP4"
    },
    "7373": {
      "op": "ADD"
    },
    "7374": {
      "op": "DUP5"
    },
    "7375": {
      "op": "PUSH2",
      "value": "0x1846"
    },
    "7378": {
      "jump": "i",
      "op": "JUMP"
    },
    "7379": {
      "op": "JUMPDEST"
    },
    "7380": {
      "op": "SWAP5"
    },
    "7381": {
      "op": "SWAP4"
    },
    "7382": {
      "op": "POP"
    },
    "7383": {
      "op": "POP"
    },
    "7384": {
      "op": "POP"
    },
    "7385": {
      "op": "POP"
    },
    "7386": {
      "jump": "o",
      "op": "JUMP"
    },
    "7387": {
      "op": "JUMPDEST"
    },
    "7388": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7390": {
      "op": "DUP1"
    },
    "7391": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7393": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7395": {
      "op": "DUP5"
    },
    "7396": {
      "op": "DUP7"
    },
    "7397": {
      "op": "SUB"
    },
    "7398": {
      "op": "SLT"
    },
    "7399": {
      "op": "ISZERO"
    },
    "7400": {
      "op": "PUSH2",
      "value": "0x1CF0"
    },
    "7403": {
      "op": "JUMPI"
    },
    "7404": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7406": {
      "op": "DUP1"
    },
    "7407": {
      "op": "REVERT"
    },
    "7408": {
      "op": "JUMPDEST"
    },
    "7409": {
      "op": "PUSH2",
      "value": "0x1CF9"
    },
    "7412": {
      "op": "DUP5"
    },
    "7413": {
      "op": "PUSH2",
      "value": "0x1AB6"
    },
    "7416": {
      "jump": "i",
      "op": "JUMP"
    },
    "7417": {
      "op": "JUMPDEST"
    },
    "7418": {
      "op": "SWAP3"
    },
    "7419": {
      "op": "POP"
    },
    "7420": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7422": {
      "op": "DUP5"
    },
    "7423": {
      "op": "ADD"
    },
    "7424": {
      "op": "CALLDATALOAD"
    },
    "7425": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7427": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7429": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7431": {
      "op": "SHL"
    },
    "7432": {
      "op": "SUB"
    },
    "7433": {
      "op": "DUP2"
    },
    "7434": {
      "op": "GT"
    },
    "7435": {
      "op": "ISZERO"
    },
    "7436": {
      "op": "PUSH2",
      "value": "0x1D14"
    },
    "7439": {
      "op": "JUMPI"
    },
    "7440": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7442": {
      "op": "DUP1"
    },
    "7443": {
      "op": "REVERT"
    },
    "7444": {
      "op": "JUMPDEST"
    },
    "7445": {
      "op": "PUSH2",
      "value": "0x1D20"
    },
    "7448": {
      "op": "DUP7"
    },
    "7449": {
      "op": "DUP3"
    },
    "7450": {
      "op": "DUP8"
    },
    "7451": {
      "op": "ADD"
    },
    "7452": {
      "op": "PUSH2",
      "value": "0x16C1"
    },
    "7455": {
      "jump": "i",
      "op": "JUMP"
    },
    "7456": {
      "op": "JUMPDEST"
    },
    "7457": {
      "op": "SWAP3"
    },
    "7458": {
      "op": "POP"
    },
    "7459": {
      "op": "POP"
    },
    "7460": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7462": {
      "op": "DUP5"
    },
    "7463": {
      "op": "ADD"
    },
    "7464": {
      "op": "CALLDATALOAD"
    },
    "7465": {
      "op": "SWAP1"
    },
    "7466": {
      "op": "POP"
    },
    "7467": {
      "op": "SWAP3"
    },
    "7468": {
      "op": "POP"
    },
    "7469": {
      "op": "SWAP3"
    },
    "7470": {
      "op": "POP"
    },
    "7471": {
      "op": "SWAP3"
    },
    "7472": {
      "jump": "o",
      "op": "JUMP"
    },
    "7473": {
      "op": "JUMPDEST"
    },
    "7474": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7476": {
      "op": "DUP1"
    },
    "7477": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7479": {
      "op": "DUP4"
    },
    "7480": {
      "op": "DUP6"
    },
    "7481": {
      "op": "SUB"
    },
    "7482": {
      "op": "SLT"
    },
    "7483": {
      "op": "ISZERO"
    },
    "7484": {
      "op": "PUSH2",
      "value": "0x1D44"
    },
    "7487": {
      "op": "JUMPI"
    },
    "7488": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7490": {
      "op": "DUP1"
    },
    "7491": {
      "op": "REVERT"
    },
    "7492": {
      "op": "JUMPDEST"
    },
    "7493": {
      "op": "PUSH2",
      "value": "0x1D4D"
    },
    "7496": {
      "op": "DUP4"
    },
    "7497": {
      "op": "PUSH2",
      "value": "0x1932"
    },
    "7500": {
      "jump": "i",
      "op": "JUMP"
    },
    "7501": {
      "op": "JUMPDEST"
    },
    "7502": {
      "op": "SWAP2"
    },
    "7503": {
      "op": "POP"
    },
    "7504": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7506": {
      "op": "DUP4"
    },
    "7507": {
      "op": "ADD"
    },
    "7508": {
      "op": "CALLDATALOAD"
    },
    "7509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7511": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7513": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7515": {
      "op": "SHL"
    },
    "7516": {
      "op": "SUB"
    },
    "7517": {
      "op": "DUP2"
    },
    "7518": {
      "op": "GT"
    },
    "7519": {
      "op": "ISZERO"
    },
    "7520": {
      "op": "PUSH2",
      "value": "0x1D68"
    },
    "7523": {
      "op": "JUMPI"
    },
    "7524": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7526": {
      "op": "DUP1"
    },
    "7527": {
      "op": "REVERT"
    },
    "7528": {
      "op": "JUMPDEST"
    },
    "7529": {
      "op": "PUSH2",
      "value": "0x1D74"
    },
    "7532": {
      "op": "DUP6"
    },
    "7533": {
      "op": "DUP3"
    },
    "7534": {
      "op": "DUP7"
    },
    "7535": {
      "op": "ADD"
    },
    "7536": {
      "op": "PUSH2",
      "value": "0x16C1"
    },
    "7539": {
      "jump": "i",
      "op": "JUMP"
    },
    "7540": {
      "op": "JUMPDEST"
    },
    "7541": {
      "op": "SWAP2"
    },
    "7542": {
      "op": "POP"
    },
    "7543": {
      "op": "POP"
    },
    "7544": {
      "op": "SWAP3"
    },
    "7545": {
      "op": "POP"
    },
    "7546": {
      "op": "SWAP3"
    },
    "7547": {
      "op": "SWAP1"
    },
    "7548": {
      "op": "POP"
    },
    "7549": {
      "jump": "o",
      "op": "JUMP"
    },
    "7550": {
      "op": "JUMPDEST"
    },
    "7551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7555": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7557": {
      "op": "SHL"
    },
    "7558": {
      "op": "SUB"
    },
    "7559": {
      "op": "DUP5"
    },
    "7560": {
      "op": "AND"
    },
    "7561": {
      "op": "DUP2"
    },
    "7562": {
      "op": "MSTORE"
    },
    "7563": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7565": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7567": {
      "op": "DUP3"
    },
    "7568": {
      "op": "ADD"
    },
    "7569": {
      "op": "DUP2"
    },
    "7570": {
      "op": "SWAP1"
    },
    "7571": {
      "op": "MSTORE"
    },
    "7572": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7574": {
      "op": "SWAP1"
    },
    "7575": {
      "op": "PUSH2",
      "value": "0x1DA2"
    },
    "7578": {
      "op": "SWAP1"
    },
    "7579": {
      "op": "DUP4"
    },
    "7580": {
      "op": "ADD"
    },
    "7581": {
      "op": "DUP6"
    },
    "7582": {
      "op": "PUSH2",
      "value": "0x1846"
    },
    "7585": {
      "jump": "i",
      "op": "JUMP"
    },
    "7586": {
      "op": "JUMPDEST"
    },
    "7587": {
      "op": "SWAP1"
    },
    "7588": {
      "op": "POP"
    },
    "7589": {
      "op": "DUP3"
    },
    "7590": {
      "op": "ISZERO"
    },
    "7591": {
      "op": "ISZERO"
    },
    "7592": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7594": {
      "op": "DUP4"
    },
    "7595": {
      "op": "ADD"
    },
    "7596": {
      "op": "MSTORE"
    },
    "7597": {
      "op": "SWAP5"
    },
    "7598": {
      "op": "SWAP4"
    },
    "7599": {
      "op": "POP"
    },
    "7600": {
      "op": "POP"
    },
    "7601": {
      "op": "POP"
    },
    "7602": {
      "op": "POP"
    },
    "7603": {
      "jump": "o",
      "op": "JUMP"
    },
    "7604": {
      "op": "JUMPDEST"
    },
    "7605": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7607": {
      "op": "DUP1"
    },
    "7608": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7610": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7612": {
      "op": "DUP5"
    },
    "7613": {
      "op": "DUP7"
    },
    "7614": {
      "op": "SUB"
    },
    "7615": {
      "op": "SLT"
    },
    "7616": {
      "op": "ISZERO"
    },
    "7617": {
      "op": "PUSH2",
      "value": "0x1DC9"
    },
    "7620": {
      "op": "JUMPI"
    },
    "7621": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7623": {
      "op": "DUP1"
    },
    "7624": {
      "op": "REVERT"
    },
    "7625": {
      "op": "JUMPDEST"
    },
    "7626": {
      "op": "DUP4"
    },
    "7627": {
      "op": "CALLDATALOAD"
    },
    "7628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7632": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7634": {
      "op": "SHL"
    },
    "7635": {
      "op": "SUB"
    },
    "7636": {
      "op": "DUP1"
    },
    "7637": {
      "op": "DUP3"
    },
    "7638": {
      "op": "GT"
    },
    "7639": {
      "op": "ISZERO"
    },
    "7640": {
      "op": "PUSH2",
      "value": "0x1DE0"
    },
    "7643": {
      "op": "JUMPI"
    },
    "7644": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7646": {
      "op": "DUP1"
    },
    "7647": {
      "op": "REVERT"
    },
    "7648": {
      "op": "JUMPDEST"
    },
    "7649": {
      "op": "PUSH2",
      "value": "0x1DEC"
    },
    "7652": {
      "op": "DUP8"
    },
    "7653": {
      "op": "DUP4"
    },
    "7654": {
      "op": "DUP9"
    },
    "7655": {
      "op": "ADD"
    },
    "7656": {
      "op": "PUSH2",
      "value": "0x16C1"
    },
    "7659": {
      "jump": "i",
      "op": "JUMP"
    },
    "7660": {
      "op": "JUMPDEST"
    },
    "7661": {
      "op": "SWAP5"
    },
    "7662": {
      "op": "POP"
    },
    "7663": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7665": {
      "op": "DUP7"
    },
    "7666": {
      "op": "ADD"
    },
    "7667": {
      "op": "CALLDATALOAD"
    },
    "7668": {
      "op": "SWAP2"
    },
    "7669": {
      "op": "POP"
    },
    "7670": {
      "op": "DUP1"
    },
    "7671": {
      "op": "DUP3"
    },
    "7672": {
      "op": "GT"
    },
    "7673": {
      "op": "ISZERO"
    },
    "7674": {
      "op": "PUSH2",
      "value": "0x1E02"
    },
    "7677": {
      "op": "JUMPI"
    },
    "7678": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7680": {
      "op": "DUP1"
    },
    "7681": {
      "op": "REVERT"
    },
    "7682": {
      "op": "JUMPDEST"
    },
    "7683": {
      "op": "PUSH2",
      "value": "0x1E0E"
    },
    "7686": {
      "op": "DUP8"
    },
    "7687": {
      "op": "DUP4"
    },
    "7688": {
      "op": "DUP9"
    },
    "7689": {
      "op": "ADD"
    },
    "7690": {
      "op": "PUSH2",
      "value": "0x16C1"
    },
    "7693": {
      "jump": "i",
      "op": "JUMP"
    },
    "7694": {
      "op": "JUMPDEST"
    },
    "7695": {
      "op": "SWAP4"
    },
    "7696": {
      "op": "POP"
    },
    "7697": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7699": {
      "op": "DUP7"
    },
    "7700": {
      "op": "ADD"
    },
    "7701": {
      "op": "CALLDATALOAD"
    },
    "7702": {
      "op": "SWAP2"
    },
    "7703": {
      "op": "POP"
    },
    "7704": {
      "op": "DUP1"
    },
    "7705": {
      "op": "DUP3"
    },
    "7706": {
      "op": "GT"
    },
    "7707": {
      "op": "ISZERO"
    },
    "7708": {
      "op": "PUSH2",
      "value": "0x1E24"
    },
    "7711": {
      "op": "JUMPI"
    },
    "7712": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7714": {
      "op": "DUP1"
    },
    "7715": {
      "op": "REVERT"
    },
    "7716": {
      "op": "JUMPDEST"
    },
    "7717": {
      "op": "POP"
    },
    "7718": {
      "op": "PUSH2",
      "value": "0x1E31"
    },
    "7721": {
      "op": "DUP7"
    },
    "7722": {
      "op": "DUP3"
    },
    "7723": {
      "op": "DUP8"
    },
    "7724": {
      "op": "ADD"
    },
    "7725": {
      "op": "PUSH2",
      "value": "0x16C1"
    },
    "7728": {
      "jump": "i",
      "op": "JUMP"
    },
    "7729": {
      "op": "JUMPDEST"
    },
    "7730": {
      "op": "SWAP2"
    },
    "7731": {
      "op": "POP"
    },
    "7732": {
      "op": "POP"
    },
    "7733": {
      "op": "SWAP3"
    },
    "7734": {
      "op": "POP"
    },
    "7735": {
      "op": "SWAP3"
    },
    "7736": {
      "op": "POP"
    },
    "7737": {
      "op": "SWAP3"
    },
    "7738": {
      "jump": "o",
      "op": "JUMP"
    },
    "7739": {
      "op": "JUMPDEST"
    },
    "7740": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7745": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7747": {
      "op": "SHL"
    },
    "7748": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7750": {
      "op": "MSTORE"
    },
    "7751": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "7753": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7755": {
      "op": "MSTORE"
    },
    "7756": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7758": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7760": {
      "op": "REVERT"
    },
    "7761": {
      "op": "JUMPDEST"
    },
    "7762": {
      "op": "PUSH1",
      "value": "0x9"
    },
    "7764": {
      "op": "DUP2"
    },
    "7765": {
      "op": "LT"
    },
    "7766": {
      "op": "PUSH2",
      "value": "0x1E6F"
    },
    "7769": {
      "op": "JUMPI"
    },
    "7770": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7775": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7777": {
      "op": "SHL"
    },
    "7778": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7780": {
      "op": "MSTORE"
    },
    "7781": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "7783": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7785": {
      "op": "MSTORE"
    },
    "7786": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7788": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7790": {
      "op": "REVERT"
    },
    "7791": {
      "op": "JUMPDEST"
    },
    "7792": {
      "op": "SWAP1"
    },
    "7793": {
      "op": "MSTORE"
    },
    "7794": {
      "jump": "o",
      "op": "JUMP"
    },
    "7795": {
      "op": "JUMPDEST"
    },
    "7796": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7798": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7800": {
      "op": "DUP1"
    },
    "7801": {
      "op": "DUP4"
    },
    "7802": {
      "op": "ADD"
    },
    "7803": {
      "op": "DUP2"
    },
    "7804": {
      "op": "DUP5"
    },
    "7805": {
      "op": "MSTORE"
    },
    "7806": {
      "op": "DUP1"
    },
    "7807": {
      "op": "DUP6"
    },
    "7808": {
      "op": "MLOAD"
    },
    "7809": {
      "op": "DUP1"
    },
    "7810": {
      "op": "DUP4"
    },
    "7811": {
      "op": "MSTORE"
    },
    "7812": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7814": {
      "op": "SWAP3"
    },
    "7815": {
      "op": "POP"
    },
    "7816": {
      "op": "DUP3"
    },
    "7817": {
      "op": "DUP7"
    },
    "7818": {
      "op": "ADD"
    },
    "7819": {
      "op": "SWAP2"
    },
    "7820": {
      "op": "POP"
    },
    "7821": {
      "op": "DUP3"
    },
    "7822": {
      "op": "DUP2"
    },
    "7823": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "7825": {
      "op": "SHL"
    },
    "7826": {
      "op": "DUP8"
    },
    "7827": {
      "op": "ADD"
    },
    "7828": {
      "op": "ADD"
    },
    "7829": {
      "op": "DUP5"
    },
    "7830": {
      "op": "DUP9"
    },
    "7831": {
      "op": "ADD"
    },
    "7832": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7834": {
      "op": "JUMPDEST"
    },
    "7835": {
      "op": "DUP4"
    },
    "7836": {
      "op": "DUP2"
    },
    "7837": {
      "op": "LT"
    },
    "7838": {
      "op": "ISZERO"
    },
    "7839": {
      "op": "PUSH2",
      "value": "0x1AA8"
    },
    "7842": {
      "op": "JUMPI"
    },
    "7843": {
      "op": "DUP9"
    },
    "7844": {
      "op": "DUP4"
    },
    "7845": {
      "op": "SUB"
    },
    "7846": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "7848": {
      "op": "NOT"
    },
    "7849": {
      "op": "ADD"
    },
    "7850": {
      "op": "DUP6"
    },
    "7851": {
      "op": "MSTORE"
    },
    "7852": {
      "op": "DUP2"
    },
    "7853": {
      "op": "MLOAD"
    },
    "7854": {
      "op": "DUP1"
    },
    "7855": {
      "op": "MLOAD"
    },
    "7856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7860": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7862": {
      "op": "SHL"
    },
    "7863": {
      "op": "SUB"
    },
    "7864": {
      "op": "AND"
    },
    "7865": {
      "op": "DUP5"
    },
    "7866": {
      "op": "MSTORE"
    },
    "7867": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "7870": {
      "op": "DUP9"
    },
    "7871": {
      "op": "DUP3"
    },
    "7872": {
      "op": "ADD"
    },
    "7873": {
      "op": "MLOAD"
    },
    "7874": {
      "op": "PUSH2",
      "value": "0x1ECD"
    },
    "7877": {
      "op": "DUP11"
    },
    "7878": {
      "op": "DUP8"
    },
    "7879": {
      "op": "ADD"
    },
    "7880": {
      "op": "DUP3"
    },
    "7881": {
      "op": "PUSH2",
      "value": "0x1E51"
    },
    "7884": {
      "jump": "i",
      "op": "JUMP"
    },
    "7885": {
      "op": "JUMPDEST"
    },
    "7886": {
      "op": "POP"
    },
    "7887": {
      "op": "DUP8"
    },
    "7888": {
      "op": "DUP3"
    },
    "7889": {
      "op": "ADD"
    },
    "7890": {
      "op": "MLOAD"
    },
    "7891": {
      "op": "DUP2"
    },
    "7892": {
      "op": "DUP10"
    },
    "7893": {
      "op": "DUP8"
    },
    "7894": {
      "op": "ADD"
    },
    "7895": {
      "op": "MSTORE"
    },
    "7896": {
      "op": "PUSH2",
      "value": "0x1EE3"
    },
    "7899": {
      "op": "DUP3"
    },
    "7900": {
      "op": "DUP8"
    },
    "7901": {
      "op": "ADD"
    },
    "7902": {
      "op": "DUP3"
    },
    "7903": {
      "op": "PUSH2",
      "value": "0x1846"
    },
    "7906": {
      "jump": "i",
      "op": "JUMP"
    },
    "7907": {
      "op": "JUMPDEST"
    },
    "7908": {
      "op": "SWAP2"
    },
    "7909": {
      "op": "POP"
    },
    "7910": {
      "op": "POP"
    },
    "7911": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7913": {
      "op": "DUP1"
    },
    "7914": {
      "op": "DUP4"
    },
    "7915": {
      "op": "ADD"
    },
    "7916": {
      "op": "MLOAD"
    },
    "7917": {
      "op": "DUP2"
    },
    "7918": {
      "op": "DUP8"
    },
    "7919": {
      "op": "ADD"
    },
    "7920": {
      "op": "MSTORE"
    },
    "7921": {
      "op": "POP"
    },
    "7922": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7924": {
      "op": "DUP1"
    },
    "7925": {
      "op": "DUP4"
    },
    "7926": {
      "op": "ADD"
    },
    "7927": {
      "op": "MLOAD"
    },
    "7928": {
      "op": "PUSH2",
      "value": "0x1F05"
    },
    "7931": {
      "op": "DUP3"
    },
    "7932": {
      "op": "DUP9"
    },
    "7933": {
      "op": "ADD"
    },
    "7934": {
      "op": "DUP3"
    },
    "7935": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7937": {
      "op": "AND"
    },
    "7938": {
      "op": "SWAP1"
    },
    "7939": {
      "op": "MSTORE"
    },
    "7940": {
      "op": "JUMP"
    },
    "7941": {
      "op": "JUMPDEST"
    },
    "7942": {
      "op": "POP"
    },
    "7943": {
      "op": "POP"
    },
    "7944": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7946": {
      "op": "DUP3"
    },
    "7947": {
      "op": "DUP2"
    },
    "7948": {
      "op": "ADD"
    },
    "7949": {
      "op": "MLOAD"
    },
    "7950": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7952": {
      "op": "AND"
    },
    "7953": {
      "op": "SWAP1"
    },
    "7954": {
      "op": "DUP7"
    },
    "7955": {
      "op": "ADD"
    },
    "7956": {
      "op": "MSTORE"
    },
    "7957": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "7959": {
      "op": "DUP1"
    },
    "7960": {
      "op": "DUP4"
    },
    "7961": {
      "op": "ADD"
    },
    "7962": {
      "op": "MLOAD"
    },
    "7963": {
      "op": "ISZERO"
    },
    "7964": {
      "op": "ISZERO"
    },
    "7965": {
      "op": "SWAP1"
    },
    "7966": {
      "op": "DUP7"
    },
    "7967": {
      "op": "ADD"
    },
    "7968": {
      "op": "MSTORE"
    },
    "7969": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7971": {
      "op": "DUP1"
    },
    "7972": {
      "op": "DUP4"
    },
    "7973": {
      "op": "ADD"
    },
    "7974": {
      "op": "MLOAD"
    },
    "7975": {
      "op": "ISZERO"
    },
    "7976": {
      "op": "ISZERO"
    },
    "7977": {
      "op": "SWAP1"
    },
    "7978": {
      "op": "DUP7"
    },
    "7979": {
      "op": "ADD"
    },
    "7980": {
      "op": "MSTORE"
    },
    "7981": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "7984": {
      "op": "SWAP2"
    },
    "7985": {
      "op": "DUP3"
    },
    "7986": {
      "op": "ADD"
    },
    "7987": {
      "op": "MLOAD"
    },
    "7988": {
      "op": "SWAP2"
    },
    "7989": {
      "op": "SWAP1"
    },
    "7990": {
      "op": "SWAP5"
    },
    "7991": {
      "op": "ADD"
    },
    "7992": {
      "op": "MSTORE"
    },
    "7993": {
      "op": "SWAP4"
    },
    "7994": {
      "op": "DUP7"
    },
    "7995": {
      "op": "ADD"
    },
    "7996": {
      "op": "SWAP4"
    },
    "7997": {
      "op": "SWAP1"
    },
    "7998": {
      "op": "DUP7"
    },
    "7999": {
      "op": "ADD"
    },
    "8000": {
      "op": "SWAP1"
    },
    "8001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8003": {
      "op": "ADD"
    },
    "8004": {
      "op": "PUSH2",
      "value": "0x1E9A"
    },
    "8007": {
      "op": "JUMP"
    },
    "8008": {
      "op": "JUMPDEST"
    },
    "8009": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8011": {
      "op": "DUP1"
    },
    "8012": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8014": {
      "op": "DUP1"
    },
    "8015": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8017": {
      "op": "DUP6"
    },
    "8018": {
      "op": "DUP8"
    },
    "8019": {
      "op": "SUB"
    },
    "8020": {
      "op": "SLT"
    },
    "8021": {
      "op": "ISZERO"
    },
    "8022": {
      "op": "PUSH2",
      "value": "0x1F5E"
    },
    "8025": {
      "op": "JUMPI"
    },
    "8026": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8028": {
      "op": "DUP1"
    },
    "8029": {
      "op": "REVERT"
    },
    "8030": {
      "op": "JUMPDEST"
    },
    "8031": {
      "op": "DUP5"
    },
    "8032": {
      "op": "CALLDATALOAD"
    },
    "8033": {
      "op": "SWAP4"
    },
    "8034": {
      "op": "POP"
    },
    "8035": {
      "op": "PUSH2",
      "value": "0x1F6E"
    },
    "8038": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8040": {
      "op": "DUP7"
    },
    "8041": {
      "op": "ADD"
    },
    "8042": {
      "op": "PUSH2",
      "value": "0x1932"
    },
    "8045": {
      "jump": "i",
      "op": "JUMP"
    },
    "8046": {
      "op": "JUMPDEST"
    },
    "8047": {
      "op": "SWAP3"
    },
    "8048": {
      "op": "POP"
    },
    "8049": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8051": {
      "op": "DUP6"
    },
    "8052": {
      "op": "ADD"
    },
    "8053": {
      "op": "CALLDATALOAD"
    },
    "8054": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8056": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8058": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8060": {
      "op": "SHL"
    },
    "8061": {
      "op": "SUB"
    },
    "8062": {
      "op": "DUP1"
    },
    "8063": {
      "op": "DUP3"
    },
    "8064": {
      "op": "GT"
    },
    "8065": {
      "op": "ISZERO"
    },
    "8066": {
      "op": "PUSH2",
      "value": "0x1F8A"
    },
    "8069": {
      "op": "JUMPI"
    },
    "8070": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8072": {
      "op": "DUP1"
    },
    "8073": {
      "op": "REVERT"
    },
    "8074": {
      "op": "JUMPDEST"
    },
    "8075": {
      "op": "PUSH2",
      "value": "0x1F96"
    },
    "8078": {
      "op": "DUP9"
    },
    "8079": {
      "op": "DUP4"
    },
    "8080": {
      "op": "DUP10"
    },
    "8081": {
      "op": "ADD"
    },
    "8082": {
      "op": "PUSH2",
      "value": "0x16C1"
    },
    "8085": {
      "jump": "i",
      "op": "JUMP"
    },
    "8086": {
      "op": "JUMPDEST"
    },
    "8087": {
      "op": "SWAP4"
    },
    "8088": {
      "op": "POP"
    },
    "8089": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8091": {
      "op": "DUP8"
    },
    "8092": {
      "op": "ADD"
    },
    "8093": {
      "op": "CALLDATALOAD"
    },
    "8094": {
      "op": "SWAP2"
    },
    "8095": {
      "op": "POP"
    },
    "8096": {
      "op": "DUP1"
    },
    "8097": {
      "op": "DUP3"
    },
    "8098": {
      "op": "GT"
    },
    "8099": {
      "op": "ISZERO"
    },
    "8100": {
      "op": "PUSH2",
      "value": "0x1919"
    },
    "8103": {
      "op": "JUMPI"
    },
    "8104": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8106": {
      "op": "DUP1"
    },
    "8107": {
      "op": "REVERT"
    },
    "8108": {
      "op": "JUMPDEST"
    },
    "8109": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8111": {
      "op": "DUP1"
    },
    "8112": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8114": {
      "op": "DUP4"
    },
    "8115": {
      "op": "DUP6"
    },
    "8116": {
      "op": "SUB"
    },
    "8117": {
      "op": "SLT"
    },
    "8118": {
      "op": "ISZERO"
    },
    "8119": {
      "op": "PUSH2",
      "value": "0x1FBF"
    },
    "8122": {
      "op": "JUMPI"
    },
    "8123": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8125": {
      "op": "DUP1"
    },
    "8126": {
      "op": "REVERT"
    },
    "8127": {
      "op": "JUMPDEST"
    },
    "8128": {
      "op": "DUP3"
    },
    "8129": {
      "op": "CALLDATALOAD"
    },
    "8130": {
      "op": "SWAP2"
    },
    "8131": {
      "op": "POP"
    },
    "8132": {
      "op": "PUSH2",
      "value": "0x1FCF"
    },
    "8135": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8137": {
      "op": "DUP5"
    },
    "8138": {
      "op": "ADD"
    },
    "8139": {
      "op": "PUSH2",
      "value": "0x1637"
    },
    "8142": {
      "jump": "i",
      "op": "JUMP"
    },
    "8143": {
      "op": "JUMPDEST"
    },
    "8144": {
      "op": "SWAP1"
    },
    "8145": {
      "op": "POP"
    },
    "8146": {
      "op": "SWAP3"
    },
    "8147": {
      "op": "POP"
    },
    "8148": {
      "op": "SWAP3"
    },
    "8149": {
      "op": "SWAP1"
    },
    "8150": {
      "op": "POP"
    },
    "8151": {
      "jump": "o",
      "op": "JUMP"
    },
    "8152": {
      "op": "JUMPDEST"
    },
    "8153": {
      "op": "DUP4"
    },
    "8154": {
      "op": "ISZERO"
    },
    "8155": {
      "op": "ISZERO"
    },
    "8156": {
      "op": "DUP2"
    },
    "8157": {
      "op": "MSTORE"
    },
    "8158": {
      "op": "DUP3"
    },
    "8159": {
      "op": "ISZERO"
    },
    "8160": {
      "op": "ISZERO"
    },
    "8161": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8163": {
      "op": "DUP3"
    },
    "8164": {
      "op": "ADD"
    },
    "8165": {
      "op": "MSTORE"
    },
    "8166": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8168": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8170": {
      "op": "DUP3"
    },
    "8171": {
      "op": "ADD"
    },
    "8172": {
      "op": "MSTORE"
    },
    "8173": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8175": {
      "op": "PUSH2",
      "value": "0x1FFB"
    },
    "8178": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8180": {
      "op": "DUP4"
    },
    "8181": {
      "op": "ADD"
    },
    "8182": {
      "op": "DUP5"
    },
    "8183": {
      "op": "PUSH2",
      "value": "0x1846"
    },
    "8186": {
      "jump": "i",
      "op": "JUMP"
    },
    "8187": {
      "op": "JUMPDEST"
    },
    "8188": {
      "op": "SWAP6"
    },
    "8189": {
      "op": "SWAP5"
    },
    "8190": {
      "op": "POP"
    },
    "8191": {
      "op": "POP"
    },
    "8192": {
      "op": "POP"
    },
    "8193": {
      "op": "POP"
    },
    "8194": {
      "op": "POP"
    },
    "8195": {
      "jump": "o",
      "op": "JUMP"
    },
    "8196": {
      "op": "JUMPDEST"
    },
    "8197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8201": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8203": {
      "op": "SHL"
    },
    "8204": {
      "op": "SUB"
    },
    "8205": {
      "op": "DUP11"
    },
    "8206": {
      "op": "AND"
    },
    "8207": {
      "op": "DUP2"
    },
    "8208": {
      "op": "MSTORE"
    },
    "8209": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8211": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "8214": {
      "op": "PUSH2",
      "value": "0x2022"
    },
    "8217": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8219": {
      "op": "DUP5"
    },
    "8220": {
      "op": "ADD"
    },
    "8221": {
      "op": "DUP13"
    },
    "8222": {
      "op": "PUSH2",
      "value": "0x1E51"
    },
    "8225": {
      "jump": "i",
      "op": "JUMP"
    },
    "8226": {
      "op": "JUMPDEST"
    },
    "8227": {
      "op": "DUP1"
    },
    "8228": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8230": {
      "op": "DUP5"
    },
    "8231": {
      "op": "ADD"
    },
    "8232": {
      "op": "MSTORE"
    },
    "8233": {
      "op": "PUSH2",
      "value": "0x2034"
    },
    "8236": {
      "op": "DUP2"
    },
    "8237": {
      "op": "DUP5"
    },
    "8238": {
      "op": "ADD"
    },
    "8239": {
      "op": "DUP12"
    },
    "8240": {
      "op": "PUSH2",
      "value": "0x1846"
    },
    "8243": {
      "jump": "i",
      "op": "JUMP"
    },
    "8244": {
      "op": "JUMPDEST"
    },
    "8245": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8247": {
      "op": "DUP5"
    },
    "8248": {
      "op": "ADD"
    },
    "8249": {
      "op": "SWAP10"
    },
    "8250": {
      "op": "SWAP1"
    },
    "8251": {
      "op": "SWAP10"
    },
    "8252": {
      "op": "MSTORE"
    },
    "8253": {
      "op": "POP"
    },
    "8254": {
      "op": "POP"
    },
    "8255": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8257": {
      "op": "SWAP6"
    },
    "8258": {
      "op": "DUP7"
    },
    "8259": {
      "op": "AND"
    },
    "8260": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8262": {
      "op": "DUP3"
    },
    "8263": {
      "op": "ADD"
    },
    "8264": {
      "op": "MSTORE"
    },
    "8265": {
      "op": "SWAP4"
    },
    "8266": {
      "op": "SWAP1"
    },
    "8267": {
      "op": "SWAP5"
    },
    "8268": {
      "op": "AND"
    },
    "8269": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8271": {
      "op": "DUP5"
    },
    "8272": {
      "op": "ADD"
    },
    "8273": {
      "op": "MSTORE"
    },
    "8274": {
      "op": "SWAP1"
    },
    "8275": {
      "op": "ISZERO"
    },
    "8276": {
      "op": "ISZERO"
    },
    "8277": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "8279": {
      "op": "DUP4"
    },
    "8280": {
      "op": "ADD"
    },
    "8281": {
      "op": "MSTORE"
    },
    "8282": {
      "op": "ISZERO"
    },
    "8283": {
      "op": "ISZERO"
    },
    "8284": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8286": {
      "op": "DUP3"
    },
    "8287": {
      "op": "ADD"
    },
    "8288": {
      "op": "MSTORE"
    },
    "8289": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "8292": {
      "op": "ADD"
    },
    "8293": {
      "op": "MSTORE"
    },
    "8294": {
      "op": "SWAP4"
    },
    "8295": {
      "op": "SWAP3"
    },
    "8296": {
      "op": "POP"
    },
    "8297": {
      "op": "POP"
    },
    "8298": {
      "op": "POP"
    },
    "8299": {
      "jump": "o",
      "op": "JUMP"
    },
    "8300": {
      "op": "JUMPDEST"
    },
    "8301": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8303": {
      "op": "DUP1"
    },
    "8304": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8306": {
      "op": "DUP1"
    },
    "8307": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8309": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8311": {
      "op": "DUP7"
    },
    "8312": {
      "op": "DUP9"
    },
    "8313": {
      "op": "SUB"
    },
    "8314": {
      "op": "SLT"
    },
    "8315": {
      "op": "ISZERO"
    },
    "8316": {
      "op": "PUSH2",
      "value": "0x2084"
    },
    "8319": {
      "op": "JUMPI"
    },
    "8320": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8322": {
      "op": "DUP1"
    },
    "8323": {
      "op": "REVERT"
    },
    "8324": {
      "op": "JUMPDEST"
    },
    "8325": {
      "op": "PUSH2",
      "value": "0x208D"
    },
    "8328": {
      "op": "DUP7"
    },
    "8329": {
      "op": "PUSH2",
      "value": "0x1637"
    },
    "8332": {
      "jump": "i",
      "op": "JUMP"
    },
    "8333": {
      "op": "JUMPDEST"
    },
    "8334": {
      "op": "SWAP5"
    },
    "8335": {
      "op": "POP"
    },
    "8336": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8338": {
      "op": "DUP7"
    },
    "8339": {
      "op": "ADD"
    },
    "8340": {
      "op": "CALLDATALOAD"
    },
    "8341": {
      "op": "SWAP4"
    },
    "8342": {
      "op": "POP"
    },
    "8343": {
      "op": "PUSH2",
      "value": "0x20A2"
    },
    "8346": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8348": {
      "op": "DUP8"
    },
    "8349": {
      "op": "ADD"
    },
    "8350": {
      "op": "PUSH2",
      "value": "0x1637"
    },
    "8353": {
      "jump": "i",
      "op": "JUMP"
    },
    "8354": {
      "op": "JUMPDEST"
    },
    "8355": {
      "op": "SWAP3"
    },
    "8356": {
      "op": "POP"
    },
    "8357": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8359": {
      "op": "DUP7"
    },
    "8360": {
      "op": "ADD"
    },
    "8361": {
      "op": "CALLDATALOAD"
    },
    "8362": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8364": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8366": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8368": {
      "op": "SHL"
    },
    "8369": {
      "op": "SUB"
    },
    "8370": {
      "op": "DUP2"
    },
    "8371": {
      "op": "GT"
    },
    "8372": {
      "op": "ISZERO"
    },
    "8373": {
      "op": "PUSH2",
      "value": "0x17DF"
    },
    "8376": {
      "op": "JUMPI"
    },
    "8377": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8379": {
      "op": "DUP1"
    },
    "8380": {
      "op": "REVERT"
    },
    "8381": {
      "op": "JUMPDEST"
    },
    "8382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8384": {
      "op": "DUP1"
    },
    "8385": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8387": {
      "op": "SHL"
    },
    "8388": {
      "op": "SUB"
    },
    "8389": {
      "op": "DUP6"
    },
    "8390": {
      "op": "AND"
    },
    "8391": {
      "op": "DUP2"
    },
    "8392": {
      "op": "MSTORE"
    },
    "8393": {
      "op": "DUP4"
    },
    "8394": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8396": {
      "op": "DUP3"
    },
    "8397": {
      "op": "ADD"
    },
    "8398": {
      "op": "MSTORE"
    },
    "8399": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8401": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8403": {
      "op": "DUP3"
    },
    "8404": {
      "op": "ADD"
    },
    "8405": {
      "op": "MSTORE"
    },
    "8406": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8408": {
      "op": "PUSH2",
      "value": "0x20E4"
    },
    "8411": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8413": {
      "op": "DUP4"
    },
    "8414": {
      "op": "ADD"
    },
    "8415": {
      "op": "DUP6"
    },
    "8416": {
      "op": "PUSH2",
      "value": "0x1846"
    },
    "8419": {
      "jump": "i",
      "op": "JUMP"
    },
    "8420": {
      "op": "JUMPDEST"
    },
    "8421": {
      "op": "SWAP1"
    },
    "8422": {
      "op": "POP"
    },
    "8423": {
      "op": "DUP3"
    },
    "8424": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8426": {
      "op": "DUP4"
    },
    "8427": {
      "op": "ADD"
    },
    "8428": {
      "op": "MSTORE"
    },
    "8429": {
      "op": "SWAP6"
    },
    "8430": {
      "op": "SWAP5"
    },
    "8431": {
      "op": "POP"
    },
    "8432": {
      "op": "POP"
    },
    "8433": {
      "op": "POP"
    },
    "8434": {
      "op": "POP"
    },
    "8435": {
      "op": "POP"
    },
    "8436": {
      "jump": "o",
      "op": "JUMP"
    },
    "8437": {
      "op": "JUMPDEST"
    },
    "8438": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8440": {
      "op": "DUP3"
    },
    "8441": {
      "op": "MLOAD"
    },
    "8442": {
      "op": "PUSH2",
      "value": "0x2107"
    },
    "8445": {
      "op": "DUP2"
    },
    "8446": {
      "op": "DUP5"
    },
    "8447": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8449": {
      "op": "DUP8"
    },
    "8450": {
      "op": "ADD"
    },
    "8451": {
      "op": "PUSH2",
      "value": "0x1816"
    },
    "8454": {
      "jump": "i",
      "op": "JUMP"
    },
    "8455": {
      "op": "JUMPDEST"
    },
    "8456": {
      "op": "SWAP2"
    },
    "8457": {
      "op": "SWAP1"
    },
    "8458": {
      "op": "SWAP2"
    },
    "8459": {
      "op": "ADD"
    },
    "8460": {
      "op": "SWAP3"
    },
    "8461": {
      "op": "SWAP2"
    },
    "8462": {
      "op": "POP"
    },
    "8463": {
      "op": "POP"
    },
    "8464": {
      "jump": "o",
      "op": "JUMP"
    },
    "8465": {
      "op": "JUMPDEST"
    },
    "8466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8468": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8470": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8472": {
      "op": "SHL"
    },
    "8473": {
      "op": "SUB"
    },
    "8474": {
      "op": "DUP7"
    },
    "8475": {
      "op": "DUP2"
    },
    "8476": {
      "op": "AND"
    },
    "8477": {
      "op": "DUP3"
    },
    "8478": {
      "op": "MSTORE"
    },
    "8479": {
      "op": "DUP6"
    },
    "8480": {
      "op": "AND"
    },
    "8481": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8483": {
      "op": "DUP3"
    },
    "8484": {
      "op": "ADD"
    },
    "8485": {
      "op": "MSTORE"
    },
    "8486": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8488": {
      "op": "DUP2"
    },
    "8489": {
      "op": "ADD"
    },
    "8490": {
      "op": "DUP5"
    },
    "8491": {
      "op": "SWAP1"
    },
    "8492": {
      "op": "MSTORE"
    },
    "8493": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8495": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8497": {
      "op": "DUP3"
    },
    "8498": {
      "op": "ADD"
    },
    "8499": {
      "op": "DUP2"
    },
    "8500": {
      "op": "SWAP1"
    },
    "8501": {
      "op": "MSTORE"
    },
    "8502": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8504": {
      "op": "SWAP1"
    },
    "8505": {
      "op": "PUSH2",
      "value": "0x2144"
    },
    "8508": {
      "op": "SWAP1"
    },
    "8509": {
      "op": "DUP4"
    },
    "8510": {
      "op": "ADD"
    },
    "8511": {
      "op": "DUP6"
    },
    "8512": {
      "op": "PUSH2",
      "value": "0x1846"
    },
    "8515": {
      "jump": "i",
      "op": "JUMP"
    },
    "8516": {
      "op": "JUMPDEST"
    },
    "8517": {
      "op": "SWAP1"
    },
    "8518": {
      "op": "POP"
    },
    "8519": {
      "op": "DUP3"
    },
    "8520": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8522": {
      "op": "DUP4"
    },
    "8523": {
      "op": "ADD"
    },
    "8524": {
      "op": "MSTORE"
    },
    "8525": {
      "op": "SWAP7"
    },
    "8526": {
      "op": "SWAP6"
    },
    "8527": {
      "op": "POP"
    },
    "8528": {
      "op": "POP"
    },
    "8529": {
      "op": "POP"
    },
    "8530": {
      "op": "POP"
    },
    "8531": {
      "op": "POP"
    },
    "8532": {
      "op": "POP"
    },
    "8533": {
      "jump": "o",
      "op": "JUMP"
    },
    "8534": {
      "op": "JUMPDEST"
    },
    "8535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8537": {
      "op": "DUP2"
    },
    "8538": {
      "op": "DUP2"
    },
    "8539": {
      "op": "SHR"
    },
    "8540": {
      "op": "SWAP1"
    },
    "8541": {
      "op": "DUP3"
    },
    "8542": {
      "op": "AND"
    },
    "8543": {
      "op": "DUP1"
    },
    "8544": {
      "op": "PUSH2",
      "value": "0x216A"
    },
    "8547": {
      "op": "JUMPI"
    },
    "8548": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "8550": {
      "op": "DUP3"
    },
    "8551": {
      "op": "AND"
    },
    "8552": {
      "op": "SWAP2"
    },
    "8553": {
      "op": "POP"
    },
    "8554": {
      "op": "JUMPDEST"
    },
    "8555": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8557": {
      "op": "DUP3"
    },
    "8558": {
      "op": "LT"
    },
    "8559": {
      "op": "DUP2"
    },
    "8560": {
      "op": "EQ"
    },
    "8561": {
      "op": "ISZERO"
    },
    "8562": {
      "op": "PUSH2",
      "value": "0x218B"
    },
    "8565": {
      "op": "JUMPI"
    },
    "8566": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8571": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8573": {
      "op": "SHL"
    },
    "8574": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8576": {
      "op": "MSTORE"
    },
    "8577": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "8579": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8581": {
      "op": "MSTORE"
    },
    "8582": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8584": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8586": {
      "op": "REVERT"
    },
    "8587": {
      "op": "JUMPDEST"
    },
    "8588": {
      "op": "POP"
    },
    "8589": {
      "op": "SWAP2"
    },
    "8590": {
      "op": "SWAP1"
    },
    "8591": {
      "op": "POP"
    },
    "8592": {
      "jump": "o",
      "op": "JUMP"
    },
    "8593": {
      "op": "JUMPDEST"
    },
    "8594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8596": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8598": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8600": {
      "op": "SHL"
    },
    "8601": {
      "op": "SUB"
    },
    "8602": {
      "op": "DUP6"
    },
    "8603": {
      "op": "AND"
    },
    "8604": {
      "op": "DUP2"
    },
    "8605": {
      "op": "MSTORE"
    },
    "8606": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8608": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8610": {
      "op": "DUP3"
    },
    "8611": {
      "op": "ADD"
    },
    "8612": {
      "op": "DUP2"
    },
    "8613": {
      "op": "SWAP1"
    },
    "8614": {
      "op": "MSTORE"
    },
    "8615": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8617": {
      "op": "SWAP1"
    },
    "8618": {
      "op": "PUSH2",
      "value": "0x21B5"
    },
    "8621": {
      "op": "SWAP1"
    },
    "8622": {
      "op": "DUP4"
    },
    "8623": {
      "op": "ADD"
    },
    "8624": {
      "op": "DUP7"
    },
    "8625": {
      "op": "PUSH2",
      "value": "0x1846"
    },
    "8628": {
      "jump": "i",
      "op": "JUMP"
    },
    "8629": {
      "op": "JUMPDEST"
    },
    "8630": {
      "op": "DUP5"
    },
    "8631": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8633": {
      "op": "DUP5"
    },
    "8634": {
      "op": "ADD"
    },
    "8635": {
      "op": "MSTORE"
    },
    "8636": {
      "op": "DUP3"
    },
    "8637": {
      "op": "DUP2"
    },
    "8638": {
      "op": "SUB"
    },
    "8639": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8641": {
      "op": "DUP5"
    },
    "8642": {
      "op": "ADD"
    },
    "8643": {
      "op": "MSTORE"
    },
    "8644": {
      "op": "PUSH2",
      "value": "0x1BB6"
    },
    "8647": {
      "op": "DUP2"
    },
    "8648": {
      "op": "DUP6"
    },
    "8649": {
      "op": "PUSH2",
      "value": "0x1846"
    },
    "8652": {
      "jump": "i",
      "op": "JUMP"
    },
    "8653": {
      "op": "JUMPDEST"
    },
    "8654": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8656": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8658": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8660": {
      "op": "SHL"
    },
    "8661": {
      "op": "SUB"
    },
    "8662": {
      "op": "DUP8"
    },
    "8663": {
      "op": "AND"
    },
    "8664": {
      "op": "DUP2"
    },
    "8665": {
      "op": "MSTORE"
    },
    "8666": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "8668": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8670": {
      "op": "DUP3"
    },
    "8671": {
      "op": "ADD"
    },
    "8672": {
      "op": "DUP2"
    },
    "8673": {
      "op": "SWAP1"
    },
    "8674": {
      "op": "MSTORE"
    },
    "8675": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8677": {
      "op": "SWAP1"
    },
    "8678": {
      "op": "PUSH2",
      "value": "0x21F1"
    },
    "8681": {
      "op": "SWAP1"
    },
    "8682": {
      "op": "DUP4"
    },
    "8683": {
      "op": "ADD"
    },
    "8684": {
      "op": "DUP9"
    },
    "8685": {
      "op": "PUSH2",
      "value": "0x1846"
    },
    "8688": {
      "jump": "i",
      "op": "JUMP"
    },
    "8689": {
      "op": "JUMPDEST"
    },
    "8690": {
      "op": "DUP3"
    },
    "8691": {
      "op": "DUP2"
    },
    "8692": {
      "op": "SUB"
    },
    "8693": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8695": {
      "op": "DUP5"
    },
    "8696": {
      "op": "ADD"
    },
    "8697": {
      "op": "MSTORE"
    },
    "8698": {
      "op": "PUSH2",
      "value": "0x2203"
    },
    "8701": {
      "op": "DUP2"
    },
    "8702": {
      "op": "DUP9"
    },
    "8703": {
      "op": "PUSH2",
      "value": "0x1846"
    },
    "8706": {
      "jump": "i",
      "op": "JUMP"
    },
    "8707": {
      "op": "JUMPDEST"
    },
    "8708": {
      "op": "SWAP1"
    },
    "8709": {
      "op": "POP"
    },
    "8710": {
      "op": "DUP6"
    },
    "8711": {
      "op": "ISZERO"
    },
    "8712": {
      "op": "ISZERO"
    },
    "8713": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8715": {
      "op": "DUP5"
    },
    "8716": {
      "op": "ADD"
    },
    "8717": {
      "op": "MSTORE"
    },
    "8718": {
      "op": "DUP5"
    },
    "8719": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8721": {
      "op": "DUP5"
    },
    "8722": {
      "op": "ADD"
    },
    "8723": {
      "op": "MSTORE"
    },
    "8724": {
      "op": "DUP3"
    },
    "8725": {
      "op": "DUP2"
    },
    "8726": {
      "op": "SUB"
    },
    "8727": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8729": {
      "op": "DUP5"
    },
    "8730": {
      "op": "ADD"
    },
    "8731": {
      "op": "MSTORE"
    },
    "8732": {
      "op": "PUSH2",
      "value": "0x2225"
    },
    "8735": {
      "op": "DUP2"
    },
    "8736": {
      "op": "DUP6"
    },
    "8737": {
      "op": "PUSH2",
      "value": "0x1846"
    },
    "8740": {
      "jump": "i",
      "op": "JUMP"
    },
    "8741": {
      "op": "JUMPDEST"
    },
    "8742": {
      "op": "SWAP10"
    },
    "8743": {
      "op": "SWAP9"
    },
    "8744": {
      "op": "POP"
    },
    "8745": {
      "op": "POP"
    },
    "8746": {
      "op": "POP"
    },
    "8747": {
      "op": "POP"
    },
    "8748": {
      "op": "POP"
    },
    "8749": {
      "op": "POP"
    },
    "8750": {
      "op": "POP"
    },
    "8751": {
      "op": "POP"
    },
    "8752": {
      "op": "POP"
    },
    "8753": {
      "jump": "o",
      "op": "JUMP"
    },
    "8754": {
      "op": "JUMPDEST"
    },
    "8755": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8760": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8762": {
      "op": "SHL"
    },
    "8763": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8765": {
      "op": "MSTORE"
    },
    "8766": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "8768": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8770": {
      "op": "MSTORE"
    },
    "8771": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8773": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8775": {
      "op": "REVERT"
    },
    "8776": {
      "op": "JUMPDEST"
    },
    "8777": {
      "op": "DUP1"
    },
    "8778": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8780": {
      "op": "JUMPDEST"
    },
    "8781": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "8783": {
      "op": "DUP2"
    },
    "8784": {
      "op": "LT"
    },
    "8785": {
      "op": "ISZERO"
    },
    "8786": {
      "op": "PUSH2",
      "value": "0x1840"
    },
    "8789": {
      "op": "JUMPI"
    },
    "8790": {
      "op": "DUP2"
    },
    "8791": {
      "op": "MLOAD"
    },
    "8792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8794": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8796": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8798": {
      "op": "SHL"
    },
    "8799": {
      "op": "SUB"
    },
    "8800": {
      "op": "AND"
    },
    "8801": {
      "op": "DUP5"
    },
    "8802": {
      "op": "MSTORE"
    },
    "8803": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8805": {
      "op": "SWAP4"
    },
    "8806": {
      "op": "DUP5"
    },
    "8807": {
      "op": "ADD"
    },
    "8808": {
      "op": "SWAP4"
    },
    "8809": {
      "op": "SWAP1"
    },
    "8810": {
      "op": "SWAP2"
    },
    "8811": {
      "op": "ADD"
    },
    "8812": {
      "op": "SWAP1"
    },
    "8813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8815": {
      "op": "ADD"
    },
    "8816": {
      "op": "PUSH2",
      "value": "0x224C"
    },
    "8819": {
      "op": "JUMP"
    },
    "8820": {
      "op": "JUMPDEST"
    },
    "8821": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8823": {
      "op": "DUP2"
    },
    "8824": {
      "op": "MLOAD"
    },
    "8825": {
      "op": "DUP1"
    },
    "8826": {
      "op": "DUP5"
    },
    "8827": {
      "op": "MSTORE"
    },
    "8828": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8830": {
      "op": "DUP1"
    },
    "8831": {
      "op": "DUP6"
    },
    "8832": {
      "op": "ADD"
    },
    "8833": {
      "op": "SWAP5"
    },
    "8834": {
      "op": "POP"
    },
    "8835": {
      "op": "DUP1"
    },
    "8836": {
      "op": "DUP5"
    },
    "8837": {
      "op": "ADD"
    },
    "8838": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8840": {
      "op": "JUMPDEST"
    },
    "8841": {
      "op": "DUP4"
    },
    "8842": {
      "op": "DUP2"
    },
    "8843": {
      "op": "LT"
    },
    "8844": {
      "op": "ISZERO"
    },
    "8845": {
      "op": "PUSH2",
      "value": "0x22AD"
    },
    "8848": {
      "op": "JUMPI"
    },
    "8849": {
      "op": "DUP2"
    },
    "8850": {
      "op": "MLOAD"
    },
    "8851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8855": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8857": {
      "op": "SHL"
    },
    "8858": {
      "op": "SUB"
    },
    "8859": {
      "op": "AND"
    },
    "8860": {
      "op": "DUP8"
    },
    "8861": {
      "op": "MSTORE"
    },
    "8862": {
      "op": "SWAP6"
    },
    "8863": {
      "op": "DUP3"
    },
    "8864": {
      "op": "ADD"
    },
    "8865": {
      "op": "SWAP6"
    },
    "8866": {
      "op": "SWAP1"
    },
    "8867": {
      "op": "DUP3"
    },
    "8868": {
      "op": "ADD"
    },
    "8869": {
      "op": "SWAP1"
    },
    "8870": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8872": {
      "op": "ADD"
    },
    "8873": {
      "op": "PUSH2",
      "value": "0x2288"
    },
    "8876": {
      "op": "JUMP"
    },
    "8877": {
      "op": "JUMPDEST"
    },
    "8878": {
      "op": "POP"
    },
    "8879": {
      "op": "SWAP5"
    },
    "8880": {
      "op": "SWAP6"
    },
    "8881": {
      "op": "SWAP5"
    },
    "8882": {
      "op": "POP"
    },
    "8883": {
      "op": "POP"
    },
    "8884": {
      "op": "POP"
    },
    "8885": {
      "op": "POP"
    },
    "8886": {
      "op": "POP"
    },
    "8887": {
      "jump": "o",
      "op": "JUMP"
    },
    "8888": {
      "op": "JUMPDEST"
    },
    "8889": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8891": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8893": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8895": {
      "op": "SHL"
    },
    "8896": {
      "op": "SUB"
    },
    "8897": {
      "op": "DUP9"
    },
    "8898": {
      "op": "AND"
    },
    "8899": {
      "op": "DUP2"
    },
    "8900": {
      "op": "MSTORE"
    },
    "8901": {
      "op": "PUSH2",
      "value": "0x1A0"
    },
    "8904": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8906": {
      "op": "DUP1"
    },
    "8907": {
      "op": "DUP4"
    },
    "8908": {
      "op": "ADD"
    },
    "8909": {
      "op": "DUP3"
    },
    "8910": {
      "op": "SWAP1"
    },
    "8911": {
      "op": "MSTORE"
    },
    "8912": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8914": {
      "op": "SWAP2"
    },
    "8915": {
      "op": "SWAP1"
    },
    "8916": {
      "op": "PUSH2",
      "value": "0x22DF"
    },
    "8919": {
      "op": "DUP5"
    },
    "8920": {
      "op": "DUP4"
    },
    "8921": {
      "op": "ADD"
    },
    "8922": {
      "op": "DUP12"
    },
    "8923": {
      "op": "PUSH2",
      "value": "0x1846"
    },
    "8926": {
      "jump": "i",
      "op": "JUMP"
    },
    "8927": {
      "op": "JUMPDEST"
    },
    "8928": {
      "op": "SWAP2"
    },
    "8929": {
      "op": "POP"
    },
    "8930": {
      "op": "DUP9"
    },
    "8931": {
      "op": "ISZERO"
    },
    "8932": {
      "op": "ISZERO"
    },
    "8933": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8935": {
      "op": "DUP6"
    },
    "8936": {
      "op": "ADD"
    },
    "8937": {
      "op": "MSTORE"
    },
    "8938": {
      "op": "DUP8"
    },
    "8939": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8941": {
      "op": "DUP6"
    },
    "8942": {
      "op": "ADD"
    },
    "8943": {
      "op": "MSTORE"
    },
    "8944": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8946": {
      "op": "DUP5"
    },
    "8947": {
      "op": "ADD"
    },
    "8948": {
      "op": "DUP8"
    },
    "8949": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8951": {
      "op": "JUMPDEST"
    },
    "8952": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "8954": {
      "op": "DUP2"
    },
    "8955": {
      "op": "LT"
    },
    "8956": {
      "op": "ISZERO"
    },
    "8957": {
      "op": "PUSH2",
      "value": "0x2317"
    },
    "8960": {
      "op": "JUMPI"
    },
    "8961": {
      "op": "DUP2"
    },
    "8962": {
      "op": "MLOAD"
    },
    "8963": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8965": {
      "op": "AND"
    },
    "8966": {
      "op": "DUP4"
    },
    "8967": {
      "op": "MSTORE"
    },
    "8968": {
      "op": "SWAP2"
    },
    "8969": {
      "op": "DUP4"
    },
    "8970": {
      "op": "ADD"
    },
    "8971": {
      "op": "SWAP2"
    },
    "8972": {
      "op": "SWAP1"
    },
    "8973": {
      "op": "DUP4"
    },
    "8974": {
      "op": "ADD"
    },
    "8975": {
      "op": "SWAP1"
    },
    "8976": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8978": {
      "op": "ADD"
    },
    "8979": {
      "op": "PUSH2",
      "value": "0x22F7"
    },
    "8982": {
      "op": "JUMP"
    },
    "8983": {
      "op": "JUMPDEST"
    },
    "8984": {
      "op": "POP"
    },
    "8985": {
      "op": "POP"
    },
    "8986": {
      "op": "POP"
    },
    "8987": {
      "op": "POP"
    },
    "8988": {
      "op": "PUSH2",
      "value": "0x2328"
    },
    "8991": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8993": {
      "op": "DUP5"
    },
    "8994": {
      "op": "ADD"
    },
    "8995": {
      "op": "DUP7"
    },
    "8996": {
      "op": "PUSH2",
      "value": "0x2248"
    },
    "8999": {
      "jump": "i",
      "op": "JUMP"
    },
    "9000": {
      "op": "JUMPDEST"
    },
    "9001": {
      "op": "DUP3"
    },
    "9002": {
      "op": "DUP2"
    },
    "9003": {
      "op": "SUB"
    },
    "9004": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "9007": {
      "op": "DUP5"
    },
    "9008": {
      "op": "ADD"
    },
    "9009": {
      "op": "MSTORE"
    },
    "9010": {
      "op": "PUSH2",
      "value": "0x233B"
    },
    "9013": {
      "op": "DUP2"
    },
    "9014": {
      "op": "DUP6"
    },
    "9015": {
      "op": "PUSH2",
      "value": "0x2274"
    },
    "9018": {
      "jump": "i",
      "op": "JUMP"
    },
    "9019": {
      "op": "JUMPDEST"
    },
    "9020": {
      "op": "SWAP11"
    },
    "9021": {
      "op": "SWAP10"
    },
    "9022": {
      "op": "POP"
    },
    "9023": {
      "op": "POP"
    },
    "9024": {
      "op": "POP"
    },
    "9025": {
      "op": "POP"
    },
    "9026": {
      "op": "POP"
    },
    "9027": {
      "op": "POP"
    },
    "9028": {
      "op": "POP"
    },
    "9029": {
      "op": "POP"
    },
    "9030": {
      "op": "POP"
    },
    "9031": {
      "op": "POP"
    },
    "9032": {
      "jump": "o",
      "op": "JUMP"
    },
    "9033": {
      "op": "JUMPDEST"
    },
    "9034": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9036": {
      "op": "DUP5"
    },
    "9037": {
      "op": "AND"
    },
    "9038": {
      "op": "DUP2"
    },
    "9039": {
      "op": "MSTORE"
    },
    "9040": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9042": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9044": {
      "op": "DUP3"
    },
    "9045": {
      "op": "ADD"
    },
    "9046": {
      "op": "MSTORE"
    },
    "9047": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9049": {
      "op": "PUSH2",
      "value": "0x2365"
    },
    "9052": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9054": {
      "op": "DUP4"
    },
    "9055": {
      "op": "ADD"
    },
    "9056": {
      "op": "DUP6"
    },
    "9057": {
      "op": "PUSH2",
      "value": "0x1846"
    },
    "9060": {
      "jump": "i",
      "op": "JUMP"
    },
    "9061": {
      "op": "JUMPDEST"
    },
    "9062": {
      "op": "SWAP1"
    },
    "9063": {
      "op": "POP"
    },
    "9064": {
      "op": "DUP3"
    },
    "9065": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9067": {
      "op": "DUP4"
    },
    "9068": {
      "op": "ADD"
    },
    "9069": {
      "op": "MSTORE"
    },
    "9070": {
      "op": "SWAP5"
    },
    "9071": {
      "op": "SWAP4"
    },
    "9072": {
      "op": "POP"
    },
    "9073": {
      "op": "POP"
    },
    "9074": {
      "op": "POP"
    },
    "9075": {
      "op": "POP"
    },
    "9076": {
      "jump": "o",
      "op": "JUMP"
    },
    "9077": {
      "op": "JUMPDEST"
    },
    "9078": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9080": {
      "op": "DUP2"
    },
    "9081": {
      "op": "MSTORE"
    },
    "9082": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9084": {
      "op": "PUSH2",
      "value": "0x2388"
    },
    "9087": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9089": {
      "op": "DUP4"
    },
    "9090": {
      "op": "ADD"
    },
    "9091": {
      "op": "DUP7"
    },
    "9092": {
      "op": "PUSH2",
      "value": "0x1846"
    },
    "9095": {
      "jump": "i",
      "op": "JUMP"
    },
    "9096": {
      "op": "JUMPDEST"
    },
    "9097": {
      "op": "DUP3"
    },
    "9098": {
      "op": "DUP2"
    },
    "9099": {
      "op": "SUB"
    },
    "9100": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9102": {
      "op": "DUP5"
    },
    "9103": {
      "op": "ADD"
    },
    "9104": {
      "op": "MSTORE"
    },
    "9105": {
      "op": "PUSH2",
      "value": "0x239A"
    },
    "9108": {
      "op": "DUP2"
    },
    "9109": {
      "op": "DUP7"
    },
    "9110": {
      "op": "PUSH2",
      "value": "0x1846"
    },
    "9113": {
      "jump": "i",
      "op": "JUMP"
    },
    "9114": {
      "op": "JUMPDEST"
    },
    "9115": {
      "op": "SWAP1"
    },
    "9116": {
      "op": "POP"
    },
    "9117": {
      "op": "DUP3"
    },
    "9118": {
      "op": "DUP2"
    },
    "9119": {
      "op": "SUB"
    },
    "9120": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9122": {
      "op": "DUP5"
    },
    "9123": {
      "op": "ADD"
    },
    "9124": {
      "op": "MSTORE"
    },
    "9125": {
      "op": "PUSH2",
      "value": "0x23AE"
    },
    "9128": {
      "op": "DUP2"
    },
    "9129": {
      "op": "DUP6"
    },
    "9130": {
      "op": "PUSH2",
      "value": "0x1846"
    },
    "9133": {
      "jump": "i",
      "op": "JUMP"
    },
    "9134": {
      "op": "JUMPDEST"
    },
    "9135": {
      "op": "SWAP7"
    },
    "9136": {
      "op": "SWAP6"
    },
    "9137": {
      "op": "POP"
    },
    "9138": {
      "op": "POP"
    },
    "9139": {
      "op": "POP"
    },
    "9140": {
      "op": "POP"
    },
    "9141": {
      "op": "POP"
    },
    "9142": {
      "op": "POP"
    },
    "9143": {
      "jump": "o",
      "op": "JUMP"
    },
    "9144": {
      "op": "JUMPDEST"
    },
    "9145": {
      "op": "DUP5"
    },
    "9146": {
      "op": "DUP2"
    },
    "9147": {
      "op": "MSTORE"
    },
    "9148": {
      "op": "DUP4"
    },
    "9149": {
      "op": "ISZERO"
    },
    "9150": {
      "op": "ISZERO"
    },
    "9151": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9153": {
      "op": "DUP3"
    },
    "9154": {
      "op": "ADD"
    },
    "9155": {
      "op": "MSTORE"
    },
    "9156": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9158": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9160": {
      "op": "DUP3"
    },
    "9161": {
      "op": "ADD"
    },
    "9162": {
      "op": "MSTORE"
    },
    "9163": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9165": {
      "op": "PUSH2",
      "value": "0x23D9"
    },
    "9168": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9170": {
      "op": "DUP4"
    },
    "9171": {
      "op": "ADD"
    },
    "9172": {
      "op": "DUP6"
    },
    "9173": {
      "op": "PUSH2",
      "value": "0x1846"
    },
    "9176": {
      "jump": "i",
      "op": "JUMP"
    },
    "9177": {
      "op": "JUMPDEST"
    },
    "9178": {
      "op": "DUP3"
    },
    "9179": {
      "op": "DUP2"
    },
    "9180": {
      "op": "SUB"
    },
    "9181": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9183": {
      "op": "DUP5"
    },
    "9184": {
      "op": "ADD"
    },
    "9185": {
      "op": "MSTORE"
    },
    "9186": {
      "op": "PUSH2",
      "value": "0x1BB6"
    },
    "9189": {
      "op": "DUP2"
    },
    "9190": {
      "op": "DUP6"
    },
    "9191": {
      "op": "PUSH2",
      "value": "0x1846"
    },
    "9194": {
      "jump": "i",
      "op": "JUMP"
    },
    "9195": {
      "op": "JUMPDEST"
    },
    "9196": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9200": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9202": {
      "op": "SHL"
    },
    "9203": {
      "op": "SUB"
    },
    "9204": {
      "op": "DUP7"
    },
    "9205": {
      "op": "DUP2"
    },
    "9206": {
      "op": "AND"
    },
    "9207": {
      "op": "DUP3"
    },
    "9208": {
      "op": "MSTORE"
    },
    "9209": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9211": {
      "op": "DUP3"
    },
    "9212": {
      "op": "ADD"
    },
    "9213": {
      "op": "DUP7"
    },
    "9214": {
      "op": "SWAP1"
    },
    "9215": {
      "op": "MSTORE"
    },
    "9216": {
      "op": "DUP5"
    },
    "9217": {
      "op": "AND"
    },
    "9218": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9220": {
      "op": "DUP3"
    },
    "9221": {
      "op": "ADD"
    },
    "9222": {
      "op": "MSTORE"
    },
    "9223": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9225": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9227": {
      "op": "DUP3"
    },
    "9228": {
      "op": "ADD"
    },
    "9229": {
      "op": "DUP2"
    },
    "9230": {
      "op": "SWAP1"
    },
    "9231": {
      "op": "MSTORE"
    },
    "9232": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9234": {
      "op": "SWAP1"
    },
    "9235": {
      "op": "PUSH2",
      "value": "0x2144"
    },
    "9238": {
      "op": "SWAP1"
    },
    "9239": {
      "op": "DUP4"
    },
    "9240": {
      "op": "ADD"
    },
    "9241": {
      "op": "DUP6"
    },
    "9242": {
      "op": "PUSH2",
      "value": "0x1846"
    },
    "9245": {
      "jump": "i",
      "op": "JUMP"
    }
  },
  "sha1": "48ce1467f7fbd8878b0bd4096afaf0bd3cb9901f",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.11;\n\nimport \"@openzeppelin/contracts/proxy/utils/Initializable.sol\";\nimport \"./CLStorage.sol\";\n\n\n/// @title Contract to implement and test the basic fuctions of CLHouses\n/// @author Leonardo Urrego\n/// @notice This contract for test only the most basic interactions\ncontract CLHouse is CLStorage, Initializable {\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor() {\n        _disableInitializers();\n    }\n\n    /// @notice Create a new CLH\n    /// @dev Some parameters can be ignored depending on the governance model\n    /// @param _owner The address of the deployed wallet\n    /// @param _houseName Name given by the owner\n    /// @param _housePrivate If is set to 1, the CLH is set to private\n    /// @param _govModel keccak256 hash of the governance model, see the __GOV_* constans\n    /// @param _govRules Array for goverment rules see `enum gRule`\n    /// @param _CLC Array for CL Contracts see `enum eCLC`\n    /// @param _ManagerWallets Whitelist of address for invitate as managers\n    function Init(\n        address _owner, \n        string memory _houseName,\n        bool _housePrivate,\n        bytes32 _govModel,\n        uint8[3] memory _govRules,\n        address[5] memory _CLC,\n        address[] memory _ManagerWallets\n    )\n        external\n        reinitializer( __UPGRADEABLE_CLH_VERSION__ )\n    {\n        /// @custom:oz-upgrades-unsafe-allow delegatecall\n        (bool successDGTCLL, ) = _CLC[ uint256( eCLC.CLLConstructorCLH ) ].delegatecall(\n            abi.encodeWithSignature(\n                \"__CLHConstructor(address,string,bool,bytes32,uint8[3],address[5],address[])\",\n                _owner, \n                _houseName,\n                _housePrivate,\n                _govModel,\n                _govRules,\n                _CLC,\n                _ManagerWallets\n            )\n        );\n\n        if( !successDGTCLL ) {\n            assembly {\n                let ptr := mload(0x40)\n                let size := returndatasize()\n                returndatacopy(ptr, 0, size)\n                revert(ptr, size)\n            }\n        }\n    }\n\n    /// @notice Execute (or reject) a proposal computing the votes and the governance model\n    /// @dev Normally is called internally after each vote\n    /// @param _propId ID of the proposal, based on `arrProposals`\n    /// @return status True if the proposal can be execute, false in other cases\n    /// @return message result of the transaction\n    function ExecProp(\n        uint256 _propId\n    )\n        public\n        returns(\n            bool status,\n            string memory message\n        )\n    {\n        /// @custom:oz-upgrades-unsafe-allow delegatecall\n        (bool successDGTCLL, ) = CLLGovernance.delegatecall(\n            abi.encodeWithSignature(\n                \"ExecProp(uint256)\",\n                _propId\n            )\n        );\n\n        if( !successDGTCLL ) {\n            assembly {\n                let ptr := mload(0x40)\n                let size := returndatasize()\n                returndatacopy(ptr, 0, size)\n                revert(ptr, size)\n            }\n        }\n\n        return ( true , \"Success executed proposal\" );\n    }\n\n    /// @notice Used to vote a proposal\n    /// @dev After vote the proposal automatically try to be executed\n    /// @param _propId ID of the proposal, based on `arrProposals`\n    /// @param _support True for accept, false to reject\n    /// @param _justification About your vote\n    function VoteProposal(\n        uint256 _propId,\n        bool _support,\n        string memory _justification,\n        bytes memory _signature\n    )\n        public\n    {\n        /// @custom:oz-upgrades-unsafe-allow delegatecall\n        (bool successDGTCLL, ) = CLLGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"VoteProposal(uint256,bool,string,bytes)\",\n                _propId,\n                _support,\n                _justification,\n                _signature\n            )\n        );\n\n        if( !successDGTCLL ) {\n            assembly {\n                let ptr := mload(0x40)\n                let size := returndatasize()\n                returndatacopy(ptr, 0, size)\n                revert(ptr, size)\n            }\n        }\n    }\n\n    /// @notice Generate a new proposal to invite a new user\n    /// @dev the execution of this proposal only create an invitation \n    /// @param _walletAddr  Address of the new user\n    /// @param _name Can be the nickname or other reference to the User\n    /// @param _description A text for the proposal\n    /// @param _isManager True if is for a manager\n    /// @return propId ID of the new proposal, based on `arrProposals`\n    function PropInviteUser(\n        address _walletAddr,\n        string memory _name,\n        string memory _description,\n        bool _isManager,\n        uint256 _delayTime,\n        bytes memory _signature\n    )\n        external\n        returns( uint256 propId )\n    {\n        /// @custom:oz-upgrades-unsafe-allow delegatecall\n        (bool successDGTCLL, ) = CLLGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropInviteUser(address,string,string,bool,uint256,bytes)\",\n                _walletAddr,\n                _name,\n                _description,\n                _isManager,\n                _delayTime,\n                _signature\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            propId := mload(ptr)\n        }\n    }\n\n    /// @notice Generate a new proposal for remove a user\n    /// @dev The user can be a managaer\n    /// @param _walletAddr user Address to be removed\n    /// @param _description About the proposal\n    /// @return propId ID of the new proposal, based on `arrProposals`\n    function PropRemoveUser(\n        address _walletAddr,\n        string memory _description,\n        uint256 _delayTime,\n        bytes memory _signature\n    )\n        external\n        returns( uint256 propId )\n    {\n        /// @custom:oz-upgrades-unsafe-allow delegatecall\n        (bool successDGTCLL, ) = CLLGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropRemoveUser(address,string,uint256,bytes)\",\n                _walletAddr,\n                _description,\n                _delayTime,\n                _signature\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            propId := mload(ptr)\n        }\n    }\n\n    /// @notice generate a new proposal to transfer ETH in weis\n    /// @dev When execute this proposal, the transfer is made\n    /// @param _to Recipient address\n    /// @param _amountOutCLV Amount to transfer (in wei)\n    /// @param _description About this proposal\n    /// @return propId ID of the new proposal, based on `arrProposals`\n    function PropTxWei(\n        address _to,\n        uint256 _amountOutCLV,\n        string memory _description,\n        uint256 _delayTime\n    )\n        external\n        returns( uint256 propId )\n    {\n        /// @custom:oz-upgrades-unsafe-allow delegatecall\n        (bool successDGTCLL, ) = CLLGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropTxWei(address,uint256,string,uint256)\",\n                _to,\n                _amountOutCLV,\n                _description,\n                _delayTime\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            propId := mload(ptr)\n        }\n    }\n\n    /// @notice generate a new proposal to transfer ETH in weis\n    /// @dev When execute this proposal, the transfer is made\n    /// @param _to Recipient address\n    /// @param _amountOutCLV Amount to transfer (in wei)\n    /// @param _description About this proposal\n    /// @return propId ID of the new proposal, based on `arrProposals`\n    function PropTxERC20(\n        address _to,\n        uint256 _amountOutCLV,\n        address _tokenOutCLV,\n        string memory _description,\n        uint256 _delayTime\n    )\n        external\n        returns( uint256 propId )\n    {\n        /// @custom:oz-upgrades-unsafe-allow delegatecall\n        (bool successDGTCLL, ) = CLLGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropTxERC20(address,uint256,address,string,uint256)\",\n                _to,\n                _amountOutCLV,\n                _tokenOutCLV,\n                _description,\n                _delayTime\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            propId := mload(ptr)\n        }\n    }\n\n    /// @notice Generate a new proposal for change some governance parameters\n    /// @dev When execute this proposal the new values will be set\n    /// @param _newApprovPercentage The new percentaje for accept or reject a proposal\n    /// @param _description About the new proposal \n    /// @return propId ID of the new proposal, based on `arrProposals`\n    function PropGovRules(\n        uint8 _newApprovPercentage,\n        string memory _description,\n        uint256 _delayTime\n    )\n        external\n        returns( uint256 propId )\n    {\n        /// @custom:oz-upgrades-unsafe-allow delegatecall\n        (bool successDGTCLL, ) = CLLGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropGovRules(uint8,string,uint256)\",\n                _newApprovPercentage,\n                _description,\n                _delayTime\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            propId := mload(ptr)\n        }\n    }\n\n    /// @notice Generate a proposal from a user that want to join to the CLH\n    /// @dev Only avaiable in public CLH\n    /// @param _name Nickname or other user identification\n    /// @param _description About the request\n    /// @return propId ID of the new proposal, based on `arrProposals`\n    function PropRequestToJoin(\n        string memory _name,\n        string memory _description,\n        bytes memory _signature\n    )\n        external\n        returns( uint256 )\n    {\n        /// @custom:oz-upgrades-unsafe-allow delegatecall\n        (bool successDGTCLL, ) = CLLGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropRequestToJoin(string,string,bytes)\",\n                _name,\n                _description,\n                _signature\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            return(ptr, size)\n        }\n    }\n\n    /// @notice For an user that have an invitation pending\n    /// @dev \n    /// @param _acceptance True for accept the invitation\n    function AcceptRejectInvitation(\n        bool _acceptance,\n        bytes memory _signature\n    )\n        external\n    {\n        /// @custom:oz-upgrades-unsafe-allow delegatecall\n        (bool successDGTCLL, ) = CLLUserManagement.delegatecall(\n            abi.encodeWithSignature( \n                \"AcceptRejectInvitation(bool,bytes)\",\n                _acceptance,\n                _signature\n            )\n        );\n\n        if( !successDGTCLL ) {\n            assembly {\n                let ptr := mload(0x40)\n                let size := returndatasize()\n                returndatacopy(ptr, 0, size)\n                revert(ptr, size)\n            }\n        }\n    }\n\n    function PropSwapERC20(\n        address _tokenOutCLV,\n        address _tokenInCLV,\n        uint256 _amountOutCLV,\n        string memory _description,\n        uint256 _delayTime\n    )\n        external\n        returns( uint256 )\n    {\n        /// @custom:oz-upgrades-unsafe-allow delegatecall\n        (bool successDGTCLL, ) = CLLGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropSwapERC20(address,address,uint256,string,uint256)\",\n                _tokenOutCLV,\n                _tokenInCLV,\n                _amountOutCLV,\n                _description,\n                _delayTime\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            return(ptr, size)\n        }\n    }\n\n    function PropSellERC20(\n        address _tokenOutCLV,\n        uint256 _amountOutCLV,\n        string memory _description,\n        uint256 _delayTime\n    )\n        external\n        returns( uint256 )\n    {\n        /// @custom:oz-upgrades-unsafe-allow delegatecall\n        (bool successDGTCLL, ) = CLLGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropSellERC20(address,uint256,string,uint256)\",\n                _tokenOutCLV,\n                _amountOutCLV,\n                _description,\n                _delayTime\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            return(ptr, size)\n        }\n    }\n\n    function PropBuyERC20(\n        address _tokenInCLV,\n        uint256 _amountOutCLV,\n        string memory _description,\n        uint256 _delayTime\n    )\n        external\n        returns( uint256 )\n    {\n        /// @custom:oz-upgrades-unsafe-allow delegatecall\n        (bool successDGTCLL, ) = CLLGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropBuyERC20(address,uint256,string,uint256)\",\n                _tokenInCLV,\n                _amountOutCLV,\n                _description,\n                _delayTime\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            return(ptr, size)\n        }\n    }\n\n    /// @notice Length of array\n    function GetArrUsersLength() external view returns( uint256 ){\n        return arrUsers.length;\n    }\n\n    /// @notice Length of array\n    function GetArrProposalsLength() external view returns( uint256 ){\n        return arrProposals.length;\n    }\n\n    /// @notice The list of all Proposals\n    /// @return arrProposals the array with all proposals\n    function GetProposalList() external view returns( strProposal[] memory ) {\n        return arrProposals;\n    }\n\n    /// @notice Get complete array of arrDataPropAddUser\n    /// @return arrDataPropAddUser the array with all data\n    function GetArrDataPropAddUser() external view returns( strDataAddUser[] memory ) {\n        return arrDataPropAddUser;\n    }\n}",
  "sourceMap": "319:15220:29:-:0;;;423:53;;;;;;;;;-1:-1:-1;447:22:29;:20;:22::i;:::-;319:15220;;5366:279:10;5434:13;;;;;;;5433:14;5425:66;;;;-1:-1:-1;;;5425:66:10;;216:2:37;5425:66:10;;;198:21:37;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:37;;;338:37;392:19;;5425:66:10;;;;;;;;5505:12;;5520:15;5505:12;;;:30;5501:138;;;5551:12;:30;;-1:-1:-1;;5551:30:10;5566:15;5551:30;;;;;;5600:28;;564:36:37;;;5600:28:10;;552:2:37;537:18;5600:28:10;;;;;;;5501:138;5366:279::o;422:184:37:-;319:15220:29;;;;;;",
  "sourcePath": "contracts/CLHouse/CLHouse.sol",
  "type": "contract"
}