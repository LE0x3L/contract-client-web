{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_houseName",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "_housePrivate",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "_gov",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "_govRuleMaxManagerMembers",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "_govRuleMaxActiveMembers",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "_govRuleApprovPercentage",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "_CLCMemberManagement",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_CLCGovernance",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_CLLConstructor",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "_ManagerWallets",
          "type": "address[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newApprovPercentage",
          "type": "uint256"
        }
      ],
      "name": "evtChangeGovRules",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum memberEvent",
          "name": "eventMember",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "walletAddr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "evtMember",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum proposalEvent",
          "name": "eventProposal",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "propId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum proposalType",
          "name": "typeProposal",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "evtProposal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenOutCLV",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountOutCLV",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenInCLV",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountReceived",
          "type": "uint256"
        }
      ],
      "name": "evtSwapERC20",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "walletAddr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAdd",
          "type": "address"
        }
      ],
      "name": "evtTxERC20",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum assetsEvent",
          "name": "typeEvent",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "walletAddr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "evtTxEth",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "propId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "position",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "justification",
          "type": "string"
        }
      ],
      "name": "evtVoted",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_acceptance",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "_signerWallet",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "AcceptRejectInvitation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_propId",
          "type": "uint256"
        }
      ],
      "name": "ExecProp",
      "outputs": [
        {
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "message",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "GetArrMembersLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "HOUSE_GOVERNANCE_MODEL",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "HOUSE_NAME",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenInCLV",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountOutCLV",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        }
      ],
      "name": "PropBuyERC20",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "propId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_newApprovPercentage",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        }
      ],
      "name": "PropGovRules",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "propId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_walletAddr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "_isManager",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        }
      ],
      "name": "PropInviteMember",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "propId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_walletAddr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        }
      ],
      "name": "PropRemoveMember",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "propId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        }
      ],
      "name": "PropRequestToJoin",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenOutCLV",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountOutCLV",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        }
      ],
      "name": "PropSellERC20",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "propId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenOutCLV",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenInCLV",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountOutCLV",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        }
      ],
      "name": "PropSwapERC20",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "propId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountOutCLV",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_tokenOutCLV",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        }
      ],
      "name": "PropTxERC20",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "propId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountOutCLV",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        }
      ],
      "name": "PropTxWei",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "propId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_voter",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_propId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_support",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "_justification",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "signR",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "signS",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "signV",
          "type": "uint8"
        }
      ],
      "name": "VotePropOffChain",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_propId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_support",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "_justification",
          "type": "string"
        }
      ],
      "name": "VoteProposal",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "__OFFCHAINVOTE_STRUCT_TYPEHASH__",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "arrDataPropAddMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "walletAddr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "isManager",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "arrDataPropGovRules",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "newApprovPercentage",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "arrDataPropTxAssets",
      "outputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountOutCLV",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tokenOutCLV",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenInCLV",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "arrMembers",
      "outputs": [
        {
          "internalType": "address",
          "name": "walletAddr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isMember",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isManager",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "arrProposals",
      "outputs": [
        {
          "internalType": "address",
          "name": "proponent",
          "type": "address"
        },
        {
          "internalType": "enum proposalType",
          "name": "typeProposal",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "propDataId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "numVotes",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "againstVotes",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "rejected",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "govRuleApprovPercentage",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "govRuleMaxActiveMembers",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "govRuleMaxManagerMembers",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "housePrivate",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "mapIdMember",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "mapInvitationMember",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "mapVotes",
      "outputs": [
        {
          "internalType": "bool",
          "name": "voted",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "inSupport",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "justification",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nftAdmin",
      "outputs": [
        {
          "internalType": "contract CLHNFT",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nftInvitation",
      "outputs": [
        {
          "internalType": "contract CLHNFT",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nftMember",
      "outputs": [
        {
          "internalType": "contract CLHNFT",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numActiveMembers",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numManagerMembers",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultCLH",
      "outputs": [
        {
          "internalType": "contract CLVault",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "18": "contracts/CLHouse/CLHouse.sol",
    "19": "contracts/CLHouse/CLStorage.sol"
  },
  "ast": {
    "absolutePath": "contracts/CLHouse/CLHouse.sol",
    "exportedSymbols": {
      "Address": [
        4065
      ],
      "CLHNFT": [
        1676
      ],
      "CLHouse": [
        969
      ],
      "CLStorage": [
        1114
      ],
      "CLVault": [
        1564
      ],
      "Context": [
        3609
      ],
      "Counters": [
        3495
      ],
      "DebugDLGTCLL": [
        1975
      ],
      "ERC165": [
        4292
      ],
      "ERC721": [
        3263
      ],
      "ERC721Burnable": [
        3293
      ],
      "ERC721URIStorage": [
        3421
      ],
      "ICLHouse": [
        2292
      ],
      "IERC165": [
        4304
      ],
      "IERC20": [
        3587
      ],
      "IERC721": [
        3725
      ],
      "IERC721Metadata": [
        3770
      ],
      "IERC721Receiver": [
        3743
      ],
      "ISwapRouter": [
        1776
      ],
      "IUniswapV3SwapCallback": [
        3509
      ],
      "InvalidGovernanceType": [
        1969
      ],
      "Ownable": [
        2397
      ],
      "Strings": [
        4268
      ],
      "TransferHelper": [
        1947
      ],
      "__GOV_COMMITTEE__": [
        1960
      ],
      "__GOV_DICTATORSHIP__": [
        1955
      ],
      "__GOV_SIMPLE_MAJORITY__": [
        1965
      ],
      "assetsEvent": [
        1989
      ],
      "memberEvent": [
        1982
      ],
      "proposalEvent": [
        1993
      ],
      "proposalType": [
        2003
      ],
      "strDataAddMember": [
        2048
      ],
      "strDataGovRules": [
        2060
      ],
      "strDataTxAssets": [
        2057
      ],
      "strMember": [
        2014
      ],
      "strOffChainVote": [
        2069
      ],
      "strProposal": [
        2034
      ],
      "strVote": [
        2041
      ]
    },
    "id": 970,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 304,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:18"
      },
      {
        "absolutePath": "contracts/CLHouse/CLStorage.sol",
        "file": "./CLStorage.sol",
        "id": 305,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 970,
        "sourceUnit": 1115,
        "src": "58:25:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 307,
              "name": "CLStorage",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1114,
              "src": "274:9:18"
            },
            "id": 308,
            "nodeType": "InheritanceSpecifier",
            "src": "274:9:18"
          }
        ],
        "canonicalName": "CLHouse",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 306,
          "nodeType": "StructuredDocumentation",
          "src": "85:169:18",
          "text": "@title Contract to implement and test the basic fuctions of CLHouses\n @author Leonardo Urrego\n @notice This contract for test only the most basic interactions"
        },
        "fullyImplemented": true,
        "id": 969,
        "linearizedBaseContracts": [
          969,
          1114
        ],
        "name": "CLHouse",
        "nameLocation": "263:7:18",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 362,
              "nodeType": "Block",
              "src": "1435:853:18",
              "statements": [
                {
                  "assignments": [
                    336,
                    338
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 336,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "1461:13:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 362,
                      "src": "1456:18:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 335,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1456:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 338,
                      "mutability": "mutable",
                      "name": "dataDLGTCLL",
                      "nameLocation": "1489:11:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 362,
                      "src": "1476:24:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 337,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1476:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 356,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "434c4c434c48436f6e7374727563746f7228616464726573732c737472696e672c626f6f6c2c627974657333322c75696e74382c75696e74382c75696e74382c616464726573732c616464726573732c616464726573735b5d29",
                            "id": 343,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1587:92:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_1c4b558f301f526804439a30dcb1c8c2c55b6421a316324c93e940b254cf6d09",
                              "typeString": "literal_string \"CLLCLHConstructor(address,string,bool,bytes32,uint8,uint8,uint8,address,address,address[])\""
                            },
                            "value": "CLLCLHConstructor(address,string,bool,bytes32,uint8,uint8,uint8,address,address,address[])"
                          },
                          {
                            "id": 344,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 311,
                            "src": "1697:6:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 345,
                            "name": "_houseName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 313,
                            "src": "1722:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 346,
                            "name": "_housePrivate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 315,
                            "src": "1750:13:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 347,
                            "name": "_gov",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 317,
                            "src": "1781:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 348,
                            "name": "_govRuleMaxManagerMembers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 319,
                            "src": "1803:25:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          {
                            "id": 349,
                            "name": "_govRuleMaxActiveMembers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 321,
                            "src": "1846:24:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          {
                            "id": 350,
                            "name": "_govRuleApprovPercentage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 323,
                            "src": "1888:24:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          {
                            "id": 351,
                            "name": "_CLCMemberManagement",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 325,
                            "src": "1930:20:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 352,
                            "name": "_CLCGovernance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 327,
                            "src": "1968:14:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 353,
                            "name": "_ManagerWallets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 332,
                            "src": "2000:15:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_1c4b558f301f526804439a30dcb1c8c2c55b6421a316324c93e940b254cf6d09",
                              "typeString": "literal_string \"CLLCLHConstructor(address,string,bool,bytes32,uint8,uint8,uint8,address,address,address[])\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          ],
                          "expression": {
                            "id": 341,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1546:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "1546:23:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1546:483:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 339,
                        "name": "_CLLConstructor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 329,
                        "src": "1504:15:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "1504:28:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1504:535:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1455:584:18"
                },
                {
                  "condition": {
                    "id": 358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2054:14:18",
                    "subExpression": {
                      "id": 357,
                      "name": "successDGTCLL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 336,
                      "src": "2055:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 361,
                  "nodeType": "IfStatement",
                  "src": "2050:232:18",
                  "trueBody": {
                    "id": 360,
                    "nodeType": "Block",
                    "src": "2071:211:18",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "2094:178:18",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2112:22:18",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2129:4:18",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2123:5:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2123:11:18"
                              },
                              "variables": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulTypedName",
                                  "src": "2116:3:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2151:28:18",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "returndatasize",
                                  "nodeType": "YulIdentifier",
                                  "src": "2163:14:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2163:16:18"
                              },
                              "variables": [
                                {
                                  "name": "size",
                                  "nodeType": "YulTypedName",
                                  "src": "2155:4:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "2211:3:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2216:1:18",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "2219:4:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "returndatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "2196:14:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2196:28:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2196:28:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "2248:3:18"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "2253:4:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "2241:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2241:17:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2241:17:18"
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [],
                        "id": 359,
                        "nodeType": "InlineAssembly",
                        "src": "2085:187:18"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 309,
              "nodeType": "StructuredDocumentation",
              "src": "291:742:18",
              "text": "@notice Create a new CLH\n @dev Some parameters can be ignored depending on the governance model\n @param _owner The address of the deployed wallet\n @param _houseName Name given by the owner\n @param _housePrivate If is set to 1, the CLH is set to private\n @param _gov keccak256 hash of the governance model, see the __GOV_* constans\n @param _govRuleMaxManagerMembers Max of manager member that CLH can accept (only for COMMITTEE )\n @param _govRuleMaxActiveMembers Max of all members (including managers)\n @param _govRuleApprovPercentage Percentage for approval o reject proposal based on `numManagerMembers`\n @param _ManagerWallets Whitelist of address for invitate as managers"
            },
            "id": 363,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 333,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 311,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "1067:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 363,
                  "src": "1059:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 310,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1059:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 313,
                  "mutability": "mutable",
                  "name": "_houseName",
                  "nameLocation": "1098:10:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 363,
                  "src": "1084:24:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 312,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1084:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 315,
                  "mutability": "mutable",
                  "name": "_housePrivate",
                  "nameLocation": "1123:13:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 363,
                  "src": "1118:18:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 314,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1118:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 317,
                  "mutability": "mutable",
                  "name": "_gov",
                  "nameLocation": "1154:4:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 363,
                  "src": "1146:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 316,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1146:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 319,
                  "mutability": "mutable",
                  "name": "_govRuleMaxManagerMembers",
                  "nameLocation": "1174:25:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 363,
                  "src": "1168:31:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 318,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1168:5:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 321,
                  "mutability": "mutable",
                  "name": "_govRuleMaxActiveMembers",
                  "nameLocation": "1215:24:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 363,
                  "src": "1209:30:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 320,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1209:5:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 323,
                  "mutability": "mutable",
                  "name": "_govRuleApprovPercentage",
                  "nameLocation": "1255:24:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 363,
                  "src": "1249:30:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 322,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1249:5:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 325,
                  "mutability": "mutable",
                  "name": "_CLCMemberManagement",
                  "nameLocation": "1297:20:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 363,
                  "src": "1289:28:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 324,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1289:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 327,
                  "mutability": "mutable",
                  "name": "_CLCGovernance",
                  "nameLocation": "1335:14:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 363,
                  "src": "1327:22:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 326,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1327:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 329,
                  "mutability": "mutable",
                  "name": "_CLLConstructor",
                  "nameLocation": "1367:15:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 363,
                  "src": "1359:23:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 328,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1359:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 332,
                  "mutability": "mutable",
                  "name": "_ManagerWallets",
                  "nameLocation": "1409:15:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 363,
                  "src": "1392:32:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 330,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1392:7:18",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 331,
                    "nodeType": "ArrayTypeName",
                    "src": "1392:9:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1049:381:18"
            },
            "returnParameters": {
              "id": 334,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1435:0:18"
            },
            "scope": 969,
            "src": "1038:1250:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 395,
              "nodeType": "Block",
              "src": "2797:514:18",
              "statements": [
                {
                  "assignments": [
                    374,
                    376
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 374,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "2813:13:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 395,
                      "src": "2808:18:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 373,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2808:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 376,
                      "mutability": "mutable",
                      "name": "dataDLGTCLL",
                      "nameLocation": "2841:11:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 395,
                      "src": "2828:24:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 375,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2828:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 385,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "5f4578656350726f702875696e7432353629",
                            "id": 381,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2937:20:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_4eeb7b857add57878aabffd3a0fa25ef81d4ec5c9dbab986b196eb787b30e8b1",
                              "typeString": "literal_string \"_ExecProp(uint256)\""
                            },
                            "value": "_ExecProp(uint256)"
                          },
                          {
                            "id": 382,
                            "name": "_propId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 366,
                            "src": "2975:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_4eeb7b857add57878aabffd3a0fa25ef81d4ec5c9dbab986b196eb787b30e8b1",
                              "typeString": "literal_string \"_ExecProp(uint256)\""
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 379,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2896:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "2896:23:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2896:100:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 377,
                        "name": "CLCGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 993,
                        "src": "2856:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 378,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "2856:26:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2856:150:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2807:199:18"
                },
                {
                  "condition": {
                    "id": 387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3021:14:18",
                    "subExpression": {
                      "id": 386,
                      "name": "successDGTCLL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 374,
                      "src": "3022:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 390,
                  "nodeType": "IfStatement",
                  "src": "3017:232:18",
                  "trueBody": {
                    "id": 389,
                    "nodeType": "Block",
                    "src": "3038:211:18",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "3061:178:18",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3079:22:18",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3096:4:18",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3090:5:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3090:11:18"
                              },
                              "variables": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulTypedName",
                                  "src": "3083:3:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3118:28:18",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "returndatasize",
                                  "nodeType": "YulIdentifier",
                                  "src": "3130:14:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3130:16:18"
                              },
                              "variables": [
                                {
                                  "name": "size",
                                  "nodeType": "YulTypedName",
                                  "src": "3122:4:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "3178:3:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3183:1:18",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "3186:4:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "returndatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "3163:14:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3163:28:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3163:28:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "3215:3:18"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "3220:4:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "3208:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3208:17:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3208:17:18"
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [],
                        "id": 388,
                        "nodeType": "InlineAssembly",
                        "src": "3052:187:18"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "74727565",
                        "id": 391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3268:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "537563636573732065786563757465642070726f706f73616c",
                        "id": 392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3275:27:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cc5063be902007aa4094c05d7977aa17bd625bcc90d4b58bc658ed91467f2f04",
                          "typeString": "literal_string \"Success executed proposal\""
                        },
                        "value": "Success executed proposal"
                      }
                    ],
                    "id": 393,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3266:38:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_stringliteral_cc5063be902007aa4094c05d7977aa17bd625bcc90d4b58bc658ed91467f2f04_$",
                      "typeString": "tuple(bool,literal_string \"Success executed proposal\")"
                    }
                  },
                  "functionReturnParameters": 372,
                  "id": 394,
                  "nodeType": "Return",
                  "src": "3259:45:18"
                }
              ]
            },
            "documentation": {
              "id": 364,
              "nodeType": "StructuredDocumentation",
              "src": "2294:344:18",
              "text": "@notice Execute (or reject) a proposal computing the votes and the governance model\n @dev Normally is called internally after each vote\n @param _propId ID of the proposal, based on `arrProposals`\n @return status True if the proposal can be execute, false in other cases\n @return message result of the transaction"
            },
            "functionSelector": "5f3d99b3",
            "id": 396,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ExecProp",
            "nameLocation": "2652:8:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 367,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 366,
                  "mutability": "mutable",
                  "name": "_propId",
                  "nameLocation": "2678:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 396,
                  "src": "2670:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 365,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2670:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2660:31:18"
            },
            "returnParameters": {
              "id": 372,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 369,
                  "mutability": "mutable",
                  "name": "status",
                  "nameLocation": "2741:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 396,
                  "src": "2736:11:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 368,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2736:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 371,
                  "mutability": "mutable",
                  "name": "message",
                  "nameLocation": "2775:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 396,
                  "src": "2761:21:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 370,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2761:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2722:70:18"
            },
            "scope": 969,
            "src": "2643:668:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 430,
              "nodeType": "Block",
              "src": "3801:556:18",
              "statements": [
                {
                  "assignments": [
                    409,
                    411
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 409,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "3817:13:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 430,
                      "src": "3812:18:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 408,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3812:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 411,
                      "mutability": "mutable",
                      "name": "dataDLGTCLL",
                      "nameLocation": "3845:11:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 430,
                      "src": "3832:24:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 410,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3832:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 422,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "5f566f746550726f706f73616c2875696e743235362c626f6f6c2c737472696e6729",
                            "id": 416,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3942:36:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_f40e9b45c8cb3eefe3814bdb43fffcd9c8d68fcf6fe63025b2fdea82dc6c4889",
                              "typeString": "literal_string \"_VoteProposal(uint256,bool,string)\""
                            },
                            "value": "_VoteProposal(uint256,bool,string)"
                          },
                          {
                            "id": 417,
                            "name": "_propId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 399,
                            "src": "3997:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 418,
                            "name": "_support",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 401,
                            "src": "4022:8:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 419,
                            "name": "_justification",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 403,
                            "src": "4048:14:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_f40e9b45c8cb3eefe3814bdb43fffcd9c8d68fcf6fe63025b2fdea82dc6c4889",
                              "typeString": "literal_string \"_VoteProposal(uint256,bool,string)\""
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 414,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3900:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "3900:23:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3900:176:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 412,
                        "name": "CLCGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 993,
                        "src": "3860:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 413,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "3860:26:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3860:226:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3811:275:18"
                },
                {
                  "condition": {
                    "id": 424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "4101:14:18",
                    "subExpression": {
                      "id": 423,
                      "name": "successDGTCLL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 409,
                      "src": "4102:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 427,
                  "nodeType": "IfStatement",
                  "src": "4097:232:18",
                  "trueBody": {
                    "id": 426,
                    "nodeType": "Block",
                    "src": "4118:211:18",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "4141:178:18",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4159:22:18",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4176:4:18",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "4170:5:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4170:11:18"
                              },
                              "variables": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulTypedName",
                                  "src": "4163:3:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4198:28:18",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "returndatasize",
                                  "nodeType": "YulIdentifier",
                                  "src": "4210:14:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4210:16:18"
                              },
                              "variables": [
                                {
                                  "name": "size",
                                  "nodeType": "YulTypedName",
                                  "src": "4202:4:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "4258:3:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4263:1:18",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "4266:4:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "returndatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "4243:14:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4243:28:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4243:28:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "4295:3:18"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "4300:4:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "4288:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4288:17:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4288:17:18"
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [],
                        "id": 425,
                        "nodeType": "InlineAssembly",
                        "src": "4132:187:18"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4346:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 407,
                  "id": 429,
                  "nodeType": "Return",
                  "src": "4339:11:18"
                }
              ]
            },
            "documentation": {
              "id": 397,
              "nodeType": "StructuredDocumentation",
              "src": "3317:322:18",
              "text": "@notice Used to vote a proposal\n @dev After vote the proposal automatically try to be executed\n @param _propId ID of the proposal, based on `arrProposals`\n @param _support True for accept, false to reject\n @param _justification About your vote\n @return true is the vote can be stored"
            },
            "functionSelector": "a5ac0f31",
            "id": 431,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "VoteProposal",
            "nameLocation": "3653:12:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 404,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 399,
                  "mutability": "mutable",
                  "name": "_propId",
                  "nameLocation": "3683:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 431,
                  "src": "3675:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 398,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3675:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 401,
                  "mutability": "mutable",
                  "name": "_support",
                  "nameLocation": "3705:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 431,
                  "src": "3700:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 400,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3700:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 403,
                  "mutability": "mutable",
                  "name": "_justification",
                  "nameLocation": "3737:14:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 431,
                  "src": "3723:28:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 402,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3723:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3665:92:18"
            },
            "returnParameters": {
              "id": 407,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 406,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 431,
                  "src": "3790:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 405,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3790:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3788:8:18"
            },
            "scope": 969,
            "src": "3644:713:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 645,
              "nodeType": "Block",
              "src": "4618:2593:18",
              "statements": [
                {
                  "assignments": [
                    451
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 451,
                      "mutability": "mutable",
                      "name": "chainId",
                      "nameLocation": "4636:7:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 645,
                      "src": "4628:15:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 450,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4628:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 454,
                  "initialValue": {
                    "expression": {
                      "id": 452,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -4,
                      "src": "4646:5:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "chainid",
                    "nodeType": "MemberAccess",
                    "src": "4646:13:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4628:31:18"
                },
                {
                  "assignments": [
                    456
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 456,
                      "mutability": "mutable",
                      "name": "eip712DomainHash",
                      "nameLocation": "4678:16:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 645,
                      "src": "4670:24:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 455,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4670:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 479,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
                                    "id": 463,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4796:84:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
                                      "typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
                                    },
                                    "value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
                                      "typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
                                    }
                                  ],
                                  "expression": {
                                    "id": 461,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "4758:3:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 462,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "4758:16:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 464,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4758:140:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 460,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "4748:9:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 465,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4748:151:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "434c486f757365",
                                "id": 467,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4927:9:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_01318895af1f6db161b2ba745b8e57a6b46efad77d736630379ec69c3cd4c875",
                                  "typeString": "literal_string \"CLHouse\""
                                },
                                "value": "CLHouse"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_01318895af1f6db161b2ba745b8e57a6b46efad77d736630379ec69c3cd4c875",
                                  "typeString": "literal_string \"CLHouse\""
                                }
                              ],
                              "id": 466,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "4917:9:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 468,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4917:20:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "302e302e3130",
                                "id": 470,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4965:8:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_07ef8ec374e43c85c540da8f69de7866f66e96deb3aa6b597df20e0ff3ce0c64",
                                  "typeString": "literal_string \"0.0.10\""
                                },
                                "value": "0.0.10"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_07ef8ec374e43c85c540da8f69de7866f66e96deb3aa6b597df20e0ff3ce0c64",
                                  "typeString": "literal_string \"0.0.10\""
                                }
                              ],
                              "id": 469,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "4955:9:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 471,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4955:19:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 472,
                            "name": "chainId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 451,
                            "src": "4992:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 475,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "5025:4:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CLHouse_$969",
                                  "typeString": "contract CLHouse"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CLHouse_$969",
                                  "typeString": "contract CLHouse"
                                }
                              ],
                              "id": 474,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5017:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 473,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5017:7:18",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 476,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5017:13:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 458,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "4720:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "4720:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4720:324:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 457,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "4697:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4697:357:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4670:384:18"
                },
                {
                  "assignments": [
                    481
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 481,
                      "mutability": "mutable",
                      "name": "hashStruct",
                      "nameLocation": "5073:10:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 645,
                      "src": "5065:18:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 480,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5065:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 502,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "7374724f6666436861696e566f7465286164647265737320766f7465722c75696e743235362070726f7049642c626f6f6c20737570706f72742c737472696e67206a757374696669636174696f6e29",
                                    "id": 488,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5185:81:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_29db90f499fc17d858adf930fec9986f376f0ba9b76d35b25f1db7afb7f4b60c",
                                      "typeString": "literal_string \"strOffChainVote(address voter,uint256 propId,bool support,string justification)\""
                                    },
                                    "value": "strOffChainVote(address voter,uint256 propId,bool support,string justification)"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_29db90f499fc17d858adf930fec9986f376f0ba9b76d35b25f1db7afb7f4b60c",
                                      "typeString": "literal_string \"strOffChainVote(address voter,uint256 propId,bool support,string justification)\""
                                    }
                                  ],
                                  "expression": {
                                    "id": 486,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "5147:3:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 487,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "5147:16:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 489,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5147:137:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 485,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "5137:9:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 490,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5137:148:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 491,
                            "name": "_voter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 433,
                            "src": "5303:6:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 492,
                            "name": "_propId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 435,
                            "src": "5327:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 493,
                            "name": "_support",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 437,
                            "src": "5352:8:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 497,
                                    "name": "_justification",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 439,
                                    "src": "5405:14:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 495,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "5388:3:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 496,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "5388:16:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 498,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5388:32:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 494,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "5378:9:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 499,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5378:43:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 483,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5109:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 484,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "5109:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5109:326:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 482,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "5086:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5086:359:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5065:380:18"
                },
                {
                  "assignments": [
                    504
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 504,
                      "mutability": "mutable",
                      "name": "singhash",
                      "nameLocation": "5472:8:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 645,
                      "src": "5464:16:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 503,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5464:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 513,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 508,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5510:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 509,
                            "name": "eip712DomainHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 456,
                            "src": "5522:16:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 510,
                            "name": "hashStruct",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 481,
                            "src": "5540:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 506,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5493:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "5493:16:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5493:58:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 505,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "5483:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5483:69:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5464:88:18"
                },
                {
                  "assignments": [
                    515
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 515,
                      "mutability": "mutable",
                      "name": "signer",
                      "nameLocation": "6102:6:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 645,
                      "src": "6094:14:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 514,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6094:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 522,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 517,
                        "name": "singhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 504,
                        "src": "6122:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 518,
                        "name": "signV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 445,
                        "src": "6132:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 519,
                        "name": "signR",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 441,
                        "src": "6139:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 520,
                        "name": "signS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 443,
                        "src": "6146:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 516,
                      "name": "ecrecover",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -6,
                      "src": "6111:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                      }
                    },
                    "id": 521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6111:42:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6094:59:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 524,
                          "name": "signer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 515,
                          "src": "6173:6:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 527,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6191:1:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 526,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6183:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 525,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6183:7:18",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 528,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6183:10:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6173:20:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45434453413a20696e76616c6964207369676e6174757265",
                        "id": 530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6195:26:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be",
                          "typeString": "literal_string \"ECDSA: invalid signature\""
                        },
                        "value": "ECDSA: invalid signature"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be",
                          "typeString": "literal_string \"ECDSA: invalid signature\""
                        }
                      ],
                      "id": 523,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6164:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6164:59:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 532,
                  "nodeType": "ExpressionStatement",
                  "src": "6164:59:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 534,
                          "name": "signer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 515,
                          "src": "6242:6:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 535,
                          "name": "_voter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 433,
                          "src": "6252:6:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6242:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "566f746550726f704f6666436861696e3a20696e76616c6964207369676e6174757265",
                        "id": 537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6260:37:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ea21b1301886760274d1fe172a4fb37c1f44eba8aba8ceb5f7c88aeffcf74122",
                          "typeString": "literal_string \"VotePropOffChain: invalid signature\""
                        },
                        "value": "VotePropOffChain: invalid signature"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ea21b1301886760274d1fe172a4fb37c1f44eba8aba8ceb5f7c88aeffcf74122",
                          "typeString": "literal_string \"VotePropOffChain: invalid signature\""
                        }
                      ],
                      "id": 533,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6233:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6233:66:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 539,
                  "nodeType": "ExpressionStatement",
                  "src": "6233:66:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 541,
                          "name": "_propId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 435,
                          "src": "6318:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 542,
                            "name": "arrProposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1026,
                            "src": "6328:12:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_strProposal_$2034_storage_$dyn_storage",
                              "typeString": "struct strProposal storage ref[] storage ref"
                            }
                          },
                          "id": 543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6328:19:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6318:29:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f706f73616c20646f6573206e6f74206578697374",
                        "id": 545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6350:25:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e62a544e5aebc4f7865ef71973090f3036faa05a5f7be3ea3605ab15dc232bf",
                          "typeString": "literal_string \"Proposal does not exist\""
                        },
                        "value": "Proposal does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8e62a544e5aebc4f7865ef71973090f3036faa05a5f7be3ea3605ab15dc232bf",
                          "typeString": "literal_string \"Proposal does not exist\""
                        }
                      ],
                      "id": 540,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6309:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6309:68:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 547,
                  "nodeType": "ExpressionStatement",
                  "src": "6309:68:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "66616c7365",
                          "id": 549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6396:5:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 550,
                              "name": "arrProposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1026,
                              "src": "6405:12:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_strProposal_$2034_storage_$dyn_storage",
                                "typeString": "struct strProposal storage ref[] storage ref"
                              }
                            },
                            "id": 552,
                            "indexExpression": {
                              "id": 551,
                              "name": "_propId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 435,
                              "src": "6419:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6405:23:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strProposal_$2034_storage",
                              "typeString": "struct strProposal storage ref"
                            }
                          },
                          "id": 553,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2029,
                          "src": "6405:32:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6396:41:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f706f73616c20616c7265616479206578656375746564",
                        "id": 555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6440:27:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2707e21e9aae26cb9edbd76c2d262b3de919daea0bd16a10af4500ba819ed5fd",
                          "typeString": "literal_string \"Proposal already executed\""
                        },
                        "value": "Proposal already executed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2707e21e9aae26cb9edbd76c2d262b3de919daea0bd16a10af4500ba819ed5fd",
                          "typeString": "literal_string \"Proposal already executed\""
                        }
                      ],
                      "id": 548,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6387:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6387:82:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 557,
                  "nodeType": "ExpressionStatement",
                  "src": "6387:82:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "66616c7365",
                          "id": 559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6488:5:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 560,
                              "name": "arrProposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1026,
                              "src": "6497:12:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_strProposal_$2034_storage_$dyn_storage",
                                "typeString": "struct strProposal storage ref[] storage ref"
                              }
                            },
                            "id": 562,
                            "indexExpression": {
                              "id": 561,
                              "name": "_propId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 435,
                              "src": "6511:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6497:23:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strProposal_$2034_storage",
                              "typeString": "struct strProposal storage ref"
                            }
                          },
                          "id": 563,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rejected",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2031,
                          "src": "6497:32:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6488:41:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f706f73616c207761732072656a6563746564",
                        "id": 565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6532:23:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e7a1af482e802eeeb8181066732509833dee009d3d745e7a86365df02f8e23f2",
                          "typeString": "literal_string \"Proposal was rejected\""
                        },
                        "value": "Proposal was rejected"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e7a1af482e802eeeb8181066732509833dee009d3d745e7a86365df02f8e23f2",
                          "typeString": "literal_string \"Proposal was rejected\""
                        }
                      ],
                      "id": 558,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6479:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6479:78:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 567,
                  "nodeType": "ExpressionStatement",
                  "src": "6479:78:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6576:36:18",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 569,
                                "name": "mapVotes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1022,
                                "src": "6577:8:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_strVote_$2041_storage_$_$",
                                  "typeString": "mapping(uint256 => mapping(address => struct strVote storage ref))"
                                }
                              },
                              "id": 571,
                              "indexExpression": {
                                "id": 570,
                                "name": "_propId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 435,
                                "src": "6587:7:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6577:19:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_strVote_$2041_storage_$",
                                "typeString": "mapping(address => struct strVote storage ref)"
                              }
                            },
                            "id": 573,
                            "indexExpression": {
                              "id": 572,
                              "name": "_voter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 433,
                              "src": "6598:6:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6577:29:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strVote_$2041_storage",
                              "typeString": "struct strVote storage ref"
                            }
                          },
                          "id": 574,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "voted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2036,
                          "src": "6577:35:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "557365722068617665206120766f74652072656769737472656420666f7220746869732070726f706f73616c",
                        "id": 576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6615:46:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_56fe477409b5a2c2162ac21a659357e86bc625f3d283f0a935c34b8d0c1d72bf",
                          "typeString": "literal_string \"User have a vote registred for this proposal\""
                        },
                        "value": "User have a vote registred for this proposal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_56fe477409b5a2c2162ac21a659357e86bc625f3d283f0a935c34b8d0c1d72bf",
                          "typeString": "literal_string \"User have a vote registred for this proposal\""
                        }
                      ],
                      "id": 568,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6567:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6567:96:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 578,
                  "nodeType": "ExpressionStatement",
                  "src": "6567:96:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 580,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "6682:5:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 581,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "6682:15:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 582,
                              "name": "arrProposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1026,
                              "src": "6700:12:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_strProposal_$2034_storage_$dyn_storage",
                                "typeString": "struct strProposal storage ref[] storage ref"
                              }
                            },
                            "id": 584,
                            "indexExpression": {
                              "id": 583,
                              "name": "_propId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 435,
                              "src": "6714:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6700:23:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strProposal_$2034_storage",
                              "typeString": "struct strProposal storage ref"
                            }
                          },
                          "id": 585,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "deadline",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2033,
                          "src": "6700:32:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6682:50:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f706f73616c20646561646c696e65",
                        "id": 587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6735:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d346406273abb3cccc98a9f3bee5fcee44b062031fda983a326fe95bad973376",
                          "typeString": "literal_string \"Proposal deadline\""
                        },
                        "value": "Proposal deadline"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d346406273abb3cccc98a9f3bee5fcee44b062031fda983a326fe95bad973376",
                          "typeString": "literal_string \"Proposal deadline\""
                        }
                      ],
                      "id": 579,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6673:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6673:83:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 589,
                  "nodeType": "ExpressionStatement",
                  "src": "6673:83:18"
                },
                {
                  "expression": {
                    "id": 597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 590,
                            "name": "mapVotes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1022,
                            "src": "6767:8:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_strVote_$2041_storage_$_$",
                              "typeString": "mapping(uint256 => mapping(address => struct strVote storage ref))"
                            }
                          },
                          "id": 593,
                          "indexExpression": {
                            "id": 591,
                            "name": "_propId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 435,
                            "src": "6777:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6767:19:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_strVote_$2041_storage_$",
                            "typeString": "mapping(address => struct strVote storage ref)"
                          }
                        },
                        "id": 594,
                        "indexExpression": {
                          "id": 592,
                          "name": "_voter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 433,
                          "src": "6788:6:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6767:29:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_strVote_$2041_storage",
                          "typeString": "struct strVote storage ref"
                        }
                      },
                      "id": 595,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "inSupport",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2038,
                      "src": "6767:39:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 596,
                      "name": "_support",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 437,
                      "src": "6809:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6767:50:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 598,
                  "nodeType": "ExpressionStatement",
                  "src": "6767:50:18"
                },
                {
                  "expression": {
                    "id": 606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 599,
                            "name": "mapVotes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1022,
                            "src": "6827:8:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_strVote_$2041_storage_$_$",
                              "typeString": "mapping(uint256 => mapping(address => struct strVote storage ref))"
                            }
                          },
                          "id": 602,
                          "indexExpression": {
                            "id": 600,
                            "name": "_propId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 435,
                            "src": "6837:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6827:19:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_strVote_$2041_storage_$",
                            "typeString": "mapping(address => struct strVote storage ref)"
                          }
                        },
                        "id": 603,
                        "indexExpression": {
                          "id": 601,
                          "name": "_voter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 433,
                          "src": "6848:6:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6827:29:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_strVote_$2041_storage",
                          "typeString": "struct strVote storage ref"
                        }
                      },
                      "id": 604,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "justification",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2040,
                      "src": "6827:43:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 605,
                      "name": "_justification",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 439,
                      "src": "6873:14:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "6827:60:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 607,
                  "nodeType": "ExpressionStatement",
                  "src": "6827:60:18"
                },
                {
                  "expression": {
                    "id": 615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 608,
                            "name": "mapVotes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1022,
                            "src": "6897:8:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_strVote_$2041_storage_$_$",
                              "typeString": "mapping(uint256 => mapping(address => struct strVote storage ref))"
                            }
                          },
                          "id": 611,
                          "indexExpression": {
                            "id": 609,
                            "name": "_propId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 435,
                            "src": "6907:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6897:19:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_strVote_$2041_storage_$",
                            "typeString": "mapping(address => struct strVote storage ref)"
                          }
                        },
                        "id": 612,
                        "indexExpression": {
                          "id": 610,
                          "name": "_voter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 433,
                          "src": "6918:6:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6897:29:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_strVote_$2041_storage",
                          "typeString": "struct strVote storage ref"
                        }
                      },
                      "id": 613,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "voted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2036,
                      "src": "6897:35:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 614,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6935:4:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6897:42:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 616,
                  "nodeType": "ExpressionStatement",
                  "src": "6897:42:18"
                },
                {
                  "expression": {
                    "id": 621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "6950:34:18",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 617,
                          "name": "arrProposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1026,
                          "src": "6950:12:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_strProposal_$2034_storage_$dyn_storage",
                            "typeString": "struct strProposal storage ref[] storage ref"
                          }
                        },
                        "id": 619,
                        "indexExpression": {
                          "id": 618,
                          "name": "_propId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 435,
                          "src": "6964:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6950:23:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_strProposal_$2034_storage",
                          "typeString": "struct strProposal storage ref"
                        }
                      },
                      "id": 620,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "numVotes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2025,
                      "src": "6950:32:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 622,
                  "nodeType": "ExpressionStatement",
                  "src": "6950:34:18"
                },
                {
                  "condition": {
                    "id": 624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "6999:9:18",
                    "subExpression": {
                      "id": 623,
                      "name": "_support",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 437,
                      "src": "7000:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 631,
                  "nodeType": "IfStatement",
                  "src": "6995:66:18",
                  "trueBody": {
                    "expression": {
                      "id": 629,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "7023:38:18",
                      "subExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 625,
                            "name": "arrProposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1026,
                            "src": "7023:12:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_strProposal_$2034_storage_$dyn_storage",
                              "typeString": "struct strProposal storage ref[] storage ref"
                            }
                          },
                          "id": 627,
                          "indexExpression": {
                            "id": 626,
                            "name": "_propId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 435,
                            "src": "7037:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7023:23:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_strProposal_$2034_storage",
                            "typeString": "struct strProposal storage ref"
                          }
                        },
                        "id": 628,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "memberName": "againstVotes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2027,
                        "src": "7023:36:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 630,
                    "nodeType": "ExpressionStatement",
                    "src": "7023:38:18"
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 633,
                        "name": "_propId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 435,
                        "src": "7087:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 634,
                        "name": "_support",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 437,
                        "src": "7097:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 635,
                        "name": "_voter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 433,
                        "src": "7107:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 636,
                        "name": "_justification",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 439,
                        "src": "7115:14:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 632,
                      "name": "evtVoted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1071,
                      "src": "7077:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bool_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,bool,address,string memory)"
                      }
                    },
                    "id": 637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7077:54:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 638,
                  "nodeType": "EmitStatement",
                  "src": "7072:59:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 640,
                        "name": "_propId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 435,
                        "src": "7173:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 639,
                      "name": "ExecProp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 396,
                      "src": "7163:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_bool_$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) returns (bool,string memory)"
                      }
                    },
                    "id": 641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7163:19:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_string_memory_ptr_$",
                      "typeString": "tuple(bool,string memory)"
                    }
                  },
                  "id": 642,
                  "nodeType": "ExpressionStatement",
                  "src": "7163:19:18"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7200:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 449,
                  "id": 644,
                  "nodeType": "Return",
                  "src": "7193:11:18"
                }
              ]
            },
            "functionSelector": "61461e2f",
            "id": 646,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "VotePropOffChain",
            "nameLocation": "4372:16:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 446,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 433,
                  "mutability": "mutable",
                  "name": "_voter",
                  "nameLocation": "4406:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 646,
                  "src": "4398:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 432,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4398:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 435,
                  "mutability": "mutable",
                  "name": "_propId",
                  "nameLocation": "4430:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 646,
                  "src": "4422:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 434,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4422:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 437,
                  "mutability": "mutable",
                  "name": "_support",
                  "nameLocation": "4452:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 646,
                  "src": "4447:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 436,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4447:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 439,
                  "mutability": "mutable",
                  "name": "_justification",
                  "nameLocation": "4484:14:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 646,
                  "src": "4470:28:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 438,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4470:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 441,
                  "mutability": "mutable",
                  "name": "signR",
                  "nameLocation": "4516:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 646,
                  "src": "4508:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 440,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4508:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 443,
                  "mutability": "mutable",
                  "name": "signS",
                  "nameLocation": "4539:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 646,
                  "src": "4531:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 442,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4531:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 445,
                  "mutability": "mutable",
                  "name": "signV",
                  "nameLocation": "4560:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 646,
                  "src": "4554:11:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 444,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4554:5:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4388:184:18"
            },
            "returnParameters": {
              "id": 449,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 448,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 646,
                  "src": "4607:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 447,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4607:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4605:8:18"
            },
            "scope": 969,
            "src": "4363:2848:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 680,
              "nodeType": "Block",
              "src": "7890:634:18",
              "statements": [
                {
                  "assignments": [
                    663,
                    665
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 663,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "7906:13:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 680,
                      "src": "7901:18:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 662,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7901:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 665,
                      "mutability": "mutable",
                      "name": "dataDLGTCLL",
                      "nameLocation": "7934:11:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 680,
                      "src": "7921:24:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 664,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "7921:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 678,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f70496e766974654d656d62657228616464726573732c737472696e672c737472696e672c626f6f6c2c75696e7432353629",
                            "id": 670,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8031:54:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_fe6eade62eac18a65f6685b99ae79221311bcdeff65e0a78b8925a18a14fd21f",
                              "typeString": "literal_string \"PropInviteMember(address,string,string,bool,uint256)\""
                            },
                            "value": "PropInviteMember(address,string,string,bool,uint256)"
                          },
                          {
                            "id": 671,
                            "name": "_walletAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 649,
                            "src": "8104:11:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 672,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 651,
                            "src": "8133:5:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 673,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 653,
                            "src": "8156:12:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 674,
                            "name": "_isManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 655,
                            "src": "8186:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 675,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 657,
                            "src": "8214:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_fe6eade62eac18a65f6685b99ae79221311bcdeff65e0a78b8925a18a14fd21f",
                              "typeString": "literal_string \"PropInviteMember(address,string,string,bool,uint256)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 668,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7989:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 669,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "7989:23:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7989:249:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 666,
                        "name": "CLCGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 993,
                        "src": "7949:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 667,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "7949:26:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7949:299:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7900:348:18"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "8268:250:18",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "8282:22:18",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8299:4:18",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "8293:5:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8293:11:18"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "8286:3:18",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "8317:28:18",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "8329:14:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8329:16:18"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "8321:4:18",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "8373:3:18"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8378:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "8381:4:18"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "8358:14:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8358:28:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8358:28:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8426:49:18",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "8451:3:18"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "8456:4:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "8444:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8444:17:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8444:17:18"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "8410:13:18"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "8402:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8402:23:18"
                        },
                        "nodeType": "YulIf",
                        "src": "8399:76:18"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "8488:20:18",
                        "value": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "8504:3:18"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "8498:5:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8498:10:18"
                        },
                        "variableNames": [
                          {
                            "name": "propId",
                            "nodeType": "YulIdentifier",
                            "src": "8488:6:18"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 660,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "8488:6:18",
                      "valueSize": 1
                    },
                    {
                      "declaration": 663,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "8410:13:18",
                      "valueSize": 1
                    }
                  ],
                  "id": 679,
                  "nodeType": "InlineAssembly",
                  "src": "8259:259:18"
                }
              ]
            },
            "documentation": {
              "id": 647,
              "nodeType": "StructuredDocumentation",
              "src": "7217:434:18",
              "text": "@notice Generate a new proposal to invite a new member\n @dev the execution of this proposal only create an invitation \n @param _walletAddr  Address of the new user\n @param _name Can be the nickname or other reference to the User\n @param _description A text for the proposal\n @param _isManager True if is for a manager member\n @return propId ID of the new proposal, based on `arrProposals`"
            },
            "functionSelector": "fe6eade6",
            "id": 681,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropInviteMember",
            "nameLocation": "7665:16:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 658,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 649,
                  "mutability": "mutable",
                  "name": "_walletAddr",
                  "nameLocation": "7699:11:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 681,
                  "src": "7691:19:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 648,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7691:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 651,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "7734:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 681,
                  "src": "7720:19:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 650,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7720:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 653,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "7763:12:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 681,
                  "src": "7749:26:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 652,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7749:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 655,
                  "mutability": "mutable",
                  "name": "_isManager",
                  "nameLocation": "7790:10:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 681,
                  "src": "7785:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 654,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7785:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 657,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "7818:10:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 681,
                  "src": "7810:18:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 656,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7810:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7681:153:18"
            },
            "returnParameters": {
              "id": 661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 660,
                  "mutability": "mutable",
                  "name": "propId",
                  "nameLocation": "7877:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 681,
                  "src": "7869:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 659,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7869:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7867:18:18"
            },
            "scope": 969,
            "src": "7656:868:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 709,
              "nodeType": "Block",
              "src": "8986:571:18",
              "statements": [
                {
                  "assignments": [
                    694,
                    696
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 694,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "9002:13:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 709,
                      "src": "8997:18:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 693,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "8997:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 696,
                      "mutability": "mutable",
                      "name": "dataDLGTCLL",
                      "nameLocation": "9030:11:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 709,
                      "src": "9017:24:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 695,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "9017:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 707,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f7052656d6f76654d656d62657228616464726573732c737472696e672c75696e7432353629",
                            "id": 701,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9127:42:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c4caeb63bf1a2fcb0ddd22cc1fc31a5bc803a29a62fb7cffc5d79a464d7d1f77",
                              "typeString": "literal_string \"PropRemoveMember(address,string,uint256)\""
                            },
                            "value": "PropRemoveMember(address,string,uint256)"
                          },
                          {
                            "id": 702,
                            "name": "_walletAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 684,
                            "src": "9188:11:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 703,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 686,
                            "src": "9217:12:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 704,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 688,
                            "src": "9247:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c4caeb63bf1a2fcb0ddd22cc1fc31a5bc803a29a62fb7cffc5d79a464d7d1f77",
                              "typeString": "literal_string \"PropRemoveMember(address,string,uint256)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 699,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "9085:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 700,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "9085:23:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 705,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9085:186:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 697,
                        "name": "CLCGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 993,
                        "src": "9045:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 698,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "9045:26:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9045:236:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8996:285:18"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "9301:250:18",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "9315:22:18",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9332:4:18",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "9326:5:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9326:11:18"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "9319:3:18",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "9350:28:18",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "9362:14:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9362:16:18"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "9354:4:18",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "9406:3:18"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9411:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "9414:4:18"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "9391:14:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9391:28:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9391:28:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9459:49:18",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "9484:3:18"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "9489:4:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "9477:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9477:17:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9477:17:18"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "9443:13:18"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "9435:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9435:23:18"
                        },
                        "nodeType": "YulIf",
                        "src": "9432:76:18"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "9521:20:18",
                        "value": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "9537:3:18"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "9531:5:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9531:10:18"
                        },
                        "variableNames": [
                          {
                            "name": "propId",
                            "nodeType": "YulIdentifier",
                            "src": "9521:6:18"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 691,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "9521:6:18",
                      "valueSize": 1
                    },
                    {
                      "declaration": 694,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "9443:13:18",
                      "valueSize": 1
                    }
                  ],
                  "id": 708,
                  "nodeType": "InlineAssembly",
                  "src": "9292:259:18"
                }
              ]
            },
            "documentation": {
              "id": 682,
              "nodeType": "StructuredDocumentation",
              "src": "8530:271:18",
              "text": "@notice Generate a new proposal for remove a member\n @dev The member can be a managaer\n @param _walletAddr member Address to be removed\n @param _description About the proposal\n @return propId ID of the new proposal, based on `arrProposals`"
            },
            "functionSelector": "c4caeb63",
            "id": 710,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropRemoveMember",
            "nameLocation": "8815:16:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 689,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 684,
                  "mutability": "mutable",
                  "name": "_walletAddr",
                  "nameLocation": "8849:11:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 710,
                  "src": "8841:19:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 683,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8841:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 686,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "8884:12:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 710,
                  "src": "8870:26:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 685,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8870:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 688,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "8914:10:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 710,
                  "src": "8906:18:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 687,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8906:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8831:99:18"
            },
            "returnParameters": {
              "id": 692,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 691,
                  "mutability": "mutable",
                  "name": "propId",
                  "nameLocation": "8973:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 710,
                  "src": "8965:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 690,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8965:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8963:18:18"
            },
            "scope": 969,
            "src": "8806:751:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 741,
              "nodeType": "Block",
              "src": "10098:595:18",
              "statements": [
                {
                  "assignments": [
                    725,
                    727
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 725,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "10114:13:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 741,
                      "src": "10109:18:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 724,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "10109:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 727,
                      "mutability": "mutable",
                      "name": "dataDLGTCLL",
                      "nameLocation": "10142:11:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 741,
                      "src": "10129:24:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 726,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "10129:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 739,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f70547857656928616464726573732c75696e743235362c737472696e672c75696e7432353629",
                            "id": 732,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10239:43:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_7c6385482cc50c34905baf4b5888e8798c5594a0a2bf4d252265bc9209354799",
                              "typeString": "literal_string \"PropTxWei(address,uint256,string,uint256)\""
                            },
                            "value": "PropTxWei(address,uint256,string,uint256)"
                          },
                          {
                            "id": 733,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 713,
                            "src": "10301:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 734,
                            "name": "_amountOutCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 715,
                            "src": "10322:13:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 735,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 717,
                            "src": "10353:12:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 736,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 719,
                            "src": "10383:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_7c6385482cc50c34905baf4b5888e8798c5594a0a2bf4d252265bc9209354799",
                              "typeString": "literal_string \"PropTxWei(address,uint256,string,uint256)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 730,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "10197:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "10197:23:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10197:210:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 728,
                        "name": "CLCGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 993,
                        "src": "10157:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 729,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "10157:26:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10157:260:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10108:309:18"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "10437:250:18",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "10451:22:18",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10468:4:18",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "10462:5:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10462:11:18"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "10455:3:18",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "10486:28:18",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "10498:14:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10498:16:18"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "10490:4:18",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "10542:3:18"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10547:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "10550:4:18"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "10527:14:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10527:28:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10527:28:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10595:49:18",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "10620:3:18"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "10625:4:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "10613:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10613:17:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10613:17:18"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "10579:13:18"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "10571:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10571:23:18"
                        },
                        "nodeType": "YulIf",
                        "src": "10568:76:18"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "10657:20:18",
                        "value": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "10673:3:18"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "10667:5:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10667:10:18"
                        },
                        "variableNames": [
                          {
                            "name": "propId",
                            "nodeType": "YulIdentifier",
                            "src": "10657:6:18"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 722,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "10657:6:18",
                      "valueSize": 1
                    },
                    {
                      "declaration": 725,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "10579:13:18",
                      "valueSize": 1
                    }
                  ],
                  "id": 740,
                  "nodeType": "InlineAssembly",
                  "src": "10428:259:18"
                }
              ]
            },
            "documentation": {
              "id": 711,
              "nodeType": "StructuredDocumentation",
              "src": "9563:334:18",
              "text": "@notice generate a new proposal to transfer ETH in weis\n @dev When execute this proposal, the transfer is made\n @param _to Recipient address\n @param _amountOutCLV Amount to transfer (in wei)\n @param _description About this proposal\n @return propId ID of the new proposal, based on `arrProposals`"
            },
            "functionSelector": "7c638548",
            "id": 742,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropTxWei",
            "nameLocation": "9911:9:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 720,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 713,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "9938:3:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 742,
                  "src": "9930:11:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 712,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9930:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 715,
                  "mutability": "mutable",
                  "name": "_amountOutCLV",
                  "nameLocation": "9959:13:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 742,
                  "src": "9951:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 714,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9951:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 717,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "9996:12:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 742,
                  "src": "9982:26:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 716,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9982:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 719,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "10026:10:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 742,
                  "src": "10018:18:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 718,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10018:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9920:122:18"
            },
            "returnParameters": {
              "id": 723,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 722,
                  "mutability": "mutable",
                  "name": "propId",
                  "nameLocation": "10085:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 742,
                  "src": "10077:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 721,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10077:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10075:18:18"
            },
            "scope": 969,
            "src": "9902:791:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 776,
              "nodeType": "Block",
              "src": "11266:635:18",
              "statements": [
                {
                  "assignments": [
                    759,
                    761
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 759,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "11282:13:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 776,
                      "src": "11277:18:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 758,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "11277:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 761,
                      "mutability": "mutable",
                      "name": "dataDLGTCLL",
                      "nameLocation": "11310:11:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 776,
                      "src": "11297:24:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 760,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "11297:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 774,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f705478455243323028616464726573732c75696e743235362c616464726573732c737472696e672c75696e7432353629",
                            "id": 766,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11407:53:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_de5ab14ee76e872eb390c8f0942b0cbe9e6de8609dea31f21b3c6b5cdfc0a34b",
                              "typeString": "literal_string \"PropTxERC20(address,uint256,address,string,uint256)\""
                            },
                            "value": "PropTxERC20(address,uint256,address,string,uint256)"
                          },
                          {
                            "id": 767,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 745,
                            "src": "11479:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 768,
                            "name": "_amountOutCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 747,
                            "src": "11500:13:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 769,
                            "name": "_tokenOutCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 749,
                            "src": "11531:12:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 770,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 751,
                            "src": "11561:12:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 771,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 753,
                            "src": "11591:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_de5ab14ee76e872eb390c8f0942b0cbe9e6de8609dea31f21b3c6b5cdfc0a34b",
                              "typeString": "literal_string \"PropTxERC20(address,uint256,address,string,uint256)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 764,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "11365:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "11365:23:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11365:250:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 762,
                        "name": "CLCGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 993,
                        "src": "11325:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 763,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "11325:26:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11325:300:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11276:349:18"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "11645:250:18",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "11659:22:18",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11676:4:18",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "11670:5:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11670:11:18"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "11663:3:18",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "11694:28:18",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "11706:14:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11706:16:18"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "11698:4:18",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "11750:3:18"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11755:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "11758:4:18"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "11735:14:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11735:28:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11735:28:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11803:49:18",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "11828:3:18"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "11833:4:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "11821:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11821:17:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11821:17:18"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "11787:13:18"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "11779:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11779:23:18"
                        },
                        "nodeType": "YulIf",
                        "src": "11776:76:18"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "11865:20:18",
                        "value": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "11881:3:18"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "11875:5:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11875:10:18"
                        },
                        "variableNames": [
                          {
                            "name": "propId",
                            "nodeType": "YulIdentifier",
                            "src": "11865:6:18"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 756,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "11865:6:18",
                      "valueSize": 1
                    },
                    {
                      "declaration": 759,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "11787:13:18",
                      "valueSize": 1
                    }
                  ],
                  "id": 775,
                  "nodeType": "InlineAssembly",
                  "src": "11636:259:18"
                }
              ]
            },
            "documentation": {
              "id": 743,
              "nodeType": "StructuredDocumentation",
              "src": "10699:334:18",
              "text": "@notice generate a new proposal to transfer ETH in weis\n @dev When execute this proposal, the transfer is made\n @param _to Recipient address\n @param _amountOutCLV Amount to transfer (in wei)\n @param _description About this proposal\n @return propId ID of the new proposal, based on `arrProposals`"
            },
            "functionSelector": "de5ab14e",
            "id": 777,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropTxERC20",
            "nameLocation": "11047:11:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 754,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 745,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "11076:3:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 777,
                  "src": "11068:11:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 744,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11068:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 747,
                  "mutability": "mutable",
                  "name": "_amountOutCLV",
                  "nameLocation": "11097:13:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 777,
                  "src": "11089:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 746,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11089:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 749,
                  "mutability": "mutable",
                  "name": "_tokenOutCLV",
                  "nameLocation": "11128:12:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 777,
                  "src": "11120:20:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 748,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11120:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 751,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "11164:12:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 777,
                  "src": "11150:26:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 750,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "11150:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 753,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "11194:10:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 777,
                  "src": "11186:18:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 752,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11186:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11058:152:18"
            },
            "returnParameters": {
              "id": 757,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 756,
                  "mutability": "mutable",
                  "name": "propId",
                  "nameLocation": "11253:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 777,
                  "src": "11245:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 755,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11245:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11243:18:18"
            },
            "scope": 969,
            "src": "11038:863:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 805,
              "nodeType": "Block",
              "src": "12445:574:18",
              "statements": [
                {
                  "assignments": [
                    790,
                    792
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 790,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "12461:13:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 805,
                      "src": "12456:18:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 789,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "12456:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 792,
                      "mutability": "mutable",
                      "name": "dataDLGTCLL",
                      "nameLocation": "12489:11:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 805,
                      "src": "12476:24:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 791,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "12476:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 803,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f70476f7652756c65732875696e74382c737472696e672c75696e7432353629",
                            "id": 797,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12586:36:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_70acb761237d5585eadfc2ae41fe8a485128e55ebdae74fa45652b412e62ee83",
                              "typeString": "literal_string \"PropGovRules(uint8,string,uint256)\""
                            },
                            "value": "PropGovRules(uint8,string,uint256)"
                          },
                          {
                            "id": 798,
                            "name": "_newApprovPercentage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 780,
                            "src": "12641:20:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          {
                            "id": 799,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 782,
                            "src": "12679:12:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 800,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 784,
                            "src": "12709:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_70acb761237d5585eadfc2ae41fe8a485128e55ebdae74fa45652b412e62ee83",
                              "typeString": "literal_string \"PropGovRules(uint8,string,uint256)\""
                            },
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 795,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "12544:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "12544:23:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 801,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12544:189:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 793,
                        "name": "CLCGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 993,
                        "src": "12504:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 794,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "12504:26:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12504:239:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12455:288:18"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "12763:250:18",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "12777:22:18",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12794:4:18",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "12788:5:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12788:11:18"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "12781:3:18",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "12812:28:18",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "12824:14:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12824:16:18"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "12816:4:18",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "12868:3:18"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12873:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "12876:4:18"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "12853:14:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12853:28:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12853:28:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12921:49:18",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "12946:3:18"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "12951:4:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "12939:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12939:17:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12939:17:18"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "12905:13:18"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "12897:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12897:23:18"
                        },
                        "nodeType": "YulIf",
                        "src": "12894:76:18"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "12983:20:18",
                        "value": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "12999:3:18"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "12993:5:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12993:10:18"
                        },
                        "variableNames": [
                          {
                            "name": "propId",
                            "nodeType": "YulIdentifier",
                            "src": "12983:6:18"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 787,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "12983:6:18",
                      "valueSize": 1
                    },
                    {
                      "declaration": 790,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "12905:13:18",
                      "valueSize": 1
                    }
                  ],
                  "id": 804,
                  "nodeType": "InlineAssembly",
                  "src": "12754:259:18"
                }
              ]
            },
            "documentation": {
              "id": 778,
              "nodeType": "StructuredDocumentation",
              "src": "11907:350:18",
              "text": "@notice Generate a new proposal for change some governance parameters\n @dev When execute this proposal the new values will be set\n @param _newApprovPercentage The new percentaje for accept or reject a proposal\n @param _description About the new proposal \n @return propId ID of the new proposal, based on `arrProposals`"
            },
            "functionSelector": "70acb761",
            "id": 806,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropGovRules",
            "nameLocation": "12271:12:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 785,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 780,
                  "mutability": "mutable",
                  "name": "_newApprovPercentage",
                  "nameLocation": "12299:20:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 806,
                  "src": "12293:26:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 779,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "12293:5:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 782,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "12343:12:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 806,
                  "src": "12329:26:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 781,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "12329:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 784,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "12373:10:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 806,
                  "src": "12365:18:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 783,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12365:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12283:106:18"
            },
            "returnParameters": {
              "id": 788,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 787,
                  "mutability": "mutable",
                  "name": "propId",
                  "nameLocation": "12432:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 806,
                  "src": "12424:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 786,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12424:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12422:18:18"
            },
            "scope": 969,
            "src": "12262:757:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 831,
              "nodeType": "Block",
              "src": "13465:526:18",
              "statements": [
                {
                  "assignments": [
                    817,
                    819
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 817,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "13481:13:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 831,
                      "src": "13476:18:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 816,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "13476:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 819,
                      "mutability": "mutable",
                      "name": "dataDLGTCLL",
                      "nameLocation": "13509:11:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 831,
                      "src": "13496:24:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 818,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "13496:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 829,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f7052657175657374546f4a6f696e28737472696e672c737472696e6729",
                            "id": 824,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13606:34:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_2c26fb6eb51f8cd6e0bd013cccf1abbf9cdc2c1d3376351bf8ee51aed898c807",
                              "typeString": "literal_string \"PropRequestToJoin(string,string)\""
                            },
                            "value": "PropRequestToJoin(string,string)"
                          },
                          {
                            "id": 825,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 809,
                            "src": "13659:5:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 826,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 811,
                            "src": "13682:12:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_2c26fb6eb51f8cd6e0bd013cccf1abbf9cdc2c1d3376351bf8ee51aed898c807",
                              "typeString": "literal_string \"PropRequestToJoin(string,string)\""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 822,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "13564:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "13564:23:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13564:144:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 820,
                        "name": "CLCGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 993,
                        "src": "13524:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 821,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "13524:26:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13524:194:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13475:243:18"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "13738:247:18",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "13752:22:18",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13769:4:18",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "13763:5:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13763:11:18"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "13756:3:18",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "13787:28:18",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "13799:14:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13799:16:18"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "13791:4:18",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "13843:3:18"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13848:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "13851:4:18"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "13828:14:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13828:28:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13828:28:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13896:49:18",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "13921:3:18"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "13926:4:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "13914:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13914:17:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13914:17:18"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "13880:13:18"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "13872:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13872:23:18"
                        },
                        "nodeType": "YulIf",
                        "src": "13869:76:18"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "13965:3:18"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "13970:4:18"
                            }
                          ],
                          "functionName": {
                            "name": "return",
                            "nodeType": "YulIdentifier",
                            "src": "13958:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13958:17:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13958:17:18"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 817,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "13880:13:18",
                      "valueSize": 1
                    }
                  ],
                  "id": 830,
                  "nodeType": "InlineAssembly",
                  "src": "13729:256:18"
                }
              ]
            },
            "documentation": {
              "id": 807,
              "nodeType": "StructuredDocumentation",
              "src": "13025:289:18",
              "text": "@notice Generate a proposal from a user that want to join to the CLH\n @dev Only avaiable in public CLH\n @param _name Nickname or other user identification\n @param _description About the request\n @return propId ID of the new proposal, based on `arrProposals`"
            },
            "functionSelector": "2c26fb6e",
            "id": 832,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropRequestToJoin",
            "nameLocation": "13328:17:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 812,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 809,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "13369:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 832,
                  "src": "13355:19:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 808,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "13355:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 811,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "13398:12:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 832,
                  "src": "13384:26:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 810,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "13384:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13345:71:18"
            },
            "returnParameters": {
              "id": 815,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 814,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 832,
                  "src": "13451:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 813,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13451:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13449:11:18"
            },
            "scope": 969,
            "src": "13319:672:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 862,
              "nodeType": "Block",
              "src": "14278:551:18",
              "statements": [
                {
                  "assignments": [
                    843,
                    845
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 843,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "14294:13:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 862,
                      "src": "14289:18:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 842,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "14289:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 845,
                      "mutability": "mutable",
                      "name": "dataDLGTCLL",
                      "nameLocation": "14322:11:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 862,
                      "src": "14309:24:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 844,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "14309:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 856,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "41636365707452656a656374496e7669746174696f6e28626f6f6c2c616464726573732c627974657329",
                            "id": 850,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14424:44:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9bcb9abb65d023c5bc87cab65c7cbdda937e3b14041c124e9e6aee745e6fa6dc",
                              "typeString": "literal_string \"AcceptRejectInvitation(bool,address,bytes)\""
                            },
                            "value": "AcceptRejectInvitation(bool,address,bytes)"
                          },
                          {
                            "id": 851,
                            "name": "_acceptance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 835,
                            "src": "14486:11:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 852,
                            "name": "_signerWallet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 837,
                            "src": "14515:13:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 853,
                            "name": "_signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 839,
                            "src": "14546:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9bcb9abb65d023c5bc87cab65c7cbdda937e3b14041c124e9e6aee745e6fa6dc",
                              "typeString": "literal_string \"AcceptRejectInvitation(bool,address,bytes)\""
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 848,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "14383:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 849,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "14383:23:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14383:187:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 846,
                        "name": "CLCMemberManagement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 991,
                        "src": "14337:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 847,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "14337:32:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14337:243:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14288:292:18"
                },
                {
                  "condition": {
                    "id": 858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "14595:14:18",
                    "subExpression": {
                      "id": 857,
                      "name": "successDGTCLL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 843,
                      "src": "14596:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 861,
                  "nodeType": "IfStatement",
                  "src": "14591:232:18",
                  "trueBody": {
                    "id": 860,
                    "nodeType": "Block",
                    "src": "14612:211:18",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "14635:178:18",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "14653:22:18",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14670:4:18",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "14664:5:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14664:11:18"
                              },
                              "variables": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulTypedName",
                                  "src": "14657:3:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "14692:28:18",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "returndatasize",
                                  "nodeType": "YulIdentifier",
                                  "src": "14704:14:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14704:16:18"
                              },
                              "variables": [
                                {
                                  "name": "size",
                                  "nodeType": "YulTypedName",
                                  "src": "14696:4:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "14752:3:18"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14757:1:18",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "14760:4:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "returndatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "14737:14:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14737:28:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14737:28:18"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "14789:3:18"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "14794:4:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "14782:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14782:17:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14782:17:18"
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [],
                        "id": 859,
                        "nodeType": "InlineAssembly",
                        "src": "14626:187:18"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 833,
              "nodeType": "StructuredDocumentation",
              "src": "13997:127:18",
              "text": "@notice For an user that have an invitation pending\n @dev \n @param _acceptance True for accept the invitation"
            },
            "functionSelector": "9bcb9abb",
            "id": 863,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "AcceptRejectInvitation",
            "nameLocation": "14138:22:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 840,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 835,
                  "mutability": "mutable",
                  "name": "_acceptance",
                  "nameLocation": "14175:11:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 863,
                  "src": "14170:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 834,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14170:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 837,
                  "mutability": "mutable",
                  "name": "_signerWallet",
                  "nameLocation": "14204:13:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 863,
                  "src": "14196:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 836,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14196:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 839,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "14240:10:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 863,
                  "src": "14227:23:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 838,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14227:5:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14160:96:18"
            },
            "returnParameters": {
              "id": 841,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14278:0:18"
            },
            "scope": 969,
            "src": "14129:700:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 896,
              "nodeType": "Block",
              "src": "15073:647:18",
              "statements": [
                {
                  "assignments": [
                    879,
                    881
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 879,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "15089:13:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 896,
                      "src": "15084:18:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 878,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "15084:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 881,
                      "mutability": "mutable",
                      "name": "dataDLGTCLL",
                      "nameLocation": "15117:11:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 896,
                      "src": "15104:24:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 880,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "15104:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 894,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f7053776170455243323028616464726573732c616464726573732c75696e743235362c737472696e672c75696e7432353629",
                            "id": 886,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15214:55:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_152de3b98ea86d627e1f008ef402ac90ecf10b8b7150905cf13cb40560733610",
                              "typeString": "literal_string \"PropSwapERC20(address,address,uint256,string,uint256)\""
                            },
                            "value": "PropSwapERC20(address,address,uint256,string,uint256)"
                          },
                          {
                            "id": 887,
                            "name": "_tokenOutCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 865,
                            "src": "15289:12:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 888,
                            "name": "_tokenInCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 867,
                            "src": "15320:11:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 889,
                            "name": "_amountOutCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 869,
                            "src": "15350:13:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 890,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 871,
                            "src": "15382:12:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 891,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 873,
                            "src": "15413:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_152de3b98ea86d627e1f008ef402ac90ecf10b8b7150905cf13cb40560733610",
                              "typeString": "literal_string \"PropSwapERC20(address,address,uint256,string,uint256)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 884,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "15172:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "15172:23:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15172:265:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 882,
                        "name": "CLCGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 993,
                        "src": "15132:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 883,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "15132:26:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15132:315:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15083:364:18"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "15467:247:18",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "15481:22:18",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15498:4:18",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "15492:5:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15492:11:18"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "15485:3:18",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "15516:28:18",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "15528:14:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15528:16:18"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "15520:4:18",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "15572:3:18"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15577:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "15580:4:18"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "15557:14:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15557:28:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15557:28:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15625:49:18",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "15650:3:18"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "15655:4:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "15643:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15643:17:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15643:17:18"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "15609:13:18"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "15601:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15601:23:18"
                        },
                        "nodeType": "YulIf",
                        "src": "15598:76:18"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "15694:3:18"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "15699:4:18"
                            }
                          ],
                          "functionName": {
                            "name": "return",
                            "nodeType": "YulIdentifier",
                            "src": "15687:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15687:17:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15687:17:18"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 879,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "15609:13:18",
                      "valueSize": 1
                    }
                  ],
                  "id": 895,
                  "nodeType": "InlineAssembly",
                  "src": "15458:256:18"
                }
              ]
            },
            "functionSelector": "152de3b9",
            "id": 897,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropSwapERC20",
            "nameLocation": "14844:13:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 874,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 865,
                  "mutability": "mutable",
                  "name": "_tokenOutCLV",
                  "nameLocation": "14875:12:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 897,
                  "src": "14867:20:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 864,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14867:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 867,
                  "mutability": "mutable",
                  "name": "_tokenInCLV",
                  "nameLocation": "14905:11:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 897,
                  "src": "14897:19:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 866,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14897:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 869,
                  "mutability": "mutable",
                  "name": "_amountOutCLV",
                  "nameLocation": "14934:13:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 897,
                  "src": "14926:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 868,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14926:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 871,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "14971:12:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 897,
                  "src": "14957:26:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 870,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14957:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 873,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "15001:10:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 897,
                  "src": "14993:18:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 872,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14993:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14857:160:18"
            },
            "returnParameters": {
              "id": 877,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 876,
                  "mutability": "mutable",
                  "name": "propId",
                  "nameLocation": "15060:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 897,
                  "src": "15052:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 875,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15052:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15050:18:18"
            },
            "scope": 969,
            "src": "14835:885:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 927,
              "nodeType": "Block",
              "src": "15935:609:18",
              "statements": [
                {
                  "assignments": [
                    911,
                    913
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 911,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "15951:13:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 927,
                      "src": "15946:18:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 910,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "15946:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 913,
                      "mutability": "mutable",
                      "name": "dataDLGTCLL",
                      "nameLocation": "15979:11:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 927,
                      "src": "15966:24:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 912,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "15966:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 925,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f7053656c6c455243323028616464726573732c75696e743235362c737472696e672c75696e7432353629",
                            "id": 918,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16076:47:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_04f17a9bb89b1e450e234a08e9c473746a395c39a699313d8ca6797b97b374af",
                              "typeString": "literal_string \"PropSellERC20(address,uint256,string,uint256)\""
                            },
                            "value": "PropSellERC20(address,uint256,string,uint256)"
                          },
                          {
                            "id": 919,
                            "name": "_tokenOutCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 899,
                            "src": "16143:12:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 920,
                            "name": "_amountOutCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 901,
                            "src": "16174:13:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 921,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 903,
                            "src": "16206:12:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 922,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 905,
                            "src": "16237:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_04f17a9bb89b1e450e234a08e9c473746a395c39a699313d8ca6797b97b374af",
                              "typeString": "literal_string \"PropSellERC20(address,uint256,string,uint256)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 916,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "16034:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 917,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "16034:23:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16034:227:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 914,
                        "name": "CLCGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 993,
                        "src": "15994:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 915,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "15994:26:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15994:277:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15945:326:18"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "16291:247:18",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "16305:22:18",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16322:4:18",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "16316:5:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16316:11:18"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "16309:3:18",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "16340:28:18",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "16352:14:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16352:16:18"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "16344:4:18",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "16396:3:18"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16401:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "16404:4:18"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "16381:14:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16381:28:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16381:28:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16449:49:18",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "16474:3:18"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "16479:4:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "16467:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16467:17:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16467:17:18"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "16433:13:18"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "16425:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16425:23:18"
                        },
                        "nodeType": "YulIf",
                        "src": "16422:76:18"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "16518:3:18"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "16523:4:18"
                            }
                          ],
                          "functionName": {
                            "name": "return",
                            "nodeType": "YulIdentifier",
                            "src": "16511:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16511:17:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16511:17:18"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 911,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "16433:13:18",
                      "valueSize": 1
                    }
                  ],
                  "id": 926,
                  "nodeType": "InlineAssembly",
                  "src": "16282:256:18"
                }
              ]
            },
            "functionSelector": "04f17a9b",
            "id": 928,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropSellERC20",
            "nameLocation": "15735:13:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 906,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 899,
                  "mutability": "mutable",
                  "name": "_tokenOutCLV",
                  "nameLocation": "15766:12:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 928,
                  "src": "15758:20:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 898,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15758:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 901,
                  "mutability": "mutable",
                  "name": "_amountOutCLV",
                  "nameLocation": "15796:13:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 928,
                  "src": "15788:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 900,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15788:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 903,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "15833:12:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 928,
                  "src": "15819:26:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 902,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "15819:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 905,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "15863:10:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 928,
                  "src": "15855:18:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 904,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15855:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15748:131:18"
            },
            "returnParameters": {
              "id": 909,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 908,
                  "mutability": "mutable",
                  "name": "propId",
                  "nameLocation": "15922:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 928,
                  "src": "15914:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 907,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15914:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15912:18:18"
            },
            "scope": 969,
            "src": "15726:818:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 958,
              "nodeType": "Block",
              "src": "16757:607:18",
              "statements": [
                {
                  "assignments": [
                    942,
                    944
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 942,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "16773:13:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 958,
                      "src": "16768:18:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 941,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "16768:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 944,
                      "mutability": "mutable",
                      "name": "dataDLGTCLL",
                      "nameLocation": "16801:11:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 958,
                      "src": "16788:24:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 943,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "16788:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 956,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f70427579455243323028616464726573732c75696e743235362c737472696e672c75696e7432353629",
                            "id": 949,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16898:46:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_2266e1bc09a9739eac0cdf93a2f130fcaf0d67ad5f8d0909c155c6843375d27c",
                              "typeString": "literal_string \"PropBuyERC20(address,uint256,string,uint256)\""
                            },
                            "value": "PropBuyERC20(address,uint256,string,uint256)"
                          },
                          {
                            "id": 950,
                            "name": "_tokenInCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 930,
                            "src": "16964:11:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 951,
                            "name": "_amountOutCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 932,
                            "src": "16994:13:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 952,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 934,
                            "src": "17026:12:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 953,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 936,
                            "src": "17057:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_2266e1bc09a9739eac0cdf93a2f130fcaf0d67ad5f8d0909c155c6843375d27c",
                              "typeString": "literal_string \"PropBuyERC20(address,uint256,string,uint256)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 947,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "16856:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "16856:23:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16856:225:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 945,
                        "name": "CLCGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 993,
                        "src": "16816:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 946,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "16816:26:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16816:275:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16767:324:18"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "17111:247:18",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "17125:22:18",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "17142:4:18",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "17136:5:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17136:11:18"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "17129:3:18",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "17160:28:18",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "17172:14:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17172:16:18"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "17164:4:18",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "17216:3:18"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "17221:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "17224:4:18"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "17201:14:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17201:28:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "17201:28:18"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "17269:49:18",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "17294:3:18"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "17299:4:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "17287:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17287:17:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17287:17:18"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "17253:13:18"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "17245:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17245:23:18"
                        },
                        "nodeType": "YulIf",
                        "src": "17242:76:18"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "17338:3:18"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "17343:4:18"
                            }
                          ],
                          "functionName": {
                            "name": "return",
                            "nodeType": "YulIdentifier",
                            "src": "17331:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17331:17:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "17331:17:18"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 942,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "17253:13:18",
                      "valueSize": 1
                    }
                  ],
                  "id": 957,
                  "nodeType": "InlineAssembly",
                  "src": "17102:256:18"
                }
              ]
            },
            "functionSelector": "2266e1bc",
            "id": 959,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropBuyERC20",
            "nameLocation": "16559:12:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 937,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 930,
                  "mutability": "mutable",
                  "name": "_tokenInCLV",
                  "nameLocation": "16589:11:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 959,
                  "src": "16581:19:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 929,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16581:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 932,
                  "mutability": "mutable",
                  "name": "_amountOutCLV",
                  "nameLocation": "16618:13:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 959,
                  "src": "16610:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 931,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16610:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 934,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "16655:12:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 959,
                  "src": "16641:26:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 933,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "16641:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 936,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "16685:10:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 959,
                  "src": "16677:18:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 935,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16677:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16571:130:18"
            },
            "returnParameters": {
              "id": 940,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 939,
                  "mutability": "mutable",
                  "name": "propId",
                  "nameLocation": "16744:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 959,
                  "src": "16736:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 938,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16736:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16734:18:18"
            },
            "scope": 969,
            "src": "16550:814:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 967,
              "nodeType": "Block",
              "src": "17433:41:18",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 964,
                      "name": "arrMembers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1042,
                      "src": "17450:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_strMember_$2014_storage_$dyn_storage",
                        "typeString": "struct strMember storage ref[] storage ref"
                      }
                    },
                    "id": 965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "17450:17:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 963,
                  "id": 966,
                  "nodeType": "Return",
                  "src": "17443:24:18"
                }
              ]
            },
            "functionSelector": "824c88da",
            "id": 968,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetArrMembersLength",
            "nameLocation": "17379:19:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 960,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17398:2:18"
            },
            "returnParameters": {
              "id": 963,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 962,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 968,
                  "src": "17424:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 961,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17424:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17422:11:18"
            },
            "scope": 969,
            "src": "17370:104:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 970,
        "src": "254:17222:18",
        "usedErrors": []
      }
    ],
    "src": "32:17444:18"
  },
  "bytecode": "",
  "bytecodeSha1": "b9e672e42599452b288f0df2550dc88e226bfb44",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "CLHouse",
  "coverageMap": {
    "branches": {
      "18": {
        "CLHouse.AcceptRejectInvitation": {
          "30": [
            14596,
            14609,
            false
          ]
        },
        "CLHouse.ExecProp": {
          "21": [
            3022,
            3035,
            false
          ]
        },
        "CLHouse.VotePropOffChain": {
          "22": [
            6173,
            6193,
            true
          ],
          "23": [
            6242,
            6258,
            true
          ],
          "24": [
            6318,
            6347,
            true
          ],
          "25": [
            6396,
            6437,
            true
          ],
          "26": [
            6488,
            6529,
            true
          ],
          "27": [
            6576,
            6612,
            true
          ],
          "28": [
            6682,
            6732,
            true
          ],
          "29": [
            7000,
            7008,
            false
          ]
        },
        "CLHouse.VoteProposal": {
          "31": [
            4102,
            4115,
            false
          ]
        }
      },
      "19": {}
    },
    "statements": {
      "18": {
        "CLHouse.AcceptRejectInvitation": {
          "18": [
            14591,
            14823
          ]
        },
        "CLHouse.ExecProp": {
          "1": [
            3017,
            3249
          ],
          "2": [
            3259,
            3304
          ]
        },
        "CLHouse.GetArrMembersLength": {
          "0": [
            17443,
            17467
          ]
        },
        "CLHouse.VotePropOffChain": {
          "3": [
            6164,
            6223
          ],
          "4": [
            6233,
            6299
          ],
          "5": [
            6309,
            6377
          ],
          "6": [
            6387,
            6469
          ],
          "7": [
            6479,
            6557
          ],
          "8": [
            6567,
            6663
          ],
          "9": [
            6673,
            6756
          ],
          "10": [
            6767,
            6817
          ],
          "11": [
            6827,
            6887
          ],
          "12": [
            6897,
            6939
          ],
          "13": [
            6950,
            6984
          ],
          "14": [
            7023,
            7061
          ],
          "15": [
            7072,
            7131
          ],
          "16": [
            7163,
            7182
          ],
          "17": [
            7193,
            7204
          ]
        },
        "CLHouse.VoteProposal": {
          "19": [
            4097,
            4329
          ],
          "20": [
            4339,
            4350
          ]
        }
      },
      "19": {}
    }
  },
  "dependencies": [
    "CLStorage"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "254:17222:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15726:818;;;;;;:::i;:::-;;:::i;:::-;;;1872:25:23;;;1860:2;1845:18;15726:818:18;;;;;;;;875:23:19;;;;;-1:-1:-1;;;;;875:23:19;;;;;;-1:-1:-1;;;;;2087:32:23;;;2069:51;;2057:2;2042:18;875:23:19;1908:218:23;615:38:19;;;;;;;;;;;;;;;2303:4:23;2291:17;;;2273:36;;2261:2;2246:18;615:38:19;2131:184:23;1019:48:19;;;;;;:::i;:::-;;;;;;;;;;;;;;14835:885:18;;;;;;:::i;:::-;;:::i;1490:159:19:-;;1557:92;1490:159;;762:37;;;;;;904:27;;;;;-1:-1:-1;;;;;904:27:19;;;16550:814:18;;;;;;:::i;:::-;;:::i;13319:672::-;;;;;;:::i;:::-;;:::i;1323:44:19:-;;;;;;:::i;:::-;;:::i;320:24::-;;;:::i;:::-;;;;;;;:::i;2643:668:18:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;4363:2848::-;;;;;;:::i;:::-;;:::i;:::-;;;6430:14:23;;6423:22;6405:41;;6393:2;6378:18;4363:2848:18;6265:187:23;818:23:19;;;;;-1:-1:-1;;;;;818:23:19;;;12262:757:18;;;;;;:::i;:::-;;:::i;9902:791::-;;;;;;:::i;:::-;;:::i;17370:104::-;17450:10;:17;17370:104;;1373:29:19;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;495:30::-;;;;;;;;;;;;847:22;;;;;-1:-1:-1;;;;;847:22:19;;;937:56;;;;;;:::i;:::-;;;;;;;;;;;;;;14129:700:18;;;;;;:::i;:::-;;:::i;:::-;;531:36:19;;;;;;;;;;;;3644:713:18;;;;;;:::i;:::-;;:::i;573:36:19:-;;;;;;;;;;;;1273:44;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;9059:15:23;;;9041:34;;9106:2;9091:18;;9084:34;;;;9154:15;;;9134:18;;;9127:43;;;;9206:15;;;9201:2;9186:18;;9179:43;8990:3;8975:19;1273:44:19;8772:456:23;1221:46:19;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;1073:67::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;8806:751:18:-;;;;;;:::i;:::-;;:::i;1182:33:19:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::i;460:29::-;;;;;;;;;11038:863:18;;;;;;:::i;:::-;;:::i;672:24:19:-;;;;;;;;;;;;7656:868:18;;;;;;:::i;:::-;;:::i;15726:818::-;15994:13;;16034:227;;15914:14;;;;;;-1:-1:-1;;;;;15994:13:18;;16034:227;;16143:12;;16174:13;;16206:12;;16237:10;;16034:227;;;:::i;:::-;;;;-1:-1:-1;;16034:227:18;;;;;;;;;;;;;;-1:-1:-1;;;;;16034:227:18;-1:-1:-1;;;16034:227:18;;;15994:277;;;16034:227;15994:277;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15945:326;;;;16322:4;16316:11;16352:16;16404:4;16401:1;16396:3;16381:28;16433:13;16422:76;;16479:4;16474:3;16467:17;16422:76;16523:4;16518:3;16511:17;14835:885;15132:13;;15172:265;;15052:14;;;;;;-1:-1:-1;;;;;15132:13:18;;15172:265;;15289:12;;15320:11;;15350:13;;15382:12;;15413:10;;15172:265;;;:::i;:::-;;;;-1:-1:-1;;15172:265:18;;;;;;;;;;;;;;-1:-1:-1;;;;;15172:265:18;-1:-1:-1;;;15172:265:18;;;15132:315;;;15172:265;15132:315;:::i;16550:814::-;16816:13;;16856:225;;16736:14;;;;;;-1:-1:-1;;;;;16816:13:18;;16856:225;;16964:11;;16994:13;;17026:12;;17057:10;;16856:225;;;:::i;:::-;;;;-1:-1:-1;;16856:225:18;;;;;;;;;;;;;;-1:-1:-1;;;;;16856:225:18;-1:-1:-1;;;16856:225:18;;;16816:275;;;16856:225;16816:275;:::i;13319:672::-;13524:13;;13564:144;;13451:7;;;;;;-1:-1:-1;;;;;13524:13:18;;13564:144;;13659:5;;13682:12;;13564:144;;;:::i;:::-;;;;-1:-1:-1;;13564:144:18;;;;;;;;;;;;;;-1:-1:-1;;;;;13564:144:18;-1:-1:-1;;;13564:144:18;;;13524:194;;;13564:144;13524:194;:::i;1323:44:19:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1323:44:19;:::o;320:24::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2643:668:18:-;2856:13;;2896:100;;;;;1872:25:23;;;2736:11:18;;2761:21;;2736:11;;;;-1:-1:-1;;;;;2856:13:18;;;;1845:18:23;;2896:100:18;;;-1:-1:-1;;2896:100:18;;;;;;;;;;;;;;-1:-1:-1;;;;;2896:100:18;-1:-1:-1;;;2896:100:18;;;2856:150;;;2896:100;2856:150;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2807:199;;;;3022:13;3017:232;;3096:4;3090:11;3130:16;3186:4;3183:1;3178:3;3163:28;3220:4;3215:3;3208:17;3017:232;3268:4;3259:45;;;;;;;;;;;;;;;;;;;;;;;2643:668;;;:::o;4363:2848::-;4607:4;4628:15;4646:13;4628:31;;4670:24;4758:140;;;;;;15465:34:23;15453:47;;15530:34;15525:2;15516:12;;15509:56;-1:-1:-1;;;15590:2:23;15581:12;;15574:42;15641:2;15632:12;;15251:399;4758:140:18;;;;-1:-1:-1;;4758:140:18;;;;;;;;;4748:151;;4758:140;4748:151;;;;4720:324;;;15914:25:23;4917:20:18;15955:18:23;;;15948:34;4955:19:18;15998:18:23;;;15991:34;16041:18;;;16034:34;;;5025:4:18;16084:19:23;;;16077:61;15886:19;;4720:324:18;;;;;;;;;;;;4697:357;;;;;;4670:384;;5065:18;5147:137;;;;;;16363:34:23;16351:47;;16428:34;16423:2;16414:12;;16407:56;-1:-1:-1;;;16488:2:23;16479:12;;16472:39;16536:2;16527:12;;16149:396;5147:137:18;;;;;;;;;;;;;5137:148;;;;;;5303:6;5327:7;5352:8;5405:14;5388:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;5378:43;;;;;;5109:326;;;;;;;;;;;17084:25:23;;;-1:-1:-1;;;;;17145:32:23;;;;17140:2;17125:18;;17118:60;17209:2;17194:18;;17187:34;;;;17264:14;17257:22;17252:2;17237:18;;17230:50;17311:3;17296:19;;17289:35;17071:3;17056:19;;16831:499;5109:326:18;;;;;;;;;;;;;5086:359;;;;;;5065:380;;5464:16;5522;5540:10;5493:58;;;;;;;;-1:-1:-1;;;17593:27:23;;17645:1;17636:11;;17629:27;;;;17681:2;17672:12;;17665:28;17718:2;17709:12;;17335:392;5493:58:18;;;;-1:-1:-1;;5493:58:18;;;;;;;;;5483:69;;5493:58;5483:69;;;;6094:14;6111:42;;;;;;;;;17959:25:23;;;18032:4;18020:17;;18000:18;;;17993:45;;;;18054:18;;;18047:34;;;18097:18;;;18090:34;;;5483:69:18;;-1:-1:-1;6094:14:18;6111:42;;17931:19:23;;6111:42:18;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6111:42:18;;-1:-1:-1;;6111:42:18;;;-1:-1:-1;;;;;;;6173:20:18;;6164:59;;;;-1:-1:-1;;;6164:59:18;;18337:2:23;6164:59:18;;;18319:21:23;18376:2;18356:18;;;18349:30;18415:26;18395:18;;;18388:54;18459:18;;6164:59:18;;;;;;;;;6252:6;-1:-1:-1;;;;;6242:16:18;:6;-1:-1:-1;;;;;6242:16:18;;6233:66;;;;-1:-1:-1;;;6233:66:18;;18690:2:23;6233:66:18;;;18672:21:23;18729:2;18709:18;;;18702:30;18768:34;18748:18;;;18741:62;-1:-1:-1;;;18819:18:23;;;18812:33;18862:19;;6233:66:18;18488:399:23;6233:66:18;6328:12;:19;6318:29;;6309:68;;;;-1:-1:-1;;;6309:68:18;;19094:2:23;6309:68:18;;;19076:21:23;19133:2;19113:18;;;19106:30;19172:25;19152:18;;;19145:53;19215:18;;6309:68:18;18892:347:23;6309:68:18;6405:12;6419:7;6405:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:32;;;;;;;;6396:41;6387:82;;;;-1:-1:-1;;;6387:82:18;;19578:2:23;6387:82:18;;;19560:21:23;19617:2;19597:18;;;19590:30;19656:27;19636:18;;;19629:55;19701:18;;6387:82:18;19376:349:23;6387:82:18;6497:12;6511:7;6497:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:32;;;;;;;;6488:41;6479:78;;;;-1:-1:-1;;;6479:78:18;;19932:2:23;6479:78:18;;;19914:21:23;19971:2;19951:18;;;19944:30;-1:-1:-1;;;19990:18:23;;;19983:51;20051:18;;6479:78:18;19730:345:23;6479:78:18;6577:8;:19;6587:7;6577:19;;;;;;;;;;;:29;6598:6;-1:-1:-1;;;;;6577:29:18;-1:-1:-1;;;;;6577:29:18;;;;;;;;;;;;:35;;;;;;;;;;;;6576:36;6567:96;;;;-1:-1:-1;;;6567:96:18;;20282:2:23;6567:96:18;;;20264:21:23;20321:2;20301:18;;;20294:30;20360:34;20340:18;;;20333:62;-1:-1:-1;;;20411:18:23;;;20404:42;20463:19;;6567:96:18;20080:408:23;6567:96:18;6700:12;6714:7;6700:23;;;;;;;;:::i;:::-;;;;;;;;;;;:32;;;6682:15;:50;6673:83;;;;-1:-1:-1;;;6673:83:18;;20695:2:23;6673:83:18;;;20677:21:23;20734:2;20714:18;;;20707:30;-1:-1:-1;;;20753:18:23;;;20746:47;20810:18;;6673:83:18;20493:341:23;6673:83:18;6809:8;6767;:19;6777:7;6767:19;;;;;;;;;;;:29;6788:6;-1:-1:-1;;;;;6767:29:18;-1:-1:-1;;;;;6767:29:18;;;;;;;;;;;;:39;;;:50;;;;;;;;;;;;;;;;;;6873:14;6827:8;:19;6837:7;6827:19;;;;;;;;;;;:29;6848:6;-1:-1:-1;;;;;6827:29:18;-1:-1:-1;;;;;6827:29:18;;;;;;;;;;;;:43;;:60;;;;;;;;;;;;:::i;:::-;;6935:4;6897:8;:19;6907:7;6897:19;;;;;;;;;;;:29;6918:6;-1:-1:-1;;;;;6897:29:18;-1:-1:-1;;;;;6897:29:18;;;;;;;;;;;;:35;;;:42;;;;;;;;;;;;;;;;;;6950:12;6964:7;6950:23;;;;;;;;:::i;:::-;;;;;;;;:32;:23;;;;;:32;:34;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;7000:8;6995:66;;7023:12;7037:7;7023:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:36;;:38;;;;;;;;:36;:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;6995:66;7077:54;7087:7;7097:8;7107:6;7115:14;7077:54;;;;;;;;;:::i;:::-;;;;;;;;7163:19;7173:7;7163:8;:19::i;:::-;-1:-1:-1;7200:4:18;;4363:2848;-1:-1:-1;;;;;;;;;;;;;;4363:2848:18:o;12262:757::-;12504:13;;12544:189;;12424:14;;;;;;-1:-1:-1;;;;;12504:13:18;;12544:189;;12641:20;;12679:12;;12709:10;;12544:189;;;:::i;:::-;;;;-1:-1:-1;;12544:189:18;;;;;;;;;;;;;;-1:-1:-1;;;;;12544:189:18;-1:-1:-1;;;12544:189:18;;;12504:239;;;12544:189;12504:239;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12455:288;;;;12794:4;12788:11;12824:16;12876:4;12873:1;12868:3;12853:28;12905:13;12894:76;;12951:4;12946:3;12939:17;12894:76;-1:-1:-1;12993:10:18;;12262:757;-1:-1:-1;;;;;;12262:757:18:o;9902:791::-;10157:13;;10197:210;;10077:14;;;;;;-1:-1:-1;;;;;10157:13:18;;10197:210;;10301:3;;10322:13;;10353:12;;10383:10;;10197:210;;;:::i;:::-;;;;-1:-1:-1;;10197:210:18;;;;;;;;;;;;;;-1:-1:-1;;;;;10197:210:18;-1:-1:-1;;;10197:210:18;;;10157:260;;;10197:210;10157:260;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10108:309;;;;10468:4;10462:11;10498:16;10550:4;10547:1;10542:3;10527:28;10579:13;10568:76;;10625:4;10620:3;10613:17;10568:76;-1:-1:-1;10667:10:18;;9902:791;-1:-1:-1;;;;;;;9902:791:18:o;1373:29:19:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1373:29:19;;;;-1:-1:-1;1373:29:19;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1373:29:19;;;;;;;;;;;;;;;;;-1:-1:-1;1373:29:19;;;;;;:::o;14129:700:18:-;14289:18;14309:24;14337:19;;;;;;;;;-1:-1:-1;;;;;14337:19:18;-1:-1:-1;;;;;14337:32:18;14486:11;14515:13;14546:10;14383:187;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;14383:187:18;;;;;;;;;;;;;;-1:-1:-1;;;;;14383:187:18;-1:-1:-1;;;14383:187:18;;;14337:243;;;14383:187;14337:243;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14288:292;;;;14596:13;14591:232;;14670:4;14664:11;14704:16;14760:4;14757:1;14752:3;14737:28;14794:4;14789:3;14782:17;14591:232;14278:551;;14129:700;;;:::o;3644:713::-;3860:13;;3900:176;;3790:4;;;;;;-1:-1:-1;;;;;3860:13:18;;3900:176;;3997:7;;4022:8;;4048:14;;3900:176;;;:::i;:::-;;;;-1:-1:-1;;3900:176:18;;;;;;;;;;;;;;-1:-1:-1;;;;;3900:176:18;-1:-1:-1;;;3900:176:18;;;3860:226;;;3900:176;3860:226;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3811:275;;;;4102:13;4097:232;;4176:4;4170:11;4210:16;4266:4;4263:1;4258:3;4243:28;4300:4;4295:3;4288:17;4097:232;-1:-1:-1;4346:4:18;;3644:713;-1:-1:-1;;;;;3644:713:18:o;1273:44:19:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1273:44:19;;;;-1:-1:-1;1273:44:19;;;;;;;:::o;1221:46::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1221:46:19;;;;-1:-1:-1;1221:46:19;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1221:46:19;;;;;;;-1:-1:-1;;1221:46:19;;;:::o;1073:67::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8806:751:18:-;9045:13;;9085:186;;8965:14;;;;;;-1:-1:-1;;;;;9045:13:18;;9085:186;;9188:11;;9217:12;;9247:10;;9085:186;;;:::i;:::-;;;;-1:-1:-1;;9085:186:18;;;;;;;;;;;;;;-1:-1:-1;;;;;9085:186:18;-1:-1:-1;;;9085:186:18;;;9045:236;;;9085:186;9045:236;:::i;1182:33:19:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1182:33:19;;;-1:-1:-1;;;;1182:33:19;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1182:33:19;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1182:33:19;;;;;;-1:-1:-1;1182:33:19;;;;;;;;;;;;:::o;11038:863:18:-;11325:13;;11365:250;;11245:14;;;;;;-1:-1:-1;;;;;11325:13:18;;11365:250;;11479:3;;11500:13;;11531:12;;11561;;11591:10;;11365:250;;;:::i;:::-;;;;-1:-1:-1;;11365:250:18;;;;;;;;;;;;;;-1:-1:-1;;;;;11365:250:18;-1:-1:-1;;;11365:250:18;;;11325:300;;;11365:250;11325:300;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11276:349;;;;11676:4;11670:11;11706:16;11758:4;11755:1;11750:3;11735:28;11787:13;11776:76;;11833:4;11828:3;11821:17;11776:76;-1:-1:-1;11875:10:18;;11038:863;-1:-1:-1;;;;;;;;11038:863:18:o;7656:868::-;7949:13;;7989:249;;7869:14;;;;;;-1:-1:-1;;;;;7949:13:18;;7989:249;;8104:11;;8133:5;;8156:12;;8186:10;;8214;;7989:249;;;:::i;:::-;;;;-1:-1:-1;;7989:249:18;;;;;;;;;;;;;;-1:-1:-1;;;;;7989:249:18;-1:-1:-1;;;7989:249:18;;;7949:299;;;7989:249;7949:299;:::i;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:173:23;82:20;;-1:-1:-1;;;;;131:31:23;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:127::-;253:10;248:3;244:20;241:1;234:31;284:4;281:1;274:15;308:4;305:1;298:15;324:632;389:5;419:18;460:2;452:6;449:14;446:40;;;466:18;;:::i;:::-;541:2;535:9;509:2;595:15;;-1:-1:-1;;591:24:23;;;617:2;587:33;583:42;571:55;;;641:18;;;661:22;;;638:46;635:72;;;687:18;;:::i;:::-;727:10;723:2;716:22;756:6;747:15;;786:6;778;771:22;826:3;817:6;812:3;808:16;805:25;802:45;;;843:1;840;833:12;802:45;893:6;888:3;881:4;873:6;869:17;856:44;948:1;941:4;932:6;924;920:19;916:30;909:41;;;;324:632;;;;;:::o;961:222::-;1004:5;1057:3;1050:4;1042:6;1038:17;1034:27;1024:55;;1075:1;1072;1065:12;1024:55;1097:80;1173:3;1164:6;1151:20;1144:4;1136:6;1132:17;1097:80;:::i;:::-;1088:89;961:222;-1:-1:-1;;;961:222:23:o;1188:533::-;1284:6;1292;1300;1308;1361:3;1349:9;1340:7;1336:23;1332:33;1329:53;;;1378:1;1375;1368:12;1329:53;1401:29;1420:9;1401:29;:::i;:::-;1391:39;;1477:2;1466:9;1462:18;1449:32;1439:42;;1532:2;1521:9;1517:18;1504:32;1559:18;1551:6;1548:30;1545:50;;;1591:1;1588;1581:12;1545:50;1614;1656:7;1647:6;1636:9;1632:22;1614:50;:::i;:::-;1188:533;;;;-1:-1:-1;1604:60:23;;1711:2;1696:18;1683:32;;-1:-1:-1;;;1188:533:23:o;2320:186::-;2379:6;2432:2;2420:9;2411:7;2407:23;2403:32;2400:52;;;2448:1;2445;2438:12;2400:52;2471:29;2490:9;2471:29;:::i;2511:608::-;2616:6;2624;2632;2640;2648;2701:3;2689:9;2680:7;2676:23;2672:33;2669:53;;;2718:1;2715;2708:12;2669:53;2741:29;2760:9;2741:29;:::i;:::-;2731:39;;2789:38;2823:2;2812:9;2808:18;2789:38;:::i;:::-;2779:48;;2874:2;2863:9;2859:18;2846:32;2836:42;;2929:2;2918:9;2914:18;2901:32;2956:18;2948:6;2945:30;2942:50;;;2988:1;2985;2978:12;2942:50;3011;3053:7;3044:6;3033:9;3029:22;3011:50;:::i;:::-;2511:608;;;;-1:-1:-1;2511:608:23;;3108:3;3093:19;3080:33;;2511:608;-1:-1:-1;;;2511:608:23:o;3306:543::-;3394:6;3402;3455:2;3443:9;3434:7;3430:23;3426:32;3423:52;;;3471:1;3468;3461:12;3423:52;3511:9;3498:23;3540:18;3581:2;3573:6;3570:14;3567:34;;;3597:1;3594;3587:12;3567:34;3620:50;3662:7;3653:6;3642:9;3638:22;3620:50;:::i;:::-;3610:60;;3723:2;3712:9;3708:18;3695:32;3679:48;;3752:2;3742:8;3739:16;3736:36;;;3768:1;3765;3758:12;3736:36;;3791:52;3835:7;3824:8;3813:9;3809:24;3791:52;:::i;:::-;3781:62;;;3306:543;;;;;:::o;3854:180::-;3913:6;3966:2;3954:9;3945:7;3941:23;3937:32;3934:52;;;3982:1;3979;3972:12;3934:52;-1:-1:-1;4005:23:23;;3854:180;-1:-1:-1;3854:180:23:o;4039:258::-;4111:1;4121:113;4135:6;4132:1;4129:13;4121:113;;;4211:11;;;4205:18;4192:11;;;4185:39;4157:2;4150:10;4121:113;;;4252:6;4249:1;4246:13;4243:48;;;4287:1;4278:6;4273:3;4269:16;4262:27;4243:48;;4039:258;;;:::o;4302:::-;4344:3;4382:5;4376:12;4409:6;4404:3;4397:19;4425:63;4481:6;4474:4;4469:3;4465:14;4458:4;4451:5;4447:16;4425:63;:::i;:::-;4542:2;4521:15;-1:-1:-1;;4517:29:23;4508:39;;;;4549:4;4504:50;;4302:258;-1:-1:-1;;4302:258:23:o;4565:220::-;4714:2;4703:9;4696:21;4677:4;4734:45;4775:2;4764:9;4760:18;4752:6;4734:45;:::i;4886:301::-;5071:6;5064:14;5057:22;5046:9;5039:41;5116:2;5111;5100:9;5096:18;5089:30;5020:4;5136:45;5177:2;5166:9;5162:18;5154:6;5136:45;:::i;:::-;5128:53;4886:301;-1:-1:-1;;;;4886:301:23:o;5192:160::-;5257:20;;5313:13;;5306:21;5296:32;;5286:60;;5342:1;5339;5332:12;5357:156;5423:20;;5483:4;5472:16;;5462:27;;5452:55;;5503:1;5500;5493:12;5518:742;5636:6;5644;5652;5660;5668;5676;5684;5737:3;5725:9;5716:7;5712:23;5708:33;5705:53;;;5754:1;5751;5744:12;5705:53;5777:29;5796:9;5777:29;:::i;:::-;5767:39;;5853:2;5842:9;5838:18;5825:32;5815:42;;5876:35;5907:2;5896:9;5892:18;5876:35;:::i;:::-;5866:45;;5962:2;5951:9;5947:18;5934:32;5989:18;5981:6;5978:30;5975:50;;;6021:1;6018;6011:12;5975:50;6044;6086:7;6077:6;6066:9;6062:22;6044:50;:::i;:::-;6034:60;;;6141:3;6130:9;6126:19;6113:33;6103:43;;6193:3;6182:9;6178:19;6165:33;6155:43;;6217:37;6249:3;6238:9;6234:19;6217:37;:::i;:::-;6207:47;;5518:742;;;;;;;;;;:::o;6689:460::-;6774:6;6782;6790;6843:2;6831:9;6822:7;6818:23;6814:32;6811:52;;;6859:1;6856;6849:12;6811:52;6882:27;6899:9;6882:27;:::i;:::-;6872:37;;6960:2;6949:9;6945:18;6932:32;6987:18;6979:6;6976:30;6973:50;;;7019:1;7016;7009:12;6973:50;7042;7084:7;7075:6;7064:9;7060:22;7042:50;:::i;:::-;7032:60;;;7139:2;7128:9;7124:18;7111:32;7101:42;;6689:460;;;;;:::o;7154:553::-;-1:-1:-1;;;;;7403:32:23;;7385:51;;7423:3;7467:2;7452:18;;7445:31;;;-1:-1:-1;;7493:46:23;;7519:19;;7511:6;7493:46;:::i;:::-;7570:2;7555:18;;7548:34;;;;-1:-1:-1;7625:14:23;;7618:22;7613:2;7598:18;;7591:50;7685:14;7678:22;7672:3;7657:19;;;7650:51;7485:54;7154:553;-1:-1:-1;;7154:553:23:o;7712:592::-;7795:6;7803;7811;7864:2;7852:9;7843:7;7839:23;7835:32;7832:52;;;7880:1;7877;7870:12;7832:52;7903:26;7919:9;7903:26;:::i;:::-;7893:36;;7948:38;7982:2;7971:9;7967:18;7948:38;:::i;:::-;7938:48;;8037:2;8026:9;8022:18;8009:32;8064:18;8056:6;8053:30;8050:50;;;8096:1;8093;8086:12;8050:50;8119:22;;8172:4;8164:13;;8160:27;-1:-1:-1;8150:55:23;;8201:1;8198;8191:12;8150:55;8224:74;8290:7;8285:2;8272:16;8267:2;8263;8259:11;8224:74;:::i;:::-;8214:84;;;7712:592;;;;;:::o;8309:458::-;8393:6;8401;8409;8462:2;8450:9;8441:7;8437:23;8433:32;8430:52;;;8478:1;8475;8468:12;8430:52;8514:9;8501:23;8491:33;;8543:35;8574:2;8563:9;8559:18;8543:35;:::i;:::-;8533:45;;8629:2;8618:9;8614:18;8601:32;8656:18;8648:6;8645:30;8642:50;;;8688:1;8685;8678:12;8642:50;8711;8753:7;8744:6;8733:9;8729:22;8711:50;:::i;9233:398::-;-1:-1:-1;;;;;9432:32:23;;9414:51;;9501:2;9496;9481:18;;9474:30;;;-1:-1:-1;;9521:45:23;;9547:18;;9539:6;9521:45;:::i;:::-;9513:53;;9616:6;9609:14;9602:22;9597:2;9586:9;9582:18;9575:50;9233:398;;;;;;:::o;9636:254::-;9704:6;9712;9765:2;9753:9;9744:7;9740:23;9736:32;9733:52;;;9781:1;9778;9771:12;9733:52;9817:9;9804:23;9794:33;;9846:38;9880:2;9869:9;9865:18;9846:38;:::i;:::-;9836:48;;9636:254;;;;;:::o;9895:382::-;10102:6;10095:14;10088:22;10077:9;10070:41;10161:6;10154:14;10147:22;10142:2;10131:9;10127:18;10120:50;10206:2;10201;10190:9;10186:18;10179:30;10051:4;10226:45;10267:2;10256:9;10252:18;10244:6;10226:45;:::i;:::-;10218:53;9895:382;-1:-1:-1;;;;;9895:382:23:o;10282:464::-;10369:6;10377;10385;10438:2;10426:9;10417:7;10413:23;10409:32;10406:52;;;10454:1;10451;10444:12;10406:52;10477:29;10496:9;10477:29;:::i;10751:1036::-;-1:-1:-1;;;;;11141:32:23;;11123:51;;11082:4;11111:3;11204:1;11193:13;;11183:144;;11249:10;11244:3;11240:20;11237:1;11230:31;11284:4;11281:1;11274:15;11312:4;11309:1;11302:15;11183:144;11363:6;11358:2;11347:9;11343:18;11336:34;11406:2;11401;11390:9;11386:18;11379:30;11426:45;11467:2;11456:9;11452:18;11444:6;11426:45;:::i;:::-;11418:53;;;11507:6;11502:2;11491:9;11487:18;11480:34;11563:4;11555:6;11551:17;11545:3;11534:9;11530:19;11523:46;11618:4;11610:6;11606:17;11600:3;11589:9;11585:19;11578:46;11675:6;11668:14;11661:22;11655:3;11644:9;11640:19;11633:51;11693:44;11732:3;11721:9;11717:19;11709:6;4860:13;4853:21;4841:34;;4790:91;11693:44;11774:6;11768:3;11757:9;11753:19;11746:35;10751:1036;;;;;;;;;;;;:::o;11792:608::-;11897:6;11905;11913;11921;11929;11982:3;11970:9;11961:7;11957:23;11953:33;11950:53;;;11999:1;11996;11989:12;11950:53;12022:29;12041:9;12022:29;:::i;:::-;12012:39;;12098:2;12087:9;12083:18;12070:32;12060:42;;12121:38;12155:2;12144:9;12140:18;12121:38;:::i;:::-;12111:48;;12210:2;12199:9;12195:18;12182:32;12237:18;12229:6;12226:30;12223:50;;;12269:1;12266;12259:12;12405:755;12517:6;12525;12533;12541;12549;12602:3;12590:9;12581:7;12577:23;12573:33;12570:53;;;12619:1;12616;12609:12;12570:53;12642:29;12661:9;12642:29;:::i;:::-;12632:39;;12722:2;12711:9;12707:18;12694:32;12745:18;12786:2;12778:6;12775:14;12772:34;;;12802:1;12799;12792:12;12772:34;12825:50;12867:7;12858:6;12847:9;12843:22;12825:50;:::i;:::-;12815:60;;12928:2;12917:9;12913:18;12900:32;12884:48;;12957:2;12947:8;12944:16;12941:36;;;12973:1;12970;12963:12;12941:36;;12996:52;13040:7;13029:8;13018:9;13014:24;12996:52;:::i;:::-;12986:62;;;13067:35;13098:2;13087:9;13083:18;13067:35;:::i;:::-;12405:755;;;;-1:-1:-1;12405:755:23;;13149:3;13134:19;13121:33;;12405:755;-1:-1:-1;;12405:755:23:o;13165:461::-;13427:1;13423;13418:3;13414:11;13410:19;13402:6;13398:32;13387:9;13380:51;13467:6;13462:2;13451:9;13447:18;13440:34;13510:3;13505:2;13494:9;13490:18;13483:31;13361:4;13531:46;13572:3;13561:9;13557:19;13549:6;13531:46;:::i;:::-;13523:54;;13613:6;13608:2;13597:9;13593:18;13586:34;13165:461;;;;;;;:::o;13631:274::-;13760:3;13798:6;13792:13;13814:53;13860:6;13855:3;13848:4;13840:6;13836:17;13814:53;:::i;:::-;13883:16;;;;;13631:274;-1:-1:-1;;13631:274:23:o;13910:563::-;-1:-1:-1;;;;;14209:15:23;;;14191:34;;14261:15;;14256:2;14241:18;;14234:43;14308:2;14293:18;;14286:34;;;14171:3;14351:2;14336:18;;14329:31;;;14134:4;;14377:46;;14403:19;;14395:6;14377:46;:::i;:::-;14369:54;;14460:6;14454:3;14443:9;14439:19;14432:35;13910:563;;;;;;;;:::o;14478:383::-;14675:2;14664:9;14657:21;14638:4;14701:45;14742:2;14731:9;14727:18;14719:6;14701:45;:::i;:::-;14794:9;14786:6;14782:22;14777:2;14766:9;14762:18;14755:50;14822:33;14848:6;14840;14822:33;:::i;14866:380::-;14945:1;14941:12;;;;14988;;;15009:61;;15063:4;15055:6;15051:17;15041:27;;15009:61;15116:2;15108:6;15105:14;15085:18;15082:38;15079:161;;;15162:10;15157:3;15153:20;15150:1;15143:31;15197:4;15194:1;15187:15;15225:4;15222:1;15215:15;15079:161;;14866:380;;;:::o;19244:127::-;19305:10;19300:3;19296:20;19293:1;19286:31;19336:4;19333:1;19326:15;19360:4;19357:1;19350:15;20839:272;20876:3;20920:4;20913:5;20909:16;20949:4;20940:7;20937:17;20934:140;;;20996:10;20991:3;20987:20;20984:1;20977:31;21031:4;21028:1;21021:15;21059:4;21056:1;21049:15;20934:140;21103:1;21090:15;;20839:272;-1:-1:-1;;20839:272:23:o;21116:471::-;21325:25;;;21393:14;;21386:22;21381:2;21366:18;;21359:50;-1:-1:-1;;;;;21445:32:23;;21440:2;21425:18;;21418:60;21514:3;21509:2;21494:18;;21487:31;;;-1:-1:-1;;21535:46:23;;21561:19;;21553:6;21535:46;:::i;:::-;21527:54;21116:471;-1:-1:-1;;;;;;21116:471:23:o;21592:369::-;21805:4;21797:6;21793:17;21782:9;21775:36;21847:2;21842;21831:9;21827:18;21820:30;21756:4;21867:45;21908:2;21897:9;21893:18;21885:6;21867:45;:::i;:::-;21859:53;;21948:6;21943:2;21932:9;21928:18;21921:34;21592:369;;;;;;:::o;21966:396::-;22170:14;;22163:22;22145:41;;-1:-1:-1;;;;;22222:32:23;;22217:2;22202:18;;22195:60;22291:2;22286;22271:18;;22264:30;;;-1:-1:-1;;22311:45:23;;22337:18;;22329:6;22311:45;:::i;22367:372::-;22566:6;22555:9;22548:25;22623:6;22616:14;22609:22;22604:2;22593:9;22589:18;22582:50;22668:2;22663;22652:9;22648:18;22641:30;22529:4;22688:45;22729:2;22718:9;22714:18;22706:6;22688:45;:::i;22744:388::-;-1:-1:-1;;;;;22949:32:23;;22931:51;;23018:2;23013;22998:18;;22991:30;;;-1:-1:-1;;23038:45:23;;23064:18;;23056:6;23038:45;:::i;23137:563::-;-1:-1:-1;;;;;23436:15:23;;;23418:34;;23483:2;23468:18;;23461:34;;;23531:15;;23526:2;23511:18;;23504:43;23398:3;23578:2;23563:18;;23556:31;;;23361:4;;23604:46;;23630:19;;23622:6;23604:46;:::i;23705:635::-;-1:-1:-1;;;;;23980:32:23;;23962:51;;24000:3;24044:2;24029:18;;24022:31;;;-1:-1:-1;;24076:46:23;;24102:19;;24094:6;24076:46;:::i;:::-;24170:9;24162:6;24158:22;24153:2;24142:9;24138:18;24131:50;24198:33;24224:6;24216;24198:33;:::i;:::-;24274:14;;24267:22;24262:2;24247:18;;24240:50;-1:-1:-1;;24321:3:23;24306:19;24299:35;24190:41;23705:635;-1:-1:-1;;;23705:635:23:o",
  "language": "Solidity",
  "natspec": {
    "author": "Leonardo Urrego",
    "events": {
      "evtProposal(uint8,uint256,uint8,string)": {
        "notice": "### Contract events ###"
      }
    },
    "kind": "dev",
    "methods": {
      "AcceptRejectInvitation(bool,address,bytes)": {
        "notice": "For an user that have an invitation pending",
        "params": {
          "_acceptance": "True for accept the invitation"
        }
      },
      "ExecProp(uint256)": {
        "details": "Normally is called internally after each vote",
        "notice": "Execute (or reject) a proposal computing the votes and the governance model",
        "params": {
          "_propId": "ID of the proposal, based on `arrProposals`"
        },
        "returns": {
          "message": "result of the transaction",
          "status": "True if the proposal can be execute, false in other cases"
        }
      },
      "HOUSE_NAME()": {
        "notice": "### CLH Public Variables ###"
      },
      "PropGovRules(uint8,string,uint256)": {
        "details": "When execute this proposal the new values will be set",
        "notice": "Generate a new proposal for change some governance parameters",
        "params": {
          "_description": "About the new proposal ",
          "_newApprovPercentage": "The new percentaje for accept or reject a proposal"
        },
        "returns": {
          "propId": "ID of the new proposal, based on `arrProposals`"
        }
      },
      "PropInviteMember(address,string,string,bool,uint256)": {
        "details": "the execution of this proposal only create an invitation ",
        "notice": "Generate a new proposal to invite a new member",
        "params": {
          "_description": "A text for the proposal",
          "_isManager": "True if is for a manager member",
          "_name": "Can be the nickname or other reference to the User",
          "_walletAddr": "Address of the new user"
        },
        "returns": {
          "propId": "ID of the new proposal, based on `arrProposals`"
        }
      },
      "PropRemoveMember(address,string,uint256)": {
        "details": "The member can be a managaer",
        "notice": "Generate a new proposal for remove a member",
        "params": {
          "_description": "About the proposal",
          "_walletAddr": "member Address to be removed"
        },
        "returns": {
          "propId": "ID of the new proposal, based on `arrProposals`"
        }
      },
      "PropRequestToJoin(string,string)": {
        "details": "Only avaiable in public CLH",
        "notice": "Generate a proposal from a user that want to join to the CLH",
        "params": {
          "_description": "About the request",
          "_name": "Nickname or other user identification"
        },
        "returns": {
          "_0": "propId ID of the new proposal, based on `arrProposals`"
        }
      },
      "PropTxERC20(address,uint256,address,string,uint256)": {
        "details": "When execute this proposal, the transfer is made",
        "notice": "generate a new proposal to transfer ETH in weis",
        "params": {
          "_amountOutCLV": "Amount to transfer (in wei)",
          "_description": "About this proposal",
          "_to": "Recipient address"
        },
        "returns": {
          "propId": "ID of the new proposal, based on `arrProposals`"
        }
      },
      "PropTxWei(address,uint256,string,uint256)": {
        "details": "When execute this proposal, the transfer is made",
        "notice": "generate a new proposal to transfer ETH in weis",
        "params": {
          "_amountOutCLV": "Amount to transfer (in wei)",
          "_description": "About this proposal",
          "_to": "Recipient address"
        },
        "returns": {
          "propId": "ID of the new proposal, based on `arrProposals`"
        }
      },
      "VoteProposal(uint256,bool,string)": {
        "details": "After vote the proposal automatically try to be executed",
        "notice": "Used to vote a proposal",
        "params": {
          "_justification": "About your vote",
          "_propId": "ID of the proposal, based on `arrProposals`",
          "_support": "True for accept, false to reject"
        },
        "returns": {
          "_0": "true is the vote can be stored"
        }
      },
      "__OFFCHAINVOTE_STRUCT_TYPEHASH__()": {
        "notice": "The EIP-712 typehash for the offChainVote struct used by the CLH"
      },
      "constructor": {
        "details": "Some parameters can be ignored depending on the governance model",
        "notice": "Create a new CLH",
        "params": {
          "_ManagerWallets": "Whitelist of address for invitate as managers",
          "_gov": "keccak256 hash of the governance model, see the __GOV_* constans",
          "_govRuleApprovPercentage": "Percentage for approval o reject proposal based on `numManagerMembers`",
          "_govRuleMaxActiveMembers": "Max of all members (including managers)",
          "_govRuleMaxManagerMembers": "Max of manager member that CLH can accept (only for COMMITTEE )",
          "_houseName": "Name given by the owner",
          "_housePrivate": "If is set to 1, the CLH is set to private",
          "_owner": "The address of the deployed wallet"
        }
      }
    },
    "notice": "This contract for test only the most basic interactions",
    "title": "Contract to implement and test the basic fuctions of CLHouses",
    "version": 1
  },
  "offset": [
    254,
    17476
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x211 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x824C88DA GT PUSH2 0x125 JUMPI DUP1 PUSH4 0xBAA4D5E9 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xCB85669C GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xCB85669C EQ PUSH2 0x52C JUMPI DUP1 PUSH4 0xDA9BCA21 EQ PUSH2 0x554 JUMPI DUP1 PUSH4 0xDE5AB14E EQ PUSH2 0x561 JUMPI DUP1 PUSH4 0xF00D6274 EQ PUSH2 0x574 JUMPI DUP1 PUSH4 0xFE6EADE6 EQ PUSH2 0x58A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBAA4D5E9 EQ PUSH2 0x48F JUMPI DUP1 PUSH4 0xBB3A9065 EQ PUSH2 0x4D5 JUMPI DUP1 PUSH4 0xC347D2FD EQ PUSH2 0x4F7 JUMPI DUP1 PUSH4 0xC4CAEB63 EQ PUSH2 0x519 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x99DB7FB3 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x99DB7FB3 EQ PUSH2 0x420 JUMPI DUP1 PUSH4 0x9BCB9ABB EQ PUSH2 0x440 JUMPI DUP1 PUSH4 0x9C630A88 EQ PUSH2 0x455 JUMPI DUP1 PUSH4 0xA5AC0F31 EQ PUSH2 0x468 JUMPI DUP1 PUSH4 0xAB44997B EQ PUSH2 0x47B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x824C88DA EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0x8532CBF7 EQ PUSH2 0x3D7 JUMPI DUP1 PUSH4 0x8668EAFC EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0x9360BFAD EQ PUSH2 0x40D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2266E1BC GT PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x5F3D99B3 GT PUSH2 0x177 JUMPI DUP1 PUSH4 0x5F3D99B3 EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0x61461E2F EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0x6C2F34E7 EQ PUSH2 0x396 JUMPI DUP1 PUSH4 0x70ACB761 EQ PUSH2 0x3A9 JUMPI DUP1 PUSH4 0x7C638548 EQ PUSH2 0x3BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2266E1BC EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0x2C26FB6E EQ PUSH2 0x317 JUMPI DUP1 PUSH4 0x3A70693D EQ PUSH2 0x32A JUMPI DUP1 PUSH4 0x59CA2D03 EQ PUSH2 0x33D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x152DE3B9 GT PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x152DE3B9 EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0x16E58A2F EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x1D5FD3CA EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0x1F50DD27 EQ PUSH2 0x2F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4F17A9B EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x52F9B0A EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x5FE6663 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x9C57DF7 EQ PUSH2 0x28E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x229 PUSH2 0x224 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A8C JUMP JUMPDEST PUSH2 0x59D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x24F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x233 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x27C SWAP1 PUSH5 0x100000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x233 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x29C CALLDATASIZE PUSH1 0x4 PUSH2 0x1AEB JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x2BC CALLDATASIZE PUSH1 0x4 PUSH2 0x1B06 JUMP JUMPDEST PUSH2 0x658 JUMP JUMPDEST PUSH2 0x229 PUSH32 0x29DB90F499FC17D858ADF930FEC9986F376F0BA9B76D35B25F1DB7AFB7F4B60C DUP2 JUMP JUMPDEST PUSH2 0x229 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x24F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x312 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A8C JUMP JUMPDEST PUSH2 0x6BA JUMP JUMPDEST PUSH2 0x229 PUSH2 0x325 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B76 JUMP JUMPDEST PUSH2 0x71A JUMP JUMPDEST PUSH2 0x27C PUSH2 0x338 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BDA JUMP JUMPDEST PUSH2 0x776 JUMP JUMPDEST PUSH2 0x345 PUSH2 0x79A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x233 SWAP2 SWAP1 PUSH2 0x1C4F JUMP JUMPDEST PUSH2 0x365 PUSH2 0x360 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BDA JUMP JUMPDEST PUSH2 0x828 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x233 SWAP3 SWAP2 SWAP1 PUSH2 0x1C62 JUMP JUMPDEST PUSH2 0x386 PUSH2 0x381 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CA6 JUMP JUMPDEST PUSH2 0x91D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x233 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x24F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x3B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D32 JUMP JUMPDEST PUSH2 0x10E3 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x3CA CALLDATASIZE PUSH1 0x4 PUSH2 0x1A8C JUMP JUMPDEST PUSH2 0x11A4 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH2 0x229 JUMP JUMPDEST PUSH2 0x3EA PUSH2 0x3E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BDA JUMP JUMPDEST PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x233 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D89 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x27C SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x24F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x42E CALLDATASIZE PUSH1 0x4 PUSH2 0x1AEB JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x453 PUSH2 0x44E CALLDATASIZE PUSH1 0x4 PUSH2 0x1DCC JUMP JUMPDEST PUSH2 0x1343 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x27C SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x386 PUSH2 0x476 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E3E JUMP JUMPDEST PUSH2 0x140D JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x27C SWAP1 PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x4A2 PUSH2 0x49D CALLDATASIZE PUSH1 0x4 PUSH2 0x1BDA JUMP JUMPDEST PUSH2 0x14CE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP2 DUP5 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x233 JUMP JUMPDEST PUSH2 0x4E8 PUSH2 0x4E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BDA JUMP JUMPDEST PUSH2 0x1516 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x233 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E8B JUMP JUMPDEST PUSH2 0x50A PUSH2 0x505 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EC1 JUMP JUMPDEST PUSH2 0x15E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x233 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1EED JUMP JUMPDEST PUSH2 0x229 PUSH2 0x527 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F19 JUMP JUMPDEST PUSH2 0x169E JUMP JUMPDEST PUSH2 0x53F PUSH2 0x53A CALLDATASIZE PUSH1 0x4 PUSH2 0x1BDA JUMP JUMPDEST PUSH2 0x16FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x233 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F37 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x27C SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x56F CALLDATASIZE PUSH1 0x4 PUSH2 0x1FC4 JUMP JUMPDEST PUSH2 0x17FB JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x386 SWAP1 PUSH6 0x10000000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x598 CALLDATASIZE PUSH1 0x4 PUSH2 0x2016 JUMP JUMPDEST PUSH2 0x18C2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x5C8 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x24 ADD PUSH2 0x20A3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x4F17A9B PUSH1 0xE0 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x5FD SWAP2 SWAP1 PUSH2 0x20DB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x638 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x63D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP4 PUSH2 0x654 JUMPI DUP1 DUP3 REVERT JUMPDEST DUP1 DUP3 RETURN JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x685 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x24 ADD PUSH2 0x20F7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x152DE3B9 PUSH1 0xE0 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x5FD SWAP2 SWAP1 PUSH2 0x20DB JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x6E5 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x24 ADD PUSH2 0x20A3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x899B86F PUSH1 0xE2 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x5FD SWAP2 SWAP1 PUSH2 0x20DB JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x741 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x24 ADD PUSH2 0x213C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x16137DB7 PUSH1 0xE1 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x5FD SWAP2 SWAP1 PUSH2 0x20DB JUMP JUMPDEST PUSH1 0xE DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x786 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0xFF AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x7A7 SWAP1 PUSH2 0x2161 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7D3 SWAP1 PUSH2 0x2161 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x820 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7F5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x820 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x803 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x60 SWAP2 DUP4 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH1 0x44 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x4EEB7B85 PUSH1 0xE0 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x883 SWAP2 SWAP1 PUSH2 0x20DB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x8BE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x8C3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x8DA JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP1 DUP3 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x537563636573732065786563757465642070726F706F73616C00000000000000 DUP2 MSTORE POP SWAP4 POP SWAP4 POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 CHAINID SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x999 SWAP1 PUSH32 0x454950373132446F6D61696E28737472696E67206E616D652C737472696E6720 DUP2 MSTORE PUSH32 0x76657273696F6E2C75696E7432353620636861696E49642C6164647265737320 PUSH1 0x20 DUP3 ADD MSTORE PUSH18 0x766572696679696E67436F6E747261637429 PUSH1 0x70 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x52 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 SWAP1 DUP4 ADD MSTORE PUSH32 0x1318895AF1F6DB161B2BA745B8E57A6B46EFAD77D736630379EC69C3CD4C875 SWAP1 DUP3 ADD MSTORE PUSH32 0x7EF8EC374E43C85C540DA8F69DE7866F66E96DEB3AA6B597DF20E0FF3CE0C64 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD DUP4 SWAP1 MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA9B SWAP1 PUSH32 0x7374724F6666436861696E566F7465286164647265737320766F7465722C7569 DUP2 MSTORE PUSH32 0x6E743235362070726F7049642C626F6F6C20737570706F72742C737472696E67 PUSH1 0x20 DUP3 ADD MSTORE PUSH15 0x206A757374696669636174696F6E29 PUSH1 0x88 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x4F ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP12 DUP12 DUP12 DUP12 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xAC5 SWAP2 SWAP1 PUSH2 0x20DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB18 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP5 DUP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB5B SWAP3 SWAP2 SWAP1 PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x0 DUP1 DUP6 MSTORE SWAP2 DUP5 ADD DUP1 DUP5 MSTORE DUP2 SWAP1 MSTORE PUSH1 0xFF DUP11 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP4 ADD DUP12 SWAP1 MSTORE PUSH1 0x80 DUP4 ADD DUP11 SWAP1 MSTORE SWAP1 SWAP3 POP SWAP1 PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBC6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC2E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC9B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F746550726F704F6666436861696E3A20696E76616C6964207369676E6174 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x757265 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC25 JUMP JUMPDEST PUSH1 0xB SLOAD DUP13 LT PUSH2 0xCEC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F706F73616C20646F6573206E6F74206578697374000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC25 JUMP JUMPDEST PUSH1 0xB DUP13 DUP2 SLOAD DUP2 LT PUSH2 0xCFF JUMPI PUSH2 0xCFF PUSH2 0x219C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD PUSH1 0x3 ADD SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD69 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F706F73616C20616C726561647920657865637574656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC25 JUMP JUMPDEST PUSH1 0xB DUP13 DUP2 SLOAD DUP2 LT PUSH2 0xD7C JUMPI PUSH2 0xD7C PUSH2 0x219C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD PUSH1 0x3 ADD SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xDDF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x141C9BDC1BDCD85B081DD85CC81C995A9958DD1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC25 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 DUP14 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP15 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xE88 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x557365722068617665206120766F74652072656769737472656420666F722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x1A1A5CC81C1C9BDC1BDCD85B PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC25 JUMP JUMPDEST PUSH1 0xB DUP13 DUP2 SLOAD DUP2 LT PUSH2 0xE9B JUMPI PUSH2 0xE9B PUSH2 0x219C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x4 ADD SLOAD TIMESTAMP LT PUSH2 0xEEF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x50726F706F73616C20646561646C696E65 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC25 JUMP JUMPDEST DUP11 PUSH1 0xA PUSH1 0x0 DUP15 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP16 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP10 PUSH1 0xA PUSH1 0x0 DUP15 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP16 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0xF8D SWAP3 SWAP2 SWAP1 PUSH2 0x1924 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xA PUSH1 0x0 DUP15 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP16 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xB DUP13 DUP2 SLOAD DUP2 LT PUSH2 0xFF3 JUMPI PUSH2 0xFF3 PUSH2 0x219C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x3 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD DUP1 SLOAD PUSH1 0xFF AND SWAP2 PUSH2 0x1014 DUP4 PUSH2 0x21B2 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP DUP11 PUSH2 0x1088 JUMPI PUSH1 0xB DUP13 DUP2 SLOAD DUP2 LT PUSH2 0x1045 JUMPI PUSH2 0x1045 PUSH2 0x219C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND SWAP1 PUSH1 0x1 PUSH2 0x106E DUP4 PUSH2 0x21B2 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP JUMPDEST PUSH32 0xCF689387E0CFBCFE58BEE1B497861A7F47C2DD413053B5D49DF763B7928B254E DUP13 DUP13 DUP16 DUP14 PUSH1 0x40 MLOAD PUSH2 0x10BD SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x10CE DUP13 PUSH2 0x828 JUMP JUMPDEST POP PUSH1 0x1 SWAP15 SWAP14 POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x110C SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x24 ADD PUSH2 0x221C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x70ACB761 PUSH1 0xE0 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x1141 SWAP2 SWAP1 PUSH2 0x20DB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x117C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1181 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP4 PUSH2 0x1198 JUMPI DUP1 DUP3 REVERT JUMPDEST POP MLOAD SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x11CF SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x24 ADD PUSH2 0x20A3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xF8C70A9 PUSH1 0xE3 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x1204 SWAP2 SWAP1 PUSH2 0x20DB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x123F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1244 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP4 PUSH2 0x125B JUMPI DUP1 DUP3 REVERT JUMPDEST POP MLOAD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xF DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP4 POP SWAP1 PUSH2 0x12A7 SWAP1 PUSH2 0x2161 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x12D3 SWAP1 PUSH2 0x2161 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1320 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x12F5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1320 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1303 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 SWAP2 PUSH1 0xFF DUP1 DUP3 AND SWAP3 POP PUSH2 0x100 SWAP1 SWAP2 DIV AND DUP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x137A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2248 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x9BCB9ABB PUSH1 0xE0 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x13AF SWAP2 SWAP1 PUSH2 0x20DB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x13EA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13EF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x1406 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP1 DUP3 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x1436 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x24 ADD PUSH2 0x2274 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xF40E9B45 PUSH1 0xE0 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x146B SWAP2 SWAP1 PUSH2 0x20DB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x14A6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x14AB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x14C2 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP1 DUP3 REVERT JUMPDEST POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0xD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x14DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP5 POP SWAP1 SWAP3 DUP3 AND SWAP2 AND DUP5 JUMP JUMPDEST PUSH1 0xC DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1526 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP4 POP SWAP1 PUSH2 0x1555 SWAP1 PUSH2 0x2161 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1581 SWAP1 PUSH2 0x2161 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x15CE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x15A3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x15CE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x15B1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x2 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 POP POP PUSH1 0xFF AND DUP4 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0xFF DUP1 DUP5 AND SWAP5 PUSH2 0x100 SWAP1 SWAP5 DIV AND SWAP3 SWAP2 SWAP1 PUSH2 0x161B SWAP1 PUSH2 0x2161 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1647 SWAP1 PUSH2 0x2161 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1694 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1669 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1694 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1677 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x16C7 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x24 ADD PUSH2 0x2295 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xC4CAEB63 PUSH1 0xE0 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x1141 SWAP2 SWAP1 PUSH2 0x20DB JUMP JUMPDEST PUSH1 0xB DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x170C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP5 POP PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP3 DIV PUSH1 0xFF AND SWAP3 SWAP2 PUSH2 0x1746 SWAP1 PUSH2 0x2161 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1772 SWAP1 PUSH2 0x2161 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x17BF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1794 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x17BF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x17A2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x2 DUP5 ADD SLOAD PUSH1 0x3 DUP6 ADD SLOAD PUSH1 0x4 SWAP1 SWAP6 ADD SLOAD SWAP4 SWAP5 SWAP1 SWAP4 PUSH1 0xFF DUP1 DUP4 AND SWAP5 POP PUSH2 0x100 DUP4 DIV DUP2 AND SWAP4 POP PUSH3 0x10000 DUP4 DIV DUP2 AND SWAP3 PUSH4 0x1000000 SWAP1 DIV AND SWAP1 DUP10 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x1828 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x24 ADD PUSH2 0x22B9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x6F2D58A7 PUSH1 0xE1 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x185D SWAP2 SWAP1 PUSH2 0x20DB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1898 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x189D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP4 PUSH2 0x18B4 JUMPI DUP1 DUP3 REVERT JUMPDEST POP MLOAD SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x18EF SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x24 ADD PUSH2 0x22EC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x7F3756F3 PUSH1 0xE1 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x185D SWAP2 SWAP1 PUSH2 0x20DB JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1930 SWAP1 PUSH2 0x2161 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x1952 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1998 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x196B JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1998 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1998 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1998 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x197D JUMP JUMPDEST POP PUSH2 0x19A4 SWAP3 SWAP2 POP PUSH2 0x19A8 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x19A4 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x19A9 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x19D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x1A0A JUMPI PUSH2 0x1A0A PUSH2 0x19D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1A32 JUMPI PUSH2 0x1A32 PUSH2 0x19D9 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x1A4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1A76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A85 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x19EF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1AA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AAB DUP6 PUSH2 0x19BD JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1ACE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1ADA DUP8 DUP3 DUP9 ADD PUSH2 0x1A65 JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP4 SWAP5 PUSH1 0x60 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A85 DUP3 PUSH2 0x19BD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1B1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B27 DUP7 PUSH2 0x19BD JUMP JUMPDEST SWAP5 POP PUSH2 0x1B35 PUSH1 0x20 DUP8 ADD PUSH2 0x19BD JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B64 DUP9 DUP3 DUP10 ADD PUSH2 0x1A65 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP3 SWAP6 PUSH1 0x80 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1BA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BAD DUP7 DUP4 DUP8 ADD PUSH2 0x1A65 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1BC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BD0 DUP6 DUP3 DUP7 ADD PUSH2 0x1A65 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C0E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1BF6 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1C1D JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1C3B DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1BF3 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1A85 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1C23 JUMP JUMPDEST DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1C7D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1C23 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x19D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x19D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1CC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CCA DUP9 PUSH2 0x19BD JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP6 POP PUSH2 0x1CDF PUSH1 0x40 DUP10 ADD PUSH2 0x1C85 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D07 DUP11 DUP3 DUP12 ADD PUSH2 0x1A65 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP3 POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD SWAP2 POP PUSH2 0x1D24 PUSH1 0xC0 DUP10 ADD PUSH2 0x1C95 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1D47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D50 DUP5 PUSH2 0x1C95 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D78 DUP7 DUP3 DUP8 ADD PUSH2 0x1A65 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1DAD SWAP1 DUP4 ADD DUP8 PUSH2 0x1C23 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE POP SWAP2 ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x80 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1DE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DEA DUP5 PUSH2 0x1C85 JUMP JUMPDEST SWAP3 POP PUSH2 0x1DF8 PUSH1 0x20 DUP6 ADD PUSH2 0x19BD JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 ADD PUSH1 0x1F DUP2 ADD DUP7 SGT PUSH2 0x1E25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E34 DUP7 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x19EF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH2 0x1E63 PUSH1 0x20 DUP6 ADD PUSH2 0x1C85 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E34 DUP7 DUP3 DUP8 ADD PUSH2 0x1A65 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1EAF SWAP1 DUP4 ADD DUP6 PUSH2 0x1C23 JUMP JUMPDEST SWAP1 POP DUP3 ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1ED4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1EE4 PUSH1 0x20 DUP5 ADD PUSH2 0x19BD JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP4 ISZERO ISZERO DUP2 MSTORE DUP3 ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1F10 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1C23 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D50 DUP5 PUSH2 0x19BD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP2 MSTORE PUSH1 0x0 PUSH2 0x120 PUSH1 0x9 DUP12 LT PUSH2 0x1F66 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP11 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x1F7E DUP2 DUP5 ADD DUP12 PUSH2 0x1C23 JUMP JUMPDEST SWAP2 POP POP DUP8 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xFF DUP8 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xFF DUP7 AND PUSH1 0xA0 DUP4 ADD MSTORE DUP5 ISZERO ISZERO PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x1FAF PUSH1 0xE0 DUP4 ADD DUP6 ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST DUP3 PUSH2 0x100 DUP4 ADD MSTORE SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1FDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FE5 DUP7 PUSH2 0x19BD JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH2 0x1FFA PUSH1 0x40 DUP8 ADD PUSH2 0x19BD JUMP JUMPDEST SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x202E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2037 DUP7 PUSH2 0x19BD JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2054 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2060 DUP10 DUP4 DUP11 ADD PUSH2 0x1A65 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2076 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2083 DUP9 DUP3 DUP10 ADD PUSH2 0x1A65 JUMP JUMPDEST SWAP4 POP POP PUSH2 0x2092 PUSH1 0x60 DUP8 ADD PUSH2 0x1C85 JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP2 SWAP5 PUSH1 0x80 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x20CA PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1C23 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x60 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x20ED DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1BF3 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x212A SWAP1 DUP4 ADD DUP6 PUSH2 0x1C23 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x80 DUP4 ADD MSTORE SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x214F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1C23 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1F10 DUP2 DUP6 PUSH2 0x1C23 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2175 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2196 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH2 0x21D7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP5 DUP2 MSTORE DUP4 ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2212 SWAP1 DUP4 ADD DUP5 PUSH2 0x1C23 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xFF DUP5 AND DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2238 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1C23 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP4 ISZERO ISZERO DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1F10 SWAP1 DUP4 ADD DUP5 PUSH2 0x1C23 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1F10 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1C23 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2238 SWAP1 DUP4 ADD DUP6 PUSH2 0x1C23 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE DUP5 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x212A SWAP1 DUP4 ADD DUP6 PUSH2 0x1C23 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2310 SWAP1 DUP4 ADD DUP8 PUSH2 0x1C23 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x2322 DUP2 DUP8 PUSH2 0x1C23 JUMP JUMPDEST SWAP5 ISZERO ISZERO PUSH1 0x60 DUP5 ADD MSTORE POP POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 SIGNEXTEND PUSH8 0x2B046FEAEB686894 MOD PUSH11 0x4195AA0A94F9B6230B807B 0x29 LOG2 BALANCE 0xE7 BASEFEE 0xAE NUMBER PUSH21 0x64736F6C634300080C003300000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        254,
        17476
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "6": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "8": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "12": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "DUP1",
      "path": "18"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "REVERT",
      "path": "18"
    },
    "16": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "17": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "POP",
      "path": "18"
    },
    "18": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "21": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "LT",
      "path": "18"
    },
    "22": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x211"
    },
    "25": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "26": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "29": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "SHR",
      "path": "18"
    },
    "32": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "DUP1",
      "path": "18"
    },
    "33": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x824C88DA"
    },
    "38": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "GT",
      "path": "18"
    },
    "39": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x125"
    },
    "42": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "43": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "DUP1",
      "path": "18"
    },
    "44": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xBAA4D5E9"
    },
    "49": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "GT",
      "path": "18"
    },
    "50": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xAD"
    },
    "53": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "54": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "DUP1",
      "path": "18"
    },
    "55": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xCB85669C"
    },
    "60": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "GT",
      "path": "18"
    },
    "61": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x7C"
    },
    "64": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "65": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "DUP1",
      "path": "18"
    },
    "66": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xCB85669C"
    },
    "71": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "EQ",
      "path": "18"
    },
    "72": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x52C"
    },
    "75": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "76": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "DUP1",
      "path": "18"
    },
    "77": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xDA9BCA21"
    },
    "82": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "EQ",
      "path": "18"
    },
    "83": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x554"
    },
    "86": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "87": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "DUP1",
      "path": "18"
    },
    "88": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xDE5AB14E"
    },
    "93": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "EQ",
      "path": "18"
    },
    "94": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x561"
    },
    "97": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "98": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "DUP1",
      "path": "18"
    },
    "99": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xF00D6274"
    },
    "104": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "EQ",
      "path": "18"
    },
    "105": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x574"
    },
    "108": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "109": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "DUP1",
      "path": "18"
    },
    "110": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFE6EADE6"
    },
    "115": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "EQ",
      "path": "18"
    },
    "116": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x58A"
    },
    "119": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "120": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "122": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "DUP1",
      "path": "18"
    },
    "123": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "REVERT",
      "path": "18"
    },
    "124": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "125": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "DUP1",
      "path": "18"
    },
    "126": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xBAA4D5E9"
    },
    "131": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "EQ",
      "path": "18"
    },
    "132": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x48F"
    },
    "135": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "136": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "DUP1",
      "path": "18"
    },
    "137": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xBB3A9065"
    },
    "142": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "EQ",
      "path": "18"
    },
    "143": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4D5"
    },
    "146": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "147": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "DUP1",
      "path": "18"
    },
    "148": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xC347D2FD"
    },
    "153": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "EQ",
      "path": "18"
    },
    "154": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4F7"
    },
    "157": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "158": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "DUP1",
      "path": "18"
    },
    "159": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xC4CAEB63"
    },
    "164": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "EQ",
      "path": "18"
    },
    "165": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x519"
    },
    "168": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "169": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "171": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "DUP1",
      "path": "18"
    },
    "172": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "REVERT",
      "path": "18"
    },
    "173": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "174": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "DUP1",
      "path": "18"
    },
    "175": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x99DB7FB3"
    },
    "180": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "GT",
      "path": "18"
    },
    "181": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xF4"
    },
    "184": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "185": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "DUP1",
      "path": "18"
    },
    "186": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x99DB7FB3"
    },
    "191": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "EQ",
      "path": "18"
    },
    "192": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x420"
    },
    "195": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "196": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "DUP1",
      "path": "18"
    },
    "197": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x9BCB9ABB"
    },
    "202": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "EQ",
      "path": "18"
    },
    "203": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x440"
    },
    "206": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "207": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "DUP1",
      "path": "18"
    },
    "208": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x9C630A88"
    },
    "213": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "EQ",
      "path": "18"
    },
    "214": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x455"
    },
    "217": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "218": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "DUP1",
      "path": "18"
    },
    "219": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xA5AC0F31"
    },
    "224": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "EQ",
      "path": "18"
    },
    "225": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x468"
    },
    "228": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "229": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "DUP1",
      "path": "18"
    },
    "230": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xAB44997B"
    },
    "235": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "EQ",
      "path": "18"
    },
    "236": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x47B"
    },
    "239": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "240": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "242": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "DUP1",
      "path": "18"
    },
    "243": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "REVERT",
      "path": "18"
    },
    "244": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "245": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "DUP1",
      "path": "18"
    },
    "246": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x824C88DA"
    },
    "251": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "EQ",
      "path": "18"
    },
    "252": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3CF"
    },
    "255": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "256": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "DUP1",
      "path": "18"
    },
    "257": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x8532CBF7"
    },
    "262": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "EQ",
      "path": "18"
    },
    "263": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3D7"
    },
    "266": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "267": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "DUP1",
      "path": "18"
    },
    "268": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x8668EAFC"
    },
    "273": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "EQ",
      "path": "18"
    },
    "274": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3FB"
    },
    "277": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "278": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "DUP1",
      "path": "18"
    },
    "279": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x9360BFAD"
    },
    "284": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "EQ",
      "path": "18"
    },
    "285": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x40D"
    },
    "288": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "289": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "291": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "DUP1",
      "path": "18"
    },
    "292": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "REVERT",
      "path": "18"
    },
    "293": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "294": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "DUP1",
      "path": "18"
    },
    "295": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x2266E1BC"
    },
    "300": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "GT",
      "path": "18"
    },
    "301": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1A8"
    },
    "304": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "305": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "DUP1",
      "path": "18"
    },
    "306": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x5F3D99B3"
    },
    "311": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "GT",
      "path": "18"
    },
    "312": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x177"
    },
    "315": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "316": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "DUP1",
      "path": "18"
    },
    "317": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x5F3D99B3"
    },
    "322": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "EQ",
      "path": "18"
    },
    "323": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x352"
    },
    "326": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "327": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "DUP1",
      "path": "18"
    },
    "328": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x61461E2F"
    },
    "333": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "EQ",
      "path": "18"
    },
    "334": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x373"
    },
    "337": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "338": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "DUP1",
      "path": "18"
    },
    "339": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x6C2F34E7"
    },
    "344": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "EQ",
      "path": "18"
    },
    "345": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x396"
    },
    "348": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "349": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "DUP1",
      "path": "18"
    },
    "350": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x70ACB761"
    },
    "355": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "EQ",
      "path": "18"
    },
    "356": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3A9"
    },
    "359": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "360": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "DUP1",
      "path": "18"
    },
    "361": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x7C638548"
    },
    "366": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "EQ",
      "path": "18"
    },
    "367": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3BC"
    },
    "370": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "371": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "373": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "DUP1",
      "path": "18"
    },
    "374": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "REVERT",
      "path": "18"
    },
    "375": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "376": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "DUP1",
      "path": "18"
    },
    "377": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x2266E1BC"
    },
    "382": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "EQ",
      "path": "18"
    },
    "383": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x304"
    },
    "386": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "387": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "DUP1",
      "path": "18"
    },
    "388": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x2C26FB6E"
    },
    "393": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "EQ",
      "path": "18"
    },
    "394": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x317"
    },
    "397": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "398": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "DUP1",
      "path": "18"
    },
    "399": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x3A70693D"
    },
    "404": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "EQ",
      "path": "18"
    },
    "405": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x32A"
    },
    "408": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "409": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "DUP1",
      "path": "18"
    },
    "410": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x59CA2D03"
    },
    "415": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "EQ",
      "path": "18"
    },
    "416": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x33D"
    },
    "419": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "420": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "422": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "DUP1",
      "path": "18"
    },
    "423": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "REVERT",
      "path": "18"
    },
    "424": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "425": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "DUP1",
      "path": "18"
    },
    "426": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x152DE3B9"
    },
    "431": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "GT",
      "path": "18"
    },
    "432": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E4"
    },
    "435": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "436": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "DUP1",
      "path": "18"
    },
    "437": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x152DE3B9"
    },
    "442": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "EQ",
      "path": "18"
    },
    "443": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2AE"
    },
    "446": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "447": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "DUP1",
      "path": "18"
    },
    "448": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x16E58A2F"
    },
    "453": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "EQ",
      "path": "18"
    },
    "454": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2C1"
    },
    "457": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "458": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "DUP1",
      "path": "18"
    },
    "459": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x1D5FD3CA"
    },
    "464": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "EQ",
      "path": "18"
    },
    "465": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2E8"
    },
    "468": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "469": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "DUP1",
      "path": "18"
    },
    "470": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x1F50DD27"
    },
    "475": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "EQ",
      "path": "18"
    },
    "476": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2F1"
    },
    "479": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "480": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "482": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "DUP1",
      "path": "18"
    },
    "483": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "REVERT",
      "path": "18"
    },
    "484": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "485": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "DUP1",
      "path": "18"
    },
    "486": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x4F17A9B"
    },
    "491": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "EQ",
      "path": "18"
    },
    "492": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x216"
    },
    "495": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "496": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "DUP1",
      "path": "18"
    },
    "497": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x52F9B0A"
    },
    "502": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "EQ",
      "path": "18"
    },
    "503": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x23C"
    },
    "506": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "507": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "DUP1",
      "path": "18"
    },
    "508": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x5FE6663"
    },
    "513": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "EQ",
      "path": "18"
    },
    "514": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x267"
    },
    "517": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "518": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "DUP1",
      "path": "18"
    },
    "519": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x9C57DF7"
    },
    "524": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "EQ",
      "path": "18"
    },
    "525": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x28E"
    },
    "528": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "529": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "530": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "532": {
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "DUP1",
      "path": "18"
    },
    "533": {
      "first_revert": true,
      "fn": null,
      "offset": [
        254,
        17476
      ],
      "op": "REVERT",
      "path": "18"
    },
    "534": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15726,
        16544
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "535": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15726,
        16544
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x229"
    },
    "538": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15726,
        16544
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x224"
    },
    "541": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15726,
        16544
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "542": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15726,
        16544
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "544": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15726,
        16544
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1A8C"
    },
    "547": {
      "fn": "CLHouse.PropSellERC20",
      "jump": "i",
      "offset": [
        15726,
        16544
      ],
      "op": "JUMP",
      "path": "18"
    },
    "548": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15726,
        16544
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "549": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15726,
        16544
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x59D"
    },
    "552": {
      "fn": "CLHouse.PropSellERC20",
      "jump": "i",
      "offset": [
        15726,
        16544
      ],
      "op": "JUMP",
      "path": "18"
    },
    "553": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15726,
        16544
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "554": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15726,
        16544
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "556": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15726,
        16544
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "557": {
      "op": "SWAP1"
    },
    "558": {
      "op": "DUP2"
    },
    "559": {
      "op": "MSTORE"
    },
    "560": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "562": {
      "op": "ADD"
    },
    "563": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15726,
        16544
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "564": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15726,
        16544
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "566": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15726,
        16544
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "567": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15726,
        16544
      ],
      "op": "DUP1",
      "path": "18"
    },
    "568": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15726,
        16544
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "569": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15726,
        16544
      ],
      "op": "SUB",
      "path": "18"
    },
    "570": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15726,
        16544
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "571": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15726,
        16544
      ],
      "op": "RETURN",
      "path": "18"
    },
    "572": {
      "offset": [
        875,
        898
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "573": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        875,
        898
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x6"
    },
    "575": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        875,
        898
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "576": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        875,
        898
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x24F"
    },
    "579": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        875,
        898
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "580": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "584": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "586": {
      "op": "SHL"
    },
    "587": {
      "op": "SUB"
    },
    "588": {
      "offset": [
        875,
        898
      ],
      "op": "AND",
      "path": "19"
    },
    "589": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        875,
        898
      ],
      "op": "DUP2",
      "path": "19"
    },
    "590": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        875,
        898
      ],
      "op": "JUMP",
      "path": "19"
    },
    "591": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        875,
        898
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "592": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        875,
        898
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "594": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        875,
        898
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "597": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "599": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "601": {
      "op": "SHL"
    },
    "602": {
      "op": "SUB"
    },
    "603": {
      "op": "SWAP1"
    },
    "604": {
      "op": "SWAP2"
    },
    "605": {
      "op": "AND"
    },
    "606": {
      "op": "DUP2"
    },
    "607": {
      "op": "MSTORE"
    },
    "608": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "610": {
      "op": "ADD"
    },
    "611": {
      "offset": [
        875,
        898
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x233"
    },
    "614": {
      "op": "JUMP"
    },
    "615": {
      "offset": [
        615,
        653
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "616": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        615,
        653
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "618": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        615,
        653
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "619": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        615,
        653
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x27C"
    },
    "622": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        615,
        653
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "623": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        615,
        653
      ],
      "op": "PUSH5",
      "path": "19",
      "value": "0x100000000"
    },
    "629": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        615,
        653
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "630": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        615,
        653
      ],
      "op": "DIV",
      "path": "19"
    },
    "631": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        615,
        653
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xFF"
    },
    "633": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        615,
        653
      ],
      "op": "AND",
      "path": "19"
    },
    "634": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        615,
        653
      ],
      "op": "DUP2",
      "path": "19"
    },
    "635": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        615,
        653
      ],
      "op": "JUMP",
      "path": "19"
    },
    "636": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        615,
        653
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "637": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        615,
        653
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "639": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        615,
        653
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "640": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "642": {
      "op": "SWAP1"
    },
    "643": {
      "op": "SWAP2"
    },
    "644": {
      "op": "AND"
    },
    "645": {
      "op": "DUP2"
    },
    "646": {
      "op": "MSTORE"
    },
    "647": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "649": {
      "op": "ADD"
    },
    "650": {
      "offset": [
        615,
        653
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x233"
    },
    "653": {
      "op": "JUMP"
    },
    "654": {
      "offset": [
        1019,
        1067
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "655": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1019,
        1067
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x229"
    },
    "658": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1019,
        1067
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x29C"
    },
    "661": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1019,
        1067
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "662": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1019,
        1067
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "664": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1019,
        1067
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1AEB"
    },
    "667": {
      "fn": "CLHouse.PropSellERC20",
      "jump": "i",
      "offset": [
        1019,
        1067
      ],
      "op": "JUMP",
      "path": "19"
    },
    "668": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1019,
        1067
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "669": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1019,
        1067
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x9"
    },
    "671": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1019,
        1067
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "673": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1019,
        1067
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "674": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1019,
        1067
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "676": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1019,
        1067
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "677": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1019,
        1067
      ],
      "op": "DUP2",
      "path": "19"
    },
    "678": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1019,
        1067
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "679": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1019,
        1067
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "681": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1019,
        1067
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "682": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1019,
        1067
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "683": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1019,
        1067
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "684": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1019,
        1067
      ],
      "op": "DUP2",
      "path": "19"
    },
    "685": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1019,
        1067
      ],
      "op": "JUMP",
      "path": "19"
    },
    "686": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        14835,
        15720
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "687": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        14835,
        15720
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x229"
    },
    "690": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        14835,
        15720
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2BC"
    },
    "693": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        14835,
        15720
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "694": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        14835,
        15720
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "696": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        14835,
        15720
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1B06"
    },
    "699": {
      "fn": "CLHouse.PropSwapERC20",
      "jump": "i",
      "offset": [
        14835,
        15720
      ],
      "op": "JUMP",
      "path": "18"
    },
    "700": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        14835,
        15720
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "701": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        14835,
        15720
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x658"
    },
    "704": {
      "fn": "CLHouse.PropSwapERC20",
      "jump": "i",
      "offset": [
        14835,
        15720
      ],
      "op": "JUMP",
      "path": "18"
    },
    "705": {
      "offset": [
        1490,
        1649
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "706": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1490,
        1649
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x229"
    },
    "709": {
      "offset": [
        1557,
        1649
      ],
      "op": "PUSH32",
      "path": "19",
      "value": "0x29DB90F499FC17D858ADF930FEC9986F376F0BA9B76D35B25F1DB7AFB7F4B60C"
    },
    "742": {
      "offset": [
        1490,
        1649
      ],
      "op": "DUP2",
      "path": "19"
    },
    "743": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1490,
        1649
      ],
      "op": "JUMP",
      "path": "19"
    },
    "744": {
      "offset": [
        762,
        799
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "745": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        762,
        799
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x229"
    },
    "748": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        762,
        799
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x3"
    },
    "750": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        762,
        799
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "751": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        762,
        799
      ],
      "op": "DUP2",
      "path": "19"
    },
    "752": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        762,
        799
      ],
      "op": "JUMP",
      "path": "19"
    },
    "753": {
      "offset": [
        904,
        931
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "754": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        904,
        931
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x7"
    },
    "756": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        904,
        931
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "757": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        904,
        931
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x24F"
    },
    "760": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        904,
        931
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "765": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "767": {
      "op": "SHL"
    },
    "768": {
      "op": "SUB"
    },
    "769": {
      "offset": [
        904,
        931
      ],
      "op": "AND",
      "path": "19"
    },
    "770": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        904,
        931
      ],
      "op": "DUP2",
      "path": "19"
    },
    "771": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        904,
        931
      ],
      "op": "JUMP",
      "path": "19"
    },
    "772": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        16550,
        17364
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "773": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        16550,
        17364
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x229"
    },
    "776": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        16550,
        17364
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x312"
    },
    "779": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        16550,
        17364
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "780": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        16550,
        17364
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "782": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        16550,
        17364
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1A8C"
    },
    "785": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "i",
      "offset": [
        16550,
        17364
      ],
      "op": "JUMP",
      "path": "18"
    },
    "786": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        16550,
        17364
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "787": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        16550,
        17364
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x6BA"
    },
    "790": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "i",
      "offset": [
        16550,
        17364
      ],
      "op": "JUMP",
      "path": "18"
    },
    "791": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        13319,
        13991
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "792": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        13319,
        13991
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x229"
    },
    "795": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        13319,
        13991
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x325"
    },
    "798": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        13319,
        13991
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "799": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        13319,
        13991
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "801": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        13319,
        13991
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1B76"
    },
    "804": {
      "fn": "CLHouse.PropRequestToJoin",
      "jump": "i",
      "offset": [
        13319,
        13991
      ],
      "op": "JUMP",
      "path": "18"
    },
    "805": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        13319,
        13991
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "806": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        13319,
        13991
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x71A"
    },
    "809": {
      "fn": "CLHouse.PropRequestToJoin",
      "jump": "i",
      "offset": [
        13319,
        13991
      ],
      "op": "JUMP",
      "path": "18"
    },
    "810": {
      "offset": [
        1323,
        1367
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "811": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        1323,
        1367
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x27C"
    },
    "814": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        1323,
        1367
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x338"
    },
    "817": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        1323,
        1367
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "818": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        1323,
        1367
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "820": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        1323,
        1367
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1BDA"
    },
    "823": {
      "fn": "CLHouse.PropRequestToJoin",
      "jump": "i",
      "offset": [
        1323,
        1367
      ],
      "op": "JUMP",
      "path": "19"
    },
    "824": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        1323,
        1367
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "825": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        1323,
        1367
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x776"
    },
    "828": {
      "fn": "CLHouse.PropRequestToJoin",
      "jump": "i",
      "offset": [
        1323,
        1367
      ],
      "op": "JUMP",
      "path": "19"
    },
    "829": {
      "offset": [
        320,
        344
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "830": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x345"
    },
    "833": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x79A"
    },
    "836": {
      "fn": "CLHouse.PropRequestToJoin",
      "jump": "i",
      "offset": [
        320,
        344
      ],
      "op": "JUMP",
      "path": "19"
    },
    "837": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "838": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "840": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "841": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x233"
    },
    "844": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "845": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "846": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1C4F"
    },
    "849": {
      "fn": "CLHouse.PropRequestToJoin",
      "jump": "i",
      "offset": [
        320,
        344
      ],
      "op": "JUMP",
      "path": "19"
    },
    "850": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2643,
        3311
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "851": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2643,
        3311
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x365"
    },
    "854": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2643,
        3311
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x360"
    },
    "857": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2643,
        3311
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "858": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2643,
        3311
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "860": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2643,
        3311
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1BDA"
    },
    "863": {
      "fn": "CLHouse.ExecProp",
      "jump": "i",
      "offset": [
        2643,
        3311
      ],
      "op": "JUMP",
      "path": "18"
    },
    "864": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2643,
        3311
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "865": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2643,
        3311
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x828"
    },
    "868": {
      "fn": "CLHouse.ExecProp",
      "jump": "i",
      "offset": [
        2643,
        3311
      ],
      "op": "JUMP",
      "path": "18"
    },
    "869": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2643,
        3311
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "870": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2643,
        3311
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "872": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2643,
        3311
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "873": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2643,
        3311
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x233"
    },
    "876": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2643,
        3311
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "877": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2643,
        3311
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "878": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2643,
        3311
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "879": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2643,
        3311
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1C62"
    },
    "882": {
      "fn": "CLHouse.ExecProp",
      "jump": "i",
      "offset": [
        2643,
        3311
      ],
      "op": "JUMP",
      "path": "18"
    },
    "883": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4363,
        7211
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "884": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4363,
        7211
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x386"
    },
    "887": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4363,
        7211
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x381"
    },
    "890": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4363,
        7211
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "891": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4363,
        7211
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "893": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4363,
        7211
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1CA6"
    },
    "896": {
      "fn": "CLHouse.VotePropOffChain",
      "jump": "i",
      "offset": [
        4363,
        7211
      ],
      "op": "JUMP",
      "path": "18"
    },
    "897": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4363,
        7211
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "898": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4363,
        7211
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x91D"
    },
    "901": {
      "fn": "CLHouse.VotePropOffChain",
      "jump": "i",
      "offset": [
        4363,
        7211
      ],
      "op": "JUMP",
      "path": "18"
    },
    "902": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4363,
        7211
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "903": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4363,
        7211
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "905": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4363,
        7211
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "906": {
      "op": "SWAP1"
    },
    "907": {
      "op": "ISZERO"
    },
    "908": {
      "op": "ISZERO"
    },
    "909": {
      "op": "DUP2"
    },
    "910": {
      "op": "MSTORE"
    },
    "911": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "913": {
      "op": "ADD"
    },
    "914": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4363,
        7211
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x233"
    },
    "917": {
      "op": "JUMP"
    },
    "918": {
      "offset": [
        818,
        841
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "919": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        818,
        841
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "921": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        818,
        841
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "922": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        818,
        841
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x24F"
    },
    "925": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        818,
        841
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "930": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "932": {
      "op": "SHL"
    },
    "933": {
      "op": "SUB"
    },
    "934": {
      "offset": [
        818,
        841
      ],
      "op": "AND",
      "path": "19"
    },
    "935": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        818,
        841
      ],
      "op": "DUP2",
      "path": "19"
    },
    "936": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        818,
        841
      ],
      "op": "JUMP",
      "path": "19"
    },
    "937": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12262,
        13019
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "938": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12262,
        13019
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x229"
    },
    "941": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12262,
        13019
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3B7"
    },
    "944": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12262,
        13019
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "945": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12262,
        13019
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "947": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12262,
        13019
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1D32"
    },
    "950": {
      "fn": "CLHouse.PropGovRules",
      "jump": "i",
      "offset": [
        12262,
        13019
      ],
      "op": "JUMP",
      "path": "18"
    },
    "951": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12262,
        13019
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "952": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12262,
        13019
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x10E3"
    },
    "955": {
      "fn": "CLHouse.PropGovRules",
      "jump": "i",
      "offset": [
        12262,
        13019
      ],
      "op": "JUMP",
      "path": "18"
    },
    "956": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        9902,
        10693
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "957": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        9902,
        10693
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x229"
    },
    "960": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        9902,
        10693
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3CA"
    },
    "963": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        9902,
        10693
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "964": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        9902,
        10693
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "966": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        9902,
        10693
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1A8C"
    },
    "969": {
      "fn": "CLHouse.PropTxWei",
      "jump": "i",
      "offset": [
        9902,
        10693
      ],
      "op": "JUMP",
      "path": "18"
    },
    "970": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        9902,
        10693
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "971": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        9902,
        10693
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x11A4"
    },
    "974": {
      "fn": "CLHouse.PropTxWei",
      "jump": "i",
      "offset": [
        9902,
        10693
      ],
      "op": "JUMP",
      "path": "18"
    },
    "975": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        17370,
        17474
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "976": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        17450,
        17460
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 0,
      "value": "0xF"
    },
    "978": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        17450,
        17467
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "979": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        17370,
        17474
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x229"
    },
    "982": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        17370,
        17474
      ],
      "op": "JUMP",
      "path": "18"
    },
    "983": {
      "offset": [
        1373,
        1402
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "984": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        1373,
        1402
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3EA"
    },
    "987": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        1373,
        1402
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3E5"
    },
    "990": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        1373,
        1402
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "991": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        1373,
        1402
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "993": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        1373,
        1402
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1BDA"
    },
    "996": {
      "fn": "CLHouse.GetArrMembersLength",
      "jump": "i",
      "offset": [
        1373,
        1402
      ],
      "op": "JUMP",
      "path": "19"
    },
    "997": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        1373,
        1402
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "998": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        1373,
        1402
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1268"
    },
    "1001": {
      "fn": "CLHouse.GetArrMembersLength",
      "jump": "i",
      "offset": [
        1373,
        1402
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1002": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        1373,
        1402
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1003": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        1373,
        1402
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1005": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        1373,
        1402
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1006": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        1373,
        1402
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x233"
    },
    "1009": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        1373,
        1402
      ],
      "op": "SWAP6",
      "path": "19"
    },
    "1010": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        1373,
        1402
      ],
      "op": "SWAP5",
      "path": "19"
    },
    "1011": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        1373,
        1402
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "1012": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        1373,
        1402
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "1013": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        1373,
        1402
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1014": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        1373,
        1402
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1015": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        1373,
        1402
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1D89"
    },
    "1018": {
      "fn": "CLHouse.GetArrMembersLength",
      "jump": "i",
      "offset": [
        1373,
        1402
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1019": {
      "offset": [
        495,
        525
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1020": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        495,
        525
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "1022": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        495,
        525
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1023": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        495,
        525
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x27C"
    },
    "1026": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        495,
        525
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1027": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        495,
        525
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x100"
    },
    "1030": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        495,
        525
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1031": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        495,
        525
      ],
      "op": "DIV",
      "path": "19"
    },
    "1032": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        495,
        525
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xFF"
    },
    "1034": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        495,
        525
      ],
      "op": "AND",
      "path": "19"
    },
    "1035": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        495,
        525
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1036": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        495,
        525
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1037": {
      "offset": [
        847,
        869
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1038": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        847,
        869
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x5"
    },
    "1040": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        847,
        869
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1041": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        847,
        869
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x24F"
    },
    "1044": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        847,
        869
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1047": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1049": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1051": {
      "op": "SHL"
    },
    "1052": {
      "op": "SUB"
    },
    "1053": {
      "offset": [
        847,
        869
      ],
      "op": "AND",
      "path": "19"
    },
    "1054": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        847,
        869
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1055": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        847,
        869
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1056": {
      "offset": [
        937,
        993
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1057": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        937,
        993
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x229"
    },
    "1060": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        937,
        993
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x42E"
    },
    "1063": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        937,
        993
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1064": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        937,
        993
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1066": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        937,
        993
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1AEB"
    },
    "1069": {
      "fn": "CLHouse.GetArrMembersLength",
      "jump": "i",
      "offset": [
        937,
        993
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1070": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        937,
        993
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1071": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        937,
        993
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x8"
    },
    "1073": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        937,
        993
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1075": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        937,
        993
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1076": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        937,
        993
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1078": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        937,
        993
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1079": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        937,
        993
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1080": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        937,
        993
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1081": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        937,
        993
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1083": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        937,
        993
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1084": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        937,
        993
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "1085": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        937,
        993
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1086": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        937,
        993
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1087": {
      "fn": "CLHouse.GetArrMembersLength",
      "offset": [
        937,
        993
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1088": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14129,
        14829
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1089": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14129,
        14829
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x453"
    },
    "1092": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14129,
        14829
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x44E"
    },
    "1095": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14129,
        14829
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1096": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14129,
        14829
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1098": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14129,
        14829
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1DCC"
    },
    "1101": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "jump": "i",
      "offset": [
        14129,
        14829
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1102": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14129,
        14829
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1103": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14129,
        14829
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1343"
    },
    "1106": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "jump": "i",
      "offset": [
        14129,
        14829
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1107": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14129,
        14829
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1108": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14129,
        14829
      ],
      "op": "STOP",
      "path": "18"
    },
    "1109": {
      "offset": [
        531,
        567
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1110": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        531,
        567
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "1112": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        531,
        567
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1113": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        531,
        567
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x27C"
    },
    "1116": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        531,
        567
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1117": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        531,
        567
      ],
      "op": "PUSH3",
      "path": "19",
      "value": "0x10000"
    },
    "1121": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        531,
        567
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1122": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        531,
        567
      ],
      "op": "DIV",
      "path": "19"
    },
    "1123": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        531,
        567
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xFF"
    },
    "1125": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        531,
        567
      ],
      "op": "AND",
      "path": "19"
    },
    "1126": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        531,
        567
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1127": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        531,
        567
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1128": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3644,
        4357
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1129": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3644,
        4357
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x386"
    },
    "1132": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3644,
        4357
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x476"
    },
    "1135": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3644,
        4357
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1136": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3644,
        4357
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1138": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3644,
        4357
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E3E"
    },
    "1141": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        3644,
        4357
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1142": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3644,
        4357
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1143": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3644,
        4357
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x140D"
    },
    "1146": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        3644,
        4357
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1147": {
      "offset": [
        573,
        609
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1148": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        573,
        609
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "1150": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        573,
        609
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1151": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        573,
        609
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x27C"
    },
    "1154": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        573,
        609
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1155": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        573,
        609
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x1000000"
    },
    "1160": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        573,
        609
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1161": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        573,
        609
      ],
      "op": "DIV",
      "path": "19"
    },
    "1162": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        573,
        609
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xFF"
    },
    "1164": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        573,
        609
      ],
      "op": "AND",
      "path": "19"
    },
    "1165": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        573,
        609
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1166": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        573,
        609
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1167": {
      "offset": [
        1273,
        1317
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1168": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1273,
        1317
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4A2"
    },
    "1171": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1273,
        1317
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x49D"
    },
    "1174": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1273,
        1317
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1175": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1273,
        1317
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1177": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1273,
        1317
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1BDA"
    },
    "1180": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        1273,
        1317
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1181": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1273,
        1317
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1182": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1273,
        1317
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x14CE"
    },
    "1185": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        1273,
        1317
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1186": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1273,
        1317
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1187": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1273,
        1317
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1189": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1273,
        1317
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1190": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1273,
        1317
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1195": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1197": {
      "op": "SHL"
    },
    "1198": {
      "op": "SUB"
    },
    "1199": {
      "op": "SWAP6"
    },
    "1200": {
      "op": "DUP7"
    },
    "1201": {
      "op": "AND"
    },
    "1202": {
      "op": "DUP2"
    },
    "1203": {
      "op": "MSTORE"
    },
    "1204": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1206": {
      "op": "DUP2"
    },
    "1207": {
      "op": "ADD"
    },
    "1208": {
      "op": "SWAP5"
    },
    "1209": {
      "op": "SWAP1"
    },
    "1210": {
      "op": "SWAP5"
    },
    "1211": {
      "op": "MSTORE"
    },
    "1212": {
      "op": "SWAP2"
    },
    "1213": {
      "op": "DUP5"
    },
    "1214": {
      "op": "AND"
    },
    "1215": {
      "op": "SWAP2"
    },
    "1216": {
      "op": "DUP4"
    },
    "1217": {
      "op": "ADD"
    },
    "1218": {
      "op": "SWAP2"
    },
    "1219": {
      "op": "SWAP1"
    },
    "1220": {
      "op": "SWAP2"
    },
    "1221": {
      "op": "MSTORE"
    },
    "1222": {
      "op": "SWAP1"
    },
    "1223": {
      "op": "SWAP2"
    },
    "1224": {
      "op": "AND"
    },
    "1225": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1227": {
      "op": "DUP3"
    },
    "1228": {
      "op": "ADD"
    },
    "1229": {
      "op": "MSTORE"
    },
    "1230": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1232": {
      "op": "ADD"
    },
    "1233": {
      "offset": [
        1273,
        1317
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x233"
    },
    "1236": {
      "op": "JUMP"
    },
    "1237": {
      "offset": [
        1221,
        1267
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1238": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4E8"
    },
    "1241": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4E3"
    },
    "1244": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1245": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1247": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1BDA"
    },
    "1250": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        1221,
        1267
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1251": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1252": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1516"
    },
    "1255": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        1221,
        1267
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1256": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1257": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1259": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1260": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x233"
    },
    "1263": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "1264": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "1265": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1266": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1267": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1E8B"
    },
    "1270": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        1221,
        1267
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1271": {
      "offset": [
        1073,
        1140
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1272": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x50A"
    },
    "1275": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x505"
    },
    "1278": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1279": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1281": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1EC1"
    },
    "1284": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        1073,
        1140
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1285": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1286": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x15E1"
    },
    "1289": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        1073,
        1140
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1290": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1291": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1293": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1294": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x233"
    },
    "1297": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "1298": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "1299": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1300": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1301": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1EED"
    },
    "1304": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        1073,
        1140
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1305": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        8806,
        9557
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1306": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        8806,
        9557
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x229"
    },
    "1309": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        8806,
        9557
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x527"
    },
    "1312": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        8806,
        9557
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1313": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        8806,
        9557
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1315": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        8806,
        9557
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1F19"
    },
    "1318": {
      "fn": "CLHouse.PropRemoveMember",
      "jump": "i",
      "offset": [
        8806,
        9557
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1319": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        8806,
        9557
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1320": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        8806,
        9557
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x169E"
    },
    "1323": {
      "fn": "CLHouse.PropRemoveMember",
      "jump": "i",
      "offset": [
        8806,
        9557
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1324": {
      "offset": [
        1182,
        1215
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1325": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x53F"
    },
    "1328": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x53A"
    },
    "1331": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1332": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1334": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1BDA"
    },
    "1337": {
      "fn": "CLHouse.PropRemoveMember",
      "jump": "i",
      "offset": [
        1182,
        1215
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1338": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1339": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x16FC"
    },
    "1342": {
      "fn": "CLHouse.PropRemoveMember",
      "jump": "i",
      "offset": [
        1182,
        1215
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1343": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1344": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1346": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1347": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x233"
    },
    "1350": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "SWAP10",
      "path": "19"
    },
    "1351": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "SWAP9",
      "path": "19"
    },
    "1352": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "SWAP8",
      "path": "19"
    },
    "1353": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "SWAP7",
      "path": "19"
    },
    "1354": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "SWAP6",
      "path": "19"
    },
    "1355": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "SWAP5",
      "path": "19"
    },
    "1356": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "1357": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "1358": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1359": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1360": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1F37"
    },
    "1363": {
      "fn": "CLHouse.PropRemoveMember",
      "jump": "i",
      "offset": [
        1182,
        1215
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1364": {
      "offset": [
        460,
        489
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1365": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        460,
        489
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "1367": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        460,
        489
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1368": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        460,
        489
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x27C"
    },
    "1371": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        460,
        489
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1372": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        460,
        489
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xFF"
    },
    "1374": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        460,
        489
      ],
      "op": "AND",
      "path": "19"
    },
    "1375": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        460,
        489
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1376": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        460,
        489
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1377": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11038,
        11901
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1378": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11038,
        11901
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x229"
    },
    "1381": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11038,
        11901
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x56F"
    },
    "1384": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11038,
        11901
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1385": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11038,
        11901
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1387": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11038,
        11901
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1FC4"
    },
    "1390": {
      "fn": "CLHouse.PropTxERC20",
      "jump": "i",
      "offset": [
        11038,
        11901
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1391": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11038,
        11901
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1392": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11038,
        11901
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x17FB"
    },
    "1395": {
      "fn": "CLHouse.PropTxERC20",
      "jump": "i",
      "offset": [
        11038,
        11901
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1396": {
      "offset": [
        672,
        696
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1397": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        672,
        696
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "1399": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        672,
        696
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1400": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        672,
        696
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x386"
    },
    "1403": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        672,
        696
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1404": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        672,
        696
      ],
      "op": "PUSH6",
      "path": "19",
      "value": "0x10000000000"
    },
    "1411": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        672,
        696
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1412": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        672,
        696
      ],
      "op": "DIV",
      "path": "19"
    },
    "1413": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        672,
        696
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xFF"
    },
    "1415": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        672,
        696
      ],
      "op": "AND",
      "path": "19"
    },
    "1416": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        672,
        696
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1417": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        672,
        696
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1418": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        7656,
        8524
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1419": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        7656,
        8524
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x229"
    },
    "1422": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        7656,
        8524
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x598"
    },
    "1425": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        7656,
        8524
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1426": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        7656,
        8524
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1428": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        7656,
        8524
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2016"
    },
    "1431": {
      "fn": "CLHouse.PropInviteMember",
      "jump": "i",
      "offset": [
        7656,
        8524
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1432": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        7656,
        8524
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1433": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        7656,
        8524
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x18C2"
    },
    "1436": {
      "fn": "CLHouse.PropInviteMember",
      "jump": "i",
      "offset": [
        7656,
        8524
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1437": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15726,
        16544
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1438": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15994,
        16007
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x2"
    },
    "1440": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15994,
        16007
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1441": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        16034,
        16261
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1443": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        16034,
        16261
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1444": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15914,
        15928
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1446": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15914,
        15928
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1447": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15914,
        15928
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1448": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15914,
        15928
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1449": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15914,
        15928
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1450": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15914,
        15928
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1453": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1455": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1457": {
      "op": "SHL"
    },
    "1458": {
      "op": "SUB"
    },
    "1459": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15994,
        16007
      ],
      "op": "AND",
      "path": "18"
    },
    "1460": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15994,
        16007
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1461": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        16034,
        16261
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5C8"
    },
    "1464": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        16034,
        16261
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1465": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        16143,
        16155
      ],
      "op": "DUP10",
      "path": "18"
    },
    "1466": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        16143,
        16155
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1467": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        16174,
        16187
      ],
      "op": "DUP10",
      "path": "18"
    },
    "1468": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        16174,
        16187
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1469": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        16206,
        16218
      ],
      "op": "DUP10",
      "path": "18"
    },
    "1470": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        16206,
        16218
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1471": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        16237,
        16247
      ],
      "op": "DUP10",
      "path": "18"
    },
    "1472": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        16237,
        16247
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1473": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        16034,
        16261
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "1475": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        16034,
        16261
      ],
      "op": "ADD",
      "path": "18"
    },
    "1476": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        16034,
        16261
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x20A3"
    },
    "1479": {
      "fn": "CLHouse.PropSellERC20",
      "jump": "i",
      "offset": [
        16034,
        16261
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1480": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        16034,
        16261
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1481": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        16034,
        16261
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1483": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        16034,
        16261
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1484": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        16034,
        16261
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1485": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1487": {
      "op": "NOT"
    },
    "1488": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        16034,
        16261
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1489": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        16034,
        16261
      ],
      "op": "DUP5",
      "path": "18"
    },
    "1490": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        16034,
        16261
      ],
      "op": "SUB",
      "path": "18"
    },
    "1491": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        16034,
        16261
      ],
      "op": "ADD",
      "path": "18"
    },
    "1492": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        16034,
        16261
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1493": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        16034,
        16261
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1494": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        16034,
        16261
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1495": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        16034,
        16261
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1496": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        16034,
        16261
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1497": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        16034,
        16261
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1499": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        16034,
        16261
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1500": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        16034,
        16261
      ],
      "op": "ADD",
      "path": "18"
    },
    "1501": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        16034,
        16261
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1502": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        16034,
        16261
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1507": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1509": {
      "op": "SHL"
    },
    "1510": {
      "op": "SUB"
    },
    "1511": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        16034,
        16261
      ],
      "op": "AND",
      "path": "18"
    },
    "1512": {
      "op": "PUSH4",
      "value": "0x4F17A9B"
    },
    "1517": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1519": {
      "op": "SHL"
    },
    "1520": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        16034,
        16261
      ],
      "op": "OR",
      "path": "18"
    },
    "1521": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        16034,
        16261
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1522": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        16034,
        16261
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1523": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15994,
        16271
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1524": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15994,
        16271
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5FD"
    },
    "1527": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15994,
        16271
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1528": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        16034,
        16261
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1529": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15994,
        16271
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x20DB"
    },
    "1532": {
      "fn": "CLHouse.PropSellERC20",
      "jump": "i",
      "offset": [
        15994,
        16271
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1533": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15994,
        16271
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1534": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15994,
        16271
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1536": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15994,
        16271
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1538": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15994,
        16271
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1539": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15994,
        16271
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1540": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15994,
        16271
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1541": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15994,
        16271
      ],
      "op": "SUB",
      "path": "18"
    },
    "1542": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15994,
        16271
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1543": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15994,
        16271
      ],
      "op": "DUP6",
      "path": "18"
    },
    "1544": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15994,
        16271
      ],
      "op": "GAS",
      "path": "18"
    },
    "1545": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15994,
        16271
      ],
      "op": "DELEGATECALL",
      "path": "18"
    },
    "1546": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15994,
        16271
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1547": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15994,
        16271
      ],
      "op": "POP",
      "path": "18"
    },
    "1548": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15994,
        16271
      ],
      "op": "POP",
      "path": "18"
    },
    "1549": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15994,
        16271
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "1550": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15994,
        16271
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1551": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15994,
        16271
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1553": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15994,
        16271
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1554": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15994,
        16271
      ],
      "op": "EQ",
      "path": "18"
    },
    "1555": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15994,
        16271
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x638"
    },
    "1558": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15994,
        16271
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1559": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15994,
        16271
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1561": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15994,
        16271
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1562": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15994,
        16271
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1563": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15994,
        16271
      ],
      "op": "POP",
      "path": "18"
    },
    "1564": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15994,
        16271
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "1566": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15994,
        16271
      ],
      "op": "NOT",
      "path": "18"
    },
    "1567": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15994,
        16271
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3F"
    },
    "1569": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15994,
        16271
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "1570": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15994,
        16271
      ],
      "op": "ADD",
      "path": "18"
    },
    "1571": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15994,
        16271
      ],
      "op": "AND",
      "path": "18"
    },
    "1572": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15994,
        16271
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1573": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15994,
        16271
      ],
      "op": "ADD",
      "path": "18"
    },
    "1574": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15994,
        16271
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1576": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15994,
        16271
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1577": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15994,
        16271
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "1578": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15994,
        16271
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1579": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15994,
        16271
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1580": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15994,
        16271
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "1581": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15994,
        16271
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1583": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15994,
        16271
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1585": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15994,
        16271
      ],
      "op": "DUP5",
      "path": "18"
    },
    "1586": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15994,
        16271
      ],
      "op": "ADD",
      "path": "18"
    },
    "1587": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15994,
        16271
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "1588": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15994,
        16271
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x63D"
    },
    "1591": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15994,
        16271
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1592": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15994,
        16271
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1593": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15994,
        16271
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "1595": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15994,
        16271
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1596": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15994,
        16271
      ],
      "op": "POP",
      "path": "18"
    },
    "1597": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15994,
        16271
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1598": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15994,
        16271
      ],
      "op": "POP",
      "path": "18"
    },
    "1599": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15945,
        16271
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1600": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15945,
        16271
      ],
      "op": "POP",
      "path": "18"
    },
    "1601": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15945,
        16271
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1602": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        15945,
        16271
      ],
      "op": "POP",
      "path": "18"
    },
    "1603": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        16322,
        16326
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1605": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        16316,
        16327
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1606": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        16352,
        16368
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "1607": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        16404,
        16408
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1608": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        16401,
        16402
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1610": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        16396,
        16399
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1611": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        16381,
        16409
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "1612": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        16433,
        16446
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1613": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        16422,
        16498
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x654"
    },
    "1616": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        16422,
        16498
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1617": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        16479,
        16483
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1618": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        16474,
        16477
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1619": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        16467,
        16484
      ],
      "op": "REVERT",
      "path": "18"
    },
    "1620": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        16422,
        16498
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1621": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        16523,
        16527
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1622": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        16518,
        16521
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1623": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        16511,
        16528
      ],
      "op": "RETURN",
      "path": "18"
    },
    "1624": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        14835,
        15720
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1625": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        15132,
        15145
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x2"
    },
    "1627": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        15132,
        15145
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1628": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        15172,
        15437
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1630": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        15172,
        15437
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1631": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        15052,
        15066
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1633": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        15052,
        15066
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1634": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        15052,
        15066
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1635": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        15052,
        15066
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1636": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        15052,
        15066
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1637": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        15052,
        15066
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1642": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1644": {
      "op": "SHL"
    },
    "1645": {
      "op": "SUB"
    },
    "1646": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        15132,
        15145
      ],
      "op": "AND",
      "path": "18"
    },
    "1647": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        15132,
        15145
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1648": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        15172,
        15437
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x685"
    },
    "1651": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        15172,
        15437
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1652": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        15289,
        15301
      ],
      "op": "DUP11",
      "path": "18"
    },
    "1653": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        15289,
        15301
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1654": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        15320,
        15331
      ],
      "op": "DUP11",
      "path": "18"
    },
    "1655": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        15320,
        15331
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1656": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        15350,
        15363
      ],
      "op": "DUP11",
      "path": "18"
    },
    "1657": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        15350,
        15363
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1658": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        15382,
        15394
      ],
      "op": "DUP11",
      "path": "18"
    },
    "1659": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        15382,
        15394
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1660": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        15413,
        15423
      ],
      "op": "DUP11",
      "path": "18"
    },
    "1661": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        15413,
        15423
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1662": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        15172,
        15437
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "1664": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        15172,
        15437
      ],
      "op": "ADD",
      "path": "18"
    },
    "1665": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        15172,
        15437
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x20F7"
    },
    "1668": {
      "fn": "CLHouse.PropSwapERC20",
      "jump": "i",
      "offset": [
        15172,
        15437
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1669": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        15172,
        15437
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1670": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        15172,
        15437
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1672": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        15172,
        15437
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1673": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        15172,
        15437
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1674": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1676": {
      "op": "NOT"
    },
    "1677": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        15172,
        15437
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1678": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        15172,
        15437
      ],
      "op": "DUP5",
      "path": "18"
    },
    "1679": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        15172,
        15437
      ],
      "op": "SUB",
      "path": "18"
    },
    "1680": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        15172,
        15437
      ],
      "op": "ADD",
      "path": "18"
    },
    "1681": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        15172,
        15437
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1682": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        15172,
        15437
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1683": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        15172,
        15437
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1684": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        15172,
        15437
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1685": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        15172,
        15437
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1686": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        15172,
        15437
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1688": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        15172,
        15437
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1689": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        15172,
        15437
      ],
      "op": "ADD",
      "path": "18"
    },
    "1690": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        15172,
        15437
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1691": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        15172,
        15437
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1696": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1698": {
      "op": "SHL"
    },
    "1699": {
      "op": "SUB"
    },
    "1700": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        15172,
        15437
      ],
      "op": "AND",
      "path": "18"
    },
    "1701": {
      "op": "PUSH4",
      "value": "0x152DE3B9"
    },
    "1706": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1708": {
      "op": "SHL"
    },
    "1709": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        15172,
        15437
      ],
      "op": "OR",
      "path": "18"
    },
    "1710": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        15172,
        15437
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1711": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        15172,
        15437
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1712": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        15132,
        15447
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1713": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        15132,
        15447
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5FD"
    },
    "1716": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        15132,
        15447
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1717": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        15172,
        15437
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1718": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        15132,
        15447
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x20DB"
    },
    "1721": {
      "fn": "CLHouse.PropSwapERC20",
      "jump": "i",
      "offset": [
        15132,
        15447
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1722": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        16550,
        17364
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1723": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        16816,
        16829
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x2"
    },
    "1725": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        16816,
        16829
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1726": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        16856,
        17081
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1728": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        16856,
        17081
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1729": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        16736,
        16750
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1731": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        16736,
        16750
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1732": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        16736,
        16750
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1733": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        16736,
        16750
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1734": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        16736,
        16750
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1735": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        16736,
        16750
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1738": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1740": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1742": {
      "op": "SHL"
    },
    "1743": {
      "op": "SUB"
    },
    "1744": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        16816,
        16829
      ],
      "op": "AND",
      "path": "18"
    },
    "1745": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        16816,
        16829
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1746": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        16856,
        17081
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x6E5"
    },
    "1749": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        16856,
        17081
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1750": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        16964,
        16975
      ],
      "op": "DUP10",
      "path": "18"
    },
    "1751": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        16964,
        16975
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1752": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        16994,
        17007
      ],
      "op": "DUP10",
      "path": "18"
    },
    "1753": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        16994,
        17007
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1754": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        17026,
        17038
      ],
      "op": "DUP10",
      "path": "18"
    },
    "1755": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        17026,
        17038
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1756": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        17057,
        17067
      ],
      "op": "DUP10",
      "path": "18"
    },
    "1757": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        17057,
        17067
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1758": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        16856,
        17081
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "1760": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        16856,
        17081
      ],
      "op": "ADD",
      "path": "18"
    },
    "1761": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        16856,
        17081
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x20A3"
    },
    "1764": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "i",
      "offset": [
        16856,
        17081
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1765": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        16856,
        17081
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1766": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        16856,
        17081
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1768": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        16856,
        17081
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1769": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        16856,
        17081
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1770": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1772": {
      "op": "NOT"
    },
    "1773": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        16856,
        17081
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1774": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        16856,
        17081
      ],
      "op": "DUP5",
      "path": "18"
    },
    "1775": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        16856,
        17081
      ],
      "op": "SUB",
      "path": "18"
    },
    "1776": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        16856,
        17081
      ],
      "op": "ADD",
      "path": "18"
    },
    "1777": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        16856,
        17081
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1778": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        16856,
        17081
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1779": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        16856,
        17081
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1780": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        16856,
        17081
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1781": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        16856,
        17081
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1782": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        16856,
        17081
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1784": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        16856,
        17081
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1785": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        16856,
        17081
      ],
      "op": "ADD",
      "path": "18"
    },
    "1786": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        16856,
        17081
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1787": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        16856,
        17081
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1792": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1794": {
      "op": "SHL"
    },
    "1795": {
      "op": "SUB"
    },
    "1796": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        16856,
        17081
      ],
      "op": "AND",
      "path": "18"
    },
    "1797": {
      "op": "PUSH4",
      "value": "0x899B86F"
    },
    "1802": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "1804": {
      "op": "SHL"
    },
    "1805": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        16856,
        17081
      ],
      "op": "OR",
      "path": "18"
    },
    "1806": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        16856,
        17081
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1807": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        16856,
        17081
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1808": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        16816,
        17091
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1809": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        16816,
        17091
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5FD"
    },
    "1812": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        16816,
        17091
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1813": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        16856,
        17081
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1814": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        16816,
        17091
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x20DB"
    },
    "1817": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "i",
      "offset": [
        16816,
        17091
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1818": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        13319,
        13991
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1819": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        13524,
        13537
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x2"
    },
    "1821": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        13524,
        13537
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1822": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        13564,
        13708
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1824": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        13564,
        13708
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1825": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        13451,
        13458
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1827": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        13451,
        13458
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1828": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        13451,
        13458
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1829": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        13451,
        13458
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1830": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        13451,
        13458
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1831": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        13451,
        13458
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1836": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1838": {
      "op": "SHL"
    },
    "1839": {
      "op": "SUB"
    },
    "1840": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        13524,
        13537
      ],
      "op": "AND",
      "path": "18"
    },
    "1841": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        13524,
        13537
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1842": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        13564,
        13708
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x741"
    },
    "1845": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        13564,
        13708
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1846": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        13659,
        13664
      ],
      "op": "DUP8",
      "path": "18"
    },
    "1847": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        13659,
        13664
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1848": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        13682,
        13694
      ],
      "op": "DUP8",
      "path": "18"
    },
    "1849": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        13682,
        13694
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1850": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        13564,
        13708
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "1852": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        13564,
        13708
      ],
      "op": "ADD",
      "path": "18"
    },
    "1853": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        13564,
        13708
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x213C"
    },
    "1856": {
      "fn": "CLHouse.PropRequestToJoin",
      "jump": "i",
      "offset": [
        13564,
        13708
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1857": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        13564,
        13708
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1858": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        13564,
        13708
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1860": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        13564,
        13708
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1861": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        13564,
        13708
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1862": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1864": {
      "op": "NOT"
    },
    "1865": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        13564,
        13708
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1866": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        13564,
        13708
      ],
      "op": "DUP5",
      "path": "18"
    },
    "1867": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        13564,
        13708
      ],
      "op": "SUB",
      "path": "18"
    },
    "1868": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        13564,
        13708
      ],
      "op": "ADD",
      "path": "18"
    },
    "1869": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        13564,
        13708
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1870": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        13564,
        13708
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1871": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        13564,
        13708
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1872": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        13564,
        13708
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1873": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        13564,
        13708
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1874": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        13564,
        13708
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1876": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        13564,
        13708
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1877": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        13564,
        13708
      ],
      "op": "ADD",
      "path": "18"
    },
    "1878": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        13564,
        13708
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1879": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        13564,
        13708
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1880": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1884": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1886": {
      "op": "SHL"
    },
    "1887": {
      "op": "SUB"
    },
    "1888": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        13564,
        13708
      ],
      "op": "AND",
      "path": "18"
    },
    "1889": {
      "op": "PUSH4",
      "value": "0x16137DB7"
    },
    "1894": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1896": {
      "op": "SHL"
    },
    "1897": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        13564,
        13708
      ],
      "op": "OR",
      "path": "18"
    },
    "1898": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        13564,
        13708
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1899": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        13564,
        13708
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1900": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        13524,
        13718
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1901": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        13524,
        13718
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5FD"
    },
    "1904": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        13524,
        13718
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1905": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        13564,
        13708
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1906": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        13524,
        13718
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x20DB"
    },
    "1909": {
      "fn": "CLHouse.PropRequestToJoin",
      "jump": "i",
      "offset": [
        13524,
        13718
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1910": {
      "offset": [
        1323,
        1367
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1911": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        1323,
        1367
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xE"
    },
    "1913": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        1323,
        1367
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1914": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        1323,
        1367
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1915": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        1323,
        1367
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1916": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        1323,
        1367
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1917": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        1323,
        1367
      ],
      "op": "LT",
      "path": "19"
    },
    "1918": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        1323,
        1367
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x786"
    },
    "1921": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        1323,
        1367
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1922": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        1323,
        1367
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1924": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        1323,
        1367
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1925": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        1323,
        1367
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1926": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        1323,
        1367
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1927": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        1323,
        1367
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1929": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        1323,
        1367
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1930": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        1323,
        1367
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1931": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        1323,
        1367
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1932": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        1323,
        1367
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1934": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        1323,
        1367
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1935": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        1323,
        1367
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1936": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        1323,
        1367
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "1937": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        1323,
        1367
      ],
      "op": "ADD",
      "path": "19"
    },
    "1938": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        1323,
        1367
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1939": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        1323,
        1367
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xFF"
    },
    "1941": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        1323,
        1367
      ],
      "op": "AND",
      "path": "19"
    },
    "1942": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        1323,
        1367
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1943": {
      "op": "POP"
    },
    "1944": {
      "offset": [
        1323,
        1367
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1945": {
      "fn": "CLHouse.PropRequestToJoin",
      "jump": "o",
      "offset": [
        1323,
        1367
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1946": {
      "offset": [
        320,
        344
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1947": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1949": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1950": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1951": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x7A7"
    },
    "1954": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1955": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2161"
    },
    "1958": {
      "fn": "CLHouse.PropRequestToJoin",
      "jump": "i",
      "offset": [
        320,
        344
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1959": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1960": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1961": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "1963": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "ADD",
      "path": "19"
    },
    "1964": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1966": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1967": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1968": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "DIV",
      "path": "19"
    },
    "1969": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "MUL",
      "path": "19"
    },
    "1970": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1972": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "ADD",
      "path": "19"
    },
    "1973": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1975": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1976": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1977": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1978": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "ADD",
      "path": "19"
    },
    "1979": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1981": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1982": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1983": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "1984": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1985": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1986": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1987": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1988": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1989": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1991": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "ADD",
      "path": "19"
    },
    "1992": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1993": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1994": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1995": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x7D3"
    },
    "1998": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1999": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2161"
    },
    "2002": {
      "fn": "CLHouse.PropRequestToJoin",
      "jump": "i",
      "offset": [
        320,
        344
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2003": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2004": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2005": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2006": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x820"
    },
    "2009": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2010": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2011": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "2013": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "LT",
      "path": "19"
    },
    "2014": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x7F5"
    },
    "2017": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2018": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x100"
    },
    "2021": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2022": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2023": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2024": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "DIV",
      "path": "19"
    },
    "2025": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "MUL",
      "path": "19"
    },
    "2026": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2027": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2028": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2029": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "2031": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "ADD",
      "path": "19"
    },
    "2032": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2033": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x820"
    },
    "2036": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2037": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2038": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2039": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "ADD",
      "path": "19"
    },
    "2040": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2041": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2042": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2044": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2045": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "2047": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2049": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "2050": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2051": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2052": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2053": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2054": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2055": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2056": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2057": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "2059": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "ADD",
      "path": "19"
    },
    "2060": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2061": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "2063": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "ADD",
      "path": "19"
    },
    "2064": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2065": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2066": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "GT",
      "path": "19"
    },
    "2067": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x803"
    },
    "2070": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2071": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2072": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2073": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "SUB",
      "path": "19"
    },
    "2074": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "2076": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "AND",
      "path": "19"
    },
    "2077": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2078": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "ADD",
      "path": "19"
    },
    "2079": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2080": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2081": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "POP",
      "path": "19"
    },
    "2082": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "POP",
      "path": "19"
    },
    "2083": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "POP",
      "path": "19"
    },
    "2084": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "POP",
      "path": "19"
    },
    "2085": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "POP",
      "path": "19"
    },
    "2086": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        320,
        344
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2087": {
      "fn": "CLHouse.PropRequestToJoin",
      "jump": "o",
      "offset": [
        320,
        344
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2088": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2643,
        3311
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2089": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        2869
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x2"
    },
    "2091": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        2869
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2092": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2896,
        2996
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2094": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2896,
        2996
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2095": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2896,
        2996
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "2097": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2896,
        2996
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2098": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2896,
        2996
      ],
      "op": "ADD",
      "path": "18"
    },
    "2099": {
      "op": "DUP4"
    },
    "2100": {
      "op": "SWAP1"
    },
    "2101": {
      "op": "MSTORE"
    },
    "2102": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2736,
        2747
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2104": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2736,
        2747
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2105": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2761,
        2782
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "2107": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2761,
        2782
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2108": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2736,
        2747
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2109": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2736,
        2747
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2110": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2736,
        2747
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2111": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2736,
        2747
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2114": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2116": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2118": {
      "op": "SHL"
    },
    "2119": {
      "op": "SUB"
    },
    "2120": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        2869
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2121": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        2869
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2122": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        2869
      ],
      "op": "AND",
      "path": "18"
    },
    "2123": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        2869
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2124": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2126": {
      "op": "ADD"
    },
    "2127": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2896,
        2996
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2129": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2896,
        2996
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2130": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2896,
        2996
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2131": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2133": {
      "op": "NOT"
    },
    "2134": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2896,
        2996
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2135": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2896,
        2996
      ],
      "op": "DUP5",
      "path": "18"
    },
    "2136": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2896,
        2996
      ],
      "op": "SUB",
      "path": "18"
    },
    "2137": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2896,
        2996
      ],
      "op": "ADD",
      "path": "18"
    },
    "2138": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2896,
        2996
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2139": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2896,
        2996
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2140": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2896,
        2996
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2141": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2896,
        2996
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2142": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2896,
        2996
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2143": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2896,
        2996
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2145": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2896,
        2996
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2146": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2896,
        2996
      ],
      "op": "ADD",
      "path": "18"
    },
    "2147": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2896,
        2996
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2148": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2896,
        2996
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2149": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2151": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2153": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2155": {
      "op": "SHL"
    },
    "2156": {
      "op": "SUB"
    },
    "2157": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2896,
        2996
      ],
      "op": "AND",
      "path": "18"
    },
    "2158": {
      "op": "PUSH4",
      "value": "0x4EEB7B85"
    },
    "2163": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2165": {
      "op": "SHL"
    },
    "2166": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2896,
        2996
      ],
      "op": "OR",
      "path": "18"
    },
    "2167": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2896,
        2996
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2168": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2896,
        2996
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2169": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        3006
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2170": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        3006
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x883"
    },
    "2173": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        3006
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2174": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2896,
        2996
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2175": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        3006
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x20DB"
    },
    "2178": {
      "fn": "CLHouse.ExecProp",
      "jump": "i",
      "offset": [
        2856,
        3006
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2179": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        3006
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2180": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        3006
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2182": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        3006
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2184": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        3006
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2185": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        3006
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2186": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        3006
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2187": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        3006
      ],
      "op": "SUB",
      "path": "18"
    },
    "2188": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        3006
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2189": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        3006
      ],
      "op": "DUP6",
      "path": "18"
    },
    "2190": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        3006
      ],
      "op": "GAS",
      "path": "18"
    },
    "2191": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        3006
      ],
      "op": "DELEGATECALL",
      "path": "18"
    },
    "2192": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        3006
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2193": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        3006
      ],
      "op": "POP",
      "path": "18"
    },
    "2194": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        3006
      ],
      "op": "POP",
      "path": "18"
    },
    "2195": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        3006
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "2196": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        3006
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2197": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        3006
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2199": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        3006
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2200": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        3006
      ],
      "op": "EQ",
      "path": "18"
    },
    "2201": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        3006
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x8BE"
    },
    "2204": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        3006
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2205": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        3006
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2207": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        3006
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2208": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        3006
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2209": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        3006
      ],
      "op": "POP",
      "path": "18"
    },
    "2210": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        3006
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "2212": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        3006
      ],
      "op": "NOT",
      "path": "18"
    },
    "2213": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        3006
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3F"
    },
    "2215": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        3006
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "2216": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        3006
      ],
      "op": "ADD",
      "path": "18"
    },
    "2217": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        3006
      ],
      "op": "AND",
      "path": "18"
    },
    "2218": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        3006
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2219": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        3006
      ],
      "op": "ADD",
      "path": "18"
    },
    "2220": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        3006
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2222": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        3006
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2223": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        3006
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "2224": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        3006
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2225": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        3006
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2226": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        3006
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "2227": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        3006
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2229": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        3006
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2231": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        3006
      ],
      "op": "DUP5",
      "path": "18"
    },
    "2232": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        3006
      ],
      "op": "ADD",
      "path": "18"
    },
    "2233": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        3006
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "2234": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        3006
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x8C3"
    },
    "2237": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        3006
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2238": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        3006
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2239": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        3006
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "2241": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        3006
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2242": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        3006
      ],
      "op": "POP",
      "path": "18"
    },
    "2243": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        3006
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2244": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2856,
        3006
      ],
      "op": "POP",
      "path": "18"
    },
    "2245": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2807,
        3006
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2246": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2807,
        3006
      ],
      "op": "POP",
      "path": "18"
    },
    "2247": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2807,
        3006
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2248": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2807,
        3006
      ],
      "op": "POP",
      "path": "18"
    },
    "2249": {
      "branch": 21,
      "fn": "CLHouse.ExecProp",
      "offset": [
        3022,
        3035
      ],
      "op": "DUP2",
      "path": "18",
      "statement": 1
    },
    "2250": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3017,
        3249
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x8DA"
    },
    "2253": {
      "branch": 21,
      "fn": "CLHouse.ExecProp",
      "offset": [
        3017,
        3249
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2254": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3096,
        3100
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2256": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3090,
        3101
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2257": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3130,
        3146
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "2258": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3186,
        3190
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2259": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3183,
        3184
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2261": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3178,
        3181
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2262": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3163,
        3191
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "2263": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3220,
        3224
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2264": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3215,
        3218
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2265": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3208,
        3225
      ],
      "op": "REVERT",
      "path": "18"
    },
    "2266": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3017,
        3249
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2267": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3268,
        3272
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 2,
      "value": "0x1"
    },
    "2269": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3259,
        3304
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2271": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3259,
        3304
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2272": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3259,
        3304
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2273": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3259,
        3304
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2275": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3259,
        3304
      ],
      "op": "ADD",
      "path": "18"
    },
    "2276": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3259,
        3304
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2278": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3259,
        3304
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2279": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3259,
        3304
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2280": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3259,
        3304
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x19"
    },
    "2282": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3259,
        3304
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2283": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3259,
        3304
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2284": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3259,
        3304
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2286": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3259,
        3304
      ],
      "op": "ADD",
      "path": "18"
    },
    "2287": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3259,
        3304
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x537563636573732065786563757465642070726F706F73616C00000000000000"
    },
    "2320": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3259,
        3304
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2321": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3259,
        3304
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2322": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3259,
        3304
      ],
      "op": "POP",
      "path": "18"
    },
    "2323": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3259,
        3304
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "2324": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3259,
        3304
      ],
      "op": "POP",
      "path": "18"
    },
    "2325": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3259,
        3304
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "2326": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3259,
        3304
      ],
      "op": "POP",
      "path": "18"
    },
    "2327": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3259,
        3304
      ],
      "op": "POP",
      "path": "18"
    },
    "2328": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3259,
        3304
      ],
      "op": "POP",
      "path": "18"
    },
    "2329": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2643,
        3311
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2330": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2643,
        3311
      ],
      "op": "POP",
      "path": "18"
    },
    "2331": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2643,
        3311
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2332": {
      "fn": "CLHouse.ExecProp",
      "jump": "o",
      "offset": [
        2643,
        3311
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2333": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4363,
        7211
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2334": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4607,
        4611
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2336": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4628,
        4643
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2337": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4646,
        4659
      ],
      "op": "CHAINID",
      "path": "18"
    },
    "2338": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4628,
        4659
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2339": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4628,
        4659
      ],
      "op": "POP",
      "path": "18"
    },
    "2340": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4670,
        4694
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2342": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4758,
        4898
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2344": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4758,
        4898
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2345": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4758,
        4898
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2347": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4758,
        4898
      ],
      "op": "ADD",
      "path": "18"
    },
    "2348": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4758,
        4898
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x999"
    },
    "2351": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4758,
        4898
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2352": {
      "op": "PUSH32",
      "value": "0x454950373132446F6D61696E28737472696E67206E616D652C737472696E6720"
    },
    "2385": {
      "op": "DUP2"
    },
    "2386": {
      "op": "MSTORE"
    },
    "2387": {
      "op": "PUSH32",
      "value": "0x76657273696F6E2C75696E7432353620636861696E49642C6164647265737320"
    },
    "2420": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2422": {
      "op": "DUP3"
    },
    "2423": {
      "op": "ADD"
    },
    "2424": {
      "op": "MSTORE"
    },
    "2425": {
      "op": "PUSH18",
      "value": "0x766572696679696E67436F6E747261637429"
    },
    "2444": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "2446": {
      "op": "SHL"
    },
    "2447": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2449": {
      "op": "DUP3"
    },
    "2450": {
      "op": "ADD"
    },
    "2451": {
      "op": "MSTORE"
    },
    "2452": {
      "op": "PUSH1",
      "value": "0x52"
    },
    "2454": {
      "op": "ADD"
    },
    "2455": {
      "op": "SWAP1"
    },
    "2456": {
      "op": "JUMP"
    },
    "2457": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4758,
        4898
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2458": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4758,
        4898
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2460": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4758,
        4898
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2461": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4758,
        4898
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2462": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2464": {
      "op": "NOT"
    },
    "2465": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4758,
        4898
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2466": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4758,
        4898
      ],
      "op": "DUP5",
      "path": "18"
    },
    "2467": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4758,
        4898
      ],
      "op": "SUB",
      "path": "18"
    },
    "2468": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4758,
        4898
      ],
      "op": "ADD",
      "path": "18"
    },
    "2469": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4758,
        4898
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2470": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4758,
        4898
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2471": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4758,
        4898
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2472": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4758,
        4898
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2473": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4758,
        4898
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2474": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4748,
        4899
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2475": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4748,
        4899
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2476": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4758,
        4898
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2478": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4748,
        4899
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2479": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4748,
        4899
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2480": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4748,
        4899
      ],
      "op": "ADD",
      "path": "18"
    },
    "2481": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4748,
        4899
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "2482": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4720,
        5044
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2483": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4720,
        5044
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2484": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4720,
        5044
      ],
      "op": "ADD",
      "path": "18"
    },
    "2485": {
      "op": "MSTORE"
    },
    "2486": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4917,
        4937
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x1318895AF1F6DB161B2BA745B8E57A6B46EFAD77D736630379EC69C3CD4C875"
    },
    "2519": {
      "op": "SWAP1"
    },
    "2520": {
      "op": "DUP3"
    },
    "2521": {
      "op": "ADD"
    },
    "2522": {
      "op": "MSTORE"
    },
    "2523": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4955,
        4974
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x7EF8EC374E43C85C540DA8F69DE7866F66E96DEB3AA6B597DF20E0FF3CE0C64"
    },
    "2556": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2558": {
      "op": "DUP3"
    },
    "2559": {
      "op": "ADD"
    },
    "2560": {
      "op": "MSTORE"
    },
    "2561": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2563": {
      "op": "DUP2"
    },
    "2564": {
      "op": "ADD"
    },
    "2565": {
      "op": "DUP4"
    },
    "2566": {
      "op": "SWAP1"
    },
    "2567": {
      "op": "MSTORE"
    },
    "2568": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5025,
        5029
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "2569": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2571": {
      "op": "DUP3"
    },
    "2572": {
      "op": "ADD"
    },
    "2573": {
      "op": "MSTORE"
    },
    "2574": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "2576": {
      "op": "ADD"
    },
    "2577": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4720,
        5044
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2579": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4720,
        5044
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2580": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4720,
        5044
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2582": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4720,
        5044
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2583": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4720,
        5044
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2584": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4720,
        5044
      ],
      "op": "SUB",
      "path": "18"
    },
    "2585": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4720,
        5044
      ],
      "op": "SUB",
      "path": "18"
    },
    "2586": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4720,
        5044
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2587": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4720,
        5044
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2588": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4720,
        5044
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2589": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4720,
        5044
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2591": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4720,
        5044
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2592": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4697,
        5054
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2593": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4697,
        5054
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2594": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4697,
        5054
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2595": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4697,
        5054
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2597": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4697,
        5054
      ],
      "op": "ADD",
      "path": "18"
    },
    "2598": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4697,
        5054
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "2599": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4670,
        5054
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2600": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4670,
        5054
      ],
      "op": "POP",
      "path": "18"
    },
    "2601": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5065,
        5083
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2603": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5147,
        5284
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2605": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5147,
        5284
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2606": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5147,
        5284
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2608": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5147,
        5284
      ],
      "op": "ADD",
      "path": "18"
    },
    "2609": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5147,
        5284
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA9B"
    },
    "2612": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5147,
        5284
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2613": {
      "op": "PUSH32",
      "value": "0x7374724F6666436861696E566F7465286164647265737320766F7465722C7569"
    },
    "2646": {
      "op": "DUP2"
    },
    "2647": {
      "op": "MSTORE"
    },
    "2648": {
      "op": "PUSH32",
      "value": "0x6E743235362070726F7049642C626F6F6C20737570706F72742C737472696E67"
    },
    "2681": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2683": {
      "op": "DUP3"
    },
    "2684": {
      "op": "ADD"
    },
    "2685": {
      "op": "MSTORE"
    },
    "2686": {
      "op": "PUSH15",
      "value": "0x206A757374696669636174696F6E29"
    },
    "2702": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "2704": {
      "op": "SHL"
    },
    "2705": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2707": {
      "op": "DUP3"
    },
    "2708": {
      "op": "ADD"
    },
    "2709": {
      "op": "MSTORE"
    },
    "2710": {
      "op": "PUSH1",
      "value": "0x4F"
    },
    "2712": {
      "op": "ADD"
    },
    "2713": {
      "op": "SWAP1"
    },
    "2714": {
      "op": "JUMP"
    },
    "2715": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5147,
        5284
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2716": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5147,
        5284
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2718": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5147,
        5284
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2719": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5147,
        5284
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2721": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5147,
        5284
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2722": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5147,
        5284
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2723": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5147,
        5284
      ],
      "op": "SUB",
      "path": "18"
    },
    "2724": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5147,
        5284
      ],
      "op": "SUB",
      "path": "18"
    },
    "2725": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5147,
        5284
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2726": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5147,
        5284
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2727": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5147,
        5284
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2728": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5147,
        5284
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2730": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5147,
        5284
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2731": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5137,
        5285
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2732": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5137,
        5285
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2733": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5137,
        5285
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2734": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5137,
        5285
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2736": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5137,
        5285
      ],
      "op": "ADD",
      "path": "18"
    },
    "2737": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5137,
        5285
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "2738": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5303,
        5309
      ],
      "op": "DUP12",
      "path": "18"
    },
    "2739": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5327,
        5334
      ],
      "op": "DUP12",
      "path": "18"
    },
    "2740": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5352,
        5360
      ],
      "op": "DUP12",
      "path": "18"
    },
    "2741": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5405,
        5419
      ],
      "op": "DUP12",
      "path": "18"
    },
    "2742": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5388,
        5420
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2744": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5388,
        5420
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2745": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5388,
        5420
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2747": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5388,
        5420
      ],
      "op": "ADD",
      "path": "18"
    },
    "2748": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5388,
        5420
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xAC5"
    },
    "2751": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5388,
        5420
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2752": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5388,
        5420
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2753": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5388,
        5420
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x20DB"
    },
    "2756": {
      "fn": "CLHouse.VotePropOffChain",
      "jump": "i",
      "offset": [
        5388,
        5420
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2757": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5388,
        5420
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2758": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5388,
        5420
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2760": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5388,
        5420
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2761": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5388,
        5420
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2763": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5388,
        5420
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2764": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5388,
        5420
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2765": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5388,
        5420
      ],
      "op": "SUB",
      "path": "18"
    },
    "2766": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5388,
        5420
      ],
      "op": "SUB",
      "path": "18"
    },
    "2767": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5388,
        5420
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2768": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5388,
        5420
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2769": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5388,
        5420
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2770": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5388,
        5420
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2772": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5388,
        5420
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2773": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5378,
        5421
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2774": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5378,
        5421
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2775": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5378,
        5421
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2776": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5378,
        5421
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2778": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5378,
        5421
      ],
      "op": "ADD",
      "path": "18"
    },
    "2779": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5378,
        5421
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "2780": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5109,
        5435
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2782": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5109,
        5435
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2783": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5109,
        5435
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2785": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5109,
        5435
      ],
      "op": "ADD",
      "path": "18"
    },
    "2786": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5109,
        5435
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB18"
    },
    "2789": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5109,
        5435
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "2790": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5109,
        5435
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "2791": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5109,
        5435
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "2792": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5109,
        5435
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "2793": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5109,
        5435
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2794": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5109,
        5435
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2795": {
      "op": "SWAP5"
    },
    "2796": {
      "op": "DUP6"
    },
    "2797": {
      "op": "MSTORE"
    },
    "2798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2800": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2802": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2804": {
      "op": "SHL"
    },
    "2805": {
      "op": "SUB"
    },
    "2806": {
      "op": "SWAP4"
    },
    "2807": {
      "op": "SWAP1"
    },
    "2808": {
      "op": "SWAP4"
    },
    "2809": {
      "op": "AND"
    },
    "2810": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2812": {
      "op": "DUP6"
    },
    "2813": {
      "op": "ADD"
    },
    "2814": {
      "op": "MSTORE"
    },
    "2815": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2817": {
      "op": "DUP5"
    },
    "2818": {
      "op": "ADD"
    },
    "2819": {
      "op": "SWAP2"
    },
    "2820": {
      "op": "SWAP1"
    },
    "2821": {
      "op": "SWAP2"
    },
    "2822": {
      "op": "MSTORE"
    },
    "2823": {
      "op": "ISZERO"
    },
    "2824": {
      "op": "ISZERO"
    },
    "2825": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2827": {
      "op": "DUP4"
    },
    "2828": {
      "op": "ADD"
    },
    "2829": {
      "op": "MSTORE"
    },
    "2830": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2832": {
      "op": "DUP3"
    },
    "2833": {
      "op": "ADD"
    },
    "2834": {
      "op": "MSTORE"
    },
    "2835": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2837": {
      "op": "ADD"
    },
    "2838": {
      "op": "SWAP1"
    },
    "2839": {
      "op": "JUMP"
    },
    "2840": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5109,
        5435
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2841": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5109,
        5435
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2843": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5109,
        5435
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2844": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5109,
        5435
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2846": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5109,
        5435
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2847": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5109,
        5435
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2848": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5109,
        5435
      ],
      "op": "SUB",
      "path": "18"
    },
    "2849": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5109,
        5435
      ],
      "op": "SUB",
      "path": "18"
    },
    "2850": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5109,
        5435
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2851": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5109,
        5435
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2852": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5109,
        5435
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2853": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5109,
        5435
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2855": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5109,
        5435
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2856": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5086,
        5445
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2857": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5086,
        5445
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2858": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5086,
        5445
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2859": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5086,
        5445
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2861": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5086,
        5445
      ],
      "op": "ADD",
      "path": "18"
    },
    "2862": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5086,
        5445
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "2863": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5065,
        5445
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2864": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5065,
        5445
      ],
      "op": "POP",
      "path": "18"
    },
    "2865": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5464,
        5480
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2867": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5522,
        5538
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2868": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5540,
        5550
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2869": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5493,
        5551
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2871": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5493,
        5551
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2872": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5493,
        5551
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2874": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5493,
        5551
      ],
      "op": "ADD",
      "path": "18"
    },
    "2875": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5493,
        5551
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB5B"
    },
    "2878": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5493,
        5551
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "2879": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5493,
        5551
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2880": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5493,
        5551
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2881": {
      "op": "PUSH2",
      "value": "0x1901"
    },
    "2884": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "2886": {
      "op": "SHL"
    },
    "2887": {
      "op": "DUP2"
    },
    "2888": {
      "op": "MSTORE"
    },
    "2889": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2891": {
      "op": "DUP2"
    },
    "2892": {
      "op": "ADD"
    },
    "2893": {
      "op": "SWAP3"
    },
    "2894": {
      "op": "SWAP1"
    },
    "2895": {
      "op": "SWAP3"
    },
    "2896": {
      "op": "MSTORE"
    },
    "2897": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "2899": {
      "op": "DUP3"
    },
    "2900": {
      "op": "ADD"
    },
    "2901": {
      "op": "MSTORE"
    },
    "2902": {
      "op": "PUSH1",
      "value": "0x42"
    },
    "2904": {
      "op": "ADD"
    },
    "2905": {
      "op": "SWAP1"
    },
    "2906": {
      "op": "JUMP"
    },
    "2907": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5493,
        5551
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2908": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5493,
        5551
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2910": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5493,
        5551
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2911": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5493,
        5551
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2912": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2914": {
      "op": "NOT"
    },
    "2915": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5493,
        5551
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2916": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5493,
        5551
      ],
      "op": "DUP5",
      "path": "18"
    },
    "2917": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5493,
        5551
      ],
      "op": "SUB",
      "path": "18"
    },
    "2918": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5493,
        5551
      ],
      "op": "ADD",
      "path": "18"
    },
    "2919": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5493,
        5551
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2920": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5493,
        5551
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2921": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5493,
        5551
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2922": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5493,
        5551
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2923": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5493,
        5551
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2924": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5483,
        5552
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2925": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5483,
        5552
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2926": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5493,
        5551
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2928": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5483,
        5552
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2929": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5483,
        5552
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2930": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5483,
        5552
      ],
      "op": "ADD",
      "path": "18"
    },
    "2931": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5483,
        5552
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "2932": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6094,
        6108
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2934": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6111,
        6153
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2935": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6111,
        6153
      ],
      "op": "DUP6",
      "path": "18"
    },
    "2936": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6111,
        6153
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2937": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6111,
        6153
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2938": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6111,
        6153
      ],
      "op": "DUP5",
      "path": "18"
    },
    "2939": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6111,
        6153
      ],
      "op": "ADD",
      "path": "18"
    },
    "2940": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6111,
        6153
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2941": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6111,
        6153
      ],
      "op": "DUP5",
      "path": "18"
    },
    "2942": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6111,
        6153
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2943": {
      "op": "DUP2"
    },
    "2944": {
      "op": "SWAP1"
    },
    "2945": {
      "op": "MSTORE"
    },
    "2946": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2948": {
      "op": "DUP11"
    },
    "2949": {
      "op": "AND"
    },
    "2950": {
      "op": "SWAP3"
    },
    "2951": {
      "op": "DUP5"
    },
    "2952": {
      "op": "ADD"
    },
    "2953": {
      "op": "SWAP3"
    },
    "2954": {
      "op": "SWAP1"
    },
    "2955": {
      "op": "SWAP3"
    },
    "2956": {
      "op": "MSTORE"
    },
    "2957": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2959": {
      "op": "DUP4"
    },
    "2960": {
      "op": "ADD"
    },
    "2961": {
      "op": "DUP12"
    },
    "2962": {
      "op": "SWAP1"
    },
    "2963": {
      "op": "MSTORE"
    },
    "2964": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2966": {
      "op": "DUP4"
    },
    "2967": {
      "op": "ADD"
    },
    "2968": {
      "op": "DUP11"
    },
    "2969": {
      "op": "SWAP1"
    },
    "2970": {
      "op": "MSTORE"
    },
    "2971": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5483,
        5552
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2972": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        5483,
        5552
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "2973": {
      "op": "POP"
    },
    "2974": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6094,
        6108
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2975": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6111,
        6153
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "2977": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6111,
        6153
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2978": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2980": {
      "op": "ADD"
    },
    "2981": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6111,
        6153
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2983": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6111,
        6153
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2985": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6111,
        6153
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2986": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6111,
        6153
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2988": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6111,
        6153
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2989": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6111,
        6153
      ],
      "op": "SUB",
      "path": "18"
    },
    "2990": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6111,
        6153
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2991": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6111,
        6153
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2992": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6111,
        6153
      ],
      "op": "DUP5",
      "path": "18"
    },
    "2993": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6111,
        6153
      ],
      "op": "SUB",
      "path": "18"
    },
    "2994": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6111,
        6153
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2995": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6111,
        6153
      ],
      "op": "DUP6",
      "path": "18"
    },
    "2996": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6111,
        6153
      ],
      "op": "GAS",
      "path": "18"
    },
    "2997": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6111,
        6153
      ],
      "op": "STATICCALL",
      "path": "18"
    },
    "2998": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6111,
        6153
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2999": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6111,
        6153
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3000": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6111,
        6153
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3001": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6111,
        6153
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xBC6"
    },
    "3004": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6111,
        6153
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3005": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6111,
        6153
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "3006": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6111,
        6153
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3008": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6111,
        6153
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3009": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6111,
        6153
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "3010": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6111,
        6153
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "3011": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6111,
        6153
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3013": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6111,
        6153
      ],
      "op": "REVERT",
      "path": "18"
    },
    "3014": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6111,
        6153
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3015": {
      "op": "POP"
    },
    "3016": {
      "op": "POP"
    },
    "3017": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6111,
        6153
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3019": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6111,
        6153
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3020": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3022": {
      "op": "NOT"
    },
    "3023": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6111,
        6153
      ],
      "op": "ADD",
      "path": "18"
    },
    "3024": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6111,
        6153
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3025": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6111,
        6153
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3026": {
      "op": "POP"
    },
    "3027": {
      "op": "POP"
    },
    "3028": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3030": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3032": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3034": {
      "op": "SHL"
    },
    "3035": {
      "op": "SUB"
    },
    "3036": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6173,
        6193
      ],
      "op": "DUP2",
      "path": "18",
      "statement": 3
    },
    "3037": {
      "branch": 22,
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6173,
        6193
      ],
      "op": "AND",
      "path": "18"
    },
    "3038": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6164,
        6223
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC2E"
    },
    "3041": {
      "branch": 22,
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6164,
        6223
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3042": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6164,
        6223
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3044": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6164,
        6223
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3045": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3049": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3051": {
      "op": "SHL"
    },
    "3052": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6164,
        6223
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3053": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6164,
        6223
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3054": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3056": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6164,
        6223
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "3058": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6164,
        6223
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3059": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6164,
        6223
      ],
      "op": "ADD",
      "path": "18"
    },
    "3060": {
      "op": "MSTORE"
    },
    "3061": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "3063": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3065": {
      "op": "DUP3"
    },
    "3066": {
      "op": "ADD"
    },
    "3067": {
      "op": "MSTORE"
    },
    "3068": {
      "op": "PUSH32",
      "value": "0x45434453413A20696E76616C6964207369676E61747572650000000000000000"
    },
    "3101": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3103": {
      "op": "DUP3"
    },
    "3104": {
      "op": "ADD"
    },
    "3105": {
      "op": "MSTORE"
    },
    "3106": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3108": {
      "op": "ADD"
    },
    "3109": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6164,
        6223
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3110": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6164,
        6223
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3112": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6164,
        6223
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3113": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6164,
        6223
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3114": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6164,
        6223
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3115": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6164,
        6223
      ],
      "op": "SUB",
      "path": "18"
    },
    "3116": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6164,
        6223
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3117": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6164,
        6223
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "18"
    },
    "3118": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6164,
        6223
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3119": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6252,
        6258
      ],
      "op": "DUP13",
      "path": "18",
      "statement": 4
    },
    "3120": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3122": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3124": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3126": {
      "op": "SHL"
    },
    "3127": {
      "op": "SUB"
    },
    "3128": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6242,
        6258
      ],
      "op": "AND",
      "path": "18"
    },
    "3129": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6242,
        6248
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3130": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3134": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3136": {
      "op": "SHL"
    },
    "3137": {
      "op": "SUB"
    },
    "3138": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6242,
        6258
      ],
      "op": "AND",
      "path": "18"
    },
    "3139": {
      "branch": 23,
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6242,
        6258
      ],
      "op": "EQ",
      "path": "18"
    },
    "3140": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6233,
        6299
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC9B"
    },
    "3143": {
      "branch": 23,
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6233,
        6299
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3144": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6233,
        6299
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3146": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6233,
        6299
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3147": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3151": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3153": {
      "op": "SHL"
    },
    "3154": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6233,
        6299
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3155": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6233,
        6299
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3156": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3158": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6233,
        6299
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "3160": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6233,
        6299
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3161": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6233,
        6299
      ],
      "op": "ADD",
      "path": "18"
    },
    "3162": {
      "op": "MSTORE"
    },
    "3163": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "3165": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3167": {
      "op": "DUP3"
    },
    "3168": {
      "op": "ADD"
    },
    "3169": {
      "op": "MSTORE"
    },
    "3170": {
      "op": "PUSH32",
      "value": "0x566F746550726F704F6666436861696E3A20696E76616C6964207369676E6174"
    },
    "3203": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3205": {
      "op": "DUP3"
    },
    "3206": {
      "op": "ADD"
    },
    "3207": {
      "op": "MSTORE"
    },
    "3208": {
      "op": "PUSH3",
      "value": "0x757265"
    },
    "3212": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "3214": {
      "op": "SHL"
    },
    "3215": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3217": {
      "op": "DUP3"
    },
    "3218": {
      "op": "ADD"
    },
    "3219": {
      "op": "MSTORE"
    },
    "3220": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3222": {
      "op": "ADD"
    },
    "3223": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6233,
        6299
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC25"
    },
    "3226": {
      "op": "JUMP"
    },
    "3227": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6233,
        6299
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3228": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6328,
        6340
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 5,
      "value": "0xB"
    },
    "3230": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6328,
        6347
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3231": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6318,
        6347
      ],
      "op": "DUP13",
      "path": "18"
    },
    "3232": {
      "branch": 24,
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6318,
        6347
      ],
      "op": "LT",
      "path": "18"
    },
    "3233": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6309,
        6377
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xCEC"
    },
    "3236": {
      "branch": 24,
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6309,
        6377
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3237": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6309,
        6377
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3239": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6309,
        6377
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3240": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3244": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3246": {
      "op": "SHL"
    },
    "3247": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6309,
        6377
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3248": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6309,
        6377
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3249": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3251": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6309,
        6377
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "3253": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6309,
        6377
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3254": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6309,
        6377
      ],
      "op": "ADD",
      "path": "18"
    },
    "3255": {
      "op": "MSTORE"
    },
    "3256": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "3258": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3260": {
      "op": "DUP3"
    },
    "3261": {
      "op": "ADD"
    },
    "3262": {
      "op": "MSTORE"
    },
    "3263": {
      "op": "PUSH32",
      "value": "0x50726F706F73616C20646F6573206E6F74206578697374000000000000000000"
    },
    "3296": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3298": {
      "op": "DUP3"
    },
    "3299": {
      "op": "ADD"
    },
    "3300": {
      "op": "MSTORE"
    },
    "3301": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3303": {
      "op": "ADD"
    },
    "3304": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6309,
        6377
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC25"
    },
    "3307": {
      "op": "JUMP"
    },
    "3308": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6309,
        6377
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3309": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6405,
        6417
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 6,
      "value": "0xB"
    },
    "3311": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6419,
        6426
      ],
      "op": "DUP13",
      "path": "18"
    },
    "3312": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6405,
        6428
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3313": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6405,
        6428
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3314": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6405,
        6428
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3315": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6405,
        6428
      ],
      "op": "LT",
      "path": "18"
    },
    "3316": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6405,
        6428
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xCFF"
    },
    "3319": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6405,
        6428
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3320": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6405,
        6428
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xCFF"
    },
    "3323": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6405,
        6428
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x219C"
    },
    "3326": {
      "fn": "CLHouse.VotePropOffChain",
      "jump": "i",
      "offset": [
        6405,
        6428
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3327": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6405,
        6428
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3328": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6405,
        6428
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3330": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6405,
        6428
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3331": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6405,
        6428
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3332": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6405,
        6428
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3333": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6405,
        6428
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3335": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6405,
        6428
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3336": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6405,
        6428
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3337": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6405,
        6428
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "3338": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6405,
        6428
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x5"
    },
    "3340": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6405,
        6428
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3341": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6405,
        6428
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3342": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6405,
        6428
      ],
      "op": "MUL",
      "path": "18"
    },
    "3343": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6405,
        6428
      ],
      "op": "ADD",
      "path": "18"
    },
    "3344": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6405,
        6437
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "3346": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6405,
        6437
      ],
      "op": "ADD",
      "path": "18"
    },
    "3347": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6405,
        6437
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3348": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6405,
        6437
      ],
      "op": "PUSH3",
      "path": "18",
      "value": "0x10000"
    },
    "3352": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6405,
        6437
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3353": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6405,
        6437
      ],
      "op": "DIV",
      "path": "18"
    },
    "3354": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6405,
        6437
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "3356": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6405,
        6437
      ],
      "op": "AND",
      "path": "18"
    },
    "3357": {
      "branch": 25,
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6396,
        6437
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3358": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6387,
        6469
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xD69"
    },
    "3361": {
      "branch": 25,
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6387,
        6469
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3362": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6387,
        6469
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3364": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6387,
        6469
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3365": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3369": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3371": {
      "op": "SHL"
    },
    "3372": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6387,
        6469
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3373": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6387,
        6469
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3374": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3376": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6387,
        6469
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "3378": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6387,
        6469
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3379": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6387,
        6469
      ],
      "op": "ADD",
      "path": "18"
    },
    "3380": {
      "op": "MSTORE"
    },
    "3381": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "3383": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3385": {
      "op": "DUP3"
    },
    "3386": {
      "op": "ADD"
    },
    "3387": {
      "op": "MSTORE"
    },
    "3388": {
      "op": "PUSH32",
      "value": "0x50726F706F73616C20616C726561647920657865637574656400000000000000"
    },
    "3421": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3423": {
      "op": "DUP3"
    },
    "3424": {
      "op": "ADD"
    },
    "3425": {
      "op": "MSTORE"
    },
    "3426": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3428": {
      "op": "ADD"
    },
    "3429": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6387,
        6469
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC25"
    },
    "3432": {
      "op": "JUMP"
    },
    "3433": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6387,
        6469
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3434": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6497,
        6509
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 7,
      "value": "0xB"
    },
    "3436": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6511,
        6518
      ],
      "op": "DUP13",
      "path": "18"
    },
    "3437": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6497,
        6520
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3438": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6497,
        6520
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3439": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6497,
        6520
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3440": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6497,
        6520
      ],
      "op": "LT",
      "path": "18"
    },
    "3441": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6497,
        6520
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xD7C"
    },
    "3444": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6497,
        6520
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3445": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6497,
        6520
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xD7C"
    },
    "3448": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6497,
        6520
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x219C"
    },
    "3451": {
      "fn": "CLHouse.VotePropOffChain",
      "jump": "i",
      "offset": [
        6497,
        6520
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3452": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6497,
        6520
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3453": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6497,
        6520
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3455": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6497,
        6520
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3456": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6497,
        6520
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3457": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6497,
        6520
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3458": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6497,
        6520
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3460": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6497,
        6520
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3461": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6497,
        6520
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3462": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6497,
        6520
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "3463": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6497,
        6520
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x5"
    },
    "3465": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6497,
        6520
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3466": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6497,
        6520
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3467": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6497,
        6520
      ],
      "op": "MUL",
      "path": "18"
    },
    "3468": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6497,
        6520
      ],
      "op": "ADD",
      "path": "18"
    },
    "3469": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6497,
        6529
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "3471": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6497,
        6529
      ],
      "op": "ADD",
      "path": "18"
    },
    "3472": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6497,
        6529
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3473": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6497,
        6529
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x1000000"
    },
    "3478": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6497,
        6529
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3479": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6497,
        6529
      ],
      "op": "DIV",
      "path": "18"
    },
    "3480": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6497,
        6529
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "3482": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6497,
        6529
      ],
      "op": "AND",
      "path": "18"
    },
    "3483": {
      "branch": 26,
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6488,
        6529
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3484": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6479,
        6557
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xDDF"
    },
    "3487": {
      "branch": 26,
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6479,
        6557
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3488": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6479,
        6557
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3490": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6479,
        6557
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3491": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3495": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3497": {
      "op": "SHL"
    },
    "3498": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6479,
        6557
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3499": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6479,
        6557
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3500": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3502": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6479,
        6557
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "3504": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6479,
        6557
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3505": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6479,
        6557
      ],
      "op": "ADD",
      "path": "18"
    },
    "3506": {
      "op": "MSTORE"
    },
    "3507": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "3509": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3511": {
      "op": "DUP3"
    },
    "3512": {
      "op": "ADD"
    },
    "3513": {
      "op": "MSTORE"
    },
    "3514": {
      "op": "PUSH21",
      "value": "0x141C9BDC1BDCD85B081DD85CC81C995A9958DD1959"
    },
    "3536": {
      "op": "PUSH1",
      "value": "0x5A"
    },
    "3538": {
      "op": "SHL"
    },
    "3539": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3541": {
      "op": "DUP3"
    },
    "3542": {
      "op": "ADD"
    },
    "3543": {
      "op": "MSTORE"
    },
    "3544": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3546": {
      "op": "ADD"
    },
    "3547": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6479,
        6557
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC25"
    },
    "3550": {
      "op": "JUMP"
    },
    "3551": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6479,
        6557
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3552": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6577,
        6585
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 8,
      "value": "0xA"
    },
    "3554": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6577,
        6596
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3556": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6587,
        6594
      ],
      "op": "DUP14",
      "path": "18"
    },
    "3557": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6577,
        6596
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3558": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6577,
        6596
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3559": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6577,
        6596
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3561": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6577,
        6596
      ],
      "op": "ADD",
      "path": "18"
    },
    "3562": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6577,
        6596
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3563": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6577,
        6596
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3564": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6577,
        6596
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3565": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6577,
        6596
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3567": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6577,
        6596
      ],
      "op": "ADD",
      "path": "18"
    },
    "3568": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6577,
        6596
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3570": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6577,
        6596
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "3571": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6577,
        6606
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3573": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6598,
        6604
      ],
      "op": "DUP15",
      "path": "18"
    },
    "3574": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3578": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3580": {
      "op": "SHL"
    },
    "3581": {
      "op": "SUB"
    },
    "3582": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6577,
        6606
      ],
      "op": "AND",
      "path": "18"
    },
    "3583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3585": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3587": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3589": {
      "op": "SHL"
    },
    "3590": {
      "op": "SUB"
    },
    "3591": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6577,
        6606
      ],
      "op": "AND",
      "path": "18"
    },
    "3592": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6577,
        6606
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3593": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6577,
        6606
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3594": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6577,
        6606
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3596": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6577,
        6606
      ],
      "op": "ADD",
      "path": "18"
    },
    "3597": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6577,
        6606
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3598": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6577,
        6606
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3599": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6577,
        6606
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3600": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6577,
        6606
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3602": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6577,
        6606
      ],
      "op": "ADD",
      "path": "18"
    },
    "3603": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6577,
        6606
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3605": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6577,
        6606
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "3606": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6577,
        6612
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3608": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6577,
        6612
      ],
      "op": "ADD",
      "path": "18"
    },
    "3609": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6577,
        6612
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3611": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6577,
        6612
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3612": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6577,
        6612
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3613": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6577,
        6612
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3614": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6577,
        6612
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100"
    },
    "3617": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6577,
        6612
      ],
      "op": "EXP",
      "path": "18"
    },
    "3618": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6577,
        6612
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3619": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6577,
        6612
      ],
      "op": "DIV",
      "path": "18"
    },
    "3620": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6577,
        6612
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "3622": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6577,
        6612
      ],
      "op": "AND",
      "path": "18"
    },
    "3623": {
      "branch": 27,
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6576,
        6612
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3624": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6567,
        6663
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xE88"
    },
    "3627": {
      "branch": 27,
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6567,
        6663
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3628": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6567,
        6663
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3630": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6567,
        6663
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3631": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3635": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3637": {
      "op": "SHL"
    },
    "3638": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6567,
        6663
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3639": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6567,
        6663
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3640": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3642": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6567,
        6663
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "3644": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6567,
        6663
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3645": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6567,
        6663
      ],
      "op": "ADD",
      "path": "18"
    },
    "3646": {
      "op": "MSTORE"
    },
    "3647": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "3649": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3651": {
      "op": "DUP3"
    },
    "3652": {
      "op": "ADD"
    },
    "3653": {
      "op": "MSTORE"
    },
    "3654": {
      "op": "PUSH32",
      "value": "0x557365722068617665206120766F74652072656769737472656420666F722074"
    },
    "3687": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3689": {
      "op": "DUP3"
    },
    "3690": {
      "op": "ADD"
    },
    "3691": {
      "op": "MSTORE"
    },
    "3692": {
      "op": "PUSH12",
      "value": "0x1A1A5CC81C1C9BDC1BDCD85B"
    },
    "3705": {
      "op": "PUSH1",
      "value": "0xA2"
    },
    "3707": {
      "op": "SHL"
    },
    "3708": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3710": {
      "op": "DUP3"
    },
    "3711": {
      "op": "ADD"
    },
    "3712": {
      "op": "MSTORE"
    },
    "3713": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3715": {
      "op": "ADD"
    },
    "3716": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6567,
        6663
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC25"
    },
    "3719": {
      "op": "JUMP"
    },
    "3720": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6567,
        6663
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3721": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6700,
        6712
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 9,
      "value": "0xB"
    },
    "3723": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6714,
        6721
      ],
      "op": "DUP13",
      "path": "18"
    },
    "3724": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6700,
        6723
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3725": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6700,
        6723
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3726": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6700,
        6723
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3727": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6700,
        6723
      ],
      "op": "LT",
      "path": "18"
    },
    "3728": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6700,
        6723
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xE9B"
    },
    "3731": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6700,
        6723
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3732": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6700,
        6723
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xE9B"
    },
    "3735": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6700,
        6723
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x219C"
    },
    "3738": {
      "fn": "CLHouse.VotePropOffChain",
      "jump": "i",
      "offset": [
        6700,
        6723
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3739": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6700,
        6723
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3740": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6700,
        6723
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3741": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6700,
        6723
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3743": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6700,
        6723
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3744": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6700,
        6723
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3746": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6700,
        6723
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3748": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6700,
        6723
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "3749": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6700,
        6723
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3750": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6700,
        6723
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x5"
    },
    "3752": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6700,
        6723
      ],
      "op": "MUL",
      "path": "18"
    },
    "3753": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6700,
        6723
      ],
      "op": "ADD",
      "path": "18"
    },
    "3754": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6700,
        6732
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "3756": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6700,
        6732
      ],
      "op": "ADD",
      "path": "18"
    },
    "3757": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6700,
        6732
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3758": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6682,
        6697
      ],
      "op": "TIMESTAMP",
      "path": "18"
    },
    "3759": {
      "branch": 28,
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6682,
        6732
      ],
      "op": "LT",
      "path": "18"
    },
    "3760": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6673,
        6756
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xEEF"
    },
    "3763": {
      "branch": 28,
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6673,
        6756
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3764": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6673,
        6756
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3766": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6673,
        6756
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3767": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3771": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3773": {
      "op": "SHL"
    },
    "3774": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6673,
        6756
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3775": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6673,
        6756
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3776": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3778": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6673,
        6756
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "3780": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6673,
        6756
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3781": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6673,
        6756
      ],
      "op": "ADD",
      "path": "18"
    },
    "3782": {
      "op": "MSTORE"
    },
    "3783": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3785": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3787": {
      "op": "DUP3"
    },
    "3788": {
      "op": "ADD"
    },
    "3789": {
      "op": "MSTORE"
    },
    "3790": {
      "op": "PUSH17",
      "value": "0x50726F706F73616C20646561646C696E65"
    },
    "3808": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "3810": {
      "op": "SHL"
    },
    "3811": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3813": {
      "op": "DUP3"
    },
    "3814": {
      "op": "ADD"
    },
    "3815": {
      "op": "MSTORE"
    },
    "3816": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3818": {
      "op": "ADD"
    },
    "3819": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6673,
        6756
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC25"
    },
    "3822": {
      "op": "JUMP"
    },
    "3823": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6673,
        6756
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3824": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6809,
        6817
      ],
      "op": "DUP11",
      "path": "18",
      "statement": 10
    },
    "3825": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6767,
        6775
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA"
    },
    "3827": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6767,
        6786
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3829": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6777,
        6784
      ],
      "op": "DUP15",
      "path": "18"
    },
    "3830": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6767,
        6786
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3831": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6767,
        6786
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3832": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6767,
        6786
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3834": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6767,
        6786
      ],
      "op": "ADD",
      "path": "18"
    },
    "3835": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6767,
        6786
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3836": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6767,
        6786
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3837": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6767,
        6786
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3838": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6767,
        6786
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3840": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6767,
        6786
      ],
      "op": "ADD",
      "path": "18"
    },
    "3841": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6767,
        6786
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3843": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6767,
        6786
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "3844": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6767,
        6796
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3846": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6788,
        6794
      ],
      "op": "DUP16",
      "path": "18"
    },
    "3847": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3849": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3851": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3853": {
      "op": "SHL"
    },
    "3854": {
      "op": "SUB"
    },
    "3855": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6767,
        6796
      ],
      "op": "AND",
      "path": "18"
    },
    "3856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3860": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3862": {
      "op": "SHL"
    },
    "3863": {
      "op": "SUB"
    },
    "3864": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6767,
        6796
      ],
      "op": "AND",
      "path": "18"
    },
    "3865": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6767,
        6796
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3866": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6767,
        6796
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3867": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6767,
        6796
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3869": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6767,
        6796
      ],
      "op": "ADD",
      "path": "18"
    },
    "3870": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6767,
        6796
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3871": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6767,
        6796
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3872": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6767,
        6796
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3873": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6767,
        6796
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3875": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6767,
        6796
      ],
      "op": "ADD",
      "path": "18"
    },
    "3876": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6767,
        6796
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3878": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6767,
        6796
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "3879": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6767,
        6806
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3881": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6767,
        6806
      ],
      "op": "ADD",
      "path": "18"
    },
    "3882": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6767,
        6806
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "3884": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6767,
        6817
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100"
    },
    "3887": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6767,
        6817
      ],
      "op": "EXP",
      "path": "18"
    },
    "3888": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6767,
        6817
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3889": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6767,
        6817
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3890": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6767,
        6817
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3891": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6767,
        6817
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "3893": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6767,
        6817
      ],
      "op": "MUL",
      "path": "18"
    },
    "3894": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6767,
        6817
      ],
      "op": "NOT",
      "path": "18"
    },
    "3895": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6767,
        6817
      ],
      "op": "AND",
      "path": "18"
    },
    "3896": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6767,
        6817
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3897": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6767,
        6817
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3898": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6767,
        6817
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3899": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6767,
        6817
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3900": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6767,
        6817
      ],
      "op": "MUL",
      "path": "18"
    },
    "3901": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6767,
        6817
      ],
      "op": "OR",
      "path": "18"
    },
    "3902": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6767,
        6817
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3903": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6767,
        6817
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "3904": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6767,
        6817
      ],
      "op": "POP",
      "path": "18"
    },
    "3905": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6873,
        6887
      ],
      "op": "DUP10",
      "path": "18",
      "statement": 11
    },
    "3906": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6827,
        6835
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA"
    },
    "3908": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6827,
        6846
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3910": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6837,
        6844
      ],
      "op": "DUP15",
      "path": "18"
    },
    "3911": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6827,
        6846
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3912": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6827,
        6846
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3913": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6827,
        6846
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3915": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6827,
        6846
      ],
      "op": "ADD",
      "path": "18"
    },
    "3916": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6827,
        6846
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3917": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6827,
        6846
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3918": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6827,
        6846
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3919": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6827,
        6846
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3921": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6827,
        6846
      ],
      "op": "ADD",
      "path": "18"
    },
    "3922": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6827,
        6846
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3924": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6827,
        6846
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "3925": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6827,
        6856
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3927": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6848,
        6854
      ],
      "op": "DUP16",
      "path": "18"
    },
    "3928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3930": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3932": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3934": {
      "op": "SHL"
    },
    "3935": {
      "op": "SUB"
    },
    "3936": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6827,
        6856
      ],
      "op": "AND",
      "path": "18"
    },
    "3937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3941": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3943": {
      "op": "SHL"
    },
    "3944": {
      "op": "SUB"
    },
    "3945": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6827,
        6856
      ],
      "op": "AND",
      "path": "18"
    },
    "3946": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6827,
        6856
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3947": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6827,
        6856
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3948": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6827,
        6856
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3950": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6827,
        6856
      ],
      "op": "ADD",
      "path": "18"
    },
    "3951": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6827,
        6856
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3952": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6827,
        6856
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3953": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6827,
        6856
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3954": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6827,
        6856
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3956": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6827,
        6856
      ],
      "op": "ADD",
      "path": "18"
    },
    "3957": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6827,
        6856
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3959": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6827,
        6856
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "3960": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6827,
        6870
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "3962": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6827,
        6870
      ],
      "op": "ADD",
      "path": "18"
    },
    "3963": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6827,
        6887
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3964": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6827,
        6887
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3965": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6827,
        6887
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3966": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6827,
        6887
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3967": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6827,
        6887
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3969": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6827,
        6887
      ],
      "op": "ADD",
      "path": "18"
    },
    "3970": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6827,
        6887
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3971": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6827,
        6887
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xF8D"
    },
    "3974": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6827,
        6887
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "3975": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6827,
        6887
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3976": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6827,
        6887
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3977": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6827,
        6887
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1924"
    },
    "3980": {
      "fn": "CLHouse.VotePropOffChain",
      "jump": "i",
      "offset": [
        6827,
        6887
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3981": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6827,
        6887
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3982": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6827,
        6887
      ],
      "op": "POP",
      "path": "18"
    },
    "3983": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6935,
        6939
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 12,
      "value": "0x1"
    },
    "3985": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6897,
        6905
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA"
    },
    "3987": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6897,
        6916
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3989": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6907,
        6914
      ],
      "op": "DUP15",
      "path": "18"
    },
    "3990": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6897,
        6916
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3991": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6897,
        6916
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3992": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6897,
        6916
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3994": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6897,
        6916
      ],
      "op": "ADD",
      "path": "18"
    },
    "3995": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6897,
        6916
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3996": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6897,
        6916
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3997": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6897,
        6916
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3998": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6897,
        6916
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4000": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6897,
        6916
      ],
      "op": "ADD",
      "path": "18"
    },
    "4001": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6897,
        6916
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4003": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6897,
        6916
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "4004": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6897,
        6926
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4006": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6918,
        6924
      ],
      "op": "DUP16",
      "path": "18"
    },
    "4007": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4009": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4011": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4013": {
      "op": "SHL"
    },
    "4014": {
      "op": "SUB"
    },
    "4015": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6897,
        6926
      ],
      "op": "AND",
      "path": "18"
    },
    "4016": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4020": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4022": {
      "op": "SHL"
    },
    "4023": {
      "op": "SUB"
    },
    "4024": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6897,
        6926
      ],
      "op": "AND",
      "path": "18"
    },
    "4025": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6897,
        6926
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4026": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6897,
        6926
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4027": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6897,
        6926
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4029": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6897,
        6926
      ],
      "op": "ADD",
      "path": "18"
    },
    "4030": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6897,
        6926
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4031": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6897,
        6926
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4032": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6897,
        6926
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4033": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6897,
        6926
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4035": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6897,
        6926
      ],
      "op": "ADD",
      "path": "18"
    },
    "4036": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6897,
        6926
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4038": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6897,
        6926
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "4039": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6897,
        6932
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4041": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6897,
        6932
      ],
      "op": "ADD",
      "path": "18"
    },
    "4042": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6897,
        6932
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4044": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6897,
        6939
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100"
    },
    "4047": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6897,
        6939
      ],
      "op": "EXP",
      "path": "18"
    },
    "4048": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6897,
        6939
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4049": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6897,
        6939
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4050": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6897,
        6939
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4051": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6897,
        6939
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "4053": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6897,
        6939
      ],
      "op": "MUL",
      "path": "18"
    },
    "4054": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6897,
        6939
      ],
      "op": "NOT",
      "path": "18"
    },
    "4055": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6897,
        6939
      ],
      "op": "AND",
      "path": "18"
    },
    "4056": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6897,
        6939
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4057": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6897,
        6939
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4058": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6897,
        6939
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4059": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6897,
        6939
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4060": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6897,
        6939
      ],
      "op": "MUL",
      "path": "18"
    },
    "4061": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6897,
        6939
      ],
      "op": "OR",
      "path": "18"
    },
    "4062": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6897,
        6939
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4063": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6897,
        6939
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "4064": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6897,
        6939
      ],
      "op": "POP",
      "path": "18"
    },
    "4065": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6950,
        6962
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 13,
      "value": "0xB"
    },
    "4067": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6964,
        6971
      ],
      "op": "DUP13",
      "path": "18"
    },
    "4068": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6950,
        6973
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4069": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6950,
        6973
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4070": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6950,
        6973
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4071": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6950,
        6973
      ],
      "op": "LT",
      "path": "18"
    },
    "4072": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6950,
        6973
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xFF3"
    },
    "4075": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6950,
        6973
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4076": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6950,
        6973
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xFF3"
    },
    "4079": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6950,
        6973
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x219C"
    },
    "4082": {
      "fn": "CLHouse.VotePropOffChain",
      "jump": "i",
      "offset": [
        6950,
        6973
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4083": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6950,
        6973
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4084": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6950,
        6973
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4086": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6950,
        6973
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4087": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6950,
        6973
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4088": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6950,
        6973
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4089": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6950,
        6973
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4091": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6950,
        6973
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4092": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6950,
        6973
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "4093": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6950,
        6982
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "4095": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6950,
        6973
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x5"
    },
    "4097": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6950,
        6973
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4098": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6950,
        6973
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "4099": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6950,
        6973
      ],
      "op": "MUL",
      "path": "18"
    },
    "4100": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6950,
        6973
      ],
      "op": "ADD",
      "path": "18"
    },
    "4101": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6950,
        6982
      ],
      "op": "ADD",
      "path": "18"
    },
    "4102": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6950,
        6984
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4103": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6950,
        6984
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4104": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6950,
        6984
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "4106": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6950,
        6984
      ],
      "op": "AND",
      "path": "18"
    },
    "4107": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6950,
        6984
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4108": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6950,
        6984
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1014"
    },
    "4111": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6950,
        6984
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4112": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6950,
        6984
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x21B2"
    },
    "4115": {
      "fn": "CLHouse.VotePropOffChain",
      "jump": "i",
      "offset": [
        6950,
        6984
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4116": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6950,
        6984
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4117": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6950,
        6984
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4118": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6950,
        6984
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4119": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6950,
        6984
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100"
    },
    "4122": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6950,
        6984
      ],
      "op": "EXP",
      "path": "18"
    },
    "4123": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6950,
        6984
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4124": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6950,
        6984
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4125": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6950,
        6984
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4126": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6950,
        6984
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "4128": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6950,
        6984
      ],
      "op": "MUL",
      "path": "18"
    },
    "4129": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6950,
        6984
      ],
      "op": "NOT",
      "path": "18"
    },
    "4130": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6950,
        6984
      ],
      "op": "AND",
      "path": "18"
    },
    "4131": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6950,
        6984
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4132": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6950,
        6984
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4133": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6950,
        6984
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "4135": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6950,
        6984
      ],
      "op": "AND",
      "path": "18"
    },
    "4136": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6950,
        6984
      ],
      "op": "MUL",
      "path": "18"
    },
    "4137": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6950,
        6984
      ],
      "op": "OR",
      "path": "18"
    },
    "4138": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6950,
        6984
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4139": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6950,
        6984
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "4140": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6950,
        6984
      ],
      "op": "POP",
      "path": "18"
    },
    "4141": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6950,
        6984
      ],
      "op": "POP",
      "path": "18"
    },
    "4142": {
      "branch": 29,
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7000,
        7008
      ],
      "op": "DUP11",
      "path": "18"
    },
    "4143": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6995,
        7061
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1088"
    },
    "4146": {
      "branch": 29,
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6995,
        7061
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4147": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7023,
        7035
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 14,
      "value": "0xB"
    },
    "4149": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7037,
        7044
      ],
      "op": "DUP13",
      "path": "18"
    },
    "4150": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7023,
        7046
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4151": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7023,
        7046
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4152": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7023,
        7046
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4153": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7023,
        7046
      ],
      "op": "LT",
      "path": "18"
    },
    "4154": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7023,
        7046
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1045"
    },
    "4157": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7023,
        7046
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4158": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7023,
        7046
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1045"
    },
    "4161": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7023,
        7046
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x219C"
    },
    "4164": {
      "fn": "CLHouse.VotePropOffChain",
      "jump": "i",
      "offset": [
        7023,
        7046
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4165": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7023,
        7046
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4166": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7023,
        7046
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4168": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7023,
        7046
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4169": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7023,
        7046
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4170": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7023,
        7046
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4171": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7023,
        7046
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4173": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7023,
        7046
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4174": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7023,
        7046
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4175": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7023,
        7046
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "4176": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7023,
        7046
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x5"
    },
    "4178": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7023,
        7046
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4179": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7023,
        7046
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4180": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7023,
        7046
      ],
      "op": "MUL",
      "path": "18"
    },
    "4181": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7023,
        7046
      ],
      "op": "ADD",
      "path": "18"
    },
    "4182": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7023,
        7059
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "4184": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7023,
        7059
      ],
      "op": "ADD",
      "path": "18"
    },
    "4185": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7023,
        7061
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4186": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7023,
        7061
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4187": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7023,
        7061
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100"
    },
    "4190": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7023,
        7061
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4191": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7023,
        7061
      ],
      "op": "DIV",
      "path": "18"
    },
    "4192": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7023,
        7061
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "4194": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7023,
        7061
      ],
      "op": "AND",
      "path": "18"
    },
    "4195": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7023,
        7061
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4196": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7023,
        7059
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "4198": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7023,
        7061
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x106E"
    },
    "4201": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7023,
        7061
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4202": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7023,
        7061
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x21B2"
    },
    "4205": {
      "fn": "CLHouse.VotePropOffChain",
      "jump": "i",
      "offset": [
        7023,
        7061
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4206": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7023,
        7061
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4207": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7023,
        7061
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4208": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7023,
        7061
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4209": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7023,
        7061
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100"
    },
    "4212": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7023,
        7061
      ],
      "op": "EXP",
      "path": "18"
    },
    "4213": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7023,
        7061
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4214": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7023,
        7061
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4215": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7023,
        7061
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4216": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7023,
        7061
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "4218": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7023,
        7061
      ],
      "op": "MUL",
      "path": "18"
    },
    "4219": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7023,
        7061
      ],
      "op": "NOT",
      "path": "18"
    },
    "4220": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7023,
        7061
      ],
      "op": "AND",
      "path": "18"
    },
    "4221": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7023,
        7061
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4222": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7023,
        7061
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4223": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7023,
        7061
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "4225": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7023,
        7061
      ],
      "op": "AND",
      "path": "18"
    },
    "4226": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7023,
        7061
      ],
      "op": "MUL",
      "path": "18"
    },
    "4227": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7023,
        7061
      ],
      "op": "OR",
      "path": "18"
    },
    "4228": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7023,
        7061
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4229": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7023,
        7061
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "4230": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7023,
        7061
      ],
      "op": "POP",
      "path": "18"
    },
    "4231": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7023,
        7061
      ],
      "op": "POP",
      "path": "18"
    },
    "4232": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        6995,
        7061
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4233": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7077,
        7131
      ],
      "op": "PUSH32",
      "path": "18",
      "statement": 15,
      "value": "0xCF689387E0CFBCFE58BEE1B497861A7F47C2DD413053B5D49DF763B7928B254E"
    },
    "4266": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7087,
        7094
      ],
      "op": "DUP13",
      "path": "18"
    },
    "4267": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7097,
        7105
      ],
      "op": "DUP13",
      "path": "18"
    },
    "4268": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7107,
        7113
      ],
      "op": "DUP16",
      "path": "18"
    },
    "4269": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7115,
        7129
      ],
      "op": "DUP14",
      "path": "18"
    },
    "4270": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7077,
        7131
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4272": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7077,
        7131
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4273": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7077,
        7131
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x10BD"
    },
    "4276": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7077,
        7131
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "4277": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7077,
        7131
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "4278": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7077,
        7131
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "4279": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7077,
        7131
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4280": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7077,
        7131
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4281": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7077,
        7131
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x21E0"
    },
    "4284": {
      "fn": "CLHouse.VotePropOffChain",
      "jump": "i",
      "offset": [
        7077,
        7131
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4285": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7077,
        7131
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4286": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7077,
        7131
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4288": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7077,
        7131
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4289": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7077,
        7131
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4290": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7077,
        7131
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4291": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7077,
        7131
      ],
      "op": "SUB",
      "path": "18"
    },
    "4292": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7077,
        7131
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4293": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7077,
        7131
      ],
      "op": "LOG1",
      "path": "18"
    },
    "4294": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7163,
        7182
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 16,
      "value": "0x10CE"
    },
    "4297": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7173,
        7180
      ],
      "op": "DUP13",
      "path": "18"
    },
    "4298": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7163,
        7171
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x828"
    },
    "4301": {
      "fn": "CLHouse.VotePropOffChain",
      "jump": "i",
      "offset": [
        7163,
        7182
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4302": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7163,
        7182
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4303": {
      "op": "POP"
    },
    "4304": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7200,
        7204
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 17,
      "value": "0x1"
    },
    "4306": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        7200,
        7204
      ],
      "op": "SWAP15",
      "path": "18"
    },
    "4307": {
      "fn": "CLHouse.VotePropOffChain",
      "offset": [
        4363,
        7211
      ],
      "op": "SWAP14",
      "path": "18"
    },
    "4308": {
      "op": "POP"
    },
    "4309": {
      "op": "POP"
    },
    "4310": {
      "op": "POP"
    },
    "4311": {
      "op": "POP"
    },
    "4312": {
      "op": "POP"
    },
    "4313": {
      "op": "POP"
    },
    "4314": {
      "op": "POP"
    },
    "4315": {
      "op": "POP"
    },
    "4316": {
      "op": "POP"
    },
    "4317": {
      "op": "POP"
    },
    "4318": {
      "op": "POP"
    },
    "4319": {
      "op": "POP"
    },
    "4320": {
      "op": "POP"
    },
    "4321": {
      "op": "POP"
    },
    "4322": {
      "fn": "CLHouse.VotePropOffChain",
      "jump": "o",
      "offset": [
        4363,
        7211
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4323": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12262,
        13019
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4324": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12504,
        12517
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x2"
    },
    "4326": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12504,
        12517
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4327": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12544,
        12733
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4329": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12544,
        12733
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4330": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12424,
        12438
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4332": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12424,
        12438
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4333": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12424,
        12438
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4334": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12424,
        12438
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4335": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12424,
        12438
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4336": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12424,
        12438
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4341": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4343": {
      "op": "SHL"
    },
    "4344": {
      "op": "SUB"
    },
    "4345": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12504,
        12517
      ],
      "op": "AND",
      "path": "18"
    },
    "4346": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12504,
        12517
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4347": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12544,
        12733
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x110C"
    },
    "4350": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12544,
        12733
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4351": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12641,
        12661
      ],
      "op": "DUP9",
      "path": "18"
    },
    "4352": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12641,
        12661
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4353": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12679,
        12691
      ],
      "op": "DUP9",
      "path": "18"
    },
    "4354": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12679,
        12691
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4355": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12709,
        12719
      ],
      "op": "DUP9",
      "path": "18"
    },
    "4356": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12709,
        12719
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4357": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12544,
        12733
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "4359": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12544,
        12733
      ],
      "op": "ADD",
      "path": "18"
    },
    "4360": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12544,
        12733
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x221C"
    },
    "4363": {
      "fn": "CLHouse.PropGovRules",
      "jump": "i",
      "offset": [
        12544,
        12733
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4364": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12544,
        12733
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4365": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12544,
        12733
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4367": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12544,
        12733
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4368": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12544,
        12733
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4369": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4371": {
      "op": "NOT"
    },
    "4372": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12544,
        12733
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4373": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12544,
        12733
      ],
      "op": "DUP5",
      "path": "18"
    },
    "4374": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12544,
        12733
      ],
      "op": "SUB",
      "path": "18"
    },
    "4375": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12544,
        12733
      ],
      "op": "ADD",
      "path": "18"
    },
    "4376": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12544,
        12733
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4377": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12544,
        12733
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4378": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12544,
        12733
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4379": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12544,
        12733
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4380": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12544,
        12733
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4381": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12544,
        12733
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4383": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12544,
        12733
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4384": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12544,
        12733
      ],
      "op": "ADD",
      "path": "18"
    },
    "4385": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12544,
        12733
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4386": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12544,
        12733
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4391": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4393": {
      "op": "SHL"
    },
    "4394": {
      "op": "SUB"
    },
    "4395": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12544,
        12733
      ],
      "op": "AND",
      "path": "18"
    },
    "4396": {
      "op": "PUSH4",
      "value": "0x70ACB761"
    },
    "4401": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4403": {
      "op": "SHL"
    },
    "4404": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12544,
        12733
      ],
      "op": "OR",
      "path": "18"
    },
    "4405": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12544,
        12733
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4406": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12544,
        12733
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4407": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12504,
        12743
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4408": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12504,
        12743
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1141"
    },
    "4411": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12504,
        12743
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4412": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12544,
        12733
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4413": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12504,
        12743
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x20DB"
    },
    "4416": {
      "fn": "CLHouse.PropGovRules",
      "jump": "i",
      "offset": [
        12504,
        12743
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4417": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12504,
        12743
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4418": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12504,
        12743
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4420": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12504,
        12743
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4422": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12504,
        12743
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4423": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12504,
        12743
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4424": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12504,
        12743
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4425": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12504,
        12743
      ],
      "op": "SUB",
      "path": "18"
    },
    "4426": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12504,
        12743
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4427": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12504,
        12743
      ],
      "op": "DUP6",
      "path": "18"
    },
    "4428": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12504,
        12743
      ],
      "op": "GAS",
      "path": "18"
    },
    "4429": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12504,
        12743
      ],
      "op": "DELEGATECALL",
      "path": "18"
    },
    "4430": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12504,
        12743
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4431": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12504,
        12743
      ],
      "op": "POP",
      "path": "18"
    },
    "4432": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12504,
        12743
      ],
      "op": "POP",
      "path": "18"
    },
    "4433": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12504,
        12743
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "4434": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12504,
        12743
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4435": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12504,
        12743
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4437": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12504,
        12743
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4438": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12504,
        12743
      ],
      "op": "EQ",
      "path": "18"
    },
    "4439": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12504,
        12743
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x117C"
    },
    "4442": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12504,
        12743
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4443": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12504,
        12743
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4445": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12504,
        12743
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4446": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12504,
        12743
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4447": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12504,
        12743
      ],
      "op": "POP",
      "path": "18"
    },
    "4448": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12504,
        12743
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "4450": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12504,
        12743
      ],
      "op": "NOT",
      "path": "18"
    },
    "4451": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12504,
        12743
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3F"
    },
    "4453": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12504,
        12743
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "4454": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12504,
        12743
      ],
      "op": "ADD",
      "path": "18"
    },
    "4455": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12504,
        12743
      ],
      "op": "AND",
      "path": "18"
    },
    "4456": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12504,
        12743
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4457": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12504,
        12743
      ],
      "op": "ADD",
      "path": "18"
    },
    "4458": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12504,
        12743
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4460": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12504,
        12743
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4461": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12504,
        12743
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "4462": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12504,
        12743
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4463": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12504,
        12743
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4464": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12504,
        12743
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "4465": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12504,
        12743
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4467": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12504,
        12743
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4469": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12504,
        12743
      ],
      "op": "DUP5",
      "path": "18"
    },
    "4470": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12504,
        12743
      ],
      "op": "ADD",
      "path": "18"
    },
    "4471": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12504,
        12743
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "4472": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12504,
        12743
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1181"
    },
    "4475": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12504,
        12743
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4476": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12504,
        12743
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4477": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12504,
        12743
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "4479": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12504,
        12743
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4480": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12504,
        12743
      ],
      "op": "POP",
      "path": "18"
    },
    "4481": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12504,
        12743
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4482": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12504,
        12743
      ],
      "op": "POP",
      "path": "18"
    },
    "4483": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12455,
        12743
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4484": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12455,
        12743
      ],
      "op": "POP",
      "path": "18"
    },
    "4485": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12455,
        12743
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4486": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12455,
        12743
      ],
      "op": "POP",
      "path": "18"
    },
    "4487": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12794,
        12798
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4489": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12788,
        12799
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4490": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12824,
        12840
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "4491": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12876,
        12880
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4492": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12873,
        12874
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4494": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12868,
        12871
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4495": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12853,
        12881
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "4496": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12905,
        12918
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4497": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12894,
        12970
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1198"
    },
    "4500": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12894,
        12970
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4501": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12951,
        12955
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4502": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12946,
        12949
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4503": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12939,
        12956
      ],
      "op": "REVERT",
      "path": "18"
    },
    "4504": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12894,
        12970
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4505": {
      "op": "POP"
    },
    "4506": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12993,
        13003
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4507": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12993,
        13003
      ],
      "op": "SWAP7",
      "path": "18"
    },
    "4508": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        12262,
        13019
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "4509": {
      "op": "POP"
    },
    "4510": {
      "op": "POP"
    },
    "4511": {
      "op": "POP"
    },
    "4512": {
      "op": "POP"
    },
    "4513": {
      "op": "POP"
    },
    "4514": {
      "op": "POP"
    },
    "4515": {
      "fn": "CLHouse.PropGovRules",
      "jump": "o",
      "offset": [
        12262,
        13019
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4516": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        9902,
        10693
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4517": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10157,
        10170
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x2"
    },
    "4519": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10157,
        10170
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4520": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10197,
        10407
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4522": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10197,
        10407
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4523": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10077,
        10091
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4525": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10077,
        10091
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4526": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10077,
        10091
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4527": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10077,
        10091
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4528": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10077,
        10091
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4529": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10077,
        10091
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4530": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4534": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4536": {
      "op": "SHL"
    },
    "4537": {
      "op": "SUB"
    },
    "4538": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10157,
        10170
      ],
      "op": "AND",
      "path": "18"
    },
    "4539": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10157,
        10170
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4540": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10197,
        10407
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x11CF"
    },
    "4543": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10197,
        10407
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4544": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10301,
        10304
      ],
      "op": "DUP10",
      "path": "18"
    },
    "4545": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10301,
        10304
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4546": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10322,
        10335
      ],
      "op": "DUP10",
      "path": "18"
    },
    "4547": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10322,
        10335
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4548": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10353,
        10365
      ],
      "op": "DUP10",
      "path": "18"
    },
    "4549": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10353,
        10365
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4550": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10383,
        10393
      ],
      "op": "DUP10",
      "path": "18"
    },
    "4551": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10383,
        10393
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4552": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10197,
        10407
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "4554": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10197,
        10407
      ],
      "op": "ADD",
      "path": "18"
    },
    "4555": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10197,
        10407
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x20A3"
    },
    "4558": {
      "fn": "CLHouse.PropTxWei",
      "jump": "i",
      "offset": [
        10197,
        10407
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4559": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10197,
        10407
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4560": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10197,
        10407
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4562": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10197,
        10407
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4563": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10197,
        10407
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4564": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4566": {
      "op": "NOT"
    },
    "4567": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10197,
        10407
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4568": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10197,
        10407
      ],
      "op": "DUP5",
      "path": "18"
    },
    "4569": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10197,
        10407
      ],
      "op": "SUB",
      "path": "18"
    },
    "4570": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10197,
        10407
      ],
      "op": "ADD",
      "path": "18"
    },
    "4571": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10197,
        10407
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4572": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10197,
        10407
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4573": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10197,
        10407
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4574": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10197,
        10407
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4575": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10197,
        10407
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4576": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10197,
        10407
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4578": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10197,
        10407
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4579": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10197,
        10407
      ],
      "op": "ADD",
      "path": "18"
    },
    "4580": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10197,
        10407
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4581": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10197,
        10407
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4584": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4586": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4588": {
      "op": "SHL"
    },
    "4589": {
      "op": "SUB"
    },
    "4590": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10197,
        10407
      ],
      "op": "AND",
      "path": "18"
    },
    "4591": {
      "op": "PUSH4",
      "value": "0xF8C70A9"
    },
    "4596": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "4598": {
      "op": "SHL"
    },
    "4599": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10197,
        10407
      ],
      "op": "OR",
      "path": "18"
    },
    "4600": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10197,
        10407
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4601": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10197,
        10407
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4602": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10157,
        10417
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4603": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10157,
        10417
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1204"
    },
    "4606": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10157,
        10417
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4607": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10197,
        10407
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4608": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10157,
        10417
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x20DB"
    },
    "4611": {
      "fn": "CLHouse.PropTxWei",
      "jump": "i",
      "offset": [
        10157,
        10417
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4612": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10157,
        10417
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4613": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10157,
        10417
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4615": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10157,
        10417
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4617": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10157,
        10417
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4618": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10157,
        10417
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4619": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10157,
        10417
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4620": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10157,
        10417
      ],
      "op": "SUB",
      "path": "18"
    },
    "4621": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10157,
        10417
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4622": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10157,
        10417
      ],
      "op": "DUP6",
      "path": "18"
    },
    "4623": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10157,
        10417
      ],
      "op": "GAS",
      "path": "18"
    },
    "4624": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10157,
        10417
      ],
      "op": "DELEGATECALL",
      "path": "18"
    },
    "4625": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10157,
        10417
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4626": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10157,
        10417
      ],
      "op": "POP",
      "path": "18"
    },
    "4627": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10157,
        10417
      ],
      "op": "POP",
      "path": "18"
    },
    "4628": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10157,
        10417
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "4629": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10157,
        10417
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4630": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10157,
        10417
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4632": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10157,
        10417
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4633": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10157,
        10417
      ],
      "op": "EQ",
      "path": "18"
    },
    "4634": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10157,
        10417
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x123F"
    },
    "4637": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10157,
        10417
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4638": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10157,
        10417
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4640": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10157,
        10417
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4641": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10157,
        10417
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4642": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10157,
        10417
      ],
      "op": "POP",
      "path": "18"
    },
    "4643": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10157,
        10417
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "4645": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10157,
        10417
      ],
      "op": "NOT",
      "path": "18"
    },
    "4646": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10157,
        10417
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3F"
    },
    "4648": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10157,
        10417
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "4649": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10157,
        10417
      ],
      "op": "ADD",
      "path": "18"
    },
    "4650": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10157,
        10417
      ],
      "op": "AND",
      "path": "18"
    },
    "4651": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10157,
        10417
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4652": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10157,
        10417
      ],
      "op": "ADD",
      "path": "18"
    },
    "4653": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10157,
        10417
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4655": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10157,
        10417
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4656": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10157,
        10417
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "4657": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10157,
        10417
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4658": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10157,
        10417
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4659": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10157,
        10417
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "4660": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10157,
        10417
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4662": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10157,
        10417
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4664": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10157,
        10417
      ],
      "op": "DUP5",
      "path": "18"
    },
    "4665": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10157,
        10417
      ],
      "op": "ADD",
      "path": "18"
    },
    "4666": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10157,
        10417
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "4667": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10157,
        10417
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1244"
    },
    "4670": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10157,
        10417
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4671": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10157,
        10417
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4672": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10157,
        10417
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "4674": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10157,
        10417
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4675": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10157,
        10417
      ],
      "op": "POP",
      "path": "18"
    },
    "4676": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10157,
        10417
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4677": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10157,
        10417
      ],
      "op": "POP",
      "path": "18"
    },
    "4678": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10108,
        10417
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4679": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10108,
        10417
      ],
      "op": "POP",
      "path": "18"
    },
    "4680": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10108,
        10417
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4681": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10108,
        10417
      ],
      "op": "POP",
      "path": "18"
    },
    "4682": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10468,
        10472
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4684": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10462,
        10473
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4685": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10498,
        10514
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "4686": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10550,
        10554
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4687": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10547,
        10548
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4689": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10542,
        10545
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4690": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10527,
        10555
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "4691": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10579,
        10592
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4692": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10568,
        10644
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x125B"
    },
    "4695": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10568,
        10644
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4696": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10625,
        10629
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4697": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10620,
        10623
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4698": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10613,
        10630
      ],
      "op": "REVERT",
      "path": "18"
    },
    "4699": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10568,
        10644
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4700": {
      "op": "POP"
    },
    "4701": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10667,
        10677
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4702": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        10667,
        10677
      ],
      "op": "SWAP8",
      "path": "18"
    },
    "4703": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        9902,
        10693
      ],
      "op": "SWAP7",
      "path": "18"
    },
    "4704": {
      "op": "POP"
    },
    "4705": {
      "op": "POP"
    },
    "4706": {
      "op": "POP"
    },
    "4707": {
      "op": "POP"
    },
    "4708": {
      "op": "POP"
    },
    "4709": {
      "op": "POP"
    },
    "4710": {
      "op": "POP"
    },
    "4711": {
      "fn": "CLHouse.PropTxWei",
      "jump": "o",
      "offset": [
        9902,
        10693
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4712": {
      "offset": [
        1373,
        1402
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4713": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xF"
    },
    "4715": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4716": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4717": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4718": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4719": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "LT",
      "path": "19"
    },
    "4720": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1278"
    },
    "4723": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4724": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4726": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4727": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "REVERT",
      "path": "19"
    },
    "4728": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4729": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4731": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4732": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4733": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4734": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4736": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4737": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4738": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "4739": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "4741": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4742": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4743": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "MUL",
      "path": "19"
    },
    "4744": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "ADD",
      "path": "19"
    },
    "4745": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4746": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4747": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "4749": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4750": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "ADD",
      "path": "19"
    },
    "4751": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4752": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4753": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4757": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4759": {
      "op": "SHL"
    },
    "4760": {
      "op": "SUB"
    },
    "4761": {
      "offset": [
        1373,
        1402
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4762": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4763": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "AND",
      "path": "19"
    },
    "4764": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "4765": {
      "op": "POP"
    },
    "4766": {
      "offset": [
        1373,
        1402
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4767": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x12A7"
    },
    "4770": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4771": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2161"
    },
    "4774": {
      "fn": "CLHouse.PropTxWei",
      "jump": "i",
      "offset": [
        1373,
        1402
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4775": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4776": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4777": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "4779": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "ADD",
      "path": "19"
    },
    "4780": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4782": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4783": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4784": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "DIV",
      "path": "19"
    },
    "4785": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "MUL",
      "path": "19"
    },
    "4786": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4788": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "ADD",
      "path": "19"
    },
    "4789": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4791": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4792": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4793": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4794": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "ADD",
      "path": "19"
    },
    "4795": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4797": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4798": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4799": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4800": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4801": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4802": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4803": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4804": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4805": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4807": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "ADD",
      "path": "19"
    },
    "4808": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4809": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4810": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4811": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x12D3"
    },
    "4814": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4815": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2161"
    },
    "4818": {
      "fn": "CLHouse.PropTxWei",
      "jump": "i",
      "offset": [
        1373,
        1402
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4819": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4820": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4821": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4822": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1320"
    },
    "4825": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4826": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4827": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "4829": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "LT",
      "path": "19"
    },
    "4830": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x12F5"
    },
    "4833": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4834": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x100"
    },
    "4837": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4838": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "DUP4",
      "path": "19"
    },
    "4839": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4840": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "DIV",
      "path": "19"
    },
    "4841": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "MUL",
      "path": "19"
    },
    "4842": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "DUP4",
      "path": "19"
    },
    "4843": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4844": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4845": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4847": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "ADD",
      "path": "19"
    },
    "4848": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4849": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1320"
    },
    "4852": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4853": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4854": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4855": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "ADD",
      "path": "19"
    },
    "4856": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4857": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4858": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4860": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4861": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4863": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4865": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "4866": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4867": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4868": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4869": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4870": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4871": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4872": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4873": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "4875": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "ADD",
      "path": "19"
    },
    "4876": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4877": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4879": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "ADD",
      "path": "19"
    },
    "4880": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4881": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "DUP4",
      "path": "19"
    },
    "4882": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "GT",
      "path": "19"
    },
    "4883": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1303"
    },
    "4886": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4887": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4888": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4889": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "SUB",
      "path": "19"
    },
    "4890": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "4892": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "AND",
      "path": "19"
    },
    "4893": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4894": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "ADD",
      "path": "19"
    },
    "4895": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4896": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4897": {
      "op": "POP"
    },
    "4898": {
      "op": "POP"
    },
    "4899": {
      "op": "POP"
    },
    "4900": {
      "op": "POP"
    },
    "4901": {
      "offset": [
        1373,
        1402
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x2"
    },
    "4903": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "DUP4",
      "path": "19"
    },
    "4904": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "ADD",
      "path": "19"
    },
    "4905": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4906": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x3"
    },
    "4908": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4909": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "4910": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "ADD",
      "path": "19"
    },
    "4911": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4912": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4913": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4914": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4915": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xFF"
    },
    "4917": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4918": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4919": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "AND",
      "path": "19"
    },
    "4920": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4921": {
      "op": "POP"
    },
    "4922": {
      "offset": [
        1373,
        1402
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x100"
    },
    "4925": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4926": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4927": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "DIV",
      "path": "19"
    },
    "4928": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "AND",
      "path": "19"
    },
    "4929": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        1373,
        1402
      ],
      "op": "DUP6",
      "path": "19"
    },
    "4930": {
      "fn": "CLHouse.PropTxWei",
      "jump": "o",
      "offset": [
        1373,
        1402
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4931": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14129,
        14829
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4932": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14289,
        14307
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4934": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14309,
        14333
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4935": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14356
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "4937": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14356
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x6"
    },
    "4939": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14356
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4940": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14356
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4941": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14356
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4942": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14356
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100"
    },
    "4945": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14356
      ],
      "op": "EXP",
      "path": "18"
    },
    "4946": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14356
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4947": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14356
      ],
      "op": "DIV",
      "path": "18"
    },
    "4948": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4952": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4954": {
      "op": "SHL"
    },
    "4955": {
      "op": "SUB"
    },
    "4956": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14356
      ],
      "op": "AND",
      "path": "18"
    },
    "4957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4961": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4963": {
      "op": "SHL"
    },
    "4964": {
      "op": "SUB"
    },
    "4965": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14369
      ],
      "op": "AND",
      "path": "18"
    },
    "4966": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14486,
        14497
      ],
      "op": "DUP6",
      "path": "18"
    },
    "4967": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14515,
        14528
      ],
      "op": "DUP6",
      "path": "18"
    },
    "4968": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14546,
        14556
      ],
      "op": "DUP6",
      "path": "18"
    },
    "4969": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14383,
        14570
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4971": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14383,
        14570
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4972": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14383,
        14570
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "4974": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14383,
        14570
      ],
      "op": "ADD",
      "path": "18"
    },
    "4975": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14383,
        14570
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x137A"
    },
    "4978": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14383,
        14570
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "4979": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14383,
        14570
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "4980": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14383,
        14570
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4981": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14383,
        14570
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4982": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14383,
        14570
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2248"
    },
    "4985": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "jump": "i",
      "offset": [
        14383,
        14570
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4986": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14383,
        14570
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4987": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14383,
        14570
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4989": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14383,
        14570
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4990": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14383,
        14570
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4991": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4993": {
      "op": "NOT"
    },
    "4994": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14383,
        14570
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4995": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14383,
        14570
      ],
      "op": "DUP5",
      "path": "18"
    },
    "4996": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14383,
        14570
      ],
      "op": "SUB",
      "path": "18"
    },
    "4997": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14383,
        14570
      ],
      "op": "ADD",
      "path": "18"
    },
    "4998": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14383,
        14570
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4999": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14383,
        14570
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5000": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14383,
        14570
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5001": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14383,
        14570
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5002": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14383,
        14570
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5003": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14383,
        14570
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "5005": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14383,
        14570
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5006": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14383,
        14570
      ],
      "op": "ADD",
      "path": "18"
    },
    "5007": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14383,
        14570
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5008": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14383,
        14570
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5009": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5013": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5015": {
      "op": "SHL"
    },
    "5016": {
      "op": "SUB"
    },
    "5017": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14383,
        14570
      ],
      "op": "AND",
      "path": "18"
    },
    "5018": {
      "op": "PUSH4",
      "value": "0x9BCB9ABB"
    },
    "5023": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5025": {
      "op": "SHL"
    },
    "5026": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14383,
        14570
      ],
      "op": "OR",
      "path": "18"
    },
    "5027": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14383,
        14570
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5028": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14383,
        14570
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5029": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14580
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5030": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14580
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x13AF"
    },
    "5033": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14580
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5034": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14383,
        14570
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5035": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14580
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x20DB"
    },
    "5038": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "jump": "i",
      "offset": [
        14337,
        14580
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5039": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14580
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5040": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14580
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "5042": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14580
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5044": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14580
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5045": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14580
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5046": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14580
      ],
      "op": "DUP4",
      "path": "18"
    },
    "5047": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14580
      ],
      "op": "SUB",
      "path": "18"
    },
    "5048": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14580
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5049": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14580
      ],
      "op": "DUP6",
      "path": "18"
    },
    "5050": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14580
      ],
      "op": "GAS",
      "path": "18"
    },
    "5051": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14580
      ],
      "op": "DELEGATECALL",
      "path": "18"
    },
    "5052": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14580
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5053": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14580
      ],
      "op": "POP",
      "path": "18"
    },
    "5054": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14580
      ],
      "op": "POP",
      "path": "18"
    },
    "5055": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14580
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "5056": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14580
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5057": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14580
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "5059": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14580
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5060": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14580
      ],
      "op": "EQ",
      "path": "18"
    },
    "5061": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14580
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x13EA"
    },
    "5064": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14580
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5065": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14580
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5067": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14580
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5068": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14580
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5069": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14580
      ],
      "op": "POP",
      "path": "18"
    },
    "5070": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14580
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "5072": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14580
      ],
      "op": "NOT",
      "path": "18"
    },
    "5073": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14580
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3F"
    },
    "5075": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14580
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "5076": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14580
      ],
      "op": "ADD",
      "path": "18"
    },
    "5077": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14580
      ],
      "op": "AND",
      "path": "18"
    },
    "5078": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14580
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5079": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14580
      ],
      "op": "ADD",
      "path": "18"
    },
    "5080": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14580
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5082": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14580
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5083": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14580
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "5084": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14580
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5085": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14580
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5086": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14580
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "5087": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14580
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "5089": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14580
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "5091": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14580
      ],
      "op": "DUP5",
      "path": "18"
    },
    "5092": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14580
      ],
      "op": "ADD",
      "path": "18"
    },
    "5093": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14580
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "5094": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14580
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x13EF"
    },
    "5097": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14580
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5098": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14580
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5099": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14580
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "5101": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14580
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5102": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14580
      ],
      "op": "POP",
      "path": "18"
    },
    "5103": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14580
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5104": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14337,
        14580
      ],
      "op": "POP",
      "path": "18"
    },
    "5105": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14288,
        14580
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5106": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14288,
        14580
      ],
      "op": "POP",
      "path": "18"
    },
    "5107": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14288,
        14580
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5108": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14288,
        14580
      ],
      "op": "POP",
      "path": "18"
    },
    "5109": {
      "branch": 30,
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14596,
        14609
      ],
      "op": "DUP2",
      "path": "18",
      "statement": 18
    },
    "5110": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14591,
        14823
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1406"
    },
    "5113": {
      "branch": 30,
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14591,
        14823
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5114": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14670,
        14674
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5116": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14664,
        14675
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5117": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14704,
        14720
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "5118": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14760,
        14764
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5119": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14757,
        14758
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "5121": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14752,
        14755
      ],
      "op": "DUP4",
      "path": "18"
    },
    "5122": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14737,
        14765
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "5123": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14794,
        14798
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5124": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14789,
        14792
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5125": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14782,
        14799
      ],
      "op": "REVERT",
      "path": "18"
    },
    "5126": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14591,
        14823
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5127": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14278,
        14829
      ],
      "op": "POP",
      "path": "18"
    },
    "5128": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14278,
        14829
      ],
      "op": "POP",
      "path": "18"
    },
    "5129": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14129,
        14829
      ],
      "op": "POP",
      "path": "18"
    },
    "5130": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14129,
        14829
      ],
      "op": "POP",
      "path": "18"
    },
    "5131": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        14129,
        14829
      ],
      "op": "POP",
      "path": "18"
    },
    "5132": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "jump": "o",
      "offset": [
        14129,
        14829
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5133": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3644,
        4357
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5134": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3860,
        3873
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x2"
    },
    "5136": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3860,
        3873
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "5137": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3900,
        4076
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5139": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3900,
        4076
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5140": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3790,
        3794
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "5142": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3790,
        3794
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5143": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3790,
        3794
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5144": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3790,
        3794
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5145": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3790,
        3794
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5146": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3790,
        3794
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5147": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5149": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5151": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5153": {
      "op": "SHL"
    },
    "5154": {
      "op": "SUB"
    },
    "5155": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3860,
        3873
      ],
      "op": "AND",
      "path": "18"
    },
    "5156": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3860,
        3873
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5157": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3900,
        4076
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1436"
    },
    "5160": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3900,
        4076
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5161": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3997,
        4004
      ],
      "op": "DUP9",
      "path": "18"
    },
    "5162": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3997,
        4004
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5163": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4022,
        4030
      ],
      "op": "DUP9",
      "path": "18"
    },
    "5164": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4022,
        4030
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5165": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4048,
        4062
      ],
      "op": "DUP9",
      "path": "18"
    },
    "5166": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4048,
        4062
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5167": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3900,
        4076
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "5169": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3900,
        4076
      ],
      "op": "ADD",
      "path": "18"
    },
    "5170": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3900,
        4076
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2274"
    },
    "5173": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        3900,
        4076
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5174": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3900,
        4076
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5175": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3900,
        4076
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5177": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3900,
        4076
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5178": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3900,
        4076
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5179": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5181": {
      "op": "NOT"
    },
    "5182": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3900,
        4076
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5183": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3900,
        4076
      ],
      "op": "DUP5",
      "path": "18"
    },
    "5184": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3900,
        4076
      ],
      "op": "SUB",
      "path": "18"
    },
    "5185": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3900,
        4076
      ],
      "op": "ADD",
      "path": "18"
    },
    "5186": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3900,
        4076
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5187": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3900,
        4076
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5188": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3900,
        4076
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5189": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3900,
        4076
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5190": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3900,
        4076
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5191": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3900,
        4076
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "5193": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3900,
        4076
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5194": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3900,
        4076
      ],
      "op": "ADD",
      "path": "18"
    },
    "5195": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3900,
        4076
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5196": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3900,
        4076
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5201": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5203": {
      "op": "SHL"
    },
    "5204": {
      "op": "SUB"
    },
    "5205": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3900,
        4076
      ],
      "op": "AND",
      "path": "18"
    },
    "5206": {
      "op": "PUSH4",
      "value": "0xF40E9B45"
    },
    "5211": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5213": {
      "op": "SHL"
    },
    "5214": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3900,
        4076
      ],
      "op": "OR",
      "path": "18"
    },
    "5215": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3900,
        4076
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5216": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3900,
        4076
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5217": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3860,
        4086
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5218": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3860,
        4086
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x146B"
    },
    "5221": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3860,
        4086
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5222": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3900,
        4076
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5223": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3860,
        4086
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x20DB"
    },
    "5226": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        3860,
        4086
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5227": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3860,
        4086
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5228": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3860,
        4086
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "5230": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3860,
        4086
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5232": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3860,
        4086
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5233": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3860,
        4086
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5234": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3860,
        4086
      ],
      "op": "DUP4",
      "path": "18"
    },
    "5235": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3860,
        4086
      ],
      "op": "SUB",
      "path": "18"
    },
    "5236": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3860,
        4086
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5237": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3860,
        4086
      ],
      "op": "DUP6",
      "path": "18"
    },
    "5238": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3860,
        4086
      ],
      "op": "GAS",
      "path": "18"
    },
    "5239": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3860,
        4086
      ],
      "op": "DELEGATECALL",
      "path": "18"
    },
    "5240": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3860,
        4086
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5241": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3860,
        4086
      ],
      "op": "POP",
      "path": "18"
    },
    "5242": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3860,
        4086
      ],
      "op": "POP",
      "path": "18"
    },
    "5243": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3860,
        4086
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "5244": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3860,
        4086
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5245": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3860,
        4086
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "5247": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3860,
        4086
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5248": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3860,
        4086
      ],
      "op": "EQ",
      "path": "18"
    },
    "5249": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3860,
        4086
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x14A6"
    },
    "5252": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3860,
        4086
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5253": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3860,
        4086
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5255": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3860,
        4086
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5256": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3860,
        4086
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5257": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3860,
        4086
      ],
      "op": "POP",
      "path": "18"
    },
    "5258": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3860,
        4086
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "5260": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3860,
        4086
      ],
      "op": "NOT",
      "path": "18"
    },
    "5261": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3860,
        4086
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3F"
    },
    "5263": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3860,
        4086
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "5264": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3860,
        4086
      ],
      "op": "ADD",
      "path": "18"
    },
    "5265": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3860,
        4086
      ],
      "op": "AND",
      "path": "18"
    },
    "5266": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3860,
        4086
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5267": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3860,
        4086
      ],
      "op": "ADD",
      "path": "18"
    },
    "5268": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3860,
        4086
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5270": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3860,
        4086
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5271": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3860,
        4086
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "5272": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3860,
        4086
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5273": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3860,
        4086
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5274": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3860,
        4086
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "5275": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3860,
        4086
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "5277": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3860,
        4086
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "5279": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3860,
        4086
      ],
      "op": "DUP5",
      "path": "18"
    },
    "5280": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3860,
        4086
      ],
      "op": "ADD",
      "path": "18"
    },
    "5281": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3860,
        4086
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "5282": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3860,
        4086
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x14AB"
    },
    "5285": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3860,
        4086
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5286": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3860,
        4086
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5287": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3860,
        4086
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "5289": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3860,
        4086
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5290": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3860,
        4086
      ],
      "op": "POP",
      "path": "18"
    },
    "5291": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3860,
        4086
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5292": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3860,
        4086
      ],
      "op": "POP",
      "path": "18"
    },
    "5293": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3811,
        4086
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5294": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3811,
        4086
      ],
      "op": "POP",
      "path": "18"
    },
    "5295": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3811,
        4086
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5296": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3811,
        4086
      ],
      "op": "POP",
      "path": "18"
    },
    "5297": {
      "branch": 31,
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4102,
        4115
      ],
      "op": "DUP2",
      "path": "18",
      "statement": 19
    },
    "5298": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4097,
        4329
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x14C2"
    },
    "5301": {
      "branch": 31,
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4097,
        4329
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5302": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4176,
        4180
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5304": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4170,
        4181
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5305": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4210,
        4226
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "5306": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4266,
        4270
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5307": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4263,
        4264
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "5309": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4258,
        4261
      ],
      "op": "DUP4",
      "path": "18"
    },
    "5310": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4243,
        4271
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "5311": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4300,
        4304
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5312": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4295,
        4298
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5313": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4288,
        4305
      ],
      "op": "REVERT",
      "path": "18"
    },
    "5314": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4097,
        4329
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5315": {
      "op": "POP"
    },
    "5316": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4346,
        4350
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 20,
      "value": "0x1"
    },
    "5318": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4346,
        4350
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "5319": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3644,
        4357
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "5320": {
      "op": "POP"
    },
    "5321": {
      "op": "POP"
    },
    "5322": {
      "op": "POP"
    },
    "5323": {
      "op": "POP"
    },
    "5324": {
      "op": "POP"
    },
    "5325": {
      "fn": "CLHouse.VoteProposal",
      "jump": "o",
      "offset": [
        3644,
        4357
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5326": {
      "offset": [
        1273,
        1317
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5327": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1273,
        1317
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xD"
    },
    "5329": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1273,
        1317
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5330": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1273,
        1317
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5331": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1273,
        1317
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5332": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1273,
        1317
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5333": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1273,
        1317
      ],
      "op": "LT",
      "path": "19"
    },
    "5334": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1273,
        1317
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x14DE"
    },
    "5337": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1273,
        1317
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5338": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1273,
        1317
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5340": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1273,
        1317
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5341": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1273,
        1317
      ],
      "op": "REVERT",
      "path": "19"
    },
    "5342": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1273,
        1317
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5343": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1273,
        1317
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5345": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1273,
        1317
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5346": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1273,
        1317
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5347": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1273,
        1317
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5348": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1273,
        1317
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5350": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1273,
        1317
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5351": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1273,
        1317
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5352": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1273,
        1317
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "5353": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1273,
        1317
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "5355": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1273,
        1317
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5356": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1273,
        1317
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5357": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1273,
        1317
      ],
      "op": "MUL",
      "path": "19"
    },
    "5358": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1273,
        1317
      ],
      "op": "ADD",
      "path": "19"
    },
    "5359": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1273,
        1317
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5360": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1273,
        1317
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5361": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1273,
        1317
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "5363": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1273,
        1317
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5364": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1273,
        1317
      ],
      "op": "ADD",
      "path": "19"
    },
    "5365": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1273,
        1317
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5366": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1273,
        1317
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x2"
    },
    "5368": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1273,
        1317
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5369": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1273,
        1317
      ],
      "op": "ADD",
      "path": "19"
    },
    "5370": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1273,
        1317
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5371": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1273,
        1317
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x3"
    },
    "5373": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1273,
        1317
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5374": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1273,
        1317
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "5375": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1273,
        1317
      ],
      "op": "ADD",
      "path": "19"
    },
    "5376": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1273,
        1317
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5381": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5383": {
      "op": "SHL"
    },
    "5384": {
      "op": "SUB"
    },
    "5385": {
      "offset": [
        1273,
        1317
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5386": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1273,
        1317
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5387": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1273,
        1317
      ],
      "op": "AND",
      "path": "19"
    },
    "5388": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1273,
        1317
      ],
      "op": "SWAP5",
      "path": "19"
    },
    "5389": {
      "op": "POP"
    },
    "5390": {
      "offset": [
        1273,
        1317
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5391": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1273,
        1317
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5392": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1273,
        1317
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5393": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1273,
        1317
      ],
      "op": "AND",
      "path": "19"
    },
    "5394": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1273,
        1317
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5395": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1273,
        1317
      ],
      "op": "AND",
      "path": "19"
    },
    "5396": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1273,
        1317
      ],
      "op": "DUP5",
      "path": "19"
    },
    "5397": {
      "fn": "CLHouse.VoteProposal",
      "jump": "o",
      "offset": [
        1273,
        1317
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5398": {
      "offset": [
        1221,
        1267
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5399": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xC"
    },
    "5401": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5402": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5403": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5404": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5405": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "LT",
      "path": "19"
    },
    "5406": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1526"
    },
    "5409": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5410": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5412": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5413": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "REVERT",
      "path": "19"
    },
    "5414": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5415": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5417": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5418": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5419": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5420": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5422": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5423": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5424": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "5425": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x3"
    },
    "5427": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5428": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5429": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "MUL",
      "path": "19"
    },
    "5430": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "ADD",
      "path": "19"
    },
    "5431": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5432": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5433": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "5435": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5436": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "ADD",
      "path": "19"
    },
    "5437": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5438": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5443": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5445": {
      "op": "SHL"
    },
    "5446": {
      "op": "SUB"
    },
    "5447": {
      "offset": [
        1221,
        1267
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5448": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5449": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "AND",
      "path": "19"
    },
    "5450": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "5451": {
      "op": "POP"
    },
    "5452": {
      "offset": [
        1221,
        1267
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5453": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1555"
    },
    "5456": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5457": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2161"
    },
    "5460": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        1221,
        1267
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5461": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5462": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5463": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "5465": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "ADD",
      "path": "19"
    },
    "5466": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5468": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5469": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5470": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "DIV",
      "path": "19"
    },
    "5471": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "MUL",
      "path": "19"
    },
    "5472": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5474": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "ADD",
      "path": "19"
    },
    "5475": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5477": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5478": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5479": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5480": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "ADD",
      "path": "19"
    },
    "5481": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5483": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5484": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5485": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5486": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5487": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5488": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5489": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5490": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5491": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5493": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "ADD",
      "path": "19"
    },
    "5494": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5495": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5496": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5497": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1581"
    },
    "5500": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5501": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2161"
    },
    "5504": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        1221,
        1267
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5505": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5506": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5507": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5508": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x15CE"
    },
    "5511": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5512": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5513": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "5515": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "LT",
      "path": "19"
    },
    "5516": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x15A3"
    },
    "5519": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5520": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x100"
    },
    "5523": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5524": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5525": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5526": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "DIV",
      "path": "19"
    },
    "5527": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "MUL",
      "path": "19"
    },
    "5528": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5529": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5530": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5531": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5533": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "ADD",
      "path": "19"
    },
    "5534": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5535": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x15CE"
    },
    "5538": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5539": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5540": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5541": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "ADD",
      "path": "19"
    },
    "5542": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5543": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5544": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5546": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5547": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5549": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5551": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "5552": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5553": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5554": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5555": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5556": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5557": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5558": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5559": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "5561": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "ADD",
      "path": "19"
    },
    "5562": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5563": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5565": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "ADD",
      "path": "19"
    },
    "5566": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5567": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5568": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "GT",
      "path": "19"
    },
    "5569": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x15B1"
    },
    "5572": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5573": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5574": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5575": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "SUB",
      "path": "19"
    },
    "5576": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "5578": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "AND",
      "path": "19"
    },
    "5579": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5580": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "ADD",
      "path": "19"
    },
    "5581": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5582": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5583": {
      "op": "POP"
    },
    "5584": {
      "op": "POP"
    },
    "5585": {
      "op": "POP"
    },
    "5586": {
      "offset": [
        1221,
        1267
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x2"
    },
    "5588": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5589": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "5590": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "ADD",
      "path": "19"
    },
    "5591": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5592": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5593": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5594": {
      "op": "POP"
    },
    "5595": {
      "op": "POP"
    },
    "5596": {
      "offset": [
        1221,
        1267
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xFF"
    },
    "5598": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "AND",
      "path": "19"
    },
    "5599": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1221,
        1267
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5600": {
      "fn": "CLHouse.VoteProposal",
      "jump": "o",
      "offset": [
        1221,
        1267
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5601": {
      "offset": [
        1073,
        1140
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5602": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xA"
    },
    "5604": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5606": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5607": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5608": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5609": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5611": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5612": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5613": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5614": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5616": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5617": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "DUP5",
      "path": "19"
    },
    "5618": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "5619": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5620": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5621": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5622": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5623": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5624": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5625": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5626": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "5627": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5628": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5629": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "5631": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5632": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "ADD",
      "path": "19"
    },
    "5633": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5634": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5635": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xFF"
    },
    "5637": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5638": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "DUP5",
      "path": "19"
    },
    "5639": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "AND",
      "path": "19"
    },
    "5640": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "SWAP5",
      "path": "19"
    },
    "5641": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x100"
    },
    "5644": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5645": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "SWAP5",
      "path": "19"
    },
    "5646": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "DIV",
      "path": "19"
    },
    "5647": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "AND",
      "path": "19"
    },
    "5648": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5649": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5650": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5651": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x161B"
    },
    "5654": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5655": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2161"
    },
    "5658": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        1073,
        1140
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5659": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5660": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5661": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "5663": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "ADD",
      "path": "19"
    },
    "5664": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5666": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5667": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5668": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "DIV",
      "path": "19"
    },
    "5669": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "MUL",
      "path": "19"
    },
    "5670": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5672": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "ADD",
      "path": "19"
    },
    "5673": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5675": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5676": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5677": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5678": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "ADD",
      "path": "19"
    },
    "5679": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5681": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5682": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5683": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5684": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5685": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5686": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5687": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5688": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5689": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5691": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "ADD",
      "path": "19"
    },
    "5692": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5693": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5694": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5695": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1647"
    },
    "5698": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5699": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2161"
    },
    "5702": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        1073,
        1140
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5703": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5704": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5705": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5706": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1694"
    },
    "5709": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5710": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5711": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "5713": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "LT",
      "path": "19"
    },
    "5714": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1669"
    },
    "5717": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5718": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x100"
    },
    "5721": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5722": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5723": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5724": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "DIV",
      "path": "19"
    },
    "5725": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "MUL",
      "path": "19"
    },
    "5726": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5727": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5728": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5729": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5731": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "ADD",
      "path": "19"
    },
    "5732": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5733": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1694"
    },
    "5736": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5737": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5738": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5739": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "ADD",
      "path": "19"
    },
    "5740": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5741": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5742": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5744": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5745": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5747": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5749": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "5750": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5751": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5752": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5753": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5754": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5755": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5756": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5757": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "5759": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "ADD",
      "path": "19"
    },
    "5760": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5761": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5763": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "ADD",
      "path": "19"
    },
    "5764": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5765": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5766": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "GT",
      "path": "19"
    },
    "5767": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1677"
    },
    "5770": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5771": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5772": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5773": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "SUB",
      "path": "19"
    },
    "5774": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "5776": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "AND",
      "path": "19"
    },
    "5777": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5778": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "ADD",
      "path": "19"
    },
    "5779": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5780": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5781": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "POP",
      "path": "19"
    },
    "5782": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "POP",
      "path": "19"
    },
    "5783": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "POP",
      "path": "19"
    },
    "5784": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "POP",
      "path": "19"
    },
    "5785": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "POP",
      "path": "19"
    },
    "5786": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5787": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "POP",
      "path": "19"
    },
    "5788": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1073,
        1140
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5789": {
      "fn": "CLHouse.VoteProposal",
      "jump": "o",
      "offset": [
        1073,
        1140
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5790": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        8806,
        9557
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5791": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        9045,
        9058
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x2"
    },
    "5793": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        9045,
        9058
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "5794": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        9085,
        9271
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5796": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        9085,
        9271
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5797": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        8965,
        8979
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "5799": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        8965,
        8979
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5800": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        8965,
        8979
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5801": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        8965,
        8979
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5802": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        8965,
        8979
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5803": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        8965,
        8979
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5806": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5808": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5810": {
      "op": "SHL"
    },
    "5811": {
      "op": "SUB"
    },
    "5812": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        9045,
        9058
      ],
      "op": "AND",
      "path": "18"
    },
    "5813": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        9045,
        9058
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5814": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        9085,
        9271
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x16C7"
    },
    "5817": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        9085,
        9271
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5818": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        9188,
        9199
      ],
      "op": "DUP9",
      "path": "18"
    },
    "5819": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        9188,
        9199
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5820": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        9217,
        9229
      ],
      "op": "DUP9",
      "path": "18"
    },
    "5821": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        9217,
        9229
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5822": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        9247,
        9257
      ],
      "op": "DUP9",
      "path": "18"
    },
    "5823": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        9247,
        9257
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5824": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        9085,
        9271
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "5826": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        9085,
        9271
      ],
      "op": "ADD",
      "path": "18"
    },
    "5827": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        9085,
        9271
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2295"
    },
    "5830": {
      "fn": "CLHouse.PropRemoveMember",
      "jump": "i",
      "offset": [
        9085,
        9271
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5831": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        9085,
        9271
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5832": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        9085,
        9271
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5834": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        9085,
        9271
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5835": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        9085,
        9271
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5836": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5838": {
      "op": "NOT"
    },
    "5839": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        9085,
        9271
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5840": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        9085,
        9271
      ],
      "op": "DUP5",
      "path": "18"
    },
    "5841": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        9085,
        9271
      ],
      "op": "SUB",
      "path": "18"
    },
    "5842": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        9085,
        9271
      ],
      "op": "ADD",
      "path": "18"
    },
    "5843": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        9085,
        9271
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5844": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        9085,
        9271
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5845": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        9085,
        9271
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5846": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        9085,
        9271
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5847": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        9085,
        9271
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5848": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        9085,
        9271
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "5850": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        9085,
        9271
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5851": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        9085,
        9271
      ],
      "op": "ADD",
      "path": "18"
    },
    "5852": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        9085,
        9271
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5853": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        9085,
        9271
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5858": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5860": {
      "op": "SHL"
    },
    "5861": {
      "op": "SUB"
    },
    "5862": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        9085,
        9271
      ],
      "op": "AND",
      "path": "18"
    },
    "5863": {
      "op": "PUSH4",
      "value": "0xC4CAEB63"
    },
    "5868": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5870": {
      "op": "SHL"
    },
    "5871": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        9085,
        9271
      ],
      "op": "OR",
      "path": "18"
    },
    "5872": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        9085,
        9271
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5873": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        9085,
        9271
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5874": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        9045,
        9281
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5875": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        9045,
        9281
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1141"
    },
    "5878": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        9045,
        9281
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5879": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        9085,
        9271
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5880": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        9045,
        9281
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x20DB"
    },
    "5883": {
      "fn": "CLHouse.PropRemoveMember",
      "jump": "i",
      "offset": [
        9045,
        9281
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5884": {
      "offset": [
        1182,
        1215
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5885": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xB"
    },
    "5887": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5888": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5889": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5890": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5891": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "LT",
      "path": "19"
    },
    "5892": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x170C"
    },
    "5895": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5896": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5898": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5899": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "REVERT",
      "path": "19"
    },
    "5900": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5901": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5903": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5904": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5905": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5906": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5908": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5909": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5910": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "5911": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x5"
    },
    "5913": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5914": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5915": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "MUL",
      "path": "19"
    },
    "5916": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "ADD",
      "path": "19"
    },
    "5917": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5918": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5919": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "5921": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5922": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "ADD",
      "path": "19"
    },
    "5923": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5924": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5927": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5929": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5931": {
      "op": "SHL"
    },
    "5932": {
      "op": "SUB"
    },
    "5933": {
      "offset": [
        1182,
        1215
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5934": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "AND",
      "path": "19"
    },
    "5935": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "SWAP5",
      "path": "19"
    },
    "5936": {
      "op": "POP"
    },
    "5937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5939": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5941": {
      "op": "SHL"
    },
    "5942": {
      "offset": [
        1182,
        1215
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5943": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5944": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "DIV",
      "path": "19"
    },
    "5945": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xFF"
    },
    "5947": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "AND",
      "path": "19"
    },
    "5948": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5949": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5950": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1746"
    },
    "5953": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5954": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2161"
    },
    "5957": {
      "fn": "CLHouse.PropRemoveMember",
      "jump": "i",
      "offset": [
        1182,
        1215
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5958": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5959": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5960": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "5962": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "ADD",
      "path": "19"
    },
    "5963": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5965": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5966": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5967": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "DIV",
      "path": "19"
    },
    "5968": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "MUL",
      "path": "19"
    },
    "5969": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5971": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "ADD",
      "path": "19"
    },
    "5972": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5974": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5975": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5976": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5977": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "ADD",
      "path": "19"
    },
    "5978": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5980": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5981": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5982": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5983": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5984": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5985": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5986": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5987": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5988": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5990": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "ADD",
      "path": "19"
    },
    "5991": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5992": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5993": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5994": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1772"
    },
    "5997": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5998": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2161"
    },
    "6001": {
      "fn": "CLHouse.PropRemoveMember",
      "jump": "i",
      "offset": [
        1182,
        1215
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6002": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6003": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6004": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "6005": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x17BF"
    },
    "6008": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6009": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6010": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "6012": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "LT",
      "path": "19"
    },
    "6013": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1794"
    },
    "6016": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6017": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x100"
    },
    "6020": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6021": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "DUP4",
      "path": "19"
    },
    "6022": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6023": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "DIV",
      "path": "19"
    },
    "6024": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "MUL",
      "path": "19"
    },
    "6025": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "DUP4",
      "path": "19"
    },
    "6026": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6027": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6028": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6030": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "ADD",
      "path": "19"
    },
    "6031": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6032": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x17BF"
    },
    "6035": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6036": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6037": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6038": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "ADD",
      "path": "19"
    },
    "6039": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6040": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6041": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6043": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6044": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6046": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6048": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "6049": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6050": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6051": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6052": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6053": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6054": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6055": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6056": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "6058": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "ADD",
      "path": "19"
    },
    "6059": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6060": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6062": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "ADD",
      "path": "19"
    },
    "6063": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6064": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "DUP4",
      "path": "19"
    },
    "6065": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "GT",
      "path": "19"
    },
    "6066": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x17A2"
    },
    "6069": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6070": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6071": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6072": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "SUB",
      "path": "19"
    },
    "6073": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "6075": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "AND",
      "path": "19"
    },
    "6076": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6077": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "ADD",
      "path": "19"
    },
    "6078": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6079": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6080": {
      "op": "POP"
    },
    "6081": {
      "op": "POP"
    },
    "6082": {
      "op": "POP"
    },
    "6083": {
      "offset": [
        1182,
        1215
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x2"
    },
    "6085": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "DUP5",
      "path": "19"
    },
    "6086": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "ADD",
      "path": "19"
    },
    "6087": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6088": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x3"
    },
    "6090": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "DUP6",
      "path": "19"
    },
    "6091": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "ADD",
      "path": "19"
    },
    "6092": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6093": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "6095": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6096": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "SWAP6",
      "path": "19"
    },
    "6097": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "ADD",
      "path": "19"
    },
    "6098": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "6099": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "6100": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "SWAP5",
      "path": "19"
    },
    "6101": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6102": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "6103": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xFF"
    },
    "6105": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6106": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "DUP4",
      "path": "19"
    },
    "6107": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "AND",
      "path": "19"
    },
    "6108": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "SWAP5",
      "path": "19"
    },
    "6109": {
      "op": "POP"
    },
    "6110": {
      "offset": [
        1182,
        1215
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x100"
    },
    "6113": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "DUP4",
      "path": "19"
    },
    "6114": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "DIV",
      "path": "19"
    },
    "6115": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6116": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "AND",
      "path": "19"
    },
    "6117": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "6118": {
      "op": "POP"
    },
    "6119": {
      "offset": [
        1182,
        1215
      ],
      "op": "PUSH3",
      "path": "19",
      "value": "0x10000"
    },
    "6123": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "DUP4",
      "path": "19"
    },
    "6124": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "DIV",
      "path": "19"
    },
    "6125": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6126": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "AND",
      "path": "19"
    },
    "6127": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "6128": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x1000000"
    },
    "6133": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6134": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "DIV",
      "path": "19"
    },
    "6135": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "AND",
      "path": "19"
    },
    "6136": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6137": {
      "fn": "CLHouse.PropRemoveMember",
      "offset": [
        1182,
        1215
      ],
      "op": "DUP10",
      "path": "19"
    },
    "6138": {
      "fn": "CLHouse.PropRemoveMember",
      "jump": "o",
      "offset": [
        1182,
        1215
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6139": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11038,
        11901
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6140": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11325,
        11338
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x2"
    },
    "6142": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11325,
        11338
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "6143": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11365,
        11615
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "6145": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11365,
        11615
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6146": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11245,
        11259
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "6148": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11245,
        11259
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6149": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11245,
        11259
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6150": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11245,
        11259
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6151": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11245,
        11259
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6152": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11245,
        11259
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6157": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6159": {
      "op": "SHL"
    },
    "6160": {
      "op": "SUB"
    },
    "6161": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11325,
        11338
      ],
      "op": "AND",
      "path": "18"
    },
    "6162": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11325,
        11338
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6163": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11365,
        11615
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1828"
    },
    "6166": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11365,
        11615
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6167": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11479,
        11482
      ],
      "op": "DUP11",
      "path": "18"
    },
    "6168": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11479,
        11482
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6169": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11500,
        11513
      ],
      "op": "DUP11",
      "path": "18"
    },
    "6170": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11500,
        11513
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6171": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11531,
        11543
      ],
      "op": "DUP11",
      "path": "18"
    },
    "6172": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11531,
        11543
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6173": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11561,
        11573
      ],
      "op": "DUP11",
      "path": "18"
    },
    "6174": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11561,
        11573
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6175": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11591,
        11601
      ],
      "op": "DUP11",
      "path": "18"
    },
    "6176": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11591,
        11601
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6177": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11365,
        11615
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "6179": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11365,
        11615
      ],
      "op": "ADD",
      "path": "18"
    },
    "6180": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11365,
        11615
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x22B9"
    },
    "6183": {
      "fn": "CLHouse.PropTxERC20",
      "jump": "i",
      "offset": [
        11365,
        11615
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6184": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11365,
        11615
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6185": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11365,
        11615
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "6187": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11365,
        11615
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6188": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11365,
        11615
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6189": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6191": {
      "op": "NOT"
    },
    "6192": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11365,
        11615
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6193": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11365,
        11615
      ],
      "op": "DUP5",
      "path": "18"
    },
    "6194": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11365,
        11615
      ],
      "op": "SUB",
      "path": "18"
    },
    "6195": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11365,
        11615
      ],
      "op": "ADD",
      "path": "18"
    },
    "6196": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11365,
        11615
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6197": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11365,
        11615
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6198": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11365,
        11615
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6199": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11365,
        11615
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6200": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11365,
        11615
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6201": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11365,
        11615
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "6203": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11365,
        11615
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6204": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11365,
        11615
      ],
      "op": "ADD",
      "path": "18"
    },
    "6205": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11365,
        11615
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6206": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11365,
        11615
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6211": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6213": {
      "op": "SHL"
    },
    "6214": {
      "op": "SUB"
    },
    "6215": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11365,
        11615
      ],
      "op": "AND",
      "path": "18"
    },
    "6216": {
      "op": "PUSH4",
      "value": "0x6F2D58A7"
    },
    "6221": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "6223": {
      "op": "SHL"
    },
    "6224": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11365,
        11615
      ],
      "op": "OR",
      "path": "18"
    },
    "6225": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11365,
        11615
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6226": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11365,
        11615
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6227": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11325,
        11625
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6228": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11325,
        11625
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x185D"
    },
    "6231": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11325,
        11625
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6232": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11365,
        11615
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6233": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11325,
        11625
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x20DB"
    },
    "6236": {
      "fn": "CLHouse.PropTxERC20",
      "jump": "i",
      "offset": [
        11325,
        11625
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6237": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11325,
        11625
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6238": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11325,
        11625
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "6240": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11325,
        11625
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "6242": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11325,
        11625
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6243": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11325,
        11625
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6244": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11325,
        11625
      ],
      "op": "DUP4",
      "path": "18"
    },
    "6245": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11325,
        11625
      ],
      "op": "SUB",
      "path": "18"
    },
    "6246": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11325,
        11625
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6247": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11325,
        11625
      ],
      "op": "DUP6",
      "path": "18"
    },
    "6248": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11325,
        11625
      ],
      "op": "GAS",
      "path": "18"
    },
    "6249": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11325,
        11625
      ],
      "op": "DELEGATECALL",
      "path": "18"
    },
    "6250": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11325,
        11625
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6251": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11325,
        11625
      ],
      "op": "POP",
      "path": "18"
    },
    "6252": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11325,
        11625
      ],
      "op": "POP",
      "path": "18"
    },
    "6253": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11325,
        11625
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "6254": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11325,
        11625
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6255": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11325,
        11625
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "6257": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11325,
        11625
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6258": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11325,
        11625
      ],
      "op": "EQ",
      "path": "18"
    },
    "6259": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11325,
        11625
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1898"
    },
    "6262": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11325,
        11625
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "6263": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11325,
        11625
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "6265": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11325,
        11625
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6266": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11325,
        11625
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6267": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11325,
        11625
      ],
      "op": "POP",
      "path": "18"
    },
    "6268": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11325,
        11625
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "6270": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11325,
        11625
      ],
      "op": "NOT",
      "path": "18"
    },
    "6271": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11325,
        11625
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3F"
    },
    "6273": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11325,
        11625
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "6274": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11325,
        11625
      ],
      "op": "ADD",
      "path": "18"
    },
    "6275": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11325,
        11625
      ],
      "op": "AND",
      "path": "18"
    },
    "6276": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11325,
        11625
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6277": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11325,
        11625
      ],
      "op": "ADD",
      "path": "18"
    },
    "6278": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11325,
        11625
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "6280": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11325,
        11625
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6281": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11325,
        11625
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "6282": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11325,
        11625
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6283": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11325,
        11625
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6284": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11325,
        11625
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "6285": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11325,
        11625
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "6287": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11325,
        11625
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "6289": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11325,
        11625
      ],
      "op": "DUP5",
      "path": "18"
    },
    "6290": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11325,
        11625
      ],
      "op": "ADD",
      "path": "18"
    },
    "6291": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11325,
        11625
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "6292": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11325,
        11625
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x189D"
    },
    "6295": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11325,
        11625
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6296": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11325,
        11625
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6297": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11325,
        11625
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "6299": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11325,
        11625
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6300": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11325,
        11625
      ],
      "op": "POP",
      "path": "18"
    },
    "6301": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11325,
        11625
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6302": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11325,
        11625
      ],
      "op": "POP",
      "path": "18"
    },
    "6303": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11276,
        11625
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6304": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11276,
        11625
      ],
      "op": "POP",
      "path": "18"
    },
    "6305": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11276,
        11625
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6306": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11276,
        11625
      ],
      "op": "POP",
      "path": "18"
    },
    "6307": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11676,
        11680
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "6309": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11670,
        11681
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6310": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11706,
        11722
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "6311": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11758,
        11762
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6312": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11755,
        11756
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "6314": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11750,
        11753
      ],
      "op": "DUP4",
      "path": "18"
    },
    "6315": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11735,
        11763
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "6316": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11787,
        11800
      ],
      "op": "DUP4",
      "path": "18"
    },
    "6317": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11776,
        11852
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x18B4"
    },
    "6320": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11776,
        11852
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "6321": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11833,
        11837
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6322": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11828,
        11831
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6323": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11821,
        11838
      ],
      "op": "REVERT",
      "path": "18"
    },
    "6324": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11776,
        11852
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6325": {
      "op": "POP"
    },
    "6326": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11875,
        11885
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6327": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11875,
        11885
      ],
      "op": "SWAP9",
      "path": "18"
    },
    "6328": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        11038,
        11901
      ],
      "op": "SWAP8",
      "path": "18"
    },
    "6329": {
      "op": "POP"
    },
    "6330": {
      "op": "POP"
    },
    "6331": {
      "op": "POP"
    },
    "6332": {
      "op": "POP"
    },
    "6333": {
      "op": "POP"
    },
    "6334": {
      "op": "POP"
    },
    "6335": {
      "op": "POP"
    },
    "6336": {
      "op": "POP"
    },
    "6337": {
      "fn": "CLHouse.PropTxERC20",
      "jump": "o",
      "offset": [
        11038,
        11901
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6338": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        7656,
        8524
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6339": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        7949,
        7962
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x2"
    },
    "6341": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        7949,
        7962
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "6342": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        7989,
        8238
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "6344": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        7989,
        8238
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6345": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        7869,
        7883
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "6347": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        7869,
        7883
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6348": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        7869,
        7883
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6349": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        7869,
        7883
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6350": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        7869,
        7883
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6351": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        7869,
        7883
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6356": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6358": {
      "op": "SHL"
    },
    "6359": {
      "op": "SUB"
    },
    "6360": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        7949,
        7962
      ],
      "op": "AND",
      "path": "18"
    },
    "6361": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        7949,
        7962
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6362": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        7989,
        8238
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x18EF"
    },
    "6365": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        7989,
        8238
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6366": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        8104,
        8115
      ],
      "op": "DUP11",
      "path": "18"
    },
    "6367": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        8104,
        8115
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6368": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        8133,
        8138
      ],
      "op": "DUP11",
      "path": "18"
    },
    "6369": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        8133,
        8138
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6370": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        8156,
        8168
      ],
      "op": "DUP11",
      "path": "18"
    },
    "6371": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        8156,
        8168
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6372": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        8186,
        8196
      ],
      "op": "DUP11",
      "path": "18"
    },
    "6373": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        8186,
        8196
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6374": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        8214,
        8224
      ],
      "op": "DUP11",
      "path": "18"
    },
    "6375": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        8214,
        8224
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6376": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        7989,
        8238
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "6378": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        7989,
        8238
      ],
      "op": "ADD",
      "path": "18"
    },
    "6379": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        7989,
        8238
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x22EC"
    },
    "6382": {
      "fn": "CLHouse.PropInviteMember",
      "jump": "i",
      "offset": [
        7989,
        8238
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6383": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        7989,
        8238
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6384": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        7989,
        8238
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "6386": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        7989,
        8238
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6387": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        7989,
        8238
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6388": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6390": {
      "op": "NOT"
    },
    "6391": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        7989,
        8238
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6392": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        7989,
        8238
      ],
      "op": "DUP5",
      "path": "18"
    },
    "6393": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        7989,
        8238
      ],
      "op": "SUB",
      "path": "18"
    },
    "6394": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        7989,
        8238
      ],
      "op": "ADD",
      "path": "18"
    },
    "6395": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        7989,
        8238
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6396": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        7989,
        8238
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6397": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        7989,
        8238
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6398": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        7989,
        8238
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6399": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        7989,
        8238
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6400": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        7989,
        8238
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "6402": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        7989,
        8238
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6403": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        7989,
        8238
      ],
      "op": "ADD",
      "path": "18"
    },
    "6404": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        7989,
        8238
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6405": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        7989,
        8238
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6410": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6412": {
      "op": "SHL"
    },
    "6413": {
      "op": "SUB"
    },
    "6414": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        7989,
        8238
      ],
      "op": "AND",
      "path": "18"
    },
    "6415": {
      "op": "PUSH4",
      "value": "0x7F3756F3"
    },
    "6420": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "6422": {
      "op": "SHL"
    },
    "6423": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        7989,
        8238
      ],
      "op": "OR",
      "path": "18"
    },
    "6424": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        7989,
        8238
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6425": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        7989,
        8238
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6426": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        7949,
        8248
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6427": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        7949,
        8248
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x185D"
    },
    "6430": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        7949,
        8248
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6431": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        7989,
        8238
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6432": {
      "fn": "CLHouse.PropInviteMember",
      "offset": [
        7949,
        8248
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x20DB"
    },
    "6435": {
      "fn": "CLHouse.PropInviteMember",
      "jump": "i",
      "offset": [
        7949,
        8248
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6436": {
      "op": "JUMPDEST"
    },
    "6437": {
      "op": "DUP3"
    },
    "6438": {
      "op": "DUP1"
    },
    "6439": {
      "op": "SLOAD"
    },
    "6440": {
      "op": "PUSH2",
      "value": "0x1930"
    },
    "6443": {
      "op": "SWAP1"
    },
    "6444": {
      "op": "PUSH2",
      "value": "0x2161"
    },
    "6447": {
      "jump": "i",
      "op": "JUMP"
    },
    "6448": {
      "op": "JUMPDEST"
    },
    "6449": {
      "op": "SWAP1"
    },
    "6450": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6452": {
      "op": "MSTORE"
    },
    "6453": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6455": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6457": {
      "op": "KECCAK256"
    },
    "6458": {
      "op": "SWAP1"
    },
    "6459": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6461": {
      "op": "ADD"
    },
    "6462": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6464": {
      "op": "SWAP1"
    },
    "6465": {
      "op": "DIV"
    },
    "6466": {
      "op": "DUP2"
    },
    "6467": {
      "op": "ADD"
    },
    "6468": {
      "op": "SWAP3"
    },
    "6469": {
      "op": "DUP3"
    },
    "6470": {
      "op": "PUSH2",
      "value": "0x1952"
    },
    "6473": {
      "op": "JUMPI"
    },
    "6474": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6476": {
      "op": "DUP6"
    },
    "6477": {
      "op": "SSTORE"
    },
    "6478": {
      "op": "PUSH2",
      "value": "0x1998"
    },
    "6481": {
      "op": "JUMP"
    },
    "6482": {
      "op": "JUMPDEST"
    },
    "6483": {
      "op": "DUP3"
    },
    "6484": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6486": {
      "op": "LT"
    },
    "6487": {
      "op": "PUSH2",
      "value": "0x196B"
    },
    "6490": {
      "op": "JUMPI"
    },
    "6491": {
      "op": "DUP1"
    },
    "6492": {
      "op": "MLOAD"
    },
    "6493": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6495": {
      "op": "NOT"
    },
    "6496": {
      "op": "AND"
    },
    "6497": {
      "op": "DUP4"
    },
    "6498": {
      "op": "DUP1"
    },
    "6499": {
      "op": "ADD"
    },
    "6500": {
      "op": "OR"
    },
    "6501": {
      "op": "DUP6"
    },
    "6502": {
      "op": "SSTORE"
    },
    "6503": {
      "op": "PUSH2",
      "value": "0x1998"
    },
    "6506": {
      "op": "JUMP"
    },
    "6507": {
      "op": "JUMPDEST"
    },
    "6508": {
      "op": "DUP3"
    },
    "6509": {
      "op": "DUP1"
    },
    "6510": {
      "op": "ADD"
    },
    "6511": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6513": {
      "op": "ADD"
    },
    "6514": {
      "op": "DUP6"
    },
    "6515": {
      "op": "SSTORE"
    },
    "6516": {
      "op": "DUP3"
    },
    "6517": {
      "op": "ISZERO"
    },
    "6518": {
      "op": "PUSH2",
      "value": "0x1998"
    },
    "6521": {
      "op": "JUMPI"
    },
    "6522": {
      "op": "SWAP2"
    },
    "6523": {
      "op": "DUP3"
    },
    "6524": {
      "op": "ADD"
    },
    "6525": {
      "op": "JUMPDEST"
    },
    "6526": {
      "op": "DUP3"
    },
    "6527": {
      "op": "DUP2"
    },
    "6528": {
      "op": "GT"
    },
    "6529": {
      "op": "ISZERO"
    },
    "6530": {
      "op": "PUSH2",
      "value": "0x1998"
    },
    "6533": {
      "op": "JUMPI"
    },
    "6534": {
      "op": "DUP3"
    },
    "6535": {
      "op": "MLOAD"
    },
    "6536": {
      "op": "DUP3"
    },
    "6537": {
      "op": "SSTORE"
    },
    "6538": {
      "op": "SWAP2"
    },
    "6539": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6541": {
      "op": "ADD"
    },
    "6542": {
      "op": "SWAP2"
    },
    "6543": {
      "op": "SWAP1"
    },
    "6544": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6546": {
      "op": "ADD"
    },
    "6547": {
      "op": "SWAP1"
    },
    "6548": {
      "op": "PUSH2",
      "value": "0x197D"
    },
    "6551": {
      "op": "JUMP"
    },
    "6552": {
      "op": "JUMPDEST"
    },
    "6553": {
      "op": "POP"
    },
    "6554": {
      "op": "PUSH2",
      "value": "0x19A4"
    },
    "6557": {
      "op": "SWAP3"
    },
    "6558": {
      "op": "SWAP2"
    },
    "6559": {
      "op": "POP"
    },
    "6560": {
      "op": "PUSH2",
      "value": "0x19A8"
    },
    "6563": {
      "jump": "i",
      "op": "JUMP"
    },
    "6564": {
      "op": "JUMPDEST"
    },
    "6565": {
      "op": "POP"
    },
    "6566": {
      "op": "SWAP1"
    },
    "6567": {
      "jump": "o",
      "op": "JUMP"
    },
    "6568": {
      "op": "JUMPDEST"
    },
    "6569": {
      "op": "JUMPDEST"
    },
    "6570": {
      "op": "DUP1"
    },
    "6571": {
      "op": "DUP3"
    },
    "6572": {
      "op": "GT"
    },
    "6573": {
      "op": "ISZERO"
    },
    "6574": {
      "op": "PUSH2",
      "value": "0x19A4"
    },
    "6577": {
      "op": "JUMPI"
    },
    "6578": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6580": {
      "op": "DUP2"
    },
    "6581": {
      "op": "SSTORE"
    },
    "6582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6584": {
      "op": "ADD"
    },
    "6585": {
      "op": "PUSH2",
      "value": "0x19A9"
    },
    "6588": {
      "op": "JUMP"
    },
    "6589": {
      "op": "JUMPDEST"
    },
    "6590": {
      "op": "DUP1"
    },
    "6591": {
      "op": "CALLDATALOAD"
    },
    "6592": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6596": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6598": {
      "op": "SHL"
    },
    "6599": {
      "op": "SUB"
    },
    "6600": {
      "op": "DUP2"
    },
    "6601": {
      "op": "AND"
    },
    "6602": {
      "op": "DUP2"
    },
    "6603": {
      "op": "EQ"
    },
    "6604": {
      "op": "PUSH2",
      "value": "0x19D4"
    },
    "6607": {
      "op": "JUMPI"
    },
    "6608": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6610": {
      "op": "DUP1"
    },
    "6611": {
      "op": "REVERT"
    },
    "6612": {
      "op": "JUMPDEST"
    },
    "6613": {
      "op": "SWAP2"
    },
    "6614": {
      "op": "SWAP1"
    },
    "6615": {
      "op": "POP"
    },
    "6616": {
      "jump": "o",
      "op": "JUMP"
    },
    "6617": {
      "op": "JUMPDEST"
    },
    "6618": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6623": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6625": {
      "op": "SHL"
    },
    "6626": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6628": {
      "op": "MSTORE"
    },
    "6629": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "6631": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6633": {
      "op": "MSTORE"
    },
    "6634": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6636": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6638": {
      "op": "REVERT"
    },
    "6639": {
      "op": "JUMPDEST"
    },
    "6640": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6642": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6651": {
      "op": "DUP1"
    },
    "6652": {
      "op": "DUP5"
    },
    "6653": {
      "op": "GT"
    },
    "6654": {
      "op": "ISZERO"
    },
    "6655": {
      "op": "PUSH2",
      "value": "0x1A0A"
    },
    "6658": {
      "op": "JUMPI"
    },
    "6659": {
      "op": "PUSH2",
      "value": "0x1A0A"
    },
    "6662": {
      "op": "PUSH2",
      "value": "0x19D9"
    },
    "6665": {
      "jump": "i",
      "op": "JUMP"
    },
    "6666": {
      "op": "JUMPDEST"
    },
    "6667": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6669": {
      "op": "MLOAD"
    },
    "6670": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6672": {
      "op": "DUP6"
    },
    "6673": {
      "op": "ADD"
    },
    "6674": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6676": {
      "op": "NOT"
    },
    "6677": {
      "op": "SWAP1"
    },
    "6678": {
      "op": "DUP2"
    },
    "6679": {
      "op": "AND"
    },
    "6680": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "6682": {
      "op": "ADD"
    },
    "6683": {
      "op": "AND"
    },
    "6684": {
      "op": "DUP2"
    },
    "6685": {
      "op": "ADD"
    },
    "6686": {
      "op": "SWAP1"
    },
    "6687": {
      "op": "DUP3"
    },
    "6688": {
      "op": "DUP3"
    },
    "6689": {
      "op": "GT"
    },
    "6690": {
      "op": "DUP2"
    },
    "6691": {
      "op": "DUP4"
    },
    "6692": {
      "op": "LT"
    },
    "6693": {
      "op": "OR"
    },
    "6694": {
      "op": "ISZERO"
    },
    "6695": {
      "op": "PUSH2",
      "value": "0x1A32"
    },
    "6698": {
      "op": "JUMPI"
    },
    "6699": {
      "op": "PUSH2",
      "value": "0x1A32"
    },
    "6702": {
      "op": "PUSH2",
      "value": "0x19D9"
    },
    "6705": {
      "jump": "i",
      "op": "JUMP"
    },
    "6706": {
      "op": "JUMPDEST"
    },
    "6707": {
      "op": "DUP2"
    },
    "6708": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6710": {
      "op": "MSTORE"
    },
    "6711": {
      "op": "DUP1"
    },
    "6712": {
      "op": "SWAP4"
    },
    "6713": {
      "op": "POP"
    },
    "6714": {
      "op": "DUP6"
    },
    "6715": {
      "op": "DUP2"
    },
    "6716": {
      "op": "MSTORE"
    },
    "6717": {
      "op": "DUP7"
    },
    "6718": {
      "op": "DUP7"
    },
    "6719": {
      "op": "DUP7"
    },
    "6720": {
      "op": "ADD"
    },
    "6721": {
      "op": "GT"
    },
    "6722": {
      "op": "ISZERO"
    },
    "6723": {
      "op": "PUSH2",
      "value": "0x1A4B"
    },
    "6726": {
      "op": "JUMPI"
    },
    "6727": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6729": {
      "op": "DUP1"
    },
    "6730": {
      "op": "REVERT"
    },
    "6731": {
      "op": "JUMPDEST"
    },
    "6732": {
      "op": "DUP6"
    },
    "6733": {
      "op": "DUP6"
    },
    "6734": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6736": {
      "op": "DUP4"
    },
    "6737": {
      "op": "ADD"
    },
    "6738": {
      "op": "CALLDATACOPY"
    },
    "6739": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6741": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6743": {
      "op": "DUP8"
    },
    "6744": {
      "op": "DUP4"
    },
    "6745": {
      "op": "ADD"
    },
    "6746": {
      "op": "ADD"
    },
    "6747": {
      "op": "MSTORE"
    },
    "6748": {
      "op": "POP"
    },
    "6749": {
      "op": "POP"
    },
    "6750": {
      "op": "POP"
    },
    "6751": {
      "op": "SWAP4"
    },
    "6752": {
      "op": "SWAP3"
    },
    "6753": {
      "op": "POP"
    },
    "6754": {
      "op": "POP"
    },
    "6755": {
      "op": "POP"
    },
    "6756": {
      "jump": "o",
      "op": "JUMP"
    },
    "6757": {
      "op": "JUMPDEST"
    },
    "6758": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6760": {
      "op": "DUP3"
    },
    "6761": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6763": {
      "op": "DUP4"
    },
    "6764": {
      "op": "ADD"
    },
    "6765": {
      "op": "SLT"
    },
    "6766": {
      "op": "PUSH2",
      "value": "0x1A76"
    },
    "6769": {
      "op": "JUMPI"
    },
    "6770": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6772": {
      "op": "DUP1"
    },
    "6773": {
      "op": "REVERT"
    },
    "6774": {
      "op": "JUMPDEST"
    },
    "6775": {
      "op": "PUSH2",
      "value": "0x1A85"
    },
    "6778": {
      "op": "DUP4"
    },
    "6779": {
      "op": "DUP4"
    },
    "6780": {
      "op": "CALLDATALOAD"
    },
    "6781": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6783": {
      "op": "DUP6"
    },
    "6784": {
      "op": "ADD"
    },
    "6785": {
      "op": "PUSH2",
      "value": "0x19EF"
    },
    "6788": {
      "jump": "i",
      "op": "JUMP"
    },
    "6789": {
      "op": "JUMPDEST"
    },
    "6790": {
      "op": "SWAP4"
    },
    "6791": {
      "op": "SWAP3"
    },
    "6792": {
      "op": "POP"
    },
    "6793": {
      "op": "POP"
    },
    "6794": {
      "op": "POP"
    },
    "6795": {
      "jump": "o",
      "op": "JUMP"
    },
    "6796": {
      "op": "JUMPDEST"
    },
    "6797": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6799": {
      "op": "DUP1"
    },
    "6800": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6802": {
      "op": "DUP1"
    },
    "6803": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6805": {
      "op": "DUP6"
    },
    "6806": {
      "op": "DUP8"
    },
    "6807": {
      "op": "SUB"
    },
    "6808": {
      "op": "SLT"
    },
    "6809": {
      "op": "ISZERO"
    },
    "6810": {
      "op": "PUSH2",
      "value": "0x1AA2"
    },
    "6813": {
      "op": "JUMPI"
    },
    "6814": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6816": {
      "op": "DUP1"
    },
    "6817": {
      "op": "REVERT"
    },
    "6818": {
      "op": "JUMPDEST"
    },
    "6819": {
      "op": "PUSH2",
      "value": "0x1AAB"
    },
    "6822": {
      "op": "DUP6"
    },
    "6823": {
      "op": "PUSH2",
      "value": "0x19BD"
    },
    "6826": {
      "jump": "i",
      "op": "JUMP"
    },
    "6827": {
      "op": "JUMPDEST"
    },
    "6828": {
      "op": "SWAP4"
    },
    "6829": {
      "op": "POP"
    },
    "6830": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6832": {
      "op": "DUP6"
    },
    "6833": {
      "op": "ADD"
    },
    "6834": {
      "op": "CALLDATALOAD"
    },
    "6835": {
      "op": "SWAP3"
    },
    "6836": {
      "op": "POP"
    },
    "6837": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6839": {
      "op": "DUP6"
    },
    "6840": {
      "op": "ADD"
    },
    "6841": {
      "op": "CALLDATALOAD"
    },
    "6842": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6851": {
      "op": "DUP2"
    },
    "6852": {
      "op": "GT"
    },
    "6853": {
      "op": "ISZERO"
    },
    "6854": {
      "op": "PUSH2",
      "value": "0x1ACE"
    },
    "6857": {
      "op": "JUMPI"
    },
    "6858": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6860": {
      "op": "DUP1"
    },
    "6861": {
      "op": "REVERT"
    },
    "6862": {
      "op": "JUMPDEST"
    },
    "6863": {
      "op": "PUSH2",
      "value": "0x1ADA"
    },
    "6866": {
      "op": "DUP8"
    },
    "6867": {
      "op": "DUP3"
    },
    "6868": {
      "op": "DUP9"
    },
    "6869": {
      "op": "ADD"
    },
    "6870": {
      "op": "PUSH2",
      "value": "0x1A65"
    },
    "6873": {
      "jump": "i",
      "op": "JUMP"
    },
    "6874": {
      "op": "JUMPDEST"
    },
    "6875": {
      "op": "SWAP5"
    },
    "6876": {
      "op": "SWAP8"
    },
    "6877": {
      "op": "SWAP4"
    },
    "6878": {
      "op": "SWAP7"
    },
    "6879": {
      "op": "POP"
    },
    "6880": {
      "op": "SWAP4"
    },
    "6881": {
      "op": "SWAP5"
    },
    "6882": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6884": {
      "op": "ADD"
    },
    "6885": {
      "op": "CALLDATALOAD"
    },
    "6886": {
      "op": "SWAP4"
    },
    "6887": {
      "op": "POP"
    },
    "6888": {
      "op": "POP"
    },
    "6889": {
      "op": "POP"
    },
    "6890": {
      "jump": "o",
      "op": "JUMP"
    },
    "6891": {
      "op": "JUMPDEST"
    },
    "6892": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6894": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6896": {
      "op": "DUP3"
    },
    "6897": {
      "op": "DUP5"
    },
    "6898": {
      "op": "SUB"
    },
    "6899": {
      "op": "SLT"
    },
    "6900": {
      "op": "ISZERO"
    },
    "6901": {
      "op": "PUSH2",
      "value": "0x1AFD"
    },
    "6904": {
      "op": "JUMPI"
    },
    "6905": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6907": {
      "op": "DUP1"
    },
    "6908": {
      "op": "REVERT"
    },
    "6909": {
      "op": "JUMPDEST"
    },
    "6910": {
      "op": "PUSH2",
      "value": "0x1A85"
    },
    "6913": {
      "op": "DUP3"
    },
    "6914": {
      "op": "PUSH2",
      "value": "0x19BD"
    },
    "6917": {
      "jump": "i",
      "op": "JUMP"
    },
    "6918": {
      "op": "JUMPDEST"
    },
    "6919": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6921": {
      "op": "DUP1"
    },
    "6922": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6924": {
      "op": "DUP1"
    },
    "6925": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6927": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6929": {
      "op": "DUP7"
    },
    "6930": {
      "op": "DUP9"
    },
    "6931": {
      "op": "SUB"
    },
    "6932": {
      "op": "SLT"
    },
    "6933": {
      "op": "ISZERO"
    },
    "6934": {
      "op": "PUSH2",
      "value": "0x1B1E"
    },
    "6937": {
      "op": "JUMPI"
    },
    "6938": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6940": {
      "op": "DUP1"
    },
    "6941": {
      "op": "REVERT"
    },
    "6942": {
      "op": "JUMPDEST"
    },
    "6943": {
      "op": "PUSH2",
      "value": "0x1B27"
    },
    "6946": {
      "op": "DUP7"
    },
    "6947": {
      "op": "PUSH2",
      "value": "0x19BD"
    },
    "6950": {
      "jump": "i",
      "op": "JUMP"
    },
    "6951": {
      "op": "JUMPDEST"
    },
    "6952": {
      "op": "SWAP5"
    },
    "6953": {
      "op": "POP"
    },
    "6954": {
      "op": "PUSH2",
      "value": "0x1B35"
    },
    "6957": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6959": {
      "op": "DUP8"
    },
    "6960": {
      "op": "ADD"
    },
    "6961": {
      "op": "PUSH2",
      "value": "0x19BD"
    },
    "6964": {
      "jump": "i",
      "op": "JUMP"
    },
    "6965": {
      "op": "JUMPDEST"
    },
    "6966": {
      "op": "SWAP4"
    },
    "6967": {
      "op": "POP"
    },
    "6968": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6970": {
      "op": "DUP7"
    },
    "6971": {
      "op": "ADD"
    },
    "6972": {
      "op": "CALLDATALOAD"
    },
    "6973": {
      "op": "SWAP3"
    },
    "6974": {
      "op": "POP"
    },
    "6975": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6977": {
      "op": "DUP7"
    },
    "6978": {
      "op": "ADD"
    },
    "6979": {
      "op": "CALLDATALOAD"
    },
    "6980": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6989": {
      "op": "DUP2"
    },
    "6990": {
      "op": "GT"
    },
    "6991": {
      "op": "ISZERO"
    },
    "6992": {
      "op": "PUSH2",
      "value": "0x1B58"
    },
    "6995": {
      "op": "JUMPI"
    },
    "6996": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6998": {
      "op": "DUP1"
    },
    "6999": {
      "op": "REVERT"
    },
    "7000": {
      "op": "JUMPDEST"
    },
    "7001": {
      "op": "PUSH2",
      "value": "0x1B64"
    },
    "7004": {
      "op": "DUP9"
    },
    "7005": {
      "op": "DUP3"
    },
    "7006": {
      "op": "DUP10"
    },
    "7007": {
      "op": "ADD"
    },
    "7008": {
      "op": "PUSH2",
      "value": "0x1A65"
    },
    "7011": {
      "jump": "i",
      "op": "JUMP"
    },
    "7012": {
      "op": "JUMPDEST"
    },
    "7013": {
      "op": "SWAP6"
    },
    "7014": {
      "op": "SWAP9"
    },
    "7015": {
      "op": "SWAP5"
    },
    "7016": {
      "op": "SWAP8"
    },
    "7017": {
      "op": "POP"
    },
    "7018": {
      "op": "SWAP3"
    },
    "7019": {
      "op": "SWAP6"
    },
    "7020": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7022": {
      "op": "ADD"
    },
    "7023": {
      "op": "CALLDATALOAD"
    },
    "7024": {
      "op": "SWAP4"
    },
    "7025": {
      "op": "SWAP3"
    },
    "7026": {
      "op": "POP"
    },
    "7027": {
      "op": "POP"
    },
    "7028": {
      "op": "POP"
    },
    "7029": {
      "jump": "o",
      "op": "JUMP"
    },
    "7030": {
      "op": "JUMPDEST"
    },
    "7031": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7033": {
      "op": "DUP1"
    },
    "7034": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7036": {
      "op": "DUP4"
    },
    "7037": {
      "op": "DUP6"
    },
    "7038": {
      "op": "SUB"
    },
    "7039": {
      "op": "SLT"
    },
    "7040": {
      "op": "ISZERO"
    },
    "7041": {
      "op": "PUSH2",
      "value": "0x1B89"
    },
    "7044": {
      "op": "JUMPI"
    },
    "7045": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7047": {
      "op": "DUP1"
    },
    "7048": {
      "op": "REVERT"
    },
    "7049": {
      "op": "JUMPDEST"
    },
    "7050": {
      "op": "DUP3"
    },
    "7051": {
      "op": "CALLDATALOAD"
    },
    "7052": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7061": {
      "op": "DUP1"
    },
    "7062": {
      "op": "DUP3"
    },
    "7063": {
      "op": "GT"
    },
    "7064": {
      "op": "ISZERO"
    },
    "7065": {
      "op": "PUSH2",
      "value": "0x1BA1"
    },
    "7068": {
      "op": "JUMPI"
    },
    "7069": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7071": {
      "op": "DUP1"
    },
    "7072": {
      "op": "REVERT"
    },
    "7073": {
      "op": "JUMPDEST"
    },
    "7074": {
      "op": "PUSH2",
      "value": "0x1BAD"
    },
    "7077": {
      "op": "DUP7"
    },
    "7078": {
      "op": "DUP4"
    },
    "7079": {
      "op": "DUP8"
    },
    "7080": {
      "op": "ADD"
    },
    "7081": {
      "op": "PUSH2",
      "value": "0x1A65"
    },
    "7084": {
      "jump": "i",
      "op": "JUMP"
    },
    "7085": {
      "op": "JUMPDEST"
    },
    "7086": {
      "op": "SWAP4"
    },
    "7087": {
      "op": "POP"
    },
    "7088": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7090": {
      "op": "DUP6"
    },
    "7091": {
      "op": "ADD"
    },
    "7092": {
      "op": "CALLDATALOAD"
    },
    "7093": {
      "op": "SWAP2"
    },
    "7094": {
      "op": "POP"
    },
    "7095": {
      "op": "DUP1"
    },
    "7096": {
      "op": "DUP3"
    },
    "7097": {
      "op": "GT"
    },
    "7098": {
      "op": "ISZERO"
    },
    "7099": {
      "op": "PUSH2",
      "value": "0x1BC3"
    },
    "7102": {
      "op": "JUMPI"
    },
    "7103": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7105": {
      "op": "DUP1"
    },
    "7106": {
      "op": "REVERT"
    },
    "7107": {
      "op": "JUMPDEST"
    },
    "7108": {
      "op": "POP"
    },
    "7109": {
      "op": "PUSH2",
      "value": "0x1BD0"
    },
    "7112": {
      "op": "DUP6"
    },
    "7113": {
      "op": "DUP3"
    },
    "7114": {
      "op": "DUP7"
    },
    "7115": {
      "op": "ADD"
    },
    "7116": {
      "op": "PUSH2",
      "value": "0x1A65"
    },
    "7119": {
      "jump": "i",
      "op": "JUMP"
    },
    "7120": {
      "op": "JUMPDEST"
    },
    "7121": {
      "op": "SWAP2"
    },
    "7122": {
      "op": "POP"
    },
    "7123": {
      "op": "POP"
    },
    "7124": {
      "op": "SWAP3"
    },
    "7125": {
      "op": "POP"
    },
    "7126": {
      "op": "SWAP3"
    },
    "7127": {
      "op": "SWAP1"
    },
    "7128": {
      "op": "POP"
    },
    "7129": {
      "jump": "o",
      "op": "JUMP"
    },
    "7130": {
      "op": "JUMPDEST"
    },
    "7131": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7133": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7135": {
      "op": "DUP3"
    },
    "7136": {
      "op": "DUP5"
    },
    "7137": {
      "op": "SUB"
    },
    "7138": {
      "op": "SLT"
    },
    "7139": {
      "op": "ISZERO"
    },
    "7140": {
      "op": "PUSH2",
      "value": "0x1BEC"
    },
    "7143": {
      "op": "JUMPI"
    },
    "7144": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7146": {
      "op": "DUP1"
    },
    "7147": {
      "op": "REVERT"
    },
    "7148": {
      "op": "JUMPDEST"
    },
    "7149": {
      "op": "POP"
    },
    "7150": {
      "op": "CALLDATALOAD"
    },
    "7151": {
      "op": "SWAP2"
    },
    "7152": {
      "op": "SWAP1"
    },
    "7153": {
      "op": "POP"
    },
    "7154": {
      "jump": "o",
      "op": "JUMP"
    },
    "7155": {
      "op": "JUMPDEST"
    },
    "7156": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7158": {
      "op": "JUMPDEST"
    },
    "7159": {
      "op": "DUP4"
    },
    "7160": {
      "op": "DUP2"
    },
    "7161": {
      "op": "LT"
    },
    "7162": {
      "op": "ISZERO"
    },
    "7163": {
      "op": "PUSH2",
      "value": "0x1C0E"
    },
    "7166": {
      "op": "JUMPI"
    },
    "7167": {
      "op": "DUP2"
    },
    "7168": {
      "op": "DUP2"
    },
    "7169": {
      "op": "ADD"
    },
    "7170": {
      "op": "MLOAD"
    },
    "7171": {
      "op": "DUP4"
    },
    "7172": {
      "op": "DUP3"
    },
    "7173": {
      "op": "ADD"
    },
    "7174": {
      "op": "MSTORE"
    },
    "7175": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7177": {
      "op": "ADD"
    },
    "7178": {
      "op": "PUSH2",
      "value": "0x1BF6"
    },
    "7181": {
      "op": "JUMP"
    },
    "7182": {
      "op": "JUMPDEST"
    },
    "7183": {
      "op": "DUP4"
    },
    "7184": {
      "op": "DUP2"
    },
    "7185": {
      "op": "GT"
    },
    "7186": {
      "op": "ISZERO"
    },
    "7187": {
      "op": "PUSH2",
      "value": "0x1C1D"
    },
    "7190": {
      "op": "JUMPI"
    },
    "7191": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7193": {
      "op": "DUP5"
    },
    "7194": {
      "op": "DUP5"
    },
    "7195": {
      "op": "ADD"
    },
    "7196": {
      "op": "MSTORE"
    },
    "7197": {
      "op": "JUMPDEST"
    },
    "7198": {
      "op": "POP"
    },
    "7199": {
      "op": "POP"
    },
    "7200": {
      "op": "POP"
    },
    "7201": {
      "op": "POP"
    },
    "7202": {
      "jump": "o",
      "op": "JUMP"
    },
    "7203": {
      "op": "JUMPDEST"
    },
    "7204": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7206": {
      "op": "DUP2"
    },
    "7207": {
      "op": "MLOAD"
    },
    "7208": {
      "op": "DUP1"
    },
    "7209": {
      "op": "DUP5"
    },
    "7210": {
      "op": "MSTORE"
    },
    "7211": {
      "op": "PUSH2",
      "value": "0x1C3B"
    },
    "7214": {
      "op": "DUP2"
    },
    "7215": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7217": {
      "op": "DUP7"
    },
    "7218": {
      "op": "ADD"
    },
    "7219": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7221": {
      "op": "DUP7"
    },
    "7222": {
      "op": "ADD"
    },
    "7223": {
      "op": "PUSH2",
      "value": "0x1BF3"
    },
    "7226": {
      "jump": "i",
      "op": "JUMP"
    },
    "7227": {
      "op": "JUMPDEST"
    },
    "7228": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7230": {
      "op": "ADD"
    },
    "7231": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7233": {
      "op": "NOT"
    },
    "7234": {
      "op": "AND"
    },
    "7235": {
      "op": "SWAP3"
    },
    "7236": {
      "op": "SWAP1"
    },
    "7237": {
      "op": "SWAP3"
    },
    "7238": {
      "op": "ADD"
    },
    "7239": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7241": {
      "op": "ADD"
    },
    "7242": {
      "op": "SWAP3"
    },
    "7243": {
      "op": "SWAP2"
    },
    "7244": {
      "op": "POP"
    },
    "7245": {
      "op": "POP"
    },
    "7246": {
      "jump": "o",
      "op": "JUMP"
    },
    "7247": {
      "op": "JUMPDEST"
    },
    "7248": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7250": {
      "op": "DUP2"
    },
    "7251": {
      "op": "MSTORE"
    },
    "7252": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7254": {
      "op": "PUSH2",
      "value": "0x1A85"
    },
    "7257": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7259": {
      "op": "DUP4"
    },
    "7260": {
      "op": "ADD"
    },
    "7261": {
      "op": "DUP5"
    },
    "7262": {
      "op": "PUSH2",
      "value": "0x1C23"
    },
    "7265": {
      "jump": "i",
      "op": "JUMP"
    },
    "7266": {
      "op": "JUMPDEST"
    },
    "7267": {
      "op": "DUP3"
    },
    "7268": {
      "op": "ISZERO"
    },
    "7269": {
      "op": "ISZERO"
    },
    "7270": {
      "op": "DUP2"
    },
    "7271": {
      "op": "MSTORE"
    },
    "7272": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7274": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7276": {
      "op": "DUP3"
    },
    "7277": {
      "op": "ADD"
    },
    "7278": {
      "op": "MSTORE"
    },
    "7279": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7281": {
      "op": "PUSH2",
      "value": "0x1C7D"
    },
    "7284": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7286": {
      "op": "DUP4"
    },
    "7287": {
      "op": "ADD"
    },
    "7288": {
      "op": "DUP5"
    },
    "7289": {
      "op": "PUSH2",
      "value": "0x1C23"
    },
    "7292": {
      "jump": "i",
      "op": "JUMP"
    },
    "7293": {
      "op": "JUMPDEST"
    },
    "7294": {
      "op": "SWAP5"
    },
    "7295": {
      "op": "SWAP4"
    },
    "7296": {
      "op": "POP"
    },
    "7297": {
      "op": "POP"
    },
    "7298": {
      "op": "POP"
    },
    "7299": {
      "op": "POP"
    },
    "7300": {
      "jump": "o",
      "op": "JUMP"
    },
    "7301": {
      "op": "JUMPDEST"
    },
    "7302": {
      "op": "DUP1"
    },
    "7303": {
      "op": "CALLDATALOAD"
    },
    "7304": {
      "op": "DUP1"
    },
    "7305": {
      "op": "ISZERO"
    },
    "7306": {
      "op": "ISZERO"
    },
    "7307": {
      "op": "DUP2"
    },
    "7308": {
      "op": "EQ"
    },
    "7309": {
      "op": "PUSH2",
      "value": "0x19D4"
    },
    "7312": {
      "op": "JUMPI"
    },
    "7313": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7315": {
      "op": "DUP1"
    },
    "7316": {
      "op": "REVERT"
    },
    "7317": {
      "op": "JUMPDEST"
    },
    "7318": {
      "op": "DUP1"
    },
    "7319": {
      "op": "CALLDATALOAD"
    },
    "7320": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7322": {
      "op": "DUP2"
    },
    "7323": {
      "op": "AND"
    },
    "7324": {
      "op": "DUP2"
    },
    "7325": {
      "op": "EQ"
    },
    "7326": {
      "op": "PUSH2",
      "value": "0x19D4"
    },
    "7329": {
      "op": "JUMPI"
    },
    "7330": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7332": {
      "op": "DUP1"
    },
    "7333": {
      "op": "REVERT"
    },
    "7334": {
      "op": "JUMPDEST"
    },
    "7335": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7337": {
      "op": "DUP1"
    },
    "7338": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7340": {
      "op": "DUP1"
    },
    "7341": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7343": {
      "op": "DUP1"
    },
    "7344": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7346": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7348": {
      "op": "DUP9"
    },
    "7349": {
      "op": "DUP11"
    },
    "7350": {
      "op": "SUB"
    },
    "7351": {
      "op": "SLT"
    },
    "7352": {
      "op": "ISZERO"
    },
    "7353": {
      "op": "PUSH2",
      "value": "0x1CC1"
    },
    "7356": {
      "op": "JUMPI"
    },
    "7357": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7359": {
      "op": "DUP1"
    },
    "7360": {
      "op": "REVERT"
    },
    "7361": {
      "op": "JUMPDEST"
    },
    "7362": {
      "op": "PUSH2",
      "value": "0x1CCA"
    },
    "7365": {
      "op": "DUP9"
    },
    "7366": {
      "op": "PUSH2",
      "value": "0x19BD"
    },
    "7369": {
      "jump": "i",
      "op": "JUMP"
    },
    "7370": {
      "op": "JUMPDEST"
    },
    "7371": {
      "op": "SWAP7"
    },
    "7372": {
      "op": "POP"
    },
    "7373": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7375": {
      "op": "DUP9"
    },
    "7376": {
      "op": "ADD"
    },
    "7377": {
      "op": "CALLDATALOAD"
    },
    "7378": {
      "op": "SWAP6"
    },
    "7379": {
      "op": "POP"
    },
    "7380": {
      "op": "PUSH2",
      "value": "0x1CDF"
    },
    "7383": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7385": {
      "op": "DUP10"
    },
    "7386": {
      "op": "ADD"
    },
    "7387": {
      "op": "PUSH2",
      "value": "0x1C85"
    },
    "7390": {
      "jump": "i",
      "op": "JUMP"
    },
    "7391": {
      "op": "JUMPDEST"
    },
    "7392": {
      "op": "SWAP5"
    },
    "7393": {
      "op": "POP"
    },
    "7394": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7396": {
      "op": "DUP9"
    },
    "7397": {
      "op": "ADD"
    },
    "7398": {
      "op": "CALLDATALOAD"
    },
    "7399": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7408": {
      "op": "DUP2"
    },
    "7409": {
      "op": "GT"
    },
    "7410": {
      "op": "ISZERO"
    },
    "7411": {
      "op": "PUSH2",
      "value": "0x1CFB"
    },
    "7414": {
      "op": "JUMPI"
    },
    "7415": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7417": {
      "op": "DUP1"
    },
    "7418": {
      "op": "REVERT"
    },
    "7419": {
      "op": "JUMPDEST"
    },
    "7420": {
      "op": "PUSH2",
      "value": "0x1D07"
    },
    "7423": {
      "op": "DUP11"
    },
    "7424": {
      "op": "DUP3"
    },
    "7425": {
      "op": "DUP12"
    },
    "7426": {
      "op": "ADD"
    },
    "7427": {
      "op": "PUSH2",
      "value": "0x1A65"
    },
    "7430": {
      "jump": "i",
      "op": "JUMP"
    },
    "7431": {
      "op": "JUMPDEST"
    },
    "7432": {
      "op": "SWAP5"
    },
    "7433": {
      "op": "POP"
    },
    "7434": {
      "op": "POP"
    },
    "7435": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7437": {
      "op": "DUP9"
    },
    "7438": {
      "op": "ADD"
    },
    "7439": {
      "op": "CALLDATALOAD"
    },
    "7440": {
      "op": "SWAP3"
    },
    "7441": {
      "op": "POP"
    },
    "7442": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7444": {
      "op": "DUP9"
    },
    "7445": {
      "op": "ADD"
    },
    "7446": {
      "op": "CALLDATALOAD"
    },
    "7447": {
      "op": "SWAP2"
    },
    "7448": {
      "op": "POP"
    },
    "7449": {
      "op": "PUSH2",
      "value": "0x1D24"
    },
    "7452": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "7454": {
      "op": "DUP10"
    },
    "7455": {
      "op": "ADD"
    },
    "7456": {
      "op": "PUSH2",
      "value": "0x1C95"
    },
    "7459": {
      "jump": "i",
      "op": "JUMP"
    },
    "7460": {
      "op": "JUMPDEST"
    },
    "7461": {
      "op": "SWAP1"
    },
    "7462": {
      "op": "POP"
    },
    "7463": {
      "op": "SWAP3"
    },
    "7464": {
      "op": "SWAP6"
    },
    "7465": {
      "op": "SWAP9"
    },
    "7466": {
      "op": "SWAP2"
    },
    "7467": {
      "op": "SWAP5"
    },
    "7468": {
      "op": "SWAP8"
    },
    "7469": {
      "op": "POP"
    },
    "7470": {
      "op": "SWAP3"
    },
    "7471": {
      "op": "SWAP6"
    },
    "7472": {
      "op": "POP"
    },
    "7473": {
      "jump": "o",
      "op": "JUMP"
    },
    "7474": {
      "op": "JUMPDEST"
    },
    "7475": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7477": {
      "op": "DUP1"
    },
    "7478": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7480": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7482": {
      "op": "DUP5"
    },
    "7483": {
      "op": "DUP7"
    },
    "7484": {
      "op": "SUB"
    },
    "7485": {
      "op": "SLT"
    },
    "7486": {
      "op": "ISZERO"
    },
    "7487": {
      "op": "PUSH2",
      "value": "0x1D47"
    },
    "7490": {
      "op": "JUMPI"
    },
    "7491": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7493": {
      "op": "DUP1"
    },
    "7494": {
      "op": "REVERT"
    },
    "7495": {
      "op": "JUMPDEST"
    },
    "7496": {
      "op": "PUSH2",
      "value": "0x1D50"
    },
    "7499": {
      "op": "DUP5"
    },
    "7500": {
      "op": "PUSH2",
      "value": "0x1C95"
    },
    "7503": {
      "jump": "i",
      "op": "JUMP"
    },
    "7504": {
      "op": "JUMPDEST"
    },
    "7505": {
      "op": "SWAP3"
    },
    "7506": {
      "op": "POP"
    },
    "7507": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7509": {
      "op": "DUP5"
    },
    "7510": {
      "op": "ADD"
    },
    "7511": {
      "op": "CALLDATALOAD"
    },
    "7512": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7521": {
      "op": "DUP2"
    },
    "7522": {
      "op": "GT"
    },
    "7523": {
      "op": "ISZERO"
    },
    "7524": {
      "op": "PUSH2",
      "value": "0x1D6C"
    },
    "7527": {
      "op": "JUMPI"
    },
    "7528": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7530": {
      "op": "DUP1"
    },
    "7531": {
      "op": "REVERT"
    },
    "7532": {
      "op": "JUMPDEST"
    },
    "7533": {
      "op": "PUSH2",
      "value": "0x1D78"
    },
    "7536": {
      "op": "DUP7"
    },
    "7537": {
      "op": "DUP3"
    },
    "7538": {
      "op": "DUP8"
    },
    "7539": {
      "op": "ADD"
    },
    "7540": {
      "op": "PUSH2",
      "value": "0x1A65"
    },
    "7543": {
      "jump": "i",
      "op": "JUMP"
    },
    "7544": {
      "op": "JUMPDEST"
    },
    "7545": {
      "op": "SWAP3"
    },
    "7546": {
      "op": "POP"
    },
    "7547": {
      "op": "POP"
    },
    "7548": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7550": {
      "op": "DUP5"
    },
    "7551": {
      "op": "ADD"
    },
    "7552": {
      "op": "CALLDATALOAD"
    },
    "7553": {
      "op": "SWAP1"
    },
    "7554": {
      "op": "POP"
    },
    "7555": {
      "op": "SWAP3"
    },
    "7556": {
      "op": "POP"
    },
    "7557": {
      "op": "SWAP3"
    },
    "7558": {
      "op": "POP"
    },
    "7559": {
      "op": "SWAP3"
    },
    "7560": {
      "jump": "o",
      "op": "JUMP"
    },
    "7561": {
      "op": "JUMPDEST"
    },
    "7562": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7566": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7568": {
      "op": "SHL"
    },
    "7569": {
      "op": "SUB"
    },
    "7570": {
      "op": "DUP7"
    },
    "7571": {
      "op": "AND"
    },
    "7572": {
      "op": "DUP2"
    },
    "7573": {
      "op": "MSTORE"
    },
    "7574": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7576": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7578": {
      "op": "DUP3"
    },
    "7579": {
      "op": "ADD"
    },
    "7580": {
      "op": "DUP2"
    },
    "7581": {
      "op": "SWAP1"
    },
    "7582": {
      "op": "MSTORE"
    },
    "7583": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7585": {
      "op": "SWAP1"
    },
    "7586": {
      "op": "PUSH2",
      "value": "0x1DAD"
    },
    "7589": {
      "op": "SWAP1"
    },
    "7590": {
      "op": "DUP4"
    },
    "7591": {
      "op": "ADD"
    },
    "7592": {
      "op": "DUP8"
    },
    "7593": {
      "op": "PUSH2",
      "value": "0x1C23"
    },
    "7596": {
      "jump": "i",
      "op": "JUMP"
    },
    "7597": {
      "op": "JUMPDEST"
    },
    "7598": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7600": {
      "op": "DUP4"
    },
    "7601": {
      "op": "ADD"
    },
    "7602": {
      "op": "SWAP6"
    },
    "7603": {
      "op": "SWAP1"
    },
    "7604": {
      "op": "SWAP6"
    },
    "7605": {
      "op": "MSTORE"
    },
    "7606": {
      "op": "POP"
    },
    "7607": {
      "op": "SWAP2"
    },
    "7608": {
      "op": "ISZERO"
    },
    "7609": {
      "op": "ISZERO"
    },
    "7610": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7612": {
      "op": "DUP4"
    },
    "7613": {
      "op": "ADD"
    },
    "7614": {
      "op": "MSTORE"
    },
    "7615": {
      "op": "ISZERO"
    },
    "7616": {
      "op": "ISZERO"
    },
    "7617": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7619": {
      "op": "SWAP1"
    },
    "7620": {
      "op": "SWAP2"
    },
    "7621": {
      "op": "ADD"
    },
    "7622": {
      "op": "MSTORE"
    },
    "7623": {
      "op": "SWAP3"
    },
    "7624": {
      "op": "SWAP2"
    },
    "7625": {
      "op": "POP"
    },
    "7626": {
      "op": "POP"
    },
    "7627": {
      "jump": "o",
      "op": "JUMP"
    },
    "7628": {
      "op": "JUMPDEST"
    },
    "7629": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7631": {
      "op": "DUP1"
    },
    "7632": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7634": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7636": {
      "op": "DUP5"
    },
    "7637": {
      "op": "DUP7"
    },
    "7638": {
      "op": "SUB"
    },
    "7639": {
      "op": "SLT"
    },
    "7640": {
      "op": "ISZERO"
    },
    "7641": {
      "op": "PUSH2",
      "value": "0x1DE1"
    },
    "7644": {
      "op": "JUMPI"
    },
    "7645": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7647": {
      "op": "DUP1"
    },
    "7648": {
      "op": "REVERT"
    },
    "7649": {
      "op": "JUMPDEST"
    },
    "7650": {
      "op": "PUSH2",
      "value": "0x1DEA"
    },
    "7653": {
      "op": "DUP5"
    },
    "7654": {
      "op": "PUSH2",
      "value": "0x1C85"
    },
    "7657": {
      "jump": "i",
      "op": "JUMP"
    },
    "7658": {
      "op": "JUMPDEST"
    },
    "7659": {
      "op": "SWAP3"
    },
    "7660": {
      "op": "POP"
    },
    "7661": {
      "op": "PUSH2",
      "value": "0x1DF8"
    },
    "7664": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7666": {
      "op": "DUP6"
    },
    "7667": {
      "op": "ADD"
    },
    "7668": {
      "op": "PUSH2",
      "value": "0x19BD"
    },
    "7671": {
      "jump": "i",
      "op": "JUMP"
    },
    "7672": {
      "op": "JUMPDEST"
    },
    "7673": {
      "op": "SWAP2"
    },
    "7674": {
      "op": "POP"
    },
    "7675": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7677": {
      "op": "DUP5"
    },
    "7678": {
      "op": "ADD"
    },
    "7679": {
      "op": "CALLDATALOAD"
    },
    "7680": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7689": {
      "op": "DUP2"
    },
    "7690": {
      "op": "GT"
    },
    "7691": {
      "op": "ISZERO"
    },
    "7692": {
      "op": "PUSH2",
      "value": "0x1E14"
    },
    "7695": {
      "op": "JUMPI"
    },
    "7696": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7698": {
      "op": "DUP1"
    },
    "7699": {
      "op": "REVERT"
    },
    "7700": {
      "op": "JUMPDEST"
    },
    "7701": {
      "op": "DUP5"
    },
    "7702": {
      "op": "ADD"
    },
    "7703": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7705": {
      "op": "DUP2"
    },
    "7706": {
      "op": "ADD"
    },
    "7707": {
      "op": "DUP7"
    },
    "7708": {
      "op": "SGT"
    },
    "7709": {
      "op": "PUSH2",
      "value": "0x1E25"
    },
    "7712": {
      "op": "JUMPI"
    },
    "7713": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7715": {
      "op": "DUP1"
    },
    "7716": {
      "op": "REVERT"
    },
    "7717": {
      "op": "JUMPDEST"
    },
    "7718": {
      "op": "PUSH2",
      "value": "0x1E34"
    },
    "7721": {
      "op": "DUP7"
    },
    "7722": {
      "op": "DUP3"
    },
    "7723": {
      "op": "CALLDATALOAD"
    },
    "7724": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7726": {
      "op": "DUP5"
    },
    "7727": {
      "op": "ADD"
    },
    "7728": {
      "op": "PUSH2",
      "value": "0x19EF"
    },
    "7731": {
      "jump": "i",
      "op": "JUMP"
    },
    "7732": {
      "op": "JUMPDEST"
    },
    "7733": {
      "op": "SWAP2"
    },
    "7734": {
      "op": "POP"
    },
    "7735": {
      "op": "POP"
    },
    "7736": {
      "op": "SWAP3"
    },
    "7737": {
      "op": "POP"
    },
    "7738": {
      "op": "SWAP3"
    },
    "7739": {
      "op": "POP"
    },
    "7740": {
      "op": "SWAP3"
    },
    "7741": {
      "jump": "o",
      "op": "JUMP"
    },
    "7742": {
      "op": "JUMPDEST"
    },
    "7743": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7745": {
      "op": "DUP1"
    },
    "7746": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7748": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7750": {
      "op": "DUP5"
    },
    "7751": {
      "op": "DUP7"
    },
    "7752": {
      "op": "SUB"
    },
    "7753": {
      "op": "SLT"
    },
    "7754": {
      "op": "ISZERO"
    },
    "7755": {
      "op": "PUSH2",
      "value": "0x1E53"
    },
    "7758": {
      "op": "JUMPI"
    },
    "7759": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7761": {
      "op": "DUP1"
    },
    "7762": {
      "op": "REVERT"
    },
    "7763": {
      "op": "JUMPDEST"
    },
    "7764": {
      "op": "DUP4"
    },
    "7765": {
      "op": "CALLDATALOAD"
    },
    "7766": {
      "op": "SWAP3"
    },
    "7767": {
      "op": "POP"
    },
    "7768": {
      "op": "PUSH2",
      "value": "0x1E63"
    },
    "7771": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7773": {
      "op": "DUP6"
    },
    "7774": {
      "op": "ADD"
    },
    "7775": {
      "op": "PUSH2",
      "value": "0x1C85"
    },
    "7778": {
      "jump": "i",
      "op": "JUMP"
    },
    "7779": {
      "op": "JUMPDEST"
    },
    "7780": {
      "op": "SWAP2"
    },
    "7781": {
      "op": "POP"
    },
    "7782": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7784": {
      "op": "DUP5"
    },
    "7785": {
      "op": "ADD"
    },
    "7786": {
      "op": "CALLDATALOAD"
    },
    "7787": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7796": {
      "op": "DUP2"
    },
    "7797": {
      "op": "GT"
    },
    "7798": {
      "op": "ISZERO"
    },
    "7799": {
      "op": "PUSH2",
      "value": "0x1E7F"
    },
    "7802": {
      "op": "JUMPI"
    },
    "7803": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7805": {
      "op": "DUP1"
    },
    "7806": {
      "op": "REVERT"
    },
    "7807": {
      "op": "JUMPDEST"
    },
    "7808": {
      "op": "PUSH2",
      "value": "0x1E34"
    },
    "7811": {
      "op": "DUP7"
    },
    "7812": {
      "op": "DUP3"
    },
    "7813": {
      "op": "DUP8"
    },
    "7814": {
      "op": "ADD"
    },
    "7815": {
      "op": "PUSH2",
      "value": "0x1A65"
    },
    "7818": {
      "jump": "i",
      "op": "JUMP"
    },
    "7819": {
      "op": "JUMPDEST"
    },
    "7820": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7824": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7826": {
      "op": "SHL"
    },
    "7827": {
      "op": "SUB"
    },
    "7828": {
      "op": "DUP5"
    },
    "7829": {
      "op": "AND"
    },
    "7830": {
      "op": "DUP2"
    },
    "7831": {
      "op": "MSTORE"
    },
    "7832": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7834": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7836": {
      "op": "DUP3"
    },
    "7837": {
      "op": "ADD"
    },
    "7838": {
      "op": "DUP2"
    },
    "7839": {
      "op": "SWAP1"
    },
    "7840": {
      "op": "MSTORE"
    },
    "7841": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7843": {
      "op": "SWAP1"
    },
    "7844": {
      "op": "PUSH2",
      "value": "0x1EAF"
    },
    "7847": {
      "op": "SWAP1"
    },
    "7848": {
      "op": "DUP4"
    },
    "7849": {
      "op": "ADD"
    },
    "7850": {
      "op": "DUP6"
    },
    "7851": {
      "op": "PUSH2",
      "value": "0x1C23"
    },
    "7854": {
      "jump": "i",
      "op": "JUMP"
    },
    "7855": {
      "op": "JUMPDEST"
    },
    "7856": {
      "op": "SWAP1"
    },
    "7857": {
      "op": "POP"
    },
    "7858": {
      "op": "DUP3"
    },
    "7859": {
      "op": "ISZERO"
    },
    "7860": {
      "op": "ISZERO"
    },
    "7861": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7863": {
      "op": "DUP4"
    },
    "7864": {
      "op": "ADD"
    },
    "7865": {
      "op": "MSTORE"
    },
    "7866": {
      "op": "SWAP5"
    },
    "7867": {
      "op": "SWAP4"
    },
    "7868": {
      "op": "POP"
    },
    "7869": {
      "op": "POP"
    },
    "7870": {
      "op": "POP"
    },
    "7871": {
      "op": "POP"
    },
    "7872": {
      "jump": "o",
      "op": "JUMP"
    },
    "7873": {
      "op": "JUMPDEST"
    },
    "7874": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7876": {
      "op": "DUP1"
    },
    "7877": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7879": {
      "op": "DUP4"
    },
    "7880": {
      "op": "DUP6"
    },
    "7881": {
      "op": "SUB"
    },
    "7882": {
      "op": "SLT"
    },
    "7883": {
      "op": "ISZERO"
    },
    "7884": {
      "op": "PUSH2",
      "value": "0x1ED4"
    },
    "7887": {
      "op": "JUMPI"
    },
    "7888": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7890": {
      "op": "DUP1"
    },
    "7891": {
      "op": "REVERT"
    },
    "7892": {
      "op": "JUMPDEST"
    },
    "7893": {
      "op": "DUP3"
    },
    "7894": {
      "op": "CALLDATALOAD"
    },
    "7895": {
      "op": "SWAP2"
    },
    "7896": {
      "op": "POP"
    },
    "7897": {
      "op": "PUSH2",
      "value": "0x1EE4"
    },
    "7900": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7902": {
      "op": "DUP5"
    },
    "7903": {
      "op": "ADD"
    },
    "7904": {
      "op": "PUSH2",
      "value": "0x19BD"
    },
    "7907": {
      "jump": "i",
      "op": "JUMP"
    },
    "7908": {
      "op": "JUMPDEST"
    },
    "7909": {
      "op": "SWAP1"
    },
    "7910": {
      "op": "POP"
    },
    "7911": {
      "op": "SWAP3"
    },
    "7912": {
      "op": "POP"
    },
    "7913": {
      "op": "SWAP3"
    },
    "7914": {
      "op": "SWAP1"
    },
    "7915": {
      "op": "POP"
    },
    "7916": {
      "jump": "o",
      "op": "JUMP"
    },
    "7917": {
      "op": "JUMPDEST"
    },
    "7918": {
      "op": "DUP4"
    },
    "7919": {
      "op": "ISZERO"
    },
    "7920": {
      "op": "ISZERO"
    },
    "7921": {
      "op": "DUP2"
    },
    "7922": {
      "op": "MSTORE"
    },
    "7923": {
      "op": "DUP3"
    },
    "7924": {
      "op": "ISZERO"
    },
    "7925": {
      "op": "ISZERO"
    },
    "7926": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7928": {
      "op": "DUP3"
    },
    "7929": {
      "op": "ADD"
    },
    "7930": {
      "op": "MSTORE"
    },
    "7931": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7933": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7935": {
      "op": "DUP3"
    },
    "7936": {
      "op": "ADD"
    },
    "7937": {
      "op": "MSTORE"
    },
    "7938": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7940": {
      "op": "PUSH2",
      "value": "0x1F10"
    },
    "7943": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7945": {
      "op": "DUP4"
    },
    "7946": {
      "op": "ADD"
    },
    "7947": {
      "op": "DUP5"
    },
    "7948": {
      "op": "PUSH2",
      "value": "0x1C23"
    },
    "7951": {
      "jump": "i",
      "op": "JUMP"
    },
    "7952": {
      "op": "JUMPDEST"
    },
    "7953": {
      "op": "SWAP6"
    },
    "7954": {
      "op": "SWAP5"
    },
    "7955": {
      "op": "POP"
    },
    "7956": {
      "op": "POP"
    },
    "7957": {
      "op": "POP"
    },
    "7958": {
      "op": "POP"
    },
    "7959": {
      "op": "POP"
    },
    "7960": {
      "jump": "o",
      "op": "JUMP"
    },
    "7961": {
      "op": "JUMPDEST"
    },
    "7962": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7964": {
      "op": "DUP1"
    },
    "7965": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7967": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7969": {
      "op": "DUP5"
    },
    "7970": {
      "op": "DUP7"
    },
    "7971": {
      "op": "SUB"
    },
    "7972": {
      "op": "SLT"
    },
    "7973": {
      "op": "ISZERO"
    },
    "7974": {
      "op": "PUSH2",
      "value": "0x1F2E"
    },
    "7977": {
      "op": "JUMPI"
    },
    "7978": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7980": {
      "op": "DUP1"
    },
    "7981": {
      "op": "REVERT"
    },
    "7982": {
      "op": "JUMPDEST"
    },
    "7983": {
      "op": "PUSH2",
      "value": "0x1D50"
    },
    "7986": {
      "op": "DUP5"
    },
    "7987": {
      "op": "PUSH2",
      "value": "0x19BD"
    },
    "7990": {
      "jump": "i",
      "op": "JUMP"
    },
    "7991": {
      "op": "JUMPDEST"
    },
    "7992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7996": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7998": {
      "op": "SHL"
    },
    "7999": {
      "op": "SUB"
    },
    "8000": {
      "op": "DUP11"
    },
    "8001": {
      "op": "AND"
    },
    "8002": {
      "op": "DUP2"
    },
    "8003": {
      "op": "MSTORE"
    },
    "8004": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8006": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "8009": {
      "op": "PUSH1",
      "value": "0x9"
    },
    "8011": {
      "op": "DUP12"
    },
    "8012": {
      "op": "LT"
    },
    "8013": {
      "op": "PUSH2",
      "value": "0x1F66"
    },
    "8016": {
      "op": "JUMPI"
    },
    "8017": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8022": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8024": {
      "op": "SHL"
    },
    "8025": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8027": {
      "op": "MSTORE"
    },
    "8028": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "8030": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8032": {
      "op": "MSTORE"
    },
    "8033": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8035": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8037": {
      "op": "REVERT"
    },
    "8038": {
      "op": "JUMPDEST"
    },
    "8039": {
      "op": "DUP11"
    },
    "8040": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8042": {
      "op": "DUP5"
    },
    "8043": {
      "op": "ADD"
    },
    "8044": {
      "op": "MSTORE"
    },
    "8045": {
      "op": "DUP1"
    },
    "8046": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8048": {
      "op": "DUP5"
    },
    "8049": {
      "op": "ADD"
    },
    "8050": {
      "op": "MSTORE"
    },
    "8051": {
      "op": "PUSH2",
      "value": "0x1F7E"
    },
    "8054": {
      "op": "DUP2"
    },
    "8055": {
      "op": "DUP5"
    },
    "8056": {
      "op": "ADD"
    },
    "8057": {
      "op": "DUP12"
    },
    "8058": {
      "op": "PUSH2",
      "value": "0x1C23"
    },
    "8061": {
      "jump": "i",
      "op": "JUMP"
    },
    "8062": {
      "op": "JUMPDEST"
    },
    "8063": {
      "op": "SWAP2"
    },
    "8064": {
      "op": "POP"
    },
    "8065": {
      "op": "POP"
    },
    "8066": {
      "op": "DUP8"
    },
    "8067": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8069": {
      "op": "DUP4"
    },
    "8070": {
      "op": "ADD"
    },
    "8071": {
      "op": "MSTORE"
    },
    "8072": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8074": {
      "op": "DUP8"
    },
    "8075": {
      "op": "AND"
    },
    "8076": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8078": {
      "op": "DUP4"
    },
    "8079": {
      "op": "ADD"
    },
    "8080": {
      "op": "MSTORE"
    },
    "8081": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8083": {
      "op": "DUP7"
    },
    "8084": {
      "op": "AND"
    },
    "8085": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8087": {
      "op": "DUP4"
    },
    "8088": {
      "op": "ADD"
    },
    "8089": {
      "op": "MSTORE"
    },
    "8090": {
      "op": "DUP5"
    },
    "8091": {
      "op": "ISZERO"
    },
    "8092": {
      "op": "ISZERO"
    },
    "8093": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "8095": {
      "op": "DUP4"
    },
    "8096": {
      "op": "ADD"
    },
    "8097": {
      "op": "MSTORE"
    },
    "8098": {
      "op": "PUSH2",
      "value": "0x1FAF"
    },
    "8101": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8103": {
      "op": "DUP4"
    },
    "8104": {
      "op": "ADD"
    },
    "8105": {
      "op": "DUP6"
    },
    "8106": {
      "op": "ISZERO"
    },
    "8107": {
      "op": "ISZERO"
    },
    "8108": {
      "op": "SWAP1"
    },
    "8109": {
      "op": "MSTORE"
    },
    "8110": {
      "op": "JUMP"
    },
    "8111": {
      "op": "JUMPDEST"
    },
    "8112": {
      "op": "DUP3"
    },
    "8113": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "8116": {
      "op": "DUP4"
    },
    "8117": {
      "op": "ADD"
    },
    "8118": {
      "op": "MSTORE"
    },
    "8119": {
      "op": "SWAP11"
    },
    "8120": {
      "op": "SWAP10"
    },
    "8121": {
      "op": "POP"
    },
    "8122": {
      "op": "POP"
    },
    "8123": {
      "op": "POP"
    },
    "8124": {
      "op": "POP"
    },
    "8125": {
      "op": "POP"
    },
    "8126": {
      "op": "POP"
    },
    "8127": {
      "op": "POP"
    },
    "8128": {
      "op": "POP"
    },
    "8129": {
      "op": "POP"
    },
    "8130": {
      "op": "POP"
    },
    "8131": {
      "jump": "o",
      "op": "JUMP"
    },
    "8132": {
      "op": "JUMPDEST"
    },
    "8133": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8135": {
      "op": "DUP1"
    },
    "8136": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8138": {
      "op": "DUP1"
    },
    "8139": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8141": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8143": {
      "op": "DUP7"
    },
    "8144": {
      "op": "DUP9"
    },
    "8145": {
      "op": "SUB"
    },
    "8146": {
      "op": "SLT"
    },
    "8147": {
      "op": "ISZERO"
    },
    "8148": {
      "op": "PUSH2",
      "value": "0x1FDC"
    },
    "8151": {
      "op": "JUMPI"
    },
    "8152": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8154": {
      "op": "DUP1"
    },
    "8155": {
      "op": "REVERT"
    },
    "8156": {
      "op": "JUMPDEST"
    },
    "8157": {
      "op": "PUSH2",
      "value": "0x1FE5"
    },
    "8160": {
      "op": "DUP7"
    },
    "8161": {
      "op": "PUSH2",
      "value": "0x19BD"
    },
    "8164": {
      "jump": "i",
      "op": "JUMP"
    },
    "8165": {
      "op": "JUMPDEST"
    },
    "8166": {
      "op": "SWAP5"
    },
    "8167": {
      "op": "POP"
    },
    "8168": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8170": {
      "op": "DUP7"
    },
    "8171": {
      "op": "ADD"
    },
    "8172": {
      "op": "CALLDATALOAD"
    },
    "8173": {
      "op": "SWAP4"
    },
    "8174": {
      "op": "POP"
    },
    "8175": {
      "op": "PUSH2",
      "value": "0x1FFA"
    },
    "8178": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8180": {
      "op": "DUP8"
    },
    "8181": {
      "op": "ADD"
    },
    "8182": {
      "op": "PUSH2",
      "value": "0x19BD"
    },
    "8185": {
      "jump": "i",
      "op": "JUMP"
    },
    "8186": {
      "op": "JUMPDEST"
    },
    "8187": {
      "op": "SWAP3"
    },
    "8188": {
      "op": "POP"
    },
    "8189": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8191": {
      "op": "DUP7"
    },
    "8192": {
      "op": "ADD"
    },
    "8193": {
      "op": "CALLDATALOAD"
    },
    "8194": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8203": {
      "op": "DUP2"
    },
    "8204": {
      "op": "GT"
    },
    "8205": {
      "op": "ISZERO"
    },
    "8206": {
      "op": "PUSH2",
      "value": "0x1B58"
    },
    "8209": {
      "op": "JUMPI"
    },
    "8210": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8212": {
      "op": "DUP1"
    },
    "8213": {
      "op": "REVERT"
    },
    "8214": {
      "op": "JUMPDEST"
    },
    "8215": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8217": {
      "op": "DUP1"
    },
    "8218": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8220": {
      "op": "DUP1"
    },
    "8221": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8223": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8225": {
      "op": "DUP7"
    },
    "8226": {
      "op": "DUP9"
    },
    "8227": {
      "op": "SUB"
    },
    "8228": {
      "op": "SLT"
    },
    "8229": {
      "op": "ISZERO"
    },
    "8230": {
      "op": "PUSH2",
      "value": "0x202E"
    },
    "8233": {
      "op": "JUMPI"
    },
    "8234": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8236": {
      "op": "DUP1"
    },
    "8237": {
      "op": "REVERT"
    },
    "8238": {
      "op": "JUMPDEST"
    },
    "8239": {
      "op": "PUSH2",
      "value": "0x2037"
    },
    "8242": {
      "op": "DUP7"
    },
    "8243": {
      "op": "PUSH2",
      "value": "0x19BD"
    },
    "8246": {
      "jump": "i",
      "op": "JUMP"
    },
    "8247": {
      "op": "JUMPDEST"
    },
    "8248": {
      "op": "SWAP5"
    },
    "8249": {
      "op": "POP"
    },
    "8250": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8252": {
      "op": "DUP7"
    },
    "8253": {
      "op": "ADD"
    },
    "8254": {
      "op": "CALLDATALOAD"
    },
    "8255": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8264": {
      "op": "DUP1"
    },
    "8265": {
      "op": "DUP3"
    },
    "8266": {
      "op": "GT"
    },
    "8267": {
      "op": "ISZERO"
    },
    "8268": {
      "op": "PUSH2",
      "value": "0x2054"
    },
    "8271": {
      "op": "JUMPI"
    },
    "8272": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8274": {
      "op": "DUP1"
    },
    "8275": {
      "op": "REVERT"
    },
    "8276": {
      "op": "JUMPDEST"
    },
    "8277": {
      "op": "PUSH2",
      "value": "0x2060"
    },
    "8280": {
      "op": "DUP10"
    },
    "8281": {
      "op": "DUP4"
    },
    "8282": {
      "op": "DUP11"
    },
    "8283": {
      "op": "ADD"
    },
    "8284": {
      "op": "PUSH2",
      "value": "0x1A65"
    },
    "8287": {
      "jump": "i",
      "op": "JUMP"
    },
    "8288": {
      "op": "JUMPDEST"
    },
    "8289": {
      "op": "SWAP6"
    },
    "8290": {
      "op": "POP"
    },
    "8291": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8293": {
      "op": "DUP9"
    },
    "8294": {
      "op": "ADD"
    },
    "8295": {
      "op": "CALLDATALOAD"
    },
    "8296": {
      "op": "SWAP2"
    },
    "8297": {
      "op": "POP"
    },
    "8298": {
      "op": "DUP1"
    },
    "8299": {
      "op": "DUP3"
    },
    "8300": {
      "op": "GT"
    },
    "8301": {
      "op": "ISZERO"
    },
    "8302": {
      "op": "PUSH2",
      "value": "0x2076"
    },
    "8305": {
      "op": "JUMPI"
    },
    "8306": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8308": {
      "op": "DUP1"
    },
    "8309": {
      "op": "REVERT"
    },
    "8310": {
      "op": "JUMPDEST"
    },
    "8311": {
      "op": "POP"
    },
    "8312": {
      "op": "PUSH2",
      "value": "0x2083"
    },
    "8315": {
      "op": "DUP9"
    },
    "8316": {
      "op": "DUP3"
    },
    "8317": {
      "op": "DUP10"
    },
    "8318": {
      "op": "ADD"
    },
    "8319": {
      "op": "PUSH2",
      "value": "0x1A65"
    },
    "8322": {
      "jump": "i",
      "op": "JUMP"
    },
    "8323": {
      "op": "JUMPDEST"
    },
    "8324": {
      "op": "SWAP4"
    },
    "8325": {
      "op": "POP"
    },
    "8326": {
      "op": "POP"
    },
    "8327": {
      "op": "PUSH2",
      "value": "0x2092"
    },
    "8330": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8332": {
      "op": "DUP8"
    },
    "8333": {
      "op": "ADD"
    },
    "8334": {
      "op": "PUSH2",
      "value": "0x1C85"
    },
    "8337": {
      "jump": "i",
      "op": "JUMP"
    },
    "8338": {
      "op": "JUMPDEST"
    },
    "8339": {
      "op": "SWAP5"
    },
    "8340": {
      "op": "SWAP8"
    },
    "8341": {
      "op": "SWAP4"
    },
    "8342": {
      "op": "SWAP7"
    },
    "8343": {
      "op": "POP"
    },
    "8344": {
      "op": "SWAP2"
    },
    "8345": {
      "op": "SWAP5"
    },
    "8346": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8348": {
      "op": "ADD"
    },
    "8349": {
      "op": "CALLDATALOAD"
    },
    "8350": {
      "op": "SWAP3"
    },
    "8351": {
      "op": "SWAP2"
    },
    "8352": {
      "op": "POP"
    },
    "8353": {
      "op": "POP"
    },
    "8354": {
      "jump": "o",
      "op": "JUMP"
    },
    "8355": {
      "op": "JUMPDEST"
    },
    "8356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8358": {
      "op": "DUP1"
    },
    "8359": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8361": {
      "op": "SHL"
    },
    "8362": {
      "op": "SUB"
    },
    "8363": {
      "op": "DUP6"
    },
    "8364": {
      "op": "AND"
    },
    "8365": {
      "op": "DUP2"
    },
    "8366": {
      "op": "MSTORE"
    },
    "8367": {
      "op": "DUP4"
    },
    "8368": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8370": {
      "op": "DUP3"
    },
    "8371": {
      "op": "ADD"
    },
    "8372": {
      "op": "MSTORE"
    },
    "8373": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8375": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8377": {
      "op": "DUP3"
    },
    "8378": {
      "op": "ADD"
    },
    "8379": {
      "op": "MSTORE"
    },
    "8380": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8382": {
      "op": "PUSH2",
      "value": "0x20CA"
    },
    "8385": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8387": {
      "op": "DUP4"
    },
    "8388": {
      "op": "ADD"
    },
    "8389": {
      "op": "DUP6"
    },
    "8390": {
      "op": "PUSH2",
      "value": "0x1C23"
    },
    "8393": {
      "jump": "i",
      "op": "JUMP"
    },
    "8394": {
      "op": "JUMPDEST"
    },
    "8395": {
      "op": "SWAP1"
    },
    "8396": {
      "op": "POP"
    },
    "8397": {
      "op": "DUP3"
    },
    "8398": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8400": {
      "op": "DUP4"
    },
    "8401": {
      "op": "ADD"
    },
    "8402": {
      "op": "MSTORE"
    },
    "8403": {
      "op": "SWAP6"
    },
    "8404": {
      "op": "SWAP5"
    },
    "8405": {
      "op": "POP"
    },
    "8406": {
      "op": "POP"
    },
    "8407": {
      "op": "POP"
    },
    "8408": {
      "op": "POP"
    },
    "8409": {
      "op": "POP"
    },
    "8410": {
      "jump": "o",
      "op": "JUMP"
    },
    "8411": {
      "op": "JUMPDEST"
    },
    "8412": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8414": {
      "op": "DUP3"
    },
    "8415": {
      "op": "MLOAD"
    },
    "8416": {
      "op": "PUSH2",
      "value": "0x20ED"
    },
    "8419": {
      "op": "DUP2"
    },
    "8420": {
      "op": "DUP5"
    },
    "8421": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8423": {
      "op": "DUP8"
    },
    "8424": {
      "op": "ADD"
    },
    "8425": {
      "op": "PUSH2",
      "value": "0x1BF3"
    },
    "8428": {
      "jump": "i",
      "op": "JUMP"
    },
    "8429": {
      "op": "JUMPDEST"
    },
    "8430": {
      "op": "SWAP2"
    },
    "8431": {
      "op": "SWAP1"
    },
    "8432": {
      "op": "SWAP2"
    },
    "8433": {
      "op": "ADD"
    },
    "8434": {
      "op": "SWAP3"
    },
    "8435": {
      "op": "SWAP2"
    },
    "8436": {
      "op": "POP"
    },
    "8437": {
      "op": "POP"
    },
    "8438": {
      "jump": "o",
      "op": "JUMP"
    },
    "8439": {
      "op": "JUMPDEST"
    },
    "8440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8444": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8446": {
      "op": "SHL"
    },
    "8447": {
      "op": "SUB"
    },
    "8448": {
      "op": "DUP7"
    },
    "8449": {
      "op": "DUP2"
    },
    "8450": {
      "op": "AND"
    },
    "8451": {
      "op": "DUP3"
    },
    "8452": {
      "op": "MSTORE"
    },
    "8453": {
      "op": "DUP6"
    },
    "8454": {
      "op": "AND"
    },
    "8455": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8457": {
      "op": "DUP3"
    },
    "8458": {
      "op": "ADD"
    },
    "8459": {
      "op": "MSTORE"
    },
    "8460": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8462": {
      "op": "DUP2"
    },
    "8463": {
      "op": "ADD"
    },
    "8464": {
      "op": "DUP5"
    },
    "8465": {
      "op": "SWAP1"
    },
    "8466": {
      "op": "MSTORE"
    },
    "8467": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8469": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8471": {
      "op": "DUP3"
    },
    "8472": {
      "op": "ADD"
    },
    "8473": {
      "op": "DUP2"
    },
    "8474": {
      "op": "SWAP1"
    },
    "8475": {
      "op": "MSTORE"
    },
    "8476": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8478": {
      "op": "SWAP1"
    },
    "8479": {
      "op": "PUSH2",
      "value": "0x212A"
    },
    "8482": {
      "op": "SWAP1"
    },
    "8483": {
      "op": "DUP4"
    },
    "8484": {
      "op": "ADD"
    },
    "8485": {
      "op": "DUP6"
    },
    "8486": {
      "op": "PUSH2",
      "value": "0x1C23"
    },
    "8489": {
      "jump": "i",
      "op": "JUMP"
    },
    "8490": {
      "op": "JUMPDEST"
    },
    "8491": {
      "op": "SWAP1"
    },
    "8492": {
      "op": "POP"
    },
    "8493": {
      "op": "DUP3"
    },
    "8494": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8496": {
      "op": "DUP4"
    },
    "8497": {
      "op": "ADD"
    },
    "8498": {
      "op": "MSTORE"
    },
    "8499": {
      "op": "SWAP7"
    },
    "8500": {
      "op": "SWAP6"
    },
    "8501": {
      "op": "POP"
    },
    "8502": {
      "op": "POP"
    },
    "8503": {
      "op": "POP"
    },
    "8504": {
      "op": "POP"
    },
    "8505": {
      "op": "POP"
    },
    "8506": {
      "op": "POP"
    },
    "8507": {
      "jump": "o",
      "op": "JUMP"
    },
    "8508": {
      "op": "JUMPDEST"
    },
    "8509": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8511": {
      "op": "DUP2"
    },
    "8512": {
      "op": "MSTORE"
    },
    "8513": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8515": {
      "op": "PUSH2",
      "value": "0x214F"
    },
    "8518": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8520": {
      "op": "DUP4"
    },
    "8521": {
      "op": "ADD"
    },
    "8522": {
      "op": "DUP6"
    },
    "8523": {
      "op": "PUSH2",
      "value": "0x1C23"
    },
    "8526": {
      "jump": "i",
      "op": "JUMP"
    },
    "8527": {
      "op": "JUMPDEST"
    },
    "8528": {
      "op": "DUP3"
    },
    "8529": {
      "op": "DUP2"
    },
    "8530": {
      "op": "SUB"
    },
    "8531": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8533": {
      "op": "DUP5"
    },
    "8534": {
      "op": "ADD"
    },
    "8535": {
      "op": "MSTORE"
    },
    "8536": {
      "op": "PUSH2",
      "value": "0x1F10"
    },
    "8539": {
      "op": "DUP2"
    },
    "8540": {
      "op": "DUP6"
    },
    "8541": {
      "op": "PUSH2",
      "value": "0x1C23"
    },
    "8544": {
      "jump": "i",
      "op": "JUMP"
    },
    "8545": {
      "op": "JUMPDEST"
    },
    "8546": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8548": {
      "op": "DUP2"
    },
    "8549": {
      "op": "DUP2"
    },
    "8550": {
      "op": "SHR"
    },
    "8551": {
      "op": "SWAP1"
    },
    "8552": {
      "op": "DUP3"
    },
    "8553": {
      "op": "AND"
    },
    "8554": {
      "op": "DUP1"
    },
    "8555": {
      "op": "PUSH2",
      "value": "0x2175"
    },
    "8558": {
      "op": "JUMPI"
    },
    "8559": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "8561": {
      "op": "DUP3"
    },
    "8562": {
      "op": "AND"
    },
    "8563": {
      "op": "SWAP2"
    },
    "8564": {
      "op": "POP"
    },
    "8565": {
      "op": "JUMPDEST"
    },
    "8566": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8568": {
      "op": "DUP3"
    },
    "8569": {
      "op": "LT"
    },
    "8570": {
      "op": "DUP2"
    },
    "8571": {
      "op": "EQ"
    },
    "8572": {
      "op": "ISZERO"
    },
    "8573": {
      "op": "PUSH2",
      "value": "0x2196"
    },
    "8576": {
      "op": "JUMPI"
    },
    "8577": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8582": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8584": {
      "op": "SHL"
    },
    "8585": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8587": {
      "op": "MSTORE"
    },
    "8588": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "8590": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8592": {
      "op": "MSTORE"
    },
    "8593": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8595": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8597": {
      "op": "REVERT"
    },
    "8598": {
      "op": "JUMPDEST"
    },
    "8599": {
      "op": "POP"
    },
    "8600": {
      "op": "SWAP2"
    },
    "8601": {
      "op": "SWAP1"
    },
    "8602": {
      "op": "POP"
    },
    "8603": {
      "jump": "o",
      "op": "JUMP"
    },
    "8604": {
      "op": "JUMPDEST"
    },
    "8605": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8610": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8612": {
      "op": "SHL"
    },
    "8613": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8615": {
      "op": "MSTORE"
    },
    "8616": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "8618": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8620": {
      "op": "MSTORE"
    },
    "8621": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8623": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8625": {
      "op": "REVERT"
    },
    "8626": {
      "op": "JUMPDEST"
    },
    "8627": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8629": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8631": {
      "op": "DUP3"
    },
    "8632": {
      "op": "AND"
    },
    "8633": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8635": {
      "op": "DUP2"
    },
    "8636": {
      "op": "EQ"
    },
    "8637": {
      "op": "ISZERO"
    },
    "8638": {
      "op": "PUSH2",
      "value": "0x21D7"
    },
    "8641": {
      "op": "JUMPI"
    },
    "8642": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8647": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8649": {
      "op": "SHL"
    },
    "8650": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8652": {
      "op": "MSTORE"
    },
    "8653": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "8655": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8657": {
      "op": "MSTORE"
    },
    "8658": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8660": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8662": {
      "op": "REVERT"
    },
    "8663": {
      "op": "JUMPDEST"
    },
    "8664": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8666": {
      "op": "ADD"
    },
    "8667": {
      "op": "SWAP3"
    },
    "8668": {
      "op": "SWAP2"
    },
    "8669": {
      "op": "POP"
    },
    "8670": {
      "op": "POP"
    },
    "8671": {
      "jump": "o",
      "op": "JUMP"
    },
    "8672": {
      "op": "JUMPDEST"
    },
    "8673": {
      "op": "DUP5"
    },
    "8674": {
      "op": "DUP2"
    },
    "8675": {
      "op": "MSTORE"
    },
    "8676": {
      "op": "DUP4"
    },
    "8677": {
      "op": "ISZERO"
    },
    "8678": {
      "op": "ISZERO"
    },
    "8679": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8681": {
      "op": "DUP3"
    },
    "8682": {
      "op": "ADD"
    },
    "8683": {
      "op": "MSTORE"
    },
    "8684": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8686": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8688": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8690": {
      "op": "SHL"
    },
    "8691": {
      "op": "SUB"
    },
    "8692": {
      "op": "DUP4"
    },
    "8693": {
      "op": "AND"
    },
    "8694": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8696": {
      "op": "DUP3"
    },
    "8697": {
      "op": "ADD"
    },
    "8698": {
      "op": "MSTORE"
    },
    "8699": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8701": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8703": {
      "op": "DUP3"
    },
    "8704": {
      "op": "ADD"
    },
    "8705": {
      "op": "DUP2"
    },
    "8706": {
      "op": "SWAP1"
    },
    "8707": {
      "op": "MSTORE"
    },
    "8708": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8710": {
      "op": "SWAP1"
    },
    "8711": {
      "op": "PUSH2",
      "value": "0x2212"
    },
    "8714": {
      "op": "SWAP1"
    },
    "8715": {
      "op": "DUP4"
    },
    "8716": {
      "op": "ADD"
    },
    "8717": {
      "op": "DUP5"
    },
    "8718": {
      "op": "PUSH2",
      "value": "0x1C23"
    },
    "8721": {
      "jump": "i",
      "op": "JUMP"
    },
    "8722": {
      "op": "JUMPDEST"
    },
    "8723": {
      "op": "SWAP7"
    },
    "8724": {
      "op": "SWAP6"
    },
    "8725": {
      "op": "POP"
    },
    "8726": {
      "op": "POP"
    },
    "8727": {
      "op": "POP"
    },
    "8728": {
      "op": "POP"
    },
    "8729": {
      "op": "POP"
    },
    "8730": {
      "op": "POP"
    },
    "8731": {
      "jump": "o",
      "op": "JUMP"
    },
    "8732": {
      "op": "JUMPDEST"
    },
    "8733": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8735": {
      "op": "DUP5"
    },
    "8736": {
      "op": "AND"
    },
    "8737": {
      "op": "DUP2"
    },
    "8738": {
      "op": "MSTORE"
    },
    "8739": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8741": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8743": {
      "op": "DUP3"
    },
    "8744": {
      "op": "ADD"
    },
    "8745": {
      "op": "MSTORE"
    },
    "8746": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8748": {
      "op": "PUSH2",
      "value": "0x2238"
    },
    "8751": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8753": {
      "op": "DUP4"
    },
    "8754": {
      "op": "ADD"
    },
    "8755": {
      "op": "DUP6"
    },
    "8756": {
      "op": "PUSH2",
      "value": "0x1C23"
    },
    "8759": {
      "jump": "i",
      "op": "JUMP"
    },
    "8760": {
      "op": "JUMPDEST"
    },
    "8761": {
      "op": "SWAP1"
    },
    "8762": {
      "op": "POP"
    },
    "8763": {
      "op": "DUP3"
    },
    "8764": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8766": {
      "op": "DUP4"
    },
    "8767": {
      "op": "ADD"
    },
    "8768": {
      "op": "MSTORE"
    },
    "8769": {
      "op": "SWAP5"
    },
    "8770": {
      "op": "SWAP4"
    },
    "8771": {
      "op": "POP"
    },
    "8772": {
      "op": "POP"
    },
    "8773": {
      "op": "POP"
    },
    "8774": {
      "op": "POP"
    },
    "8775": {
      "jump": "o",
      "op": "JUMP"
    },
    "8776": {
      "op": "JUMPDEST"
    },
    "8777": {
      "op": "DUP4"
    },
    "8778": {
      "op": "ISZERO"
    },
    "8779": {
      "op": "ISZERO"
    },
    "8780": {
      "op": "DUP2"
    },
    "8781": {
      "op": "MSTORE"
    },
    "8782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8784": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8786": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8788": {
      "op": "SHL"
    },
    "8789": {
      "op": "SUB"
    },
    "8790": {
      "op": "DUP4"
    },
    "8791": {
      "op": "AND"
    },
    "8792": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8794": {
      "op": "DUP3"
    },
    "8795": {
      "op": "ADD"
    },
    "8796": {
      "op": "MSTORE"
    },
    "8797": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8799": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8801": {
      "op": "DUP3"
    },
    "8802": {
      "op": "ADD"
    },
    "8803": {
      "op": "DUP2"
    },
    "8804": {
      "op": "SWAP1"
    },
    "8805": {
      "op": "MSTORE"
    },
    "8806": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8808": {
      "op": "SWAP1"
    },
    "8809": {
      "op": "PUSH2",
      "value": "0x1F10"
    },
    "8812": {
      "op": "SWAP1"
    },
    "8813": {
      "op": "DUP4"
    },
    "8814": {
      "op": "ADD"
    },
    "8815": {
      "op": "DUP5"
    },
    "8816": {
      "op": "PUSH2",
      "value": "0x1C23"
    },
    "8819": {
      "jump": "i",
      "op": "JUMP"
    },
    "8820": {
      "op": "JUMPDEST"
    },
    "8821": {
      "op": "DUP4"
    },
    "8822": {
      "op": "DUP2"
    },
    "8823": {
      "op": "MSTORE"
    },
    "8824": {
      "op": "DUP3"
    },
    "8825": {
      "op": "ISZERO"
    },
    "8826": {
      "op": "ISZERO"
    },
    "8827": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8829": {
      "op": "DUP3"
    },
    "8830": {
      "op": "ADD"
    },
    "8831": {
      "op": "MSTORE"
    },
    "8832": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8834": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8836": {
      "op": "DUP3"
    },
    "8837": {
      "op": "ADD"
    },
    "8838": {
      "op": "MSTORE"
    },
    "8839": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8841": {
      "op": "PUSH2",
      "value": "0x1F10"
    },
    "8844": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8846": {
      "op": "DUP4"
    },
    "8847": {
      "op": "ADD"
    },
    "8848": {
      "op": "DUP5"
    },
    "8849": {
      "op": "PUSH2",
      "value": "0x1C23"
    },
    "8852": {
      "jump": "i",
      "op": "JUMP"
    },
    "8853": {
      "op": "JUMPDEST"
    },
    "8854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8858": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8860": {
      "op": "SHL"
    },
    "8861": {
      "op": "SUB"
    },
    "8862": {
      "op": "DUP5"
    },
    "8863": {
      "op": "AND"
    },
    "8864": {
      "op": "DUP2"
    },
    "8865": {
      "op": "MSTORE"
    },
    "8866": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8868": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8870": {
      "op": "DUP3"
    },
    "8871": {
      "op": "ADD"
    },
    "8872": {
      "op": "DUP2"
    },
    "8873": {
      "op": "SWAP1"
    },
    "8874": {
      "op": "MSTORE"
    },
    "8875": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8877": {
      "op": "SWAP1"
    },
    "8878": {
      "op": "PUSH2",
      "value": "0x2238"
    },
    "8881": {
      "op": "SWAP1"
    },
    "8882": {
      "op": "DUP4"
    },
    "8883": {
      "op": "ADD"
    },
    "8884": {
      "op": "DUP6"
    },
    "8885": {
      "op": "PUSH2",
      "value": "0x1C23"
    },
    "8888": {
      "jump": "i",
      "op": "JUMP"
    },
    "8889": {
      "op": "JUMPDEST"
    },
    "8890": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8894": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8896": {
      "op": "SHL"
    },
    "8897": {
      "op": "SUB"
    },
    "8898": {
      "op": "DUP7"
    },
    "8899": {
      "op": "DUP2"
    },
    "8900": {
      "op": "AND"
    },
    "8901": {
      "op": "DUP3"
    },
    "8902": {
      "op": "MSTORE"
    },
    "8903": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8905": {
      "op": "DUP3"
    },
    "8906": {
      "op": "ADD"
    },
    "8907": {
      "op": "DUP7"
    },
    "8908": {
      "op": "SWAP1"
    },
    "8909": {
      "op": "MSTORE"
    },
    "8910": {
      "op": "DUP5"
    },
    "8911": {
      "op": "AND"
    },
    "8912": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8914": {
      "op": "DUP3"
    },
    "8915": {
      "op": "ADD"
    },
    "8916": {
      "op": "MSTORE"
    },
    "8917": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8919": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8921": {
      "op": "DUP3"
    },
    "8922": {
      "op": "ADD"
    },
    "8923": {
      "op": "DUP2"
    },
    "8924": {
      "op": "SWAP1"
    },
    "8925": {
      "op": "MSTORE"
    },
    "8926": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8928": {
      "op": "SWAP1"
    },
    "8929": {
      "op": "PUSH2",
      "value": "0x212A"
    },
    "8932": {
      "op": "SWAP1"
    },
    "8933": {
      "op": "DUP4"
    },
    "8934": {
      "op": "ADD"
    },
    "8935": {
      "op": "DUP6"
    },
    "8936": {
      "op": "PUSH2",
      "value": "0x1C23"
    },
    "8939": {
      "jump": "i",
      "op": "JUMP"
    },
    "8940": {
      "op": "JUMPDEST"
    },
    "8941": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8943": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8945": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8947": {
      "op": "SHL"
    },
    "8948": {
      "op": "SUB"
    },
    "8949": {
      "op": "DUP7"
    },
    "8950": {
      "op": "AND"
    },
    "8951": {
      "op": "DUP2"
    },
    "8952": {
      "op": "MSTORE"
    },
    "8953": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8955": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8957": {
      "op": "DUP3"
    },
    "8958": {
      "op": "ADD"
    },
    "8959": {
      "op": "DUP2"
    },
    "8960": {
      "op": "SWAP1"
    },
    "8961": {
      "op": "MSTORE"
    },
    "8962": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8964": {
      "op": "SWAP1"
    },
    "8965": {
      "op": "PUSH2",
      "value": "0x2310"
    },
    "8968": {
      "op": "SWAP1"
    },
    "8969": {
      "op": "DUP4"
    },
    "8970": {
      "op": "ADD"
    },
    "8971": {
      "op": "DUP8"
    },
    "8972": {
      "op": "PUSH2",
      "value": "0x1C23"
    },
    "8975": {
      "jump": "i",
      "op": "JUMP"
    },
    "8976": {
      "op": "JUMPDEST"
    },
    "8977": {
      "op": "DUP3"
    },
    "8978": {
      "op": "DUP2"
    },
    "8979": {
      "op": "SUB"
    },
    "8980": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8982": {
      "op": "DUP5"
    },
    "8983": {
      "op": "ADD"
    },
    "8984": {
      "op": "MSTORE"
    },
    "8985": {
      "op": "PUSH2",
      "value": "0x2322"
    },
    "8988": {
      "op": "DUP2"
    },
    "8989": {
      "op": "DUP8"
    },
    "8990": {
      "op": "PUSH2",
      "value": "0x1C23"
    },
    "8993": {
      "jump": "i",
      "op": "JUMP"
    },
    "8994": {
      "op": "JUMPDEST"
    },
    "8995": {
      "op": "SWAP5"
    },
    "8996": {
      "op": "ISZERO"
    },
    "8997": {
      "op": "ISZERO"
    },
    "8998": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9000": {
      "op": "DUP5"
    },
    "9001": {
      "op": "ADD"
    },
    "9002": {
      "op": "MSTORE"
    },
    "9003": {
      "op": "POP"
    },
    "9004": {
      "op": "POP"
    },
    "9005": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9007": {
      "op": "ADD"
    },
    "9008": {
      "op": "MSTORE"
    },
    "9009": {
      "op": "SWAP4"
    },
    "9010": {
      "op": "SWAP3"
    },
    "9011": {
      "op": "POP"
    },
    "9012": {
      "op": "POP"
    },
    "9013": {
      "op": "POP"
    },
    "9014": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "1f8bd44aba111cd474b703eb8d268d254c097a51",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.11;\n\nimport \"./CLStorage.sol\";\n\n/// @title Contract to implement and test the basic fuctions of CLHouses\n/// @author Leonardo Urrego\n/// @notice This contract for test only the most basic interactions\ncontract CLHouse is CLStorage {\n\n    /// @notice Create a new CLH\n    /// @dev Some parameters can be ignored depending on the governance model\n    /// @param _owner The address of the deployed wallet\n    /// @param _houseName Name given by the owner\n    /// @param _housePrivate If is set to 1, the CLH is set to private\n    /// @param _gov keccak256 hash of the governance model, see the __GOV_* constans\n    /// @param _govRuleMaxManagerMembers Max of manager member that CLH can accept (only for COMMITTEE )\n    /// @param _govRuleMaxActiveMembers Max of all members (including managers)\n    /// @param _govRuleApprovPercentage Percentage for approval o reject proposal based on `numManagerMembers`\n    /// @param _ManagerWallets Whitelist of address for invitate as managers\n    constructor(\n        address _owner, \n        string memory _houseName,\n        bool _housePrivate,\n        bytes32 _gov,\n        uint8 _govRuleMaxManagerMembers,\n        uint8 _govRuleMaxActiveMembers,\n        uint8 _govRuleApprovPercentage,\n        address _CLCMemberManagement,\n        address _CLCGovernance,\n        address _CLLConstructor,\n        address[] memory _ManagerWallets\n    )\n    {\n\n        \n        (bool successDGTCLL, bytes memory dataDLGTCLL) = _CLLConstructor.delegatecall(\n            abi.encodeWithSignature(\n                \"CLLCLHConstructor(address,string,bool,bytes32,uint8,uint8,uint8,address,address,address[])\",\n                _owner, \n                _houseName,\n                _housePrivate,\n                _gov,\n                _govRuleMaxManagerMembers,\n                _govRuleMaxActiveMembers,\n                _govRuleApprovPercentage,\n                _CLCMemberManagement,\n                _CLCGovernance,\n                _ManagerWallets\n            )\n        );\n\n        if( !successDGTCLL ) {\n            assembly {\n                let ptr := mload(0x40)\n                let size := returndatasize()\n                returndatacopy(ptr, 0, size)\n                revert(ptr, size)\n            }\n        }\n    }\n\n    /// @notice Execute (or reject) a proposal computing the votes and the governance model\n    /// @dev Normally is called internally after each vote\n    /// @param _propId ID of the proposal, based on `arrProposals`\n    /// @return status True if the proposal can be execute, false in other cases\n    /// @return message result of the transaction\n    function ExecProp(\n        uint256 _propId\n    )\n        public\n        returns(\n            bool status,\n            string memory message\n        )\n    {\n        (bool successDGTCLL, bytes memory dataDLGTCLL) = CLCGovernance.delegatecall(\n            abi.encodeWithSignature(\n                \"_ExecProp(uint256)\",\n                _propId\n            )\n        );\n\n        if( !successDGTCLL ) {\n            assembly {\n                let ptr := mload(0x40)\n                let size := returndatasize()\n                returndatacopy(ptr, 0, size)\n                revert(ptr, size)\n            }\n        }\n\n        return ( true , \"Success executed proposal\" );\n    }\n\n    /// @notice Used to vote a proposal\n    /// @dev After vote the proposal automatically try to be executed\n    /// @param _propId ID of the proposal, based on `arrProposals`\n    /// @param _support True for accept, false to reject\n    /// @param _justification About your vote\n    /// @return true is the vote can be stored\n    function VoteProposal(\n        uint256 _propId,\n        bool _support,\n        string memory _justification\n    )\n        public\n        returns( bool )\n    {\n        (bool successDGTCLL, bytes memory dataDLGTCLL) = CLCGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"_VoteProposal(uint256,bool,string)\", \n                _propId,\n                _support,\n                _justification\n            )\n        );\n\n        if( !successDGTCLL ) {\n            assembly {\n                let ptr := mload(0x40)\n                let size := returndatasize()\n                returndatacopy(ptr, 0, size)\n                revert(ptr, size)\n            }\n        }\n\n        return true;\n    }\n\n    function VotePropOffChain(\n        address _voter,\n        uint256 _propId,\n        bool _support,\n        string memory _justification,\n        bytes32 signR,\n        bytes32 signS,\n        uint8 signV\n\n    )\n        external\n        returns( bool )\n    {\n        uint256 chainId = block.chainid;\n\n        bytes32 eip712DomainHash = keccak256(\n            abi.encode(\n                keccak256(abi.encodePacked(\n                    \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"\n                )),\n                keccak256(\"CLHouse\"),\n                keccak256(\"0.0.10\"),\n                chainId,\n                address(this)\n            )\n        );\n\n        bytes32 hashStruct = keccak256(\n            abi.encode(\n                keccak256(abi.encodePacked(\n                    \"strOffChainVote(address voter,uint256 propId,bool support,string justification)\"\n                )),\n                _voter,\n                _propId,\n                _support,\n                keccak256(abi.encodePacked(_justification))\n            )\n        );\n        \n        bytes32 singhash = keccak256(abi.encodePacked(\"\\x19\\x01\", eip712DomainHash, hashStruct));\n            \n        // require( _signature.length == 65, \"VotePropOffChain: Bad signature length\");\n\n        // bytes32 signR;\n        // bytes32 signS;\n        // uint8 signV;\n\n        // assembly {\n        //     // first 32 bytes, after the length prefix\n        //     signR := mload(add(_signature, 32))\n        //     // second 32 bytes\n        //     signS := mload(add(_signature, 64))\n        //     // final byte (first byte of the next 32 bytes)\n        //     signV := byte(0, mload(add(_signature, 96)))\n        // }\n\n        address signer = ecrecover( singhash, signV, signR, signS );\n\n        require( signer != address(0), \"ECDSA: invalid signature\" );\n        require( signer == _voter, \"VotePropOffChain: invalid signature\" );\n        require( _propId < arrProposals.length , \"Proposal does not exist\" );\n        require( false == arrProposals[ _propId ].executed , \"Proposal already executed\" );\n        require( false == arrProposals[ _propId ].rejected , \"Proposal was rejected\" );\n        require( !mapVotes[ _propId ][ _voter ].voted , \"User have a vote registred for this proposal\" );\n        require( block.timestamp < arrProposals[ _propId ].deadline , \"Proposal deadline\" );\n\n        mapVotes[ _propId ][ _voter ].inSupport = _support;\n        mapVotes[ _propId ][ _voter ].justification = _justification;\n        mapVotes[ _propId ][ _voter ].voted = true;\n\n        arrProposals[ _propId ].numVotes++;\n\n        if( !_support )\n            arrProposals[ _propId ].againstVotes++;\n\n        emit evtVoted( _propId,  _support, _voter, _justification );\n\n        // auto exec\n        ExecProp( _propId );\n\n        return true;\n    }\n\n    /// @notice Generate a new proposal to invite a new member\n    /// @dev the execution of this proposal only create an invitation \n    /// @param _walletAddr  Address of the new user\n    /// @param _name Can be the nickname or other reference to the User\n    /// @param _description A text for the proposal\n    /// @param _isManager True if is for a manager member\n    /// @return propId ID of the new proposal, based on `arrProposals`\n    function PropInviteMember(\n        address _walletAddr,\n        string memory _name,\n        string memory _description,\n        bool _isManager,\n        uint256 _delayTime\n    )\n        external\n        returns( uint256 propId )\n    {\n        (bool successDGTCLL, bytes memory dataDLGTCLL) = CLCGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropInviteMember(address,string,string,bool,uint256)\", \n                _walletAddr,\n                _name,\n                _description,\n                _isManager,\n                _delayTime\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            propId := mload(ptr)\n        }\n    }\n\n    /// @notice Generate a new proposal for remove a member\n    /// @dev The member can be a managaer\n    /// @param _walletAddr member Address to be removed\n    /// @param _description About the proposal\n    /// @return propId ID of the new proposal, based on `arrProposals`\n    function PropRemoveMember(\n        address _walletAddr,\n        string memory _description,\n        uint256 _delayTime\n    )\n        external\n        returns( uint256 propId )\n    {\n        (bool successDGTCLL, bytes memory dataDLGTCLL) = CLCGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropRemoveMember(address,string,uint256)\", \n                _walletAddr,\n                _description,\n                _delayTime\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            propId := mload(ptr)\n        }\n    }\n\n    /// @notice generate a new proposal to transfer ETH in weis\n    /// @dev When execute this proposal, the transfer is made\n    /// @param _to Recipient address\n    /// @param _amountOutCLV Amount to transfer (in wei)\n    /// @param _description About this proposal\n    /// @return propId ID of the new proposal, based on `arrProposals`\n    function PropTxWei(\n        address _to,\n        uint256 _amountOutCLV,\n        string memory _description,\n        uint256 _delayTime\n    )\n        external\n        returns( uint256 propId )\n    {\n        (bool successDGTCLL, bytes memory dataDLGTCLL) = CLCGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropTxWei(address,uint256,string,uint256)\", \n                _to,\n                _amountOutCLV,\n                _description,\n                _delayTime\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            propId := mload(ptr)\n        }\n    }\n\n    /// @notice generate a new proposal to transfer ETH in weis\n    /// @dev When execute this proposal, the transfer is made\n    /// @param _to Recipient address\n    /// @param _amountOutCLV Amount to transfer (in wei)\n    /// @param _description About this proposal\n    /// @return propId ID of the new proposal, based on `arrProposals`\n    function PropTxERC20(\n        address _to,\n        uint256 _amountOutCLV,\n        address _tokenOutCLV,\n        string memory _description,\n        uint256 _delayTime\n    )\n        external\n        returns( uint256 propId )\n    {\n        (bool successDGTCLL, bytes memory dataDLGTCLL) = CLCGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropTxERC20(address,uint256,address,string,uint256)\", \n                _to,\n                _amountOutCLV,\n                _tokenOutCLV,\n                _description,\n                _delayTime\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            propId := mload(ptr)\n        }\n    }\n\n    /// @notice Generate a new proposal for change some governance parameters\n    /// @dev When execute this proposal the new values will be set\n    /// @param _newApprovPercentage The new percentaje for accept or reject a proposal\n    /// @param _description About the new proposal \n    /// @return propId ID of the new proposal, based on `arrProposals`\n    function PropGovRules(\n        uint8 _newApprovPercentage,\n        string memory _description,\n        uint256 _delayTime\n    )\n        external\n        returns( uint256 propId )\n    {\n        (bool successDGTCLL, bytes memory dataDLGTCLL) = CLCGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropGovRules(uint8,string,uint256)\", \n                _newApprovPercentage,\n                _description,\n                _delayTime\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            propId := mload(ptr)\n        }\n    }\n\n    /// @notice Generate a proposal from a user that want to join to the CLH\n    /// @dev Only avaiable in public CLH\n    /// @param _name Nickname or other user identification\n    /// @param _description About the request\n    /// @return propId ID of the new proposal, based on `arrProposals`\n    function PropRequestToJoin(\n        string memory _name,\n        string memory _description\n    )\n        external\n        returns( uint256 )\n    {\n        (bool successDGTCLL, bytes memory dataDLGTCLL) = CLCGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropRequestToJoin(string,string)\", \n                _name,\n                _description\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            return(ptr, size)\n        }\n    }\n\n    /// @notice For an user that have an invitation pending\n    /// @dev \n    /// @param _acceptance True for accept the invitation\n    function AcceptRejectInvitation(\n        bool _acceptance,\n        address _signerWallet,\n        bytes memory _signature\n    )\n        external\n    {\n        (bool successDGTCLL, bytes memory dataDLGTCLL) = CLCMemberManagement.delegatecall(\n            abi.encodeWithSignature(\n                \"AcceptRejectInvitation(bool,address,bytes)\",\n                _acceptance,\n                _signerWallet,\n                _signature\n            )\n        );\n\n        if( !successDGTCLL ) {\n            assembly {\n                let ptr := mload(0x40)\n                let size := returndatasize()\n                returndatacopy(ptr, 0, size)\n                revert(ptr, size)\n            }\n        }\n    }\n\n    function PropSwapERC20(\n        address _tokenOutCLV,\n        address _tokenInCLV,\n        uint256 _amountOutCLV,\n        string memory _description,\n        uint256 _delayTime\n    )\n        external\n        returns( uint256 propId )\n    {\n        (bool successDGTCLL, bytes memory dataDLGTCLL) = CLCGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropSwapERC20(address,address,uint256,string,uint256)\", \n                 _tokenOutCLV,\n                 _tokenInCLV,\n                 _amountOutCLV,\n                 _description,\n                 _delayTime\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            return(ptr, size)\n        }\n    }\n\n    function PropSellERC20(\n        address _tokenOutCLV,\n        uint256 _amountOutCLV,\n        string memory _description,\n        uint256 _delayTime\n    )\n        external\n        returns( uint256 propId )\n    {\n        (bool successDGTCLL, bytes memory dataDLGTCLL) = CLCGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropSellERC20(address,uint256,string,uint256)\", \n                 _tokenOutCLV,\n                 _amountOutCLV,\n                 _description,\n                 _delayTime\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            return(ptr, size)\n        }\n    }\n\n    function PropBuyERC20(\n        address _tokenInCLV,\n        uint256 _amountOutCLV,\n        string memory _description,\n        uint256 _delayTime\n    )\n        external\n        returns( uint256 propId )\n    {\n        (bool successDGTCLL, bytes memory dataDLGTCLL) = CLCGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropBuyERC20(address,uint256,string,uint256)\", \n                 _tokenInCLV,\n                 _amountOutCLV,\n                 _description,\n                 _delayTime\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            return(ptr, size)\n        }\n    }\n\n    function GetArrMembersLength() external view returns( uint256 ){\n        return arrMembers.length;\n    }\n}",
  "sourceMap": "254:17222:18:-:0;;;1038:1250;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1456:18;1476:24;1504:15;-1:-1:-1;;;;;1504:28:18;1697:6;1722:10;1750:13;1781:4;1803:25;1846:24;1888;1930:20;1968:14;2000:15;1546:483;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1546:483:18;;;;;;;;;;;;;;-1:-1:-1;;;;;1546:483:18;-1:-1:-1;;;1546:483:18;;;1504:535;;;1546:483;1504:535;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1455:584;;;;2055:13;2050:232;;2129:4;2123:11;2163:16;2219:4;2216:1;2211:3;2196:28;2253:4;2248:3;2241:17;2050:232;1435:853;;1038:1250;;;;;;;;;;;254:17222;;14:177:23;93:13;;-1:-1:-1;;;;;135:31:23;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:275;399:2;393:9;464:2;445:13;;-1:-1:-1;;441:27:23;429:40;;-1:-1:-1;;;;;484:34:23;;520:22;;;481:62;478:88;;;546:18;;:::i;:::-;582:2;575:22;328:275;;-1:-1:-1;328:275:23:o;608:258::-;680:1;690:113;704:6;701:1;698:13;690:113;;;780:11;;;774:18;761:11;;;754:39;726:2;719:10;690:113;;;821:6;818:1;815:13;812:48;;;856:1;847:6;842:3;838:16;831:27;812:48;;608:258;;;:::o;871:497::-;925:5;978:3;971:4;963:6;959:17;955:27;945:55;;996:1;993;986:12;945:55;1019:13;;-1:-1:-1;;;;;1044:26:23;;1041:52;;;1073:18;;:::i;:::-;1117:55;1160:2;1141:13;;-1:-1:-1;;1137:27:23;1166:4;1133:38;1117:55;:::i;:::-;1197:2;1188:7;1181:19;1243:3;1236:4;1231:2;1223:6;1219:15;1215:26;1212:35;1209:55;;;1260:1;1257;1250:12;1209:55;1273:64;1334:2;1327:4;1318:7;1314:18;1307:4;1299:6;1295:17;1273:64;:::i;:::-;1355:7;871:497;-1:-1:-1;;;;871:497:23:o;1373:164::-;1449:13;;1498;;1491:21;1481:32;;1471:60;;1527:1;1524;1517:12;1542:160;1619:13;;1672:4;1661:16;;1651:27;;1641:55;;1692:1;1689;1682:12;1707:733;1772:5;1825:3;1818:4;1810:6;1806:17;1802:27;1792:55;;1843:1;1840;1833:12;1792:55;1866:13;;1898:4;-1:-1:-1;;;;;1914:26:23;;1911:52;;;1943:18;;:::i;:::-;1989:2;1986:1;1982:10;2012:28;2036:2;2032;2028:11;2012:28;:::i;:::-;2074:15;;;2144;;;2140:24;;;2105:12;;;;2176:15;;;2173:35;;;2204:1;2201;2194:12;2173:35;2240:2;2232:6;2228:15;2217:26;;2252:159;2268:6;2263:3;2260:15;2252:159;;;2334:34;2364:3;2334:34;:::i;:::-;2322:47;;2285:12;;;;2389;;;;2252:159;;;2429:5;1707:733;-1:-1:-1;;;;;;;1707:733:23:o;2445:1316::-;2631:6;2639;2647;2655;2663;2671;2679;2687;2695;2703;2711:7;2765:3;2753:9;2744:7;2740:23;2736:33;2733:53;;;2782:1;2779;2772:12;2733:53;2805:40;2835:9;2805:40;:::i;:::-;2889:2;2874:18;;2868:25;2795:50;;-1:-1:-1;;;;;;2905:30:23;;2902:50;;;2948:1;2945;2938:12;2902:50;2971:61;3024:7;3015:6;3004:9;3000:22;2971:61;:::i;:::-;2961:71;;;3051:46;3093:2;3082:9;3078:18;3051:46;:::i;:::-;3041:56;;3137:2;3126:9;3122:18;3116:25;3106:35;;3160:48;3203:3;3192:9;3188:19;3160:48;:::i;:::-;3150:58;;3227:48;3270:3;3259:9;3255:19;3227:48;:::i;:::-;3217:58;;3294:48;3337:3;3326:9;3322:19;3294:48;:::i;:::-;3284:58;;3361:50;3406:3;3395:9;3391:19;3361:50;:::i;:::-;3351:60;;3430:50;3475:3;3464:9;3460:19;3430:50;:::i;:::-;3420:60;;3499:50;3544:3;3533:9;3529:19;3499:50;:::i;:::-;3595:3;3580:19;;3574:26;3489:60;;-1:-1:-1;;;;;;3612:32:23;;3609:52;;;3657:1;3654;3647:12;3609:52;3681:74;3747:7;3736:8;3725:9;3721:24;3681:74;:::i;:::-;3670:85;;;2445:1316;;;;;;;;;;;;;;:::o;4051:461::-;4104:3;4142:5;4136:12;4169:6;4164:3;4157:19;4195:4;4224:2;4219:3;4215:12;4208:19;;4261:2;4254:5;4250:14;4282:1;4292:195;4306:6;4303:1;4300:13;4292:195;;;4371:13;;-1:-1:-1;;;;;4367:39:23;4355:52;;4427:12;;;;4462:15;;;;4403:1;4321:9;4292:195;;;-1:-1:-1;4503:3:23;;4051:461;-1:-1:-1;;;;;4051:461:23:o;4517:1234::-;4979:1;4975;4970:3;4966:11;4962:19;4954:6;4950:32;4939:9;4932:51;5019:3;5014:2;5003:9;4999:18;4992:31;4913:4;5052:6;5046:13;5096:6;5090:3;5079:9;5075:19;5068:35;5112:67;5172:6;5166:3;5155:9;5151:19;5146:2;5138:6;5134:15;5112:67;:::i;:::-;5238:2;5217:15;-1:-1:-1;;5213:29:23;5198:45;;5252:43;5291:2;5276:18;;5268:6;3945:13;3938:21;3926:34;;3875:91;5252:43;5331:6;5326:2;5315:9;5311:18;5304:34;5347:45;5387:3;5376:9;5372:19;5364:6;4038:4;4027:16;4015:29;;3971:75;5347:45;4038:4;4027:16;;5441:3;5426:19;;4015:29;4038:4;4027:16;;5495:3;5480:19;;4015:29;-1:-1:-1;;;;;3832:31:23;;5551:3;5536:19;;3820:44;-1:-1:-1;;;;;3832:31:23;;5607:3;5592:19;;3820:44;5673:3;5661:9;5657:2;5653:18;5649:28;5643:3;5632:9;5628:19;5621:57;5695:50;5740:3;5736:2;5732:12;5724:6;5695:50;:::i;:::-;5687:58;4517:1234;-1:-1:-1;;;;;;;;;;;;;4517:1234:23:o;5756:274::-;5885:3;5923:6;5917:13;5939:53;5985:6;5980:3;5973:4;5965:6;5961:17;5939:53;:::i;:::-;6008:16;;;;;5756:274;-1:-1:-1;;5756:274:23:o;:::-;254:17222:18;;;;;;",
  "sourcePath": "contracts/CLHouse/CLHouse.sol",
  "type": "contract"
}